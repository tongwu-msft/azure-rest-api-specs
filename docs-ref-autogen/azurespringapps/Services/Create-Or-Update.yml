### YamlMime:RESTOperation
uid: management.azure.com.azurespringapps.services.createorupdate
name: Create Or Update
service: Azure Spring Apps
groupName: Services
apiVersion: 2022-09-01-preview
summary: Create a new Service or update an exiting Service.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}?api-version=2022-09-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: serviceName
  in: path
  isRequired: true
  description: The name of the Service resource.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Success. The response describes the updated Service.
  types:
  - uid: ServiceResource
- name: 201 Created
  description: Created. The response describes the new Service and contains an Azure-AsyncOperation header to query the operation result.
  types:
  - uid: ServiceResource
- name: 202 Accepted
  description: >-
    Accepted. The response indicates the exiting Service is now updating and contains a Location

    header to query the operation result.
  types:
  - uid: ServiceResource
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: properties
    in: body
    description: Properties of the Service resource
    types:
    - uid: ClusterResourceProperties
  - name: sku
    in: body
    description: Sku of the Service resource
    types:
    - uid: Sku
  - name: location
    in: body
    description: The GEO location of the resource.
    types:
    - uid: string
  - name: tags
    in: body
    description: Tags of the service which is a list of key value pairs that describe the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: ClusterResourceProperties
  description: Service properties payload
  kind: object
  properties:
  - name: provisioningState
    isReadyOnly: true
    description: Provisioning state of the Service
    types:
    - uid: ProvisioningState
  - name: networkProfile
    description: Network profile of the Service
    types:
    - uid: NetworkProfile
  - name: vnetAddons
    description: Additional Service settings in vnet injection instance
    types:
    - uid: ServiceVNetAddons
  - name: version
    isReadyOnly: true
    description: Version of the Service
    types:
    - uid: integer
  - name: serviceId
    isReadyOnly: true
    description: ServiceInstanceEntity GUID which uniquely identifies a created resource
    types:
    - uid: string
  - name: powerState
    isReadyOnly: true
    description: Power state of the Service
    types:
    - uid: PowerState
  - name: zoneRedundant
    description: ''
    types:
    - uid: boolean
    defaultValue: false
  - name: fqdn
    isReadyOnly: true
    description: Fully qualified dns name of the service instance
    types:
    - uid: string
  - name: marketplaceResource
    description: Purchasing 3rd party product of the Service resource.
    types:
    - uid: MarketplaceResource
- name: Sku
  description: Sku of Azure Spring Apps
  kind: object
  properties:
  - name: name
    description: Name of the Sku
    types:
    - uid: string
    defaultValue: S0
  - name: tier
    description: Tier of the Sku
    types:
    - uid: string
    defaultValue: Standard
  - name: capacity
    description: Current capacity of the target resource
    types:
    - uid: integer
- name: SystemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: lastModifiedByType
  - name: lastModifiedAt
    description: The timestamp of resource modification (UTC).
    types:
    - uid: string
- name: ServiceResource
  description: Service resource
  kind: object
  properties:
  - name: properties
    description: Properties of the Service resource
    types:
    - uid: ClusterResourceProperties
  - name: sku
    description: Sku of the Service resource
    types:
    - uid: Sku
  - name: location
    description: The GEO location of the resource.
    types:
    - uid: string
  - name: tags
    description: Tags of the service which is a list of key value pairs that describe the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource Id for the resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
  - name: systemData
    isReadyOnly: true
    description: Metadata pertaining to creation and last modification of the resource.
    types:
    - uid: SystemData
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: An error response from the service.
    types:
    - uid: CloudErrorBody
- name: ProvisioningState
  description: Provisioning state of the Service
  kind: enum
  properties:
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Starting
    types:
    - uid: string
  - name: Stopping
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Deleted
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Moving
    types:
    - uid: string
  - name: Moved
    types:
    - uid: string
  - name: MoveFailed
    types:
    - uid: string
- name: NetworkProfile
  description: Service network profile payload
  kind: object
  properties:
  - name: serviceRuntimeSubnetId
    description: Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime
    types:
    - uid: string
  - name: appSubnetId
    description: Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps
    types:
    - uid: string
  - name: serviceCidr
    description: Azure Spring Apps service reserved CIDR
    types:
    - uid: string
  - name: serviceRuntimeNetworkResourceGroup
    description: Name of the resource group containing network resources of Azure Spring Apps Service Runtime
    types:
    - uid: string
  - name: appNetworkResourceGroup
    description: Name of the resource group containing network resources for customer apps in Azure Spring Apps
    types:
    - uid: string
  - name: outboundIPs
    isReadyOnly: true
    description: Desired outbound IP resources for Azure Spring Apps resource.
    types:
    - uid: OutboundIPs
  - name: requiredTraffics
    isReadyOnly: true
    description: Required inbound or outbound traffics for Azure Spring Apps resource.
    types:
    - uid: RequiredTraffic
      isArray: true
  - name: ingressConfig
    description: Ingress configuration payload for Azure Spring Apps resource.
    types:
    - uid: IngressConfig
  - name: outboundType
    description: The egress traffic type of Azure Spring Apps VNet instances.
    types:
    - uid: string
- name: ServiceVNetAddons
  description: Additional Service settings in vnet injection instance
  kind: object
  properties:
  - name: logStreamPublicEndpoint
    description: Indicates whether the log stream in vnet injection instance could be accessed from internet.
    types:
    - uid: boolean
    defaultValue: false
- name: PowerState
  description: Power state of the Service
  kind: enum
  properties:
  - name: Running
    types:
    - uid: string
  - name: Stopped
    types:
    - uid: string
- name: MarketplaceResource
  description: Purchasing 3rd Party product for one Azure Spring Apps instance
  kind: object
  properties:
  - name: plan
    description: The plan id of the 3rd Party Artifact that is being procured.
    types:
    - uid: string
  - name: publisher
    description: The publisher id of the 3rd Party Artifact that is being bought.
    types:
    - uid: string
  - name: product
    description: The 3rd Party artifact that is being procured.
    types:
    - uid: string
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: lastModifiedByType
  description: The type of identity that last modified the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: OutboundIPs
  description: Desired outbound IP resources for Azure Spring Apps resource.
  kind: object
  properties:
  - name: publicIPs
    isReadyOnly: true
    description: A list of public IP addresses.
    types:
    - uid: string
      isArray: true
- name: RequiredTraffic
  description: Required inbound or outbound traffic for Azure Spring Apps resource.
  kind: object
  properties:
  - name: protocol
    isReadyOnly: true
    description: The protocol of required traffic
    types:
    - uid: string
  - name: port
    isReadyOnly: true
    description: The port of required traffic
    types:
    - uid: integer
  - name: ips
    isReadyOnly: true
    description: The ip list of required traffic
    types:
    - uid: string
      isArray: true
  - name: fqdns
    isReadyOnly: true
    description: The FQDN list of required traffic
    types:
    - uid: string
      isArray: true
  - name: direction
    isReadyOnly: true
    description: The direction of required traffic
    types:
    - uid: trafficDirection
- name: IngressConfig
  description: Ingress configuration payload for Azure Spring Apps resource.
  kind: object
  properties:
  - name: readTimeoutInSeconds
    description: Ingress read time out in seconds.
    types:
    - uid: integer
- name: trafficDirection
  description: The direction of required traffic
  kind: enum
  properties:
  - name: Inbound
    types:
    - uid: string
  - name: Outbound
    types:
    - uid: string
examples:
- name: Services_CreateOrUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice?api-version=2022-09-01-preview
    body: >-
      {
        "properties": {},
        "sku": {
          "name": "S0",
          "tier": "Standard"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice?api-version=2022-09-01-preview

      {
        "properties": {},
        "sku": {
          "name": "S0",
          "tier": "Standard"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        }
      }

      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AppPlatformManagementClient } = require("@azure/arm-appplatform");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create a new Service or update an exiting Service.
       *
       * @summary Create a new Service or update an exiting Service.
       * x-ms-original-file: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-09-01-preview/examples/Services_CreateOrUpdate.json
       */
      async function servicesCreateOrUpdate() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "myResourceGroup";
        const serviceName = "myservice";
        const resource = {
          location: "eastus",
          properties: {},
          sku: { name: "S0", tier: "Standard" },
          tags: { key1: "value1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new AppPlatformManagementClient(credential, subscriptionId);
        const result = await client.services.beginCreateOrUpdateAndWait(
          resourceGroupName,
          serviceName,
          resource
        );
        console.log(result);
      }

      servicesCreateOrUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-appplatform_2.1.0-beta.3/sdk/appplatform/arm-appplatform/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "provisioningState": "Creating",
          "serviceId": "12345678abcd1234abcd12345678abcd",
          "networkProfile": {
            "outboundIPs": {
              "publicIPs": [
                "20.39.3.173",
                "40.64.67.13"
              ]
            },
            "ingressConfig": {
              "readTimeoutInSeconds": 300
            },
            "requiredTraffics": [
              {
                "protocol": "TCP",
                "port": 443,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "UDP",
                "port": 1194,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "TCP",
                "port": 9000,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              }
            ]
          }
        },
        "systemData": {
          "createdBy": "sample-user",
          "createdByType": "User",
          "createdAt": "2021-08-11T03:16:03.944Z",
          "lastModifiedBy": "sample-user",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2021-08-11T03:17:03.944Z"
        },
        "type": "Microsoft.AppPlatform/Spring",
        "sku": {
          "name": "S0",
          "tier": "Standard"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        },
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
        "name": "myservice"
      }
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "provisioningState": "Succeeded",
          "serviceId": "12345678abcd1234abcd12345678abcd",
          "networkProfile": {
            "outboundIPs": {
              "publicIPs": [
                "20.39.3.173",
                "40.64.67.13"
              ]
            },
            "requiredTraffics": [
              {
                "protocol": "TCP",
                "port": 443,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "UDP",
                "port": 1194,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "TCP",
                "port": 9000,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              }
            ]
          }
        },
        "systemData": {
          "createdBy": "sample-user",
          "createdByType": "User",
          "createdAt": "2021-08-11T03:16:03.944Z",
          "lastModifiedBy": "sample-user",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2021-08-11T03:17:03.944Z"
        },
        "type": "Microsoft.AppPlatform/Spring",
        "sku": {
          "name": "S0",
          "tier": "Standard"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        },
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
        "name": "myservice"
      }
  - statusCode: "202"
    body: >-
      {
        "properties": {
          "provisioningState": "Updating",
          "serviceId": "12345678abcd1234abcd12345678abcd",
          "networkProfile": {
            "outboundIPs": {
              "publicIPs": [
                "20.39.3.173",
                "40.64.67.13"
              ]
            },
            "requiredTraffics": [
              {
                "protocol": "TCP",
                "port": 443,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "UDP",
                "port": 1194,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "TCP",
                "port": 9000,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              }
            ]
          }
        },
        "systemData": {
          "createdBy": "sample-user",
          "createdByType": "User",
          "createdAt": "2021-08-11T03:16:03.944Z",
          "lastModifiedBy": "sample-user",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2021-08-11T03:17:03.944Z"
        },
        "type": "Microsoft.AppPlatform/Spring",
        "sku": {
          "name": "S0",
          "tier": "Standard"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        },
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
        "name": "myservice"
      }
- name: Services_CreateOrUpdate_VNetInjection
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice?api-version=2022-09-01-preview
    body: >-
      {
        "properties": {
          "networkProfile": {
            "serviceRuntimeSubnetId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/serviceRuntime",
            "appSubnetId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/apps",
            "serviceCidr": "10.8.0.0/16,10.244.0.0/16,10.245.0.1/16",
            "serviceRuntimeNetworkResourceGroup": "my-service-runtime-network-rg",
            "appNetworkResourceGroup": "my-app-network-rg",
            "ingressConfig": {
              "readTimeoutInSeconds": 300
            }
          },
          "vnetAddons": {
            "logStreamPublicEndpoint": true
          }
        },
        "sku": {
          "name": "S0",
          "tier": "Standard"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice?api-version=2022-09-01-preview

      {
        "properties": {
          "networkProfile": {
            "serviceRuntimeSubnetId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/serviceRuntime",
            "appSubnetId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/apps",
            "serviceCidr": "10.8.0.0/16,10.244.0.0/16,10.245.0.1/16",
            "serviceRuntimeNetworkResourceGroup": "my-service-runtime-network-rg",
            "appNetworkResourceGroup": "my-app-network-rg",
            "ingressConfig": {
              "readTimeoutInSeconds": 300
            }
          },
          "vnetAddons": {
            "logStreamPublicEndpoint": true
          }
        },
        "sku": {
          "name": "S0",
          "tier": "Standard"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        }
      }

      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AppPlatformManagementClient } = require("@azure/arm-appplatform");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create a new Service or update an exiting Service.
       *
       * @summary Create a new Service or update an exiting Service.
       * x-ms-original-file: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-09-01-preview/examples/Services_CreateOrUpdate_VNetInjection.json
       */
      async function servicesCreateOrUpdateVNetInjection() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "myResourceGroup";
        const serviceName = "myservice";
        const resource = {
          location: "eastus",
          properties: {
            networkProfile: {
              appNetworkResourceGroup: "my-app-network-rg",
              appSubnetId:
                "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/apps",
              ingressConfig: { readTimeoutInSeconds: 300 },
              serviceCidr: "10.8.0.0/16,10.244.0.0/16,10.245.0.1/16",
              serviceRuntimeNetworkResourceGroup: "my-service-runtime-network-rg",
              serviceRuntimeSubnetId:
                "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/serviceRuntime",
            },
            vnetAddons: { logStreamPublicEndpoint: true },
          },
          sku: { name: "S0", tier: "Standard" },
          tags: { key1: "value1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new AppPlatformManagementClient(credential, subscriptionId);
        const result = await client.services.beginCreateOrUpdateAndWait(
          resourceGroupName,
          serviceName,
          resource
        );
        console.log(result);
      }

      servicesCreateOrUpdateVNetInjection().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-appplatform_2.1.0-beta.3/sdk/appplatform/arm-appplatform/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "provisioningState": "Creating",
          "networkProfile": {
            "serviceRuntimeSubnetId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/serviceRuntime",
            "appSubnetId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/apps",
            "serviceCidr": "10.8.0.0/16,10.244.0.0/16,10.245.0.1/16",
            "serviceRuntimeNetworkResourceGroup": "my-service-runtime-network-rg",
            "appNetworkResourceGroup": "my-app-network-rg",
            "outboundIPs": {
              "publicIPs": [
                "40.64.67.13"
              ]
            },
            "requiredTraffics": [
              {
                "protocol": "TCP",
                "port": 443,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "UDP",
                "port": 1194,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "TCP",
                "port": 9000,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              }
            ]
          },
          "vnetAddons": {
            "logStreamPublicEndpoint": true
          },
          "serviceId": "12345678abcd1234abcd12345678abcd"
        },
        "systemData": {
          "createdBy": "sample-user",
          "createdByType": "User",
          "createdAt": "2021-08-11T03:16:03.944Z",
          "lastModifiedBy": "sample-user",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2021-08-11T03:17:03.944Z"
        },
        "type": "Microsoft.AppPlatform/Spring",
        "sku": {
          "name": "S0",
          "tier": "Standard"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        },
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
        "name": "myservice"
      }
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "provisioningState": "Succeeded",
          "networkProfile": {
            "serviceRuntimeSubnetId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/serviceRuntime",
            "appSubnetId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/apps",
            "serviceCidr": "10.8.0.0/16,10.244.0.0/16,10.245.0.1/16",
            "serviceRuntimeNetworkResourceGroup": "my-service-runtime-network-rg",
            "appNetworkResourceGroup": "my-app-network-rg",
            "outboundIPs": {
              "publicIPs": [
                "40.64.67.13"
              ]
            },
            "requiredTraffics": [
              {
                "protocol": "TCP",
                "port": 443,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "UDP",
                "port": 1194,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "TCP",
                "port": 9000,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              }
            ]
          },
          "vnetAddons": {
            "logStreamPublicEndpoint": true
          },
          "serviceId": "12345678abcd1234abcd12345678abcd"
        },
        "systemData": {
          "createdBy": "sample-user",
          "createdByType": "User",
          "createdAt": "2021-08-11T03:16:03.944Z",
          "lastModifiedBy": "sample-user",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2021-08-11T03:17:03.944Z"
        },
        "type": "Microsoft.AppPlatform/Spring",
        "sku": {
          "name": "S0",
          "tier": "Standard"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        },
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
        "name": "myservice"
      }
  - statusCode: "202"
    body: >-
      {
        "properties": {
          "provisioningState": "Updating",
          "networkProfile": {
            "serviceRuntimeSubnetId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/serviceRuntime",
            "appSubnetId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/apps",
            "serviceCidr": "10.8.0.0/16,10.244.0.0/16,10.245.0.1/16",
            "serviceRuntimeNetworkResourceGroup": "my-service-runtime-network-rg",
            "appNetworkResourceGroup": "my-app-network-rg",
            "outboundIPs": {
              "publicIPs": [
                "40.64.67.13"
              ]
            },
            "requiredTraffics": [
              {
                "protocol": "TCP",
                "port": 443,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "UDP",
                "port": 1194,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "TCP",
                "port": 9000,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              }
            ]
          },
          "vnetAddons": {
            "logStreamPublicEndpoint": true
          },
          "serviceId": "12345678abcd1234abcd12345678abcd"
        },
        "systemData": {
          "createdBy": "sample-user",
          "createdByType": "User",
          "createdAt": "2021-08-11T03:16:03.944Z",
          "lastModifiedBy": "sample-user",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2021-08-11T03:17:03.944Z"
        },
        "type": "Microsoft.AppPlatform/Spring",
        "sku": {
          "name": "S0",
          "tier": "Standard"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        },
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
        "name": "myservice"
      }
- name: Services_CreateOrUpdate_Enterprise
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice?api-version=2022-09-01-preview
    body: >-
      {
        "properties": {
          "marketplaceResource": {
            "plan": "tanzu-asc-ent-mtr",
            "product": "azure-spring-cloud-vmware-tanzu-2",
            "publisher": "vmware-inc"
          }
        },
        "sku": {
          "name": "E0",
          "tier": "Enterprise"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice?api-version=2022-09-01-preview

      {
        "properties": {
          "marketplaceResource": {
            "plan": "tanzu-asc-ent-mtr",
            "product": "azure-spring-cloud-vmware-tanzu-2",
            "publisher": "vmware-inc"
          }
        },
        "sku": {
          "name": "E0",
          "tier": "Enterprise"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        }
      }

      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AppPlatformManagementClient } = require("@azure/arm-appplatform");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create a new Service or update an exiting Service.
       *
       * @summary Create a new Service or update an exiting Service.
       * x-ms-original-file: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-09-01-preview/examples/Services_CreateOrUpdate_Enterprise.json
       */
      async function servicesCreateOrUpdateEnterprise() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "myResourceGroup";
        const serviceName = "myservice";
        const resource = {
          location: "eastus",
          properties: {
            marketplaceResource: {
              plan: "tanzu-asc-ent-mtr",
              product: "azure-spring-cloud-vmware-tanzu-2",
              publisher: "vmware-inc",
            },
          },
          sku: { name: "E0", tier: "Enterprise" },
          tags: { key1: "value1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new AppPlatformManagementClient(credential, subscriptionId);
        const result = await client.services.beginCreateOrUpdateAndWait(
          resourceGroupName,
          serviceName,
          resource
        );
        console.log(result);
      }

      servicesCreateOrUpdateEnterprise().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-appplatform_2.1.0-beta.3/sdk/appplatform/arm-appplatform/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "provisioningState": "Creating",
          "serviceId": "12345678abcd1234abcd12345678abcd",
          "networkProfile": {
            "outboundIPs": {
              "publicIPs": [
                "20.39.3.173",
                "40.64.67.13"
              ]
            },
            "ingressConfig": {
              "readTimeoutInSeconds": 300
            },
            "requiredTraffics": [
              {
                "protocol": "TCP",
                "port": 443,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "UDP",
                "port": 1194,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "TCP",
                "port": 9000,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              }
            ]
          },
          "marketplaceResource": {
            "plan": "tanzu-asc-ent-mtr",
            "product": "azure-spring-cloud-vmware-tanzu-2",
            "publisher": "vmware-inc"
          }
        },
        "systemData": {
          "createdBy": "sample-user",
          "createdByType": "User",
          "createdAt": "2021-08-11T03:16:03.944Z",
          "lastModifiedBy": "sample-user",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2021-08-11T03:17:03.944Z"
        },
        "type": "Microsoft.AppPlatform/Spring",
        "sku": {
          "name": "E0",
          "tier": "Enterprise"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        },
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
        "name": "myservice"
      }
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "provisioningState": "Succeeded",
          "serviceId": "12345678abcd1234abcd12345678abcd",
          "networkProfile": {
            "outboundIPs": {
              "publicIPs": [
                "20.39.3.173",
                "40.64.67.13"
              ]
            },
            "requiredTraffics": [
              {
                "protocol": "TCP",
                "port": 443,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "UDP",
                "port": 1194,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "TCP",
                "port": 9000,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              }
            ]
          },
          "marketplaceResource": {
            "plan": "tanzu-asc-ent-mtr",
            "product": "azure-spring-cloud-vmware-tanzu-2",
            "publisher": "vmware-inc"
          }
        },
        "systemData": {
          "createdBy": "sample-user",
          "createdByType": "User",
          "createdAt": "2021-08-11T03:16:03.944Z",
          "lastModifiedBy": "sample-user",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2021-08-11T03:17:03.944Z"
        },
        "type": "Microsoft.AppPlatform/Spring",
        "sku": {
          "name": "E0",
          "tier": "Enterprise"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        },
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
        "name": "myservice"
      }
  - statusCode: "202"
    body: >-
      {
        "properties": {
          "provisioningState": "Updating",
          "serviceId": "12345678abcd1234abcd12345678abcd",
          "networkProfile": {
            "outboundIPs": {
              "publicIPs": [
                "20.39.3.173",
                "40.64.67.13"
              ]
            },
            "requiredTraffics": [
              {
                "protocol": "TCP",
                "port": 443,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "UDP",
                "port": 1194,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              },
              {
                "protocol": "TCP",
                "port": 9000,
                "ips": [
                  "20.62.211.25",
                  "52.188.47.226"
                ],
                "direction": "Outbound"
              }
            ]
          },
          "marketplaceResource": {
            "plan": "tanzu-asc-ent-mtr",
            "product": "azure-spring-cloud-vmware-tanzu-2",
            "publisher": "vmware-inc"
          }
        },
        "systemData": {
          "createdBy": "sample-user",
          "createdByType": "User",
          "createdAt": "2021-08-11T03:16:03.944Z",
          "lastModifiedBy": "sample-user",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2021-08-11T03:17:03.944Z"
        },
        "type": "Microsoft.AppPlatform/Spring",
        "sku": {
          "name": "E0",
          "tier": "Enterprise"
        },
        "location": "eastus",
        "tags": {
          "key1": "value1"
        },
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice",
        "name": "myservice"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Azure Spring Apps service - Create a new Service or update an exiting Service.
errorCodes: []
