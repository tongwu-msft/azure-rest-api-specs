### YamlMime:RESTOperation
uid: management.azure.com.azurespringapps.configservers.validate
name: Validate
service: Azure Spring Apps
groupName: Config Servers
apiVersion: 2022-05-01-preview
summary: Check if the config server settings are valid.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configServers/validate?api-version=2022-05-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: serviceName
  in: path
  isRequired: true
  description: The name of the Service resource.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Success. The response describes the validation result of Config Server.
  types:
  - uid: ConfigServerSettingsValidateResult
- name: 202 Accepted
  description: Accepted. The response indicates the ConfigServerSetting is validating.
  types:
  - uid: ConfigServerSettingsValidateResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: gitProperty
    in: body
    description: Property of git environment.
    types:
    - uid: ConfigServerGitProperty
requestHeader: []
definitions:
- name: ConfigServerGitProperty
  description: Property of git.
  kind: object
  properties:
  - name: repositories
    description: Repositories of git.
    types:
    - uid: GitPatternRepository
      isArray: true
  - name: uri
    description: URI of the repository
    types:
    - uid: string
  - name: label
    description: Label of the repository
    types:
    - uid: string
  - name: searchPaths
    description: Searching path of the repository
    types:
    - uid: string
      isArray: true
  - name: username
    description: Username of git repository basic auth.
    types:
    - uid: string
  - name: password
    description: Password of git repository basic auth.
    types:
    - uid: string
  - name: hostKey
    description: Public sshKey of git repository.
    types:
    - uid: string
  - name: hostKeyAlgorithm
    description: SshKey algorithm of git repository.
    types:
    - uid: string
  - name: privateKey
    description: Private sshKey algorithm of git repository.
    types:
    - uid: string
  - name: strictHostKeyChecking
    description: Strict host key checking or not.
    types:
    - uid: boolean
- name: ConfigServerSettingsValidateResult
  description: Validation result for config server settings
  kind: object
  properties:
  - name: isValid
    description: Indicate if the config server settings are valid
    types:
    - uid: boolean
  - name: details
    description: The detail validation results
    types:
    - uid: ConfigServerSettingsErrorRecord
      isArray: true
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: An error response from the service.
    types:
    - uid: CloudErrorBody
- name: ConfigServerSettings
  description: The settings of config server.
  kind: object
  properties:
  - name: gitProperty
    description: Property of git environment.
    types:
    - uid: ConfigServerGitProperty
- name: GitPatternRepository
  description: Git repository property payload for config server
  kind: object
  properties:
  - name: name
    description: Name of the repository
    types:
    - uid: string
  - name: pattern
    description: Collection of pattern of the repository
    types:
    - uid: string
      isArray: true
  - name: uri
    description: URI of the repository
    types:
    - uid: string
  - name: label
    description: Label of the repository
    types:
    - uid: string
  - name: searchPaths
    description: Searching path of the repository
    types:
    - uid: string
      isArray: true
  - name: username
    description: Username of git repository basic auth.
    types:
    - uid: string
  - name: password
    description: Password of git repository basic auth.
    types:
    - uid: string
  - name: hostKey
    description: Public sshKey of git repository.
    types:
    - uid: string
  - name: hostKeyAlgorithm
    description: SshKey algorithm of git repository.
    types:
    - uid: string
  - name: privateKey
    description: Private sshKey algorithm of git repository.
    types:
    - uid: string
  - name: strictHostKeyChecking
    description: Strict host key checking or not.
    types:
    - uid: boolean
- name: ConfigServerSettingsErrorRecord
  description: Error record of the config server settings
  kind: object
  properties:
  - name: name
    description: The name of the config server settings error record
    types:
    - uid: string
  - name: uri
    description: The uri of the config server settings error record
    types:
    - uid: string
  - name: messages
    description: The detail error messages of the record
    types:
    - uid: string
      isArray: true
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: ConfigServers_Validate
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/configServers/validate?api-version=2022-05-01-preview
    body: >-
      {
        "gitProperty": {
          "uri": "https://github.com/fake-user/fake-repository.git",
          "label": "master",
          "searchPaths": [
            "/"
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/configServers/validate?api-version=2022-05-01-preview

      {
        "gitProperty": {
          "uri": "https://github.com/fake-user/fake-repository.git",
          "label": "master",
          "searchPaths": [
            "/"
          ]
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armappplatform_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/appplatform/armappplatform"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-05-01-preview/examples/ConfigServers_Validate.json
      func ExampleConfigServersClient_BeginValidate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armappplatform.NewConfigServersClient("00000000-0000-0000-0000-000000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginValidate(ctx,
      		"myResourceGroup",
      		"myservice",
      		armappplatform.ConfigServerSettings{
      			GitProperty: &armappplatform.ConfigServerGitProperty{
      				Label: to.Ptr("master"),
      				SearchPaths: []*string{
      					to.Ptr("/")},
      				URI: to.Ptr("https://github.com/fake-user/fake-repository.git"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fappplatform%2Farmappplatform%2Fv1.1.0-beta.1/sdk/resourcemanager/appplatform/armappplatform/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "isValid": true
      }
  - statusCode: "202"
    headers:
    - name: Location
      value: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationStatus/default/operationId/00000000-0000-0000-0000-000000000000?api-version=2022-05-01-preview
    - name: Azure-AsyncOperation
      value: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000/Spring/default?api-version=2022-05-01-preview
    body: '{}'
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Azure Spring Apps service - Check if the config server settings are valid.
errorCodes: []
