### YamlMime:RESTOperation
uid: management.azure.com.virtualwan.vpnconnections.createorupdate
name: Create Or Update
service: Virtual WAN
groupName: Vpn Connections
apiVersion: 2022-05-01
summary: Creates a vpn connection to a scalable vpn gateway if it doesn't exist else updates the existing connection.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}?api-version=2022-05-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The resource group name of the VpnGateway.
  types:
  - uid: string
- name: gatewayName
  in: path
  isRequired: true
  description: The name of the gateway.
  types:
  - uid: string
- name: connectionName
  in: path
  isRequired: true
  description: The name of the connection.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Request successful. Returns the details of the vpn connection created or updated.
  types:
  - uid: VpnConnection
- name: 201 Created
  description: Request successful. Returns the details of the vpn connection created or updated.
  types:
  - uid: VpnConnection
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: properties.remoteVpnSite
    in: body
    description: Id of the connected vpn site.
    types:
    - uid: SubResource
  - name: properties.routingWeight
    in: body
    description: Routing weight for vpn connection.
    types:
    - uid: integer
  - name: properties.dpdTimeoutSeconds
    in: body
    description: DPD timeout in seconds for vpn connection.
    types:
    - uid: integer
  - name: properties.vpnConnectionProtocolType
    in: body
    description: Connection protocol used for this connection.
    types:
    - uid: VirtualNetworkGatewayConnectionProtocol
  - name: properties.connectionBandwidth
    in: body
    description: Expected bandwidth in MBPS.
    types:
    - uid: integer
  - name: properties.sharedKey
    in: body
    description: SharedKey for the vpn connection.
    types:
    - uid: string
  - name: properties.enableBgp
    in: body
    description: EnableBgp flag.
    types:
    - uid: boolean
  - name: properties.usePolicyBasedTrafficSelectors
    in: body
    description: Enable policy-based traffic selectors.
    types:
    - uid: boolean
  - name: properties.ipsecPolicies
    in: body
    description: The IPSec Policies to be considered by this connection.
    types:
    - uid: IpsecPolicy
      isArray: true
  - name: properties.trafficSelectorPolicies
    in: body
    description: The Traffic Selector Policies to be considered by this connection.
    types:
    - uid: TrafficSelectorPolicy
      isArray: true
  - name: properties.enableRateLimiting
    in: body
    description: EnableBgp flag.
    types:
    - uid: boolean
  - name: properties.enableInternetSecurity
    in: body
    description: Enable internet security.
    types:
    - uid: boolean
  - name: properties.useLocalAzureIpAddress
    in: body
    description: Use local azure ip to initiate connection.
    types:
    - uid: boolean
  - name: properties.vpnLinkConnections
    in: body
    description: List of all vpn site link connections to the gateway.
    types:
    - uid: VpnSiteLinkConnection
      isArray: true
  - name: properties.routingConfiguration
    in: body
    description: The Routing Configuration indicating the associated and propagated route tables on this connection.
    types:
    - uid: RoutingConfiguration
  - name: id
    in: body
    description: Resource ID.
    types:
    - uid: string
requestHeader: []
definitions:
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: IpsecPolicy
  description: An IPSec Policy configuration for a virtual network gateway connection.
  kind: object
  properties:
  - name: saLifeTimeSeconds
    description: The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
    types:
    - uid: integer
  - name: saDataSizeKilobytes
    description: The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
    types:
    - uid: integer
  - name: ipsecEncryption
    description: The IPSec encryption algorithm (IKE phase 1).
    types:
    - uid: IpsecEncryption
  - name: ipsecIntegrity
    description: The IPSec integrity algorithm (IKE phase 1).
    types:
    - uid: IpsecIntegrity
  - name: ikeEncryption
    description: The IKE encryption algorithm (IKE phase 2).
    types:
    - uid: IkeEncryption
  - name: ikeIntegrity
    description: The IKE integrity algorithm (IKE phase 2).
    types:
    - uid: IkeIntegrity
  - name: dhGroup
    description: The DH Group used in IKE Phase 1 for initial SA.
    types:
    - uid: DhGroup
  - name: pfsGroup
    description: The Pfs Group used in IKE Phase 2 for new child SA.
    types:
    - uid: PfsGroup
- name: TrafficSelectorPolicy
  description: An traffic selector policy for a virtual network gateway connection.
  kind: object
  properties:
  - name: localAddressRanges
    description: A collection of local address spaces in CIDR format.
    types:
    - uid: string
      isArray: true
  - name: remoteAddressRanges
    description: A collection of remote address spaces in CIDR format.
    types:
    - uid: string
      isArray: true
- name: VpnSiteLinkConnection
  description: VpnSiteLinkConnection Resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: properties.vpnSiteLink
    description: Id of the connected vpn site link.
    types:
    - uid: SubResource
  - name: properties.routingWeight
    description: Routing weight for vpn connection.
    types:
    - uid: integer
  - name: properties.vpnLinkConnectionMode
    description: Vpn link connection mode.
    types:
    - uid: VpnLinkConnectionMode
  - name: properties.connectionStatus
    isReadyOnly: true
    description: The connection status.
    types:
    - uid: VpnConnectionStatus
  - name: properties.vpnConnectionProtocolType
    description: Connection protocol used for this connection.
    types:
    - uid: VirtualNetworkGatewayConnectionProtocol
  - name: properties.ingressBytesTransferred
    isReadyOnly: true
    description: Ingress bytes transferred.
    types:
    - uid: integer
  - name: properties.egressBytesTransferred
    isReadyOnly: true
    description: Egress bytes transferred.
    types:
    - uid: integer
  - name: properties.connectionBandwidth
    description: Expected bandwidth in MBPS.
    types:
    - uid: integer
  - name: properties.sharedKey
    description: SharedKey for the vpn connection.
    types:
    - uid: string
  - name: properties.enableBgp
    description: EnableBgp flag.
    types:
    - uid: boolean
  - name: properties.vpnGatewayCustomBgpAddresses
    description: vpnGatewayCustomBgpAddresses used by this connection.
    types:
    - uid: GatewayCustomBgpIpAddressIpConfiguration
      isArray: true
  - name: properties.usePolicyBasedTrafficSelectors
    description: Enable policy-based traffic selectors.
    types:
    - uid: boolean
  - name: properties.ipsecPolicies
    description: The IPSec Policies to be considered by this connection.
    types:
    - uid: IpsecPolicy
      isArray: true
  - name: properties.enableRateLimiting
    description: EnableBgp flag.
    types:
    - uid: boolean
  - name: properties.useLocalAzureIpAddress
    description: Use local azure ip to initiate connection.
    types:
    - uid: boolean
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the VPN site link connection resource.
    types:
    - uid: ProvisioningState
  - name: properties.ingressNatRules
    description: List of ingress NatRules.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.egressNatRules
    description: List of egress NatRules.
    types:
    - uid: SubResource
      isArray: true
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: RoutingConfiguration
  description: Routing Configuration indicating the associated and propagated route tables for this connection.
  kind: object
  properties:
  - name: associatedRouteTable
    description: The resource id RouteTable associated with this RoutingConfiguration.
    types:
    - uid: SubResource
  - name: propagatedRouteTables
    description: The list of RouteTables to advertise the routes to.
    types:
    - uid: PropagatedRouteTable
  - name: vnetRoutes
    description: List of routes that control routing from VirtualHub into a virtual network connection.
    types:
    - uid: VnetRoute
  - name: inboundRouteMap
    description: The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
    types:
    - uid: SubResource
  - name: outboundRouteMap
    description: The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
    types:
    - uid: SubResource
- name: VpnConnection
  description: VpnConnection Resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.remoteVpnSite
    description: Id of the connected vpn site.
    types:
    - uid: SubResource
  - name: properties.routingWeight
    description: Routing weight for vpn connection.
    types:
    - uid: integer
  - name: properties.dpdTimeoutSeconds
    description: DPD timeout in seconds for vpn connection.
    types:
    - uid: integer
  - name: properties.connectionStatus
    isReadyOnly: true
    description: The connection status.
    types:
    - uid: VpnConnectionStatus
  - name: properties.vpnConnectionProtocolType
    description: Connection protocol used for this connection.
    types:
    - uid: VirtualNetworkGatewayConnectionProtocol
  - name: properties.ingressBytesTransferred
    isReadyOnly: true
    description: Ingress bytes transferred.
    types:
    - uid: integer
  - name: properties.egressBytesTransferred
    isReadyOnly: true
    description: Egress bytes transferred.
    types:
    - uid: integer
  - name: properties.connectionBandwidth
    description: Expected bandwidth in MBPS.
    types:
    - uid: integer
  - name: properties.sharedKey
    description: SharedKey for the vpn connection.
    types:
    - uid: string
  - name: properties.enableBgp
    description: EnableBgp flag.
    types:
    - uid: boolean
  - name: properties.usePolicyBasedTrafficSelectors
    description: Enable policy-based traffic selectors.
    types:
    - uid: boolean
  - name: properties.ipsecPolicies
    description: The IPSec Policies to be considered by this connection.
    types:
    - uid: IpsecPolicy
      isArray: true
  - name: properties.trafficSelectorPolicies
    description: The Traffic Selector Policies to be considered by this connection.
    types:
    - uid: TrafficSelectorPolicy
      isArray: true
  - name: properties.enableRateLimiting
    description: EnableBgp flag.
    types:
    - uid: boolean
  - name: properties.enableInternetSecurity
    description: Enable internet security.
    types:
    - uid: boolean
  - name: properties.useLocalAzureIpAddress
    description: Use local azure ip to initiate connection.
    types:
    - uid: boolean
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the VPN connection resource.
    types:
    - uid: ProvisioningState
  - name: properties.vpnLinkConnections
    description: List of all vpn site link connections to the gateway.
    types:
    - uid: VpnSiteLinkConnection
      isArray: true
  - name: properties.routingConfiguration
    description: The Routing Configuration indicating the associated and propagated route tables on this connection.
    types:
    - uid: RoutingConfiguration
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: IpsecEncryption
  description: The IPSec encryption algorithm (IKE phase 1).
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: DES
    types:
    - uid: string
  - name: DES3
    types:
    - uid: string
  - name: AES128
    types:
    - uid: string
  - name: AES192
    types:
    - uid: string
  - name: AES256
    types:
    - uid: string
  - name: GCMAES128
    types:
    - uid: string
  - name: GCMAES192
    types:
    - uid: string
  - name: GCMAES256
    types:
    - uid: string
- name: IpsecIntegrity
  description: The IPSec integrity algorithm (IKE phase 1).
  kind: enum
  properties:
  - name: MD5
    types:
    - uid: string
  - name: SHA1
    types:
    - uid: string
  - name: SHA256
    types:
    - uid: string
  - name: GCMAES128
    types:
    - uid: string
  - name: GCMAES192
    types:
    - uid: string
  - name: GCMAES256
    types:
    - uid: string
- name: IkeEncryption
  description: The IKE encryption algorithm (IKE phase 2).
  kind: enum
  properties:
  - name: DES
    types:
    - uid: string
  - name: DES3
    types:
    - uid: string
  - name: AES128
    types:
    - uid: string
  - name: AES192
    types:
    - uid: string
  - name: AES256
    types:
    - uid: string
  - name: GCMAES256
    types:
    - uid: string
  - name: GCMAES128
    types:
    - uid: string
- name: IkeIntegrity
  description: The IKE integrity algorithm (IKE phase 2).
  kind: enum
  properties:
  - name: MD5
    types:
    - uid: string
  - name: SHA1
    types:
    - uid: string
  - name: SHA256
    types:
    - uid: string
  - name: SHA384
    types:
    - uid: string
  - name: GCMAES256
    types:
    - uid: string
  - name: GCMAES128
    types:
    - uid: string
- name: DhGroup
  description: The DH Groups used in IKE Phase 1 for initial SA.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: DHGroup1
    types:
    - uid: string
  - name: DHGroup2
    types:
    - uid: string
  - name: DHGroup14
    types:
    - uid: string
  - name: DHGroup2048
    types:
    - uid: string
  - name: ECP256
    types:
    - uid: string
  - name: ECP384
    types:
    - uid: string
  - name: DHGroup24
    types:
    - uid: string
- name: PfsGroup
  description: The Pfs Groups used in IKE Phase 2 for new child SA.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: PFS1
    types:
    - uid: string
  - name: PFS2
    types:
    - uid: string
  - name: PFS2048
    types:
    - uid: string
  - name: ECP256
    types:
    - uid: string
  - name: ECP384
    types:
    - uid: string
  - name: PFS24
    types:
    - uid: string
  - name: PFS14
    types:
    - uid: string
  - name: PFSMM
    types:
    - uid: string
- name: VpnLinkConnectionMode
  description: Vpn link connection mode.
  kind: enum
  properties:
  - name: Default
    types:
    - uid: string
  - name: ResponderOnly
    types:
    - uid: string
  - name: InitiatorOnly
    types:
    - uid: string
- name: VpnConnectionStatus
  description: The current state of the vpn connection.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: Connecting
    types:
    - uid: string
  - name: Connected
    types:
    - uid: string
  - name: NotConnected
    types:
    - uid: string
- name: VirtualNetworkGatewayConnectionProtocol
  description: Connection protocol used for this connection.
  kind: enum
  properties:
  - name: IKEv2
    types:
    - uid: string
  - name: IKEv1
    types:
    - uid: string
- name: GatewayCustomBgpIpAddressIpConfiguration
  description: GatewayCustomBgpIpAddressIpConfiguration for a virtual network gateway connection.
  kind: object
  properties:
  - name: ipConfigurationId
    description: The IpconfigurationId of ipconfiguration which belongs to gateway.
    types:
    - uid: string
  - name: customBgpIpAddress
    description: The custom BgpPeeringAddress which belongs to IpconfigurationId.
    types:
    - uid: string
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: PropagatedRouteTable
  description: The list of RouteTables to advertise the routes to.
  kind: object
  properties:
  - name: labels
    description: The list of labels.
    types:
    - uid: string
      isArray: true
  - name: ids
    description: The list of resource ids of all the RouteTables.
    types:
    - uid: SubResource
      isArray: true
- name: VnetRoute
  description: List of routes that control routing from VirtualHub into a virtual network connection.
  kind: object
  properties:
  - name: staticRoutesConfig
    description: Configuration for static routes on this HubVnetConnection.
    types:
    - uid: StaticRoutesConfig
  - name: staticRoutes
    description: List of all Static Routes.
    types:
    - uid: StaticRoute
      isArray: true
  - name: bgpConnections
    isReadyOnly: true
    description: The list of references to HubBgpConnection objects.
    types:
    - uid: SubResource
      isArray: true
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: StaticRoutesConfig
  description: Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.
  kind: object
  properties:
  - name: propagateStaticRoutes
    isReadyOnly: true
    description: Boolean indicating whether static routes on this connection are automatically propagate to route tables which this connection propagates to.
    types:
    - uid: boolean
  - name: vnetLocalRouteOverrideCriteria
    description: Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
    types:
    - uid: VnetLocalRouteOverrideCriteria
- name: StaticRoute
  description: List of all Static Routes.
  kind: object
  properties:
  - name: name
    description: The name of the StaticRoute that is unique within a VnetRoute.
    types:
    - uid: string
  - name: addressPrefixes
    description: List of all address prefixes.
    types:
    - uid: string
      isArray: true
  - name: nextHopIpAddress
    description: The ip address of the next hop.
    types:
    - uid: string
- name: VnetLocalRouteOverrideCriteria
  description: Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke vnet.
  kind: enum
  properties:
  - name: Contains
    types:
    - uid: string
  - name: Equal
    types:
    - uid: string
examples:
- name: VpnConnectionPut
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1?api-version=2022-05-01
    body: >-
      {
        "properties": {
          "remoteVpnSite": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
          },
          "vpnLinkConnections": [
            {
              "name": "Connection-Link1",
              "properties": {
                "vpnSiteLink": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
                },
                "connectionBandwidth": 200,
                "vpnConnectionProtocolType": "IKEv2",
                "sharedKey": "key",
                "vpnLinkConnectionMode": "Default",
                "usePolicyBasedTrafficSelectors": false
              }
            }
          ],
          "routingConfiguration": {
            "associatedRouteTable": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
            },
            "propagatedRouteTables": {
              "labels": [
                "label1",
                "label2"
              ],
              "ids": [
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
                },
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable2"
                },
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable3"
                }
              ]
            },
            "inboundRouteMap": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeMaps/routeMap1"
            },
            "outboundRouteMap": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeMaps/routeMap2"
            }
          },
          "trafficSelectorPolicies": []
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1?api-version=2022-05-01

      {
        "properties": {
          "remoteVpnSite": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
          },
          "vpnLinkConnections": [
            {
              "name": "Connection-Link1",
              "properties": {
                "vpnSiteLink": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
                },
                "connectionBandwidth": 200,
                "vpnConnectionProtocolType": "IKEv2",
                "sharedKey": "key",
                "vpnLinkConnectionMode": "Default",
                "usePolicyBasedTrafficSelectors": false
              }
            }
          ],
          "routingConfiguration": {
            "associatedRouteTable": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
            },
            "propagatedRouteTables": {
              "labels": [
                "label1",
                "label2"
              ],
              "ids": [
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
                },
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable2"
                },
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable3"
                }
              ]
            },
            "inboundRouteMap": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeMaps/routeMap1"
            },
            "outboundRouteMap": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeMaps/routeMap2"
            }
          },
          "trafficSelectorPolicies": []
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-05-01/examples/VpnConnectionPut.json
      func ExampleVPNConnectionsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewVPNConnectionsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx, "rg1", "gateway1", "vpnConnection1", armnetwork.VPNConnection{
      		Properties: &armnetwork.VPNConnectionProperties{
      			RemoteVPNSite: &armnetwork.SubResource{
      				ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"),
      			},
      			RoutingConfiguration: &armnetwork.RoutingConfiguration{
      				AssociatedRouteTable: &armnetwork.SubResource{
      					ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"),
      				},
      				InboundRouteMap: &armnetwork.SubResource{
      					ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeMaps/routeMap1"),
      				},
      				OutboundRouteMap: &armnetwork.SubResource{
      					ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeMaps/routeMap2"),
      				},
      				PropagatedRouteTables: &armnetwork.PropagatedRouteTable{
      					IDs: []*armnetwork.SubResource{
      						{
      							ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"),
      						},
      						{
      							ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable2"),
      						},
      						{
      							ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable3"),
      						}},
      					Labels: []*string{
      						to.Ptr("label1"),
      						to.Ptr("label2")},
      				},
      			},
      			TrafficSelectorPolicies: []*armnetwork.TrafficSelectorPolicy{},
      			VPNLinkConnections: []*armnetwork.VPNSiteLinkConnection{
      				{
      					Name: to.Ptr("Connection-Link1"),
      					Properties: &armnetwork.VPNSiteLinkConnectionProperties{
      						ConnectionBandwidth:            to.Ptr[int32](200),
      						SharedKey:                      to.Ptr("key"),
      						UsePolicyBasedTrafficSelectors: to.Ptr(false),
      						VPNConnectionProtocolType:      to.Ptr(armnetwork.VirtualNetworkGatewayConnectionProtocolIKEv2),
      						VPNLinkConnectionMode:          to.Ptr(armnetwork.VPNLinkConnectionModeDefault),
      						VPNSiteLink: &armnetwork.SubResource{
      							ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"),
      						},
      					},
      				}},
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv2.0.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates a vpn connection to a scalable vpn gateway if it doesn't exist else updates the existing connection.
       *
       * @summary Creates a vpn connection to a scalable vpn gateway if it doesn't exist else updates the existing connection.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-05-01/examples/VpnConnectionPut.json
       */
      async function vpnConnectionPut() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const gatewayName = "gateway1";
        const connectionName = "vpnConnection1";
        const vpnConnectionParameters = {
          remoteVpnSite: {
            id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
          },
          routingConfiguration: {
            associatedRouteTable: {
              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1",
            },
            inboundRouteMap: {
              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeMaps/routeMap1",
            },
            outboundRouteMap: {
              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeMaps/routeMap2",
            },
            propagatedRouteTables: {
              ids: [
                {
                  id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1",
                },
                {
                  id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable2",
                },
                {
                  id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable3",
                },
              ],
              labels: ["label1", "label2"],
            },
          },
          trafficSelectorPolicies: [],
          vpnLinkConnections: [
            {
              name: "Connection-Link1",
              connectionBandwidth: 200,
              sharedKey: "key",
              usePolicyBasedTrafficSelectors: false,
              vpnConnectionProtocolType: "IKEv2",
              vpnLinkConnectionMode: "Default",
              vpnSiteLink: {
                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1",
              },
            },
          ],
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.vpnConnections.beginCreateOrUpdateAndWait(
          resourceGroupName,
          gatewayName,
          connectionName,
          vpnConnectionParameters
        );
        console.log(result);
      }

      vpnConnectionPut().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_30.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "vpnConnection1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "properties": {
          "provisioningState": "Succeeded",
          "remoteVpnSite": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
          },
          "enableInternetSecurity": false,
          "ingressBytesTransferred": 0,
          "egressBytesTransferred": 0,
          "vpnLinkConnections": [
            {
              "name": "Connection-Link1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
              "properties": {
                "provisioningState": "Succeeded",
                "vpnSiteLink": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
                },
                "connectionBandwidth": 200,
                "ipsecPolicies": [],
                "vpnConnectionProtocolType": "IKEv2",
                "sharedKey": "key",
                "ingressBytesTransferred": 0,
                "egressBytesTransferred": 0,
                "enableBgp": false,
                "enableRateLimiting": false,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "routingWeight": 0,
                "vpnLinkConnectionMode": "Default"
              }
            }
          ],
          "routingConfiguration": {
            "associatedRouteTable": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
            },
            "propagatedRouteTables": {
              "labels": [
                "label1",
                "label2"
              ],
              "ids": [
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
                },
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable2"
                },
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable3"
                }
              ]
            },
            "inboundRouteMap": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeMaps/routeMap1"
            },
            "outboundRouteMap": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeMaps/routeMap2"
            }
          },
          "trafficSelectorPolicies": []
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "vpnConnection1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "properties": {
          "provisioningState": "Succeeded",
          "remoteVpnSite": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
          },
          "enableInternetSecurity": false,
          "ingressBytesTransferred": 0,
          "egressBytesTransferred": 0,
          "vpnLinkConnections": [
            {
              "name": "Connection-Link1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "properties": {
                "provisioningState": "Succeeded",
                "vpnSiteLink": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
                },
                "connectionBandwidth": 200,
                "ipsecPolicies": [],
                "vpnConnectionProtocolType": "IKEv2",
                "sharedKey": "key",
                "ingressBytesTransferred": 0,
                "egressBytesTransferred": 0,
                "enableBgp": false,
                "enableRateLimiting": false,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "routingWeight": 0,
                "vpnLinkConnectionMode": "Default"
              }
            }
          ],
          "routingConfiguration": {
            "associatedRouteTable": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
            },
            "propagatedRouteTables": {
              "labels": [
                "label1",
                "label2"
              ],
              "ids": [
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
                },
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable2"
                },
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable3"
                }
              ]
            },
            "inboundRouteMap": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeMaps/routeMap1"
            },
            "outboundRouteMap": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeMaps/routeMap2"
            }
          },
          "trafficSelectorPolicies": []
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Creates a vpn connection to a scalable vpn gateway if it doesn't exist else updates the existing connection.
errorCodes: []
