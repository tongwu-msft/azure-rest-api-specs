### YamlMime:RESTOperation
uid: management.azure.com.virtualwan.virtualhubroutetablev2s.createorupdate
name: Create Or Update
service: Virtual WAN
groupName: Virtual Hub Route Table V2s
apiVersion: 2022-05-01
summary: Creates a VirtualHubRouteTableV2 resource if it doesn't exist else updates the existing VirtualHubRouteTableV2.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables/{routeTableName}?api-version=2022-05-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The resource group name of the VirtualHub.
  types:
  - uid: string
- name: virtualHubName
  in: path
  isRequired: true
  description: The name of the VirtualHub.
  types:
  - uid: string
- name: routeTableName
  in: path
  isRequired: true
  description: The name of the VirtualHubRouteTableV2.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Request successful. Returns the details of the VirtualHubRouteTableV2 created or updated.
  types:
  - uid: VirtualHubRouteTableV2
- name: 201 Created
  description: Request received successfully. Returns the details of the VirtualHubRouteTableV2 created or updated.
  types:
  - uid: VirtualHubRouteTableV2
- name: Other Status Codes
  description: Error.
  types:
  - uid: Error
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: properties.routes
    in: body
    description: List of all routes.
    types:
    - uid: VirtualHubRouteV2
      isArray: true
  - name: properties.attachedConnections
    in: body
    description: List of all connections attached to this route table v2.
    types:
    - uid: string
      isArray: true
  - name: id
    in: body
    description: Resource ID.
    types:
    - uid: string
requestHeader: []
definitions:
- name: VirtualHubRouteV2
  description: VirtualHubRouteTableV2 route.
  kind: object
  properties:
  - name: destinationType
    description: The type of destinations.
    types:
    - uid: string
  - name: destinations
    description: List of all destinations.
    types:
    - uid: string
      isArray: true
  - name: nextHopType
    description: The type of next hops.
    types:
    - uid: string
  - name: nextHops
    description: NextHops ip address.
    types:
    - uid: string
      isArray: true
- name: VirtualHubRouteTableV2
  description: VirtualHubRouteTableV2 Resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.routes
    description: List of all routes.
    types:
    - uid: VirtualHubRouteV2
      isArray: true
  - name: properties.attachedConnections
    description: List of all connections attached to this route table v2.
    types:
    - uid: string
      isArray: true
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the virtual hub route table v2 resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: Error
  description: Common error representation.
  kind: object
  properties:
  - name: code
    description: Error code.
    types:
    - uid: string
  - name: message
    description: Error message.
    types:
    - uid: string
  - name: target
    description: Error target.
    types:
    - uid: string
  - name: details
    description: Error details.
    types:
    - uid: ErrorDetails
      isArray: true
  - name: innerError
    description: Inner error message.
    types:
    - uid: string
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: ErrorDetails
  description: Common error details representation.
  kind: object
  properties:
  - name: code
    description: Error code.
    types:
    - uid: string
  - name: target
    description: Error target.
    types:
    - uid: string
  - name: message
    description: Error message.
    types:
    - uid: string
examples:
- name: VirtualHubRouteTableV2Put
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeTables/virtualHubRouteTable1a?api-version=2022-05-01
    body: >-
      {
        "properties": {
          "routes": [
            {
              "destinationType": "CIDR",
              "destinations": [
                "20.10.0.0/16",
                "20.20.0.0/16"
              ],
              "nextHopType": "IPAddress",
              "nextHops": [
                "10.0.0.68"
              ]
            },
            {
              "destinationType": "CIDR",
              "destinations": [
                "0.0.0.0/0"
              ],
              "nextHopType": "IPAddress",
              "nextHops": [
                "10.0.0.68"
              ]
            }
          ],
          "attachedConnections": [
            "All_Vnets"
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeTables/virtualHubRouteTable1a?api-version=2022-05-01

      {
        "properties": {
          "routes": [
            {
              "destinationType": "CIDR",
              "destinations": [
                "20.10.0.0/16",
                "20.20.0.0/16"
              ],
              "nextHopType": "IPAddress",
              "nextHops": [
                "10.0.0.68"
              ]
            },
            {
              "destinationType": "CIDR",
              "destinations": [
                "0.0.0.0/0"
              ],
              "nextHopType": "IPAddress",
              "nextHops": [
                "10.0.0.68"
              ]
            }
          ],
          "attachedConnections": [
            "All_Vnets"
          ]
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-05-01/examples/VirtualHubRouteTableV2Put.json
      func ExampleVirtualHubRouteTableV2SClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewVirtualHubRouteTableV2SClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx, "rg1", "virtualHub1", "virtualHubRouteTable1a", armnetwork.VirtualHubRouteTableV2{
      		Properties: &armnetwork.VirtualHubRouteTableV2Properties{
      			AttachedConnections: []*string{
      				to.Ptr("All_Vnets")},
      			Routes: []*armnetwork.VirtualHubRouteV2{
      				{
      					DestinationType: to.Ptr("CIDR"),
      					Destinations: []*string{
      						to.Ptr("20.10.0.0/16"),
      						to.Ptr("20.20.0.0/16")},
      					NextHopType: to.Ptr("IPAddress"),
      					NextHops: []*string{
      						to.Ptr("10.0.0.68")},
      				},
      				{
      					DestinationType: to.Ptr("CIDR"),
      					Destinations: []*string{
      						to.Ptr("0.0.0.0/0")},
      					NextHopType: to.Ptr("IPAddress"),
      					NextHops: []*string{
      						to.Ptr("10.0.0.68")},
      				}},
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv2.0.1/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates a VirtualHubRouteTableV2 resource if it doesn't exist else updates the existing VirtualHubRouteTableV2.
       *
       * @summary Creates a VirtualHubRouteTableV2 resource if it doesn't exist else updates the existing VirtualHubRouteTableV2.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-05-01/examples/VirtualHubRouteTableV2Put.json
       */
      async function virtualHubRouteTableV2Put() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const virtualHubName = "virtualHub1";
        const routeTableName = "virtualHubRouteTable1a";
        const virtualHubRouteTableV2Parameters = {
          attachedConnections: ["All_Vnets"],
          routes: [
            {
              destinationType: "CIDR",
              destinations: ["20.10.0.0/16", "20.20.0.0/16"],
              nextHopType: "IPAddress",
              nextHops: ["10.0.0.68"],
            },
            {
              destinationType: "CIDR",
              destinations: ["0.0.0.0/0"],
              nextHopType: "IPAddress",
              nextHops: ["10.0.0.68"],
            },
          ],
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.virtualHubRouteTableV2S.beginCreateOrUpdateAndWait(
          resourceGroupName,
          virtualHubName,
          routeTableName,
          virtualHubRouteTableV2Parameters
        );
        console.log(result);
      }

      virtualHubRouteTableV2Put().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_30.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeTables/virtualHubRouteTable1a",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "name": "virtualHubRouteTable1a",
        "properties": {
          "provisioningState": "Succeeded",
          "routes": [
            {
              "destinationType": "CIDR",
              "destinations": [
                "20.10.0.0/16",
                "20.20.0.0/16"
              ],
              "nextHopType": "IPAddress",
              "nextHops": [
                "10.0.0.68"
              ]
            },
            {
              "destinationType": "CIDR",
              "destinations": [
                "0.0.0.0/0"
              ],
              "nextHopType": "IPAddress",
              "nextHops": [
                "10.0.0.68"
              ]
            }
          ],
          "attachedConnections": [
            "All_Vnets"
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeTables/virtualHubRouteTable1a",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "name": "virtualHubRouteTable1a",
        "properties": {
          "provisioningState": "Succeeded",
          "routes": [
            {
              "destinationType": "CIDR",
              "destinations": [
                "20.10.0.0/16",
                "20.20.0.0/16"
              ],
              "nextHopType": "IPAddress",
              "nextHops": [
                "10.0.0.68"
              ]
            },
            {
              "destinationType": "CIDR",
              "destinations": [
                "0.0.0.0/0"
              ],
              "nextHopType": "IPAddress",
              "nextHops": [
                "10.0.0.68"
              ]
            }
          ],
          "attachedConnections": [
            "All_Vnets"
          ]
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Creates a VirtualHubRouteTableV2 resource if it doesn't exist else updates the existing VirtualHubRouteTableV2.
errorCodes: []
