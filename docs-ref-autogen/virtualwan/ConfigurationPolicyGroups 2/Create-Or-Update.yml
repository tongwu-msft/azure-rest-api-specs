### YamlMime:RESTOperation
uid: management.azure.com.virtualwan.configurationpolicygroups2.createorupdate
name: Create Or Update
service: Virtual WAN
groupName: ConfigurationPolicyGroups 2
apiVersion: 2021-08-01
summary: Creates a ConfigurationPolicyGroup if it doesn't exist else updates the existing one.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}/configurationPolicyGroups/{configurationPolicyGroupName}?api-version=2021-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The resource group name of the ConfigurationPolicyGroup.
  types:
  - uid: string
- name: vpnServerConfigurationName
  in: path
  isRequired: true
  description: The name of the VpnServerConfiguration.
  types:
  - uid: string
- name: configurationPolicyGroupName
  in: path
  isRequired: true
  description: The name of the ConfigurationPolicyGroup.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Request successful. Returns the details of the VpnServerConfiguration PolicyGroup created or updated.
  types:
  - uid: VpnServerConfigurationPolicyGroup
- name: 201 Created
  description: Request successful. Returns the details of the VpnServerConfiguration PolicyGroup retrieved.
  types:
  - uid: VpnServerConfigurationPolicyGroup
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: properties.isDefault
    in: body
    description: Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
    types:
    - uid: boolean
  - name: properties.priority
    in: body
    description: Priority for VpnServerConfigurationPolicyGroup.
    types:
    - uid: integer
  - name: properties.policyMembers
    in: body
    description: Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
    types:
    - uid: VpnServerConfigurationPolicyGroupMember
      isArray: true
  - name: id
    in: body
    description: Resource ID.
    types:
    - uid: string
requestHeader: []
definitions:
- name: VpnServerConfigurationPolicyGroupMember
  description: VpnServerConfiguration PolicyGroup member
  kind: object
  properties:
  - name: name
    description: Name of the VpnServerConfigurationPolicyGroupMember.
    types:
    - uid: string
  - name: attributeType
    description: The Vpn Policy member attribute type.
    types:
    - uid: VpnPolicyMemberAttributeType
  - name: attributeValue
    description: The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
    types:
    - uid: string
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: VpnServerConfigurationPolicyGroup
  description: VpnServerConfigurationPolicyGroup Resource.
  kind: object
  properties:
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: properties.isDefault
    description: Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
    types:
    - uid: boolean
  - name: properties.priority
    description: Priority for VpnServerConfigurationPolicyGroup.
    types:
    - uid: integer
  - name: properties.policyMembers
    description: Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
    types:
    - uid: VpnServerConfigurationPolicyGroupMember
      isArray: true
  - name: properties.p2SConnectionConfigurations
    isReadyOnly: true
    description: List of references to P2SConnectionConfigurations.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the VpnServerConfigurationPolicyGroup resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: VpnPolicyMemberAttributeType
  description: The Vpn Policy member attribute type.
  kind: enum
  properties:
  - name: CertificateGroupId
    types:
    - uid: string
  - name: AADGroupId
    types:
    - uid: string
  - name: RadiusAzureGroupId
    types:
    - uid: string
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: ConfigurationPolicyGroupPut
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/configurationPolicyGroups/policyGroup1?api-version=2021-08-01
    body: >-
      {
        "properties": {
          "isDefault": true,
          "priority": 0,
          "policyMembers": [
            {
              "name": "policy1",
              "attributeType": "RadiusAzureGroupId",
              "attributeValue": "6ad1bd08"
            },
            {
              "name": "policy2",
              "attributeType": "CertificateGroupId",
              "attributeValue": "red.com"
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/configurationPolicyGroups/policyGroup1?api-version=2021-08-01

      {
        "properties": {
          "isDefault": true,
          "priority": 0,
          "policyMembers": [
            {
              "name": "policy1",
              "attributeType": "RadiusAzureGroupId",
              "attributeValue": "6ad1bd08"
            },
            {
              "name": "policy2",
              "attributeType": "CertificateGroupId",
              "attributeValue": "red.com"
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.fluent.models.VpnServerConfigurationPolicyGroupInner;
      import com.azure.resourcemanager.network.models.VpnPolicyMemberAttributeType;
      import com.azure.resourcemanager.network.models.VpnServerConfigurationPolicyGroupMember;
      import java.util.Arrays;

      /** Samples for ConfigurationPolicyGroups CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/ConfigurationPolicyGroupPut.json
           */
          /**
           * Sample code: ConfigurationPolicyGroupPut.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void configurationPolicyGroupPut(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getConfigurationPolicyGroups()
                  .createOrUpdate(
                      "rg1",
                      "vpnServerConfiguration1",
                      "policyGroup1",
                      new VpnServerConfigurationPolicyGroupInner()
                          .withIsDefault(true)
                          .withPriority(0)
                          .withPolicyMembers(
                              Arrays
                                  .asList(
                                      new VpnServerConfigurationPolicyGroupMember()
                                          .withName("policy1")
                                          .withAttributeType(VpnPolicyMemberAttributeType.RADIUS_AZURE_GROUP_ID)
                                          .withAttributeValue("6ad1bd08"),
                                      new VpnServerConfigurationPolicyGroupMember()
                                          .withName("policy2")
                                          .withAttributeType(VpnPolicyMemberAttributeType.CERTIFICATE_GROUP_ID)
                                          .withAttributeValue("red.com"))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/ConfigurationPolicyGroupPut.json
      func ExampleConfigurationPolicyGroupsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewConfigurationPolicyGroupsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"rg1",
      		"vpnServerConfiguration1",
      		"policyGroup1",
      		armnetwork.VPNServerConfigurationPolicyGroup{
      			Properties: &armnetwork.VPNServerConfigurationPolicyGroupProperties{
      				IsDefault: to.Ptr(true),
      				PolicyMembers: []*armnetwork.VPNServerConfigurationPolicyGroupMember{
      					{
      						Name:           to.Ptr("policy1"),
      						AttributeType:  to.Ptr(armnetwork.VPNPolicyMemberAttributeTypeRadiusAzureGroupID),
      						AttributeValue: to.Ptr("6ad1bd08"),
      					},
      					{
      						Name:           to.Ptr("policy2"),
      						AttributeType:  to.Ptr(armnetwork.VPNPolicyMemberAttributeTypeCertificateGroupID),
      						AttributeValue: to.Ptr("red.com"),
      					}},
      				Priority: to.Ptr[int32](0),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.0.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates a ConfigurationPolicyGroup if it doesn't exist else updates the existing one.
       *
       * @summary Creates a ConfigurationPolicyGroup if it doesn't exist else updates the existing one.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/ConfigurationPolicyGroupPut.json
       */
      async function configurationPolicyGroupPut() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const vpnServerConfigurationName = "vpnServerConfiguration1";
        const configurationPolicyGroupName = "policyGroup1";
        const vpnServerConfigurationPolicyGroupParameters = {
          isDefault: true,
          policyMembers: [
            {
              name: "policy1",
              attributeType: "RadiusAzureGroupId",
              attributeValue: "6ad1bd08",
            },
            {
              name: "policy2",
              attributeType: "CertificateGroupId",
              attributeValue: "red.com",
            },
          ],
          priority: 0,
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.configurationPolicyGroups.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vpnServerConfigurationName,
          configurationPolicyGroupName,
          vpnServerConfigurationPolicyGroupParameters
        );
        console.log(result);
      }

      configurationPolicyGroupPut().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_28.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "policyGroup1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup1",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "properties": {
          "provisioningState": "Succeeded",
          "isDefault": true,
          "priority": 0,
          "policyMembers": [
            {
              "name": "policy1",
              "attributeType": "RadiusAzureGroupId",
              "attributeValue": "6ad1bd08"
            },
            {
              "name": "policy2",
              "attributeType": "CertificateGroupId",
              "attributeValue": "red.com"
            }
          ],
          "p2SConnectionConfigurations": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1"
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "policyGroup1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup1",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "properties": {
          "provisioningState": "Succeeded",
          "isDefault": true,
          "priority": 0,
          "policyMembers": [
            {
              "name": "policy1",
              "attributeType": "RadiusAzureGroupId",
              "attributeValue": "6ad1bd08"
            },
            {
              "name": "policy2",
              "attributeType": "CertificateGroupId",
              "attributeValue": "red.com"
            }
          ]
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Virtual WAN service - Creates a ConfigurationPolicyGroup if it doesn't exist else updates the existing one.
errorCodes: []
