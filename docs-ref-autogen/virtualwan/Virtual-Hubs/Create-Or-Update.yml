### YamlMime:RESTOperation
uid: management.azure.com.virtualwan.virtualhubs.createorupdate
name: Create Or Update
service: Virtual WAN
groupName: Virtual Hubs
apiVersion: 2021-08-01
summary: Creates a VirtualHub resource if it doesn't exist else updates the existing VirtualHub.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}?api-version=2021-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The resource group name of the VirtualHub.
  types:
  - uid: string
- name: virtualHubName
  in: path
  isRequired: true
  description: The name of the VirtualHub.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Request successful. Returns the details of the VirtualHub created or updated.
  types:
  - uid: VirtualHub
- name: 201 Created
  description: Request received successfully. Returns the details of the VirtualHub created or updated.
  types:
  - uid: VirtualHub
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: properties.virtualWan
    in: body
    description: The VirtualWAN to which the VirtualHub belongs.
    types:
    - uid: SubResource
  - name: properties.vpnGateway
    in: body
    description: The VpnGateway associated with this VirtualHub.
    types:
    - uid: SubResource
  - name: properties.p2SVpnGateway
    in: body
    description: The P2SVpnGateway associated with this VirtualHub.
    types:
    - uid: SubResource
  - name: properties.expressRouteGateway
    in: body
    description: The expressRouteGateway associated with this VirtualHub.
    types:
    - uid: SubResource
  - name: properties.azureFirewall
    in: body
    description: The azureFirewall associated with this VirtualHub.
    types:
    - uid: SubResource
  - name: properties.securityPartnerProvider
    in: body
    description: The securityPartnerProvider associated with this VirtualHub.
    types:
    - uid: SubResource
  - name: properties.addressPrefix
    in: body
    description: Address-prefix for this VirtualHub.
    types:
    - uid: string
  - name: properties.routeTable
    in: body
    description: The routeTable associated with this virtual hub.
    types:
    - uid: VirtualHubRouteTable
  - name: properties.securityProviderName
    in: body
    description: The Security Provider name.
    types:
    - uid: string
  - name: properties.virtualHubRouteTableV2s
    in: body
    description: List of all virtual hub route table v2s associated with this VirtualHub.
    types:
    - uid: VirtualHubRouteTableV2
      isArray: true
  - name: properties.sku
    in: body
    description: The sku of this VirtualHub.
    types:
    - uid: string
  - name: properties.virtualRouterAsn
    in: body
    description: VirtualRouter ASN.
    types:
    - uid: integer
  - name: properties.virtualRouterIps
    in: body
    description: VirtualRouter IPs.
    types:
    - uid: string
      isArray: true
  - name: properties.allowBranchToBranchTraffic
    in: body
    description: Flag to control transit for VirtualRouter hub.
    types:
    - uid: boolean
  - name: properties.preferredRoutingGateway
    in: body
    description: The preferred gateway to route on-prem traffic
    types:
    - uid: PreferredRoutingGateway
  - name: properties.hubRoutingPreference
    in: body
    description: The hubRoutingPreference of this VirtualHub.
    types:
    - uid: HubRoutingPreference
  - name: id
    in: body
    description: Resource ID.
    types:
    - uid: string
  - name: location
    in: body
    isRequired: true
    description: Resource location.
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: VirtualHubRouteTable
  description: VirtualHub route table.
  kind: object
  properties:
  - name: routes
    description: List of all routes.
    types:
    - uid: VirtualHubRoute
      isArray: true
- name: VirtualHubRouteTableV2
  description: VirtualHubRouteTableV2 Resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.routes
    description: List of all routes.
    types:
    - uid: VirtualHubRouteV2
      isArray: true
  - name: properties.attachedConnections
    description: List of all connections attached to this route table v2.
    types:
    - uid: string
      isArray: true
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the virtual hub route table v2 resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: VirtualHub
  description: VirtualHub Resource.
  kind: object
  properties:
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: kind
    isReadyOnly: true
    description: Kind of service virtual hub. This is metadata used for the Azure portal experience for Route Server.
    types:
    - uid: string
  - name: properties.virtualWan
    description: The VirtualWAN to which the VirtualHub belongs.
    types:
    - uid: SubResource
  - name: properties.vpnGateway
    description: The VpnGateway associated with this VirtualHub.
    types:
    - uid: SubResource
  - name: properties.p2SVpnGateway
    description: The P2SVpnGateway associated with this VirtualHub.
    types:
    - uid: SubResource
  - name: properties.expressRouteGateway
    description: The expressRouteGateway associated with this VirtualHub.
    types:
    - uid: SubResource
  - name: properties.azureFirewall
    description: The azureFirewall associated with this VirtualHub.
    types:
    - uid: SubResource
  - name: properties.securityPartnerProvider
    description: The securityPartnerProvider associated with this VirtualHub.
    types:
    - uid: SubResource
  - name: properties.addressPrefix
    description: Address-prefix for this VirtualHub.
    types:
    - uid: string
  - name: properties.routeTable
    description: The routeTable associated with this virtual hub.
    types:
    - uid: VirtualHubRouteTable
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the virtual hub resource.
    types:
    - uid: ProvisioningState
  - name: properties.securityProviderName
    description: The Security Provider name.
    types:
    - uid: string
  - name: properties.virtualHubRouteTableV2s
    description: List of all virtual hub route table v2s associated with this VirtualHub.
    types:
    - uid: VirtualHubRouteTableV2
      isArray: true
  - name: properties.sku
    description: The sku of this VirtualHub.
    types:
    - uid: string
  - name: properties.routingState
    isReadyOnly: true
    description: The routing state.
    types:
    - uid: RoutingState
  - name: properties.bgpConnections
    isReadyOnly: true
    description: List of references to Bgp Connections.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.ipConfigurations
    isReadyOnly: true
    description: List of references to IpConfigurations.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.virtualRouterAsn
    description: VirtualRouter ASN.
    types:
    - uid: integer
  - name: properties.virtualRouterIps
    description: VirtualRouter IPs.
    types:
    - uid: string
      isArray: true
  - name: properties.allowBranchToBranchTraffic
    description: Flag to control transit for VirtualRouter hub.
    types:
    - uid: boolean
  - name: properties.preferredRoutingGateway
    description: The preferred gateway to route on-prem traffic
    types:
    - uid: PreferredRoutingGateway
  - name: properties.hubRoutingPreference
    description: The hubRoutingPreference of this VirtualHub.
    types:
    - uid: HubRoutingPreference
  - name: id
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: VirtualHubRoute
  description: VirtualHub route.
  kind: object
  properties:
  - name: addressPrefixes
    description: List of all addressPrefixes.
    types:
    - uid: string
      isArray: true
  - name: nextHopIpAddress
    description: NextHop ip address.
    types:
    - uid: string
- name: VirtualHubRouteV2
  description: VirtualHubRouteTableV2 route.
  kind: object
  properties:
  - name: destinationType
    description: The type of destinations.
    types:
    - uid: string
  - name: destinations
    description: List of all destinations.
    types:
    - uid: string
      isArray: true
  - name: nextHopType
    description: The type of next hops.
    types:
    - uid: string
  - name: nextHops
    description: NextHops ip address.
    types:
    - uid: string
      isArray: true
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: RoutingState
  description: The current routing state of the VirtualHub.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: Provisioned
    types:
    - uid: string
  - name: Provisioning
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: PreferredRoutingGateway
  description: The preferred routing gateway types
  kind: enum
  properties:
  - name: ExpressRoute
    types:
    - uid: string
  - name: VpnGateway
    types:
    - uid: string
  - name: None
    types:
    - uid: string
- name: HubRoutingPreference
  description: The hub routing preference gateway types
  kind: enum
  properties:
  - name: ExpressRoute
    types:
    - uid: string
  - name: VpnGateway
    types:
    - uid: string
  - name: ASPath
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: VirtualHubPut
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2?api-version=2021-08-01
    body: >-
      {
        "location": "West US",
        "tags": {
          "key1": "value1"
        },
        "properties": {
          "virtualWan": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"
          },
          "addressPrefix": "10.168.0.0/24",
          "sku": "Basic"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2?api-version=2021-08-01

      {
        "location": "West US",
        "tags": {
          "key1": "value1"
        },
        "properties": {
          "virtualWan": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"
          },
          "addressPrefix": "10.168.0.0/24",
          "sku": "Basic"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.fluent.models.VirtualHubInner;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for VirtualHubs CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualHubPut.json
           */
          /**
           * Sample code: VirtualHubPut.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void virtualHubPut(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getVirtualHubs()
                  .createOrUpdate(
                      "rg1",
                      "virtualHub2",
                      new VirtualHubInner()
                          .withLocation("West US")
                          .withTags(mapOf("key1", "value1"))
                          .withVirtualWan(
                              new SubResource()
                                  .withId(
                                      "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"))
                          .withAddressPrefix("10.168.0.0/24")
                          .withSku("Basic"),
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualHubPut.json
      func ExampleVirtualHubsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewVirtualHubsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"rg1",
      		"virtualHub2",
      		armnetwork.VirtualHub{
      			Location: to.Ptr("West US"),
      			Tags: map[string]*string{
      				"key1": to.Ptr("value1"),
      			},
      			Properties: &armnetwork.VirtualHubProperties{
      				AddressPrefix: to.Ptr("10.168.0.0/24"),
      				SKU:           to.Ptr("Basic"),
      				VirtualWan: &armnetwork.SubResource{
      					ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"),
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.0.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates a VirtualHub resource if it doesn't exist else updates the existing VirtualHub.
       *
       * @summary Creates a VirtualHub resource if it doesn't exist else updates the existing VirtualHub.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualHubPut.json
       */
      async function virtualHubPut() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const virtualHubName = "virtualHub2";
        const virtualHubParameters = {
          addressPrefix: "10.168.0.0/24",
          location: "West US",
          sku: "Basic",
          tags: { key1: "value1" },
          virtualWan: {
            id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.virtualHubs.beginCreateOrUpdateAndWait(
          resourceGroupName,
          virtualHubName,
          virtualHubParameters
        );
        console.log(result);
      }

      virtualHubPut().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_28.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "location": "West US",
        "name": "virtualHub2",
        "type": "Microsoft.Network/virtualHubs",
        "properties": {
          "provisioningState": "Succeeded",
          "virtualWan": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"
          },
          "virtualHubRouteTableV2s": [],
          "addressPrefix": "10.168.0.0/24",
          "sku": "Basic",
          "routingState": "Provisioned",
          "virtualRouterAsn": 65515,
          "virtualRouterIps": [
            "10.10.1.12",
            "10.10.1.13"
          ],
          "allowBranchToBranchTraffic": false,
          "preferredRoutingGateway": "ExpressRoute",
          "hubRoutingPreference": "ExpressRoute"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "location": "West US",
        "name": "virtualHub2",
        "type": "Microsoft.Network/virtualHubs",
        "properties": {
          "provisioningState": "Succeeded",
          "virtualWan": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"
          },
          "virtualHubRouteTableV2s": [],
          "addressPrefix": "10.168.0.0/24",
          "sku": "Basic",
          "routingState": "Provisioned",
          "virtualRouterAsn": 65515,
          "virtualRouterIps": [
            "10.10.1.12",
            "10.10.1.13"
          ],
          "allowBranchToBranchTraffic": false,
          "preferredRoutingGateway": "ExpressRoute",
          "hubRoutingPreference": "ExpressRoute"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Virtual WAN service - Creates a VirtualHub resource if it doesn't exist else updates the existing VirtualHub.
errorCodes: []
