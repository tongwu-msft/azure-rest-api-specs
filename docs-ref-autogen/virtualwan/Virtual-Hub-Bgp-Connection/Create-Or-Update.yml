### YamlMime:RESTOperation
uid: management.azure.com.virtualwan.virtualhubbgpconnection.createorupdate
name: Create Or Update
service: Virtual WAN
groupName: Virtual Hub Bgp Connection
apiVersion: 2021-08-01
summary: Creates a VirtualHubBgpConnection resource if it doesn't exist else updates the existing VirtualHubBgpConnection.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections/{connectionName}?api-version=2021-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The resource group name of the VirtualHub.
  types:
  - uid: string
- name: virtualHubName
  in: path
  isRequired: true
  description: The name of the VirtualHub.
  types:
  - uid: string
- name: connectionName
  in: path
  isRequired: true
  description: The name of the connection.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Request successful. Returns the details of the BgpConnection created or updated.
  types:
  - uid: BgpConnection
- name: 201 Created
  description: Request received successfully. Returns the details of the BgpConnection created or updated.
  types:
  - uid: BgpConnection
- name: Other Status Codes
  description: Error.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    description: Name of the connection.
    types:
    - uid: string
  - name: properties.peerAsn
    in: body
    description: Peer ASN.
    types:
    - uid: integer
  - name: properties.peerIp
    in: body
    description: Peer IP.
    types:
    - uid: string
  - name: properties.hubVirtualNetworkConnection
    in: body
    description: The reference to the HubVirtualNetworkConnection resource.
    types:
    - uid: SubResource
  - name: id
    in: body
    description: Resource ID.
    types:
    - uid: string
requestHeader: []
definitions:
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: BgpConnection
  description: Virtual Appliance Site resource.
  kind: object
  properties:
  - name: name
    description: Name of the connection.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Connection type.
    types:
    - uid: string
  - name: properties.peerAsn
    description: Peer ASN.
    types:
    - uid: integer
  - name: properties.peerIp
    description: Peer IP.
    types:
    - uid: string
  - name: properties.hubVirtualNetworkConnection
    description: The reference to the HubVirtualNetworkConnection resource.
    types:
    - uid: SubResource
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the resource.
    types:
    - uid: ProvisioningState
  - name: properties.connectionState
    isReadyOnly: true
    description: The current state of the VirtualHub to Peer.
    types:
    - uid: HubBgpConnectionStatus
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: HubBgpConnectionStatus
  description: The current state of the VirtualHub to Peer.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: Connecting
    types:
    - uid: string
  - name: Connected
    types:
    - uid: string
  - name: NotConnected
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: VirtualHubRouteTableV2Put
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/bgpConnections/conn1?api-version=2021-08-01
    body: >-
      {
        "properties": {
          "peerIp": "192.168.1.5",
          "peerAsn": 20000,
          "hubVirtualNetworkConnection": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubVirtualNetworkConnections/hubVnetConn1"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/bgpConnections/conn1?api-version=2021-08-01

      {
        "properties": {
          "peerIp": "192.168.1.5",
          "peerAsn": 20000,
          "hubVirtualNetworkConnection": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubVirtualNetworkConnections/hubVnetConn1"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.fluent.models.BgpConnectionInner;

      /** Samples for VirtualHubBgpConnections CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualHubBgpConnectionPut.json
           */
          /**
           * Sample code: VirtualHubRouteTableV2Put.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void virtualHubRouteTableV2Put(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getVirtualHubBgpConnections()
                  .createOrUpdate(
                      "rg1",
                      "hub1",
                      "conn1",
                      new BgpConnectionInner()
                          .withPeerAsn(20000L)
                          .withPeerIp("192.168.1.5")
                          .withHubVirtualNetworkConnection(
                              new SubResource()
                                  .withId(
                                      "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubVirtualNetworkConnections/hubVnetConn1")),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualHubBgpConnectionPut.json
      func ExampleVirtualHubBgpConnectionClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewVirtualHubBgpConnectionClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"rg1",
      		"hub1",
      		"conn1",
      		armnetwork.BgpConnection{
      			Properties: &armnetwork.BgpConnectionProperties{
      				HubVirtualNetworkConnection: &armnetwork.SubResource{
      					ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubVirtualNetworkConnections/hubVnetConn1"),
      				},
      				PeerAsn: to.Ptr[int64](20000),
      				PeerIP:  to.Ptr("192.168.1.5"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.0.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates a VirtualHubBgpConnection resource if it doesn't exist else updates the existing VirtualHubBgpConnection.
       *
       * @summary Creates a VirtualHubBgpConnection resource if it doesn't exist else updates the existing VirtualHubBgpConnection.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualHubBgpConnectionPut.json
       */
      async function virtualHubRouteTableV2Put() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const virtualHubName = "hub1";
        const connectionName = "conn1";
        const parameters = {
          hubVirtualNetworkConnection: {
            id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubVirtualNetworkConnections/hubVnetConn1",
          },
          peerAsn: 20000,
          peerIp: "192.168.1.5",
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.virtualHubBgpConnection.beginCreateOrUpdateAndWait(
          resourceGroupName,
          virtualHubName,
          connectionName,
          parameters
        );
        console.log(result);
      }

      virtualHubRouteTableV2Put().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_28.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "conn1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/bgpConnections/conn1",
        "etag": "W/\"72090554-7e3b-43f2-80ad-99a9020dcb11\"",
        "properties": {
          "provisioningState": "Succeeded",
          "peerIp": "192.168.1.5",
          "peerAsn": 20000,
          "connectionState": "Connected",
          "hubVirtualNetworkConnection": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubVirtualNetworkConnections/hubVnetConn1"
          }
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "conn1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/bgpConnections/conn1",
        "etag": "W/\"72090554-7e3b-43f2-80ad-99a9020dcb11\"",
        "properties": {
          "provisioningState": "Succeeded",
          "peerIp": "192.168.1.5",
          "peerAsn": 20000,
          "connectionState": "Connected",
          "hubVirtualNetworkConnection": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubVirtualNetworkConnections/hubVnetConn1"
          }
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Creates a VirtualHubBgpConnection resource if it doesn't exist else updates the existing VirtualHubBgpConnection.
errorCodes: []
