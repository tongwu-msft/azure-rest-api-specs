### YamlMime:RESTOperation
uid: management.azure.com.virtualwan.vpnserverconfigurations.createorupdate
name: Create Or Update
service: Virtual WAN
groupName: Vpn Server Configurations
apiVersion: 2022-05-01
summary: Creates a VpnServerConfiguration resource if it doesn't exist else updates the existing VpnServerConfiguration.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}?api-version=2022-05-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The resource group name of the VpnServerConfiguration.
  types:
  - uid: string
- name: vpnServerConfigurationName
  in: path
  isRequired: true
  description: The name of the VpnServerConfiguration being created or updated.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Request successful. Returns the details of the VpnServerConfiguration created or updated.
  types:
  - uid: VpnServerConfiguration
- name: 201 Created
  description: Request received successfully. Returns the details of the VpnServerConfiguration created or updated.
  types:
  - uid: VpnServerConfiguration
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: properties.name
    in: body
    description: The name of the VpnServerConfiguration that is unique within a resource group.
    types:
    - uid: string
  - name: properties.vpnProtocols
    in: body
    description: VPN protocols for the VpnServerConfiguration.
    types:
    - uid: string
      isArray: true
  - name: properties.vpnAuthenticationTypes
    in: body
    description: VPN authentication types for the VpnServerConfiguration.
    types:
    - uid: string
      isArray: true
  - name: properties.vpnClientRootCertificates
    in: body
    description: VPN client root certificate of VpnServerConfiguration.
    types:
    - uid: VpnServerConfigVpnClientRootCertificate
      isArray: true
  - name: properties.vpnClientRevokedCertificates
    in: body
    description: VPN client revoked certificate of VpnServerConfiguration.
    types:
    - uid: VpnServerConfigVpnClientRevokedCertificate
      isArray: true
  - name: properties.radiusServerRootCertificates
    in: body
    description: Radius Server root certificate of VpnServerConfiguration.
    types:
    - uid: VpnServerConfigRadiusServerRootCertificate
      isArray: true
  - name: properties.radiusClientRootCertificates
    in: body
    description: Radius client root certificate of VpnServerConfiguration.
    types:
    - uid: VpnServerConfigRadiusClientRootCertificate
      isArray: true
  - name: properties.vpnClientIpsecPolicies
    in: body
    description: VpnClientIpsecPolicies for VpnServerConfiguration.
    types:
    - uid: IpsecPolicy
      isArray: true
  - name: properties.radiusServerAddress
    in: body
    description: The radius server address property of the VpnServerConfiguration resource for point to site client connection.
    types:
    - uid: string
  - name: properties.radiusServerSecret
    in: body
    description: The radius secret property of the VpnServerConfiguration resource for point to site client connection.
    types:
    - uid: string
  - name: properties.radiusServers
    in: body
    description: Multiple Radius Server configuration for VpnServerConfiguration.
    types:
    - uid: RadiusServer
      isArray: true
  - name: properties.aadAuthenticationParameters
    in: body
    description: The set of aad vpn authentication parameters.
    types:
    - uid: AadAuthenticationParameters
  - name: properties.configurationPolicyGroups
    in: body
    description: List of all VpnServerConfigurationPolicyGroups.
    types:
    - uid: VpnServerConfigurationPolicyGroup
      isArray: true
  - name: id
    in: body
    description: Resource ID.
    types:
    - uid: string
  - name: location
    in: body
    description: Resource location.
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: VpnServerConfigVpnClientRootCertificate
  description: Properties of VPN client root certificate of VpnServerConfiguration.
  kind: object
  properties:
  - name: name
    description: The certificate name.
    types:
    - uid: string
  - name: publicCertData
    description: The certificate public data.
    types:
    - uid: string
- name: VpnServerConfigVpnClientRevokedCertificate
  description: Properties of the revoked VPN client certificate of VpnServerConfiguration.
  kind: object
  properties:
  - name: name
    description: The certificate name.
    types:
    - uid: string
  - name: thumbprint
    description: The revoked VPN client certificate thumbprint.
    types:
    - uid: string
- name: VpnServerConfigRadiusServerRootCertificate
  description: Properties of Radius Server root certificate of VpnServerConfiguration.
  kind: object
  properties:
  - name: name
    description: The certificate name.
    types:
    - uid: string
  - name: publicCertData
    description: The certificate public data.
    types:
    - uid: string
- name: VpnServerConfigRadiusClientRootCertificate
  description: Properties of the Radius client root certificate of VpnServerConfiguration.
  kind: object
  properties:
  - name: name
    description: The certificate name.
    types:
    - uid: string
  - name: thumbprint
    description: The Radius client root certificate thumbprint.
    types:
    - uid: string
- name: IpsecPolicy
  description: An IPSec Policy configuration for a virtual network gateway connection.
  kind: object
  properties:
  - name: saLifeTimeSeconds
    description: The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
    types:
    - uid: integer
  - name: saDataSizeKilobytes
    description: The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
    types:
    - uid: integer
  - name: ipsecEncryption
    description: The IPSec encryption algorithm (IKE phase 1).
    types:
    - uid: IpsecEncryption
  - name: ipsecIntegrity
    description: The IPSec integrity algorithm (IKE phase 1).
    types:
    - uid: IpsecIntegrity
  - name: ikeEncryption
    description: The IKE encryption algorithm (IKE phase 2).
    types:
    - uid: IkeEncryption
  - name: ikeIntegrity
    description: The IKE integrity algorithm (IKE phase 2).
    types:
    - uid: IkeIntegrity
  - name: dhGroup
    description: The DH Group used in IKE Phase 1 for initial SA.
    types:
    - uid: DhGroup
  - name: pfsGroup
    description: The Pfs Group used in IKE Phase 2 for new child SA.
    types:
    - uid: PfsGroup
- name: RadiusServer
  description: Radius Server Settings.
  kind: object
  properties:
  - name: radiusServerAddress
    description: The address of this radius server.
    types:
    - uid: string
  - name: radiusServerScore
    description: The initial score assigned to this radius server.
    types:
    - uid: integer
  - name: radiusServerSecret
    description: The secret used for this radius server.
    types:
    - uid: string
- name: AadAuthenticationParameters
  description: AAD Vpn authentication type related parameters.
  kind: object
  properties:
  - name: aadTenant
    description: AAD Vpn authentication parameter AAD tenant.
    types:
    - uid: string
  - name: aadAudience
    description: AAD Vpn authentication parameter AAD audience.
    types:
    - uid: string
  - name: aadIssuer
    description: AAD Vpn authentication parameter AAD issuer.
    types:
    - uid: string
- name: P2SVpnGateway
  description: P2SVpnGateway Resource.
  kind: object
  properties:
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.virtualHub
    description: The VirtualHub to which the gateway belongs.
    types:
    - uid: SubResource
  - name: properties.p2SConnectionConfigurations
    description: List of all p2s connection configurations of the gateway.
    types:
    - uid: P2SConnectionConfiguration
      isArray: true
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the P2S VPN gateway resource.
    types:
    - uid: ProvisioningState
  - name: properties.vpnGatewayScaleUnit
    description: The scale unit for this p2s vpn gateway.
    types:
    - uid: integer
  - name: properties.vpnServerConfiguration
    description: The VpnServerConfiguration to which the p2sVpnGateway is attached to.
    types:
    - uid: SubResource
  - name: properties.vpnClientConnectionHealth
    isReadyOnly: true
    description: All P2S VPN clients' connection health status.
    types:
    - uid: VpnClientConnectionHealth
  - name: properties.customDnsServers
    description: List of all customer specified DNS servers IP addresses.
    types:
    - uid: string
      isArray: true
  - name: properties.isRoutingPreferenceInternet
    description: Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.
    types:
    - uid: boolean
  - name: id
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: VpnServerConfigurationPolicyGroup
  description: VpnServerConfigurationPolicyGroup Resource.
  kind: object
  properties:
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: properties.isDefault
    description: Shows if this is a Default VpnServerConfigurationPolicyGroup or not.
    types:
    - uid: boolean
  - name: properties.priority
    description: Priority for VpnServerConfigurationPolicyGroup.
    types:
    - uid: integer
  - name: properties.policyMembers
    description: Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.
    types:
    - uid: VpnServerConfigurationPolicyGroupMember
      isArray: true
  - name: properties.p2SConnectionConfigurations
    isReadyOnly: true
    description: List of references to P2SConnectionConfigurations.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the VpnServerConfigurationPolicyGroup resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: VpnServerConfiguration
  description: VpnServerConfiguration Resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.name
    description: The name of the VpnServerConfiguration that is unique within a resource group.
    types:
    - uid: string
  - name: properties.vpnProtocols
    description: VPN protocols for the VpnServerConfiguration.
    types:
    - uid: string
      isArray: true
  - name: properties.vpnAuthenticationTypes
    description: VPN authentication types for the VpnServerConfiguration.
    types:
    - uid: string
      isArray: true
  - name: properties.vpnClientRootCertificates
    description: VPN client root certificate of VpnServerConfiguration.
    types:
    - uid: VpnServerConfigVpnClientRootCertificate
      isArray: true
  - name: properties.vpnClientRevokedCertificates
    description: VPN client revoked certificate of VpnServerConfiguration.
    types:
    - uid: VpnServerConfigVpnClientRevokedCertificate
      isArray: true
  - name: properties.radiusServerRootCertificates
    description: Radius Server root certificate of VpnServerConfiguration.
    types:
    - uid: VpnServerConfigRadiusServerRootCertificate
      isArray: true
  - name: properties.radiusClientRootCertificates
    description: Radius client root certificate of VpnServerConfiguration.
    types:
    - uid: VpnServerConfigRadiusClientRootCertificate
      isArray: true
  - name: properties.vpnClientIpsecPolicies
    description: VpnClientIpsecPolicies for VpnServerConfiguration.
    types:
    - uid: IpsecPolicy
      isArray: true
  - name: properties.radiusServerAddress
    description: The radius server address property of the VpnServerConfiguration resource for point to site client connection.
    types:
    - uid: string
  - name: properties.radiusServerSecret
    description: The radius secret property of the VpnServerConfiguration resource for point to site client connection.
    types:
    - uid: string
  - name: properties.radiusServers
    description: Multiple Radius Server configuration for VpnServerConfiguration.
    types:
    - uid: RadiusServer
      isArray: true
  - name: properties.aadAuthenticationParameters
    description: The set of aad vpn authentication parameters.
    types:
    - uid: AadAuthenticationParameters
  - name: properties.provisioningState
    isReadyOnly: true
    description: "The provisioning state of the VpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
    types:
    - uid: string
  - name: properties.p2SVpnGateways
    isReadyOnly: true
    description: List of references to P2SVpnGateways.
    types:
    - uid: P2SVpnGateway
      isArray: true
  - name: properties.configurationPolicyGroups
    description: List of all VpnServerConfigurationPolicyGroups.
    types:
    - uid: VpnServerConfigurationPolicyGroup
      isArray: true
  - name: properties.etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: id
    description: Resource ID.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: IpsecEncryption
  description: The IPSec encryption algorithm (IKE phase 1).
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: DES
    types:
    - uid: string
  - name: DES3
    types:
    - uid: string
  - name: AES128
    types:
    - uid: string
  - name: AES192
    types:
    - uid: string
  - name: AES256
    types:
    - uid: string
  - name: GCMAES128
    types:
    - uid: string
  - name: GCMAES192
    types:
    - uid: string
  - name: GCMAES256
    types:
    - uid: string
- name: IpsecIntegrity
  description: The IPSec integrity algorithm (IKE phase 1).
  kind: enum
  properties:
  - name: MD5
    types:
    - uid: string
  - name: SHA1
    types:
    - uid: string
  - name: SHA256
    types:
    - uid: string
  - name: GCMAES128
    types:
    - uid: string
  - name: GCMAES192
    types:
    - uid: string
  - name: GCMAES256
    types:
    - uid: string
- name: IkeEncryption
  description: The IKE encryption algorithm (IKE phase 2).
  kind: enum
  properties:
  - name: DES
    types:
    - uid: string
  - name: DES3
    types:
    - uid: string
  - name: AES128
    types:
    - uid: string
  - name: AES192
    types:
    - uid: string
  - name: AES256
    types:
    - uid: string
  - name: GCMAES256
    types:
    - uid: string
  - name: GCMAES128
    types:
    - uid: string
- name: IkeIntegrity
  description: The IKE integrity algorithm (IKE phase 2).
  kind: enum
  properties:
  - name: MD5
    types:
    - uid: string
  - name: SHA1
    types:
    - uid: string
  - name: SHA256
    types:
    - uid: string
  - name: SHA384
    types:
    - uid: string
  - name: GCMAES256
    types:
    - uid: string
  - name: GCMAES128
    types:
    - uid: string
- name: DhGroup
  description: The DH Groups used in IKE Phase 1 for initial SA.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: DHGroup1
    types:
    - uid: string
  - name: DHGroup2
    types:
    - uid: string
  - name: DHGroup14
    types:
    - uid: string
  - name: DHGroup2048
    types:
    - uid: string
  - name: ECP256
    types:
    - uid: string
  - name: ECP384
    types:
    - uid: string
  - name: DHGroup24
    types:
    - uid: string
- name: PfsGroup
  description: The Pfs Groups used in IKE Phase 2 for new child SA.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: PFS1
    types:
    - uid: string
  - name: PFS2
    types:
    - uid: string
  - name: PFS2048
    types:
    - uid: string
  - name: ECP256
    types:
    - uid: string
  - name: ECP384
    types:
    - uid: string
  - name: PFS24
    types:
    - uid: string
  - name: PFS14
    types:
    - uid: string
  - name: PFSMM
    types:
    - uid: string
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: P2SConnectionConfiguration
  description: P2SConnectionConfiguration Resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.vpnClientAddressPool
    description: The reference to the address space resource which represents Address space for P2S VpnClient.
    types:
    - uid: AddressSpace
  - name: properties.routingConfiguration
    description: The Routing Configuration indicating the associated and propagated route tables on this connection.
    types:
    - uid: RoutingConfiguration
  - name: properties.enableInternetSecurity
    description: Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
    types:
    - uid: boolean
  - name: properties.configurationPolicyGroupAssociations
    isReadyOnly: true
    description: List of Configuration Policy Groups that this P2SConnectionConfiguration is attached to.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.previousConfigurationPolicyGroupAssociations
    isReadyOnly: true
    description: List of previous Configuration Policy Groups that this P2SConnectionConfiguration was attached to.
    types:
    - uid: VpnServerConfigurationPolicyGroup
      isArray: true
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the P2SConnectionConfiguration resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: VpnClientConnectionHealth
  description: VpnClientConnectionHealth properties.
  kind: object
  properties:
  - name: totalIngressBytesTransferred
    isReadyOnly: true
    description: Total of the Ingress Bytes Transferred in this P2S Vpn connection.
    types:
    - uid: integer
  - name: totalEgressBytesTransferred
    isReadyOnly: true
    description: Total of the Egress Bytes Transferred in this connection.
    types:
    - uid: integer
  - name: vpnClientConnectionsCount
    description: The total of p2s vpn clients connected at this time to this P2SVpnGateway.
    types:
    - uid: integer
  - name: allocatedIpAddresses
    description: List of allocated ip addresses to the connected p2s vpn clients.
    types:
    - uid: string
      isArray: true
- name: VpnServerConfigurationPolicyGroupMember
  description: VpnServerConfiguration PolicyGroup member
  kind: object
  properties:
  - name: name
    description: Name of the VpnServerConfigurationPolicyGroupMember.
    types:
    - uid: string
  - name: attributeType
    description: The Vpn Policy member attribute type.
    types:
    - uid: VpnPolicyMemberAttributeType
  - name: attributeValue
    description: The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: AddressSpace
  description: AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
  kind: object
  properties:
  - name: addressPrefixes
    description: A list of address blocks reserved for this virtual network in CIDR notation.
    types:
    - uid: string
      isArray: true
- name: RoutingConfiguration
  description: Routing Configuration indicating the associated and propagated route tables for this connection.
  kind: object
  properties:
  - name: associatedRouteTable
    description: The resource id RouteTable associated with this RoutingConfiguration.
    types:
    - uid: SubResource
  - name: propagatedRouteTables
    description: The list of RouteTables to advertise the routes to.
    types:
    - uid: PropagatedRouteTable
  - name: vnetRoutes
    description: List of routes that control routing from VirtualHub into a virtual network connection.
    types:
    - uid: VnetRoute
  - name: inboundRouteMap
    description: The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes.
    types:
    - uid: SubResource
  - name: outboundRouteMap
    description: The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes.
    types:
    - uid: SubResource
- name: VpnPolicyMemberAttributeType
  description: The Vpn Policy member attribute type.
  kind: enum
  properties:
  - name: CertificateGroupId
    types:
    - uid: string
  - name: AADGroupId
    types:
    - uid: string
  - name: RadiusAzureGroupId
    types:
    - uid: string
- name: PropagatedRouteTable
  description: The list of RouteTables to advertise the routes to.
  kind: object
  properties:
  - name: labels
    description: The list of labels.
    types:
    - uid: string
      isArray: true
  - name: ids
    description: The list of resource ids of all the RouteTables.
    types:
    - uid: SubResource
      isArray: true
- name: VnetRoute
  description: List of routes that control routing from VirtualHub into a virtual network connection.
  kind: object
  properties:
  - name: staticRoutesConfig
    description: Configuration for static routes on this HubVnetConnection.
    types:
    - uid: StaticRoutesConfig
  - name: staticRoutes
    description: List of all Static Routes.
    types:
    - uid: StaticRoute
      isArray: true
  - name: bgpConnections
    isReadyOnly: true
    description: The list of references to HubBgpConnection objects.
    types:
    - uid: SubResource
      isArray: true
- name: StaticRoutesConfig
  description: Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection.
  kind: object
  properties:
  - name: propagateStaticRoutes
    isReadyOnly: true
    description: Boolean indicating whether static routes on this connection are automatically propagate to route tables which this connection propagates to.
    types:
    - uid: boolean
  - name: vnetLocalRouteOverrideCriteria
    description: Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke.
    types:
    - uid: VnetLocalRouteOverrideCriteria
- name: StaticRoute
  description: List of all Static Routes.
  kind: object
  properties:
  - name: name
    description: The name of the StaticRoute that is unique within a VnetRoute.
    types:
    - uid: string
  - name: addressPrefixes
    description: List of all address prefixes.
    types:
    - uid: string
      isArray: true
  - name: nextHopIpAddress
    description: The ip address of the next hop.
    types:
    - uid: string
- name: VnetLocalRouteOverrideCriteria
  description: Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke vnet.
  kind: enum
  properties:
  - name: Contains
    types:
    - uid: string
  - name: Equal
    types:
    - uid: string
examples:
- name: VpnServerConfigurationCreate
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1?api-version=2022-05-01
    body: >-
      {
        "tags": {
          "key1": "value1"
        },
        "location": "West US",
        "properties": {
          "vpnProtocols": [
            "IkeV2"
          ],
          "vpnClientIpsecPolicies": [
            {
              "saLifeTimeSeconds": 86472,
              "saDataSizeKilobytes": 429497,
              "ipsecEncryption": "AES256",
              "ipsecIntegrity": "SHA256",
              "ikeEncryption": "AES256",
              "ikeIntegrity": "SHA384",
              "dhGroup": "DHGroup14",
              "pfsGroup": "PFS14"
            }
          ],
          "configurationPolicyGroups": [
            {
              "name": "policyGroup1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup1",
              "properties": {
                "isDefault": true,
                "priority": 0,
                "policyMembers": [
                  {
                    "name": "policy1",
                    "attributeType": "RadiusAzureGroupId",
                    "attributeValue": "6ad1bd08"
                  }
                ]
              }
            },
            {
              "name": "policyGroup2",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup2",
              "properties": {
                "isDefault": true,
                "priority": 0,
                "policyMembers": [
                  {
                    "name": "policy2",
                    "attributeType": "CertificateGroupId",
                    "attributeValue": "red.com"
                  }
                ]
              }
            }
          ],
          "vpnClientRootCertificates": [
            {
              "name": "vpnServerConfigVpnClientRootCert1",
              "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN"
            }
          ],
          "vpnClientRevokedCertificates": [
            {
              "name": "vpnServerConfigVpnClientRevokedCert1",
              "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
            }
          ],
          "radiusServers": [
            {
              "radiusServerAddress": "10.0.0.0",
              "radiusServerScore": 25,
              "radiusServerSecret": "radiusServerSecret"
            }
          ],
          "radiusServerRootCertificates": [
            {
              "name": "vpnServerConfigRadiusServerRootCer1",
              "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM"
            }
          ],
          "radiusClientRootCertificates": [
            {
              "name": "vpnServerConfigRadiusClientRootCert1",
              "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1?api-version=2022-05-01

      {
        "tags": {
          "key1": "value1"
        },
        "location": "West US",
        "properties": {
          "vpnProtocols": [
            "IkeV2"
          ],
          "vpnClientIpsecPolicies": [
            {
              "saLifeTimeSeconds": 86472,
              "saDataSizeKilobytes": 429497,
              "ipsecEncryption": "AES256",
              "ipsecIntegrity": "SHA256",
              "ikeEncryption": "AES256",
              "ikeIntegrity": "SHA384",
              "dhGroup": "DHGroup14",
              "pfsGroup": "PFS14"
            }
          ],
          "configurationPolicyGroups": [
            {
              "name": "policyGroup1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup1",
              "properties": {
                "isDefault": true,
                "priority": 0,
                "policyMembers": [
                  {
                    "name": "policy1",
                    "attributeType": "RadiusAzureGroupId",
                    "attributeValue": "6ad1bd08"
                  }
                ]
              }
            },
            {
              "name": "policyGroup2",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup2",
              "properties": {
                "isDefault": true,
                "priority": 0,
                "policyMembers": [
                  {
                    "name": "policy2",
                    "attributeType": "CertificateGroupId",
                    "attributeValue": "red.com"
                  }
                ]
              }
            }
          ],
          "vpnClientRootCertificates": [
            {
              "name": "vpnServerConfigVpnClientRootCert1",
              "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN"
            }
          ],
          "vpnClientRevokedCertificates": [
            {
              "name": "vpnServerConfigVpnClientRevokedCert1",
              "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
            }
          ],
          "radiusServers": [
            {
              "radiusServerAddress": "10.0.0.0",
              "radiusServerScore": 25,
              "radiusServerSecret": "radiusServerSecret"
            }
          ],
          "radiusServerRootCertificates": [
            {
              "name": "vpnServerConfigRadiusServerRootCer1",
              "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM"
            }
          ],
          "radiusClientRootCertificates": [
            {
              "name": "vpnServerConfigRadiusClientRootCert1",
              "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
            }
          ]
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-05-01/examples/VpnServerConfigurationPut.json
      func ExampleVPNServerConfigurationsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewVPNServerConfigurationsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx, "rg1", "vpnServerConfiguration1", armnetwork.VPNServerConfiguration{
      		Location: to.Ptr("West US"),
      		Tags: map[string]*string{
      			"key1": to.Ptr("value1"),
      		},
      		Properties: &armnetwork.VPNServerConfigurationProperties{
      			ConfigurationPolicyGroups: []*armnetwork.VPNServerConfigurationPolicyGroup{
      				{
      					ID:   to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup1"),
      					Name: to.Ptr("policyGroup1"),
      					Properties: &armnetwork.VPNServerConfigurationPolicyGroupProperties{
      						IsDefault: to.Ptr(true),
      						PolicyMembers: []*armnetwork.VPNServerConfigurationPolicyGroupMember{
      							{
      								Name:           to.Ptr("policy1"),
      								AttributeType:  to.Ptr(armnetwork.VPNPolicyMemberAttributeTypeRadiusAzureGroupID),
      								AttributeValue: to.Ptr("6ad1bd08"),
      							}},
      						Priority: to.Ptr[int32](0),
      					},
      				},
      				{
      					ID:   to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup2"),
      					Name: to.Ptr("policyGroup2"),
      					Properties: &armnetwork.VPNServerConfigurationPolicyGroupProperties{
      						IsDefault: to.Ptr(true),
      						PolicyMembers: []*armnetwork.VPNServerConfigurationPolicyGroupMember{
      							{
      								Name:           to.Ptr("policy2"),
      								AttributeType:  to.Ptr(armnetwork.VPNPolicyMemberAttributeTypeCertificateGroupID),
      								AttributeValue: to.Ptr("red.com"),
      							}},
      						Priority: to.Ptr[int32](0),
      					},
      				}},
      			RadiusClientRootCertificates: []*armnetwork.VPNServerConfigRadiusClientRootCertificate{
      				{
      					Name:       to.Ptr("vpnServerConfigRadiusClientRootCert1"),
      					Thumbprint: to.Ptr("83FFBFC8848B5A5836C94D0112367E16148A286F"),
      				}},
      			RadiusServerRootCertificates: []*armnetwork.VPNServerConfigRadiusServerRootCertificate{
      				{
      					Name:           to.Ptr("vpnServerConfigRadiusServerRootCer1"),
      					PublicCertData: to.Ptr("MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM"),
      				}},
      			RadiusServers: []*armnetwork.RadiusServer{
      				{
      					RadiusServerAddress: to.Ptr("10.0.0.0"),
      					RadiusServerScore:   to.Ptr[int64](25),
      					RadiusServerSecret:  to.Ptr("radiusServerSecret"),
      				}},
      			VPNClientIPSecPolicies: []*armnetwork.IPSecPolicy{
      				{
      					DhGroup:             to.Ptr(armnetwork.DhGroupDHGroup14),
      					IkeEncryption:       to.Ptr(armnetwork.IkeEncryptionAES256),
      					IkeIntegrity:        to.Ptr(armnetwork.IkeIntegritySHA384),
      					IPSecEncryption:     to.Ptr(armnetwork.IPSecEncryptionAES256),
      					IPSecIntegrity:      to.Ptr(armnetwork.IPSecIntegritySHA256),
      					PfsGroup:            to.Ptr(armnetwork.PfsGroupPFS14),
      					SaDataSizeKilobytes: to.Ptr[int32](429497),
      					SaLifeTimeSeconds:   to.Ptr[int32](86472),
      				}},
      			VPNClientRevokedCertificates: []*armnetwork.VPNServerConfigVPNClientRevokedCertificate{
      				{
      					Name:       to.Ptr("vpnServerConfigVpnClientRevokedCert1"),
      					Thumbprint: to.Ptr("83FFBFC8848B5A5836C94D0112367E16148A286F"),
      				}},
      			VPNClientRootCertificates: []*armnetwork.VPNServerConfigVPNClientRootCertificate{
      				{
      					Name:           to.Ptr("vpnServerConfigVpnClientRootCert1"),
      					PublicCertData: to.Ptr("MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN"),
      				}},
      			VPNProtocols: []*armnetwork.VPNGatewayTunnelingProtocol{
      				to.Ptr(armnetwork.VPNGatewayTunnelingProtocolIkeV2)},
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv2.0.1/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates a VpnServerConfiguration resource if it doesn't exist else updates the existing VpnServerConfiguration.
       *
       * @summary Creates a VpnServerConfiguration resource if it doesn't exist else updates the existing VpnServerConfiguration.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-05-01/examples/VpnServerConfigurationPut.json
       */
      async function vpnServerConfigurationCreate() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const vpnServerConfigurationName = "vpnServerConfiguration1";
        const vpnServerConfigurationParameters = {
          configurationPolicyGroups: [
            {
              name: "policyGroup1",
              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup1",
              isDefault: true,
              policyMembers: [
                {
                  name: "policy1",
                  attributeType: "RadiusAzureGroupId",
                  attributeValue: "6ad1bd08",
                },
              ],
              priority: 0,
            },
            {
              name: "policyGroup2",
              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup2",
              isDefault: true,
              policyMembers: [
                {
                  name: "policy2",
                  attributeType: "CertificateGroupId",
                  attributeValue: "red.com",
                },
              ],
              priority: 0,
            },
          ],
          location: "West US",
          radiusClientRootCertificates: [
            {
              name: "vpnServerConfigRadiusClientRootCert1",
              thumbprint: "83FFBFC8848B5A5836C94D0112367E16148A286F",
            },
          ],
          radiusServerRootCertificates: [
            {
              name: "vpnServerConfigRadiusServerRootCer1",
              publicCertData:
                "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM",
            },
          ],
          radiusServers: [
            {
              radiusServerAddress: "10.0.0.0",
              radiusServerScore: 25,
              radiusServerSecret: "radiusServerSecret",
            },
          ],
          tags: { key1: "value1" },
          vpnClientIpsecPolicies: [
            {
              dhGroup: "DHGroup14",
              ikeEncryption: "AES256",
              ikeIntegrity: "SHA384",
              ipsecEncryption: "AES256",
              ipsecIntegrity: "SHA256",
              pfsGroup: "PFS14",
              saDataSizeKilobytes: 429497,
              saLifeTimeSeconds: 86472,
            },
          ],
          vpnClientRevokedCertificates: [
            {
              name: "vpnServerConfigVpnClientRevokedCert1",
              thumbprint: "83FFBFC8848B5A5836C94D0112367E16148A286F",
            },
          ],
          vpnClientRootCertificates: [
            {
              name: "vpnServerConfigVpnClientRootCert1",
              publicCertData:
                "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN",
            },
          ],
          vpnProtocols: ["IkeV2"],
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.vpnServerConfigurations.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vpnServerConfigurationName,
          vpnServerConfigurationParameters
        );
        console.log(result);
      }

      vpnServerConfigurationCreate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_30.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "location": "West US",
        "name": "vpnServerConfiguration1",
        "type": "Microsoft.Network/vpnServerConfigurations",
        "tags": {
          "key1": "value1"
        },
        "properties": {
          "provisioningState": "Succeeded",
          "vpnProtocols": [
            "IkeV2"
          ],
          "vpnAuthenticationTypes": [
            "Certificate"
          ],
          "vpnClientIpsecPolicies": [
            {
              "saLifeTimeSeconds": 86472,
              "saDataSizeKilobytes": 429497,
              "ipsecEncryption": "AES256",
              "ipsecIntegrity": "SHA256",
              "ikeEncryption": "AES256",
              "ikeIntegrity": "SHA384",
              "dhGroup": "DHGroup14",
              "pfsGroup": "PFS14"
            }
          ],
          "configurationPolicyGroups": [
            {
              "name": "policyGroup1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "properties": {
                "provisioningState": "Succeeded",
                "isDefault": true,
                "priority": 0,
                "policyMembers": [
                  {
                    "name": "policy1",
                    "attributeType": "RadiusAzureGroupId",
                    "attributeValue": "6ad1bd08"
                  }
                ],
                "p2SConnectionConfigurations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1"
                  }
                ]
              }
            },
            {
              "name": "policyGroup2",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "properties": {
                "provisioningState": "Succeeded",
                "isDefault": true,
                "priority": 0,
                "policyMembers": [
                  {
                    "name": "policy2",
                    "attributeType": "CertificateGroupId",
                    "attributeValue": "red.com"
                  }
                ]
              }
            }
          ],
          "vpnClientRootCertificates": [
            {
              "name": "vpnServerConfigVpnClientRootCert1",
              "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN"
            }
          ],
          "vpnClientRevokedCertificates": [
            {
              "name": "vpnServerConfigVpnClientRevokedCert1",
              "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
            }
          ],
          "radiusServers": [
            {
              "radiusServerAddress": "10.0.0.0",
              "radiusServerScore": 25
            }
          ],
          "radiusServerRootCertificates": [
            {
              "name": "vpnServerConfigRadiusServerRootCer1",
              "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM"
            }
          ],
          "radiusClientRootCertificates": [
            {
              "name": "vpnServerConfigRadiusClientRootCert1",
              "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "location": "West US",
        "name": "vpnServerConfiguration1",
        "type": "Microsoft.Network/vpnServerConfigurations",
        "tags": {
          "key1": "value1"
        },
        "properties": {
          "provisioningState": "Succeeded",
          "vpnProtocols": [
            "IkeV2"
          ],
          "vpnAuthenticationTypes": [
            "Certificate"
          ],
          "vpnClientIpsecPolicies": [
            {
              "saLifeTimeSeconds": 86472,
              "saDataSizeKilobytes": 429497,
              "ipsecEncryption": "AES256",
              "ipsecIntegrity": "SHA256",
              "ikeEncryption": "AES256",
              "ikeIntegrity": "SHA384",
              "dhGroup": "DHGroup14",
              "pfsGroup": "PFS14"
            }
          ],
          "configurationPolicyGroups": [
            {
              "name": "policyGroup1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "properties": {
                "provisioningState": "Succeeded",
                "isDefault": true,
                "priority": 0,
                "policyMembers": [
                  {
                    "name": "policy1",
                    "attributeType": "RadiusAzureGroupId",
                    "attributeValue": "6ad1bd08"
                  }
                ],
                "p2SConnectionConfigurations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1"
                  }
                ]
              }
            },
            {
              "name": "policyGroup2",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1/vpnServerConfigurationPolicyGroups/policyGroup2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "properties": {
                "provisioningState": "Succeeded",
                "isDefault": true,
                "priority": 0,
                "policyMembers": [
                  {
                    "name": "policy2",
                    "attributeType": "CertificateGroupId",
                    "attributeValue": "red.com"
                  }
                ]
              }
            }
          ],
          "vpnClientRootCertificates": [
            {
              "name": "vpnServerConfigVpnClientRootCert1",
              "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN"
            }
          ],
          "vpnClientRevokedCertificates": [
            {
              "name": "vpnServerConfigVpnClientRevokedCert1",
              "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
            }
          ],
          "radiusServers": [
            {
              "radiusServerAddress": "10.0.0.0",
              "radiusServerScore": 25
            }
          ],
          "radiusServerRootCertificates": [
            {
              "name": "vpnServerConfigRadiusServerRootCer1",
              "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM"
            }
          ],
          "radiusClientRootCertificates": [
            {
              "name": "vpnServerConfigRadiusClientRootCert1",
              "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
            }
          ]
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Creates a VpnServerConfiguration resource if it doesn't exist else updates the existing VpnServerConfiguration.
errorCodes: []
