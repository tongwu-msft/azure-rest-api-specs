### YamlMime:RESTOperation
uid: management.azure.com.virtualwan.vpnsites.createorupdate
name: Create Or Update
service: Virtual WAN
groupName: Vpn Sites
apiVersion: 2022-01-01
summary: Creates a VpnSite resource if it doesn't exist else updates the existing VpnSite.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}?api-version=2022-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The resource group name of the VpnSite.
  types:
  - uid: string
- name: vpnSiteName
  in: path
  isRequired: true
  description: The name of the VpnSite being created or updated.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Request successful. Returns the details of the VpnSite created or updated.
  types:
  - uid: VpnSite
- name: 201 Created
  description: Request received successfully. Returns the details of the VpnSite created or updated.
  types:
  - uid: VpnSite
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: properties.virtualWan
    in: body
    description: The VirtualWAN to which the vpnSite belongs.
    types:
    - uid: SubResource
  - name: properties.deviceProperties
    in: body
    description: The device properties.
    types:
    - uid: DeviceProperties
  - name: properties.ipAddress
    in: body
    description: The ip-address for the vpn-site.
    types:
    - uid: string
  - name: properties.siteKey
    in: body
    description: The key for vpn-site that can be used for connections.
    types:
    - uid: string
  - name: properties.addressSpace
    in: body
    description: The AddressSpace that contains an array of IP address ranges.
    types:
    - uid: AddressSpace
  - name: properties.bgpProperties
    in: body
    description: The set of bgp properties.
    types:
    - uid: BgpSettings
  - name: properties.isSecuritySite
    in: body
    description: IsSecuritySite flag.
    types:
    - uid: boolean
  - name: properties.vpnSiteLinks
    in: body
    description: List of all vpn site links.
    types:
    - uid: VpnSiteLink
      isArray: true
  - name: properties.o365Policy
    in: body
    description: Office365 Policy.
    types:
    - uid: O365PolicyProperties
  - name: id
    in: body
    description: Resource ID.
    types:
    - uid: string
  - name: location
    in: body
    isRequired: true
    description: Resource location.
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: DeviceProperties
  description: List of properties of the device.
  kind: object
  properties:
  - name: deviceVendor
    description: Name of the device Vendor.
    types:
    - uid: string
  - name: deviceModel
    description: Model of the device.
    types:
    - uid: string
  - name: linkSpeedInMbps
    description: Link speed.
    types:
    - uid: integer
- name: AddressSpace
  description: AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
  kind: object
  properties:
  - name: addressPrefixes
    description: A list of address blocks reserved for this virtual network in CIDR notation.
    types:
    - uid: string
      isArray: true
- name: BgpSettings
  description: BGP settings details.
  kind: object
  properties:
  - name: asn
    description: The BGP speaker's ASN.
    types:
    - uid: integer
  - name: bgpPeeringAddress
    description: The BGP peering address and BGP identifier of this BGP speaker.
    types:
    - uid: string
  - name: peerWeight
    description: The weight added to routes learned from this BGP speaker.
    types:
    - uid: integer
  - name: bgpPeeringAddresses
    description: BGP peering address with IP configuration ID for virtual network gateway.
    types:
    - uid: IPConfigurationBgpPeeringAddress
      isArray: true
- name: VpnSiteLink
  description: VpnSiteLink Resource.
  kind: object
  properties:
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: properties.linkProperties
    description: The link provider properties.
    types:
    - uid: VpnLinkProviderProperties
  - name: properties.ipAddress
    description: The ip-address for the vpn-site-link.
    types:
    - uid: string
  - name: properties.fqdn
    description: FQDN of vpn-site-link.
    types:
    - uid: string
  - name: properties.bgpProperties
    description: The set of bgp properties.
    types:
    - uid: VpnLinkBgpSettings
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the VPN site link resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: O365PolicyProperties
  description: The Office365 breakout policy.
  kind: object
  properties:
  - name: breakOutCategories
    description: Office365 breakout categories.
    types:
    - uid: O365BreakOutCategoryPolicies
- name: VpnSite
  description: VpnSite Resource.
  kind: object
  properties:
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.virtualWan
    description: The VirtualWAN to which the vpnSite belongs.
    types:
    - uid: SubResource
  - name: properties.deviceProperties
    description: The device properties.
    types:
    - uid: DeviceProperties
  - name: properties.ipAddress
    description: The ip-address for the vpn-site.
    types:
    - uid: string
  - name: properties.siteKey
    description: The key for vpn-site that can be used for connections.
    types:
    - uid: string
  - name: properties.addressSpace
    description: The AddressSpace that contains an array of IP address ranges.
    types:
    - uid: AddressSpace
  - name: properties.bgpProperties
    description: The set of bgp properties.
    types:
    - uid: BgpSettings
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the VPN site resource.
    types:
    - uid: ProvisioningState
  - name: properties.isSecuritySite
    description: IsSecuritySite flag.
    types:
    - uid: boolean
  - name: properties.vpnSiteLinks
    description: List of all vpn site links.
    types:
    - uid: VpnSiteLink
      isArray: true
  - name: properties.o365Policy
    description: Office365 Policy.
    types:
    - uid: O365PolicyProperties
  - name: id
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: IPConfigurationBgpPeeringAddress
  description: Properties of IPConfigurationBgpPeeringAddress.
  kind: object
  properties:
  - name: ipconfigurationId
    description: The ID of IP configuration which belongs to gateway.
    types:
    - uid: string
  - name: defaultBgpIpAddresses
    isReadyOnly: true
    description: The list of default BGP peering addresses which belong to IP configuration.
    types:
    - uid: string
      isArray: true
  - name: customBgpIpAddresses
    description: The list of custom BGP peering addresses which belong to IP configuration.
    types:
    - uid: string
      isArray: true
  - name: tunnelIpAddresses
    isReadyOnly: true
    description: The list of tunnel public IP addresses which belong to IP configuration.
    types:
    - uid: string
      isArray: true
- name: VpnLinkProviderProperties
  description: List of properties of a link provider.
  kind: object
  properties:
  - name: linkProviderName
    description: Name of the link provider.
    types:
    - uid: string
  - name: linkSpeedInMbps
    description: Link speed.
    types:
    - uid: integer
- name: VpnLinkBgpSettings
  description: BGP settings details for a link.
  kind: object
  properties:
  - name: asn
    description: The BGP speaker's ASN.
    types:
    - uid: integer
  - name: bgpPeeringAddress
    description: The BGP peering address and BGP identifier of this BGP speaker.
    types:
    - uid: string
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: O365BreakOutCategoryPolicies
  description: Office365 breakout categories.
  kind: object
  properties:
  - name: allow
    description: Flag to control allow category.
    types:
    - uid: boolean
  - name: optimize
    description: Flag to control optimize category.
    types:
    - uid: boolean
  - name: default
    description: Flag to control default category.
    types:
    - uid: boolean
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: VpnSiteCreate
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1?api-version=2022-01-01
    body: >-
      {
        "tags": {
          "key1": "value1"
        },
        "location": "West US",
        "properties": {
          "virtualWan": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1"
          },
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "isSecuritySite": false,
          "vpnSiteLinks": [
            {
              "name": "vpnSiteLink1",
              "properties": {
                "ipAddress": "50.50.50.56",
                "fqdn": "link1.vpnsite1.contoso.com",
                "linkProperties": {
                  "linkProviderName": "vendor1",
                  "linkSpeedInMbps": 0
                },
                "bgpProperties": {
                  "bgpPeeringAddress": "192.168.0.0",
                  "asn": 1234
                }
              }
            }
          ],
          "o365Policy": {
            "breakOutCategories": {
              "allow": true,
              "optimize": true,
              "default": false
            }
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1?api-version=2022-01-01

      {
        "tags": {
          "key1": "value1"
        },
        "location": "West US",
        "properties": {
          "virtualWan": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1"
          },
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "isSecuritySite": false,
          "vpnSiteLinks": [
            {
              "name": "vpnSiteLink1",
              "properties": {
                "ipAddress": "50.50.50.56",
                "fqdn": "link1.vpnsite1.contoso.com",
                "linkProperties": {
                  "linkProviderName": "vendor1",
                  "linkSpeedInMbps": 0
                },
                "bgpProperties": {
                  "bgpPeeringAddress": "192.168.0.0",
                  "asn": 1234
                }
              }
            }
          ],
          "o365Policy": {
            "breakOutCategories": {
              "allow": true,
              "optimize": true,
              "default": false
            }
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.fluent.models.VpnSiteInner;
      import com.azure.resourcemanager.network.fluent.models.VpnSiteLinkInner;
      import com.azure.resourcemanager.network.models.AddressSpace;
      import com.azure.resourcemanager.network.models.O365BreakOutCategoryPolicies;
      import com.azure.resourcemanager.network.models.O365PolicyProperties;
      import com.azure.resourcemanager.network.models.VpnLinkBgpSettings;
      import com.azure.resourcemanager.network.models.VpnLinkProviderProperties;
      import java.util.Arrays;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for VpnSites CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/VpnSitePut.json
           */
          /**
           * Sample code: VpnSiteCreate.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void vpnSiteCreate(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getVpnSites()
                  .createOrUpdate(
                      "rg1",
                      "vpnSite1",
                      new VpnSiteInner()
                          .withLocation("West US")
                          .withTags(mapOf("key1", "value1"))
                          .withVirtualWan(
                              new SubResource()
                                  .withId(
                                      "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1"))
                          .withAddressSpace(new AddressSpace().withAddressPrefixes(Arrays.asList("10.0.0.0/16")))
                          .withIsSecuritySite(false)
                          .withVpnSiteLinks(
                              Arrays
                                  .asList(
                                      new VpnSiteLinkInner()
                                          .withName("vpnSiteLink1")
                                          .withLinkProperties(
                                              new VpnLinkProviderProperties()
                                                  .withLinkProviderName("vendor1")
                                                  .withLinkSpeedInMbps(0))
                                          .withIpAddress("50.50.50.56")
                                          .withFqdn("link1.vpnsite1.contoso.com")
                                          .withBgpProperties(
                                              new VpnLinkBgpSettings().withAsn(1234L).withBgpPeeringAddress("192.168.0.0"))))
                          .withO365Policy(
                              new O365PolicyProperties()
                                  .withBreakOutCategories(
                                      new O365BreakOutCategoryPolicies()
                                          .withAllow(true)
                                          .withOptimize(true)
                                          .withDefaultProperty(false))),
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/VpnSitePut.json
      func ExampleVPNSitesClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewVPNSitesClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx, "rg1", "vpnSite1", armnetwork.VPNSite{
      		Location: to.Ptr("West US"),
      		Tags: map[string]*string{
      			"key1": to.Ptr("value1"),
      		},
      		Properties: &armnetwork.VPNSiteProperties{
      			AddressSpace: &armnetwork.AddressSpace{
      				AddressPrefixes: []*string{
      					to.Ptr("10.0.0.0/16")},
      			},
      			IsSecuritySite: to.Ptr(false),
      			O365Policy: &armnetwork.O365PolicyProperties{
      				BreakOutCategories: &armnetwork.O365BreakOutCategoryPolicies{
      					Default:  to.Ptr(false),
      					Allow:    to.Ptr(true),
      					Optimize: to.Ptr(true),
      				},
      			},
      			VirtualWan: &armnetwork.SubResource{
      				ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1"),
      			},
      			VPNSiteLinks: []*armnetwork.VPNSiteLink{
      				{
      					Name: to.Ptr("vpnSiteLink1"),
      					Properties: &armnetwork.VPNSiteLinkProperties{
      						BgpProperties: &armnetwork.VPNLinkBgpSettings{
      							Asn:               to.Ptr[int64](1234),
      							BgpPeeringAddress: to.Ptr("192.168.0.0"),
      						},
      						Fqdn:      to.Ptr("link1.vpnsite1.contoso.com"),
      						IPAddress: to.Ptr("50.50.50.56"),
      						LinkProperties: &armnetwork.VPNLinkProviderProperties{
      							LinkProviderName: to.Ptr("vendor1"),
      							LinkSpeedInMbps:  to.Ptr[int32](0),
      						},
      					},
      				}},
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.1.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates a VpnSite resource if it doesn't exist else updates the existing VpnSite.
       *
       * @summary Creates a VpnSite resource if it doesn't exist else updates the existing VpnSite.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/VpnSitePut.json
       */
      async function vpnSiteCreate() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const vpnSiteName = "vpnSite1";
        const vpnSiteParameters = {
          addressSpace: { addressPrefixes: ["10.0.0.0/16"] },
          isSecuritySite: false,
          location: "West US",
          o365Policy: {
            breakOutCategories: { default: false, allow: true, optimize: true },
          },
          tags: { key1: "value1" },
          virtualWan: {
            id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1",
          },
          vpnSiteLinks: [
            {
              name: "vpnSiteLink1",
              bgpProperties: { asn: 1234, bgpPeeringAddress: "192.168.0.0" },
              fqdn: "link1.vpnsite1.contoso.com",
              ipAddress: "50.50.50.56",
              linkProperties: { linkProviderName: "vendor1", linkSpeedInMbps: 0 },
            },
          ],
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.vpnSites.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vpnSiteName,
          vpnSiteParameters
        );
        console.log(result);
      }

      vpnSiteCreate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_29.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "location": "West US",
        "name": "vpnSite1",
        "type": "Microsoft.Network/vpnSites",
        "tags": {
          "key1": "value1"
        },
        "properties": {
          "provisioningState": "Succeeded",
          "virtualWan": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1"
          },
          "deviceProperties": {
            "linkSpeedInMbps": 0
          },
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "isSecuritySite": false,
          "vpnSiteLinks": [
            {
              "name": "vpnSiteLink1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/vpnSiteLink1",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "type": "Microsoft.Network/vpnSites/vpnSiteLinks",
              "properties": {
                "provisioningState": "Succeeded",
                "ipAddress": "50.50.50.56",
                "linkProperties": {
                  "linkProviderName": "vendor1",
                  "linkSpeedInMbps": 0
                },
                "bgpProperties": {
                  "bgpPeeringAddress": "192.168.0.0",
                  "asn": 1234
                }
              }
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "location": "West US",
        "name": "vpnSite1",
        "type": "Microsoft.Network/vpnSites",
        "tags": {
          "key1": "value1"
        },
        "properties": {
          "provisioningState": "Succeeded",
          "virtualWan": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1"
          },
          "deviceProperties": {
            "linkSpeedInMbps": 0
          },
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "isSecuritySite": false,
          "vpnSiteLinks": [
            {
              "name": "vpnSiteLink1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/vpnSiteLink1",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "properties": {
                "provisioningState": "Succeeded",
                "ipAddress": "50.50.50.56",
                "linkProperties": {
                  "linkProviderName": "vendor1",
                  "linkSpeedInMbps": 0
                },
                "bgpProperties": {
                  "bgpPeeringAddress": "192.168.0.0",
                  "asn": 1234
                }
              }
            }
          ]
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Virtual WAN service - Creates a VpnSite resource if it doesn't exist else updates the existing VpnSite.
errorCodes: []
