### YamlMime:RESTOperation
uid: management.azure.com.expressroute.expressroutecircuitconnections.createorupdate
name: Create Or Update
service: ExpressRoute
groupName: Express Route Circuit Connections
apiVersion: 2022-05-01
summary: Creates or updates a Express Route Circuit Connection in the specified express route circuits.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}?api-version=2022-05-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: circuitName
  in: path
  isRequired: true
  description: The name of the express route circuit.
  types:
  - uid: string
- name: peeringName
  in: path
  isRequired: true
  description: The name of the peering.
  types:
  - uid: string
- name: connectionName
  in: path
  isRequired: true
  description: The name of the express route circuit connection.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Update successful. The operation returns the resulting ExpressRouteCircuitPeering resource.
  types:
  - uid: ExpressRouteCircuitConnection
- name: 201 Created
  description: Create successful. The operation returns the resulting ExpressRouteCircuitPeering resource.
  types:
  - uid: ExpressRouteCircuitConnection
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: properties.expressRouteCircuitPeering
    in: body
    description: Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
    types:
    - uid: SubResource
  - name: properties.peerExpressRouteCircuitPeering
    in: body
    description: Reference to Express Route Circuit Private Peering Resource of the peered circuit.
    types:
    - uid: SubResource
  - name: properties.addressPrefix
    in: body
    description: /29 IP address space to carve out Customer addresses for tunnels.
    types:
    - uid: string
  - name: properties.authorizationKey
    in: body
    description: The authorization key.
    types:
    - uid: string
  - name: properties.ipv6CircuitConnectionConfig
    in: body
    description: IPv6 Address PrefixProperties of the express route circuit connection.
    types:
    - uid: Ipv6CircuitConnectionConfig
  - name: id
    in: body
    description: Resource ID.
    types:
    - uid: string
requestHeader: []
definitions:
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: Ipv6CircuitConnectionConfig
  description: IPv6 Circuit Connection properties for global reach.
  kind: object
  properties:
  - name: addressPrefix
    description: /125 IP address space to carve out customer addresses for global reach.
    types:
    - uid: string
  - name: circuitConnectionStatus
    isReadyOnly: true
    description: Express Route Circuit connection state.
    types:
    - uid: CircuitConnectionStatus
- name: ExpressRouteCircuitConnection
  description: Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Type of the resource.
    types:
    - uid: string
  - name: properties.expressRouteCircuitPeering
    description: Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
    types:
    - uid: SubResource
  - name: properties.peerExpressRouteCircuitPeering
    description: Reference to Express Route Circuit Private Peering Resource of the peered circuit.
    types:
    - uid: SubResource
  - name: properties.addressPrefix
    description: /29 IP address space to carve out Customer addresses for tunnels.
    types:
    - uid: string
  - name: properties.authorizationKey
    description: The authorization key.
    types:
    - uid: string
  - name: properties.ipv6CircuitConnectionConfig
    description: IPv6 Address PrefixProperties of the express route circuit connection.
    types:
    - uid: Ipv6CircuitConnectionConfig
  - name: properties.circuitConnectionStatus
    isReadyOnly: true
    description: Express Route Circuit connection state.
    types:
    - uid: CircuitConnectionStatus
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the express route circuit connection resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: CircuitConnectionStatus
  description: Express Route Circuit connection state.
  kind: enum
  properties:
  - name: Connected
    types:
    - uid: string
  - name: Connecting
    types:
    - uid: string
  - name: Disconnected
    types:
    - uid: string
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: ExpressRouteCircuitConnectionCreate
  request:
    uri: PUT https://management.azure.com/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/connections/circuitConnectionUSAUS?api-version=2022-05-01
    body: >-
      {
        "properties": {
          "expressRouteCircuitPeering": {
            "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"
          },
          "peerExpressRouteCircuitPeering": {
            "id": "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"
          },
          "authorizationKey": "946a1918-b7a2-4917-b43c-8c4cdaee006a",
          "addressPrefix": "10.0.0.0/29",
          "ipv6CircuitConnectionConfig": {
            "addressPrefix": "aa:bb::/125"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/connections/circuitConnectionUSAUS?api-version=2022-05-01

      {
        "properties": {
          "expressRouteCircuitPeering": {
            "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"
          },
          "peerExpressRouteCircuitPeering": {
            "id": "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"
          },
          "authorizationKey": "946a1918-b7a2-4917-b43c-8c4cdaee006a",
          "addressPrefix": "10.0.0.0/29",
          "ipv6CircuitConnectionConfig": {
            "addressPrefix": "aa:bb::/125"
          }
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-05-01/examples/ExpressRouteCircuitConnectionCreate.json
      func ExampleExpressRouteCircuitConnectionsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewExpressRouteCircuitConnectionsClient("subid1", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx, "rg1", "ExpressRouteARMCircuitA", "AzurePrivatePeering", "circuitConnectionUSAUS", armnetwork.ExpressRouteCircuitConnection{
      		Properties: &armnetwork.ExpressRouteCircuitConnectionPropertiesFormat{
      			AddressPrefix:    to.Ptr("10.0.0.0/29"),
      			AuthorizationKey: to.Ptr("946a1918-b7a2-4917-b43c-8c4cdaee006a"),
      			ExpressRouteCircuitPeering: &armnetwork.SubResource{
      				ID: to.Ptr("/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"),
      			},
      			IPv6CircuitConnectionConfig: &armnetwork.IPv6CircuitConnectionConfig{
      				AddressPrefix: to.Ptr("aa:bb::/125"),
      			},
      			PeerExpressRouteCircuitPeering: &armnetwork.SubResource{
      				ID: to.Ptr("/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"),
      			},
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv2.0.1/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a Express Route Circuit Connection in the specified express route circuits.
       *
       * @summary Creates or updates a Express Route Circuit Connection in the specified express route circuits.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-05-01/examples/ExpressRouteCircuitConnectionCreate.json
       */
      async function expressRouteCircuitConnectionCreate() {
        const subscriptionId = "subid1";
        const resourceGroupName = "rg1";
        const circuitName = "ExpressRouteARMCircuitA";
        const peeringName = "AzurePrivatePeering";
        const connectionName = "circuitConnectionUSAUS";
        const expressRouteCircuitConnectionParameters = {
          addressPrefix: "10.0.0.0/29",
          authorizationKey: "946a1918-b7a2-4917-b43c-8c4cdaee006a",
          expressRouteCircuitPeering: {
            id: "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering",
          },
          ipv6CircuitConnectionConfig: { addressPrefix: "aa:bb::/125" },
          peerExpressRouteCircuitPeering: {
            id: "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.expressRouteCircuitConnections.beginCreateOrUpdateAndWait(
          resourceGroupName,
          circuitName,
          peeringName,
          connectionName,
          expressRouteCircuitConnectionParameters
        );
        console.log(result);
      }

      expressRouteCircuitConnectionCreate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_30.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/connections/circuitConnectionUSAUS",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "name": "circuitConnectionUSAUS",
        "properties": {
          "expressRouteCircuitPeering": {
            "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"
          },
          "peerExpressRouteCircuitPeering": {
            "id": "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"
          },
          "authorizationKey": "946a1918-b7a2-4917-b43c-8c4cdaee006a",
          "addressPrefix": "10.0.0.0/24",
          "circuitConnectionStatus": "Connected",
          "provisioningState": "Succeeded",
          "ipv6CircuitConnectionConfig": {
            "addressPrefix": "aa:bb::1/125",
            "circuitConnectionStatus": "Connected"
          }
        }
      }
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/connections/circuitConnectionUSAUS",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "name": "circuitConnectionUSAUS",
        "properties": {
          "expressRouteCircuitPeering": {
            "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"
          },
          "peerExpressRouteCircuitPeering": {
            "id": "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"
          },
          "authorizationKey": "946a1918-b7a2-4917-b43c-8c4cdaee006a",
          "addressPrefix": "10.0.0.0/24",
          "circuitConnectionStatus": "Connected",
          "provisioningState": "Succeeded",
          "ipv6CircuitConnectionConfig": {
            "addressPrefix": "aa:bb::1/125",
            "circuitConnectionStatus": "Connected"
          }
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about ExpressRoute service - Creates or updates a Express Route Circuit Connection in the specified express route circuits.
errorCodes: []
