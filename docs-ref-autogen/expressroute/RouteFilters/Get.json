{
  "swagger": "2.0",
  "info": {
    "version": "2019-09-01",
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}": {
      "get": {
        "tags": [
          "RouteFilters"
        ],
        "operationId": "RouteFilters_Get",
        "x-ms-examples": {
          "RouteFilterGet": {
            "parameters": {
              "routeFilterName": "filterName",
              "resourceGroupName": "rg1",
              "api-version": "2019-09-01",
              "subscriptionId": "subid"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName",
                  "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                  "location": "West US",
                  "name": "filterName",
                  "type": "Microsoft.Network/routeFilters",
                  "tags": {
                    "key1": "value1"
                  },
                  "properties": {
                    "provisioningState": "Succeeded",
                    "rules": [
                      {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName/routeFilterRules/ruleName",
                        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                        "name": "ruleName",
                        "properties": {
                          "provisioningState": "Succeeded",
                          "access": "Allow",
                          "routeFilterRuleType": "Community",
                          "communities": [
                            "12076:5030",
                            "12076:5040"
                          ]
                        }
                      }
                    ],
                    "peerings": []
                  }
                }
              }
            }
          }
        },
        "description": "Gets the specified route filter.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeFilterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route filter."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced express route bgp peering resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Route Filter resource.",
            "schema": {
              "$ref": "#/definitions/RouteFilter"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Get"
      }
    }
  },
  "definitions": {
    "RouteFilterRulePropertiesFormat": {
      "required": [
        "access",
        "routeFilterRuleType",
        "communities"
      ],
      "properties": {
        "access": {
          "$ref": "#/definitions/Access",
          "description": "The access type of the rule."
        },
        "routeFilterRuleType": {
          "type": "string",
          "description": "The rule type of the rule.",
          "enum": [
            "Community"
          ],
          "x-ms-enum": {
            "name": "RouteFilterRuleType",
            "modelAsString": true
          }
        },
        "communities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the route filter rule resource."
        }
      },
      "description": "Route Filter Rule Resource."
    },
    "RouteFilterRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteFilterRulePropertiesFormat",
          "description": "Properties of the route filter rule."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Route Filter Rule Resource."
    },
    "PatchRouteFilterRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteFilterRulePropertiesFormat",
          "description": "Properties of the route filter rule."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Route Filter Rule Resource."
    },
    "RouteFilterPropertiesFormat": {
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteFilterRule"
          },
          "description": "Collection of RouteFilterRules contained within a route filter."
        },
        "peerings": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitPeering"
          },
          "description": "A collection of references to express route circuit peerings."
        },
        "ipv6Peerings": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitPeering"
          },
          "description": "A collection of references to express route circuit ipv6 peerings."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the route filter resource."
        }
      },
      "description": "Route Filter Resource."
    },
    "RouteFilter": {
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteFilterPropertiesFormat",
          "description": "Properties of the route filter."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Route Filter Resource."
    },
    "PatchRouteFilter": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteFilterPropertiesFormat",
          "description": "Properties of the route filter."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Route Filter Resource."
    },
    "RouteFilterListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteFilter"
          },
          "description": "A list of route filters in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListRouteFilters API service call."
    },
    "RouteFilterRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteFilterRule"
          },
          "description": "A list of RouteFilterRules in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListRouteFilterRules API service call."
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "description": "Reference to another subresource.",
      "x-ms-azure-resource": true
    },
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Common resource representation.",
      "x-ms-azure-resource": true
    },
    "ProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Updating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "CircuitConnectionStatus": {
      "type": "string",
      "readOnly": true,
      "description": "Express Route Circuit connection state.",
      "enum": [
        "Connected",
        "Connecting",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "CircuitConnectionStatus",
        "modelAsString": true
      }
    },
    "PeerExpressRouteCircuitConnectionPropertiesFormat": {
      "properties": {
        "expressRouteCircuitPeering": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference to Express Route Circuit Private Peering Resource of the circuit."
        },
        "peerExpressRouteCircuitPeering": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference to Express Route Circuit Private Peering Resource of the peered circuit."
        },
        "addressPrefix": {
          "type": "string",
          "description": "/29 IP address space to carve out Customer addresses for tunnels."
        },
        "circuitConnectionStatus": {
          "$ref": "#/definitions/CircuitConnectionStatus",
          "description": "Express Route Circuit connection state."
        },
        "connectionName": {
          "type": "string",
          "description": "The name of the express route circuit connection resource."
        },
        "authResourceGuid": {
          "type": "string",
          "description": "The resource guid of the authorization used for the express route circuit connection."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the peer express route circuit connection resource."
        }
      },
      "description": "Properties of the peer express route circuit connection."
    },
    "PeerExpressRouteCircuitConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PeerExpressRouteCircuitConnectionPropertiesFormat",
          "description": "Properties of the peer express route circuit connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource."
    },
    "ExpressRouteCircuitConnectionPropertiesFormat": {
      "properties": {
        "expressRouteCircuitPeering": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection."
        },
        "peerExpressRouteCircuitPeering": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference to Express Route Circuit Private Peering Resource of the peered circuit."
        },
        "addressPrefix": {
          "type": "string",
          "description": "/29 IP address space to carve out Customer addresses for tunnels."
        },
        "authorizationKey": {
          "type": "string",
          "description": "The authorization key."
        },
        "circuitConnectionStatus": {
          "$ref": "#/definitions/CircuitConnectionStatus",
          "description": "Express Route Circuit connection state."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route circuit connection resource."
        }
      },
      "description": "Properties of the express route circuit connection."
    },
    "ExpressRouteCircuitConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteCircuitConnectionPropertiesFormat",
          "description": "Properties of the express route circuit connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Express Route Circuit Connection in an ExpressRouteCircuitPeering resource."
    },
    "ExpressRouteConnectionId": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The ID of the ExpressRouteConnection."
        }
      },
      "description": "The ID of the ExpressRouteConnection."
    },
    "ExpressRouteCircuitPeeringConfig": {
      "properties": {
        "advertisedPublicPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The reference of AdvertisedPublicPrefixes."
        },
        "advertisedCommunities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The communities of bgp peering. Specified for microsoft peering."
        },
        "advertisedPublicPrefixesState": {
          "readOnly": true,
          "type": "string",
          "description": "The advertised public prefix state of the Peering resource.",
          "enum": [
            "NotConfigured",
            "Configuring",
            "Configured",
            "ValidationNeeded"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitPeeringAdvertisedPublicPrefixState",
            "modelAsString": true
          }
        },
        "legacyMode": {
          "type": "integer",
          "format": "int32",
          "description": "The legacy mode of the peering."
        },
        "customerASN": {
          "type": "integer",
          "format": "int32",
          "description": "The CustomerASN of the peering."
        },
        "routingRegistryName": {
          "type": "string",
          "description": "The RoutingRegistryName of the configuration."
        }
      },
      "description": "Specifies the peering configuration."
    },
    "Ipv6ExpressRouteCircuitPeeringConfig": {
      "properties": {
        "primaryPeerAddressPrefix": {
          "type": "string",
          "description": "The primary address prefix."
        },
        "secondaryPeerAddressPrefix": {
          "type": "string",
          "description": "The secondary address prefix."
        },
        "microsoftPeeringConfig": {
          "$ref": "#/definitions/ExpressRouteCircuitPeeringConfig",
          "description": "The Microsoft peering configuration."
        },
        "routeFilter": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of the RouteFilter resource."
        },
        "state": {
          "type": "string",
          "description": "The state of peering.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitPeeringState",
            "modelAsString": true
          }
        }
      },
      "description": "Contains IPv6 peering config."
    },
    "ExpressRouteCircuitStats": {
      "properties": {
        "primarybytesIn": {
          "type": "integer",
          "format": "int64",
          "description": "The Primary BytesIn of the peering."
        },
        "primarybytesOut": {
          "type": "integer",
          "format": "int64",
          "description": "The primary BytesOut of the peering."
        },
        "secondarybytesIn": {
          "type": "integer",
          "format": "int64",
          "description": "The secondary BytesIn of the peering."
        },
        "secondarybytesOut": {
          "type": "integer",
          "format": "int64",
          "description": "The secondary BytesOut of the peering."
        }
      },
      "description": "Contains stats associated with the peering."
    },
    "ExpressRoutePeeringState": {
      "type": "string",
      "description": "The state of peering.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "ExpressRoutePeeringState",
        "modelAsString": true
      }
    },
    "ExpressRoutePeeringType": {
      "type": "string",
      "description": "The peering type.",
      "enum": [
        "AzurePublicPeering",
        "AzurePrivatePeering",
        "MicrosoftPeering"
      ],
      "x-ms-enum": {
        "name": "ExpressRoutePeeringType",
        "modelAsString": true
      }
    },
    "ExpressRouteCircuitPeeringPropertiesFormat": {
      "properties": {
        "peeringType": {
          "$ref": "#/definitions/ExpressRoutePeeringType",
          "description": "The peering type."
        },
        "state": {
          "$ref": "#/definitions/ExpressRoutePeeringState",
          "description": "The peering state."
        },
        "azureASN": {
          "type": "integer",
          "format": "int32",
          "description": "The Azure ASN."
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "The peer ASN."
        },
        "primaryPeerAddressPrefix": {
          "type": "string",
          "description": "The primary address prefix."
        },
        "secondaryPeerAddressPrefix": {
          "type": "string",
          "description": "The secondary address prefix."
        },
        "primaryAzurePort": {
          "type": "string",
          "description": "The primary port."
        },
        "secondaryAzurePort": {
          "type": "string",
          "description": "The secondary port."
        },
        "sharedKey": {
          "type": "string",
          "description": "The shared key."
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "description": "The VLAN ID."
        },
        "microsoftPeeringConfig": {
          "$ref": "#/definitions/ExpressRouteCircuitPeeringConfig",
          "description": "The Microsoft peering configuration."
        },
        "stats": {
          "$ref": "#/definitions/ExpressRouteCircuitStats",
          "description": "The peering stats of express route circuit."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route circuit peering resource."
        },
        "gatewayManagerEtag": {
          "type": "string",
          "description": "The GatewayManager Etag."
        },
        "lastModifiedBy": {
          "readOnly": true,
          "type": "string",
          "description": "Who was the last to modify the peering."
        },
        "routeFilter": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of the RouteFilter resource."
        },
        "ipv6PeeringConfig": {
          "$ref": "#/definitions/Ipv6ExpressRouteCircuitPeeringConfig",
          "description": "The IPv6 peering configuration."
        },
        "expressRouteConnection": {
          "$ref": "#/definitions/ExpressRouteConnectionId",
          "description": "The ExpressRoute connection."
        },
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitConnection"
          },
          "description": "The list of circuit connections associated with Azure Private Peering for this circuit."
        },
        "peeredConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PeerExpressRouteCircuitConnection"
          },
          "readOnly": true,
          "description": "The list of peered circuit connections associated with Azure Private Peering for this circuit."
        }
      },
      "description": "Properties of the express route circuit peering."
    },
    "ExpressRouteCircuitPeering": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteCircuitPeeringPropertiesFormat",
          "description": "Properties of the express route circuit peering."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Peering in an ExpressRouteCircuit resource."
    },
    "Access": {
      "type": "string",
      "description": "Access to be allowed or denied.",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "Access",
        "modelAsString": true
      }
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from the service."
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Cloud error body."
        }
      },
      "description": "An error response from the service."
    },
    "TagsObject": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Tags object for patch operations."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  },
  "x-internal-service-id": "expressroute",
  "x-internal-service-name": "ExpressRoute",
  "x-internal-toc-name": "Route Filters",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "Get",
  "x-internal-operation-name": "Get"
}