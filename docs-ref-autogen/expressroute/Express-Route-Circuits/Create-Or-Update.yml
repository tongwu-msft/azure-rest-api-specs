### YamlMime:RESTOperation
uid: management.azure.com.expressroute.expressroutecircuits.createorupdate
name: Create Or Update
service: ExpressRoute
groupName: Express Route Circuits
apiVersion: 2022-01-01
summary: Creates or updates an express route circuit.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}?api-version=2022-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: circuitName
  in: path
  isRequired: true
  description: The name of the circuit.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 201 Created
  description: Create successful. The operation returns the resulting ExpressRouteCircuit resource.
  types:
  - uid: ExpressRouteCircuit
- name: 200 OK
  description: Update successful. The operation returns the resulting ExpressRouteCircuit resource.
  types:
  - uid: ExpressRouteCircuit
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: sku
    in: body
    description: The SKU.
    types:
    - uid: ExpressRouteCircuitSku
  - name: properties.allowClassicOperations
    in: body
    description: Allow classic operations.
    types:
    - uid: boolean
  - name: properties.circuitProvisioningState
    in: body
    description: The CircuitProvisioningState state of the resource.
    types:
    - uid: string
  - name: properties.serviceProviderProvisioningState
    in: body
    description: The ServiceProviderProvisioningState state of the resource.
    types:
    - uid: ServiceProviderProvisioningState
  - name: properties.authorizations
    in: body
    description: The list of authorizations.
    types:
    - uid: ExpressRouteCircuitAuthorization
      isArray: true
  - name: properties.peerings
    in: body
    description: The list of peerings.
    types:
    - uid: ExpressRouteCircuitPeering
      isArray: true
  - name: properties.serviceKey
    in: body
    description: The ServiceKey.
    types:
    - uid: string
  - name: properties.serviceProviderNotes
    in: body
    description: The ServiceProviderNotes.
    types:
    - uid: string
  - name: properties.serviceProviderProperties
    in: body
    description: The ServiceProviderProperties.
    types:
    - uid: ExpressRouteCircuitServiceProviderProperties
  - name: properties.expressRoutePort
    in: body
    description: The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
    types:
    - uid: SubResource
  - name: properties.bandwidthInGbps
    in: body
    description: The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
    types:
    - uid: number
  - name: properties.gatewayManagerEtag
    in: body
    description: The GatewayManager Etag.
    types:
    - uid: string
  - name: properties.globalReachEnabled
    in: body
    description: Flag denoting global reach status.
    types:
    - uid: boolean
  - name: properties.authorizationKey
    in: body
    description: The authorizationKey.
    types:
    - uid: string
  - name: id
    in: body
    description: Resource ID.
    types:
    - uid: string
  - name: location
    in: body
    description: Resource location.
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: ExpressRouteCircuitSku
  description: Contains SKU in an ExpressRouteCircuit.
  kind: object
  properties:
  - name: name
    description: The name of the SKU.
    types:
    - uid: string
  - name: tier
    description: The tier of the SKU.
    types:
    - uid: ExpressRouteCircuitSkuTier
  - name: family
    description: The family of the SKU.
    types:
    - uid: ExpressRouteCircuitSkuFamily
- name: ExpressRouteCircuitAuthorization
  description: Authorization in an ExpressRouteCircuit resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Type of the resource.
    types:
    - uid: string
  - name: properties.authorizationKey
    description: The authorization key.
    types:
    - uid: string
  - name: properties.authorizationUseStatus
    description: The authorization use status.
    types:
    - uid: AuthorizationUseStatus
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the authorization resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: ExpressRouteCircuitPeering
  description: Peering in an ExpressRouteCircuit resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Type of the resource.
    types:
    - uid: string
  - name: properties.peeringType
    description: The peering type.
    types:
    - uid: ExpressRoutePeeringType
  - name: properties.state
    description: The peering state.
    types:
    - uid: ExpressRoutePeeringState
  - name: properties.azureASN
    description: The Azure ASN.
    types:
    - uid: integer
  - name: properties.peerASN
    description: The peer ASN.
    types:
    - uid: integer
  - name: properties.primaryPeerAddressPrefix
    description: The primary address prefix.
    types:
    - uid: string
  - name: properties.secondaryPeerAddressPrefix
    description: The secondary address prefix.
    types:
    - uid: string
  - name: properties.primaryAzurePort
    description: The primary port.
    types:
    - uid: string
  - name: properties.secondaryAzurePort
    description: The secondary port.
    types:
    - uid: string
  - name: properties.sharedKey
    description: The shared key.
    types:
    - uid: string
  - name: properties.vlanId
    description: The VLAN ID.
    types:
    - uid: integer
  - name: properties.microsoftPeeringConfig
    description: The Microsoft peering configuration.
    types:
    - uid: ExpressRouteCircuitPeeringConfig
  - name: properties.stats
    description: The peering stats of express route circuit.
    types:
    - uid: ExpressRouteCircuitStats
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the express route circuit peering resource.
    types:
    - uid: ProvisioningState
  - name: properties.gatewayManagerEtag
    description: The GatewayManager Etag.
    types:
    - uid: string
  - name: properties.lastModifiedBy
    isReadyOnly: true
    description: Who was the last to modify the peering.
    types:
    - uid: string
  - name: properties.routeFilter
    description: The reference to the RouteFilter resource.
    types:
    - uid: SubResource
  - name: properties.ipv6PeeringConfig
    description: The IPv6 peering configuration.
    types:
    - uid: Ipv6ExpressRouteCircuitPeeringConfig
  - name: properties.expressRouteConnection
    description: The ExpressRoute connection.
    types:
    - uid: ExpressRouteConnectionId
  - name: properties.connections
    description: The list of circuit connections associated with Azure Private Peering for this circuit.
    types:
    - uid: ExpressRouteCircuitConnection
      isArray: true
  - name: properties.peeredConnections
    isReadyOnly: true
    description: The list of peered circuit connections associated with Azure Private Peering for this circuit.
    types:
    - uid: PeerExpressRouteCircuitConnection
      isArray: true
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: ExpressRouteCircuitServiceProviderProperties
  description: Contains ServiceProviderProperties in an ExpressRouteCircuit.
  kind: object
  properties:
  - name: serviceProviderName
    description: The serviceProviderName.
    types:
    - uid: string
  - name: peeringLocation
    description: The peering location.
    types:
    - uid: string
  - name: bandwidthInMbps
    description: The BandwidthInMbps.
    types:
    - uid: integer
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: ExpressRouteCircuit
  description: ExpressRouteCircuit resource.
  kind: object
  properties:
  - name: sku
    description: The SKU.
    types:
    - uid: ExpressRouteCircuitSku
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.allowClassicOperations
    description: Allow classic operations.
    types:
    - uid: boolean
  - name: properties.circuitProvisioningState
    description: The CircuitProvisioningState state of the resource.
    types:
    - uid: string
  - name: properties.serviceProviderProvisioningState
    description: The ServiceProviderProvisioningState state of the resource.
    types:
    - uid: ServiceProviderProvisioningState
  - name: properties.authorizations
    description: The list of authorizations.
    types:
    - uid: ExpressRouteCircuitAuthorization
      isArray: true
  - name: properties.peerings
    description: The list of peerings.
    types:
    - uid: ExpressRouteCircuitPeering
      isArray: true
  - name: properties.serviceKey
    description: The ServiceKey.
    types:
    - uid: string
  - name: properties.serviceProviderNotes
    description: The ServiceProviderNotes.
    types:
    - uid: string
  - name: properties.serviceProviderProperties
    description: The ServiceProviderProperties.
    types:
    - uid: ExpressRouteCircuitServiceProviderProperties
  - name: properties.expressRoutePort
    description: The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
    types:
    - uid: SubResource
  - name: properties.bandwidthInGbps
    description: The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
    types:
    - uid: number
  - name: properties.stag
    isReadyOnly: true
    description: The identifier of the circuit traffic. Outer tag for QinQ encapsulation.
    types:
    - uid: integer
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the express route circuit resource.
    types:
    - uid: ProvisioningState
  - name: properties.gatewayManagerEtag
    description: The GatewayManager Etag.
    types:
    - uid: string
  - name: properties.globalReachEnabled
    description: Flag denoting global reach status.
    types:
    - uid: boolean
  - name: properties.authorizationKey
    description: The authorizationKey.
    types:
    - uid: string
  - name: id
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: ExpressRouteCircuitSkuTier
  description: The tier of the SKU.
  kind: enum
  properties:
  - name: Standard
    types:
    - uid: string
  - name: Premium
    types:
    - uid: string
  - name: Basic
    types:
    - uid: string
  - name: Local
    types:
    - uid: string
- name: ExpressRouteCircuitSkuFamily
  description: The family of the SKU.
  kind: enum
  properties:
  - name: UnlimitedData
    types:
    - uid: string
  - name: MeteredData
    types:
    - uid: string
- name: AuthorizationUseStatus
  description: The authorization use status.
  kind: enum
  properties:
  - name: Available
    types:
    - uid: string
  - name: InUse
    types:
    - uid: string
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: ExpressRoutePeeringType
  description: The peering type.
  kind: enum
  properties:
  - name: AzurePublicPeering
    types:
    - uid: string
  - name: AzurePrivatePeering
    types:
    - uid: string
  - name: MicrosoftPeering
    types:
    - uid: string
- name: ExpressRoutePeeringState
  description: The state of peering.
  kind: enum
  properties:
  - name: Disabled
    types:
    - uid: string
  - name: Enabled
    types:
    - uid: string
- name: ExpressRouteCircuitPeeringConfig
  description: Specifies the peering configuration.
  kind: object
  properties:
  - name: advertisedPublicPrefixes
    description: The reference to AdvertisedPublicPrefixes.
    types:
    - uid: string
      isArray: true
  - name: advertisedCommunities
    description: The communities of bgp peering. Specified for microsoft peering.
    types:
    - uid: string
      isArray: true
  - name: advertisedPublicPrefixesState
    isReadyOnly: true
    description: The advertised public prefix state of the Peering resource.
    types:
    - uid: ExpressRouteCircuitPeeringAdvertisedPublicPrefixState
  - name: legacyMode
    description: The legacy mode of the peering.
    types:
    - uid: integer
  - name: customerASN
    description: The CustomerASN of the peering.
    types:
    - uid: integer
  - name: routingRegistryName
    description: The RoutingRegistryName of the configuration.
    types:
    - uid: string
- name: ExpressRouteCircuitStats
  description: Contains stats associated with the peering.
  kind: object
  properties:
  - name: primarybytesIn
    description: The Primary BytesIn of the peering.
    types:
    - uid: integer
  - name: primarybytesOut
    description: The primary BytesOut of the peering.
    types:
    - uid: integer
  - name: secondarybytesIn
    description: The secondary BytesIn of the peering.
    types:
    - uid: integer
  - name: secondarybytesOut
    description: The secondary BytesOut of the peering.
    types:
    - uid: integer
- name: Ipv6ExpressRouteCircuitPeeringConfig
  description: Contains IPv6 peering config.
  kind: object
  properties:
  - name: primaryPeerAddressPrefix
    description: The primary address prefix.
    types:
    - uid: string
  - name: secondaryPeerAddressPrefix
    description: The secondary address prefix.
    types:
    - uid: string
  - name: microsoftPeeringConfig
    description: The Microsoft peering configuration.
    types:
    - uid: ExpressRouteCircuitPeeringConfig
  - name: routeFilter
    description: The reference to the RouteFilter resource.
    types:
    - uid: SubResource
  - name: state
    description: The state of peering.
    types:
    - uid: ExpressRouteCircuitPeeringState
- name: ExpressRouteConnectionId
  description: The ID of the ExpressRouteConnection.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The ID of the ExpressRouteConnection.
    types:
    - uid: string
- name: ExpressRouteCircuitConnection
  description: Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Type of the resource.
    types:
    - uid: string
  - name: properties.expressRouteCircuitPeering
    description: Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
    types:
    - uid: SubResource
  - name: properties.peerExpressRouteCircuitPeering
    description: Reference to Express Route Circuit Private Peering Resource of the peered circuit.
    types:
    - uid: SubResource
  - name: properties.addressPrefix
    description: /29 IP address space to carve out Customer addresses for tunnels.
    types:
    - uid: string
  - name: properties.authorizationKey
    description: The authorization key.
    types:
    - uid: string
  - name: properties.ipv6CircuitConnectionConfig
    description: IPv6 Address PrefixProperties of the express route circuit connection.
    types:
    - uid: Ipv6CircuitConnectionConfig
  - name: properties.circuitConnectionStatus
    isReadyOnly: true
    description: Express Route Circuit connection state.
    types:
    - uid: CircuitConnectionStatus
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the express route circuit connection resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: PeerExpressRouteCircuitConnection
  description: Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Type of the resource.
    types:
    - uid: string
  - name: properties.expressRouteCircuitPeering
    description: Reference to Express Route Circuit Private Peering Resource of the circuit.
    types:
    - uid: SubResource
  - name: properties.peerExpressRouteCircuitPeering
    description: Reference to Express Route Circuit Private Peering Resource of the peered circuit.
    types:
    - uid: SubResource
  - name: properties.addressPrefix
    description: /29 IP address space to carve out Customer addresses for tunnels.
    types:
    - uid: string
  - name: properties.circuitConnectionStatus
    isReadyOnly: true
    description: Express Route Circuit connection state.
    types:
    - uid: CircuitConnectionStatus
  - name: properties.connectionName
    description: The name of the express route circuit connection resource.
    types:
    - uid: string
  - name: properties.authResourceGuid
    description: The resource guid of the authorization used for the express route circuit connection.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the peer express route circuit connection resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: ServiceProviderProvisioningState
  description: The ServiceProviderProvisioningState state of the resource.
  kind: enum
  properties:
  - name: NotProvisioned
    types:
    - uid: string
  - name: Provisioning
    types:
    - uid: string
  - name: Provisioned
    types:
    - uid: string
  - name: Deprovisioning
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: ExpressRouteCircuitPeeringAdvertisedPublicPrefixState
  description: The advertised public prefix state of the Peering resource.
  kind: enum
  properties:
  - name: NotConfigured
    types:
    - uid: string
  - name: Configuring
    types:
    - uid: string
  - name: Configured
    types:
    - uid: string
  - name: ValidationNeeded
    types:
    - uid: string
- name: ExpressRouteCircuitPeeringState
  description: The state of peering.
  kind: enum
  properties:
  - name: Disabled
    types:
    - uid: string
  - name: Enabled
    types:
    - uid: string
- name: Ipv6CircuitConnectionConfig
  description: IPv6 Circuit Connection properties for global reach.
  kind: object
  properties:
  - name: addressPrefix
    description: /125 IP address space to carve out customer addresses for global reach.
    types:
    - uid: string
  - name: circuitConnectionStatus
    isReadyOnly: true
    description: Express Route Circuit connection state.
    types:
    - uid: CircuitConnectionStatus
- name: CircuitConnectionStatus
  description: Express Route Circuit connection state.
  kind: enum
  properties:
  - name: Connected
    types:
    - uid: string
  - name: Connecting
    types:
    - uid: string
  - name: Disconnected
    types:
    - uid: string
examples:
- name: Create ExpressRouteCircuit
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName?api-version=2022-01-01
    body: >-
      {
        "sku": {
          "name": "Standard_MeteredData",
          "tier": "Standard",
          "family": "MeteredData"
        },
        "properties": {
          "authorizations": [],
          "peerings": [],
          "allowClassicOperations": false,
          "serviceProviderProperties": {
            "serviceProviderName": "Equinix",
            "peeringLocation": "Silicon Valley",
            "bandwidthInMbps": 200
          }
        },
        "location": "Brazil South"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName?api-version=2022-01-01

      {
        "sku": {
          "name": "Standard_MeteredData",
          "tier": "Standard",
          "family": "MeteredData"
        },
        "properties": {
          "authorizations": [],
          "peerings": [],
          "allowClassicOperations": false,
          "serviceProviderProperties": {
            "serviceProviderName": "Equinix",
            "peeringLocation": "Silicon Valley",
            "bandwidthInMbps": 200
          }
        },
        "location": "Brazil South"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner;
      import com.azure.resourcemanager.network.models.ExpressRouteCircuitServiceProviderProperties;
      import com.azure.resourcemanager.network.models.ExpressRouteCircuitSku;
      import com.azure.resourcemanager.network.models.ExpressRouteCircuitSkuFamily;
      import com.azure.resourcemanager.network.models.ExpressRouteCircuitSkuTier;
      import java.util.Arrays;

      /** Samples for ExpressRouteCircuits CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/ExpressRouteCircuitCreate.json
           */
          /**
           * Sample code: Create ExpressRouteCircuit.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createExpressRouteCircuit(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getExpressRouteCircuits()
                  .createOrUpdate(
                      "rg1",
                      "circuitName",
                      new ExpressRouteCircuitInner()
                          .withLocation("Brazil South")
                          .withSku(
                              new ExpressRouteCircuitSku()
                                  .withName("Standard_MeteredData")
                                  .withTier(ExpressRouteCircuitSkuTier.STANDARD)
                                  .withFamily(ExpressRouteCircuitSkuFamily.METERED_DATA))
                          .withAllowClassicOperations(false)
                          .withAuthorizations(Arrays.asList())
                          .withPeerings(Arrays.asList())
                          .withServiceProviderProperties(
                              new ExpressRouteCircuitServiceProviderProperties()
                                  .withServiceProviderName("Equinix")
                                  .withPeeringLocation("Silicon Valley")
                                  .withBandwidthInMbps(200)),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.19.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/ExpressRouteCircuitCreate.json
      func ExampleExpressRouteCircuitsClient_BeginCreateOrUpdate_expressRouteCircuitCreate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewExpressRouteCircuitsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx, "rg1", "circuitName", armnetwork.ExpressRouteCircuit{
      		Location: to.Ptr("Brazil South"),
      		Properties: &armnetwork.ExpressRouteCircuitPropertiesFormat{
      			AllowClassicOperations: to.Ptr(false),
      			Authorizations:         []*armnetwork.ExpressRouteCircuitAuthorization{},
      			Peerings:               []*armnetwork.ExpressRouteCircuitPeering{},
      			ServiceProviderProperties: &armnetwork.ExpressRouteCircuitServiceProviderProperties{
      				BandwidthInMbps:     to.Ptr[int32](200),
      				PeeringLocation:     to.Ptr("Silicon Valley"),
      				ServiceProviderName: to.Ptr("Equinix"),
      			},
      		},
      		SKU: &armnetwork.ExpressRouteCircuitSKU{
      			Name:   to.Ptr("Standard_MeteredData"),
      			Family: to.Ptr(armnetwork.ExpressRouteCircuitSKUFamilyMeteredData),
      			Tier:   to.Ptr(armnetwork.ExpressRouteCircuitSKUTierStandard),
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.1.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates an express route circuit.
       *
       * @summary Creates or updates an express route circuit.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/ExpressRouteCircuitCreate.json
       */
      async function createExpressRouteCircuit() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const circuitName = "circuitName";
        const parameters = {
          allowClassicOperations: false,
          authorizations: [],
          location: "Brazil South",
          peerings: [],
          serviceProviderProperties: {
            bandwidthInMbps: 200,
            peeringLocation: "Silicon Valley",
            serviceProviderName: "Equinix",
          },
          sku: {
            name: "Standard_MeteredData",
            family: "MeteredData",
            tier: "Standard",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.expressRouteCircuits.beginCreateOrUpdateAndWait(
          resourceGroupName,
          circuitName,
          parameters
        );
        console.log(result);
      }

      createExpressRouteCircuit().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_29.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "name": "circuitName",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "type": "Microsoft.Network/expressRouteCircuits",
        "location": "Brazil South",
        "properties": {
          "provisioningState": "Succeeded",
          "peerings": [],
          "authorizations": [],
          "serviceProviderProperties": {
            "serviceProviderName": "Equinix",
            "peeringLocation": "Silicon Valley",
            "bandwidthInMbps": 200
          },
          "circuitProvisioningState": "Enabled",
          "allowClassicOperations": false,
          "serviceKey": "a1410692-0000-4ceb-b94a-b90b94d398d1",
          "serviceProviderProvisioningState": "NotProvisioned"
        },
        "sku": {
          "name": "Standard_MeteredData",
          "tier": "Standard",
          "family": "MeteredData"
        }
      }
  - statusCode: "200"
    body: >-
      {
        "name": "circuitName",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "type": "Microsoft.Network/expressRouteCircuits",
        "location": "Brazil South",
        "properties": {
          "provisioningState": "Succeeded",
          "peerings": [],
          "authorizations": [],
          "serviceProviderProperties": {
            "serviceProviderName": "Equinix",
            "peeringLocation": "Silicon Valley",
            "bandwidthInMbps": 200
          },
          "circuitProvisioningState": "Enabled",
          "allowClassicOperations": false,
          "serviceKey": "a1410692-0000-4ceb-b94a-b90b94d398d1",
          "serviceProviderProvisioningState": "NotProvisioned"
        },
        "sku": {
          "name": "Standard_MeteredData",
          "tier": "Standard",
          "family": "MeteredData"
        }
      }
- name: Create ExpressRouteCircuit on ExpressRoutePort
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/expressRouteCircuit1?api-version=2022-01-01
    body: >-
      {
        "location": "westus",
        "sku": {
          "name": "Premium_MeteredData",
          "tier": "Premium",
          "family": "MeteredData"
        },
        "properties": {
          "expressRoutePort": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName"
          },
          "authorizationKey": "b0be57f5-1fba-463b-adec-ffe767354cdd",
          "bandwidthInGbps": 10
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/expressRouteCircuit1?api-version=2022-01-01

      {
        "location": "westus",
        "sku": {
          "name": "Premium_MeteredData",
          "tier": "Premium",
          "family": "MeteredData"
        },
        "properties": {
          "expressRoutePort": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName"
          },
          "authorizationKey": "b0be57f5-1fba-463b-adec-ffe767354cdd",
          "bandwidthInGbps": 10
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner;
      import com.azure.resourcemanager.network.models.ExpressRouteCircuitSku;
      import com.azure.resourcemanager.network.models.ExpressRouteCircuitSkuFamily;
      import com.azure.resourcemanager.network.models.ExpressRouteCircuitSkuTier;

      /** Samples for ExpressRouteCircuits CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/ExpressRouteCircuitCreateOnExpressRoutePort.json
           */
          /**
           * Sample code: Create ExpressRouteCircuit on ExpressRoutePort.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createExpressRouteCircuitOnExpressRoutePort(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getExpressRouteCircuits()
                  .createOrUpdate(
                      "rg1",
                      "expressRouteCircuit1",
                      new ExpressRouteCircuitInner()
                          .withLocation("westus")
                          .withSku(
                              new ExpressRouteCircuitSku()
                                  .withName("Premium_MeteredData")
                                  .withTier(ExpressRouteCircuitSkuTier.PREMIUM)
                                  .withFamily(ExpressRouteCircuitSkuFamily.METERED_DATA))
                          .withExpressRoutePort(
                              new SubResource()
                                  .withId(
                                      "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName"))
                          .withBandwidthInGbps(10.0F)
                          .withAuthorizationKey("b0be57f5-1fba-463b-adec-ffe767354cdd"),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.19.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/ExpressRouteCircuitCreateOnExpressRoutePort.json
      func ExampleExpressRouteCircuitsClient_BeginCreateOrUpdate_expressRouteCircuitCreateOnExpressRoutePort() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewExpressRouteCircuitsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx, "rg1", "expressRouteCircuit1", armnetwork.ExpressRouteCircuit{
      		Location: to.Ptr("westus"),
      		Properties: &armnetwork.ExpressRouteCircuitPropertiesFormat{
      			AuthorizationKey: to.Ptr("b0be57f5-1fba-463b-adec-ffe767354cdd"),
      			BandwidthInGbps:  to.Ptr[float32](10),
      			ExpressRoutePort: &armnetwork.SubResource{
      				ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName"),
      			},
      		},
      		SKU: &armnetwork.ExpressRouteCircuitSKU{
      			Name:   to.Ptr("Premium_MeteredData"),
      			Family: to.Ptr(armnetwork.ExpressRouteCircuitSKUFamilyMeteredData),
      			Tier:   to.Ptr(armnetwork.ExpressRouteCircuitSKUTierPremium),
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.1.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates an express route circuit.
       *
       * @summary Creates or updates an express route circuit.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/ExpressRouteCircuitCreateOnExpressRoutePort.json
       */
      async function createExpressRouteCircuitOnExpressRoutePort() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const circuitName = "expressRouteCircuit1";
        const parameters = {
          authorizationKey: "b0be57f5-1fba-463b-adec-ffe767354cdd",
          bandwidthInGbps: 10,
          expressRoutePort: {
            id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName",
          },
          location: "westus",
          sku: { name: "Premium_MeteredData", family: "MeteredData", tier: "Premium" },
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.expressRouteCircuits.beginCreateOrUpdateAndWait(
          resourceGroupName,
          circuitName,
          parameters
        );
        console.log(result);
      }

      createExpressRouteCircuitOnExpressRoutePort().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_29.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "expressRouteCircuit1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/expressRouteCircuit1",
        "type": "Microsoft.Network/expressRouteCircuits",
        "location": "westus",
        "properties": {
          "provisioningState": "Succeeded",
          "peerings": [],
          "authorizations": [],
          "expressRoutePort": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName"
          },
          "authorizationKey": "b0be57f5-1fba-463b-adec-ffe767354cdd",
          "bandwidthInGbps": 10,
          "circuitProvisioningState": "Enabled",
          "allowClassicOperations": false,
          "gatewayManagerEtag": "20",
          "serviceKey": "d281f746-ee01-4d00-8b0a-edec4833772b",
          "serviceProviderProvisioningState": "Provisioned"
        },
        "sku": {
          "name": "Premium_MeteredData",
          "tier": "Premium",
          "family": "MeteredData"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "expressRouteCircuit1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/expressRouteCircuit1",
        "type": "Microsoft.Network/expressRouteCircuits",
        "location": "westus",
        "properties": {
          "provisioningState": "Succeeded",
          "peerings": [],
          "authorizations": [],
          "expressRoutePort": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName"
          },
          "authorizationKey": "b0be57f5-1fba-463b-adec-ffe767354cdd",
          "bandwidthInGbps": 10,
          "circuitProvisioningState": "Enabled",
          "allowClassicOperations": false,
          "gatewayManagerEtag": "20",
          "serviceKey": "d281f746-ee01-4d00-8b0a-edec4833772b",
          "serviceProviderProvisioningState": "Provisioned"
        },
        "sku": {
          "name": "Premium_MeteredData",
          "tier": "Premium",
          "family": "MeteredData"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about ExpressRoute service - Creates or updates an express route circuit.
errorCodes: []
