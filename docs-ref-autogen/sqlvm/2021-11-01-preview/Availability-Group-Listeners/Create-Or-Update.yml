### YamlMime:RESTOperation
uid: management.azure.com.sqlvm.2021-11-01-preview.availabilitygrouplisteners.createorupdate
name: Create Or Update
service: SQL VM
groupName: Availability Group Listeners
apiVersion: 2021-11-01-preview
summary: Creates or updates an availability group listener.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/{sqlVirtualMachineGroupName}/availabilityGroupListeners/{availabilityGroupListenerName}?api-version=2021-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: sqlVirtualMachineGroupName
  in: path
  isRequired: true
  description: Name of the SQL virtual machine group.
  types:
  - uid: string
- name: availabilityGroupListenerName
  in: path
  isRequired: true
  description: Name of the availability group listener.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully updated the availability group listener.
  types:
  - uid: AvailabilityGroupListener
- name: Other Status Codes
  description: "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was given to parameter.\n\n * 400 RPGenericUser - User Failure when calling other Resource Provider.\n\n * 400 RPResponseMissingAsyncOperationHeader - Response is missing Async operation header information\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 ArgumentNotInRange - Argument '{0}' not in range.\n\n * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward\n\n * 400 CRPNotAllowedOperation - Operation cannot be completed due to the following error: {0}\n\n * 400 AadAppDisabled - Microsoft AAD app SQLVMResourceProviderAuth ({0}) is disabled in your tenant.\n\n * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.\n\n * 400 InternalAPIAccessDenied - Internal API Access denied. App Id {0} is not valid to use this API.\n\n * 400 AgDoesNotExist - Availability group does not exist.\n\n * 400 AgListDoesNotMatch - SQL Availability group list does not match the list of virtual machines in SQL Virtual machine group.\n\n * 400 NoIpProvided - At least one IP needs to be provided.\n\n * 400 MoreIpProvided - Only one IP needs to be provided.\n\n * 400 SqlVmGroupDoesNotHaveAGListener - SQL virtual machine group does not have the AG listener.\n\n * 400 AgListenerUpdateNotAllowed - Only handful properties of availability group listener can be updated.\n\n * 400 SqlVmNotInGroup - SQL virtual machine is not part of the group.\n\n * 400 SqlVmListCannotBeEmpty - SQL virtual machines list cannot be empty.\n\n * 400 PublicIpNotIPv4 - Public IP must be IPv4 address.\n\n * 400 PublicIPDynamicAllocation - Public IP allocation mode must be static\n\n * 400 PublicLBInvalid - Load balancer specified is not public.\n\n * 400 SubnetMissingFromPrivateIP - Subnet must be provided with private IP.\n\n * 400 IPNotInSubnet - IP not part of subnet.\n\n * 400 NoActivePrimaryInAG - None of the nodes in AvailabilityGroup are Primary\n\n * 400 MultipleListenerSameAG - Multiple availability group listeners for same availability group are not allowed.\n\n * 400 AgListenerNotEmpty - Availability group listener not empty.\n\n * 400 AgListenerVnetMismatch - Provided VNet for Availability group listener does not match Vnet of internal load balancer.\n\n * 400 InternalLBInvalid - Load balancer specified is not internal.\n\n * 400 InvalidSqlVmResourceIdParameterValue - SQL virtual machine resource id provided is invalid.\n\n * 400 DifferentSubSqlVmList - All SQL virtual machines should be under same subscription.\n\n * 400 OnlyStandardPublicIp - Every virtual machine should have standard public IP.\n\n * 400 ListenerNameTooLong - Listener name should not exceed 15 characters.\n\n * 400 InvalidListenerName - Invalid listener name.\n\n * 400 InvalidLBResourceIdParameterValue - Load balancer resource id is invalid.\n\n * 400 InvalidPublicIpResourceIdParameterValue - Public IP resource id is invalid.\n\n * 400 InvalidSubnetIdParameterValue - Invalid resource id provided for subnet parameter.\n\n * 400 InvalidPrivateIpParameterValue - Invalid address given for private IP address.\n\n * 400 ExtVersionNotSupported - The virtual machine: {0} is running older version of SqlIaasExtension which is not supported by this operation. Please update the extension and retry the operation.\n\n * 400 InvalidReplicaRole - Invalid replica role: {0} specified for SQL VM: {1}.\n\n * 400 InvalidReplicaFailover - Invalid replica Failover: {0} for SQL VM: {1}.\n\n * 400 InvalidReplicaReadableSecondary - Invalid replica readable secondary: {0} for SQL VM: {1}.\n\n * 400 InvalidReplicaCommit - Invalid replica commit mode: {0} for SQL VM: {1}.\n\n * 400 ExpectedSynchronousCommitForAutomaticFailover - Invalid replica commit mode: {0} for SQL VM: {1}. {2} is expected for failover mode: {3}.\n\n * 400 NoPrimaryInAg - There are no replicas with primary role. There should be exactly one replica with role as primary.\n\n * 400 MoreThanOnePrimaryInAg - There are more than one replica with primary role. There should be exactly one replica with role as primary.\n\n * 400 MoreThanThreeSynchronousCommitInAg - There are more than three replica with commit mode as: {0}. There should be at most three replica with commit mode as: {0}\n\n * 400 MoreThanEightSecondariesInAg - There are more than eight secondary replica with secondary role. There should be at most eight replica with role as secondary.\n\n * 400 AlwaysOnNotEnabled - Always on feature is not enabled on Virtual machine: {0}.\n\n * 400 ExpectedReplicaNotPrimary - The VM: {0} does not host the primary replica.\n\n * 400 LoadBalancerSqlvmsMismatchWithReplicaSqlvms - List of SQL VMs specified in Availability group does not match list of SQL VMs in load balancer configuration.\n\n * 400 ReplicaSqlvmHasDuplicateEntries - Replica configuration should be unique for each SQL virtual machine. We have found one or more configuration for the same SQL virtual machine resource.\n\n * 400 ReplicaDeleteNotAllowed - Replica deletion through SQL VM RP is not supported yet.\n\n * 400 OnlyBasicPublicIP - All VM specified should contain only Basic Public IP, when providing Loadbalancer Basic Sku.\n\n * 400 NICCannotUseMultipleLBsOfSameType - NIC: {0} cannot reference more than one load balancer of INTERNAL or PUBLIC type\n\n * 400 AGReplicaSQLStartupAccount - NT service account cannot be used as SQL startup account for AG setup. You should use a domain account.\n\n * 400 AgListenerMultiSubnetUpdateNotAllowed - Update of multi subnet AG listener is not allowed.\n\n * 400 ListenerIpSubnetVmSubnetMismatch - Listener static ip address subnet and VM subnet should be same\n\n * 400 VmNicVnetMismatch - Virtual machine NIC VNet mismatch.\n\n * 400 NoAvailabilitySet - Vm is not associated with any availability set.\n\n * 400 AvailabilitySetMismatch - Availability set of virtual machines does not match.\n\n * 400 MismatchVmGroupSubscription - Subscription id for SQL virtual machine and SQL virtual machine group are different.\n\n * 400 VmNotRunning - The VM is not in running state.\n\n * 400 VmAgentNotRunning - The VM agent is not installed or in running state.\n\n * 400 NoIpAvailable - No available IP.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 404 RPOperationNotFound - Operation not found\n\n * 404 OperationIdNotFound - Operation id could not be found.\n\n * 404 OperationTypeNotFound - Operation Type not found.\n\n * 404 SubscriptionDoesNotHaveSqlVMGroupInResourceGroup - Subscription does not have SQL virtual machine group in resource group.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 LBGenericErrors - LB operation failed\n\n * 409 NICGenericError - NIC operation failed\n\n * 409 SqlExtensionNotInstalled - SQL extension not installed.\n\n * 409 RPPluginSubstatusMissing - RP plugin substatus missing\n\n * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.\n\n * 409 ResourceExists - There was an internal error in cleaning up of resources.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ReplicasWithDifferentSqlStartupAccounts - Please make sure all your SQL server startup accounts in the specified replicas are the same. This is one of our prerequisites for setting up availability groups.\n\n * 409 ReplicasJoinedToMoreThanOneCluster - AG replicas are joined to more than one failover cluster. Please make sure all your replicas are joined to same failover cluster.\n\n * 409 IPNotAvailable - IP {0} is not available{1}. Consider using one from ({2})\n\n * 409 IpAddressAlreadyReserved - IP address reserved for this listener already exists. Please use the IP address\n\n * 429 TooManyRequestsReceived - \n\n * 500 RPGenericSystem - System Failure when calling other Resource Provider.\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 SqlVmGroupIsBusy - SQL virtual machine group is busy."
- name: 201 Created
  description: Successfully created the availability group listener.
  types:
  - uid: AvailabilityGroupListener
requestBody:
- name: default
  parameters:
  - name: properties.availabilityGroupName
    in: body
    description: Name of the availability group.
    types:
    - uid: string
  - name: properties.loadBalancerConfigurations
    in: body
    description: List of load balancer configurations for an availability group listener.
    types:
    - uid: LoadBalancerConfiguration
      isArray: true
  - name: properties.createDefaultAvailabilityGroupIfNotExist
    in: body
    description: Create a default availability group if it does not exist.
    types:
    - uid: boolean
  - name: properties.port
    in: body
    description: Listener port.
    types:
    - uid: integer
  - name: properties.availabilityGroupConfiguration
    in: body
    description: Availability Group configuration.
    types:
    - uid: AgConfiguration
requestHeader: []
definitions:
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: LoadBalancerConfiguration
  description: A load balancer configuration for an availability group listener.
  kind: object
  properties:
  - name: privateIpAddress
    description: Private IP address.
    types:
    - uid: PrivateIPAddress
  - name: publicIpAddressResourceId
    description: Resource id of the public IP.
    types:
    - uid: string
  - name: loadBalancerResourceId
    description: Resource id of the load balancer.
    types:
    - uid: string
  - name: probePort
    description: Probe port.
    types:
    - uid: integer
  - name: sqlVirtualMachineInstances
    description: List of the SQL virtual machine instance resource id's that are enrolled into the availability group listener.
    types:
    - uid: string
      isArray: true
- name: AgConfiguration
  description: Availability group configuration.
  kind: object
  properties:
  - name: replicas
    isReadyOnly: true
    description: Replica configurations.
    types:
    - uid: AgReplica
      isArray: true
- name: AvailabilityGroupListener
  description: A SQL Server availability group listener.
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: Metadata pertaining to creation and last modification of the resource.
    types:
    - uid: systemData
  - name: properties.provisioningState
    isReadyOnly: true
    description: Provisioning state to track the async operation status.
    types:
    - uid: string
  - name: properties.availabilityGroupName
    description: Name of the availability group.
    types:
    - uid: string
  - name: properties.loadBalancerConfigurations
    description: List of load balancer configurations for an availability group listener.
    types:
    - uid: LoadBalancerConfiguration
      isArray: true
  - name: properties.createDefaultAvailabilityGroupIfNotExist
    description: Create a default availability group if it does not exist.
    types:
    - uid: boolean
  - name: properties.port
    description: Listener port.
    types:
    - uid: integer
  - name: properties.availabilityGroupConfiguration
    description: Availability Group configuration.
    types:
    - uid: AgConfiguration
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: PrivateIPAddress
  description: A private IP address bound to the availability group listener.
  kind: object
  properties:
  - name: ipAddress
    description: Private IP address bound to the availability group listener.
    types:
    - uid: string
  - name: subnetResourceId
    description: Subnet used to include private IP.
    types:
    - uid: string
- name: AgReplica
  description: Availability group replica configuration.
  kind: object
  properties:
  - name: sqlVirtualMachineInstanceId
    description: Sql VirtualMachine Instance Id.
    types:
    - uid: string
  - name: role
    description: Replica Role in availability group.
    types:
    - uid: Role
  - name: commit
    description: Replica commit mode in availability group.
    types:
    - uid: Commit
  - name: failover
    description: Replica failover mode in availability group.
    types:
    - uid: Failover
  - name: readableSecondary
    description: Replica readable secondary mode in availability group.
    types:
    - uid: ReadableSecondary
- name: Role
  description: Replica Role in availability group.
  kind: enum
  properties:
  - name: PRIMARY
    types:
    - uid: string
  - name: SECONDARY
    types:
    - uid: string
- name: Commit
  description: Replica commit mode in availability group.
  kind: enum
  properties:
  - name: SYNCHRONOUS_COMMIT
    types:
    - uid: string
  - name: ASYNCHRONOUS_COMMIT
    types:
    - uid: string
- name: Failover
  description: Replica failover mode in availability group.
  kind: enum
  properties:
  - name: AUTOMATIC
    types:
    - uid: string
  - name: MANUAL
    types:
    - uid: string
- name: ReadableSecondary
  description: Replica readable secondary mode in availability group.
  kind: enum
  properties:
  - name: NO
    types:
    - uid: string
  - name: ALL
    types:
    - uid: string
  - name: READ_ONLY
    types:
    - uid: string
examples:
- name: Creates or updates an availability group listener.
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/testvmgroup/availabilityGroupListeners/agl-test?api-version=2021-11-01-preview
    body: >-
      {
        "properties": {
          "availabilityGroupName": "ag-test",
          "loadBalancerConfigurations": [
            {
              "privateIpAddress": {
                "ipAddress": "10.1.0.112",
                "subnetResourceId": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/default"
              },
              "loadBalancerResourceId": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb-test",
              "probePort": 59983,
              "sqlVirtualMachineInstances": [
                "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm2",
                "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm3"
              ]
            }
          ],
          "port": 1433
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/testvmgroup/availabilityGroupListeners/agl-test?api-version=2021-11-01-preview

      {
        "properties": {
          "availabilityGroupName": "ag-test",
          "loadBalancerConfigurations": [
            {
              "privateIpAddress": {
                "ipAddress": "10.1.0.112",
                "subnetResourceId": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/default"
              },
              "loadBalancerResourceId": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb-test",
              "probePort": 59983,
              "sqlVirtualMachineInstances": [
                "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm2",
                "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm3"
              ]
            }
          ],
          "port": 1433
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.resourcemanager.sqlvirtualmachine.models.LoadBalancerConfiguration;
      import com.azure.resourcemanager.sqlvirtualmachine.models.PrivateIpAddress;
      import java.util.Arrays;

      /** Samples for AvailabilityGroupListeners CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/sqlvirtualmachine/resource-manager/Microsoft.SqlVirtualMachine/preview/2021-11-01-preview/examples/CreateOrUpdateAvailabilityGroupListener.json
           */
          /**
           * Sample code: Creates or updates an availability group listener.
           *
           * @param manager Entry point to SqlVirtualMachineManager.
           */
          public static void createsOrUpdatesAnAvailabilityGroupListener(
              com.azure.resourcemanager.sqlvirtualmachine.SqlVirtualMachineManager manager) {
              manager
                  .availabilityGroupListeners()
                  .define("agl-test")
                  .withExistingSqlVirtualMachineGroup("testrg", "testvmgroup")
                  .withAvailabilityGroupName("ag-test")
                  .withLoadBalancerConfigurations(
                      Arrays
                          .asList(
                              new LoadBalancerConfiguration()
                                  .withPrivateIpAddress(
                                      new PrivateIpAddress()
                                          .withIpAddress("10.1.0.112")
                                          .withSubnetResourceId(
                                              "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/default"))
                                  .withLoadBalancerResourceId(
                                      "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb-test")
                                  .withProbePort(59983)
                                  .withSqlVirtualMachineInstances(
                                      Arrays
                                          .asList(
                                              "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm2",
                                              "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm3"))))
                  .withPort(1433)
                  .create();
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-sqlvirtualmachine_1.0.0-beta.2/sdk/sqlvirtualmachine/azure-resourcemanager-sqlvirtualmachine/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armsqlvirtualmachine_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sqlvirtualmachine/armsqlvirtualmachine"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sqlvirtualmachine/resource-manager/Microsoft.SqlVirtualMachine/preview/2021-11-01-preview/examples/CreateOrUpdateAvailabilityGroupListener.json
      func ExampleAvailabilityGroupListenersClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsqlvirtualmachine.NewAvailabilityGroupListenersClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"testrg",
      		"testvmgroup",
      		"agl-test",
      		armsqlvirtualmachine.AvailabilityGroupListener{
      			Properties: &armsqlvirtualmachine.AvailabilityGroupListenerProperties{
      				AvailabilityGroupName: to.Ptr("ag-test"),
      				LoadBalancerConfigurations: []*armsqlvirtualmachine.LoadBalancerConfiguration{
      					{
      						LoadBalancerResourceID: to.Ptr("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb-test"),
      						PrivateIPAddress: &armsqlvirtualmachine.PrivateIPAddress{
      							IPAddress:        to.Ptr("10.1.0.112"),
      							SubnetResourceID: to.Ptr("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/default"),
      						},
      						ProbePort: to.Ptr[int32](59983),
      						SQLVirtualMachineInstances: []*string{
      							to.Ptr("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm2"),
      							to.Ptr("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm3")},
      					}},
      				Port: to.Ptr[int32](1433),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsqlvirtualmachine%2Farmsqlvirtualmachine%2Fv0.6.0/sdk/resourcemanager/sqlvirtualmachine/armsqlvirtualmachine/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "provisioningState": "Updating",
          "loadBalancerConfigurations": [
            {
              "privateIpAddress": {
                "ipAddress": "10.1.0.113",
                "subnetResourceId": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/default"
              },
              "sqlVirtualMachineInstances": [
                "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm2",
                "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm3"
              ]
            }
          ],
          "port": 1433
        },
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/testvmgroup/availabilityGroupListeners/agl-test",
        "name": "agl-test",
        "type": "Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/availabilityGroupListeners"
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "provisioningState": "Provisioning",
          "loadBalancerConfigurations": [
            {
              "privateIpAddress": {
                "ipAddress": "10.1.0.112",
                "subnetResourceId": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/default"
              },
              "sqlVirtualMachineInstances": [
                "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm2",
                "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm3"
              ]
            }
          ],
          "port": 1433
        },
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/testvmgroup/availabilityGroupListeners/agl-test",
        "name": "agl-test",
        "type": "Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/availabilityGroupListeners"
      }
security: []
metadata:
  description: Learn more about SQL VM service - Creates or updates an availability group listener.
errorCodes: []
