### YamlMime:RESTOperation
uid: management.azure.com.desktopvirtualization.workspaces.createorupdate
name: Create Or Update
service: Desktop Virtualization
groupName: Workspaces
apiVersion: 2022-02-10-preview
summary: Create or update a workspace.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}?api-version=2022-02-10-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: workspaceName
  in: path
  isRequired: true
  description: The name of the workspace
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully updated workspace.
  types:
  - uid: Workspace
- name: 201 Created
  description: Successfully created workspace.
  types:
  - uid: Workspace
- name: Other Status Codes
  description: Automation error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: properties.description
    in: body
    description: Description of Workspace.
    types:
    - uid: string
  - name: properties.friendlyName
    in: body
    description: Friendly name of Workspace.
    types:
    - uid: string
  - name: properties.applicationGroupReferences
    in: body
    description: List of applicationGroup resource Ids.
    types:
    - uid: string
      isArray: true
  - name: properties.publicNetworkAccess
    in: body
    description: Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints
    types:
    - uid: PublicNetworkAccess
  - name: location
    in: body
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: managedBy
    in: body
    description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
    types:
    - uid: string
  - name: kind
    in: body
    description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: identity
    in: body
    description: ''
    types:
    - uid: Identity
  - name: sku
    in: body
    description: ''
    types:
    - uid: Sku
  - name: plan
    in: body
    description: ''
    types:
    - uid: Plan
requestHeader: []
definitions:
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: PrivateEndpointConnection
  description: The Private Endpoint Connection resource.
  kind: object
  properties:
  - name: properties.privateEndpoint
    description: The resource of private end point.
    types:
    - uid: PrivateEndpoint
  - name: properties.privateLinkServiceConnectionState
    description: A collection of information about the state of the connection between service consumer and provider.
    types:
    - uid: PrivateLinkServiceConnectionState
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the private endpoint connection resource.
    types:
    - uid: PrivateEndpointConnectionProvisioningState
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: Identity
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal ID of resource identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant ID of resource.
    types:
    - uid: string
  - name: type
    description: The identity type.
    types:
    - uid: ResourceIdentityType
- name: Sku
  kind: object
  properties:
  - name: name
    description: The name of the SKU. Ex - P3. It is typically a letter+number code
    types:
    - uid: string
  - name: tier
    description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    types:
    - uid: SkuTier
  - name: size
    description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
    types:
    - uid: string
  - name: family
    description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
    types:
    - uid: string
  - name: capacity
    description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
    types:
    - uid: integer
- name: Plan
  kind: object
  properties:
  - name: name
    description: A user defined name of the 3rd Party Artifact that is being procured.
    types:
    - uid: string
  - name: publisher
    description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
    types:
    - uid: string
  - name: product
    description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
    types:
    - uid: string
  - name: promotionCode
    description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
    types:
    - uid: string
  - name: version
    description: The version of the desired product/artifact.
    types:
    - uid: string
- name: Workspace
  description: Represents a Workspace definition.
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: Metadata pertaining to creation and last modification of the resource.
    types:
    - uid: systemData
  - name: properties.objectId
    isReadyOnly: true
    description: ObjectId of Workspace. (internal use)
    types:
    - uid: string
  - name: properties.description
    description: Description of Workspace.
    types:
    - uid: string
  - name: properties.friendlyName
    description: Friendly name of Workspace.
    types:
    - uid: string
  - name: properties.applicationGroupReferences
    description: List of applicationGroup resource Ids.
    types:
    - uid: string
      isArray: true
  - name: properties.cloudPcResource
    isReadyOnly: true
    description: Is cloud pc resource.
    types:
    - uid: boolean
  - name: properties.publicNetworkAccess
    description: Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints
    types:
    - uid: PublicNetworkAccess
  - name: properties.privateEndpointConnections
    isReadyOnly: true
    description: List of private endpoint connection associated with the specified resource
    types:
    - uid: PrivateEndpointConnection
      isArray: true
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
  - name: location
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: managedBy
    description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
    types:
    - uid: string
  - name: kind
    description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: identity
    description: ''
    types:
    - uid: Identity
  - name: sku
    description: ''
    types:
    - uid: Sku
  - name: plan
    description: ''
    types:
    - uid: Plan
- name: CloudError
  description: Cloud error object.
  kind: object
  properties:
  - name: error
    description: Cloud error object properties.
    types:
    - uid: CloudErrorProperties
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: PrivateEndpoint
  description: The Private Endpoint resource.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The ARM identifier for Private Endpoint
    types:
    - uid: string
- name: PrivateLinkServiceConnectionState
  description: A collection of information about the state of the connection between service consumer and provider.
  kind: object
  properties:
  - name: status
    description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
    types:
    - uid: PrivateEndpointServiceConnectionStatus
  - name: description
    description: The reason for approval/rejection of the connection.
    types:
    - uid: string
  - name: actionsRequired
    description: A message indicating if changes on the service provider require any updates on the consumer.
    types:
    - uid: string
- name: PrivateEndpointConnectionProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: ResourceIdentityType
  description: The identity type.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
- name: SkuTier
  description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
  kind: enum
  properties:
  - name: Free
    types:
    - uid: string
  - name: Basic
    types:
    - uid: string
  - name: Standard
    types:
    - uid: string
  - name: Premium
    types:
    - uid: string
- name: PublicNetworkAccess
  description: Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: CloudErrorProperties
  description: Cloud error object properties.
  kind: object
  properties:
  - name: code
    description: Error code
    types:
    - uid: string
  - name: message
    description: Error message indicating why the operation failed.
    types:
    - uid: string
- name: PrivateEndpointServiceConnectionStatus
  description: The private endpoint connection status.
  kind: enum
  properties:
  - name: Pending
    types:
    - uid: string
  - name: Approved
    types:
    - uid: string
  - name: Rejected
    types:
    - uid: string
examples:
- name: Workspace_Create
  request:
    uri: PUT https://management.azure.com/subscriptions/daefabc0-95b4-48b3-b645-8a753a63c4fa/resourceGroups/resourceGroup1/providers/Microsoft.DesktopVirtualization/workspaces/workspace1?api-version=2022-02-10-preview
    body: >-
      {
        "location": "centralus",
        "tags": {
          "tag1": "value1",
          "tag2": "value2"
        },
        "properties": {
          "description": "des1",
          "friendlyName": "friendly"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/daefabc0-95b4-48b3-b645-8a753a63c4fa/resourceGroups/resourceGroup1/providers/Microsoft.DesktopVirtualization/workspaces/workspace1?api-version=2022-02-10-preview

      {
        "location": "centralus",
        "tags": {
          "tag1": "value1",
          "tag2": "value2"
        },
        "properties": {
          "description": "des1",
          "friendlyName": "friendly"
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armdesktopvirtualization_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/desktopvirtualization/armdesktopvirtualization/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/desktopvirtualization/resource-manager/Microsoft.DesktopVirtualization/preview/2022-02-10-preview/examples/Workspace_Create.json
      func ExampleWorkspacesClient_CreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armdesktopvirtualization.NewWorkspacesClient("daefabc0-95b4-48b3-b645-8a753a63c4fa", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CreateOrUpdate(ctx,
      		"resourceGroup1",
      		"workspace1",
      		armdesktopvirtualization.Workspace{
      			Location: to.Ptr("centralus"),
      			Tags: map[string]*string{
      				"tag1": to.Ptr("value1"),
      				"tag2": to.Ptr("value2"),
      			},
      			Properties: &armdesktopvirtualization.WorkspaceProperties{
      				Description:  to.Ptr("des1"),
      				FriendlyName: to.Ptr("friendly"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fdesktopvirtualization%2Farmdesktopvirtualization%2Fv2.0.0-beta.1/sdk/resourcemanager/desktopvirtualization/armdesktopvirtualization/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "workspace1",
        "id": "/subscriptions/daefabc0-95b4-48b3-b645-8a753a63c4fa/resourceGroups/resourceGroup1/providers/Microsoft.DesktopVirtualization/workspaces/workspace1",
        "type": "Microsoft.DesktopVirtualization/workspaces",
        "location": "centralus",
        "tags": {
          "key1": "value1",
          "key2": "value2"
        },
        "systemData": {
          "createdBy": "user1",
          "createdByType": "User",
          "createdAt": "2020-01-01T17:18:19.1234567Z",
          "lastModifiedBy": "user2",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2020-01-02T17:18:19.1234567Z"
        },
        "properties": {
          "objectId": "7877fb31-4bde-49fd-9df3-c046e0ec5325",
          "description": "des1",
          "friendlyName": "friendly",
          "cloudPcResource": false,
          "publicNetworkAccess": "Enabled"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "workspace1",
        "id": "/subscriptions/daefabc0-95b4-48b3-b645-8a753a63c4fa/resourceGroups/resourceGroup1/providers/Microsoft.DesktopVirtualization/workspaces/workspace1",
        "type": "Microsoft.DesktopVirtualization/workspaces",
        "location": "centralus",
        "tags": {
          "key1": "value1",
          "key2": "value2"
        },
        "systemData": {
          "createdBy": "user1",
          "createdByType": "User",
          "createdAt": "2020-01-01T17:18:19.1234567Z",
          "lastModifiedBy": "user2",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2020-01-02T17:18:19.1234567Z"
        },
        "properties": {
          "objectId": "7877fb31-4bde-49fd-9df3-c046e0ec5325",
          "description": "des1",
          "friendlyName": "friendly",
          "cloudPcResource": false,
          "publicNetworkAccess": "Enabled"
        }
      }
security: []
metadata:
  description: >
    Learn more about Desktop Virtualization service - Create or update a workspace.
errorCodes: []
