### YamlMime:RESTOperation
uid: management.azure.com.desktopvirtualization.hostpools.get
name: Get
service: Desktop Virtualization
groupName: Host Pools
apiVersion: 2021-07-12
summary: Get a host pool.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}?api-version=2021-07-12
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: hostPoolName
  in: path
  isRequired: true
  description: The name of the host pool within the specified resource group
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved host pool.
  types:
  - uid: HostPool
- name: Other Status Codes
  description: Automation error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: HostPool
  description: Represents a HostPool definition.
  kind: object
  properties:
  - name: properties.objectId
    isReadyOnly: true
    description: ObjectId of HostPool. (internal use)
    types:
    - uid: string
  - name: properties.friendlyName
    description: Friendly name of HostPool.
    types:
    - uid: string
  - name: properties.description
    description: Description of HostPool.
    types:
    - uid: string
  - name: properties.hostPoolType
    description: HostPool type for desktop.
    types:
    - uid: HostPoolType
  - name: properties.personalDesktopAssignmentType
    description: PersonalDesktopAssignment type for HostPool.
    types:
    - uid: PersonalDesktopAssignmentType
  - name: properties.customRdpProperty
    description: Custom rdp property of HostPool.
    types:
    - uid: string
  - name: properties.maxSessionLimit
    description: The max session limit of HostPool.
    types:
    - uid: integer
  - name: properties.loadBalancerType
    description: The type of the load balancer.
    types:
    - uid: LoadBalancerType
  - name: properties.ring
    description: The ring number of HostPool.
    types:
    - uid: integer
  - name: properties.validationEnvironment
    description: Is validation environment.
    types:
    - uid: boolean
  - name: properties.registrationInfo
    description: The registration info of HostPool.
    types:
    - uid: RegistrationInfo
  - name: properties.vmTemplate
    description: VM template for sessionhosts configuration within hostpool.
    types:
    - uid: string
  - name: properties.applicationGroupReferences
    isReadyOnly: true
    description: List of applicationGroup links.
    types:
    - uid: string
      isArray: true
  - name: properties.ssoadfsAuthority
    description: URL to customer ADFS server for signing WVD SSO certificates.
    types:
    - uid: string
  - name: properties.ssoClientId
    description: ClientId for the registered Relying Party used to issue WVD SSO certificates.
    types:
    - uid: string
  - name: properties.ssoClientSecretKeyVaultPath
    description: Path to Azure KeyVault storing the secret used for communication to ADFS.
    types:
    - uid: string
  - name: properties.ssoSecretType
    description: The type of single sign on Secret Type.
    types:
    - uid: SSOSecretType
  - name: properties.preferredAppGroupType
    description: The type of preferred application group type, default to Desktop Application Group
    types:
    - uid: PreferredAppGroupType
  - name: properties.startVMOnConnect
    description: The flag to turn on/off StartVMOnConnect feature.
    types:
    - uid: boolean
  - name: properties.migrationRequest
    description: The registration info of HostPool.
    types:
    - uid: MigrationRequestProperties
  - name: properties.cloudPcResource
    isReadyOnly: true
    description: Is cloud pc resource.
    types:
    - uid: boolean
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
  - name: location
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: managedBy
    description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
    types:
    - uid: string
  - name: kind
    description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: identity
    description: ''
    types:
    - uid: Identity
  - name: sku
    description: ''
    types:
    - uid: Sku
  - name: plan
    description: ''
    types:
    - uid: Plan
- name: CloudError
  kind: object
  properties:
  - name: error
    description: ''
    types:
    - uid: CloudErrorProperties
- name: HostPoolType
  description: HostPool type for desktop.
  kind: enum
  properties:
  - name: Personal
    description: Users will be assigned a SessionHost either by administrators (PersonalDesktopAssignmentType = Direct) or upon connecting to the pool (PersonalDesktopAssignmentType = Automatic). They will always be redirected to their assigned SessionHost.
    types:
    - uid: string
  - name: Pooled
    description: Users get a new (random) SessionHost every time it connects to the HostPool.
    types:
    - uid: string
  - name: BYODesktop
    description: Users assign their own machines, load balancing logic remains the same as Personal. PersonalDesktopAssignmentType must be Direct.
    types:
    - uid: string
- name: PersonalDesktopAssignmentType
  description: PersonalDesktopAssignment type for HostPool.
  kind: enum
  properties:
  - name: Automatic
    types:
    - uid: string
  - name: Direct
    types:
    - uid: string
- name: LoadBalancerType
  description: The type of the load balancer.
  kind: enum
  properties:
  - name: BreadthFirst
    types:
    - uid: string
  - name: DepthFirst
    types:
    - uid: string
  - name: Persistent
    types:
    - uid: string
- name: RegistrationInfo
  description: Represents a RegistrationInfo definition.
  kind: object
  properties:
  - name: expirationTime
    description: Expiration time of registration token.
    types:
    - uid: string
  - name: token
    description: The registration token base64 encoded string.
    types:
    - uid: string
  - name: registrationTokenOperation
    description: The type of resetting the token.
    types:
    - uid: RegistrationTokenOperation
- name: SSOSecretType
  description: The type of single sign on Secret Type.
  kind: enum
  properties:
  - name: SharedKey
    types:
    - uid: string
  - name: Certificate
    types:
    - uid: string
  - name: SharedKeyInKeyVault
    types:
    - uid: string
  - name: CertificateInKeyVault
    types:
    - uid: string
- name: PreferredAppGroupType
  description: The type of preferred application group type, default to Desktop Application Group
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: Desktop
    types:
    - uid: string
  - name: RailApplications
    types:
    - uid: string
- name: MigrationRequestProperties
  description: Properties for arm migration.
  kind: object
  properties:
  - name: operation
    description: The type of operation for migration.
    types:
    - uid: Operation
  - name: migrationPath
    description: The path to the legacy object to migrate.
    types:
    - uid: string
- name: Identity
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal ID of resource identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant ID of resource.
    types:
    - uid: string
  - name: type
    description: The identity type.
    types:
    - uid: ResourceIdentityType
- name: Sku
  kind: object
  properties:
  - name: name
    description: The name of the SKU. Ex - P3. It is typically a letter+number code
    types:
    - uid: string
  - name: tier
    description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    types:
    - uid: SkuTier
  - name: size
    description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
    types:
    - uid: string
  - name: family
    description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
    types:
    - uid: string
  - name: capacity
    description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
    types:
    - uid: integer
- name: Plan
  kind: object
  properties:
  - name: name
    description: A user defined name of the 3rd Party Artifact that is being procured.
    types:
    - uid: string
  - name: publisher
    description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
    types:
    - uid: string
  - name: product
    description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
    types:
    - uid: string
  - name: promotionCode
    description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
    types:
    - uid: string
  - name: version
    description: The version of the desired product/artifact.
    types:
    - uid: string
- name: CloudErrorProperties
  kind: object
  properties:
  - name: code
    description: Error code
    types:
    - uid: string
  - name: message
    description: Error message indicating why the operation failed.
    types:
    - uid: string
- name: RegistrationTokenOperation
  description: The type of resetting the token.
  kind: enum
  properties:
  - name: Delete
    types:
    - uid: string
  - name: None
    types:
    - uid: string
  - name: Update
    types:
    - uid: string
- name: Operation
  description: The type of operation for migration.
  kind: enum
  properties:
  - name: Start
    description: Start the migration.
    types:
    - uid: string
  - name: Revoke
    description: Revoke the migration.
    types:
    - uid: string
  - name: Complete
    description: Complete the migration.
    types:
    - uid: string
  - name: Hide
    description: Hide the hostpool.
    types:
    - uid: string
  - name: Unhide
    description: Unhide the hostpool.
    types:
    - uid: string
- name: ResourceIdentityType
  description: The identity type.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
- name: SkuTier
  description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
  kind: enum
  properties:
  - name: Free
    types:
    - uid: string
  - name: Basic
    types:
    - uid: string
  - name: Standard
    types:
    - uid: string
  - name: Premium
    types:
    - uid: string
examples:
- name: HostPool_Get
  request:
    uri: GET https://management.azure.com/subscriptions/daefabc0-95b4-48b3-b645-8a753a63c4fa/resourceGroups/resourceGroup1/providers/Microsoft.DesktopVirtualization/hostPools/hostPool1?api-version=2021-07-12
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "hostPool1",
        "id": "/subscriptions/daefabc0-95b4-48b3-b645-8a753a63c4fa/resourceGroups/resourceGroup1/providers/Microsoft.DesktopVirtualization/hostPools/hostPool1",
        "type": "/Microsoft.DesktopVirtualization/hostPools",
        "location": "centralus",
        "tags": {
          "key1": "value1",
          "key2": "value2"
        },
        "properties": {
          "objectId": "7877fb31-4bde-49fd-9df3-c046e0ec5325",
          "friendlyName": "friendly",
          "description": "des1",
          "hostPoolType": "Pooled",
          "personalDesktopAssignmentType": "Automatic",
          "customRdpProperty": null,
          "maxSessionLimit": 999999,
          "loadBalancerType": "BreadthFirst",
          "validationEnvironment": null,
          "ring": null,
          "registrationInfo": {
            "expirationTime": "2008-09-22T14:01:54.9571247Z",
            "token": "token",
            "registrationTokenOperation": "Update"
          },
          "vmTemplate": "{json:json}",
          "ssoadfsAuthority": "https://adfs",
          "ssoClientId": "client",
          "ssoClientSecretKeyVaultPath": "https://keyvault/secret",
          "ssoSecretType": "SharedKey",
          "preferredAppGroupType": "Desktop",
          "startVMOnConnect": false,
          "cloudPcResource": false
        }
      }
  - statusCode: default
    body: >-
      {
        "error": {
          "code": "hostPoolDoesNotExist",
          "message": "Host Pool Does Not Exist"
        }
      }
security: []
metadata:
  description: Learn more about Desktop Virtualization service - Get a host pool.
errorCodes: []
