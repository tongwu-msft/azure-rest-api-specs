### YamlMime:RESTOperation
uid: management.azure.com.defenderforcloud.jitnetworkaccesspolicies.createorupdate
name: Create Or Update
service: Defender for Cloud
groupName: Jit Network Access Policies
apiVersion: 2020-01-01
summary: Create a policy for protecting resources using Just-in-Time access control
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/jitNetworkAccessPolicies/{jitNetworkAccessPolicyName}?api-version=2020-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Azure subscription ID
  types:
  - uid: string
  pattern: ^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the user's subscription. The name is case insensitive.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: ascLocation
  in: path
  isRequired: true
  description: The location where ASC stores the data of the subscription. can be retrieved from Get locations
  types:
  - uid: string
- name: jitNetworkAccessPolicyName
  in: path
  isRequired: true
  description: Name of a Just-in-Time access configuration policy.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: API version for the operation
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: JitNetworkAccessPolicy
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: properties.virtualMachines
    in: body
    isRequired: true
    description: Configurations for Microsoft.Compute/virtualMachines resource type.
    types:
    - uid: JitNetworkAccessPolicyVirtualMachine
      isArray: true
  - name: properties.requests
    in: body
    description: ''
    types:
    - uid: JitNetworkAccessRequest
      isArray: true
  - name: kind
    in: body
    description: Kind of the resource
    types:
    - uid: string
requestHeader: []
definitions:
- name: JitNetworkAccessPolicyVirtualMachine
  kind: object
  properties:
  - name: id
    description: Resource ID of the virtual machine that is linked to this policy
    types:
    - uid: string
  - name: ports
    description: Port configurations for the virtual machine
    types:
    - uid: JitNetworkAccessPortRule
      isArray: true
  - name: publicIpAddress
    description: Public IP address of the Azure Firewall that is linked to this policy, if applicable
    types:
    - uid: string
- name: JitNetworkAccessRequest
  kind: object
  properties:
  - name: virtualMachines
    description: ''
    types:
    - uid: JitNetworkAccessRequestVirtualMachine
      isArray: true
  - name: startTimeUtc
    description: The start time of the request in UTC
    types:
    - uid: string
  - name: requestor
    description: The identity of the person who made the request
    types:
    - uid: string
  - name: justification
    description: The justification for making the initiate request
    types:
    - uid: string
- name: JitNetworkAccessPolicy
  kind: object
  properties:
  - name: properties.virtualMachines
    description: Configurations for Microsoft.Compute/virtualMachines resource type.
    types:
    - uid: JitNetworkAccessPolicyVirtualMachine
      isArray: true
  - name: properties.requests
    description: ''
    types:
    - uid: JitNetworkAccessRequest
      isArray: true
  - name: properties.provisioningState
    isReadyOnly: true
    description: Gets the provisioning state of the Just-in-Time policy.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: kind
    description: Kind of the resource
    types:
    - uid: string
  - name: location
    isReadyOnly: true
    description: Location where the resource is stored
    types:
    - uid: string
- name: CloudError
  description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
  kind: object
  properties:
  - name: error.code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: error.message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: error.target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: error.details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: CloudErrorBody
      isArray: true
  - name: error.additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: JitNetworkAccessPortRule
  kind: object
  properties:
  - name: number
    description: ''
    types:
    - uid: integer
  - name: protocol
    description: ''
    types:
    - uid: protocol
  - name: allowedSourceAddressPrefix
    description: Mutually exclusive with the "allowedSourceAddressPrefixes" parameter. Should be an IP address or CIDR, for example "192.168.0.3" or "192.168.0.0/16".
    types:
    - uid: string
  - name: allowedSourceAddressPrefixes
    description: Mutually exclusive with the "allowedSourceAddressPrefix" parameter.
    types:
    - uid: string
      isArray: true
  - name: maxRequestAccessDuration
    description: Maximum duration requests can be made for. In ISO 8601 duration format. Minimum 5 minutes, maximum 1 day
    types:
    - uid: string
- name: JitNetworkAccessRequestVirtualMachine
  kind: object
  properties:
  - name: id
    description: Resource ID of the virtual machine that is linked to this policy
    types:
    - uid: string
  - name: ports
    description: The ports that were opened for the virtual machine
    types:
    - uid: JitNetworkAccessRequestPort
      isArray: true
- name: CloudErrorBody
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: CloudErrorBody
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
- name: protocol
  kind: enum
  properties:
  - name: TCP
    types:
    - uid: string
  - name: UDP
    types:
    - uid: string
  - name: '*'
    types:
    - uid: string
- name: JitNetworkAccessRequestPort
  kind: object
  properties:
  - name: number
    description: ''
    types:
    - uid: integer
  - name: allowedSourceAddressPrefix
    description: Mutually exclusive with the "allowedSourceAddressPrefixes" parameter. Should be an IP address or CIDR, for example "192.168.0.3" or "192.168.0.0/16".
    types:
    - uid: string
  - name: allowedSourceAddressPrefixes
    description: Mutually exclusive with the "allowedSourceAddressPrefix" parameter.
    types:
    - uid: string
      isArray: true
  - name: endTimeUtc
    description: The date & time at which the request ends in UTC
    types:
    - uid: string
  - name: status
    description: The status of the port
    types:
    - uid: status
  - name: statusReason
    description: A description of why the `status` has its value
    types:
    - uid: statusReason
  - name: mappedPort
    description: The port which is mapped to this port's `number` in the Azure Firewall, if applicable
    types:
    - uid: integer
- name: status
  description: The status of the port
  kind: enum
  properties:
  - name: Revoked
    types:
    - uid: string
  - name: Initiated
    types:
    - uid: string
- name: statusReason
  description: A description of why the `status` has its value
  kind: enum
  properties:
  - name: Expired
    types:
    - uid: string
  - name: UserRequested
    types:
    - uid: string
  - name: NewerRequestInitiated
    types:
    - uid: string
examples:
- name: Create JIT network access policy
  request:
    uri: PUT https://management.azure.com/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Security/locations/westeurope/jitNetworkAccessPolicies/default?api-version=2020-01-01
    body: >-
      {
        "kind": "Basic",
        "properties": {
          "virtualMachines": [
            {
              "id": "/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Compute/virtualMachines/vm1",
              "ports": [
                {
                  "number": 22,
                  "protocol": "*",
                  "allowedSourceAddressPrefix": "*",
                  "maxRequestAccessDuration": "PT3H"
                },
                {
                  "number": 3389,
                  "protocol": "*",
                  "allowedSourceAddressPrefix": "*",
                  "maxRequestAccessDuration": "PT3H"
                }
              ]
            }
          ],
          "requests": [
            {
              "virtualMachines": [
                {
                  "id": "/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Compute/virtualMachines/vm1",
                  "ports": [
                    {
                      "number": 3389,
                      "allowedSourceAddressPrefix": "192.127.0.2",
                      "endTimeUtc": "2018-05-17T09:06:45.5691611Z",
                      "status": "Initiated",
                      "statusReason": "UserRequested"
                    }
                  ]
                }
              ],
              "startTimeUtc": "2018-05-17T08:06:45.5691611Z",
              "requestor": "barbara@contoso.com"
            }
          ],
          "provisioningState": "Succeeded"
        },
        "id": "/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Security/locations/westeurope/jitNetworkAccessPolicies/default",
        "name": "default",
        "type": "Microsoft.Security/locations/jitNetworkAccessPolicies",
        "location": "westeurope"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Security/locations/westeurope/jitNetworkAccessPolicies/default?api-version=2020-01-01

      {
        "kind": "Basic",
        "properties": {
          "virtualMachines": [
            {
              "id": "/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Compute/virtualMachines/vm1",
              "ports": [
                {
                  "number": 22,
                  "protocol": "*",
                  "allowedSourceAddressPrefix": "*",
                  "maxRequestAccessDuration": "PT3H"
                },
                {
                  "number": 3389,
                  "protocol": "*",
                  "allowedSourceAddressPrefix": "*",
                  "maxRequestAccessDuration": "PT3H"
                }
              ]
            }
          ],
          "requests": [
            {
              "virtualMachines": [
                {
                  "id": "/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Compute/virtualMachines/vm1",
                  "ports": [
                    {
                      "number": 3389,
                      "allowedSourceAddressPrefix": "192.127.0.2",
                      "endTimeUtc": "2018-05-17T09:06:45.5691611Z",
                      "status": "Initiated",
                      "statusReason": "UserRequested"
                    }
                  ]
                }
              ],
              "startTimeUtc": "2018-05-17T08:06:45.5691611Z",
              "requestor": "barbara@contoso.com"
            }
          ],
          "provisioningState": "Succeeded"
        },
        "id": "/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Security/locations/westeurope/jitNetworkAccessPolicies/default",
        "name": "default",
        "type": "Microsoft.Security/locations/jitNetworkAccessPolicies",
        "location": "westeurope"
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armsecurity_test

      import (
      	"context"
      	"log"

      	"time"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/security/armsecurity"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/security/resource-manager/Microsoft.Security/stable/2020-01-01/examples/JitNetworkAccessPolicies/CreateJitNetworkAccessPolicy_example.json
      func ExampleJitNetworkAccessPoliciesClient_CreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsecurity.NewJitNetworkAccessPoliciesClient("20ff7fc3-e762-44dd-bd96-b71116dcdc23", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CreateOrUpdate(ctx,
      		"myRg1",
      		"westeurope",
      		"default",
      		armsecurity.JitNetworkAccessPolicy{
      			Kind:     to.Ptr("Basic"),
      			Location: to.Ptr("westeurope"),
      			Name:     to.Ptr("default"),
      			Type:     to.Ptr("Microsoft.Security/locations/jitNetworkAccessPolicies"),
      			ID:       to.Ptr("/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Security/locations/westeurope/jitNetworkAccessPolicies/default"),
      			Properties: &armsecurity.JitNetworkAccessPolicyProperties{
      				ProvisioningState: to.Ptr("Succeeded"),
      				Requests: []*armsecurity.JitNetworkAccessRequest{
      					{
      						Requestor:    to.Ptr("barbara@contoso.com"),
      						StartTimeUTC: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2018-05-17T08:06:45.5691611Z"); return t }()),
      						VirtualMachines: []*armsecurity.JitNetworkAccessRequestVirtualMachine{
      							{
      								ID: to.Ptr("/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Compute/virtualMachines/vm1"),
      								Ports: []*armsecurity.JitNetworkAccessRequestPort{
      									{
      										AllowedSourceAddressPrefix: to.Ptr("192.127.0.2"),
      										EndTimeUTC:                 to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2018-05-17T09:06:45.5691611Z"); return t }()),
      										Number:                     to.Ptr[int32](3389),
      										Status:                     to.Ptr(armsecurity.StatusInitiated),
      										StatusReason:               to.Ptr(armsecurity.StatusReasonUserRequested),
      									}},
      							}},
      					}},
      				VirtualMachines: []*armsecurity.JitNetworkAccessPolicyVirtualMachine{
      					{
      						ID: to.Ptr("/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Compute/virtualMachines/vm1"),
      						Ports: []*armsecurity.JitNetworkAccessPortRule{
      							{
      								AllowedSourceAddressPrefix: to.Ptr("*"),
      								MaxRequestAccessDuration:   to.Ptr("PT3H"),
      								Number:                     to.Ptr[int32](22),
      								Protocol:                   to.Ptr(armsecurity.ProtocolAll),
      							},
      							{
      								AllowedSourceAddressPrefix: to.Ptr("*"),
      								MaxRequestAccessDuration:   to.Ptr("PT3H"),
      								Number:                     to.Ptr[int32](3389),
      								Protocol:                   to.Ptr(armsecurity.ProtocolAll),
      							}},
      					}},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsecurity%2Farmsecurity%2Fv0.7.0/sdk/resourcemanager/security/armsecurity/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SecurityCenter } = require("@azure/arm-security");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create a policy for protecting resources using Just-in-Time access control
       *
       * @summary Create a policy for protecting resources using Just-in-Time access control
       * x-ms-original-file: specification/security/resource-manager/Microsoft.Security/stable/2020-01-01/examples/JitNetworkAccessPolicies/CreateJitNetworkAccessPolicy_example.json
       */
      async function createJitNetworkAccessPolicy() {
        const subscriptionId = "20ff7fc3-e762-44dd-bd96-b71116dcdc23";
        const resourceGroupName = "myRg1";
        const ascLocation = "westeurope";
        const jitNetworkAccessPolicyName = "default";
        const body = {
          name: "default",
          type: "Microsoft.Security/locations/jitNetworkAccessPolicies",
          id: "/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Security/locations/westeurope/jitNetworkAccessPolicies/default",
          kind: "Basic",
          location: "westeurope",
          provisioningState: "Succeeded",
          requests: [
            {
              requestor: "barbara@contoso.com",
              startTimeUtc: new Date("2018-05-17T08:06:45.5691611Z"),
              virtualMachines: [
                {
                  id: "/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Compute/virtualMachines/vm1",
                  ports: [
                    {
                      allowedSourceAddressPrefix: "192.127.0.2",
                      endTimeUtc: new Date("2018-05-17T09:06:45.5691611Z"),
                      number: 3389,
                      status: "Initiated",
                      statusReason: "UserRequested",
                    },
                  ],
                },
              ],
            },
          ],
          virtualMachines: [
            {
              id: "/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Compute/virtualMachines/vm1",
              ports: [
                {
                  allowedSourceAddressPrefix: "*",
                  maxRequestAccessDuration: "PT3H",
                  number: 22,
                  protocol: "*",
                },
                {
                  allowedSourceAddressPrefix: "*",
                  maxRequestAccessDuration: "PT3H",
                  number: 3389,
                  protocol: "*",
                },
              ],
            },
          ],
        };
        const credential = new DefaultAzureCredential();
        const client = new SecurityCenter(credential, subscriptionId);
        const result = await client.jitNetworkAccessPolicies.createOrUpdate(
          resourceGroupName,
          ascLocation,
          jitNetworkAccessPolicyName,
          body
        );
        console.log(result);
      }

      createJitNetworkAccessPolicy().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-security_5.0.0/sdk/security/arm-security/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "kind": "Basic",
        "properties": {
          "virtualMachines": [
            {
              "id": "/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Compute/virtualMachines/vm1",
              "ports": [
                {
                  "number": 22,
                  "protocol": "*",
                  "allowedSourceAddressPrefix": "*",
                  "maxRequestAccessDuration": "PT3H"
                },
                {
                  "number": 3389,
                  "protocol": "*",
                  "allowedSourceAddressPrefix": "*",
                  "maxRequestAccessDuration": "PT3H"
                }
              ]
            }
          ],
          "requests": [
            {
              "virtualMachines": [
                {
                  "id": "/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Compute/virtualMachines/vm1",
                  "ports": [
                    {
                      "number": 3389,
                      "allowedSourceAddressPrefix": "192.127.0.2",
                      "endTimeUtc": "2018-05-17T09:06:45.5691611Z",
                      "status": "Initiated",
                      "statusReason": "UserRequested"
                    }
                  ]
                }
              ],
              "startTimeUtc": "2018-05-17T08:06:45.5691611Z",
              "requestor": "barbara@contoso.com"
            }
          ],
          "provisioningState": "Succeeded"
        },
        "id": "/subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/resourceGroups/myRg1/providers/Microsoft.Security/locations/westeurope/jitNetworkAccessPolicies/default",
        "name": "default",
        "type": "Microsoft.Security/locations/jitNetworkAccessPolicies",
        "location": "westeurope"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Defender for Cloud service - Create a policy for protecting resources using Just-in-Time access control
errorCodes: []
