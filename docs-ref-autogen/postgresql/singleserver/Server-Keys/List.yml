### YamlMime:RESTOperation
uid: management.azure.com.postgresql.singleserver.serverkeys.list
name: List
service: PostgreSQL
groupName: Server Keys
apiVersion: 2020-01-01
summary: Gets a list of  Server keys.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/keys?api-version=2020-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved the list of PostgreSQL Server keys.
  types:
  - uid: ServerKeyListResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: ServerKeyListResult
  description: A list of PostgreSQL Server keys.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: A list of PostgreSQL Server keys.
    types:
    - uid: ServerKey
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: Link to retrieve next page of results.
    types:
    - uid: string
- name: CloudError
  description: An error response from the Batch service.
  kind: object
  properties:
  - name: error
    description: "Error Response  \nCommon error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)"
    types:
    - uid: ErrorResponse
- name: ServerKey
  description: A PostgreSQL Server key.
  kind: object
  properties:
  - name: kind
    isReadyOnly: true
    description: Kind of encryption protector used to protect the key.
    types:
    - uid: string
  - name: properties.serverKeyType
    description: The key type like 'AzureKeyVault'.
    types:
    - uid: ServerKeyType
  - name: properties.uri
    description: The URI of the key.
    types:
    - uid: string
  - name: properties.creationDate
    isReadyOnly: true
    description: The key creation date.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ServerKeyType
  description: The key type like 'AzureKeyVault'.
  kind: enum
  properties:
  - name: AzureKeyVault
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: List the keys for a PostgreSQL Server.
  request:
    uri: GET https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforPostgreSQL/servers/testserver/keys?api-version=2020-01-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforPostgreSQL/servers/testserver/keys?api-version=2020-01-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for ServerKeys List. */
      public final class Main {
          /*
           * x-ms-original-file: specification/postgresql/resource-manager/Microsoft.DBforPostgreSQL/stable/2020-01-01/examples/ServerKeyList.json
           */
          /**
           * Sample code: List the keys for a PostgreSQL Server.
           *
           * @param manager Entry point to PostgreSqlManager.
           */
          public static void listTheKeysForAPostgreSQLServer(com.azure.resourcemanager.postgresql.PostgreSqlManager manager) {
              manager.serverKeys().list("testrg", "testserver", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-postgresql_1.0.2/sdk/postgresql/azure-resourcemanager-postgresql/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpostgresql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/postgresql/armpostgresql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/postgresql/resource-manager/Microsoft.DBforPostgreSQL/stable/2020-01-01/examples/ServerKeyList.json
      func ExampleServerKeysClient_NewListPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpostgresql.NewServerKeysClient("ffffffff-ffff-ffff-ffff-ffffffffffff", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListPager("testrg",
      		"testserver",
      		nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fpostgresql%2Farmpostgresql%2Fv1.0.0/sdk/resourcemanager/postgresql/armpostgresql/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { PostgreSQLManagementClient } = require("@azure/arm-postgresql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a list of  Server keys.
       *
       * @summary Gets a list of  Server keys.
       * x-ms-original-file: specification/postgresql/resource-manager/Microsoft.DBforPostgreSQL/stable/2020-01-01/examples/ServerKeyList.json
       */
      async function listTheKeysForAPostgreSqlServer() {
        const subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
        const resourceGroupName = "testrg";
        const serverName = "testserver";
        const credential = new DefaultAzureCredential();
        const client = new PostgreSQLManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.serverKeys.list(resourceGroupName, serverName)) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      listTheKeysForAPostgreSqlServer().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-postgresql_6.0.1/sdk/postgresql/arm-postgresql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforPostgreSQL/servers/testserver/keys/someVault_someKey_01234567890123456789012345678901",
            "name": "someVault_someKey_01234567890123456789012345678901",
            "type": "Microsoft.DBforPostgreSQL/servers/keys",
            "kind": "azurekeyvault",
            "properties": {
              "serverKeyType": "AzureKeyVault",
              "uri": "https://someVault.vault.azure.net/keys/someKey/01234567890123456789012345678901",
              "creationDate": "2019-12-01T00:00:00.0Z"
            }
          }
        ]
      }
security: []
metadata:
  description: Learn more about PostgreSQL service - Gets a list of  Server keys.
errorCodes: []
