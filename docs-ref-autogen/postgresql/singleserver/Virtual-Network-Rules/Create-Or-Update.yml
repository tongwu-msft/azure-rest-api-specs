### YamlMime:RESTOperation
uid: management.azure.com.postgresql.singleserver.virtualnetworkrules.createorupdate
name: Create Or Update
service: PostgreSQL
groupName: Virtual Network Rules
apiVersion: 2017-12-01
summary: Creates or updates an existing virtual network rule.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}?api-version=2017-12-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: virtualNetworkRuleName
  in: path
  isRequired: true
  description: The name of the virtual network rule.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully updated a virtual network rule.
  types:
  - uid: VirtualNetworkRule
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 InvalidResourceId - Invalid resource identifier.

     * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.

     * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.

     * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.

     * 400 NullVirtualNetworkRequest - Virtual Network Request is Null

     * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null

     * 400 NullVirtualNetworkSubnetId - The Virtual Network Subnet Id is null

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 VirtualNetworkRuleNotEnabled - Azure SQL Server Virtual Network Rule feature is not enabled

     * 404 OperationIdNotFound - The operation with Id does not exist.

     * 409 OperationCancelled - The operation has been cancelled by user.

     * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.

     * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.
- name: 202 Accepted
  description: Accepted
- name: 201 Created
  description: Successfully created a virtual network rule.
  types:
  - uid: VirtualNetworkRule
requestBody:
- name: default
  parameters:
  - name: properties.virtualNetworkSubnetId
    in: body
    isRequired: true
    description: The ARM resource id of the virtual network subnet.
    types:
    - uid: string
  - name: properties.ignoreMissingVnetServiceEndpoint
    in: body
    description: Create firewall rule before the virtual network has vnet service endpoint enabled.
    types:
    - uid: boolean
requestHeader: []
definitions:
- name: VirtualNetworkRule
  description: A virtual network rule.
  kind: object
  properties:
  - name: properties.virtualNetworkSubnetId
    description: The ARM resource id of the virtual network subnet.
    types:
    - uid: string
  - name: properties.ignoreMissingVnetServiceEndpoint
    description: Create firewall rule before the virtual network has vnet service endpoint enabled.
    types:
    - uid: boolean
  - name: properties.state
    isReadyOnly: true
    description: Virtual Network Rule State
    types:
    - uid: VirtualNetworkRuleState
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: VirtualNetworkRuleState
  description: Virtual Network Rule State
  kind: enum
  properties:
  - name: Initializing
    types:
    - uid: string
  - name: InProgress
    types:
    - uid: string
  - name: Ready
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Unknown
    types:
    - uid: string
examples:
- name: Create or update a virtual network rule
  request:
    uri: PUT https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforPostgreSQL/servers/vnet-test-svr/virtualNetworkRules/vnet-firewall-rule?api-version=2017-12-01
    body: >-
      {
        "properties": {
          "ignoreMissingVnetServiceEndpoint": false,
          "virtualNetworkSubnetId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforPostgreSQL/servers/vnet-test-svr/virtualNetworkRules/vnet-firewall-rule?api-version=2017-12-01

      {
        "properties": {
          "ignoreMissingVnetServiceEndpoint": false,
          "virtualNetworkSubnetId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      /** Samples for VirtualNetworkRules CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/postgresql/resource-manager/Microsoft.DBforPostgreSQL/stable/2017-12-01/examples/VirtualNetworkRulesCreateOrUpdate.json
           */
          /**
           * Sample code: Create or update a virtual network rule.
           *
           * @param manager Entry point to PostgreSqlManager.
           */
          public static void createOrUpdateAVirtualNetworkRule(
              com.azure.resourcemanager.postgresql.PostgreSqlManager manager) {
              manager
                  .virtualNetworkRules()
                  .define("vnet-firewall-rule")
                  .withExistingServer("TestGroup", "vnet-test-svr")
                  .withVirtualNetworkSubnetId(
                      "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet")
                  .withIgnoreMissingVnetServiceEndpoint(false)
                  .create();
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-postgresql_1.0.2/sdk/postgresql/azure-resourcemanager-postgresql/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpostgresql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/postgresql/armpostgresql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/postgresql/resource-manager/Microsoft.DBforPostgreSQL/stable/2017-12-01/examples/VirtualNetworkRulesCreateOrUpdate.json
      func ExampleVirtualNetworkRulesClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpostgresql.NewVirtualNetworkRulesClient("ffffffff-ffff-ffff-ffff-ffffffffffff", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"TestGroup",
      		"vnet-test-svr",
      		"vnet-firewall-rule",
      		armpostgresql.VirtualNetworkRule{
      			Properties: &armpostgresql.VirtualNetworkRuleProperties{
      				IgnoreMissingVnetServiceEndpoint: to.Ptr(false),
      				VirtualNetworkSubnetID:           to.Ptr("/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fpostgresql%2Farmpostgresql%2Fv1.0.0/sdk/resourcemanager/postgresql/armpostgresql/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { PostgreSQLManagementClient } = require("@azure/arm-postgresql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates an existing virtual network rule.
       *
       * @summary Creates or updates an existing virtual network rule.
       * x-ms-original-file: specification/postgresql/resource-manager/Microsoft.DBforPostgreSQL/stable/2017-12-01/examples/VirtualNetworkRulesCreateOrUpdate.json
       */
      async function createOrUpdateAVirtualNetworkRule() {
        const subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
        const resourceGroupName = "TestGroup";
        const serverName = "vnet-test-svr";
        const virtualNetworkRuleName = "vnet-firewall-rule";
        const parameters = {
          ignoreMissingVnetServiceEndpoint: false,
          virtualNetworkSubnetId:
            "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet",
        };
        const credential = new DefaultAzureCredential();
        const client = new PostgreSQLManagementClient(credential, subscriptionId);
        const result = await client.virtualNetworkRules.beginCreateOrUpdateAndWait(
          resourceGroupName,
          serverName,
          virtualNetworkRuleName,
          parameters
        );
        console.log(result);
      }

      createOrUpdateAVirtualNetworkRule().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-postgresql_6.0.1/sdk/postgresql/arm-postgresql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforPostgreSQL/servers/vnet-test-svr/virtualNetworkRules/vnet-firewall-rule",
        "name": "vnet-firewall-rule",
        "type": "Microsoft.DBforPostgreSQL/servers/virtualNetworkRules",
        "properties": {
          "ignoreMissingVnetServiceEndpoint": false,
          "virtualNetworkSubnetId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforPostgreSQL/servers/vnet-test-svr/virtualNetworkRules/vnet-firewall-rule",
        "name": "vnet-firewall-rule",
        "type": "Microsoft.DBforPostgreSQL/servers/virtualNetworkRules",
        "properties": {
          "ignoreMissingVnetServiceEndpoint": false,
          "virtualNetworkSubnetId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet"
        }
      }
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about PostgreSQL service - Creates or updates an existing virtual network rule.
errorCodes: []
