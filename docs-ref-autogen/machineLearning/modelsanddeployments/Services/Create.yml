### YamlMime:RESTOperation
uid: machinelearning.services.create
name: Create
service: Machine Learning
groupName: Services
apiVersion: 2019-08-01
summary: "Create a Service.  \nCreate a Service with the specified payload."
consumes:
- application/json
produces:
- application/json
paths:
- content: POST /modelmanagement/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The Azure Subscription ID.
  types:
  - uid: string
  format: uuid
- name: resourceGroup
  in: path
  isRequired: true
  description: The Name of the resource group in which the workspace is located.
  types:
  - uid: string
- name: workspace
  in: path
  isRequired: true
  description: The name of the workspace.
  types:
  - uid: string
responses:
- name: 202 Accepted
  description: The request was accepted.  The header 'Operation-Location' contains the async operation location URL.  Accessing this URL with a GET call will return the status of the background task.
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ModelErrorResponse
requestBody:
- name: ACIServiceCreateRequest
  parameters:
  - name: name
    in: body
    isRequired: true
    description: The service name.
    types:
    - uid: string
  - name: description
    in: body
    description: The description of the service.
    types:
    - uid: string
  - name: kvTags
    in: body
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    in: body
    description: The service properties dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: keys
    in: body
    description: The authentication keys.
    types:
    - uid: AuthKeys
  - name: computeType
    in: body
    isRequired: true
    description: The compute environment type for the service.
    types:
    - uid: ACI
    typesTitle: string
  - name: deploymentType
    in: body
    description: The deployment type for the service.
    types:
    - uid: DeploymentType
  - name: imageId
    in: body
    description: The Image Id.
    types:
    - uid: string
  - name: environmentImageRequest
    in: body
    description: The Environment, models and assets needed for inferencing.
    types:
    - uid: EnvironmentImageRequest
  - name: location
    in: body
    description: The location of the service.
    types:
    - uid: string
  - name: containerResourceRequirements
    in: body
    description: The container resource requirements.
    types:
    - uid: ContainerResourceRequirements
  - name: authEnabled
    in: body
    description: Whether or not authentication is enabled on the service.
    types:
    - uid: boolean
  - name: sslEnabled
    in: body
    description: Whether or not SSL is enabled.
    types:
    - uid: boolean
  - name: appInsightsEnabled
    in: body
    description: Whether or not Application Insights is enabled.
    types:
    - uid: boolean
  - name: dataCollection
    in: body
    description: Details of the data collection options specified.
    types:
    - uid: ModelDataCollection
  - name: sslCertificate
    in: body
    description: The SSL certificate to use if SSL is enabled.
    types:
    - uid: string
  - name: sslKey
    in: body
    description: The SSL key for the certificate.
    types:
    - uid: string
  - name: cname
    in: body
    description: The CName for the service.
    types:
    - uid: string
  - name: dnsNameLabel
    in: body
    description: The Dns label for the service.
    types:
    - uid: string
- name: CreateEndpointRequest
  description: The request to create an Endpoint in the AKS.
  parameters:
  - name: name
    in: body
    isRequired: true
    description: The service name.
    types:
    - uid: string
  - name: description
    in: body
    description: The description of the service.
    types:
    - uid: string
  - name: kvTags
    in: body
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    in: body
    description: The service properties dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: keys
    in: body
    description: The authentication keys.
    types:
    - uid: AuthKeys
  - name: computeType
    in: body
    isRequired: true
    description: The compute environment type for the service.
    types:
    - uid: AKSENDPOINT
    typesTitle: string
  - name: deploymentType
    in: body
    description: The deployment type for the service.
    types:
    - uid: DeploymentType
  - name: imageId
    in: body
    description: The Image Id.
    types:
    - uid: string
  - name: environmentImageRequest
    in: body
    description: The Environment, models and assets needed for inferencing.
    types:
    - uid: EnvironmentImageRequest
  - name: location
    in: body
    description: The location of the service.
    types:
    - uid: string
  - name: computeName
    in: body
    description: The name of the compute resource.
    types:
    - uid: string
  - name: appInsightsEnabled
    in: body
    description: Whether or not Application Insights is enabled.
    types:
    - uid: boolean
  - name: authEnabled
    in: body
    description: Whether or not authentication is enabled.
    types:
    - uid: boolean
  - name: aadAuthEnabled
    in: body
    description: Whether or not AAD authentication is enabled.
    types:
    - uid: boolean
  - name: namespace
    in: body
    description: Kubernetes namespace for the service.
    types:
    - uid: string
  - name: variants
    in: body
    description: The service tag list.
    types:
    - uid: AKSServiceCreateRequest
      isArray: true
- name: CreateIotServiceRequest
  parameters:
  - name: name
    in: body
    isRequired: true
    description: The service name.
    types:
    - uid: string
  - name: description
    in: body
    description: The description of the service.
    types:
    - uid: string
  - name: kvTags
    in: body
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    in: body
    description: The service properties dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: keys
    in: body
    description: The authentication keys.
    types:
    - uid: AuthKeys
  - name: computeType
    in: body
    isRequired: true
    description: The compute environment type for the service.
    types:
    - uid: IOT
    typesTitle: string
  - name: deploymentType
    in: body
    description: The deployment type for the service.
    types:
    - uid: DeploymentType
  - name: imageId
    in: body
    description: The Image Id.
    types:
    - uid: string
  - name: environmentImageRequest
    in: body
    description: The Environment, models and assets needed for inferencing.
    types:
    - uid: EnvironmentImageRequest
  - name: location
    in: body
    description: The location of the service.
    types:
    - uid: string
  - name: iotDeviceId
    in: body
    description: ''
    types:
    - uid: string
  - name: routes
    in: body
    description: ''
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: iotEdgeUserModule
    in: body
    description: ''
    types:
    - uid: IotModuleSettings
      isArray: true
  - name: iotEdgeModule
    in: body
    description: ''
    types:
    - uid: IotBaseModuleSettings
  - name: computeName
    in: body
    description: ''
    types:
    - uid: string
  - name: acrCredentials
    in: body
    description: Contains registry information.
    types:
    - uid: RegistryInfo
      isArray: true
  - name: authEnabled
    in: body
    description: ''
    types:
    - uid: boolean
requestHeader: []
definitions:
- name: ACIServiceCreateRequest
  kind: object
  properties:
  - name: name
    description: The service name.
    types:
    - uid: string
  - name: description
    description: The description of the service.
    types:
    - uid: string
  - name: kvTags
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    description: The service properties dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: keys
    description: The authentication keys.
    types:
    - uid: AuthKeys
  - name: computeType
    description: The compute environment type for the service.
    types:
    - uid: ACI
    typesTitle: string
  - name: deploymentType
    description: The deployment type for the service.
    types:
    - uid: DeploymentType
  - name: imageId
    description: The Image Id.
    types:
    - uid: string
  - name: environmentImageRequest
    description: The Environment, models and assets needed for inferencing.
    types:
    - uid: EnvironmentImageRequest
  - name: location
    description: The location of the service.
    types:
    - uid: string
  - name: containerResourceRequirements
    description: The container resource requirements.
    types:
    - uid: ContainerResourceRequirements
  - name: authEnabled
    description: Whether or not authentication is enabled on the service.
    types:
    - uid: boolean
  - name: sslEnabled
    description: Whether or not SSL is enabled.
    types:
    - uid: boolean
  - name: appInsightsEnabled
    description: Whether or not Application Insights is enabled.
    types:
    - uid: boolean
  - name: dataCollection
    description: Details of the data collection options specified.
    types:
    - uid: ModelDataCollection
  - name: sslCertificate
    description: The SSL certificate to use if SSL is enabled.
    types:
    - uid: string
  - name: sslKey
    description: The SSL key for the certificate.
    types:
    - uid: string
  - name: cname
    description: The CName for the service.
    types:
    - uid: string
  - name: dnsNameLabel
    description: The Dns label for the service.
    types:
    - uid: string
- name: CreateEndpointRequest
  description: The request to create an Endpoint in the AKS.
  kind: object
  properties:
  - name: name
    description: The service name.
    types:
    - uid: string
  - name: description
    description: The description of the service.
    types:
    - uid: string
  - name: kvTags
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    description: The service properties dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: keys
    description: The authentication keys.
    types:
    - uid: AuthKeys
  - name: computeType
    description: The compute environment type for the service.
    types:
    - uid: AKSENDPOINT
    typesTitle: string
  - name: deploymentType
    description: The deployment type for the service.
    types:
    - uid: DeploymentType
  - name: imageId
    description: The Image Id.
    types:
    - uid: string
  - name: environmentImageRequest
    description: The Environment, models and assets needed for inferencing.
    types:
    - uid: EnvironmentImageRequest
  - name: location
    description: The location of the service.
    types:
    - uid: string
  - name: computeName
    description: The name of the compute resource.
    types:
    - uid: string
  - name: appInsightsEnabled
    description: Whether or not Application Insights is enabled.
    types:
    - uid: boolean
  - name: authEnabled
    description: Whether or not authentication is enabled.
    types:
    - uid: boolean
  - name: aadAuthEnabled
    description: Whether or not AAD authentication is enabled.
    types:
    - uid: boolean
  - name: namespace
    description: Kubernetes namespace for the service.
    types:
    - uid: string
  - name: variants
    description: The service tag list.
    types:
    - uid: AKSServiceCreateRequest
      isArray: true
- name: CreateIotServiceRequest
  kind: object
  properties:
  - name: name
    description: The service name.
    types:
    - uid: string
  - name: description
    description: The description of the service.
    types:
    - uid: string
  - name: kvTags
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    description: The service properties dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: keys
    description: The authentication keys.
    types:
    - uid: AuthKeys
  - name: computeType
    description: The compute environment type for the service.
    types:
    - uid: IOT
    typesTitle: string
  - name: deploymentType
    description: The deployment type for the service.
    types:
    - uid: DeploymentType
  - name: imageId
    description: The Image Id.
    types:
    - uid: string
  - name: environmentImageRequest
    description: The Environment, models and assets needed for inferencing.
    types:
    - uid: EnvironmentImageRequest
  - name: location
    description: The location of the service.
    types:
    - uid: string
  - name: iotDeviceId
    description: ''
    types:
    - uid: string
  - name: routes
    description: ''
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: iotEdgeUserModule
    description: ''
    types:
    - uid: IotModuleSettings
      isArray: true
  - name: iotEdgeModule
    description: ''
    types:
    - uid: IotBaseModuleSettings
  - name: computeName
    description: ''
    types:
    - uid: string
  - name: acrCredentials
    description: Contains registry information.
    types:
    - uid: RegistryInfo
      isArray: true
  - name: authEnabled
    description: ''
    types:
    - uid: boolean
- name: AuthKeys
  kind: object
  properties:
  - name: primaryKey
    description: The primary key.
    types:
    - uid: string
  - name: secondaryKey
    description: The secondary key.
    types:
    - uid: string
- name: EnvironmentImageRequest
  description: Request to create a Docker image based on Environment.
  kind: object
  properties:
  - name: driverProgram
    description: The name of the driver file.
    types:
    - uid: string
  - name: assets
    description: The list of assets.
    types:
    - uid: EnvironmentImageAsset
      isArray: true
  - name: modelIds
    description: The list of model Ids.
    types:
    - uid: string
      isArray: true
  - name: environment
    description: The details of the AZURE ML environment.
    types:
    - uid: ModelEnvironmentDefinition
- name: ModelErrorResponse
  description: The Model Management Service Error object.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: statusCode
    description: The HTTP status code.
    types:
    - uid: integer
  - name: message
    description: The error message.
    types:
    - uid: string
  - name: details
    description: An array of error detail objects.
    types:
    - uid: ErrorDetails
      isArray: true
- name: DeploymentType
  description: The deployment type for the service.
  kind: enum
  properties:
  - name: GRPCRealtimeEndpoint
    types:
    - uid: string
  - name: HttpRealtimeEndpoint
    types:
    - uid: string
  - name: Batch
    types:
    - uid: string
- name: ContainerResourceRequirements
  description: The resource requirements for the container (cpu and memory).
  kind: object
  properties:
  - name: cpu
    description: The number of CPU cores on the container.
    types:
    - uid: number
  - name: memoryInGB
    description: The amount of memory on the container in GB.
    types:
    - uid: number
  - name: gpu
    description: The number of GPU cores in the container.
    types:
    - uid: integer
  - name: fpga
    description: The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
    types:
    - uid: integer
- name: ModelDataCollection
  description: The Model data collection properties.
  kind: object
  properties:
  - name: eventHubEnabled
    description: Option for enabling/disabling Event Hub.
    types:
    - uid: boolean
  - name: storageEnabled
    description: Option for enabling/disabling storage.
    types:
    - uid: boolean
- name: AKSServiceCreateRequest
  description: The request to create an AKS service.
  kind: object
  properties:
  - name: name
    description: The service name.
    types:
    - uid: string
  - name: description
    description: The description of the service.
    types:
    - uid: string
  - name: kvTags
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    description: The service properties dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: keys
    description: The authentication keys.
    types:
    - uid: AuthKeys
  - name: computeType
    description: The compute environment type for the service.
    types:
    - uid: AKS
    typesTitle: string
  - name: deploymentType
    description: The deployment type for the service.
    types:
    - uid: DeploymentType
  - name: imageId
    description: The Image Id.
    types:
    - uid: string
  - name: environmentImageRequest
    description: The Environment, models and assets needed for inferencing.
    types:
    - uid: EnvironmentImageRequest
  - name: location
    description: The location of the service.
    types:
    - uid: string
  - name: isDefault
    description: Is this the default variant.
    types:
    - uid: boolean
  - name: trafficPercentile
    description: The amount of traffic variant receives.
    types:
    - uid: number
  - name: type
    description: The type of the variant.
    types:
    - uid: VariantType
  - name: numReplicas
    description: The number of replicas on the cluster.
    types:
    - uid: integer
  - name: dataCollection
    description: Details of the data collection options specified.
    types:
    - uid: ModelDataCollection
  - name: computeName
    description: The name of the compute resource.
    types:
    - uid: string
  - name: appInsightsEnabled
    description: Whether or not Application Insights is enabled.
    types:
    - uid: boolean
  - name: autoScaler
    description: The auto scaler properties.
    types:
    - uid: AutoScaler
  - name: containerResourceRequirements
    description: The container resource requirements.
    types:
    - uid: ContainerResourceRequirements
  - name: maxConcurrentRequestsPerContainer
    description: The maximum number of concurrent requests per container.
    types:
    - uid: integer
  - name: maxQueueWaitMs
    description: Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
    types:
    - uid: integer
  - name: namespace
    description: Kubernetes namespace for the service.
    types:
    - uid: string
  - name: scoringTimeoutMs
    description: The scoring timeout in milliseconds.
    types:
    - uid: integer
  - name: authEnabled
    description: Whether or not authentication is enabled.
    types:
    - uid: boolean
  - name: livenessProbeRequirements
    description: The liveness probe requirements.
    types:
    - uid: LivenessProbeRequirements
  - name: aadAuthEnabled
    description: Whether or not AAD authentication is enabled.
    types:
    - uid: boolean
- name: IotModuleSettings
  kind: object
  properties:
  - name: imageLocation
    description: ''
    types:
    - uid: string
  - name: moduleName
    description: ''
    types:
    - uid: string
  - name: propertiesDesired
    description: ''
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: createOptions
    description: ''
    types:
    - uid: string
  - name: environmentVariables
    description: ''
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: IotBaseModuleSettings
  kind: object
  properties:
  - name: moduleName
    description: ''
    types:
    - uid: string
  - name: propertiesDesired
    description: ''
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: createOptions
    description: ''
    types:
    - uid: string
  - name: environmentVariables
    description: ''
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: RegistryInfo
  description: Contains registry information.
  kind: object
  properties:
  - name: user
    description: The user.
    types:
    - uid: string
  - name: location
    description: The location.
    types:
    - uid: string
  - name: password
    description: The password.
    types:
    - uid: string
- name: EnvironmentImageAsset
  description: An Image asset.
  kind: object
  properties:
  - name: id
    description: The Asset Id.
    types:
    - uid: string
  - name: mimeType
    description: The mime type.
    types:
    - uid: string
  - name: url
    description: The Url of the Asset.
    types:
    - uid: string
  - name: unpack
    description: Whether the Asset is unpacked.
    types:
    - uid: boolean
- name: ModelEnvironmentDefinition
  kind: object
  properties:
  - name: name
    description: The name of the environment.
    types:
    - uid: string
  - name: version
    description: The environment version.
    types:
    - uid: string
  - name: python
    description: Settings for a Python environment.
    types:
    - uid: ModelPythonSection
  - name: environmentVariables
    description: Definition of environment variables to be defined in the environment.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: docker
    description: The definition of a Docker container.
    types:
    - uid: ModelDockerSection
  - name: spark
    description: The configuration for a Spark environment.
    types:
    - uid: ModelSparkSection
  - name: inferencingStackVersion
    description: The Inferencing stack version.
    types:
    - uid: string
- name: ErrorDetails
  description: The error details.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
  - name: target
    description: The target of the error (e.g., the name of the property in error).
    types:
    - uid: string
- name: VariantType
  description: The type of the variant.
  kind: enum
  properties:
  - name: Control
    types:
    - uid: string
  - name: Treatment
    types:
    - uid: string
- name: AutoScaler
  description: The Auto Scaler properties.
  kind: object
  properties:
  - name: autoscaleEnabled
    description: Option to enable/disable auto scaling.
    types:
    - uid: boolean
  - name: minReplicas
    description: The minimum number of replicas to scale down to.
    types:
    - uid: integer
  - name: maxReplicas
    description: The maximum number of replicas in the cluster.
    types:
    - uid: integer
  - name: targetUtilization
    description: The target utilization percentage to use for determining whether to scale the cluster.
    types:
    - uid: integer
  - name: refreshPeriodInSeconds
    description: The amount of seconds to wait between auto scale updates.
    types:
    - uid: integer
- name: LivenessProbeRequirements
  description: The liveness probe requirements.
  kind: object
  properties:
  - name: failureThreshold
    description: The number of failures to allow before returning an unhealthy status.
    types:
    - uid: integer
  - name: successThreshold
    description: The number of successful probes before returning a healthy status.
    types:
    - uid: integer
  - name: timeoutSeconds
    description: The probe timeout in seconds.
    types:
    - uid: integer
  - name: periodSeconds
    description: The length of time between probes in seconds.
    types:
    - uid: integer
  - name: initialDelaySeconds
    description: The delay before the first probe in seconds.
    types:
    - uid: integer
- name: ModelPythonSection
  kind: object
  properties:
  - name: interpreterPath
    description: The python interpreter path. This is only used when user_managed_dependencies=True.
    types:
    - uid: string
  - name: userManagedDependencies
    description: True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
    types:
    - uid: boolean
  - name: condaDependencies
    description: ''
    types:
    - uid: object
  - name: baseCondaEnvironment
    description: ''
    types:
    - uid: string
- name: ModelDockerSection
  kind: object
  properties:
  - name: baseImage
    description: Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
    types:
    - uid: string
  - name: baseDockerfile
    description: Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
    types:
    - uid: string
  - name: enabled
    description: Set True to perform this run inside a Docker container.
    types:
    - uid: boolean
  - name: sharedVolumes
    description: Set False if necessary to work around shared volume bugs on Windows.
    types:
    - uid: boolean
  - name: gpuSupport
    description: Run with NVidia Docker extension to support GPUs.
    types:
    - uid: boolean
  - name: shmSize
    description: The shared memory size setting for NVidia GPUs.
    types:
    - uid: string
  - name: arguments
    description: Extra arguments to the Docker run command.
    types:
    - uid: string
      isArray: true
  - name: baseImageRegistry
    description: Image registry that contains the base image.
    types:
    - uid: ContainerRegistry
- name: ModelSparkSection
  kind: object
  properties:
  - name: repositories
    description: The list of spark repositories.
    types:
    - uid: string
      isArray: true
  - name: packages
    description: The Spark packages to use.
    types:
    - uid: SparkMavenPackage
      isArray: true
  - name: precachePackages
    description: Whether to precache the packages.
    types:
    - uid: boolean
- name: ContainerRegistry
  kind: object
  properties:
  - name: address
    description: ''
    types:
    - uid: string
  - name: username
    description: ''
    types:
    - uid: string
  - name: password
    description: ''
    types:
    - uid: string
- name: SparkMavenPackage
  kind: object
  properties:
  - name: group
    description: ''
    types:
    - uid: string
  - name: artifact
    description: ''
    types:
    - uid: string
  - name: version
    description: ''
    types:
    - uid: string
examples: []
security:
- name: azure_auth
  type: oauth2
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
errorCodes: []
