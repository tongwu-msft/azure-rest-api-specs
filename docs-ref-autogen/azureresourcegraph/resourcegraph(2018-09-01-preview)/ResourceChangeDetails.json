{
  "swagger": "2.0",
  "info": {
    "version": "2018-09-01-preview",
    "title": "Azure Resource Graph",
    "description": "Azure Resource Graph API Reference"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {},
  "definitions": {
    "QueryRequest": {
      "description": "Describes a query to be executed.",
      "type": "object",
      "properties": {
        "subscriptions": {
          "description": "Azure subscriptions against which to execute the query.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "Subscription Id."
          }
        },
        "query": {
          "description": "The resources query.",
          "type": "string"
        },
        "options": {
          "description": "The query evaluation options",
          "$ref": "#/definitions/QueryRequestOptions"
        },
        "facets": {
          "description": "An array of facet requests to be computed against the query result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetRequest"
          }
        }
      },
      "required": [
        "subscriptions",
        "query"
      ]
    },
    "QueryRequestOptions": {
      "description": "The options for query evaluation",
      "properties": {
        "$skipToken": {
          "description": "Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.",
          "type": "string"
        },
        "$top": {
          "description": "The maximum number of rows that the query should return. Overrides the page size when ```$skipToken``` property is present.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000
        },
        "$skip": {
          "description": "The number of rows to skip from the beginning of the results. Overrides the next page offset when ```$skipToken``` property is present.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        }
      }
    },
    "FacetRequest": {
      "description": "A request to compute additional statistics (facets) over the query results.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "The column or list of columns to summarize by",
          "type": "string"
        },
        "options": {
          "description": "The options for facet evaluation",
          "$ref": "#/definitions/FacetRequestOptions"
        }
      },
      "required": [
        "expression"
      ]
    },
    "FacetRequestOptions": {
      "description": "The options for facet evaluation",
      "properties": {
        "sortBy": {
          "description": "The column name or query expression to sort on. Defaults to count if not present.",
          "type": "string"
        },
        "sortOrder": {
          "description": "The sorting order by the selected column (count by default).",
          "type": "string",
          "default": "desc",
          "enum": [
            "asc",
            "desc"
          ],
          "x-ms-enum": {
            "name": "FacetSortOrder",
            "modelAsString": false
          }
        },
        "filter": {
          "description": "Specifies the filter condition for the 'where' clause which will be run on main query's result, just before the actual faceting.",
          "type": "string"
        },
        "$top": {
          "description": "The maximum number of facet rows that should be returned.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000
        }
      }
    },
    "QueryResponse": {
      "description": "Query result.",
      "type": "object",
      "properties": {
        "totalRecords": {
          "description": "Number of total records matching the query.",
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "description": "Number of records returned in the current response. In the case of paging, this is the number of records in the current page.",
          "type": "integer",
          "format": "int64"
        },
        "resultTruncated": {
          "description": "Indicates whether the query results are truncated.",
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "ResultTruncated",
            "modelAsString": false
          }
        },
        "$skipToken": {
          "description": "When present, the value can be passed to a subsequent query call (together with the same query and subscriptions used in the current request) to retrieve the next page of data.",
          "type": "string"
        },
        "data": {
          "description": "Query output in tabular format.",
          "$ref": "#/definitions/Table"
        },
        "facets": {
          "description": "Query facets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Facet"
          }
        }
      },
      "required": [
        "totalRecords",
        "count",
        "resultTruncated",
        "data"
      ]
    },
    "Table": {
      "description": "Query output in tabular format.",
      "type": "object",
      "properties": {
        "columns": {
          "description": "Query result column descriptors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Column",
            "description": "Column descriptor."
          }
        },
        "rows": {
          "description": "Query result rows.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Row",
            "description": "Query result row."
          }
        }
      },
      "required": [
        "columns",
        "rows"
      ]
    },
    "Column": {
      "description": "Query result column descriptor.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Column name.",
          "type": "string"
        },
        "type": {
          "description": "Column data type.",
          "$ref": "#/definitions/ColumnDataType"
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "ColumnDataType": {
      "description": "Data type of a column in a table.",
      "type": "string",
      "enum": [
        "string",
        "integer",
        "number",
        "boolean",
        "object"
      ],
      "x-ms-enum": {
        "name": "ColumnDataType",
        "modelAsString": false
      }
    },
    "Row": {
      "description": "Query result row.",
      "type": "array",
      "items": {
        "type": "object",
        "description": "Cell value."
      }
    },
    "Facet": {
      "description": "A facet containing additional statistics on the response of a query. Can be either FacetResult or FacetError.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Facet expression, same as in the corresponding facet request.",
          "type": "string"
        },
        "resultType": {
          "description": "Result type",
          "type": "string"
        }
      },
      "required": [
        "expression",
        "resultType"
      ],
      "discriminator": "resultType"
    },
    "FacetResult": {
      "x-ms-discriminator-value": "FacetResult",
      "description": "Successfully executed facet containing additional statistics on the response of a query.",
      "type": "object",
      "properties": {
        "totalRecords": {
          "description": "Number of total records in the facet results.",
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "description": "Number of records returned in the facet response.",
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "description": "A table containing the desired facets. Only present if the facet is valid.",
          "$ref": "#/definitions/Table"
        }
      },
      "required": [
        "totalRecords",
        "count",
        "data"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Facet"
        }
      ]
    },
    "FacetError": {
      "x-ms-discriminator-value": "FacetError",
      "description": "A facet whose execution resulted in an error.",
      "type": "object",
      "properties": {
        "errors": {
          "description": "An array containing detected facet errors with details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          }
        }
      },
      "required": [
        "errors"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Facet"
        }
      ]
    },
    "ResourceChangesRequestParameters": {
      "description": "The parameters for a specific changes request.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "Specifies the resource for a changes request.",
          "type": "string"
        },
        "interval": {
          "description": "Specifies the date and time interval for a changes request.",
          "allOf": [
            {
              "$ref": "#/definitions/DateTimeInterval"
            }
          ]
        },
        "$skipToken": {
          "description": "Acts as the continuation token for paged responses.",
          "type": "string"
        },
        "$top": {
          "description": "The maximum number of changes the client can accept in a paged response.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000
        }
      },
      "required": [
        "resourceId",
        "interval"
      ]
    },
    "ResourceChangeList": {
      "description": "A list of changes associated with a resource over a specific time interval.",
      "type": "object",
      "properties": {
        "changes": {
          "description": "The pageable value returned by the operation, i.e. a list of changes to the resource.\n\n- The list is ordered from the most recent changes to the least recent changes.\n- This list will be empty if there were no changes during the requested interval.\n- The `Before` snapshot timestamp value of the oldest change can be outside of the specified time interval.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceChangeData"
          }
        },
        "$skipToken": {
          "description": "Skip token that encodes the skip information while executing the current request"
        }
      }
    },
    "ResourceChangeData": {
      "description": "Data on a specific change, represented by a pair of before and after resource snapshots.",
      "type": "object",
      "properties": {
        "changeId": {
          "description": "The change ID. Valid and unique within the specified resource only.",
          "type": "string"
        },
        "beforeSnapshot": {
          "description": "The snapshot before the change.",
          "allOf": [
            {
              "$ref": "#/definitions/ResourceSnapshotData"
            }
          ]
        },
        "afterSnapshot": {
          "description": "The snapshot after the change.",
          "allOf": [
            {
              "$ref": "#/definitions/ResourceSnapshotData"
            }
          ]
        }
      },
      "required": [
        "changeId",
        "beforeSnapshot",
        "afterSnapshot"
      ]
    },
    "ResourceSnapshotData": {
      "description": "Data on a specific resource snapshot.",
      "type": "object",
      "properties": {
        "timestamp": {
          "description": "The time when the snapshot was created.\nThe snapshot timestamp provides an approximation as to when a modification to a resource was detected.  There can be a difference between the actual modification time and the detection time.  This is due to differences in how operations that modify a resource are processed, versus how operation that record resource snapshots are processed.",
          "type": "string",
          "format": "date-time"
        },
        "content": {
          "description": "The resource snapshot content (in resourceChangeDetails response only).",
          "type": "object"
        }
      },
      "required": [
        "timestamp"
      ]
    },
    "ResourceChangeDetailsRequestParameters": {
      "description": "The parameters for a specific change details request.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "Specifies the resource for a change details request.",
          "type": "string"
        },
        "changeId": {
          "description": "Specifies the change ID.",
          "type": "string"
        }
      },
      "required": [
        "resourceId",
        "changeId"
      ]
    },
    "DateTimeInterval": {
      "description": "An interval in time specifying the date and time for the inclusive start and exclusive end, i.e. `[start, end)`.",
      "type": "object",
      "properties": {
        "start": {
          "description": "A datetime indicating the inclusive/closed start of the time interval, i.e. `[`**`start`**`, end)`. Specifying a `start` that occurs chronologically after `end` will result in an error.",
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "description": "A datetime indicating the exclusive/open end of the time interval, i.e. `[start, `**`end`**`)`. Specifying an `end` that occurs chronologically before `start` will result in an error.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "ErrorResponse": {
      "title": "Error response.",
      "type": "object",
      "description": "An error response from the API.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Error information."
        }
      },
      "required": [
        "error"
      ]
    },
    "Error": {
      "title": "Error info.",
      "type": "object",
      "description": "Error details.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code identifying the specific error."
        },
        "message": {
          "type": "string",
          "description": "A human readable error message."
        },
        "details": {
          "type": "array",
          "description": "Error details",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          }
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorDetails": {
      "title": "Error details.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code identifying the specific error."
        },
        "message": {
          "type": "string",
          "description": "A human readable error message."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "code",
        "message"
      ]
    },
    "OperationListResult": {
      "description": "Result of the request to list Resource Graph operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of Resource Graph operations supported by the Resource Graph resource provider."
        },
        "nextLink": {
          "description": "The link used to get the next page of results.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "description": "Resource Graph REST API operation definition.",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "Display metadata associated with the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft Resource Graph.",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed etc.",
              "type": "string"
            },
            "operation": {
              "description": "Type of operation: get, read, delete, etc.",
              "type": "string"
            },
            "description": {
              "description": "Description for the operation.",
              "type": "string"
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The origin of operations."
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  },
  "x-internal-service-id": "azureresourcegraph",
  "x-internal-service-name": "Azure Resource Graph",
  "x-internal-toc-name": "Resource Change Details",
  "x-internal-product-uid": null,
  "x-internal-split-members": [
    {
      "displayName": "Resource Change Details",
      "relativePath": "ResourceChangeDetails/ResourceChangeDetails"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}