{
  "swagger": "2.0",
  "info": {
    "version": "2018-09-01-preview",
    "title": "Azure Resource Graph Query",
    "description": "Azure Resource Graph Query API Reference"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {},
  "definitions": {
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource name. This is GUID value. The display name should be assigned within properties field."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource type"
        },
        "eTag": {
          "type": "string",
          "description": "This will be used to handle Optimistic Concurrency. If not present, it will always overwrite the existing resource without checking conflict."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "x-ms-azure-resource": true,
      "description": "An azure resource object"
    },
    "GraphQueryListResult": {
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of queries.",
          "type": "string"
        },
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/GraphQueryResource"
          },
          "description": "An array of graph queries."
        }
      },
      "description": "Graph query list result."
    },
    "GraphQueryResource": {
      "description": "Graph Query entity definition.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Metadata describing a graph query for an Azure resource.",
          "$ref": "#/definitions/GraphQueryProperties"
        }
      }
    },
    "GraphQueryProperties": {
      "description": "Properties that contain a graph query.",
      "required": [
        "query"
      ],
      "properties": {
        "timeModified": {
          "type": "string",
          "description": "Date and time in UTC of the last modification that was made to this graph query definition.",
          "format": "date-time",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of a graph query."
        },
        "query": {
          "type": "string",
          "description": "KQL query that will be graph."
        },
        "resultKind": {
          "description": "Enum indicating a type of graph query.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "basic"
          ],
          "x-ms-enum": {
            "name": "ResultKind",
            "modelAsString": true
          }
        }
      }
    },
    "GraphQueryUpdateParameters": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "eTag": {
          "type": "string",
          "description": "This will be used to handle Optimistic Concurrency. If not present, it will always overwrite the existing resource without checking conflict."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Metadata describing a graph query for an Azure resource.",
          "$ref": "#/definitions/GraphQueryPropertiesUpdateParameters"
        }
      },
      "description": "The parameters that can be provided when updating workbook properties properties."
    },
    "GraphQueryPropertiesUpdateParameters": {
      "description": "Properties that contain a workbook for PATCH operation.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of a graph query."
        },
        "query": {
          "type": "string",
          "description": "KQL query that will be graph."
        }
      }
    },
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "GraphQueryError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error message body that will indicate why the operation failed."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription Id."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "GraphQueryResourceNameParameter": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Graph Query resource.",
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-id": "azureresourcegraph",
  "x-internal-service-name": "Azure Resource Graph",
  "x-internal-toc-name": "Graph Query",
  "x-internal-product-uid": null,
  "x-internal-split-members": [
    {
      "displayName": "Create Or Update",
      "relativePath": "GraphQuery/CreateOrUpdate"
    },
    {
      "displayName": "Delete",
      "relativePath": "GraphQuery/Delete"
    },
    {
      "displayName": "Get",
      "relativePath": "GraphQuery/Get"
    },
    {
      "displayName": "List",
      "relativePath": "GraphQuery/List"
    },
    {
      "displayName": "Update",
      "relativePath": "GraphQuery/Update"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}