### YamlMime:RESTOperation
uid: batchservice.pool.add
name: Add
service: Batch Service
groupName: Pool
apiVersion: 2019-08-01.10.0
summary: "Adds a Pool to the specified Account.  \nWhen naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
consumes:
- application/json; odata=minimalmetadata
produces:
- application/json
paths:
- content: POST {batchUrl}/pools?api-version=2019-08-01.10.0
- content: POST {batchUrl}/pools?timeout={timeout}&api-version=2019-08-01.10.0
  isOptional: true
uriParameters:
- name: batchUrl
  in: path
  isRequired: true
  description: The base URL for all Azure Batch service requests.
  types:
  - uid: string
- name: timeout
  in: query
  description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
  types:
  - uid: integer
  format: int32
- name: api-version
  in: query
  isRequired: true
  description: Client API Version.
  types:
  - uid: string
responses:
- name: 201 Created
  headers:
  - name: client-request-id
    value: string
  - name: request-id
    value: string
  - name: ETag
    value: string
  - name: Last-Modified
    value: string
  - name: DataServiceId
    value: string
  description: The request to the Batch service was successful.
- name: Other Status Codes
  description: The error from the Batch service.
  types:
  - uid: BatchError
requestBody:
- name: default
  parameters:
  - name: id
    in: body
    isRequired: true
    description: "A string that uniquely identifies the Pool within the Account.  \nThe ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two Pool IDs within an Account that differ only by case)."
    types:
    - uid: string
  - name: displayName
    in: body
    description: "The display name for the Pool.  \nThe display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
    types:
    - uid: string
  - name: vmSize
    in: body
    isRequired: true
    description: "The size of virtual machines in the Pool. All virtual machines in a Pool are the same size.  \nFor information about available sizes of virtual machines for Cloud Services Pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2. For information about available VM sizes for Pools using Images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series)."
    types:
    - uid: string
  - name: cloudServiceConfiguration
    in: body
    description: "The cloud service configuration for the Pool.  \nThis property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch Account was created with its poolAllocationMode property set to 'UserSubscription'."
    types:
    - uid: CloudServiceConfiguration
  - name: virtualMachineConfiguration
    in: body
    description: "The virtual machine configuration for the Pool.  \nThis property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified."
    types:
    - uid: VirtualMachineConfiguration
  - name: resizeTimeout
    in: body
    description: "The timeout for allocation of Compute Nodes to the Pool.  \nThis timeout applies only to manual scaling; it has no effect when enableAutoScale is set to true. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
    types:
    - uid: string
  - name: targetDedicatedNodes
    in: body
    description: "The desired number of dedicated Compute Nodes in the Pool.  \nThis property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both."
    types:
    - uid: integer
  - name: targetLowPriorityNodes
    in: body
    description: "The desired number of low-priority Compute Nodes in the Pool.  \nThis property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both."
    types:
    - uid: integer
  - name: enableAutoScale
    in: body
    description: "Whether the Pool size should automatically adjust over time.  \nIf false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the Pool automatically resizes according to the formula. The default value is false."
    types:
    - uid: boolean
  - name: autoScaleFormula
    in: body
    description: "A formula for the desired number of Compute Nodes in the Pool.  \nThis property must not be specified if enableAutoScale is set to false. It is required if enableAutoScale is set to true. The formula is checked for validity before the Pool is created. If the formula is not valid, the Batch service rejects the request with detailed error information. For more information about specifying this formula, see 'Automatically scale Compute Nodes in an Azure Batch Pool' (https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/)."
    types:
    - uid: string
  - name: autoScaleEvaluationInterval
    in: body
    description: "The time interval at which to automatically adjust the Pool size according to the autoscale formula.  \nThe default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
    types:
    - uid: string
  - name: enableInterNodeCommunication
    in: body
    description: "Whether the Pool permits direct communication between Compute Nodes.  \nEnabling inter-node communication limits the maximum size of the Pool due to deployment restrictions on the Compute Nodes of the Pool. This may result in the Pool not reaching its desired size. The default value is false."
    types:
    - uid: boolean
  - name: networkConfiguration
    in: body
    description: "The network configuration for the Pool.  \nThe network configuration for a Pool."
    types:
    - uid: NetworkConfiguration
  - name: startTask
    in: body
    description: "A Task specified to run on each Compute Node as it joins the Pool.  \nThe Task runs when the Compute Node is added to the Pool or when the Compute Node is restarted."
    types:
    - uid: StartTask
  - name: certificateReferences
    in: body
    description: "The list of Certificates to be installed on each Compute Node in the Pool.  \nFor Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory."
    types:
    - uid: CertificateReference
      isArray: true
  - name: applicationPackageReferences
    in: body
    description: "The list of Packages to be installed on each Compute Node in the Pool.  \nChanges to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool."
    types:
    - uid: ApplicationPackageReference
      isArray: true
  - name: applicationLicenses
    in: body
    description: "The list of application licenses the Batch service will make available on each Compute Node in the Pool.  \nThe list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, Pool creation will fail."
    types:
    - uid: string
      isArray: true
  - name: maxTasksPerNode
    in: body
    description: "The maximum number of Tasks that can run concurrently on a single Compute Node in the Pool.  \nThe default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the Pool or 256."
    types:
    - uid: integer
  - name: taskSchedulingPolicy
    in: body
    description: "How Tasks are distributed across Compute Nodes in a Pool.  \nIf not specified, the default is spread."
    types:
    - uid: TaskSchedulingPolicy
  - name: userAccounts
    in: body
    description: The list of user Accounts to be created on each Compute Node in the Pool.
    types:
    - uid: UserAccount
      isArray: true
  - name: metadata
    in: body
    description: "A list of name-value pairs associated with the Pool as metadata.  \nThe Batch service does not assign any meaning to metadata; it is solely for the use of user code."
    types:
    - uid: MetadataItem
      isArray: true
  - name: mountConfiguration
    in: body
    description: "Mount storage using specified file system for the entire lifetime of the pool.  \nMount the storage using Azure fileshare, NFS, CIFS or Blobfuse based file system."
    types:
    - uid: MountConfiguration
      isArray: true
requestHeader:
- name: client-request-id
  in: header
  description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
  types:
  - uid: string
  format: uuid
- name: return-client-request-id
  in: header
  description: Whether the server should return the client-request-id in the response.
  types:
  - uid: boolean
- name: ocp-date
  in: header
  description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
  types:
  - uid: string
  format: date-time-rfc1123
definitions:
- name: CloudServiceConfiguration
  description: The configuration for Compute Nodes in a Pool based on the Azure Cloud Services platform.
  kind: object
  properties:
  - name: osFamily
    description: "The Azure Guest OS family to be installed on the virtual machines in the Pool.  \nPossible values are:\n2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1.\n3 - OS Family 3, equivalent to Windows Server 2012.\n4 - OS Family 4, equivalent to Windows Server 2012 R2.\n5 - OS Family 5, equivalent to Windows Server 2016.\n6 - OS Family 6, equivalent to Windows Server 2019. For more information, see Azure Guest OS Releases (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases)."
    types:
    - uid: string
  - name: osVersion
    description: "The Azure Guest OS version to be installed on the virtual machines in the Pool.  \nThe default value is * which specifies the latest operating system version for the specified OS family."
    types:
    - uid: string
- name: VirtualMachineConfiguration
  description: The configuration for Compute Nodes in a Pool based on the Azure Virtual Machines infrastructure.
  kind: object
  properties:
  - name: imageReference
    description: A reference to the Azure Virtual Machines Marketplace Image or the custom Virtual Machine Image to use.
    types:
    - uid: ImageReference
  - name: nodeAgentSKUId
    description: "The SKU of the Batch Compute Node agent to be provisioned on Compute Nodes in the Pool.  \nThe Batch Compute Node agent is a program that runs on each Compute Node in the Pool, and provides the command-and-control interface between the Compute Node and the Batch service. There are different implementations of the Compute Node agent, known as SKUs, for different operating systems. You must specify a Compute Node agent SKU which matches the selected Image reference. To get the list of supported Compute Node agent SKUs along with their list of verified Image references, see the 'List supported Compute Node agent SKUs' operation."
    types:
    - uid: string
  - name: windowsConfiguration
    description: "Windows operating system settings on the virtual machine.  \nThis property must not be specified if the imageReference property specifies a Linux OS Image."
    types:
    - uid: WindowsConfiguration
  - name: dataDisks
    description: "The configuration for data disks attached to the Compute Nodes in the Pool.  \nThis property must be specified if the Compute Nodes in the Pool need to have empty data disks attached to them. This cannot be updated. Each Compute Node gets its own disk (the disk is not a file share). Existing disks cannot be attached, each attached disk is empty. When the Compute Node is removed from the Pool, the disk and all data associated with it is also deleted. The disk is not formatted after being attached, it must be formatted before use - for more information see https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux and https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine."
    types:
    - uid: DataDisk
      isArray: true
  - name: licenseType
    description: "The type of on-premises license to be used when deploying the operating system.  \nThis only applies to Images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the Compute Nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are:\n\n Windows_Server - The on-premises license is for Windows Server.\n Windows_Client - The on-premises license is for Windows Client."
    types:
    - uid: string
  - name: containerConfiguration
    description: "The container configuration for the Pool.  \nIf specified, setup is performed on each Compute Node in the Pool to allow Tasks to run in containers. All regular Tasks and Job manager Tasks run on this Pool must specify the containerSettings property, and all other Tasks may specify it."
    types:
    - uid: ContainerConfiguration
- name: NetworkConfiguration
  description: The network configuration for a Pool.
  kind: object
  properties:
  - name: subnetId
    description: "The ARM resource identifier of the virtual network subnet which the Compute Nodes of the Pool will join. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.  \nThe virtual network must be in the same region and subscription as the Azure Batch Account. The specified subnet should have enough free IP addresses to accommodate the number of Compute Nodes in the Pool. If the subnet doesn't have enough free IP addresses, the Pool will partially allocate Nodes, and a resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule Tasks on the Nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the Nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the Compute Nodes to unusable. For Pools created with virtualMachineConfiguration only ARM virtual networks ('Microsoft.Network/virtualNetworks') are supported, but for Pools created with cloudServiceConfiguration both ARM and classic virtual networks are supported. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For Pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. For Pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound connections to Azure Storage on port 443. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
    types:
    - uid: string
  - name: dynamicVNetAssignmentScope
    description: The scope of dynamic vnet assignment.
    types:
    - uid: DynamicVNetAssignmentScope
  - name: endpointConfiguration
    description: "The configuration for endpoints on Compute Nodes in the Batch Pool.  \nPool endpoint configuration is only supported on Pools with the virtualMachineConfiguration property."
    types:
    - uid: PoolEndpointConfiguration
  - name: publicIPs
    description: "The list of public IPs which the Batch service will use when provisioning Compute Nodes.  \nThe number of IPs specified here limits the maximum size of the Pool - 50 dedicated nodes or 20 low-priority nodes can be allocated for each public IP. For example, a pool needing 150 dedicated VMs would need at least 3 public IPs specified. Each element of this collection is of the form: /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}."
    types:
    - uid: string
      isArray: true
- name: StartTask
  description: A Task which is run when a Node joins a Pool in the Azure Batch service, or when the Compute Node is rebooted or reimaged.
  kind: object
  properties:
  - name: commandLine
    description: "The command line of the StartTask.  \nThe command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
    types:
    - uid: string
  - name: containerSettings
    description: "The settings for the container under which the StartTask runs.  \nWhen this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
    types:
    - uid: TaskContainerSettings
  - name: resourceFiles
    description: "A list of files that the Batch service will download to the Compute Node before running the command line.  There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.  \nFiles listed under this element are located in the Task's working directory."
    types:
    - uid: ResourceFile
      isArray: true
  - name: environmentSettings
    description: A list of environment variable settings for the StartTask.
    types:
    - uid: EnvironmentSetting
      isArray: true
  - name: userIdentity
    description: "The user identity under which the StartTask runs.  \nIf omitted, the Task runs as a non-administrative user unique to the Task."
    types:
    - uid: UserIdentity
  - name: maxTaskRetryCount
    description: "The maximum number of times the Task may be retried.  \nThe Batch service retries a Task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the Task. If the maximum retry count is -1, the Batch service retries the Task without limit."
    types:
    - uid: integer
  - name: waitForSuccess
    description: "Whether the Batch service should wait for the StartTask to complete successfully (that is, to exit with exit code 0) before scheduling any Tasks on the Compute Node.  \nIf true and the StartTask fails on a Node, the Batch service retries the StartTask up to its maximum retry count (maxTaskRetryCount). If the Task has still not completed successfully after all retries, then the Batch service marks the Node unusable, and will not schedule Tasks to it. This condition can be detected via the Compute Node state and failure info details. If false, the Batch service will not wait for the StartTask to complete. In this case, other Tasks can start executing on the Compute Node while the StartTask is still running; and even if the StartTask fails, new Tasks will continue to be scheduled on the Compute Node. The default is true."
    types:
    - uid: boolean
- name: CertificateReference
  description: A reference to a Certificate to be installed on Compute Nodes in a Pool.
  kind: object
  properties:
  - name: thumbprint
    description: The thumbprint of the Certificate.
    types:
    - uid: string
  - name: thumbprintAlgorithm
    description: The algorithm with which the thumbprint is associated. This must be sha1.
    types:
    - uid: string
  - name: storeLocation
    description: "The location of the Certificate store on the Compute Node into which to install the Certificate.  \nThe default value is currentuser. This property is applicable only for Pools configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows Image reference). For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory."
    types:
    - uid: CertificateStoreLocation
  - name: storeName
    description: "The name of the Certificate store on the Compute Node into which to install the Certificate.  \nThis property is applicable only for Pools configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows Image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My."
    types:
    - uid: string
  - name: visibility
    description: "Which user Accounts on the Compute Node should have access to the private data of the Certificate.  \nYou can specify more than one visibility in this collection. The default is all Accounts."
    types:
    - uid: string
      isArray: true
- name: ApplicationPackageReference
  description: A reference to an Package to be deployed to Compute Nodes.
  kind: object
  properties:
  - name: applicationId
    description: The ID of the application to deploy.
    types:
    - uid: string
  - name: version
    description: "The version of the application to deploy. If omitted, the default version is deployed.  \nIf this is omitted on a Pool, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences and HTTP status code 409. If this is omitted on a Task, and no default version is specified for this application, the Task fails with a pre-processing error."
    types:
    - uid: string
- name: TaskSchedulingPolicy
  description: Specifies how Tasks should be distributed across Compute Nodes.
  kind: object
  properties:
  - name: nodeFillType
    description: "How Tasks are distributed across Compute Nodes in a Pool.  \nIf not specified, the default is spread."
    types:
    - uid: ComputeNodeFillType
- name: UserAccount
  description: Properties used to create a user used to execute Tasks on an Azure Batch Compute Node.
  kind: object
  properties:
  - name: name
    description: The name of the user Account.
    types:
    - uid: string
  - name: password
    description: The password for the user Account.
    types:
    - uid: string
  - name: elevationLevel
    description: "The elevation level of the user Account.  \nThe default value is nonAdmin."
    types:
    - uid: ElevationLevel
  - name: linuxUserConfiguration
    description: "The Linux-specific user configuration for the user Account.  \nThis property is ignored if specified on a Windows Pool. If not specified, the user is created with the default options."
    types:
    - uid: LinuxUserConfiguration
  - name: windowsUserConfiguration
    description: "The Windows-specific user configuration for the user Account.  \nThis property can only be specified if the user is on a Windows Pool. If not specified and on a Windows Pool, the user is created with the default options."
    types:
    - uid: WindowsUserConfiguration
- name: MetadataItem
  description: A name-value pair associated with a Batch service resource.
  kind: object
  properties:
  - name: name
    description: The name of the metadata item.
    types:
    - uid: string
  - name: value
    description: The value of the metadata item.
    types:
    - uid: string
- name: MountConfiguration
  description: The file system to mount on each node.
  kind: object
  properties:
  - name: azureBlobFileSystemConfiguration
    description: "The Azure Storage Container to mount using blob FUSE on each node.  \nThis property is mutually exclusive with all other properties."
    types:
    - uid: AzureBlobFileSystemConfiguration
  - name: nfsMountConfiguration
    description: "The NFS file system to mount on each node.  \nThis property is mutually exclusive with all other properties."
    types:
    - uid: NFSMountConfiguration
  - name: cifsMountConfiguration
    description: "The CIFS/SMB file system to mount on each node.  \nThis property is mutually exclusive with all other properties."
    types:
    - uid: CIFSMountConfiguration
  - name: azureFileShareConfiguration
    description: "The Azure File Share to mount on each node.  \nThis property is mutually exclusive with all other properties."
    types:
    - uid: AzureFileShareConfiguration
- name: BatchError
  description: An error response received from the Azure Batch service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: ErrorMessage
  - name: values
    description: A collection of key-value pairs containing additional details about the error.
    types:
    - uid: BatchErrorDetail
      isArray: true
- name: PoolAddParameter
  description: A Pool in the Azure Batch service to add.
  kind: object
  properties:
  - name: id
    description: "A string that uniquely identifies the Pool within the Account.  \nThe ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two Pool IDs within an Account that differ only by case)."
    types:
    - uid: string
  - name: displayName
    description: "The display name for the Pool.  \nThe display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
    types:
    - uid: string
  - name: vmSize
    description: "The size of virtual machines in the Pool. All virtual machines in a Pool are the same size.  \nFor information about available sizes of virtual machines for Cloud Services Pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2. For information about available VM sizes for Pools using Images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series)."
    types:
    - uid: string
  - name: cloudServiceConfiguration
    description: "The cloud service configuration for the Pool.  \nThis property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch Account was created with its poolAllocationMode property set to 'UserSubscription'."
    types:
    - uid: CloudServiceConfiguration
  - name: virtualMachineConfiguration
    description: "The virtual machine configuration for the Pool.  \nThis property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified."
    types:
    - uid: VirtualMachineConfiguration
  - name: resizeTimeout
    description: "The timeout for allocation of Compute Nodes to the Pool.  \nThis timeout applies only to manual scaling; it has no effect when enableAutoScale is set to true. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
    types:
    - uid: string
  - name: targetDedicatedNodes
    description: "The desired number of dedicated Compute Nodes in the Pool.  \nThis property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both."
    types:
    - uid: integer
  - name: targetLowPriorityNodes
    description: "The desired number of low-priority Compute Nodes in the Pool.  \nThis property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both."
    types:
    - uid: integer
  - name: enableAutoScale
    description: "Whether the Pool size should automatically adjust over time.  \nIf false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the Pool automatically resizes according to the formula. The default value is false."
    types:
    - uid: boolean
  - name: autoScaleFormula
    description: "A formula for the desired number of Compute Nodes in the Pool.  \nThis property must not be specified if enableAutoScale is set to false. It is required if enableAutoScale is set to true. The formula is checked for validity before the Pool is created. If the formula is not valid, the Batch service rejects the request with detailed error information. For more information about specifying this formula, see 'Automatically scale Compute Nodes in an Azure Batch Pool' (https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/)."
    types:
    - uid: string
  - name: autoScaleEvaluationInterval
    description: "The time interval at which to automatically adjust the Pool size according to the autoscale formula.  \nThe default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
    types:
    - uid: string
  - name: enableInterNodeCommunication
    description: "Whether the Pool permits direct communication between Compute Nodes.  \nEnabling inter-node communication limits the maximum size of the Pool due to deployment restrictions on the Compute Nodes of the Pool. This may result in the Pool not reaching its desired size. The default value is false."
    types:
    - uid: boolean
  - name: networkConfiguration
    description: "The network configuration for the Pool.  \nThe network configuration for a Pool."
    types:
    - uid: NetworkConfiguration
  - name: startTask
    description: "A Task specified to run on each Compute Node as it joins the Pool.  \nThe Task runs when the Compute Node is added to the Pool or when the Compute Node is restarted."
    types:
    - uid: StartTask
  - name: certificateReferences
    description: "The list of Certificates to be installed on each Compute Node in the Pool.  \nFor Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory."
    types:
    - uid: CertificateReference
      isArray: true
  - name: applicationPackageReferences
    description: "The list of Packages to be installed on each Compute Node in the Pool.  \nChanges to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool."
    types:
    - uid: ApplicationPackageReference
      isArray: true
  - name: applicationLicenses
    description: "The list of application licenses the Batch service will make available on each Compute Node in the Pool.  \nThe list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, Pool creation will fail."
    types:
    - uid: string
      isArray: true
  - name: maxTasksPerNode
    description: "The maximum number of Tasks that can run concurrently on a single Compute Node in the Pool.  \nThe default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the Pool or 256."
    types:
    - uid: integer
  - name: taskSchedulingPolicy
    description: "How Tasks are distributed across Compute Nodes in a Pool.  \nIf not specified, the default is spread."
    types:
    - uid: TaskSchedulingPolicy
  - name: userAccounts
    description: The list of user Accounts to be created on each Compute Node in the Pool.
    types:
    - uid: UserAccount
      isArray: true
  - name: metadata
    description: "A list of name-value pairs associated with the Pool as metadata.  \nThe Batch service does not assign any meaning to metadata; it is solely for the use of user code."
    types:
    - uid: MetadataItem
      isArray: true
  - name: mountConfiguration
    description: "Mount storage using specified file system for the entire lifetime of the pool.  \nMount the storage using Azure fileshare, NFS, CIFS or Blobfuse based file system."
    types:
    - uid: MountConfiguration
      isArray: true
- name: ImageReference
  description: A reference to an Azure Virtual Machines Marketplace Image or a custom Azure Virtual Machine Image. To get the list of all Azure Marketplace Image references verified by Azure Batch, see the 'List supported Images' operation.
  kind: object
  properties:
  - name: publisher
    description: "The publisher of the Azure Virtual Machines Marketplace Image.  \nFor example, Canonical or MicrosoftWindowsServer."
    types:
    - uid: string
  - name: offer
    description: "The offer type of the Azure Virtual Machines Marketplace Image.  \nFor example, UbuntuServer or WindowsServer."
    types:
    - uid: string
  - name: sku
    description: "The SKU of the Azure Virtual Machines Marketplace Image.  \nFor example, 18.04-LTS or 2019-Datacenter."
    types:
    - uid: string
  - name: version
    description: "The version of the Azure Virtual Machines Marketplace Image.  \nA value of 'latest' can be specified to select the latest version of an Image. If omitted, the default is 'latest'."
    types:
    - uid: string
  - name: virtualMachineImageId
    description: "The ARM resource identifier of the Virtual Machine Image or Shared Image Gallery Image. Computes Compute Nodes of the Pool will be created using this Image Id. This is of either the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName} for Virtual Machine Image or /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}/versions/{versionId} for SIG image.  \nThis property is mutually exclusive with other ImageReference properties. For Virtual Machine Image it must be in the same region and subscription as the Azure Batch account. For SIG image it must have replicas in the same region as the Azure Batch account. For information about the firewall settings for the Batch Compute Node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
    types:
    - uid: string
- name: WindowsConfiguration
  description: Windows operating system settings to apply to the virtual machine.
  kind: object
  properties:
  - name: enableAutomaticUpdates
    description: "Whether automatic updates are enabled on the virtual machine.  \nIf omitted, the default value is true."
    types:
    - uid: boolean
- name: DataDisk
  description: Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks, you need to mount and format the disks from within a VM to use them.
  kind: object
  properties:
  - name: lun
    description: "The logical unit number.  \nThe lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun."
    types:
    - uid: integer
  - name: caching
    description: "The type of caching to be enabled for the data disks.  \nThe default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/."
    types:
    - uid: CachingType
  - name: diskSizeGB
    description: The initial disk size in gigabytes.
    types:
    - uid: integer
  - name: storageAccountType
    description: "The storage Account type to be used for the data disk.  \nIf omitted, the default is \"standard_lrs\"."
    types:
    - uid: StorageAccountType
- name: ContainerConfiguration
  description: The configuration for container-enabled Pools.
  kind: object
  properties:
  - name: type
    description: The container technology to be used.
    types:
    - uid: ContainerType
  - name: containerImageNames
    description: "The collection of container Image names.  \nThis is the full Image reference, as would be specified to \"docker pull\". An Image will be sourced from the default Docker registry unless the Image is fully qualified with an alternative registry."
    types:
    - uid: string
      isArray: true
  - name: containerRegistries
    description: "Additional private registries from which containers can be pulled.  \nIf any Images must be downloaded from a private registry which requires credentials, then those credentials must be provided here."
    types:
    - uid: ContainerRegistry
      isArray: true
- name: DynamicVNetAssignmentScope
  description: The scope of dynamic vnet assignment.
  kind: enum
  properties:
  - name: none
    description: No dynamic VNet assignment is enabled.
    types:
    - uid: string
  - name: job
    description: Dynamic VNet assignment is done per-job.
    types:
    - uid: string
- name: PoolEndpointConfiguration
  description: The endpoint configuration for a Pool.
  kind: object
  properties:
  - name: inboundNATPools
    description: "A list of inbound NAT Pools that can be used to address specific ports on an individual Compute Node externally.  \nThe maximum number of inbound NAT Pools per Batch Pool is 5. If the maximum number of inbound NAT Pools is exceeded the request fails with HTTP status code 400."
    types:
    - uid: InboundNATPool
      isArray: true
- name: TaskContainerSettings
  description: The container settings for a Task.
  kind: object
  properties:
  - name: containerRunOptions
    description: "Additional options to the container create command.  \nThese additional options are supplied as arguments to the \"docker create\" command, in addition to those controlled by the Batch Service."
    types:
    - uid: string
  - name: imageName
    description: "The Image to use to create the container in which the Task will run.  \nThis is the full Image reference, as would be specified to \"docker pull\". If no tag is provided as part of the Image name, the tag \":latest\" is used as a default."
    types:
    - uid: string
  - name: registry
    description: "The private registry which contains the container Image.  \nThis setting can be omitted if was already provided at Pool creation."
    types:
    - uid: ContainerRegistry
  - name: workingDirectory
    description: "The location of the container Task working directory.  \nThe default is 'taskWorkingDirectory'."
    types:
    - uid: ContainerWorkingDirectory
- name: ResourceFile
  description: A single file or multiple files to be downloaded to a Compute Node.
  kind: object
  properties:
  - name: autoStorageContainerName
    description: "The storage container name in the auto storage Account.  \nThe autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified."
    types:
    - uid: string
  - name: storageContainerUrl
    description: "The URL of the blob container within Azure Blob Storage.  \nThe autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable using anonymous access; that is, the Batch service does not present any credentials when downloading blobs from the container. There are two ways to get such a URL for a container in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the container, or set the ACL for the container to allow public access."
    types:
    - uid: string
  - name: httpUrl
    description: "The URL of the file to download.  \nThe autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL points to Azure Blob Storage, it must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access."
    types:
    - uid: string
  - name: blobPrefix
    description: "The blob prefix to use when downloading blobs from an Azure Storage container. Only the blobs whose names begin with the specified prefix will be downloaded.  \nThe property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded."
    types:
    - uid: string
  - name: filePath
    description: "The location on the Compute Node to which to download the file(s), relative to the Task's working directory.  \nIf the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the Task's working directory (for example by using '..')."
    types:
    - uid: string
  - name: fileMode
    description: "The file permission mode attribute in octal format.  \nThis property applies only to files being downloaded to Linux Compute Nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows Compute Node. If this property is not specified for a Linux Compute Node, then a default value of 0770 is applied to the file."
    types:
    - uid: string
- name: EnvironmentSetting
  description: An environment variable to be set on a Task process.
  kind: object
  properties:
  - name: name
    description: The name of the environment variable.
    types:
    - uid: string
  - name: value
    description: The value of the environment variable.
    types:
    - uid: string
- name: UserIdentity
  description: The definition of the user identity under which the Task is run.
  kind: object
  properties:
  - name: username
    description: "The name of the user identity under which the Task is run.  \nThe userName and autoUser properties are mutually exclusive; you must specify one but not both."
    types:
    - uid: string
  - name: autoUser
    description: "The auto user under which the Task is run.  \nThe userName and autoUser properties are mutually exclusive; you must specify one but not both."
    types:
    - uid: AutoUserSpecification
- name: CertificateStoreLocation
  description: The location of the Certificate store on the Compute Node into which to install the Certificate.
  kind: enum
  properties:
  - name: currentuser
    description: Certificates should be installed to the CurrentUser Certificate store.
    types:
    - uid: string
  - name: localmachine
    description: Certificates should be installed to the LocalMachine Certificate store.
    types:
    - uid: string
- name: ComputeNodeFillType
  description: How Tasks are distributed across Compute Nodes in a Pool.
  kind: enum
  properties:
  - name: spread
    description: Tasks should be assigned evenly across all Compute Nodes in the Pool.
    types:
    - uid: string
  - name: pack
    description: As many Tasks as possible (maxTasksPerNode) should be assigned to each Compute Node in the Pool before any Tasks are assigned to the next Compute Node in the Pool.
    types:
    - uid: string
- name: ElevationLevel
  description: The elevation level of the user.
  kind: enum
  properties:
  - name: nonadmin
    description: The user is a standard user without elevated access.
    types:
    - uid: string
  - name: admin
    description: The user is a user with elevated access and operates with full Administrator permissions.
    types:
    - uid: string
- name: LinuxUserConfiguration
  description: Properties used to create a user Account on a Linux Compute Node.
  kind: object
  properties:
  - name: uid
    description: "The user ID of the user Account.  \nThe uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid."
    types:
    - uid: integer
  - name: gid
    description: "The group ID for the user Account.  \nThe uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid."
    types:
    - uid: integer
  - name: sshPrivateKey
    description: "The SSH private key for the user Account.  \nThe private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between Compute Nodes in a Linux Pool when the Pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between Compute Nodes (no modification of the user's .ssh directory is done)."
    types:
    - uid: string
- name: WindowsUserConfiguration
  description: Properties used to create a user Account on a Windows Compute Node.
  kind: object
  properties:
  - name: loginMode
    description: "The login mode for the user  \nThe default value for VirtualMachineConfiguration Pools is 'batch' and for CloudServiceConfiguration Pools is 'interactive'."
    types:
    - uid: LoginMode
- name: AzureBlobFileSystemConfiguration
  description: Information used to connect to an Azure Storage Container using Blobfuse.
  kind: object
  properties:
  - name: accountName
    description: The Azure Storage Account name.
    types:
    - uid: string
  - name: containerName
    description: The Azure Blob Storage Container name.
    types:
    - uid: string
  - name: accountKey
    description: "The Azure Storage Account key.  \nThis property is mutually exclusive with sasKey and one must be specified."
    types:
    - uid: string
  - name: sasKey
    description: "The Azure Storage SAS token.  \nThis property is mutually exclusive with accountKey and one must be specified."
    types:
    - uid: string
  - name: blobfuseOptions
    description: "Additional command line options to pass to the mount command.  \nThese are 'net use' options in Windows and 'mount' options in Linux."
    types:
    - uid: string
  - name: relativeMountPath
    description: "The relative path on the compute node where the file system will be mounted  \nAll file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
    types:
    - uid: string
- name: NFSMountConfiguration
  description: Information used to connect to an NFS file system.
  kind: object
  properties:
  - name: source
    description: The URI of the file system to mount.
    types:
    - uid: string
  - name: relativeMountPath
    description: "The relative path on the compute node where the file system will be mounted  \nAll file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
    types:
    - uid: string
  - name: mountOptions
    description: "Additional command line options to pass to the mount command.  \nThese are 'net use' options in Windows and 'mount' options in Linux."
    types:
    - uid: string
- name: CIFSMountConfiguration
  description: Information used to connect to a CIFS file system.
  kind: object
  properties:
  - name: username
    description: The user to use for authentication against the CIFS file system.
    types:
    - uid: string
  - name: source
    description: The URI of the file system to mount.
    types:
    - uid: string
  - name: relativeMountPath
    description: "The relative path on the compute node where the file system will be mounted  \nAll file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
    types:
    - uid: string
  - name: mountOptions
    description: "Additional command line options to pass to the mount command.  \nThese are 'net use' options in Windows and 'mount' options in Linux."
    types:
    - uid: string
  - name: password
    description: The password to use for authentication against the CIFS file system.
    types:
    - uid: string
- name: AzureFileShareConfiguration
  description: Information used to connect to an Azure Fileshare.
  kind: object
  properties:
  - name: accountName
    description: The Azure Storage account name.
    types:
    - uid: string
  - name: azureFileUrl
    description: "The Azure Files URL.  \nThis is of the form 'https://{account}.file.core.windows.net/'."
    types:
    - uid: string
  - name: accountKey
    description: The Azure Storage account key.
    types:
    - uid: string
  - name: relativeMountPath
    description: "The relative path on the compute node where the file system will be mounted  \nAll file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
    types:
    - uid: string
  - name: mountOptions
    description: "Additional command line options to pass to the mount command.  \nThese are 'net use' options in Windows and 'mount' options in Linux."
    types:
    - uid: string
- name: ErrorMessage
  description: An error message received in an Azure Batch error response.
  kind: object
  properties:
  - name: lang
    description: The language code of the error message
    types:
    - uid: string
  - name: value
    description: The text of the message.
    types:
    - uid: string
- name: BatchErrorDetail
  description: An item of additional information included in an Azure Batch error response.
  kind: object
  properties:
  - name: key
    description: An identifier specifying the meaning of the Value property.
    types:
    - uid: string
  - name: value
    description: The additional information included with the error response.
    types:
    - uid: string
- name: CachingType
  description: The type of caching to enable for the disk.
  kind: enum
  properties:
  - name: none
    description: The caching mode for the disk is not enabled.
    types:
    - uid: string
  - name: readonly
    description: The caching mode for the disk is read only.
    types:
    - uid: string
  - name: readwrite
    description: The caching mode for the disk is read and write.
    types:
    - uid: string
- name: StorageAccountType
  description: The storage Account type for use in creating data disks.
  kind: enum
  properties:
  - name: standard_lrs
    description: The data disk should use standard locally redundant storage.
    types:
    - uid: string
  - name: premium_lrs
    description: The data disk should use premium locally redundant storage.
    types:
    - uid: string
- name: ContainerType
  description: The container technology to be used.
  kind: enum
  properties:
  - name: dockerCompatible
    description: A Docker compatible container technology will be used to launch the containers.
    types:
    - uid: string
- name: ContainerRegistry
  description: A private container registry.
  kind: object
  properties:
  - name: registryServer
    description: "The registry URL.  \nIf omitted, the default is \"docker.io\"."
    types:
    - uid: string
  - name: username
    description: The user name to log into the registry server.
    types:
    - uid: string
  - name: password
    description: The password to log into the registry server.
    types:
    - uid: string
- name: InboundNATPool
  description: A inbound NAT Pool that can be used to address specific ports on Compute Nodes in a Batch Pool externally.
  kind: object
  properties:
  - name: name
    description: "The name of the endpoint.  \nThe name must be unique within a Batch Pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters.  If any invalid values are provided the request fails with HTTP status code 400."
    types:
    - uid: string
  - name: protocol
    description: The protocol of the endpoint.
    types:
    - uid: InboundEndpointProtocol
  - name: backendPort
    description: "The port number on the Compute Node.  \nThis must be unique within a Batch Pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400."
    types:
    - uid: integer
  - name: frontendPortRangeStart
    description: "The first port number in the range of external ports that will be used to provide inbound access to the backendPort on individual Compute Nodes.  \nAcceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a Pool must be distinct and cannot overlap. Each range must contain at least 40 ports. If any reserved or overlapping values are provided the request fails with HTTP status code 400."
    types:
    - uid: integer
  - name: frontendPortRangeEnd
    description: "The last port number in the range of external ports that will be used to provide inbound access to the backendPort on individual Compute Nodes.  \nAcceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a Pool must be distinct and cannot overlap. Each range must contain at least 40 ports. If any reserved or overlapping values are provided the request fails with HTTP status code 400."
    types:
    - uid: integer
  - name: networkSecurityGroupRules
    description: "A list of network security group rules that will be applied to the endpoint.  \nThe maximum number of rules that can be specified across all the endpoints on a Batch Pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400."
    types:
    - uid: NetworkSecurityGroupRule
      isArray: true
- name: ContainerWorkingDirectory
  description: The location of the container Task working directory.
  kind: enum
  properties:
  - name: taskWorkingDirectory
    description: Use the standard Batch service Task working directory, which will contain the Task Resource Files populated by Batch.
    types:
    - uid: string
  - name: containerImageDefault
    description: Use the working directory defined in the container Image. Beware that this directory will not contain the Resource Files downloaded by Batch.
    types:
    - uid: string
- name: AutoUserSpecification
  description: Specifies the parameters for the auto user that runs a Task on the Batch service.
  kind: object
  properties:
  - name: scope
    description: "The scope for the auto user  \nThe default value is pool. If the pool is running Windows a value of Task should be specified if stricter isolation between tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates have been specified on the pool which should not be accessible by normal tasks but should be accessible by StartTasks."
    types:
    - uid: AutoUserScope
  - name: elevationLevel
    description: "The elevation level of the auto user.  \nThe default value is nonAdmin."
    types:
    - uid: ElevationLevel
- name: LoginMode
  description: The login mode for the user
  kind: enum
  properties:
  - name: batch
    description: The LOGON32_LOGON_BATCH Win32 login mode. The batch login mode is recommended for long running parallel processes.
    types:
    - uid: string
  - name: interactive
    description: The LOGON32_LOGON_INTERACTIVE Win32 login mode. UAC is enabled on Windows VirtualMachineConfiguration Pools. If this option is used with an elevated user identity in a Windows VirtualMachineConfiguration Pool, the user session will not be elevated unless the application executed by the Task command line is configured to always require administrative privilege or to always require maximum privilege.
    types:
    - uid: string
- name: InboundEndpointProtocol
  description: The protocol of the endpoint.
  kind: enum
  properties:
  - name: tcp
    description: Use TCP for the endpoint.
    types:
    - uid: string
  - name: udp
    description: Use UDP for the endpoint.
    types:
    - uid: string
- name: NetworkSecurityGroupRule
  description: A network security group rule to apply to an inbound endpoint.
  kind: object
  properties:
  - name: priority
    description: "The priority for this rule.  \nPriorities within a Pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 3500. If any reserved or duplicate values are provided the request fails with HTTP status code 400."
    types:
    - uid: integer
  - name: access
    description: The action that should be taken for a specified IP address, subnet range or tag.
    types:
    - uid: NetworkSecurityGroupRuleAccess
  - name: sourceAddressPrefix
    description: "The source address prefix or tag to match for the rule.  \nValid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400."
    types:
    - uid: string
  - name: sourcePortRanges
    description: "The source port ranges to match for the rule.  \nValid values are '*' (for all ports 0 - 65535), a specific port (i.e. 22), or a port range (i.e. 100-200). The ports must be in the range of 0 to 65535. Each entry in this collection must not overlap any other entry (either a range or an individual port). If any other values are provided the request fails with HTTP status code 400. The default value is '*'."
    types:
    - uid: string
      isArray: true
- name: AutoUserScope
  description: The scope for the auto user
  kind: enum
  properties:
  - name: task
    description: Specifies that the service should create a new user for the Task.
    types:
    - uid: string
  - name: pool
    description: Specifies that the Task runs as the common auto user Account which is created on every Compute Node in a Pool.
    types:
    - uid: string
- name: NetworkSecurityGroupRuleAccess
  description: The action that should be taken for a specified IP address, subnet range or tag.
  kind: enum
  properties:
  - name: allow
    description: Allow access.
    types:
    - uid: string
  - name: deny
    description: Deny access.
    types:
    - uid: string
examples:
- name: Add a CloudServiceConfiguration pool
  request:
    uri: POST account.region.batch.azure.com/pools?api-version=2019-08-01.10.0
    body: >-
      {
        "id": "poolId",
        "vmSize": "small",
        "cloudServiceConfiguration": {
          "osFamily": "4"
        },
        "resizeTimeout": "PT15M",
        "targetDedicatedNodes": 5,
        "targetLowPriorityNodes": 0,
        "maxTasksPerNode": 3,
        "taskSchedulingPolicy": {
          "nodeFillType": "spread"
        },
        "enableAutoScale": false,
        "enableInterNodeCommunication": true,
        "metadata": [
          {
            "name": "myproperty",
            "value": "myvalue"
          }
        ]
      }
    headers:
    - name: client-request-id
      value: 00000000-0000-0000-0000-000000000000
    - name: ocp-date
      value: Fri, 17 Feb 2017 00:00:00 GMT
  responses:
  - statusCode: "201"
- name: Add a VirtualMachineConfiguration pool
  request:
    uri: POST account.region.batch.azure.com/pools?api-version=2019-08-01.10.0
    body: >-
      {
        "id": "pool2",
        "vmSize": "standard_a1",
        "virtualMachineConfiguration": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04.0-LTS"
          },
          "nodeAgentSKUId": "batch.node.ubuntu 16.04"
        },
        "resizeTimeout": "PT15M",
        "targetDedicatedNodes": 5,
        "targetLowPriorityNodes": 0,
        "maxTasksPerNode": 3,
        "taskSchedulingPolicy": {
          "nodeFillType": "spread"
        },
        "enableAutoScale": false,
        "enableInterNodeCommunication": true,
        "metadata": [
          {
            "name": "myproperty",
            "value": "myvalue"
          }
        ]
      }
    headers:
    - name: client-request-id
      value: 00000000-0000-0000-0000-000000000000
    - name: ocp-date
      value: Fri, 17 Feb 2017 00:00:00 GMT
  responses:
  - statusCode: "201"
- name: Add a VirtualMachineConfiguration pool with containers
  request:
    uri: POST account.region.batch.azure.com/pools?api-version=2019-08-01.10.0
    body: >-
      {
        "id": "pool2",
        "vmSize": "standard_a1",
        "virtualMachineConfiguration": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04.0-LTS"
          },
          "nodeAgentSKUId": "batch.node.ubuntu 16.04",
          "containerConfiguration": {
            "type": "dockerCompatible",
            "containerImageNames": [
              "busybox"
            ]
          }
        },
        "resizeTimeout": "PT15M",
        "targetDedicatedNodes": 5,
        "targetLowPriorityNodes": 0,
        "maxTasksPerNode": 3,
        "taskSchedulingPolicy": {
          "nodeFillType": "spread"
        },
        "enableAutoScale": false
      }
    headers:
    - name: client-request-id
      value: 00000000-0000-0000-0000-000000000000
    - name: ocp-date
      value: Fri, 17 Feb 2017 00:00:00 GMT
  responses:
  - statusCode: "201"
- name: Add a pool with mount drive specified
  request:
    uri: POST account.region.batch.azure.com/pools?api-version=2019-08-01.10.0
    body: >-
      {
        "id": "pool2",
        "vmSize": "standard_a1",
        "virtualMachineConfiguration": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04.0-LTS"
          },
          "nodeAgentSKUId": "batch.node.ubuntu 16.04"
        },
        "mountConfiguration": [
          {
            "azureBlobFileSystemConfiguration": {
              "accountName": "accountName",
              "containerName": "blobContainerName",
              "accountKey": "accountKey",
              "relativeMountPath": "bfusepath"
            }
          },
          {
            "azureFileShareConfiguration": {
              "accountName": "accountName",
              "azureFileUrl": "https://myaccount.file.core.windows.net/fileshare",
              "accountKey": "accountKey",
              "relativeMountPath": "filesharepath",
              "mountOptions": "mount options ver=1.0"
            }
          },
          {
            "nfsMountConfiguration": {
              "source": "somesource nfs url",
              "relativeMountPath": "mountpath",
              "mountOptions": "mount options ver=1.0"
            }
          },
          {
            "cifsMountConfiguration": {
              "username": "accountName",
              "password": "password",
              "source": "//myaccount.file.core.windows.net/file",
              "relativeMountPath": "mountpath",
              "mountOptions": "mount options ver=1.0"
            }
          }
        ],
        "resizeTimeout": "PT15M",
        "targetDedicatedNodes": 5,
        "targetLowPriorityNodes": 0,
        "maxTasksPerNode": 3,
        "taskSchedulingPolicy": {
          "nodeFillType": "spread"
        },
        "enableAutoScale": false
      }
    headers:
    - name: client-request-id
      value: 00000000-0000-0000-0000-000000000000
  responses:
  - statusCode: "201"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Impersonate your user account
- name: Authorization
  type: apiKey
  in: header
errorCodes: []
