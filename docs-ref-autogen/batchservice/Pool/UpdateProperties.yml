### YamlMime:RESTOperation
uid: batch.core.windows.net.batchservice.pool.updateproperties
name: Update Properties
service: Batch Service
groupName: Pool
apiVersion: 2018-08-01.7.0
summary: "Updates the properties of the specified pool.  \nThis fully replaces all the updateable properties of the pool. For example, if the pool has a start task associated with it and if start task is not specified with this request, then the Batch service will remove the existing start task."
consumes:
- application/json; odata=minimalmetadata
produces:
- application/json
paths:
- content: POST https://batch.core.windows.net/pools/{poolId}/updateproperties?api-version=2018-08-01.7.0
- content: POST https://batch.core.windows.net/pools/{poolId}/updateproperties?timeout={timeout}&api-version=2018-08-01.7.0
  isOptional: true
uriParameters:
- name: poolId
  in: path
  isRequired: true
  description: The ID of the pool to update.
  types:
  - uid: string
- name: timeout
  in: query
  description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
  types:
  - uid: integer
  format: int32
- name: api-version
  in: query
  isRequired: true
  description: Client API Version.
  types:
  - uid: string
responses:
- name: 204 No Content
  headers:
  - name: client-request-id
    value: string
  - name: request-id
    value: string
  - name: ETag
    value: string
  - name: Last-Modified
    value: string
  - name: DataServiceId
    value: string
  description: The request to the Batch service was successful.
- name: Other Status Codes
  description: The error from the Batch service.
  types:
  - uid: BatchError
requestBody:
- name: default
  parameters:
  - name: startTask
    in: body
    description: "A task to run on each compute node as it joins the pool. The task runs when the node is added to the pool or when the node is restarted.  \nIf this element is present, it overwrites any existing start task. If omitted, any existing start task is removed from the pool."
    types:
    - uid: StartTask
  - name: certificateReferences
    in: body
    isRequired: true
    description: "A list of certificates to be installed on each compute node in the pool.  \nThis list replaces any existing certificate references configured on the pool. If you specify an empty collection, any existing certificate references are removed from the pool. For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory."
    types:
    - uid: CertificateReference
      isArray: true
  - name: applicationPackageReferences
    in: body
    isRequired: true
    description: "A list of application packages to be installed on each compute node in the pool.  \nThe list replaces any existing application package references on the pool. Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. If omitted, or if you specify an empty collection, any existing application packages references are removed from the pool."
    types:
    - uid: ApplicationPackageReference
      isArray: true
  - name: metadata
    in: body
    isRequired: true
    description: "A list of name-value pairs associated with the pool as metadata.  \nThis list replaces any existing metadata configured on the pool. If omitted, or if you specify an empty collection, any existing metadata is removed from the pool."
    types:
    - uid: MetadataItem
      isArray: true
requestHeader:
- name: client-request-id
  in: header
  description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
  types:
  - uid: string
  format: uuid
- name: return-client-request-id
  in: header
  description: Whether the server should return the client-request-id in the response.
  types:
  - uid: boolean
- name: ocp-date
  in: header
  description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
  types:
  - uid: string
  format: date-time-rfc1123
definitions:
- name: StartTask
  description: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.
  kind: object
  properties:
  - name: commandLine
    description: "The command line of the start task.  \nThe command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
    types:
    - uid: string
  - name: containerSettings
    description: "The settings for the container under which the start task runs.  \nWhen this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container."
    types:
    - uid: TaskContainerSettings
  - name: resourceFiles
    description: "A list of files that the Batch service will download to the compute node before running the command line.  There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.  \nFiles listed under this element are located in the task's working directory."
    types:
    - uid: ResourceFile
      isArray: true
  - name: environmentSettings
    description: A list of environment variable settings for the start task.
    types:
    - uid: EnvironmentSetting
      isArray: true
  - name: userIdentity
    description: "The user identity under which the start task runs.  \nIf omitted, the task runs as a non-administrative user unique to the task."
    types:
    - uid: UserIdentity
  - name: maxTaskRetryCount
    description: "The maximum number of times the task may be retried.  \nThe Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit."
    types:
    - uid: integer
  - name: waitForSuccess
    description: "Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.  \nIf true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount). If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it. This condition can be detected via the node state and failure info details. If false, the Batch service will not wait for the start task to complete. In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node. The default is false."
    types:
    - uid: boolean
- name: CertificateReference
  description: A reference to a certificate to be installed on compute nodes in a pool.
  kind: object
  properties:
  - name: thumbprint
    description: The thumbprint of the certificate.
    types:
    - uid: string
  - name: thumbprintAlgorithm
    description: The algorithm with which the thumbprint is associated. This must be sha1.
    types:
    - uid: string
  - name: storeLocation
    description: "The location of the certificate store on the compute node into which to install the certificate.  \nThe default value is currentuser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory."
    types:
    - uid: CertificateStoreLocation
  - name: storeName
    description: "The name of the certificate store on the compute node into which to install the certificate.  \nThis property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My."
    types:
    - uid: string
  - name: visibility
    description: "Which user accounts on the compute node should have access to the private data of the certificate.  \nYou can specify more than one visibility in this collection. The default is all accounts."
    types:
    - uid: string
      isArray: true
- name: ApplicationPackageReference
  description: A reference to an application package to be deployed to compute nodes.
  kind: object
  properties:
  - name: applicationId
    description: The ID of the application to deploy.
    types:
    - uid: string
  - name: version
    description: "The version of the application to deploy. If omitted, the default version is deployed.  \nIf this is omitted on a pool, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences and HTTP status code 409. If this is omitted on a task, and no default version is specified for this application, the task fails with a pre-processing error."
    types:
    - uid: string
- name: MetadataItem
  description: A name-value pair associated with a Batch service resource.
  kind: object
  properties:
  - name: name
    description: The name of the metadata item.
    types:
    - uid: string
  - name: value
    description: The value of the metadata item.
    types:
    - uid: string
- name: BatchError
  description: An error response received from the Azure Batch service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: ErrorMessage
  - name: values
    description: A collection of key-value pairs containing additional details about the error.
    types:
    - uid: BatchErrorDetail
      isArray: true
- name: PoolUpdatePropertiesParameter
  description: The set of changes to be made to a pool.
  kind: object
  properties:
  - name: startTask
    description: "A task to run on each compute node as it joins the pool. The task runs when the node is added to the pool or when the node is restarted.  \nIf this element is present, it overwrites any existing start task. If omitted, any existing start task is removed from the pool."
    types:
    - uid: StartTask
  - name: certificateReferences
    description: "A list of certificates to be installed on each compute node in the pool.  \nThis list replaces any existing certificate references configured on the pool. If you specify an empty collection, any existing certificate references are removed from the pool. For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory."
    types:
    - uid: CertificateReference
      isArray: true
  - name: applicationPackageReferences
    description: "A list of application packages to be installed on each compute node in the pool.  \nThe list replaces any existing application package references on the pool. Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. If omitted, or if you specify an empty collection, any existing application packages references are removed from the pool."
    types:
    - uid: ApplicationPackageReference
      isArray: true
  - name: metadata
    description: "A list of name-value pairs associated with the pool as metadata.  \nThis list replaces any existing metadata configured on the pool. If omitted, or if you specify an empty collection, any existing metadata is removed from the pool."
    types:
    - uid: MetadataItem
      isArray: true
- name: TaskContainerSettings
  description: The container settings for a task.
  kind: object
  properties:
  - name: containerRunOptions
    description: "Additional options to the container create command.  \nThese additional options are supplied as arguments to the \"docker create\" command, in addition to those controlled by the Batch Service."
    types:
    - uid: string
  - name: imageName
    description: "The image to use to create the container in which the task will run.  \nThis is the full image reference, as would be specified to \"docker pull\". If no tag is provided as part of the image name, the tag \":latest\" is used as a default."
    types:
    - uid: string
  - name: registry
    description: "The private registry which contains the container image.  \nThis setting can be omitted if was already provided at pool creation."
    types:
    - uid: ContainerRegistry
- name: ResourceFile
  description: A file to be downloaded from Azure blob storage to a compute node.
  kind: object
  properties:
  - name: blobSource
    description: "The URL of the file within Azure Blob Storage.  \nThis URL must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access."
    types:
    - uid: string
  - name: filePath
    description: The location on the compute node to which to download the file, relative to the task's working directory.
    types:
    - uid: string
  - name: fileMode
    description: "The file permission mode attribute in octal format.  \nThis property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file."
    types:
    - uid: string
- name: EnvironmentSetting
  description: An environment variable to be set on a task process.
  kind: object
  properties:
  - name: name
    description: The name of the environment variable.
    types:
    - uid: string
  - name: value
    description: The value of the environment variable.
    types:
    - uid: string
- name: UserIdentity
  description: The definition of the user identity under which the task is run.
  kind: object
  properties:
  - name: username
    description: "The name of the user identity under which the task is run.  \nThe userName and autoUser properties are mutually exclusive; you must specify one but not both."
    types:
    - uid: string
  - name: autoUser
    description: "The auto user under which the task is run.  \nThe userName and autoUser properties are mutually exclusive; you must specify one but not both."
    types:
    - uid: AutoUserSpecification
- name: CertificateStoreLocation
  description: The location of the certificate store on the compute node into which to install the certificate.
  kind: enum
  properties:
  - name: currentuser
    description: Certificates should be installed to the CurrentUser certificate store.
    types:
    - uid: string
  - name: localmachine
    description: Certificates should be installed to the LocalMachine certificate store.
    types:
    - uid: string
- name: ErrorMessage
  description: An error message received in an Azure Batch error response.
  kind: object
  properties:
  - name: lang
    description: The language code of the error message
    types:
    - uid: string
  - name: value
    description: The text of the message.
    types:
    - uid: string
- name: BatchErrorDetail
  description: An item of additional information included in an Azure Batch error response.
  kind: object
  properties:
  - name: key
    description: An identifier specifying the meaning of the Value property.
    types:
    - uid: string
  - name: value
    description: The additional information included with the error response.
    types:
    - uid: string
- name: ContainerRegistry
  description: A private container registry.
  kind: object
  properties:
  - name: registryServer
    description: "The registry URL.  \nIf omitted, the default is \"docker.io\"."
    types:
    - uid: string
  - name: username
    description: The user name to log into the registry server.
    types:
    - uid: string
  - name: password
    description: The password to log into the registry server.
    types:
    - uid: string
- name: AutoUserSpecification
  description: Specifies the parameters for the auto user that runs a task on the Batch service.
  kind: object
  properties:
  - name: scope
    description: "The scope for the auto user  \nThe default value is task."
    types:
    - uid: AutoUserScope
  - name: elevationLevel
    description: "The elevation level of the auto user.  \nThe default value is nonAdmin."
    types:
    - uid: ElevationLevel
- name: AutoUserScope
  description: The scope for the auto user
  kind: enum
  properties:
  - name: task
    description: Specifies that the service should create a new user for the task.
    types:
    - uid: string
  - name: pool
    description: Specifies that the task runs as the common auto user account which is created on every node in a pool.
    types:
    - uid: string
- name: ElevationLevel
  description: The elevation level of the user.
  kind: enum
  properties:
  - name: nonadmin
    description: The user is a standard user without elevated access.
    types:
    - uid: string
  - name: admin
    description: The user is a user with elevated access and operates with full Administrator permissions.
    types:
    - uid: string
examples:
- name: Pool update
  request:
    uri: POST https://batch.core.windows.net/pools/poolId/updateproperties?api-version=2018-08-01.7.0
    body: >-
      {
        "startTask": {
          "commandLine": "/bin/bash -c 'echo start task'"
        },
        "certificateReferences": [],
        "applicationPackageReferences": [],
        "metadata": []
      }
    headers:
    - name: client-request-id
      value: 00000000-0000-0000-0000-000000000000
  responses:
  - statusCode: "204"
    body: "\"\""
security: []
