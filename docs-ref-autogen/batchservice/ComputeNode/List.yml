### YamlMime:RESTOperation
uid: batch.core.windows.net.batchservice.computenode.list
name: List
service: Batch Service
groupName: Compute Node
apiVersion: 2018-08-01.7.0
summary: Lists the compute nodes in the specified pool.
consumes:
- application/json; odata=minimalmetadata
produces:
- application/json
paths:
- content: GET https://batch.core.windows.net/pools/{poolId}/nodes?api-version=2018-08-01.7.0
- content: GET https://batch.core.windows.net/pools/{poolId}/nodes?$filter={$filter}&$select={$select}&maxresults={maxresults}&timeout={timeout}&api-version=2018-08-01.7.0
  isOptional: true
uriParameters:
- name: poolId
  in: path
  isRequired: true
  description: The ID of the pool from which you want to list nodes.
  types:
  - uid: string
- name: $filter
  in: query
  description: An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-nodes-in-a-pool.
  types:
  - uid: string
- name: $select
  in: query
  description: An OData $select clause.
  types:
  - uid: string
- name: maxresults
  in: query
  description: The maximum number of items to return in the response. A maximum of 1000 nodes can be returned.
  types:
  - uid: integer
  format: int32
- name: timeout
  in: query
  description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
  types:
  - uid: integer
  format: int32
- name: api-version
  in: query
  isRequired: true
  description: Client API Version.
  types:
  - uid: string
responses:
- name: 200 OK
  headers:
  - name: client-request-id
    value: string
  - name: request-id
    value: string
  - name: ETag
    value: string
  - name: Last-Modified
    value: string
  description: A response containing the list of nodes.
  types:
  - uid: ComputeNodeListResult
- name: Other Status Codes
  description: The error from the Batch service.
  types:
  - uid: BatchError
requestHeader:
- name: client-request-id
  in: header
  description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
  types:
  - uid: string
  format: uuid
- name: return-client-request-id
  in: header
  description: Whether the server should return the client-request-id in the response.
  types:
  - uid: boolean
- name: ocp-date
  in: header
  description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
  types:
  - uid: string
  format: date-time-rfc1123
definitions:
- name: ComputeNodeListResult
  description: The result of listing the compute nodes in a pool.
  kind: object
  properties:
  - name: value
    description: The list of compute nodes.
    types:
    - uid: ComputeNode
      isArray: true
  - name: odata.nextLink
    description: The URL to get the next set of results.
    types:
    - uid: string
- name: BatchError
  description: An error response received from the Azure Batch service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: ErrorMessage
  - name: values
    description: A collection of key-value pairs containing additional details about the error.
    types:
    - uid: BatchErrorDetail
      isArray: true
- name: ComputeNode
  description: A compute node in the Batch service.
  kind: object
  properties:
  - name: id
    description: "The ID of the compute node.  \nEvery node that is added to a pool is assigned a unique ID. Whenever a node is removed from a pool, all of its local files are deleted, and the ID is reclaimed and could be reused for new nodes."
    types:
    - uid: string
  - name: url
    description: The URL of the compute node.
    types:
    - uid: string
  - name: state
    description: "The current state of the compute node.  \nThe low-priority node has been preempted. Tasks which were running on the node when it was pre-empted will be rescheduled when another node becomes available."
    types:
    - uid: ComputeNodeState
  - name: schedulingState
    description: Whether the compute node is available for task scheduling.
    types:
    - uid: SchedulingState
  - name: stateTransitionTime
    description: The time at which the compute node entered its current state.
    types:
    - uid: string
  - name: lastBootTime
    description: "The time at which the compute node was started.  \nThis property may not be present if the node state is unusable."
    types:
    - uid: string
  - name: allocationTime
    description: The time at which this compute node was allocated to the pool.
    types:
    - uid: string
  - name: ipAddress
    description: "The IP address that other compute nodes can use to communicate with this compute node.  \nEvery node that is added to a pool is assigned a unique IP address. Whenever a node is removed from a pool, all of its local files are deleted, and the IP address is reclaimed and could be reused for new nodes."
    types:
    - uid: string
  - name: affinityId
    description: "An identifier which can be passed when adding a task to request that the task be scheduled on this node.  \nNote that this is just a soft affinity. If the target node is busy or unavailable at the time the task is scheduled, then the task will be scheduled elsewhere."
    types:
    - uid: string
  - name: vmSize
    description: "The size of the virtual machine hosting the compute node.  \nFor information about available sizes of virtual machines in pools, see Choose a VM size for compute nodes in an Azure Batch pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes)."
    types:
    - uid: string
  - name: totalTasksRun
    description: The total number of job tasks completed on the compute node. This includes Job Manager tasks and normal tasks, but not Job Preparation, Job Release or Start tasks.
    types:
    - uid: integer
  - name: runningTasksCount
    description: The total number of currently running job tasks on the compute node. This includes Job Manager tasks and normal tasks, but not Job Preparation, Job Release or Start tasks.
    types:
    - uid: integer
  - name: totalTasksSucceeded
    description: The total number of job tasks which completed successfully (with exitCode 0) on the compute node. This includes Job Manager tasks and normal tasks, but not Job Preparation, Job Release or Start tasks.
    types:
    - uid: integer
  - name: recentTasks
    description: "A list of tasks whose state has recently changed.  \nThis property is present only if at least one task has run on this node since it was assigned to the pool."
    types:
    - uid: TaskInformation
      isArray: true
  - name: startTask
    description: "The task specified to run on the compute node as it joins the pool.  \nBatch will retry tasks when a recovery operation is triggered on a compute node. Examples of recovery operations include (but are not limited to) when an unhealthy compute node is rebooted or a compute node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all tasks should be idempotent. This means tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running tasks is to use some form of checkpointing."
    types:
    - uid: StartTask
  - name: startTaskInfo
    description: Runtime information about the execution of the start task on the compute node.
    types:
    - uid: StartTaskInformation
  - name: certificateReferences
    description: "The list of certificates installed on the compute node.  \nFor Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory."
    types:
    - uid: CertificateReference
      isArray: true
  - name: errors
    description: The list of errors that are currently being encountered by the compute node.
    types:
    - uid: ComputeNodeError
      isArray: true
  - name: isDedicated
    description: Whether this compute node is a dedicated node. If false, the node is a low-priority node.
    types:
    - uid: boolean
  - name: endpointConfiguration
    description: The endpoint configuration for the compute node.
    types:
    - uid: ComputeNodeEndpointConfiguration
  - name: nodeAgentInfo
    description: "Information about the node agent version and the time the node upgraded to a new version.  \nThe Batch node agent is a program that runs on each node in the pool and provides Batch capability on the compute node."
    types:
    - uid: NodeAgentInformation
- name: ErrorMessage
  description: An error message received in an Azure Batch error response.
  kind: object
  properties:
  - name: lang
    description: The language code of the error message
    types:
    - uid: string
  - name: value
    description: The text of the message.
    types:
    - uid: string
- name: BatchErrorDetail
  description: An item of additional information included in an Azure Batch error response.
  kind: object
  properties:
  - name: key
    description: An identifier specifying the meaning of the Value property.
    types:
    - uid: string
  - name: value
    description: The additional information included with the error response.
    types:
    - uid: string
- name: ComputeNodeState
  description: The current state of the compute node.
  kind: enum
  properties:
  - name: idle
    description: The node is not currently running a task.
    types:
    - uid: string
  - name: rebooting
    description: The node is rebooting.
    types:
    - uid: string
  - name: reimaging
    description: The node is reimaging.
    types:
    - uid: string
  - name: running
    description: The node is running one or more tasks (other than a start task).
    types:
    - uid: string
  - name: unusable
    description: The node cannot be used for task execution due to errors.
    types:
    - uid: string
  - name: creating
    description: The Batch service has obtained the underlying virtual machine from Azure Compute, but it has not yet started to join the pool.
    types:
    - uid: string
  - name: starting
    description: The Batch service is starting on the underlying virtual machine.
    types:
    - uid: string
  - name: waitingforstarttask
    description: The start task has started running on the compute node, but waitForSuccess is set and the start task has not yet completed.
    types:
    - uid: string
  - name: starttaskfailed
    description: The start task has failed on the compute node (and exhausted all retries), and waitForSuccess is set. The node is not usable for running tasks.
    types:
    - uid: string
  - name: unknown
    description: The Batch service has lost contact with the node, and does not know its true state.
    types:
    - uid: string
  - name: leavingpool
    description: The node is leaving the pool, either because the user explicitly removed it or because the pool is resizing or autoscaling down.
    types:
    - uid: string
  - name: offline
    description: The node is not currently running a task, and scheduling of new tasks to the node is disabled.
    types:
    - uid: string
  - name: preempted
    description: The low-priority node has been preempted. Tasks which were running on the node when it was pre-empted will be rescheduled when another node becomes available.
    types:
    - uid: string
- name: SchedulingState
  description: Whether the compute node is available for task scheduling.
  kind: enum
  properties:
  - name: enabled
    description: Tasks can be scheduled on the node.
    types:
    - uid: string
  - name: disabled
    description: No new tasks will be scheduled on the node. Tasks already running on the node may still run to completion. All nodes start with scheduling enabled.
    types:
    - uid: string
- name: TaskInformation
  description: Information about a task running on a compute node.
  kind: object
  properties:
  - name: taskUrl
    description: The URL of the task.
    types:
    - uid: string
  - name: jobId
    description: The ID of the job to which the task belongs.
    types:
    - uid: string
  - name: taskId
    description: The ID of the task.
    types:
    - uid: string
  - name: subtaskId
    description: The ID of the subtask if the task is a multi-instance task.
    types:
    - uid: integer
  - name: taskState
    description: The current state of the task.
    types:
    - uid: TaskState
  - name: executionInfo
    description: Information about the execution of the task.
    types:
    - uid: TaskExecutionInformation
- name: StartTask
  description: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.
  kind: object
  properties:
  - name: commandLine
    description: "The command line of the start task.  \nThe command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
    types:
    - uid: string
  - name: containerSettings
    description: "The settings for the container under which the start task runs.  \nWhen this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container."
    types:
    - uid: TaskContainerSettings
  - name: resourceFiles
    description: "A list of files that the Batch service will download to the compute node before running the command line.  There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.  \nFiles listed under this element are located in the task's working directory."
    types:
    - uid: ResourceFile
      isArray: true
  - name: environmentSettings
    description: A list of environment variable settings for the start task.
    types:
    - uid: EnvironmentSetting
      isArray: true
  - name: userIdentity
    description: "The user identity under which the start task runs.  \nIf omitted, the task runs as a non-administrative user unique to the task."
    types:
    - uid: UserIdentity
  - name: maxTaskRetryCount
    description: "The maximum number of times the task may be retried.  \nThe Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit."
    types:
    - uid: integer
  - name: waitForSuccess
    description: "Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.  \nIf true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount). If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it. This condition can be detected via the node state and failure info details. If false, the Batch service will not wait for the start task to complete. In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node. The default is false."
    types:
    - uid: boolean
- name: StartTaskInformation
  description: Information about a start task running on a compute node.
  kind: object
  properties:
  - name: state
    description: The state of the start task on the compute node.
    types:
    - uid: StartTaskState
  - name: startTime
    description: "The time at which the start task started running.  \nThis value is reset every time the task is restarted or retried (that is, this is the most recent time at which the start task started running)."
    types:
    - uid: string
  - name: endTime
    description: "The time at which the start task stopped running.  \nThis is the end time of the most recent run of the start task, if that run has completed (even if that run failed and a retry is pending). This element is not present if the start task is currently running."
    types:
    - uid: string
  - name: exitCode
    description: "The exit code of the program specified on the start task command line.  \nThis property is set only if the start task is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the start task (due to timeout, or user termination via the API) you may see an operating system-defined exit code."
    types:
    - uid: integer
  - name: containerInfo
    description: "Information about the container under which the task is executing.  \nThis property is set only if the task runs in a container context."
    types:
    - uid: TaskContainerExecutionInformation
  - name: failureInfo
    description: "Information describing the task failure, if any.  \nThis property is set only if the task is in the completed state and encountered a failure."
    types:
    - uid: TaskFailureInformation
  - name: retryCount
    description: "The number of times the task has been retried by the Batch service.  \nTask application failures (non-zero exit code) are retried, pre-processing errors (the task could not be run) and file upload errors are not retried. The Batch service will retry the task up to the limit specified by the constraints."
    types:
    - uid: integer
  - name: lastRetryTime
    description: "The most recent time at which a retry of the task started running.  \nThis element is present only if the task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the task has been restarted for reasons other than retry; for example, if the compute node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not."
    types:
    - uid: string
  - name: result
    description: "The result of the task execution.  \nIf the value is 'failed', then the details of the failure can be found in the failureInfo property."
    types:
    - uid: TaskExecutionResult
- name: CertificateReference
  description: A reference to a certificate to be installed on compute nodes in a pool.
  kind: object
  properties:
  - name: thumbprint
    description: The thumbprint of the certificate.
    types:
    - uid: string
  - name: thumbprintAlgorithm
    description: The algorithm with which the thumbprint is associated. This must be sha1.
    types:
    - uid: string
  - name: storeLocation
    description: "The location of the certificate store on the compute node into which to install the certificate.  \nThe default value is currentuser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory."
    types:
    - uid: CertificateStoreLocation
  - name: storeName
    description: "The name of the certificate store on the compute node into which to install the certificate.  \nThis property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My."
    types:
    - uid: string
  - name: visibility
    description: "Which user accounts on the compute node should have access to the private data of the certificate.  \nYou can specify more than one visibility in this collection. The default is all accounts."
    types:
    - uid: string
      isArray: true
- name: ComputeNodeError
  description: An error encountered by a compute node.
  kind: object
  properties:
  - name: code
    description: An identifier for the compute node error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the compute node error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: errorDetails
    description: The list of additional error details related to the compute node error.
    types:
    - uid: NameValuePair
      isArray: true
- name: ComputeNodeEndpointConfiguration
  description: The endpoint configuration for the compute node.
  kind: object
  properties:
  - name: inboundEndpoints
    description: The list of inbound endpoints that are accessible on the compute node.
    types:
    - uid: InboundEndpoint
      isArray: true
- name: NodeAgentInformation
  description: Information about the node agent.
  kind: object
  properties:
  - name: version
    description: "The version of the Batch node agent running on the compute node.  \nThis version number can be checked against the node agent release notes located at https://github.com/Azure/Batch/blob/master/changelogs/nodeagent/CHANGELOG.md."
    types:
    - uid: string
  - name: lastUpdateTime
    description: "The time when the node agent was updated on the compute node.  \nThis is the most recent time that the node agent was updated to a new version."
    types:
    - uid: string
- name: TaskState
  description: The state of the task.
  kind: enum
  properties:
  - name: active
    description: The task is queued and able to run, but is not currently assigned to a compute node. A task enters this state when it is created, when it is enabled after being disabled, or when it is awaiting a retry after a failed run.
    types:
    - uid: string
  - name: preparing
    description: The task has been assigned to a compute node, but is waiting for a required Job Preparation task to complete on the node. If the Job Preparation task succeeds, the task will move to running. If the Job Preparation task fails, the task will return to active and will be eligible to be assigned to a different node.
    types:
    - uid: string
  - name: running
    description: The task is running on a compute node. This includes task-level preparation such as downloading resource files or deploying application packages specified on the task - it does not necessarily mean that the task command line has started executing.
    types:
    - uid: string
  - name: completed
    description: The task is no longer eligible to run, usually because the task has finished successfully, or the task has finished unsuccessfully and has exhausted its retry limit. A task is also marked as completed if an error occurred launching the task, or when the task has been terminated.
    types:
    - uid: string
- name: TaskExecutionInformation
  description: Information about the execution of a task.
  kind: object
  properties:
  - name: startTime
    description: "The time at which the task started running.  \n'Running' corresponds to the running state, so if the task specifies resource files or application packages, then the start time reflects the time at which the task started downloading or deploying these. If the task has been restarted or retried, this is the most recent time at which the task started running. This property is present only for tasks that are in the running or completed state."
    types:
    - uid: string
  - name: endTime
    description: "The time at which the task completed.  \nThis property is set only if the task is in the Completed state."
    types:
    - uid: string
  - name: exitCode
    description: "The exit code of the program specified on the task command line.  \nThis property is set only if the task is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the task (due to timeout, or user termination via the API) you may see an operating system-defined exit code."
    types:
    - uid: integer
  - name: containerInfo
    description: "Information about the container under which the task is executing.  \nThis property is set only if the task runs in a container context."
    types:
    - uid: TaskContainerExecutionInformation
  - name: failureInfo
    description: "Information describing the task failure, if any.  \nThis property is set only if the task is in the completed state and encountered a failure."
    types:
    - uid: TaskFailureInformation
  - name: retryCount
    description: "The number of times the task has been retried by the Batch service.  \nTask application failures (non-zero exit code) are retried, pre-processing errors (the task could not be run) and file upload errors are not retried. The Batch service will retry the task up to the limit specified by the constraints."
    types:
    - uid: integer
  - name: lastRetryTime
    description: "The most recent time at which a retry of the task started running.  \nThis element is present only if the task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the task has been restarted for reasons other than retry; for example, if the compute node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not."
    types:
    - uid: string
  - name: requeueCount
    description: "The number of times the task has been requeued by the Batch service as the result of a user request.  \nWhen the user removes nodes from a pool (by resizing/shrinking the pool) or when the job is being disabled, the user can specify that running tasks on the nodes be requeued for execution. This count tracks how many times the task has been requeued for these reasons."
    types:
    - uid: integer
  - name: lastRequeueTime
    description: "The most recent time at which the task has been requeued by the Batch service as the result of a user request.  \nThis property is set only if the requeueCount is nonzero."
    types:
    - uid: string
  - name: result
    description: "The result of the task execution.  \nIf the value is 'failed', then the details of the failure can be found in the failureInfo property."
    types:
    - uid: TaskExecutionResult
- name: TaskContainerSettings
  description: The container settings for a task.
  kind: object
  properties:
  - name: containerRunOptions
    description: "Additional options to the container create command.  \nThese additional options are supplied as arguments to the \"docker create\" command, in addition to those controlled by the Batch Service."
    types:
    - uid: string
  - name: imageName
    description: "The image to use to create the container in which the task will run.  \nThis is the full image reference, as would be specified to \"docker pull\". If no tag is provided as part of the image name, the tag \":latest\" is used as a default."
    types:
    - uid: string
  - name: registry
    description: "The private registry which contains the container image.  \nThis setting can be omitted if was already provided at pool creation."
    types:
    - uid: ContainerRegistry
- name: ResourceFile
  description: A file to be downloaded from Azure blob storage to a compute node.
  kind: object
  properties:
  - name: blobSource
    description: "The URL of the file within Azure Blob Storage.  \nThis URL must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access."
    types:
    - uid: string
  - name: filePath
    description: The location on the compute node to which to download the file, relative to the task's working directory.
    types:
    - uid: string
  - name: fileMode
    description: "The file permission mode attribute in octal format.  \nThis property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file."
    types:
    - uid: string
- name: EnvironmentSetting
  description: An environment variable to be set on a task process.
  kind: object
  properties:
  - name: name
    description: The name of the environment variable.
    types:
    - uid: string
  - name: value
    description: The value of the environment variable.
    types:
    - uid: string
- name: UserIdentity
  description: The definition of the user identity under which the task is run.
  kind: object
  properties:
  - name: username
    description: "The name of the user identity under which the task is run.  \nThe userName and autoUser properties are mutually exclusive; you must specify one but not both."
    types:
    - uid: string
  - name: autoUser
    description: "The auto user under which the task is run.  \nThe userName and autoUser properties are mutually exclusive; you must specify one but not both."
    types:
    - uid: AutoUserSpecification
- name: StartTaskState
  description: The state of the start task on the compute node.
  kind: enum
  properties:
  - name: running
    description: The start task is currently running.
    types:
    - uid: string
  - name: completed
    description: The start task has exited with exit code 0, or the start task has failed and the retry limit has reached, or the start task process did not run due to task preparation errors (such as resource file download failures).
    types:
    - uid: string
- name: TaskContainerExecutionInformation
  description: Contains information about the container which a task is executing.
  kind: object
  properties:
  - name: containerId
    description: The ID of the container.
    types:
    - uid: string
  - name: state
    description: "The state of the container.  \nThis is the state of the container according to the Docker service. It is equivalent to the status field returned by \"docker inspect\"."
    types:
    - uid: string
  - name: error
    description: "Detailed error information about the container.  \nThis is the detailed error string from the Docker service, if available. It is equivalent to the error field returned by \"docker inspect\"."
    types:
    - uid: string
- name: TaskFailureInformation
  description: Information about a task failure.
  kind: object
  properties:
  - name: category
    description: The category of the task error.
    types:
    - uid: ErrorCategory
  - name: code
    description: An identifier for the task error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the task error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: details
    description: A list of additional details related to the error.
    types:
    - uid: NameValuePair
      isArray: true
- name: TaskExecutionResult
  description: The result of task execution.
  kind: enum
  properties:
  - name: success
    description: The task ran successfully.
    types:
    - uid: string
  - name: failure
    description: There was an error during processing of the task. The failure may have occurred before the task process was launched, while the task process was executing, or after the task process exited.
    types:
    - uid: string
- name: CertificateStoreLocation
  description: The location of the certificate store on the compute node into which to install the certificate.
  kind: enum
  properties:
  - name: currentuser
    description: Certificates should be installed to the CurrentUser certificate store.
    types:
    - uid: string
  - name: localmachine
    description: Certificates should be installed to the LocalMachine certificate store.
    types:
    - uid: string
- name: NameValuePair
  description: Represents a name-value pair.
  kind: object
  properties:
  - name: name
    description: The name in the name-value pair.
    types:
    - uid: string
  - name: value
    description: The value in the name-value pair.
    types:
    - uid: string
- name: InboundEndpoint
  description: An inbound endpoint on a compute node.
  kind: object
  properties:
  - name: name
    description: The name of the endpoint.
    types:
    - uid: string
  - name: protocol
    description: The protocol of the endpoint.
    types:
    - uid: InboundEndpointProtocol
  - name: publicIPAddress
    description: The public IP address of the compute node.
    types:
    - uid: string
  - name: publicFQDN
    description: The public fully qualified domain name for the compute node.
    types:
    - uid: string
  - name: frontendPort
    description: The public port number of the endpoint.
    types:
    - uid: integer
  - name: backendPort
    description: The backend port number of the endpoint.
    types:
    - uid: integer
- name: ContainerRegistry
  description: A private container registry.
  kind: object
  properties:
  - name: registryServer
    description: "The registry URL.  \nIf omitted, the default is \"docker.io\"."
    types:
    - uid: string
  - name: username
    description: The user name to log into the registry server.
    types:
    - uid: string
  - name: password
    description: The password to log into the registry server.
    types:
    - uid: string
- name: AutoUserSpecification
  description: Specifies the parameters for the auto user that runs a task on the Batch service.
  kind: object
  properties:
  - name: scope
    description: "The scope for the auto user  \nThe default value is task."
    types:
    - uid: AutoUserScope
  - name: elevationLevel
    description: "The elevation level of the auto user.  \nThe default value is nonAdmin."
    types:
    - uid: ElevationLevel
- name: ErrorCategory
  description: The category of the error.
  kind: enum
  properties:
  - name: usererror
    description: The error is due to a user issue, such as misconfiguration.
    types:
    - uid: string
  - name: servererror
    description: The error is due to an internal server issue.
    types:
    - uid: string
- name: InboundEndpointProtocol
  description: The protocol of the endpoint.
  kind: enum
  properties:
  - name: tcp
    description: Use TCP for the endpoint.
    types:
    - uid: string
  - name: udp
    description: Use UDP for the endpoint.
    types:
    - uid: string
- name: AutoUserScope
  description: The scope for the auto user
  kind: enum
  properties:
  - name: task
    description: Specifies that the service should create a new user for the task.
    types:
    - uid: string
  - name: pool
    description: Specifies that the task runs as the common auto user account which is created on every node in a pool.
    types:
    - uid: string
- name: ElevationLevel
  description: The elevation level of the user.
  kind: enum
  properties:
  - name: nonadmin
    description: The user is a standard user without elevated access.
    types:
    - uid: string
  - name: admin
    description: The user is a user with elevated access and operates with full Administrator permissions.
    types:
    - uid: string
examples:
- name: Node list
  request:
    uri: GET https://batch.core.windows.net/pools/poolId/nodes?api-version=2018-08-01.7.0
    headers:
    - name: client-request-id
      value: 00000000-0000-0000-0000-000000000000
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "tvm-1695681911_1-20161122t193202z",
            "url": "https://account.region.batch.azure.com/pools/poolId/nodes/tvm-1695681911_1-20161122t193202z",
            "state": "idle",
            "schedulingState": "enabled",
            "stateTransitionTime": "2016-11-22T22:22:27.2236818Z",
            "lastBootTime": "2016-11-22T22:22:24.4634125Z",
            "allocationTime": "2016-11-22T19:32:02.8155319Z",
            "ipAddress": "1.1.1.1",
            "affinityId": "TVM:tvm-1695681911_1-20161122t193202z",
            "vmSize": "small",
            "totalTasksRun": 0,
            "totalTasksSucceeded": 0,
            "runningTasksCount": 0,
            "isDedicated": true,
            "startTask": {
              "commandLine": "cmd /c echo hello",
              "userIdentity": {
                "autoUser": {
                  "scope": "task",
                  "elevationLevel": "nonadmin"
                }
              },
              "maxTaskRetryCount": 0,
              "waitForSuccess": false
            },
            "startTaskInfo": {
              "state": "completed",
              "startTime": "2016-11-22T22:22:27.2236818Z",
              "endTime": "2016-11-22T22:22:27.567189Z",
              "exitCode": 0,
              "retryCount": 0
            },
            "nodeAgentInfo": {
              "version": "1.2.0.0",
              "lastUpdateTime": "2016-11-22T22:22:24.4634125Z"
            }
          },
          {
            "id": "tvm-1695681911_2-20161122t193202z",
            "url": "https://account.region.batch.azure.com/pools/poolId/nodes/tvm-1695681911_2-20161122t193202z",
            "state": "idle",
            "schedulingState": "enabled",
            "stateTransitionTime": "2016-11-22T19:37:31.4285526Z",
            "lastBootTime": "2016-11-22T19:37:28.623369Z",
            "allocationTime": "2016-11-22T19:32:02.8155319Z",
            "ipAddress": "1.1.1.1",
            "affinityId": "TVM:tvm-1695681911_2-20161122t193202z",
            "vmSize": "small",
            "totalTasksRun": 0,
            "totalTasksSucceeded": 0,
            "runningTasksCount": 0,
            "isDedicated": true,
            "startTask": {
              "commandLine": "cmd /c echo hello",
              "userIdentity": {
                "autoUser": {
                  "scope": "task",
                  "elevationLevel": "nonadmin"
                }
              },
              "maxTaskRetryCount": 0,
              "waitForSuccess": false
            },
            "startTaskInfo": {
              "state": "completed",
              "startTime": "2016-11-22T19:37:31.4285526Z",
              "endTime": "2016-11-22T19:37:31.838028Z",
              "exitCode": 0,
              "retryCount": 0
            },
            "nodeAgentInfo": {
              "version": "1.2.0.0",
              "lastUpdateTime": "2016-11-22T22:22:24.4634125Z"
            }
          },
          {
            "id": "tvm-1695681911_3-20161122t193202z",
            "url": "https://account.region.batch.azure.com/pools/poolId/nodes/tvm-1695681911_3-20161122t193202z",
            "state": "idle",
            "schedulingState": "enabled",
            "stateTransitionTime": "2016-11-22T19:36:51.0013378Z",
            "lastBootTime": "2016-11-22T19:36:48.21721Z",
            "allocationTime": "2016-11-22T19:32:02.8155319Z",
            "ipAddress": "1.1.1.1",
            "affinityId": "TVM:tvm-1695681911_3-20161122t193202z",
            "vmSize": "small",
            "totalTasksRun": 0,
            "totalTasksSucceeded": 0,
            "runningTasksCount": 0,
            "isDedicated": true,
            "startTask": {
              "commandLine": "cmd /c echo hello",
              "userIdentity": {
                "autoUser": {
                  "scope": "task",
                  "elevationLevel": "nonadmin"
                }
              },
              "maxTaskRetryCount": 0,
              "waitForSuccess": false
            },
            "startTaskInfo": {
              "state": "completed",
              "startTime": "2016-11-22T19:36:51.0013378Z",
              "endTime": "2016-11-22T19:36:51.2363447Z",
              "exitCode": 0,
              "retryCount": 0
            },
            "nodeAgentInfo": {
              "version": "1.2.0.0",
              "lastUpdateTime": "2016-11-22T22:22:24.4634125Z"
            }
          }
        ]
      }
security: []
