### YamlMime:RESTOperationGroup
uid: batchservice.job
name: Job
apiVersion: 2021-06-01.14.0
service: Batch Service
metadata:
  description: Learn more about [Batch Service Job Operations]. How to [Add,Delete,List,List From Job Schedule,List Preparation And Release Task Status,Patch,Terminate,Update,Disable,Enable,Get,Get All Lifetime Statistics,Get Task Counts].
operations:
- uid: batchservice.job.add
  summary: "Adds a Job to the specified Account.  \nThe Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
- uid: batchservice.job.delete
  summary: "Deletes a Job.  \nDeleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents.  When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted."
- uid: batchservice.job.disable
  summary: "Disables the specified Job, preventing new Tasks from running.  \nThe Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409."
- uid: batchservice.job.enable
  summary: "Enables the specified Job, allowing new Tasks to run.  \nWhen you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run."
- uid: batchservice.job.get
  summary: Gets information about the specified Job.
- uid: batchservice.job.getalllifetimestatistics
  summary: "Gets lifetime summary statistics for all of the Jobs in the specified Account.  \nStatistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
- uid: batchservice.job.gettaskcounts
  summary: "Gets the Task counts for the specified Job.  \nTask counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running. Note that the numbers returned may not always be up to date. If you need exact task counts, use a list query."
- uid: batchservice.job.list
  summary: Lists all of the Jobs in the specified Account.
- uid: batchservice.job.listfromjobschedule
  summary: Lists the Jobs that have been created under the specified Job Schedule.
- uid: batchservice.job.listpreparationandreleasetaskstatus
  summary: "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run.  \nThis API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified."
- uid: batchservice.job.patch
  summary: "Updates the properties of the specified Job.  \nThis replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints."
- uid: batchservice.job.terminate
  summary: "Terminates the specified Job, marking it as completed.  \nWhen a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled."
- uid: batchservice.job.update
  summary: "Updates the properties of the specified Job.  \nThis fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints."
