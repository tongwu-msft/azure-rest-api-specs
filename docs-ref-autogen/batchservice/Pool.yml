### YamlMime:RESTOperationGroup
uid: batchservice.pool
name: Pool
apiVersion: 2020-09-01.12.0
service: Batch Service
metadata:
  description: Learn more about [Batch Service Pool Operations]. How to [Evaluate Auto Scale,Stop Resize,Update Properties,Get,Remove Nodes,Enable Auto Scale,Resize,Disable Auto Scale,List Usage Metrics,Delete,Exists,Add,List,Patch,Get All Lifetime Statistics].
operations:
- uid: batchservice.pool.add
  summary: "Adds a Pool to the specified Account.  \nWhen naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
- uid: batchservice.pool.delete
  summary: "Deletes a Pool from the specified Account.  \nWhen you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted."
- uid: batchservice.pool.disableautoscale
  summary: Disables automatic scaling for a Pool.
- uid: batchservice.pool.enableautoscale
  summary: "Enables automatic scaling for a Pool.  \nYou cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds."
- uid: batchservice.pool.evaluateautoscale
  summary: "Gets the result of evaluating an automatic scaling formula on the Pool.  \nThis API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula."
- uid: batchservice.pool.exists
  summary: Gets basic properties of a Pool.
- uid: batchservice.pool.get
  summary: Gets information about the specified Pool.
- uid: batchservice.pool.getalllifetimestatistics
  summary: "Gets lifetime summary statistics for all of the Pools in the specified Account.  \nStatistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
- uid: batchservice.pool.list
  summary: Lists all of the Pools in the specified Account.
- uid: batchservice.pool.listusagemetrics
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account.  \nIf you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
- uid: batchservice.pool.patch
  summary: "Updates the properties of the specified Pool.  \nThis only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask."
- uid: batchservice.pool.removenodes
  summary: "Removes Compute Nodes from the specified Pool.  \nThis operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing. Each request may remove up to 100 nodes."
- uid: batchservice.pool.resize
  summary: "Changes the number of Compute Nodes that are assigned to a Pool.  \nYou can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead."
- uid: batchservice.pool.stopresize
  summary: "Stops an ongoing resize operation on the Pool.  \nThis does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created."
- uid: batchservice.pool.updateproperties
  summary: "Updates the properties of the specified Pool.  \nThis fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask."
