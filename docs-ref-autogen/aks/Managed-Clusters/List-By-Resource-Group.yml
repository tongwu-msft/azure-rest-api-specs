### YamlMime:RESTOperation
uid: management.azure.com.aks.managedclusters.listbyresourcegroup
name: List By Resource Group
service: AKS
groupName: Managed Clusters
apiVersion: 2022-01-01
summary: Lists managed clusters in the specified subscription and resource group.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters?api-version=2022-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: ManagedClusterListResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: ManagedClusterListResult
  description: The response from the List Managed Clusters operation.
  kind: object
  properties:
  - name: value
    description: The list of managed clusters.
    types:
    - uid: ManagedCluster
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: The URL to get the next set of managed cluster results.
    types:
    - uid: string
- name: CloudError
  description: An error response from the Container service.
  kind: object
  properties:
  - name: error
    description: Details about the error.
    types:
    - uid: CloudErrorBody
- name: ManagedCluster
  description: Managed cluster.
  kind: object
  properties:
  - name: sku
    description: The managed cluster SKU.
    types:
    - uid: ManagedClusterSKU
  - name: extendedLocation
    description: The extended location of the Virtual Machine.
    types:
    - uid: ExtendedLocation
  - name: identity
    description: The identity of the managed cluster, if configured.
    types:
    - uid: ManagedClusterIdentity
  - name: properties.provisioningState
    isReadyOnly: true
    description: The current provisioning state.
    types:
    - uid: string
  - name: properties.powerState
    isReadyOnly: true
    description: The Power State of the cluster.
    types:
    - uid: PowerState
  - name: properties.maxAgentPools
    isReadyOnly: true
    description: The max number of agent pools for the managed cluster.
    types:
    - uid: integer
  - name: properties.kubernetesVersion
    description: "The version of Kubernetes the Managed Cluster is running.  \nWhen you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details."
    types:
    - uid: string
  - name: properties.dnsPrefix
    description: "The DNS prefix of the Managed Cluster.  \nThis cannot be updated once the Managed Cluster has been created."
    types:
    - uid: string
  - name: properties.fqdnSubdomain
    description: "The FQDN subdomain of the private cluster with custom private dns zone.  \nThis cannot be updated once the Managed Cluster has been created."
    types:
    - uid: string
  - name: properties.fqdn
    isReadyOnly: true
    description: The FQDN of the master pool.
    types:
    - uid: string
  - name: properties.privateFQDN
    isReadyOnly: true
    description: The FQDN of private cluster.
    types:
    - uid: string
  - name: properties.azurePortalFQDN
    isReadyOnly: true
    description: "The special FQDN used by the Azure Portal to access the Managed Cluster. This FQDN is for use only by the Azure Portal and should not be used by other clients.  \nThe Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly."
    types:
    - uid: string
  - name: properties.agentPoolProfiles
    description: The agent pool properties.
    types:
    - uid: ManagedClusterAgentPoolProfile
      isArray: true
  - name: properties.linuxProfile
    description: The profile for Linux VMs in the Managed Cluster.
    types:
    - uid: ContainerServiceLinuxProfile
  - name: properties.windowsProfile
    description: The profile for Windows VMs in the Managed Cluster.
    types:
    - uid: ManagedClusterWindowsProfile
  - name: properties.servicePrincipalProfile
    description: Information about a service principal identity for the cluster to use for manipulating Azure APIs.
    types:
    - uid: ManagedClusterServicePrincipalProfile
  - name: properties.addonProfiles
    description: The profile of managed cluster add-on.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: ManagedClusterAddonProfile
  - name: properties.podIdentityProfile
    description: "The pod identity profile of the Managed Cluster.  \nSee [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration."
    types:
    - uid: ManagedClusterPodIdentityProfile
  - name: properties.nodeResourceGroup
    description: The name of the resource group containing agent pool nodes.
    types:
    - uid: string
  - name: properties.enableRBAC
    description: Whether to enable Kubernetes Role-Based Access Control.
    types:
    - uid: boolean
  - name: properties.enablePodSecurityPolicy
    description: (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.
    types:
    - uid: boolean
  - name: properties.networkProfile
    description: The network configuration profile.
    types:
    - uid: ContainerServiceNetworkProfile
  - name: properties.aadProfile
    description: "AADProfile specifies attributes for Azure Active Directory integration.  \nThe Azure Active Directory configuration."
    types:
    - uid: ManagedClusterAADProfile
  - name: properties.autoUpgradeProfile
    description: The auto upgrade configuration.
    types:
    - uid: ManagedClusterAutoUpgradeProfile
  - name: properties.autoScalerProfile
    description: Parameters to be applied to the cluster-autoscaler when enabled
    types:
    - uid: AutoScalerProfile
  - name: properties.apiServerAccessProfile
    description: The access profile for managed cluster API server.
    types:
    - uid: ManagedClusterAPIServerAccessProfile
  - name: properties.diskEncryptionSetID
    description: "The Resource ID of the disk encryption set to use for enabling encryption at rest.  \nThis is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'"
    types:
    - uid: string
  - name: properties.identityProfile
    description: Identities associated with the cluster.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: UserAssignedIdentity
  - name: properties.privateLinkResources
    description: Private link resources associated with the cluster.
    types:
    - uid: PrivateLinkResource
      isArray: true
  - name: properties.disableLocalAccounts
    description: "If local accounts should be disabled on the Managed Cluster.  \nIf set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview)."
    types:
    - uid: boolean
  - name: properties.httpProxyConfig
    description: Configurations for provisioning the cluster with HTTP proxy servers.
    types:
    - uid: ManagedClusterHTTPProxyConfig
  - name: properties.securityProfile
    description: Security profile for the managed cluster.
    types:
    - uid: ManagedClusterSecurityProfile
  - name: properties.publicNetworkAccess
    description: "PublicNetworkAccess of the managedCluster  \nAllow or deny public network access for AKS"
    types:
    - uid: PublicNetworkAccess
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudErrorBody
  description: An error response from the Container service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: ManagedClusterSKU
  description: The SKU of a Managed Cluster.
  kind: object
  properties:
  - name: name
    description: The name of a managed cluster SKU.
    types:
    - uid: ManagedClusterSKUName
  - name: tier
    description: "The tier of a managed cluster SKU.  \nIf not specified, the default is 'Free'. See [uptime SLA](https://docs.microsoft.com/azure/aks/uptime-sla) for more details."
    types:
    - uid: ManagedClusterSKUTier
- name: ExtendedLocation
  description: The complex type of the extended location.
  kind: object
  properties:
  - name: name
    description: The name of the extended location.
    types:
    - uid: string
  - name: type
    description: The type of the extended location.
    types:
    - uid: ExtendedLocationTypes
- name: ManagedClusterIdentity
  description: Identity for the managed cluster.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal id of the system assigned identity which is used by master components.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant id of the system assigned identity which is used by master components.
    types:
    - uid: string
  - name: type
    description: "The type of identity used for the managed cluster.  \nFor more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity)."
    types:
    - uid: ResourceIdentityType
  - name: userAssignedIdentities
    description: "The user identity associated with the managed cluster. This identity will be used in control plane. Only one user assigned identity is allowed.  \nThe keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
    types:
    - uid: UserAssignedIdentities
- name: PowerState
  description: Describes the Power State of the cluster
  kind: object
  properties:
  - name: code
    description: Tells whether the cluster is Running or Stopped
    types:
    - uid: code
- name: ManagedClusterAgentPoolProfile
  description: Profile for the container service agent pool.
  kind: object
  properties:
  - name: count
    description: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
    types:
    - uid: integer
  - name: vmSize
    description: "The size of the agent pool VMs.  \nVM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions"
    types:
    - uid: string
  - name: osDiskSizeGB
    description: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
    types:
    - uid: integer
  - name: osDiskType
    description: "The OS disk type to be used for machines in the agent pool.  \nThe default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os)."
    types:
    - uid: OSDiskType
  - name: kubeletDiskType
    description: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
    types:
    - uid: KubeletDiskType
  - name: workloadRuntime
    description: Determines the type of workload a node can run.
    types:
    - uid: WorkloadRuntime
  - name: vnetSubnetID
    description: "The ID of the subnet which agent pool nodes and optionally pods will join on startup.  \nIf this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}"
    types:
    - uid: string
  - name: podSubnetID
    description: "The ID of the subnet which pods will join when launched.  \nIf omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}"
    types:
    - uid: string
  - name: maxPods
    description: The maximum number of pods that can run on a node.
    types:
    - uid: integer
  - name: osType
    description: The operating system type. The default is Linux.
    types:
    - uid: OSType
  - name: osSKU
    description: Specifies an OS SKU. This value must not be specified if OSType is Windows.
    types:
    - uid: OSSKU
  - name: maxCount
    description: The maximum number of nodes for auto-scaling
    types:
    - uid: integer
  - name: minCount
    description: The minimum number of nodes for auto-scaling
    types:
    - uid: integer
  - name: enableAutoScaling
    description: Whether to enable auto-scaler
    types:
    - uid: boolean
  - name: scaleDownMode
    description: "The scale down mode to use when scaling the Agent Pool.  \nThis also effects the cluster autoscaler behavior. If not specified, it defaults to Delete."
    types:
    - uid: ScaleDownMode
  - name: type
    description: The type of Agent Pool.
    types:
    - uid: AgentPoolType
  - name: mode
    description: "The mode of an agent pool.  \nA cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools"
    types:
    - uid: AgentPoolMode
  - name: orchestratorVersion
    description: "The version of Kubernetes running on the Agent Pool.  \nAs a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool)."
    types:
    - uid: string
  - name: nodeImageVersion
    isReadyOnly: true
    description: The version of node image
    types:
    - uid: string
  - name: upgradeSettings
    description: Settings for upgrading the agentpool
    types:
    - uid: AgentPoolUpgradeSettings
  - name: provisioningState
    isReadyOnly: true
    description: The current deployment or provisioning state.
    types:
    - uid: string
  - name: powerState
    description: "Whether the Agent Pool is running or stopped.  \nWhen an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded"
    types:
    - uid: PowerState
  - name: availabilityZones
    description: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
    types:
    - uid: string
      isArray: true
  - name: enableNodePublicIP
    description: "Whether each node is allocated its own public IP.  \nSome scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false."
    types:
    - uid: boolean
  - name: nodePublicIPPrefixID
    description: "The public IP prefix ID which VM nodes should use IPs from.  \nThis is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}"
    types:
    - uid: string
  - name: scaleSetPriority
    description: The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
    types:
    - uid: ScaleSetPriority
  - name: scaleSetEvictionPolicy
    description: "The Virtual Machine Scale Set eviction policy to use.  \nThis cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'."
    types:
    - uid: ScaleSetEvictionPolicy
  - name: spotMaxPrice
    description: "The max price (in US Dollars) you are willing to pay for spot instances. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.  \nPossible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)"
    types:
    - uid: number
  - name: tags
    description: The tags to be persisted on the agent pool virtual machine scale set.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: nodeLabels
    description: The node labels to be persisted across all nodes in agent pool.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: nodeTaints
    description: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
    types:
    - uid: string
      isArray: true
  - name: proximityPlacementGroupID
    description: The ID for Proximity Placement Group.
    types:
    - uid: string
  - name: kubeletConfig
    description: "Kubelet configurations of agent nodes.  \nThe Kubelet configuration on the agent pool nodes."
    types:
    - uid: KubeletConfig
  - name: linuxOSConfig
    description: "OS configurations of Linux agent nodes.  \nThe OS configuration of Linux agent nodes."
    types:
    - uid: LinuxOSConfig
  - name: enableEncryptionAtHost
    description: "Whether to enable host based OS and data drive encryption.  \nThis is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption"
    types:
    - uid: boolean
  - name: enableUltraSSD
    description: Whether to enable UltraSSD
    types:
    - uid: boolean
  - name: enableFIPS
    description: "Whether to use a FIPS-enabled OS.  \nSee [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details."
    types:
    - uid: boolean
  - name: gpuInstanceProfile
    description: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
    types:
    - uid: 'GPUInstanceProfile '
  - name: creationData
    description: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.
    types:
    - uid: CreationData
  - name: name
    description: "Unique name of the agent pool profile in the context of the subscription and resource group.  \nWindows agent pool names must be 6 characters or less."
    types:
    - uid: string
- name: ContainerServiceLinuxProfile
  description: Profile for Linux VMs in the container service cluster.
  kind: object
  properties:
  - name: adminUsername
    description: The administrator username to use for Linux VMs.
    types:
    - uid: string
  - name: ssh
    description: The SSH configuration for Linux-based VMs running on Azure.
    types:
    - uid: ContainerServiceSshConfiguration
- name: ManagedClusterWindowsProfile
  description: Profile for Windows VMs in the managed cluster.
  kind: object
  properties:
  - name: adminUsername
    description: Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters
    types:
    - uid: string
  - name: adminPassword
    description: Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
    types:
    - uid: string
  - name: licenseType
    description: The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details.
    types:
    - uid: licenseType
  - name: enableCSIProxy
    description: "Whether to enable CSI proxy.  \nFor more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy)."
    types:
    - uid: boolean
  - name: gmsaProfile
    description: The Windows gMSA Profile in the Managed Cluster.
    types:
    - uid: WindowsGmsaProfile
- name: ManagedClusterServicePrincipalProfile
  description: Information about a service principal identity for the cluster to use for manipulating Azure APIs.
  kind: object
  properties:
  - name: clientId
    description: The ID for the service principal.
    types:
    - uid: string
  - name: secret
    description: The secret password associated with the service principal in plain text.
    types:
    - uid: string
- name: ManagedClusterAddonProfile
  description: A Kubernetes add-on profile for a managed cluster.
  kind: object
  properties:
  - name: enabled
    description: Whether the add-on is enabled or not.
    types:
    - uid: boolean
  - name: config
    description: Key-value pairs for configuring an add-on.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: identity
    isReadyOnly: true
    description: Information of user assigned identity used by this add-on.
    types:
    - uid: Identity
- name: ManagedClusterPodIdentityProfile
  description: The pod identity profile of the Managed Cluster.
  kind: object
  properties:
  - name: enabled
    description: Whether the pod identity addon is enabled.
    types:
    - uid: boolean
  - name: allowNetworkPluginKubenet
    description: "Whether pod identity is allowed to run on clusters with Kubenet networking.  \nRunning in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information."
    types:
    - uid: boolean
  - name: userAssignedIdentities
    description: The pod identities to use in the cluster.
    types:
    - uid: ManagedClusterPodIdentity
      isArray: true
  - name: userAssignedIdentityExceptions
    description: The pod identity exceptions to allow.
    types:
    - uid: ManagedClusterPodIdentityException
      isArray: true
- name: ContainerServiceNetworkProfile
  description: Profile of network configuration.
  kind: object
  properties:
  - name: networkPlugin
    description: Network plugin used for building the Kubernetes network.
    types:
    - uid: NetworkPlugin
  - name: networkPolicy
    description: Network policy used for building the Kubernetes network.
    types:
    - uid: NetworkPolicy
  - name: networkMode
    description: "The network mode Azure CNI is configured with.  \nThis cannot be specified if networkPlugin is anything other than 'azure'."
    types:
    - uid: networkMode
  - name: podCidr
    description: A CIDR notation IP range from which to assign pod IPs when kubenet is used.
    types:
    - uid: string
  - name: serviceCidr
    description: A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
    types:
    - uid: string
  - name: dnsServiceIP
    description: An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
    types:
    - uid: string
  - name: dockerBridgeCidr
    description: A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
    types:
    - uid: string
  - name: outboundType
    description: "The outbound (egress) routing method.  \nThis can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype)."
    types:
    - uid: outboundType
  - name: loadBalancerSku
    description: "The load balancer sku for the managed cluster.  \nThe default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs."
    types:
    - uid: loadBalancerSku
  - name: loadBalancerProfile
    description: Profile of the cluster load balancer.
    types:
    - uid: ManagedClusterLoadBalancerProfile
  - name: natGatewayProfile
    description: Profile of the cluster NAT gateway.
    types:
    - uid: ManagedClusterNATGatewayProfile
  - name: podCidrs
    description: "The CIDR notation IP ranges from which to assign pod IPs.  \nOne IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking."
    types:
    - uid: string
      isArray: true
  - name: serviceCidrs
    description: "The CIDR notation IP ranges from which to assign service cluster IPs.  \nOne IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges."
    types:
    - uid: string
      isArray: true
  - name: ipFamilies
    description: "The IP families used to specify IP versions available to the cluster.  \nIP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6."
    types:
    - uid: string
      isArray: true
- name: ManagedClusterAADProfile
  description: AADProfile specifies attributes for Azure Active Directory integration.
  kind: object
  properties:
  - name: managed
    description: Whether to enable managed AAD.
    types:
    - uid: boolean
  - name: enableAzureRBAC
    description: Whether to enable Azure RBAC for Kubernetes authorization.
    types:
    - uid: boolean
  - name: adminGroupObjectIDs
    description: The list of AAD group object IDs that will have admin role of the cluster.
    types:
    - uid: string
      isArray: true
  - name: clientAppID
    description: The client AAD application ID.
    types:
    - uid: string
  - name: serverAppID
    description: The server AAD application ID.
    types:
    - uid: string
  - name: serverAppSecret
    description: The server AAD application secret.
    types:
    - uid: string
  - name: tenantID
    description: The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
    types:
    - uid: string
- name: ManagedClusterAutoUpgradeProfile
  description: Auto upgrade profile for a managed cluster.
  kind: object
  properties:
  - name: upgradeChannel
    description: "The upgrade channel for auto upgrade. The default is 'none'.  \nFor more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel)."
    types:
    - uid: upgradeChannel
- name: AutoScalerProfile
  description: Parameters to be applied to the cluster-autoscaler when enabled
  kind: object
  properties:
  - name: balance-similar-node-groups
    description: "Detects similar node pools and balances the number of nodes between them.  \nValid values are 'true' and 'false'"
    types:
    - uid: string
  - name: expander
    description: "The expander to use when scaling up  \nIf not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information."
    types:
    - uid: expander
  - name: max-empty-bulk-delete
    description: "The maximum number of empty nodes that can be deleted at the same time. This must be a positive integer.  \nThe default is 10."
    types:
    - uid: string
  - name: max-graceful-termination-sec
    description: "The maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node.  \nThe default is 600."
    types:
    - uid: string
  - name: max-node-provision-time
    description: "The maximum time the autoscaler waits for a node to be provisioned.  \nThe default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
    types:
    - uid: string
  - name: max-total-unready-percentage
    description: "The maximum percentage of unready nodes in the cluster. After this percentage is exceeded, cluster autoscaler halts operations.  \nThe default is 45. The maximum is 100 and the minimum is 0."
    types:
    - uid: string
  - name: new-pod-scale-up-delay
    description: "Ignore unscheduled pods before they're a certain age.  \nFor scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc)."
    types:
    - uid: string
  - name: ok-total-unready-count
    description: "The number of allowed unready nodes, irrespective of max-total-unready-percentage.  \nThis must be an integer. The default is 3."
    types:
    - uid: string
  - name: scan-interval
    description: "How often cluster is reevaluated for scale up or down.  \nThe default is '10'. Values must be an integer number of seconds."
    types:
    - uid: string
  - name: scale-down-delay-after-add
    description: "How long after scale up that scale down evaluation resumes  \nThe default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
    types:
    - uid: string
  - name: scale-down-delay-after-delete
    description: "How long after node deletion that scale down evaluation resumes.  \nThe default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
    types:
    - uid: string
  - name: scale-down-delay-after-failure
    description: "How long after scale down failure that scale down evaluation resumes.  \nThe default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
    types:
    - uid: string
  - name: scale-down-unneeded-time
    description: "How long a node should be unneeded before it is eligible for scale down.  \nThe default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
    types:
    - uid: string
  - name: scale-down-unready-time
    description: "How long an unready node should be unneeded before it is eligible for scale down  \nThe default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
    types:
    - uid: string
  - name: scale-down-utilization-threshold
    description: "Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.  \nThe default is '0.5'."
    types:
    - uid: string
  - name: skip-nodes-with-local-storage
    description: "If cluster autoscaler will skip deleting nodes with pods with local storage, for example, EmptyDir or HostPath.  \nThe default is true."
    types:
    - uid: string
  - name: skip-nodes-with-system-pods
    description: "If cluster autoscaler will skip deleting nodes with pods from kube-system (except for DaemonSet or mirror pods)  \nThe default is true."
    types:
    - uid: string
- name: ManagedClusterAPIServerAccessProfile
  description: Access profile for managed cluster API server.
  kind: object
  properties:
  - name: authorizedIPRanges
    description: "The IP ranges authorized to access the Kubernetes API server.  \nIP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges)."
    types:
    - uid: string
      isArray: true
  - name: enablePrivateCluster
    description: "Whether to create the cluster as a private cluster or not.  \nFor more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters)."
    types:
    - uid: boolean
  - name: privateDNSZone
    description: "The private DNS zone mode for the cluster.  \nThe default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone). Allowed values are 'system' and 'none'."
    types:
    - uid: string
  - name: enablePrivateClusterPublicFQDN
    description: Whether to create additional public FQDN for private cluster or not.
    types:
    - uid: boolean
  - name: disableRunCommand
    description: Whether to disable run command for the cluster or not.
    types:
    - uid: boolean
- name: UserAssignedIdentity
  description: Details about a user assigned identity.
  kind: object
  properties:
  - name: resourceId
    description: The resource ID of the user assigned identity.
    types:
    - uid: string
  - name: clientId
    description: The client ID of the user assigned identity.
    types:
    - uid: string
  - name: objectId
    description: The object ID of the user assigned identity.
    types:
    - uid: string
- name: PrivateLinkResource
  description: A private link resource
  kind: object
  properties:
  - name: id
    description: The ID of the private link resource.
    types:
    - uid: string
  - name: name
    description: The name of the private link resource.
    types:
    - uid: string
  - name: type
    description: The resource type.
    types:
    - uid: string
  - name: groupId
    description: The group ID of the resource.
    types:
    - uid: string
  - name: requiredMembers
    description: The RequiredMembers of the resource
    types:
    - uid: string
      isArray: true
  - name: privateLinkServiceID
    isReadyOnly: true
    description: The private link service ID of the resource, this field is exposed only to NRP internally.
    types:
    - uid: string
- name: ManagedClusterHTTPProxyConfig
  description: Cluster HTTP proxy configuration.
  kind: object
  properties:
  - name: httpProxy
    description: The HTTP proxy server endpoint to use.
    types:
    - uid: string
  - name: httpsProxy
    description: The HTTPS proxy server endpoint to use.
    types:
    - uid: string
  - name: noProxy
    description: The endpoints that should not go through proxy.
    types:
    - uid: string
      isArray: true
  - name: trustedCa
    description: Alternative CA cert to use for connecting to proxy servers.
    types:
    - uid: string
- name: ManagedClusterSecurityProfile
  description: Security profile for the container service cluster.
  kind: object
  properties:
  - name: azureDefender
    description: Azure Defender settings for the security profile.
    types:
    - uid: ManagedClusterSecurityProfileAzureDefender
- name: PublicNetworkAccess
  description: PublicNetworkAccess of the managedCluster
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: ManagedClusterSKUName
  description: The name of a managed cluster SKU.
  kind: enum
  properties:
  - name: Basic
    types:
    - uid: string
- name: ManagedClusterSKUTier
  description: The tier of a managed cluster SKU.
  kind: enum
  properties:
  - name: Paid
    description: Guarantees 99.95% availability of the Kubernetes API server endpoint for clusters that use Availability Zones and 99.9% of availability for clusters that don't use Availability Zones.
    types:
    - uid: string
  - name: Free
    description: No guaranteed SLA, no additional charges. Free tier clusters have an SLO of 99.5%.
    types:
    - uid: string
- name: ExtendedLocationTypes
  description: The type of the extended location.
  kind: enum
  properties:
  - name: EdgeZone
    types:
    - uid: string
- name: ResourceIdentityType
  description: The type of identity used for the managed cluster.
  kind: enum
  properties:
  - name: SystemAssigned
    description: Use an implicitly created system assigned managed identity to manage cluster resources. Master components in the control plane such as kube-controller-manager will use the system assigned managed identity to manipulate Azure resources.
    types:
    - uid: string
  - name: UserAssigned
    description: Use a user-specified identity to manage cluster resources. Master components in the control plane such as kube-controller-manager will use the specified user assigned managed identity to manipulate Azure resources.
    types:
    - uid: string
  - name: None
    description: Do not use a managed identity for the Managed Cluster, service principal will be used instead.
    types:
    - uid: string
- name: UserAssignedIdentities
  description: The user identity associated with the managed cluster. This identity will be used in control plane. Only one user assigned identity is allowed.
  kind: object
  properties:
  - name: ''
    description: ''
    types:
    - uid: ''
- name: code
  description: Tells whether the cluster is Running or Stopped
  kind: enum
  properties:
  - name: Running
    description: The cluster is running.
    types:
    - uid: string
  - name: Stopped
    description: The cluster is stopped.
    types:
    - uid: string
- name: OSDiskType
  description: The OS disk type to be used for machines in the agent pool.
  kind: enum
  properties:
  - name: Managed
    description: Azure replicates the operating system disk for a virtual machine to Azure storage to avoid data loss should the VM need to be relocated to another host. Since containers aren't designed to have local state persisted, this behavior offers limited value while providing some drawbacks, including slower node provisioning and higher read/write latency.
    types:
    - uid: string
  - name: Ephemeral
    description: Ephemeral OS disks are stored only on the host machine, just like a temporary disk. This provides lower read/write latency, along with faster node scaling and cluster upgrades.
    types:
    - uid: string
- name: KubeletDiskType
  description: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
  kind: enum
  properties:
  - name: OS
    description: Kubelet will use the OS disk for its data.
    types:
    - uid: string
  - name: Temporary
    description: Kubelet will use the temporary disk for its data.
    types:
    - uid: string
- name: WorkloadRuntime
  description: Determines the type of workload a node can run.
  kind: enum
  properties:
  - name: OCIContainer
    description: Nodes will use Kubelet to run standard OCI container workloads.
    types:
    - uid: string
  - name: WasmWasi
    description: Nodes will use Krustlet to run WASM workloads using the WASI provider (Preview).
    types:
    - uid: string
- name: OSType
  description: The operating system type. The default is Linux.
  kind: enum
  properties:
  - name: Linux
    description: Use Linux.
    types:
    - uid: string
  - name: Windows
    description: Use Windows.
    types:
    - uid: string
- name: OSSKU
  description: Specifies an OS SKU. This value must not be specified if OSType is Windows.
  kind: enum
  properties:
  - name: Ubuntu
    types:
    - uid: string
  - name: CBLMariner
    types:
    - uid: string
- name: ScaleDownMode
  description: Describes how VMs are added to or removed from Agent Pools. See [billing states](https://docs.microsoft.com/azure/virtual-machines/states-billing).
  kind: enum
  properties:
  - name: Delete
    description: Create new instances during scale up and remove instances during scale down.
    types:
    - uid: string
  - name: Deallocate
    description: Attempt to start deallocated instances (if they exist) during scale up and deallocate instances during scale down.
    types:
    - uid: string
- name: AgentPoolType
  description: The type of Agent Pool.
  kind: enum
  properties:
  - name: VirtualMachineScaleSets
    description: Create an Agent Pool backed by a Virtual Machine Scale Set.
    types:
    - uid: string
  - name: AvailabilitySet
    description: Use of this is strongly discouraged.
    types:
    - uid: string
- name: AgentPoolMode
  description: The mode of an agent pool.
  kind: enum
  properties:
  - name: System
    description: System agent pools are primarily for hosting critical system pods such as CoreDNS and metrics-server. System agent pools osType must be Linux. System agent pools VM SKU must have at least 2vCPUs and 4GB of memory.
    types:
    - uid: string
  - name: User
    description: User agent pools are primarily for hosting your application pods.
    types:
    - uid: string
- name: AgentPoolUpgradeSettings
  description: Settings for upgrading an agentpool
  kind: object
  properties:
  - name: maxSurge
    description: "The maximum number or percentage of nodes that are surged during upgrade.  \nThis can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade"
    types:
    - uid: string
- name: ScaleSetPriority
  description: The Virtual Machine Scale Set priority.
  kind: enum
  properties:
  - name: Spot
    description: Spot priority VMs will be used. There is no SLA for spot nodes. See [spot on AKS](https://docs.microsoft.com/azure/aks/spot-node-pool) for more information.
    types:
    - uid: string
  - name: Regular
    description: Regular VMs will be used.
    types:
    - uid: string
- name: ScaleSetEvictionPolicy
  description: The Virtual Machine Scale Set eviction policy.
  kind: enum
  properties:
  - name: Delete
    description: Nodes in the underlying Scale Set of the node pool are deleted when they're evicted.
    types:
    - uid: string
  - name: Deallocate
    description: Nodes in the underlying Scale Set of the node pool are set to the stopped-deallocated state upon eviction. Nodes in the stopped-deallocated state count against your compute quota and can cause issues with cluster scaling or upgrading.
    types:
    - uid: string
- name: KubeletConfig
  description: Kubelet configurations of agent nodes.
  kind: object
  properties:
  - name: cpuManagerPolicy
    description: "The CPU Manager policy to use.  \nThe default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'."
    types:
    - uid: string
  - name: cpuCfsQuota
    description: "If CPU CFS quota enforcement is enabled for containers that specify CPU limits.  \nThe default is true."
    types:
    - uid: boolean
  - name: cpuCfsQuotaPeriod
    description: "The CPU CFS quota period value.  \nThe default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'."
    types:
    - uid: string
  - name: imageGcHighThreshold
    description: "The percent of disk usage after which image garbage collection is always run.  \nTo disable image garbage collection, set to 100. The default is 85%"
    types:
    - uid: integer
  - name: imageGcLowThreshold
    description: "The percent of disk usage before which image garbage collection is never run.  \nThis cannot be set higher than imageGcHighThreshold. The default is 80%"
    types:
    - uid: integer
  - name: topologyManagerPolicy
    description: "The Topology Manager policy to use.  \nFor more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'."
    types:
    - uid: string
  - name: allowedUnsafeSysctls
    description: Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
    types:
    - uid: string
      isArray: true
  - name: failSwapOn
    description: If set to true it will make the Kubelet fail to start if swap is enabled on the node.
    types:
    - uid: boolean
  - name: containerLogMaxSizeMB
    description: The maximum size (e.g. 10Mi) of container log file before it is rotated.
    types:
    - uid: integer
  - name: containerLogMaxFiles
    description: The maximum number of container log files that can be present for a container. The number must be ≥ 2.
    types:
    - uid: integer
  - name: podMaxPids
    description: The maximum number of processes per pod.
    types:
    - uid: integer
- name: LinuxOSConfig
  description: OS configurations of Linux agent nodes.
  kind: object
  properties:
  - name: sysctls
    description: Sysctl settings for Linux agent nodes.
    types:
    - uid: SysctlConfig
  - name: transparentHugePageEnabled
    description: "Whether transparent hugepages are enabled.  \nValid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge)."
    types:
    - uid: string
  - name: transparentHugePageDefrag
    description: "Whether the kernel should make aggressive use of memory compaction to make more hugepages available.  \nValid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge)."
    types:
    - uid: string
  - name: swapFileSizeMB
    description: The size in MB of a swap file that will be created on each node.
    types:
    - uid: integer
- name: 'GPUInstanceProfile '
  description: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
  kind: enum
  properties:
  - name: MIG1g
    types:
    - uid: string
  - name: MIG2g
    types:
    - uid: string
  - name: MIG3g
    types:
    - uid: string
  - name: MIG4g
    types:
    - uid: string
  - name: MIG7g
    types:
    - uid: string
- name: CreationData
  description: Data used when creating a target resource from a source resource.
  kind: object
  properties:
  - name: sourceResourceId
    description: This is the ARM ID of the source object to be used to create the target object.
    types:
    - uid: string
- name: ContainerServiceSshConfiguration
  description: SSH configuration for Linux-based VMs running on Azure.
  kind: object
  properties:
  - name: publicKeys
    description: The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.
    types:
    - uid: ContainerServiceSshPublicKey
      isArray: true
- name: licenseType
  description: The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details.
  kind: enum
  properties:
  - name: None
    description: No additional licensing is applied.
    types:
    - uid: string
  - name: Windows_Server
    description: Enables Azure Hybrid User Benefits for Windows VMs.
    types:
    - uid: string
- name: WindowsGmsaProfile
  description: Windows gMSA Profile in the managed cluster.
  kind: object
  properties:
  - name: enabled
    description: "Whether to enable Windows gMSA.  \nSpecifies whether to enable Windows gMSA in the managed cluster."
    types:
    - uid: boolean
  - name: dnsServer
    description: Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
    types:
    - uid: string
  - name: rootDomainName
    description: Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
    types:
    - uid: string
- name: Identity
  description: Information of user assigned identity used by this add-on.
  kind: object
  properties:
  - name: resourceId
    description: The resource ID of the user assigned identity.
    types:
    - uid: string
  - name: clientId
    description: The client ID of the user assigned identity.
    types:
    - uid: string
  - name: objectId
    description: The object ID of the user assigned identity.
    types:
    - uid: string
- name: ManagedClusterPodIdentity
  description: Details about the pod identity assigned to the Managed Cluster.
  kind: object
  properties:
  - name: name
    description: The name of the pod identity.
    types:
    - uid: string
  - name: namespace
    description: The namespace of the pod identity.
    types:
    - uid: string
  - name: bindingSelector
    description: The binding selector to use for the AzureIdentityBinding resource.
    types:
    - uid: string
  - name: identity
    description: The user assigned identity details.
    types:
    - uid: UserAssignedIdentity
  - name: provisioningState
    isReadyOnly: true
    description: The current provisioning state of the pod identity.
    types:
    - uid: ManagedClusterPodIdentityProvisioningState
  - name: provisioningInfo
    isReadyOnly: true
    description: ''
    types:
    - uid: ProvisioningInfo
- name: ManagedClusterPodIdentityException
  description: A pod identity exception, which allows pods with certain labels to access the Azure Instance Metadata Service (IMDS) endpoint without being intercepted by the node-managed identity (NMI) server.
  kind: object
  properties:
  - name: name
    description: The name of the pod identity exception.
    types:
    - uid: string
  - name: namespace
    description: The namespace of the pod identity exception.
    types:
    - uid: string
  - name: podLabels
    description: The pod labels to match.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: NetworkPlugin
  description: Network plugin used for building the Kubernetes network.
  kind: enum
  properties:
  - name: azure
    description: Use the Azure CNI network plugin. See [Azure CNI (advanced) networking](https://docs.microsoft.com/azure/aks/concepts-network#azure-cni-advanced-networking) for more information.
    types:
    - uid: string
  - name: kubenet
    description: Use the Kubenet network plugin. See [Kubenet (basic) networking](https://docs.microsoft.com/azure/aks/concepts-network#kubenet-basic-networking) for more information.
    types:
    - uid: string
- name: NetworkPolicy
  description: Network policy used for building the Kubernetes network.
  kind: enum
  properties:
  - name: calico
    description: Use Calico network policies. See [differences between Azure and Calico policies](https://docs.microsoft.com/azure/aks/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities) for more information.
    types:
    - uid: string
  - name: azure
    description: Use Azure network policies. See [differences between Azure and Calico policies](https://docs.microsoft.com/azure/aks/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities) for more information.
    types:
    - uid: string
- name: networkMode
  description: The network mode Azure CNI is configured with.
  kind: enum
  properties:
  - name: transparent
    description: No bridge is created. Intra-VM Pod to Pod communication is through IP routes created by Azure CNI. See [Transparent Mode](https://docs.microsoft.com/azure/aks/faq#transparent-mode) for more information.
    types:
    - uid: string
  - name: bridge
    description: This is no longer supported
    types:
    - uid: string
- name: outboundType
  description: The outbound (egress) routing method.
  kind: enum
  properties:
  - name: loadBalancer
    description: The load balancer is used for egress through an AKS assigned public IP. This supports Kubernetes services of type 'loadBalancer'. For more information see [outbound type loadbalancer](https://docs.microsoft.com/azure/aks/egress-outboundtype#outbound-type-of-loadbalancer).
    types:
    - uid: string
  - name: userDefinedRouting
    description: Egress paths must be defined by the user. This is an advanced scenario and requires proper network configuration. For more information see [outbound type userDefinedRouting](https://docs.microsoft.com/azure/aks/egress-outboundtype#outbound-type-of-userdefinedrouting).
    types:
    - uid: string
  - name: managedNATGateway
    description: The AKS-managed NAT gateway is used for egress.
    types:
    - uid: string
  - name: userAssignedNATGateway
    description: The user-assigned NAT gateway associated to the cluster subnet is used for egress. This is an advanced scenario and requires proper network configuration.
    types:
    - uid: string
- name: loadBalancerSku
  description: The load balancer sku for the managed cluster.
  kind: enum
  properties:
  - name: standard
    description: Use a a standard Load Balancer. This is the recommended Load Balancer SKU. For more information about on working with the load balancer in the managed cluster, see the [standard Load Balancer](https://docs.microsoft.com/azure/aks/load-balancer-standard) article.
    types:
    - uid: string
  - name: basic
    description: Use a basic Load Balancer with limited functionality.
    types:
    - uid: string
- name: ManagedClusterLoadBalancerProfile
  description: Profile of the managed cluster load balancer.
  kind: object
  properties:
  - name: managedOutboundIPs
    description: Desired managed outbound IPs for the cluster load balancer.
    types:
    - uid: ManagedOutboundIPs
  - name: outboundIPPrefixes
    description: Desired outbound IP Prefix resources for the cluster load balancer.
    types:
    - uid: OutboundIPPrefixes
  - name: outboundIPs
    description: Desired outbound IP resources for the cluster load balancer.
    types:
    - uid: OutboundIPs
  - name: effectiveOutboundIPs
    description: The effective outbound IP resources of the cluster load balancer.
    types:
    - uid: ResourceReference
      isArray: true
  - name: allocatedOutboundPorts
    description: The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
    types:
    - uid: integer
  - name: idleTimeoutInMinutes
    description: Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.
    types:
    - uid: integer
  - name: enableMultipleStandardLoadBalancers
    description: Enable multiple standard load balancers per AKS cluster or not.
    types:
    - uid: boolean
- name: ManagedClusterNATGatewayProfile
  description: Profile of the managed cluster NAT gateway.
  kind: object
  properties:
  - name: managedOutboundIPProfile
    description: Profile of the managed outbound IP resources of the cluster NAT gateway.
    types:
    - uid: ManagedClusterManagedOutboundIPProfile
  - name: effectiveOutboundIPs
    description: The effective outbound IP resources of the cluster NAT gateway.
    types:
    - uid: ResourceReference
      isArray: true
  - name: idleTimeoutInMinutes
    description: Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes.
    types:
    - uid: integer
- name: upgradeChannel
  description: The upgrade channel for auto upgrade. The default is 'none'.
  kind: enum
  properties:
  - name: rapid
    description: Automatically upgrade the cluster to the latest supported patch release on the latest supported minor version. In cases where the cluster is at a version of Kubernetes that is at an N-2 minor version where N is the latest supported minor version, the cluster first upgrades to the latest supported patch version on N-1 minor version. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster first is upgraded to 1.18.6, then is upgraded to 1.19.1.
    types:
    - uid: string
  - name: stable
    description: Automatically upgrade the cluster to the latest supported patch release on minor version N-1, where N is the latest supported minor version. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster is upgraded to 1.18.6.
    types:
    - uid: string
  - name: patch
    description: Automatically upgrade the cluster to the latest supported patch version when it becomes available while keeping the minor version the same. For example, if a cluster is running version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, your cluster is upgraded to 1.17.9.
    types:
    - uid: string
  - name: node-image
    description: Automatically upgrade the node image to the latest version available. Microsoft provides patches and new images for image nodes frequently (usually weekly), but your running nodes won't get the new images unless you do a node image upgrade. Turning on the node-image channel will automatically update your node images whenever a new version is available.
    types:
    - uid: string
  - name: none
    description: Disables auto-upgrades and keeps the cluster at its current version of Kubernetes.
    types:
    - uid: string
- name: expander
  description: The expander to use when scaling up
  kind: enum
  properties:
  - name: least-waste
    description: Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources.
    types:
    - uid: string
  - name: most-pods
    description: Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once.
    types:
    - uid: string
  - name: priority
    description: Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/expander/priority/readme.md).
    types:
    - uid: string
  - name: random
    description: Used when you don't have a particular need for the node groups to scale differently.
    types:
    - uid: string
- name: ManagedClusterSecurityProfileAzureDefender
  description: Azure Defender settings for the security profile.
  kind: object
  properties:
  - name: enabled
    description: Whether to enable Azure Defender
    types:
    - uid: boolean
  - name: logAnalyticsWorkspaceResourceId
    description: Resource ID of the Log Analytics workspace to be associated with Azure Defender.  When Azure Defender is enabled, this field is required and must be a valid workspace resource ID. When Azure Defender is disabled, leave the field empty.
    types:
    - uid: string
- name: SysctlConfig
  description: Sysctl settings for Linux agent nodes.
  kind: object
  properties:
  - name: netCoreSomaxconn
    description: Sysctl setting net.core.somaxconn.
    types:
    - uid: integer
  - name: netCoreNetdevMaxBacklog
    description: Sysctl setting net.core.netdev_max_backlog.
    types:
    - uid: integer
  - name: netCoreRmemDefault
    description: Sysctl setting net.core.rmem_default.
    types:
    - uid: integer
  - name: netCoreRmemMax
    description: Sysctl setting net.core.rmem_max.
    types:
    - uid: integer
  - name: netCoreWmemDefault
    description: Sysctl setting net.core.wmem_default.
    types:
    - uid: integer
  - name: netCoreWmemMax
    description: Sysctl setting net.core.wmem_max.
    types:
    - uid: integer
  - name: netCoreOptmemMax
    description: Sysctl setting net.core.optmem_max.
    types:
    - uid: integer
  - name: netIpv4TcpMaxSynBacklog
    description: Sysctl setting net.ipv4.tcp_max_syn_backlog.
    types:
    - uid: integer
  - name: netIpv4TcpMaxTwBuckets
    description: Sysctl setting net.ipv4.tcp_max_tw_buckets.
    types:
    - uid: integer
  - name: netIpv4TcpFinTimeout
    description: Sysctl setting net.ipv4.tcp_fin_timeout.
    types:
    - uid: integer
  - name: netIpv4TcpKeepaliveTime
    description: Sysctl setting net.ipv4.tcp_keepalive_time.
    types:
    - uid: integer
  - name: netIpv4TcpKeepaliveProbes
    description: Sysctl setting net.ipv4.tcp_keepalive_probes.
    types:
    - uid: integer
  - name: netIpv4TcpkeepaliveIntvl
    description: Sysctl setting net.ipv4.tcp_keepalive_intvl.
    types:
    - uid: integer
  - name: netIpv4TcpTwReuse
    description: Sysctl setting net.ipv4.tcp_tw_reuse.
    types:
    - uid: boolean
  - name: netIpv4IpLocalPortRange
    description: Sysctl setting net.ipv4.ip_local_port_range.
    types:
    - uid: string
  - name: netIpv4NeighDefaultGcThresh1
    description: Sysctl setting net.ipv4.neigh.default.gc_thresh1.
    types:
    - uid: integer
  - name: netIpv4NeighDefaultGcThresh2
    description: Sysctl setting net.ipv4.neigh.default.gc_thresh2.
    types:
    - uid: integer
  - name: netIpv4NeighDefaultGcThresh3
    description: Sysctl setting net.ipv4.neigh.default.gc_thresh3.
    types:
    - uid: integer
  - name: netNetfilterNfConntrackMax
    description: Sysctl setting net.netfilter.nf_conntrack_max.
    types:
    - uid: integer
  - name: netNetfilterNfConntrackBuckets
    description: Sysctl setting net.netfilter.nf_conntrack_buckets.
    types:
    - uid: integer
  - name: fsInotifyMaxUserWatches
    description: Sysctl setting fs.inotify.max_user_watches.
    types:
    - uid: integer
  - name: fsFileMax
    description: Sysctl setting fs.file-max.
    types:
    - uid: integer
  - name: fsAioMaxNr
    description: Sysctl setting fs.aio-max-nr.
    types:
    - uid: integer
  - name: fsNrOpen
    description: Sysctl setting fs.nr_open.
    types:
    - uid: integer
  - name: kernelThreadsMax
    description: Sysctl setting kernel.threads-max.
    types:
    - uid: integer
  - name: vmMaxMapCount
    description: Sysctl setting vm.max_map_count.
    types:
    - uid: integer
  - name: vmSwappiness
    description: Sysctl setting vm.swappiness.
    types:
    - uid: integer
  - name: vmVfsCachePressure
    description: Sysctl setting vm.vfs_cache_pressure.
    types:
    - uid: integer
- name: ContainerServiceSshPublicKey
  description: Contains information about SSH certificate public key data.
  kind: object
  properties:
  - name: keyData
    description: Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
    types:
    - uid: string
- name: ManagedClusterPodIdentityProvisioningState
  description: The current provisioning state of the pod identity.
  kind: enum
  properties:
  - name: Assigned
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: ProvisioningInfo
  kind: object
  properties:
  - name: error
    description: Pod identity assignment error (if any).
    types:
    - uid: ManagedClusterPodIdentityProvisioningError
- name: ManagedOutboundIPs
  description: Desired managed outbound IPs for the cluster load balancer.
  kind: object
  properties:
  - name: count
    description: 'The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. '
    types:
    - uid: integer
  - name: countIPv6
    description: 'The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack. '
    types:
    - uid: integer
- name: OutboundIPPrefixes
  description: Desired outbound IP Prefix resources for the cluster load balancer.
  kind: object
  properties:
  - name: publicIPPrefixes
    description: A list of public IP prefix resources.
    types:
    - uid: ResourceReference
      isArray: true
- name: OutboundIPs
  description: Desired outbound IP resources for the cluster load balancer.
  kind: object
  properties:
  - name: publicIPs
    description: A list of public IP resources.
    types:
    - uid: ResourceReference
      isArray: true
- name: ResourceReference
  description: A reference to an Azure resource.
  kind: object
  properties:
  - name: id
    description: The fully qualified Azure resource id.
    types:
    - uid: string
- name: ManagedClusterManagedOutboundIPProfile
  description: Profile of the managed outbound IP resources of the managed cluster.
  kind: object
  properties:
  - name: count
    description: 'The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive). The default value is 1. '
    types:
    - uid: integer
- name: ManagedClusterPodIdentityProvisioningError
  description: An error response from the pod identity provisioning.
  kind: object
  properties:
  - name: error
    description: Details about the error.
    types:
    - uid: ManagedClusterPodIdentityProvisioningErrorBody
- name: ManagedClusterPodIdentityProvisioningErrorBody
  description: An error response from the pod identity provisioning.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: ManagedClusterPodIdentityProvisioningErrorBody
      isArray: true
examples:
- name: Get Managed Clusters by Resource Group
  request:
    uri: GET https://management.azure.com/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.ContainerService/managedClusters?api-version=2022-01-01
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters",
            "location": "location1",
            "name": "clustername1",
            "tags": {
              "archv2": "",
              "tier": "production"
            },
            "type": "Microsoft.ContainerService/ManagedClusters",
            "properties": {
              "provisioningState": "Succeeded",
              "kubernetesVersion": "1.9.6",
              "maxAgentPools": 1,
              "dnsPrefix": "dnsprefix1",
              "fqdn": "dnsprefix1-abcd1234.hcp.eastus.azmk8s.io",
              "agentPoolProfiles": [
                {
                  "name": "nodepool1",
                  "count": 3,
                  "vmSize": "Standard_DS1_v2",
                  "maxPods": 110,
                  "osType": "Linux",
                  "provisioningState": "Succeeded",
                  "orchestratorVersion": "1.9.6"
                }
              ],
              "linuxProfile": {
                "adminUsername": "azureuser",
                "ssh": {
                  "publicKeys": [
                    {
                      "keyData": "keydata"
                    }
                  ]
                }
              },
              "servicePrincipalProfile": {
                "clientId": "clientid"
              },
              "nodeResourceGroup": "MC_rg1_clustername1_location1",
              "enableRBAC": false,
              "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
              "networkProfile": {
                "networkPlugin": "kubenet",
                "podCidr": "10.244.0.0/16",
                "serviceCidr": "10.0.0.0/16",
                "dnsServiceIP": "10.0.0.10",
                "dockerBridgeCidr": "172.17.0.1/16"
              }
            }
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about AKS service - Lists managed clusters in the specified subscription and resource group.
errorCodes: []
