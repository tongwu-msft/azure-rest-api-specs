### YamlMime:RESTOperation
uid: management.azure.com.aks.managedclusters.get
name: Get
service: AKS
groupName: Managed Clusters
apiVersion: 2021-03-01
summary: "Gets a managed cluster.  \nGets the details of the managed cluster with a specified resource group and name."
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}?api-version=2021-03-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: resourceName
  in: path
  isRequired: true
  description: The name of the managed cluster resource.
  types:
  - uid: string
  pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: ManagedCluster
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: ManagedCluster
  description: Managed cluster.
  kind: object
  properties:
  - name: sku
    description: The managed cluster SKU.
    types:
    - uid: ManagedClusterSKU
  - name: extendedLocation
    description: The extended location of the Virtual Machine.
    types:
    - uid: ExtendedLocation
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: identity
    description: The identity of the managed cluster, if configured.
    types:
    - uid: ManagedClusterIdentity
  - name: properties.provisioningState
    isReadyOnly: true
    description: The current deployment or provisioning state, which only appears in the response.
    types:
    - uid: string
  - name: properties.powerState
    isReadyOnly: true
    description: Represents the Power State of the cluster
    types:
    - uid: PowerState
  - name: properties.maxAgentPools
    isReadyOnly: true
    description: The max number of agent pools for the managed cluster.
    types:
    - uid: integer
  - name: properties.kubernetesVersion
    description: Version of Kubernetes specified when creating the managed cluster.
    types:
    - uid: string
  - name: properties.dnsPrefix
    description: DNS prefix specified when creating the managed cluster.
    types:
    - uid: string
  - name: properties.fqdnSubdomain
    description: FQDN subdomain specified when creating private cluster with custom private dns zone.
    types:
    - uid: string
  - name: properties.fqdn
    isReadyOnly: true
    description: FQDN for the master pool.
    types:
    - uid: string
  - name: properties.privateFQDN
    isReadyOnly: true
    description: FQDN of private cluster.
    types:
    - uid: string
  - name: properties.azurePortalFQDN
    isReadyOnly: true
    description: FQDN for the master pool which used by proxy config.
    types:
    - uid: string
  - name: properties.agentPoolProfiles
    description: Properties of the agent pool.
    types:
    - uid: ManagedClusterAgentPoolProfile
      isArray: true
  - name: properties.linuxProfile
    description: Profile for Linux VMs in the container service cluster.
    types:
    - uid: ContainerServiceLinuxProfile
  - name: properties.windowsProfile
    description: Profile for Windows VMs in the container service cluster.
    types:
    - uid: ManagedClusterWindowsProfile
  - name: properties.servicePrincipalProfile
    description: Information about a service principal identity for the cluster to use for manipulating Azure APIs.
    types:
    - uid: ManagedClusterServicePrincipalProfile
  - name: properties.addonProfiles
    description: Profile of managed cluster add-on.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: ManagedClusterAddonProfile
  - name: properties.podIdentityProfile
    description: Profile of managed cluster pod identity.
    types:
    - uid: ManagedClusterPodIdentityProfile
  - name: properties.nodeResourceGroup
    description: Name of the resource group containing agent pool nodes.
    types:
    - uid: string
  - name: properties.enableRBAC
    description: Whether to enable Kubernetes Role-Based Access Control.
    types:
    - uid: boolean
  - name: properties.enablePodSecurityPolicy
    description: (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.
    types:
    - uid: boolean
  - name: properties.networkProfile
    description: Profile of network configuration.
    types:
    - uid: ContainerServiceNetworkProfile
  - name: properties.aadProfile
    description: Profile of Azure Active Directory configuration.
    types:
    - uid: ManagedClusterAADProfile
  - name: properties.autoUpgradeProfile
    description: Profile of auto upgrade configuration.
    types:
    - uid: ManagedClusterAutoUpgradeProfile
  - name: properties.autoScalerProfile
    description: Parameters to be applied to the cluster-autoscaler when enabled
    types:
    - uid: AutoScalerProfile
  - name: properties.apiServerAccessProfile
    description: Access profile for managed cluster API server.
    types:
    - uid: ManagedClusterAPIServerAccessProfile
  - name: properties.diskEncryptionSetID
    description: ResourceId of the disk encryption set to use for enabling encryption at rest.
    types:
    - uid: string
  - name: properties.identityProfile
    description: Identities associated with the cluster.
    types:
    - {}
  - name: properties.privateLinkResources
    description: Private link resources associated with the cluster.
    types:
    - uid: PrivateLinkResource
      isArray: true
  - name: properties.disableLocalAccounts
    description: If set to true, getting static credential will be disabled for this cluster. Expected to only be used for AAD clusters.
    types:
    - uid: boolean
  - name: properties.httpProxyConfig
    description: Configurations for provisioning the cluster with HTTP proxy servers.
    types:
    - uid: ManagedClusterHTTPProxyConfig
- name: CloudError
  description: An error response from the Container service.
  kind: object
  properties:
  - name: error
    description: Details about the error.
    types:
    - uid: CloudErrorBody
- name: ManagedClusterSKU
  kind: object
  properties:
  - name: name
    description: Name of a managed cluster SKU.
    types:
    - uid: ManagedClusterSKUName
  - name: tier
    description: Tier of a managed cluster SKU.
    types:
    - uid: ManagedClusterSKUTier
- name: ExtendedLocation
  description: The complex type of the extended location.
  kind: object
  properties:
  - name: name
    description: The name of the extended location.
    types:
    - uid: string
  - name: type
    description: The type of the extended location.
    types:
    - uid: ExtendedLocationTypes
- name: ManagedClusterIdentity
  description: Identity for the managed cluster.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal id of the system assigned identity which is used by master components.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant id of the system assigned identity which is used by master components.
    types:
    - uid: string
  - name: type
    description: The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
    types:
    - uid: ResourceIdentityType
  - name: userAssignedIdentities
    description: "The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
    types:
    - uid: UserAssignedIdentities
- name: PowerState
  description: Describes the Power State of the cluster
  kind: object
  properties:
  - name: code
    description: Tells whether the cluster is Running or Stopped
    types:
    - uid: code
- name: ManagedClusterAgentPoolProfile
  description: Profile for the container service agent pool.
  kind: object
  properties:
  - name: count
    description: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1.
    types:
    - uid: integer
  - name: vmSize
    description: Size of agent VMs.
    types:
    - uid: string
  - name: osDiskSizeGB
    description: OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
    types:
    - uid: integer
  - name: osDiskType
    description: OS disk type to be used for machines in a given agent pool. Allowed values are 'Ephemeral' and 'Managed'. If unspecified, defaults to 'Ephemeral' when the VM supports ephemeral OS and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation.
    types:
    - uid: OSDiskType
  - name: kubeletDiskType
    description: KubeletDiskType determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. Currently allows one value, OS, resulting in Kubelet using the OS disk for data.
    types:
    - uid: KubeletDiskType
  - name: vnetSubnetID
    description: VNet SubnetID specifies the VNet's subnet identifier for nodes and maybe pods
    types:
    - uid: string
  - name: podSubnetID
    description: Pod SubnetID specifies the VNet's subnet identifier for pods.
    types:
    - uid: string
  - name: maxPods
    description: Maximum number of pods that can run on a node.
    types:
    - uid: integer
  - name: osType
    description: OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
    types:
    - uid: OSType
  - name: osSKU
    description: OsSKU to be used to specify os sku. Choose from Ubuntu(default) and CBLMariner for Linux OSType. Not applicable to Windows OSType.
    types:
    - uid: OSSKU
  - name: maxCount
    description: Maximum number of nodes for auto-scaling
    types:
    - uid: integer
  - name: minCount
    description: Minimum number of nodes for auto-scaling
    types:
    - uid: integer
  - name: enableAutoScaling
    description: Whether to enable auto-scaler
    types:
    - uid: boolean
  - name: type
    description: AgentPoolType represents types of an agent pool
    types:
    - uid: AgentPoolType
  - name: mode
    description: AgentPoolMode represents mode of an agent pool
    types:
    - uid: AgentPoolMode
  - name: orchestratorVersion
    description: Version of orchestrator specified when creating the managed cluster.
    types:
    - uid: string
  - name: nodeImageVersion
    isReadyOnly: true
    description: Version of node image
    types:
    - uid: string
  - name: upgradeSettings
    description: Settings for upgrading the agentpool
    types:
    - uid: AgentPoolUpgradeSettings
  - name: provisioningState
    isReadyOnly: true
    description: The current deployment or provisioning state, which only appears in the response.
    types:
    - uid: string
  - name: powerState
    isReadyOnly: true
    description: Describes whether the Agent Pool is Running or Stopped
    types:
    - uid: PowerState
  - name: availabilityZones
    description: Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
    types:
    - uid: string
      isArray: true
  - name: enableNodePublicIP
    description: Enable public IP for nodes
    types:
    - uid: boolean
  - name: nodePublicIPPrefixID
    description: Public IP Prefix ID. VM nodes use IPs assigned from this Public IP Prefix.
    types:
    - uid: string
  - name: scaleSetPriority
    description: ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
    types:
    - uid: ScaleSetPriority
  - name: scaleSetEvictionPolicy
    description: ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
    types:
    - uid: ScaleSetEvictionPolicy
  - name: spotMaxPrice
    description: SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.
    types:
    - uid: number
  - name: tags
    description: Agent pool tags to be persisted on the agent pool virtual machine scale set.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: nodeLabels
    description: Agent pool node labels to be persisted across all nodes in agent pool.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: nodeTaints
    description: Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
    types:
    - uid: string
      isArray: true
  - name: proximityPlacementGroupID
    description: The ID for Proximity Placement Group.
    types:
    - uid: string
  - name: kubeletConfig
    description: KubeletConfig specifies the configuration of kubelet on agent nodes.
    types:
    - uid: KubeletConfig
  - name: linuxOSConfig
    description: LinuxOSConfig specifies the OS configuration of linux agent nodes.
    types:
    - uid: LinuxOSConfig
  - name: enableEncryptionAtHost
    description: Whether to enable EncryptionAtHost
    types:
    - uid: boolean
  - name: enableFIPS
    description: Whether to use FIPS enabled OS
    types:
    - uid: boolean
  - name: gpuInstanceProfile
    description: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU. Supported values are MIG1g, MIG2g, MIG3g, MIG4g and MIG7g.
    types:
    - uid: 'GPUInstanceProfile '
  - name: name
    description: Unique name of the agent pool profile in the context of the subscription and resource group.
    types:
    - uid: string
- name: ContainerServiceLinuxProfile
  description: Profile for Linux VMs in the container service cluster.
  kind: object
  properties:
  - name: adminUsername
    description: The administrator username to use for Linux VMs.
    types:
    - uid: string
  - name: ssh
    description: SSH configuration for Linux-based VMs running on Azure.
    types:
    - uid: ContainerServiceSshConfiguration
- name: ManagedClusterWindowsProfile
  description: Profile for Windows VMs in the container service cluster.
  kind: object
  properties:
  - name: adminUsername
    description: Specifies the name of the administrator account. <br><br> **restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters
    types:
    - uid: string
  - name: adminPassword
    description: Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
    types:
    - uid: string
  - name: licenseType
    description: The licenseType to use for Windows VMs. Windows_Server is used to enable Azure Hybrid User Benefits for Windows VMs.
    types:
    - uid: licenseType
  - name: enableCSIProxy
    description: Whether to enable CSI proxy.
    types:
    - uid: boolean
- name: ManagedClusterServicePrincipalProfile
  description: Information about a service principal identity for the cluster to use for manipulating Azure APIs.
  kind: object
  properties:
  - name: clientId
    description: The ID for the service principal.
    types:
    - uid: string
  - name: secret
    description: The secret password associated with the service principal in plain text.
    types:
    - uid: string
- name: ManagedClusterAddonProfile
  description: A Kubernetes add-on profile for a managed cluster.
  kind: object
  properties:
  - name: enabled
    description: Whether the add-on is enabled or not.
    types:
    - uid: boolean
  - name: config
    description: Key-value pairs for configuring an add-on.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: identity
    isReadyOnly: true
    description: Information of user assigned identity used by this add-on.
    types:
    - uid: Identity
- name: ManagedClusterPodIdentityProfile
  kind: object
  properties:
  - name: enabled
    description: Whether the pod identity addon is enabled.
    types:
    - uid: boolean
  - name: allowNetworkPluginKubenet
    description: Customer consent for enabling AAD pod identity addon in cluster using Kubenet network plugin.
    types:
    - uid: boolean
  - name: userAssignedIdentities
    description: User assigned pod identity settings.
    types:
    - uid: ManagedClusterPodIdentity
      isArray: true
  - name: userAssignedIdentityExceptions
    description: User assigned pod identity exception settings.
    types:
    - uid: ManagedClusterPodIdentityException
      isArray: true
- name: ContainerServiceNetworkProfile
  description: Profile of network configuration.
  kind: object
  properties:
  - name: networkPlugin
    description: Network plugin used for building Kubernetes network.
    types:
    - uid: NetworkPlugin
  - name: networkPolicy
    description: Network policy used for building Kubernetes network.
    types:
    - uid: NetworkPolicy
  - name: networkMode
    description: Network mode used for building Kubernetes network.
    types:
    - uid: networkMode
  - name: podCidr
    description: A CIDR notation IP range from which to assign pod IPs when kubenet is used.
    types:
    - uid: string
  - name: serviceCidr
    description: A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
    types:
    - uid: string
  - name: dnsServiceIP
    description: An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
    types:
    - uid: string
  - name: dockerBridgeCidr
    description: A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
    types:
    - uid: string
  - name: outboundType
    description: The outbound (egress) routing method.
    types:
    - uid: outboundType
  - name: loadBalancerSku
    description: The load balancer sku for the managed cluster.
    types:
    - uid: loadBalancerSku
  - name: loadBalancerProfile
    description: Profile of the cluster load balancer.
    types:
    - uid: ManagedClusterLoadBalancerProfile
- name: ManagedClusterAADProfile
  description: AADProfile specifies attributes for Azure Active Directory integration.
  kind: object
  properties:
  - name: managed
    description: Whether to enable managed AAD.
    types:
    - uid: boolean
  - name: enableAzureRBAC
    description: Whether to enable Azure RBAC for Kubernetes authorization.
    types:
    - uid: boolean
  - name: adminGroupObjectIDs
    description: AAD group object IDs that will have admin role of the cluster.
    types:
    - uid: string
      isArray: true
  - name: clientAppID
    description: The client AAD application ID.
    types:
    - uid: string
  - name: serverAppID
    description: The server AAD application ID.
    types:
    - uid: string
  - name: serverAppSecret
    description: The server AAD application secret.
    types:
    - uid: string
  - name: tenantID
    description: The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
    types:
    - uid: string
- name: ManagedClusterAutoUpgradeProfile
  description: Auto upgrade profile for a managed cluster.
  kind: object
  properties:
  - name: upgradeChannel
    description: upgrade channel for auto upgrade.
    types:
    - uid: upgradeChannel
- name: AutoScalerProfile
  description: Parameters to be applied to the cluster-autoscaler when enabled
  kind: object
  properties:
  - name: balance-similar-node-groups
    description: ''
    types:
    - uid: string
  - name: expander
    description: ''
    types:
    - uid: expander
  - name: max-empty-bulk-delete
    description: ''
    types:
    - uid: string
  - name: max-graceful-termination-sec
    description: ''
    types:
    - uid: string
  - name: max-node-provision-time
    description: ''
    types:
    - uid: string
  - name: max-total-unready-percentage
    description: ''
    types:
    - uid: string
  - name: new-pod-scale-up-delay
    description: ''
    types:
    - uid: string
  - name: ok-total-unready-count
    description: ''
    types:
    - uid: string
  - name: scan-interval
    description: ''
    types:
    - uid: string
  - name: scale-down-delay-after-add
    description: ''
    types:
    - uid: string
  - name: scale-down-delay-after-delete
    description: ''
    types:
    - uid: string
  - name: scale-down-delay-after-failure
    description: ''
    types:
    - uid: string
  - name: scale-down-unneeded-time
    description: ''
    types:
    - uid: string
  - name: scale-down-unready-time
    description: ''
    types:
    - uid: string
  - name: scale-down-utilization-threshold
    description: ''
    types:
    - uid: string
  - name: skip-nodes-with-local-storage
    description: ''
    types:
    - uid: string
  - name: skip-nodes-with-system-pods
    description: ''
    types:
    - uid: string
- name: ManagedClusterAPIServerAccessProfile
  description: Access profile for managed cluster API server.
  kind: object
  properties:
  - name: authorizedIPRanges
    description: Authorized IP Ranges to kubernetes API server.
    types:
    - uid: string
      isArray: true
  - name: enablePrivateCluster
    description: Whether to create the cluster as a private cluster or not.
    types:
    - uid: boolean
  - name: privateDNSZone
    description: 'Private dns zone mode for private cluster. '
    types:
    - uid: string
- name: PrivateLinkResource
  description: A private link resource
  kind: object
  properties:
  - name: id
    description: The ID of the private link resource.
    types:
    - uid: string
  - name: name
    description: The name of the private link resource.
    types:
    - uid: string
  - name: type
    description: The resource type.
    types:
    - uid: string
  - name: groupId
    description: The group ID of the resource.
    types:
    - uid: string
  - name: requiredMembers
    description: RequiredMembers of the resource
    types:
    - uid: string
      isArray: true
  - name: privateLinkServiceID
    isReadyOnly: true
    description: The private link service ID of the resource, this field is exposed only to NRP internally.
    types:
    - uid: string
- name: ManagedClusterHTTPProxyConfig
  description: Configurations for provisioning the cluster with HTTP proxy servers.
  kind: object
  properties:
  - name: httpProxy
    description: HTTP proxy server endpoint to use.
    types:
    - uid: string
  - name: httpsProxy
    description: HTTPS proxy server endpoint to use.
    types:
    - uid: string
  - name: noProxy
    description: Endpoints that should not go through proxy.
    types:
    - uid: string
      isArray: true
  - name: trustedCa
    description: Alternative CA cert to use for connecting to proxy servers.
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the Container service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: ManagedClusterSKUName
  description: Name of a managed cluster SKU.
  kind: enum
  properties:
  - name: Basic
    types:
    - uid: string
- name: ManagedClusterSKUTier
  description: Tier of a managed cluster SKU.
  kind: enum
  properties:
  - name: Paid
    types:
    - uid: string
  - name: Free
    types:
    - uid: string
- name: ExtendedLocationTypes
  description: The type of the extended location.
  kind: enum
  properties:
  - name: EdgeZone
    types:
    - uid: string
- name: ResourceIdentityType
  description: The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
  - name: UserAssigned
    types:
    - uid: string
  - name: None
    types:
    - uid: string
- name: UserAssignedIdentities
  description: "The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
  kind: object
  properties:
  - name: ''
    description: ''
    types:
    - uid: ''
- name: code
  description: Tells whether the cluster is Running or Stopped
  kind: enum
  properties:
  - name: Running
    types:
    - uid: string
  - name: Stopped
    types:
    - uid: string
- name: OSDiskType
  description: OSDiskType represents the type of an OS disk on an agent pool.
  kind: enum
  properties:
  - name: Managed
    types:
    - uid: string
  - name: Ephemeral
    types:
    - uid: string
- name: KubeletDiskType
  description: "KubeletDiskType determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. Allowed values: 'OS', 'Temporary' (preview)."
  kind: enum
  properties:
  - name: OS
    types:
    - uid: string
  - name: Temporary
    types:
    - uid: string
- name: OSType
  description: OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
  kind: enum
  properties:
  - name: Linux
    types:
    - uid: string
  - name: Windows
    types:
    - uid: string
- name: OSSKU
  description: OsSKU to be used to specify os sku. Choose from Ubuntu(default) and CBLMariner for Linux OSType. Not applicable to Windows OSType.
  kind: enum
  properties:
  - name: Ubuntu
    types:
    - uid: string
  - name: CBLMariner
    types:
    - uid: string
- name: AgentPoolType
  description: AgentPoolType represents types of an agent pool.
  kind: enum
  properties:
  - name: VirtualMachineScaleSets
    types:
    - uid: string
  - name: AvailabilitySet
    types:
    - uid: string
- name: AgentPoolMode
  description: AgentPoolMode represents mode of an agent pool.
  kind: enum
  properties:
  - name: System
    types:
    - uid: string
  - name: User
    types:
    - uid: string
- name: AgentPoolUpgradeSettings
  description: Settings for upgrading an agentpool
  kind: object
  properties:
  - name: maxSurge
    description: Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default
    types:
    - uid: string
- name: ScaleSetPriority
  description: ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
  kind: enum
  properties:
  - name: Spot
    types:
    - uid: string
  - name: Regular
    types:
    - uid: string
- name: ScaleSetEvictionPolicy
  description: ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
  kind: enum
  properties:
  - name: Delete
    types:
    - uid: string
  - name: Deallocate
    types:
    - uid: string
- name: KubeletConfig
  description: Kubelet configurations of agent nodes.
  kind: object
  properties:
  - name: cpuManagerPolicy
    description: CPU Manager policy to use.
    types:
    - uid: string
  - name: cpuCfsQuota
    description: Enable CPU CFS quota enforcement for containers that specify CPU limits.
    types:
    - uid: boolean
  - name: cpuCfsQuotaPeriod
    description: Sets CPU CFS quota period value.
    types:
    - uid: string
  - name: imageGcHighThreshold
    description: The percent of disk usage after which image garbage collection is always run.
    types:
    - uid: integer
  - name: imageGcLowThreshold
    description: The percent of disk usage before which image garbage collection is never run.
    types:
    - uid: integer
  - name: topologyManagerPolicy
    description: Topology Manager policy to use.
    types:
    - uid: string
  - name: allowedUnsafeSysctls
    description: Allowlist of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
    types:
    - uid: string
      isArray: true
  - name: failSwapOn
    description: If set to true it will make the Kubelet fail to start if swap is enabled on the node.
    types:
    - uid: boolean
  - name: containerLogMaxSizeMB
    description: The maximum size (e.g. 10Mi) of container log file before it is rotated.
    types:
    - uid: integer
  - name: containerLogMaxFiles
    description: The maximum number of container log files that can be present for a container. The number must be ≥ 2.
    types:
    - uid: integer
  - name: podMaxPids
    description: The maximum number of processes per pod.
    types:
    - uid: integer
- name: LinuxOSConfig
  description: OS configurations of Linux agent nodes.
  kind: object
  properties:
  - name: sysctls
    description: Sysctl settings for Linux agent nodes.
    types:
    - uid: SysctlConfig
  - name: transparentHugePageEnabled
    description: Transparent Huge Page enabled configuration.
    types:
    - uid: string
  - name: transparentHugePageDefrag
    description: Transparent Huge Page defrag configuration.
    types:
    - uid: string
  - name: swapFileSizeMB
    description: SwapFileSizeMB specifies size in MB of a swap file will be created on each node.
    types:
    - uid: integer
- name: 'GPUInstanceProfile '
  description: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU. Supported values are MIG1g, MIG2g, MIG3g, MIG4g and MIG7g.
  kind: enum
  properties:
  - name: MIG1g
    types:
    - uid: string
  - name: MIG2g
    types:
    - uid: string
  - name: MIG3g
    types:
    - uid: string
  - name: MIG4g
    types:
    - uid: string
  - name: MIG7g
    types:
    - uid: string
- name: ContainerServiceSshConfiguration
  description: SSH configuration for Linux-based VMs running on Azure.
  kind: object
  properties:
  - name: publicKeys
    description: The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
    types:
    - uid: ContainerServiceSshPublicKey
      isArray: true
- name: licenseType
  description: The licenseType to use for Windows VMs. Windows_Server is used to enable Azure Hybrid User Benefits for Windows VMs.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: Windows_Server
    types:
    - uid: string
- name: Identity
  description: Information of user assigned identity used by this add-on.
  kind: object
  properties:
  - name: resourceId
    description: The resource id of the user assigned identity.
    types:
    - uid: string
  - name: clientId
    description: The client id of the user assigned identity.
    types:
    - uid: string
  - name: objectId
    description: The object id of the user assigned identity.
    types:
    - uid: string
- name: ManagedClusterPodIdentity
  kind: object
  properties:
  - name: name
    description: Name of the pod identity.
    types:
    - uid: string
  - name: namespace
    description: Namespace of the pod identity.
    types:
    - uid: string
  - name: bindingSelector
    description: Binding selector to use for the AzureIdentityBinding resource.
    types:
    - uid: string
  - name: identity
    description: Information of the user assigned identity.
    types:
    - uid: UserAssignedIdentity
  - name: provisioningState
    isReadyOnly: true
    description: The current provisioning state of the pod identity.
    types:
    - uid: ManagedClusterPodIdentityProvisioningState
  - name: provisioningInfo
    isReadyOnly: true
    description: ''
    types:
    - uid: ProvisioningInfo
- name: ManagedClusterPodIdentityException
  kind: object
  properties:
  - name: name
    description: Name of the pod identity exception.
    types:
    - uid: string
  - name: namespace
    description: Namespace of the pod identity exception.
    types:
    - uid: string
  - name: podLabels
    description: Pod labels to match.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: NetworkPlugin
  description: Network plugin used for building Kubernetes network.
  kind: enum
  properties:
  - name: azure
    types:
    - uid: string
  - name: kubenet
    types:
    - uid: string
- name: NetworkPolicy
  description: Network policy used for building Kubernetes network.
  kind: enum
  properties:
  - name: calico
    types:
    - uid: string
  - name: azure
    types:
    - uid: string
- name: networkMode
  description: Network mode used for building Kubernetes network.
  kind: enum
  properties:
  - name: transparent
    types:
    - uid: string
  - name: bridge
    types:
    - uid: string
- name: outboundType
  description: The outbound (egress) routing method.
  kind: enum
  properties:
  - name: loadBalancer
    types:
    - uid: string
  - name: userDefinedRouting
    types:
    - uid: string
- name: loadBalancerSku
  description: The load balancer sku for the managed cluster.
  kind: enum
  properties:
  - name: standard
    types:
    - uid: string
  - name: basic
    types:
    - uid: string
- name: ManagedClusterLoadBalancerProfile
  description: Profile of the managed cluster load balancer.
  kind: object
  properties:
  - name: managedOutboundIPs
    description: Desired managed outbound IPs for the cluster load balancer.
    types:
    - uid: ManagedOutboundIPs
  - name: outboundIPPrefixes
    description: Desired outbound IP Prefix resources for the cluster load balancer.
    types:
    - uid: OutboundIPPrefixes
  - name: outboundIPs
    description: Desired outbound IP resources for the cluster load balancer.
    types:
    - uid: OutboundIPs
  - name: effectiveOutboundIPs
    description: The effective outbound IP resources of the cluster load balancer.
    types:
    - uid: ResourceReference
      isArray: true
  - name: allocatedOutboundPorts
    description: Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
    types:
    - uid: integer
  - name: idleTimeoutInMinutes
    description: Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
    types:
    - uid: integer
- name: upgradeChannel
  description: upgrade channel for auto upgrade.
  kind: enum
  properties:
  - name: rapid
    types:
    - uid: string
  - name: stable
    types:
    - uid: string
  - name: patch
    types:
    - uid: string
  - name: node-image
    types:
    - uid: string
  - name: none
    types:
    - uid: string
- name: expander
  kind: enum
  properties:
  - name: least-waste
    types:
    - uid: string
  - name: most-pods
    types:
    - uid: string
  - name: priority
    types:
    - uid: string
  - name: random
    types:
    - uid: string
- name: SysctlConfig
  description: Sysctl settings for Linux agent nodes.
  kind: object
  properties:
  - name: netCoreSomaxconn
    description: Sysctl setting net.core.somaxconn.
    types:
    - uid: integer
  - name: netCoreNetdevMaxBacklog
    description: Sysctl setting net.core.netdev_max_backlog.
    types:
    - uid: integer
  - name: netCoreRmemDefault
    description: Sysctl setting net.core.rmem_default.
    types:
    - uid: integer
  - name: netCoreRmemMax
    description: Sysctl setting net.core.rmem_max.
    types:
    - uid: integer
  - name: netCoreWmemDefault
    description: Sysctl setting net.core.wmem_default.
    types:
    - uid: integer
  - name: netCoreWmemMax
    description: Sysctl setting net.core.wmem_max.
    types:
    - uid: integer
  - name: netCoreOptmemMax
    description: Sysctl setting net.core.optmem_max.
    types:
    - uid: integer
  - name: netIpv4TcpMaxSynBacklog
    description: Sysctl setting net.ipv4.tcp_max_syn_backlog.
    types:
    - uid: integer
  - name: netIpv4TcpMaxTwBuckets
    description: Sysctl setting net.ipv4.tcp_max_tw_buckets.
    types:
    - uid: integer
  - name: netIpv4TcpFinTimeout
    description: Sysctl setting net.ipv4.tcp_fin_timeout.
    types:
    - uid: integer
  - name: netIpv4TcpKeepaliveTime
    description: Sysctl setting net.ipv4.tcp_keepalive_time.
    types:
    - uid: integer
  - name: netIpv4TcpKeepaliveProbes
    description: Sysctl setting net.ipv4.tcp_keepalive_probes.
    types:
    - uid: integer
  - name: netIpv4TcpkeepaliveIntvl
    description: Sysctl setting net.ipv4.tcp_keepalive_intvl.
    types:
    - uid: integer
  - name: netIpv4TcpTwReuse
    description: Sysctl setting net.ipv4.tcp_tw_reuse.
    types:
    - uid: boolean
  - name: netIpv4IpLocalPortRange
    description: Sysctl setting net.ipv4.ip_local_port_range.
    types:
    - uid: string
  - name: netIpv4NeighDefaultGcThresh1
    description: Sysctl setting net.ipv4.neigh.default.gc_thresh1.
    types:
    - uid: integer
  - name: netIpv4NeighDefaultGcThresh2
    description: Sysctl setting net.ipv4.neigh.default.gc_thresh2.
    types:
    - uid: integer
  - name: netIpv4NeighDefaultGcThresh3
    description: Sysctl setting net.ipv4.neigh.default.gc_thresh3.
    types:
    - uid: integer
  - name: netNetfilterNfConntrackMax
    description: Sysctl setting net.netfilter.nf_conntrack_max.
    types:
    - uid: integer
  - name: netNetfilterNfConntrackBuckets
    description: Sysctl setting net.netfilter.nf_conntrack_buckets.
    types:
    - uid: integer
  - name: fsInotifyMaxUserWatches
    description: Sysctl setting fs.inotify.max_user_watches.
    types:
    - uid: integer
  - name: fsFileMax
    description: Sysctl setting fs.file-max.
    types:
    - uid: integer
  - name: fsAioMaxNr
    description: Sysctl setting fs.aio-max-nr.
    types:
    - uid: integer
  - name: fsNrOpen
    description: Sysctl setting fs.nr_open.
    types:
    - uid: integer
  - name: kernelThreadsMax
    description: Sysctl setting kernel.threads-max.
    types:
    - uid: integer
  - name: vmMaxMapCount
    description: Sysctl setting vm.max_map_count.
    types:
    - uid: integer
  - name: vmSwappiness
    description: Sysctl setting vm.swappiness.
    types:
    - uid: integer
  - name: vmVfsCachePressure
    description: Sysctl setting vm.vfs_cache_pressure.
    types:
    - uid: integer
- name: ContainerServiceSshPublicKey
  description: Contains information about SSH certificate public key data.
  kind: object
  properties:
  - name: keyData
    description: Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
    types:
    - uid: string
- name: UserAssignedIdentity
  kind: object
  properties:
  - name: resourceId
    description: The resource id of the user assigned identity.
    types:
    - uid: string
  - name: clientId
    description: The client id of the user assigned identity.
    types:
    - uid: string
  - name: objectId
    description: The object id of the user assigned identity.
    types:
    - uid: string
- name: ManagedClusterPodIdentityProvisioningState
  description: The current provisioning state of the pod identity.
  kind: enum
  properties:
  - name: Assigned
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: ProvisioningInfo
  kind: object
  properties:
  - name: error
    description: Pod identity assignment error (if any).
    types:
    - uid: CloudError
- name: ManagedOutboundIPs
  description: Desired managed outbound IPs for the cluster load balancer.
  kind: object
  properties:
  - name: count
    description: 'Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. '
    types:
    - uid: integer
- name: OutboundIPPrefixes
  description: Desired outbound IP Prefix resources for the cluster load balancer.
  kind: object
  properties:
  - name: publicIPPrefixes
    description: A list of public IP prefix resources.
    types:
    - uid: ResourceReference
      isArray: true
- name: OutboundIPs
  description: Desired outbound IP resources for the cluster load balancer.
  kind: object
  properties:
  - name: publicIPs
    description: A list of public IP resources.
    types:
    - uid: ResourceReference
      isArray: true
- name: ResourceReference
  description: A reference to an Azure resource.
  kind: object
  properties:
  - name: id
    description: The fully qualified Azure resource id.
    types:
    - uid: string
examples:
- name: Get Managed Cluster
  request:
    uri: GET https://management.azure.com/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1?api-version=2021-03-01
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1",
        "location": "location1",
        "name": "clustername1",
        "tags": {
          "archv2": "",
          "tier": "production"
        },
        "type": "Microsoft.ContainerService/ManagedClusters",
        "properties": {
          "provisioningState": "Succeeded",
          "maxAgentPools": 1,
          "kubernetesVersion": "1.9.6",
          "dnsPrefix": "dnsprefix1",
          "fqdn": "dnsprefix1-abcd1234.hcp.eastus.azmk8s.io",
          "azurePortalFQDN": "dnsprefix1-abcd1234.portal.hcp.eastus.azmk8s.io",
          "agentPoolProfiles": [
            {
              "name": "nodepool1",
              "count": 3,
              "vmSize": "Standard_DS1_v2",
              "maxPods": 110,
              "osType": "Linux",
              "provisioningState": "Succeeded",
              "orchestratorVersion": "1.9.6",
              "availabilityZones": [
                "1",
                "2",
                "3"
              ],
              "nodeImageVersion": "AKSUbuntu:1604:2020.03.11",
              "upgradeSettings": {
                "maxSurge": "33%"
              }
            }
          ],
          "linuxProfile": {
            "adminUsername": "azureuser",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "keydata"
                }
              ]
            }
          },
          "servicePrincipalProfile": {
            "clientId": "clientid"
          },
          "nodeResourceGroup": "MC_rg1_clustername1_location1",
          "enableRBAC": false,
          "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
          "networkProfile": {
            "networkPlugin": "kubenet",
            "podCidr": "10.244.0.0/16",
            "serviceCidr": "10.0.0.0/16",
            "dnsServiceIP": "10.0.0.10",
            "dockerBridgeCidr": "172.17.0.1/16",
            "loadBalancerSku": "standard",
            "outboundType": "loadBalancer",
            "loadBalancerProfile": {
              "allocatedOutboundPorts": 2000,
              "idleTimeoutInMinutes": 10,
              "outboundIPs": {
                "publicIPs": [
                  {
                    "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/customeroutboundip1"
                  },
                  {
                    "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/customeroutboundip2"
                  }
                ]
              },
              "effectiveOutboundIPs": [
                {
                  "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip1"
                },
                {
                  "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip2"
                }
              ]
            }
          }
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: "Gets a managed cluster.  \nGets the details of the managed cluster with a specified resource group and name."
errorCodes: []
