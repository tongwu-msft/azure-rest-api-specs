### YamlMime:RESTOperation
uid: management.azure.com.synapse.ipfirewallrules.replaceall
name: Replace All
service: Synapse
groupName: Ip Firewall Rules
apiVersion: 2021-06-01
summary: Replaces firewall rules
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/replaceAllIpFirewallRules?api-version=2021-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: workspaceName
  in: path
  isRequired: true
  description: The name of the workspace.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: ReplaceAllFirewallRulesOperationResponse
- name: 202 Accepted
  description: Accepted
- name: Other Status Codes
  description: ''
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: ipFirewallRules
    in: body
    description: IP firewall rule properties
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: IpFirewallRuleProperties
requestHeader: []
definitions:
- name: IpFirewallRuleProperties
  description: IP firewall rule properties
  kind: object
  properties:
  - name: endIpAddress
    description: The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress
    types:
    - uid: string
  - name: provisioningState
    isReadyOnly: true
    description: Resource provisioning state
    types:
    - uid: ProvisioningState
  - name: startIpAddress
    description: The start IP address of the firewall rule. Must be IPv4 format
    types:
    - uid: string
- name: ReplaceAllFirewallRulesOperationResponse
  description: An existing operation for replacing the firewall rules
  kind: object
  properties:
  - name: operationId
    description: The operation ID
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: ReplaceAllIpFirewallRulesRequest
  description: Replace all IP firewall rules request
  kind: object
  properties:
  - name: ipFirewallRules
    description: IP firewall rule properties
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: IpFirewallRuleProperties
- name: ProvisioningState
  description: Resource provisioning state
  kind: enum
  properties:
  - name: Provisioning
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: DeleteError
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Replace all IP firewall rules in a workspace
  request:
    uri: POST https://management.azure.com/subscriptions/01234567-89ab-4def-0123-456789abcdef/resourceGroups/ExampleResourceGroup/providers/Microsoft.Synapse/workspaces/ExampleWorkspace/replaceAllIpFirewallRules?api-version=2021-06-01
    body: >-
      {
        "ipFirewallRules": {
          "ExampleFirewallRule": {
            "startIpAddress": "10.0.0.0",
            "endIpAddress": "10.0.0.254"
          },
          "AnotherExampleFirewallRule": {
            "startIpAddress": "10.0.1.0",
            "endIpAddress": "10.0.1.254"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/01234567-89ab-4def-0123-456789abcdef/resourceGroups/ExampleResourceGroup/providers/Microsoft.Synapse/workspaces/ExampleWorkspace/replaceAllIpFirewallRules?api-version=2021-06-01

      {
        "ipFirewallRules": {
          "ExampleFirewallRule": {
            "startIpAddress": "10.0.0.0",
            "endIpAddress": "10.0.0.254"
          },
          "AnotherExampleFirewallRule": {
            "startIpAddress": "10.0.1.0",
            "endIpAddress": "10.0.1.254"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.synapse.fluent.models.IpFirewallRuleProperties;
      import com.azure.resourcemanager.synapse.models.ReplaceAllIpFirewallRulesRequest;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for IpFirewallRules ReplaceAll. */
      public final class Main {
          /*
           * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/ReplaceAllIpFirewallRules.json
           */
          /**
           * Sample code: Replace all IP firewall rules in a workspace.
           *
           * @param manager Entry point to SynapseManager.
           */
          public static void replaceAllIPFirewallRulesInAWorkspace(com.azure.resourcemanager.synapse.SynapseManager manager) {
              manager
                  .ipFirewallRules()
                  .replaceAll(
                      "ExampleResourceGroup",
                      "ExampleWorkspace",
                      new ReplaceAllIpFirewallRulesRequest()
                          .withIpFirewallRules(
                              mapOf(
                                  "AnotherExampleFirewallRule",
                                  new IpFirewallRuleProperties()
                                      .withEndIpAddress("10.0.1.254")
                                      .withStartIpAddress("10.0.1.0"),
                                  "ExampleFirewallRule",
                                  new IpFirewallRuleProperties()
                                      .withEndIpAddress("10.0.0.254")
                                      .withStartIpAddress("10.0.0.0"))),
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-synapse_1.0.0-beta.6/sdk/synapse/azure-resourcemanager-synapse/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armsynapse_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/synapse/armsynapse"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/ReplaceAllIpFirewallRules.json
      func ExampleIPFirewallRulesClient_BeginReplaceAll() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsynapse.NewIPFirewallRulesClient("01234567-89ab-4def-0123-456789abcdef", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginReplaceAll(ctx,
      		"ExampleResourceGroup",
      		"ExampleWorkspace",
      		armsynapse.ReplaceAllIPFirewallRulesRequest{
      			IPFirewallRules: map[string]*armsynapse.IPFirewallRuleProperties{
      				"AnotherExampleFirewallRule": {
      					EndIPAddress:   to.Ptr("10.0.1.254"),
      					StartIPAddress: to.Ptr("10.0.1.0"),
      				},
      				"ExampleFirewallRule": {
      					EndIPAddress:   to.Ptr("10.0.0.254"),
      					StartIPAddress: to.Ptr("10.0.0.0"),
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsynapse%2Farmsynapse%2Fv0.5.0/sdk/resourcemanager/synapse/armsynapse/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SynapseManagementClient } = require("@azure/arm-synapse");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Replaces firewall rules
       *
       * @summary Replaces firewall rules
       * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/ReplaceAllIpFirewallRules.json
       */
      async function replaceAllIPFirewallRulesInAWorkspace() {
        const subscriptionId = "01234567-89ab-4def-0123-456789abcdef";
        const resourceGroupName = "ExampleResourceGroup";
        const workspaceName = "ExampleWorkspace";
        const request = {
          ipFirewallRules: {
            anotherExampleFirewallRule: {
              endIpAddress: "10.0.1.254",
              startIpAddress: "10.0.1.0",
            },
            exampleFirewallRule: {
              endIpAddress: "10.0.0.254",
              startIpAddress: "10.0.0.0",
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new SynapseManagementClient(credential, subscriptionId);
        const result = await client.ipFirewallRules.beginReplaceAllAndWait(
          resourceGroupName,
          workspaceName,
          request
        );
        console.log(result);
      }

      replaceAllIPFirewallRulesInAWorkspace().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-synapse_8.1.0-beta.1/sdk/synapse/arm-synapse/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "operationId": "00000000-1111-4444-2222-333333333333"
      }
  - statusCode: "202"
  - statusCode: default
    body: >-
      {
        "error": {
          "code": "Error code",
          "message": "Error message"
        }
      }
security: []
metadata:
  description: Learn more about Synapse service - Replaces firewall rules
errorCodes: []
