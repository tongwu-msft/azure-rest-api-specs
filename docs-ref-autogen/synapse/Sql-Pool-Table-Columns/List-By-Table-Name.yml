### YamlMime:RESTOperation
uid: management.azure.com.synapse.sqlpooltablecolumns.listbytablename
name: List By Table Name
service: Synapse
groupName: Sql Pool Table Columns
apiVersion: 2021-06-01
summary: Gets columns in a given table in a SQL pool.
consumes: []
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns?api-version=2021-06-01
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns?api-version=2021-06-01&$filter={$filter}
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: workspaceName
  in: path
  isRequired: true
  description: The name of the workspace.
  types:
  - uid: string
- name: sqlPoolName
  in: path
  isRequired: true
  description: SQL pool name
  types:
  - uid: string
- name: schemaName
  in: path
  isRequired: true
  description: The name of the schema.
  types:
  - uid: string
- name: tableName
  in: path
  isRequired: true
  description: The name of the table.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
- name: $filter
  in: query
  description: An OData filter expression that filters elements in the collection.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: SqlPoolColumnListResult
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 SourceDatabaseNotFound - The source database does not exist.

     * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

     * 404 InvalidDatabaseSchema - Schema is missing in database.

     * 404 InvalidDatabaseTable - Table is missing in database.

     * 404 InvalidDatabaseColumn - Column is missing in table.
requestHeader: []
definitions:
- name: SqlPoolColumnListResult
  description: A list of Sql pool columns.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: Array of results.
    types:
    - uid: SqlPoolColumn
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: Link to retrieve next page of results.
    types:
    - uid: string
- name: SqlPoolColumn
  description: A Sql pool column resource.
  kind: object
  properties:
  - name: properties.columnType
    description: The column data type.
    types:
    - uid: ColumnDataType
  - name: properties.isComputed
    isReadyOnly: true
    description: Indicates whether column value is computed or not
    types:
    - uid: boolean
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ColumnDataType
  description: The column data type.
  kind: enum
  properties:
  - name: image
    types:
    - uid: string
  - name: text
    types:
    - uid: string
  - name: uniqueidentifier
    types:
    - uid: string
  - name: date
    types:
    - uid: string
  - name: time
    types:
    - uid: string
  - name: datetime2
    types:
    - uid: string
  - name: datetimeoffset
    types:
    - uid: string
  - name: tinyint
    types:
    - uid: string
  - name: smallint
    types:
    - uid: string
  - name: int
    types:
    - uid: string
  - name: smalldatetime
    types:
    - uid: string
  - name: real
    types:
    - uid: string
  - name: money
    types:
    - uid: string
  - name: datetime
    types:
    - uid: string
  - name: float
    types:
    - uid: string
  - name: sql_variant
    types:
    - uid: string
  - name: ntext
    types:
    - uid: string
  - name: bit
    types:
    - uid: string
  - name: decimal
    types:
    - uid: string
  - name: numeric
    types:
    - uid: string
  - name: smallmoney
    types:
    - uid: string
  - name: bigint
    types:
    - uid: string
  - name: hierarchyid
    types:
    - uid: string
  - name: geometry
    types:
    - uid: string
  - name: geography
    types:
    - uid: string
  - name: varbinary
    types:
    - uid: string
  - name: varchar
    types:
    - uid: string
  - name: binary
    types:
    - uid: string
  - name: char
    types:
    - uid: string
  - name: timestamp
    types:
    - uid: string
  - name: nvarchar
    types:
    - uid: string
  - name: nchar
    types:
    - uid: string
  - name: xml
    types:
    - uid: string
  - name: sysname
    types:
    - uid: string
examples:
- name: List the columns in a table of a given schema in a SQL Analytics pool
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Synapse/workspaces/serverName/sqlPools/myDatabase/schemas/dbo/tables/table1/columns?api-version=2021-06-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Synapse/workspaces/serverName/sqlPools/myDatabase/schemas/dbo/tables/table1/columns?api-version=2021-06-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for SqlPoolTableColumns ListByTableName. */
      public final class Main {
          /*
           * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/ListSqlPoolColumns.json
           */
          /**
           * Sample code: List the columns in a table of a given schema in a SQL Analytics pool.
           *
           * @param manager Entry point to SynapseManager.
           */
          public static void listTheColumnsInATableOfAGivenSchemaInASQLAnalyticsPool(
              com.azure.resourcemanager.synapse.SynapseManager manager) {
              manager
                  .sqlPoolTableColumns()
                  .listByTableName("myRG", "serverName", "myDatabase", "dbo", "table1", null, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-synapse_1.0.0-beta.6/sdk/synapse/azure-resourcemanager-synapse/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armsynapse_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/synapse/armsynapse"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/ListSqlPoolColumns.json
      func ExampleSQLPoolTableColumnsClient_NewListByTableNamePager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsynapse.NewSQLPoolTableColumnsClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListByTableNamePager("myRG",
      		"serverName",
      		"myDatabase",
      		"dbo",
      		"table1",
      		&armsynapse.SQLPoolTableColumnsClientListByTableNameOptions{Filter: nil})
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsynapse%2Farmsynapse%2Fv0.5.0/sdk/resourcemanager/synapse/armsynapse/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Synapse/workspaces/serverName/sqlPools/myDatabase/schemas/dbo/tables/table1/columns/col1",
            "name": "col1",
            "type": "Microsoft.Synapse/workspaces/sqlPools/schemas/tables/columns",
            "properties": {
              "columnType": "nvarchar"
            }
          },
          {
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Synapse/workspaces/serverName/sqlPools/myDatabase/schemas/dbo/tables/table1/columns/col2",
            "name": "col2",
            "type": "Microsoft.Synapse/workspaces/sqlPools/schemas/tables/columns",
            "properties": {
              "columnType": "bit"
            }
          }
        ]
      }
security: []
metadata:
  description: Learn more about Synapse service - Gets columns in a given table in a SQL pool.
errorCodes: []
