### YamlMime:RESTOperation
uid: management.azure.com.synapse.kustopooldatabases.createorupdate
name: Create Or Update
service: Synapse
groupName: Kusto Pool Databases
apiVersion: 2021-06-01-preview
summary: Creates or updates a database.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}?api-version=2021-06-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: workspaceName
  in: path
  isRequired: true
  description: The name of the workspace.
  types:
  - uid: string
- name: kustoPoolName
  in: path
  isRequired: true
  description: The name of the Kusto pool.
  types:
  - uid: string
- name: databaseName
  in: path
  isRequired: true
  description: The name of the database in the Kusto pool.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK.
  types:
  - uid: ReadWriteDatabase
  - uid: ReadOnlyFollowingDatabase
  typesTitle: Database
- name: 201 Created
  description: Created.
  types:
  - uid: ReadWriteDatabase
  - uid: ReadOnlyFollowingDatabase
  typesTitle: Database
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: ReadWriteDatabase
  description: Class representing a read write database.
  parameters:
  - name: properties.softDeletePeriod
    in: body
    description: The time the data should be kept before it stops being accessible to queries in TimeSpan.
    types:
    - uid: string
  - name: properties.hotCachePeriod
    in: body
    description: The time the data should be kept in cache for fast queries in TimeSpan.
    types:
    - uid: string
  - name: location
    in: body
    description: Resource location.
    types:
    - uid: string
  - name: kind
    in: body
    isRequired: true
    description: Kind of the database
    types:
    - uid: ReadWrite
    typesTitle: string
- name: ReadOnlyFollowingDatabase
  description: Class representing a read only following database.
  parameters:
  - name: properties.hotCachePeriod
    in: body
    description: The time the data should be kept in cache for fast queries in TimeSpan.
    types:
    - uid: string
  - name: location
    in: body
    description: Resource location.
    types:
    - uid: string
  - name: kind
    in: body
    isRequired: true
    description: Kind of the database
    types:
    - uid: ReadOnlyFollowing
    typesTitle: string
requestHeader: []
definitions:
- name: ReadWriteDatabase
  description: Class representing a read write database.
  kind: object
  properties:
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioned state of the resource.
    types:
    - uid: ResourceProvisioningState
  - name: properties.softDeletePeriod
    description: The time the data should be kept before it stops being accessible to queries in TimeSpan.
    types:
    - uid: string
  - name: properties.hotCachePeriod
    description: The time the data should be kept in cache for fast queries in TimeSpan.
    types:
    - uid: string
  - name: properties.statistics
    isReadyOnly: true
    description: The statistics of the database.
    types:
    - uid: DatabaseStatistics
  - name: properties.isFollowed
    isReadyOnly: true
    description: Indicates whether the database is followed.
    types:
    - uid: boolean
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: kind
    description: Kind of the database
    types:
    - uid: ReadWrite
    typesTitle: string
  - name: systemData
    isReadyOnly: true
    description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
    types:
    - uid: systemData
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ReadOnlyFollowingDatabase
  description: Class representing a read only following database.
  kind: object
  properties:
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioned state of the resource.
    types:
    - uid: ResourceProvisioningState
  - name: properties.softDeletePeriod
    isReadyOnly: true
    description: The time the data should be kept before it stops being accessible to queries in TimeSpan.
    types:
    - uid: string
  - name: properties.hotCachePeriod
    description: The time the data should be kept in cache for fast queries in TimeSpan.
    types:
    - uid: string
  - name: properties.statistics
    isReadyOnly: true
    description: The statistics of the database.
    types:
    - uid: DatabaseStatistics
  - name: properties.leaderClusterResourceId
    isReadyOnly: true
    description: The name of the leader cluster
    types:
    - uid: string
  - name: properties.attachedDatabaseConfigurationName
    isReadyOnly: true
    description: The name of the attached database configuration cluster
    types:
    - uid: string
  - name: properties.principalsModificationKind
    isReadyOnly: true
    description: The principals modification kind of the database
    types:
    - uid: PrincipalsModificationKind
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: kind
    description: Kind of the database
    types:
    - uid: ReadOnlyFollowing
    typesTitle: string
  - name: systemData
    isReadyOnly: true
    description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
    types:
    - uid: systemData
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: ResourceProvisioningState
  description: The provisioned state of the resource.
  kind: enum
  properties:
  - name: Running
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Moving
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
- name: DatabaseStatistics
  description: A class that contains database statistics information.
  kind: object
  properties:
  - name: size
    description: The database size - the total size of compressed data and index in bytes.
    types:
    - uid: number
- name: PrincipalsModificationKind
  description: The principals modification kind of the database
  kind: enum
  properties:
  - name: Union
    types:
    - uid: string
  - name: Replace
    types:
    - uid: string
  - name: None
    types:
    - uid: string
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: KustoPoolDatabasesCreateOrUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Synapse/workspaces/synapseWorkspaceName/kustoPools/kustoclusterrptest4/databases/KustoDatabase8?api-version=2021-06-01-preview
    body: >-
      {
        "location": "westus",
        "kind": "ReadWrite",
        "properties": {
          "softDeletePeriod": "P1D"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Synapse/workspaces/synapseWorkspaceName/kustoPools/kustoclusterrptest4/databases/KustoDatabase8?api-version=2021-06-01-preview

      {
        "location": "westus",
        "kind": "ReadWrite",
        "properties": {
          "softDeletePeriod": "P1D"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.synapse.models.ReadWriteDatabase;
      import java.time.Duration;

      /** Samples for KustoPoolDatabases CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/preview/2021-06-01-preview/examples/KustoPoolDatabasesCreateOrUpdate.json
           */
          /**
           * Sample code: KustoPoolDatabasesCreateOrUpdate.
           *
           * @param manager Entry point to SynapseManager.
           */
          public static void kustoPoolDatabasesCreateOrUpdate(com.azure.resourcemanager.synapse.SynapseManager manager) {
              manager
                  .kustoPoolDatabases()
                  .createOrUpdate(
                      "kustorptest",
                      "synapseWorkspaceName",
                      "kustoclusterrptest4",
                      "KustoDatabase8",
                      new ReadWriteDatabase().withLocation("westus").withSoftDeletePeriod(Duration.parse("P1D")),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-synapse_1.0.0-beta.6/sdk/synapse/azure-resourcemanager-synapse/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armsynapse_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/synapse/armsynapse"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/synapse/resource-manager/Microsoft.Synapse/preview/2021-06-01-preview/examples/KustoPoolDatabasesCreateOrUpdate.json
      func ExampleKustoPoolDatabasesClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsynapse.NewKustoPoolDatabasesClient("12345678-1234-1234-1234-123456789098", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"kustorptest",
      		"synapseWorkspaceName",
      		"kustoclusterrptest4",
      		"KustoDatabase8",
      		&armsynapse.ReadWriteDatabase{
      			Kind:     to.Ptr(armsynapse.KindReadWrite),
      			Location: to.Ptr("westus"),
      			Properties: &armsynapse.ReadWriteDatabaseProperties{
      				SoftDeletePeriod: to.Ptr("P1D"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsynapse%2Farmsynapse%2Fv0.5.0/sdk/resourcemanager/synapse/armsynapse/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SynapseManagementClient } = require("@azure/arm-synapse");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a database.
       *
       * @summary Creates or updates a database.
       * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/preview/2021-06-01-preview/examples/KustoPoolDatabasesCreateOrUpdate.json
       */
      async function kustoPoolDatabasesCreateOrUpdate() {
        const subscriptionId = "12345678-1234-1234-1234-123456789098";
        const resourceGroupName = "kustorptest";
        const workspaceName = "synapseWorkspaceName";
        const kustoPoolName = "kustoclusterrptest4";
        const databaseName = "KustoDatabase8";
        const parameters = {
          kind: "ReadWrite",
          location: "westus",
          softDeletePeriod: "P1D",
        };
        const credential = new DefaultAzureCredential();
        const client = new SynapseManagementClient(credential, subscriptionId);
        const result = await client.kustoPoolDatabases.beginCreateOrUpdateAndWait(
          resourceGroupName,
          workspaceName,
          kustoPoolName,
          databaseName,
          parameters
        );
        console.log(result);
      }

      kustoPoolDatabasesCreateOrUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-synapse_8.1.0-beta.1/sdk/synapse/arm-synapse/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Synapse/workspaces/synapseWorkspaceName/kustopools/KustoClusterRPTest4/Databases/KustoDatabase8",
        "name": "KustoClusterRPTest4/KustoDatabase8",
        "type": "Microsoft.Synapse/workspaces/kustopools/Databases",
        "kind": "ReadWrite",
        "location": "westus",
        "properties": {
          "softDeletePeriod": "P1D",
          "provisioningState": "Succeeded"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Synapse/workspaces/synapseWorkspaceName/kustopools/KustoClusterRPTest4/Databases/KustoDatabase8",
        "name": "KustoClusterRPTest4/KustoDatabase8",
        "type": "Microsoft.Synapse/workspaces/kustopools/Databases",
        "location": "westus",
        "kind": "ReadWrite",
        "properties": {
          "softDeletePeriod": "P1D",
          "provisioningState": "Succeeded"
        }
      }
security: []
metadata:
  description: Learn more about Synapse service - Creates or updates a database.
errorCodes: []
