### YamlMime:RESTOperation
uid: management.azure.com.synapse.sqlpools.update
name: Update
service: Synapse
groupName: Sql Pools
apiVersion: 2021-06-01
summary: "Update SQL pool  \nApply a partial update to a SQL pool"
consumes: []
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}?api-version=2021-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: workspaceName
  in: path
  isRequired: true
  description: The name of the workspace.
  types:
  - uid: string
- name: sqlPoolName
  in: path
  isRequired: true
  description: SQL pool name
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: SqlPool
- name: 202 Accepted
  description: Accepted
- name: Other Status Codes
  description: ''
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    in: body
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: sku
    in: body
    description: "Sku  \nSQL pool SKU"
    types:
    - uid: Sku
  - name: properties.maxSizeBytes
    in: body
    description: Maximum size in bytes
    types:
    - uid: integer
  - name: properties.collation
    in: body
    description: Collation mode
    types:
    - uid: string
  - name: properties.sourceDatabaseId
    in: body
    description: Source database to create from
    types:
    - uid: string
  - name: properties.recoverableDatabaseId
    in: body
    description: Backup database to restore from
    types:
    - uid: string
  - name: properties.provisioningState
    in: body
    description: Resource state
    types:
    - uid: string
  - name: properties.restorePointInTime
    in: body
    description: Snapshot time to restore
    types:
    - uid: string
  - name: properties.createMode
    in: body
    description: >-
      Specifies the mode of sql pool creation.


      Default: regular sql pool creation.


      PointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.


      Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.


      Restore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.
    types:
    - uid: createMode
  - name: properties.storageAccountType
    in: body
    description: The storage account type used to store backups for this sql pool.
    types:
    - uid: StorageAccountType
  - name: properties.sourceDatabaseDeletionDate
    in: body
    description: Specifies the time that the sql pool was deleted
    types:
    - uid: string
requestHeader: []
definitions:
- name: Sku
  description: Sku
  kind: object
  properties:
  - name: tier
    description: The service tier
    types:
    - uid: string
  - name: name
    description: The SKU name
    types:
    - uid: string
  - name: capacity
    description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
    types:
    - uid: integer
- name: SqlPool
  description: SQL pool
  kind: object
  properties:
  - name: sku
    description: "Sku  \nSQL pool SKU"
    types:
    - uid: Sku
  - name: properties.maxSizeBytes
    description: Maximum size in bytes
    types:
    - uid: integer
  - name: properties.collation
    description: Collation mode
    types:
    - uid: string
    defaultValue: ''
  - name: properties.sourceDatabaseId
    description: Source database to create from
    types:
    - uid: string
  - name: properties.recoverableDatabaseId
    description: Backup database to restore from
    types:
    - uid: string
  - name: properties.provisioningState
    description: Resource state
    types:
    - uid: string
  - name: properties.status
    isReadyOnly: true
    description: Resource status
    types:
    - uid: string
  - name: properties.restorePointInTime
    description: Snapshot time to restore
    types:
    - uid: string
  - name: properties.createMode
    description: >-
      Specifies the mode of sql pool creation.


      Default: regular sql pool creation.


      PointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.


      Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.


      Restore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.
    types:
    - uid: createMode
  - name: properties.creationDate
    isReadyOnly: true
    description: Date the SQL pool was created
    types:
    - uid: string
  - name: properties.storageAccountType
    description: The storage account type used to store backups for this sql pool.
    types:
    - uid: StorageAccountType
    defaultValue: GRS
  - name: properties.sourceDatabaseDeletionDate
    description: Specifies the time that the sql pool was deleted
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: SqlPoolPatchInfo
  description: SQL pool patch info
  kind: object
  properties:
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: sku
    description: "Sku  \nSQL pool SKU"
    types:
    - uid: Sku
  - name: properties.maxSizeBytes
    description: Maximum size in bytes
    types:
    - uid: integer
  - name: properties.collation
    description: Collation mode
    types:
    - uid: string
    defaultValue: ''
  - name: properties.sourceDatabaseId
    description: Source database to create from
    types:
    - uid: string
  - name: properties.recoverableDatabaseId
    description: Backup database to restore from
    types:
    - uid: string
  - name: properties.provisioningState
    description: Resource state
    types:
    - uid: string
  - name: properties.status
    isReadyOnly: true
    description: Resource status
    types:
    - uid: string
  - name: properties.restorePointInTime
    description: Snapshot time to restore
    types:
    - uid: string
  - name: properties.createMode
    description: >-
      Specifies the mode of sql pool creation.


      Default: regular sql pool creation.


      PointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.


      Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.


      Restore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.
    types:
    - uid: createMode
  - name: properties.creationDate
    isReadyOnly: true
    description: Date the SQL pool was created
    types:
    - uid: string
  - name: properties.storageAccountType
    description: The storage account type used to store backups for this sql pool.
    types:
    - uid: StorageAccountType
    defaultValue: GRS
  - name: properties.sourceDatabaseDeletionDate
    description: Specifies the time that the sql pool was deleted
    types:
    - uid: string
- name: createMode
  description: >-
    Specifies the mode of sql pool creation.


    Default: regular sql pool creation.


    PointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.


    Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.


    Restore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.
  kind: enum
  properties:
  - name: Default
    types:
    - uid: string
  - name: PointInTimeRestore
    types:
    - uid: string
  - name: Recovery
    types:
    - uid: string
  - name: Restore
    types:
    - uid: string
- name: StorageAccountType
  description: The storage account type used to store backups for this sql pool.
  kind: enum
  properties:
  - name: GRS
    types:
    - uid: string
  - name: LRS
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Update a SQL Analytics pool
  request:
    uri: PATCH https://management.azure.com/subscriptions/01234567-89ab-4def-0123-456789abcdef/resourceGroups/ExampleResourceGroup/providers/Microsoft.Synapse/workspaces/ExampleWorkspace/sqlPools/ExampleSqlPool?api-version=2021-06-01
    body: >-
      {
        "location": "West US 2",
        "tags": {},
        "sku": {
          "tier": "",
          "name": ""
        },
        "properties": {
          "maxSizeBytes": 0,
          "collation": "",
          "restorePointInTime": "1970-01-01T00:00:00.000Z"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/01234567-89ab-4def-0123-456789abcdef/resourceGroups/ExampleResourceGroup/providers/Microsoft.Synapse/workspaces/ExampleWorkspace/sqlPools/ExampleSqlPool?api-version=2021-06-01

      {
        "location": "West US 2",
        "tags": {},
        "sku": {
          "tier": "",
          "name": ""
        },
        "properties": {
          "maxSizeBytes": 0,
          "collation": "",
          "restorePointInTime": "1970-01-01T00:00:00.000Z"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.synapse.models.Sku;
      import com.azure.resourcemanager.synapse.models.SqlPool;
      import java.time.OffsetDateTime;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for SqlPools Update. */
      public final class Main {
          /*
           * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/UpdateSqlPool.json
           */
          /**
           * Sample code: Update a SQL Analytics pool.
           *
           * @param manager Entry point to SynapseManager.
           */
          public static void updateASQLAnalyticsPool(com.azure.resourcemanager.synapse.SynapseManager manager) {
              SqlPool resource =
                  manager
                      .sqlPools()
                      .getWithResponse("ExampleResourceGroup", "ExampleWorkspace", "ExampleSqlPool", Context.NONE)
                      .getValue();
              resource
                  .update()
                  .withTags(mapOf())
                  .withSku(new Sku().withTier("").withName(""))
                  .withMaxSizeBytes(0L)
                  .withCollation("")
                  .withRestorePointInTime(OffsetDateTime.parse("1970-01-01T00:00:00.000Z"))
                  .apply();
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-synapse_1.0.0-beta.6/sdk/synapse/azure-resourcemanager-synapse/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armsynapse_test

      import (
      	"context"
      	"log"

      	"time"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/synapse/armsynapse"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/UpdateSqlPool.json
      func ExampleSQLPoolsClient_Update() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsynapse.NewSQLPoolsClient("01234567-89ab-4def-0123-456789abcdef", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Update(ctx,
      		"ExampleResourceGroup",
      		"ExampleWorkspace",
      		"ExampleSqlPool",
      		armsynapse.SQLPoolPatchInfo{
      			Location: to.Ptr("West US 2"),
      			Properties: &armsynapse.SQLPoolResourceProperties{
      				Collation:          to.Ptr(""),
      				MaxSizeBytes:       to.Ptr[int64](0),
      				RestorePointInTime: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "1970-01-01T00:00:00.000Z"); return t }()),
      			},
      			SKU: &armsynapse.SKU{
      				Name: to.Ptr(""),
      				Tier: to.Ptr(""),
      			},
      			Tags: map[string]*string{},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsynapse%2Farmsynapse%2Fv0.5.0/sdk/resourcemanager/synapse/armsynapse/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SynapseManagementClient } = require("@azure/arm-synapse");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Apply a partial update to a SQL pool
       *
       * @summary Apply a partial update to a SQL pool
       * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/UpdateSqlPool.json
       */
      async function updateASqlAnalyticsPool() {
        const subscriptionId = "01234567-89ab-4def-0123-456789abcdef";
        const resourceGroupName = "ExampleResourceGroup";
        const workspaceName = "ExampleWorkspace";
        const sqlPoolName = "ExampleSqlPool";
        const sqlPoolInfo = {
          collation: "",
          location: "West US 2",
          maxSizeBytes: 0,
          restorePointInTime: new Date("1970-01-01T00:00:00.000Z"),
          sku: { name: "", tier: "" },
          tags: {},
        };
        const credential = new DefaultAzureCredential();
        const client = new SynapseManagementClient(credential, subscriptionId);
        const result = await client.sqlPools.update(
          resourceGroupName,
          workspaceName,
          sqlPoolName,
          sqlPoolInfo
        );
        console.log(result);
      }

      updateASqlAnalyticsPool().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-synapse_8.1.0-beta.1/sdk/synapse/arm-synapse/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/01234567-89ab-4def-0123-456789abcdef/resourceGroups/ExampleResourceGroup/providers/Microsoft.Synapse/workspaces/ExampleWorkspaces/sqlPools/ExampleSqlPool",
        "type": "Microsoft.Synapse/workspaces/sqlPools",
        "name": "ExampleSqlPool",
        "location": "West US 2",
        "tags": {},
        "sku": {
          "tier": "",
          "name": ""
        },
        "properties": {
          "maxSizeBytes": 0,
          "collation": "",
          "recoverableDatabaseId": "",
          "provisioningState": "Provisioning",
          "status": "Paused",
          "restorePointInTime": "1970-01-01T00:00:00.000Z",
          "creationDate": "1970-01-01T00:00:00.000Z",
          "storageAccountType": "GRS"
        }
      }
  - statusCode: "202"
security: []
metadata:
  description: "Learn more about Synapse service - Update SQL pool  \nApply a partial update to a SQL pool"
errorCodes: []
