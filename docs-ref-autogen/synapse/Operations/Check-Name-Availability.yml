### YamlMime:RESTOperation
uid: management.azure.com.synapse.operations.checknameavailability
name: Check Name Availability
service: Synapse
groupName: Operations
apiVersion: 2021-06-01
summary: "Check name availability  \nCheck whether a workspace name is available"
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/checkNameAvailability?api-version=2021-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: ''
  types:
  - uid: CheckNameAvailabilityResponse
- name: Other Status Codes
  description: ''
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    description: Workspace name
    types:
    - uid: string
  - name: type
    in: body
    description: 'Type: workspace'
    types:
    - uid: string
requestHeader: []
definitions:
- name: CheckNameAvailabilityResponse
  description: Check name availability response
  kind: object
  properties:
  - name: message
    description: Validation message
    types:
    - uid: string
  - name: available
    description: Whether the workspace name is available
    types:
    - uid: boolean
  - name: reason
    description: Reason the workspace name is or is not available
    types:
    - uid: string
  - name: name
    description: Workspace name
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: CheckNameAvailabilityRequest
  description: Check name availability request
  kind: object
  properties:
  - name: name
    description: Workspace name
    types:
    - uid: string
  - name: type
    description: 'Type: workspace'
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Check for a workspace name that is available
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Synapse/checkNameAvailability?api-version=2021-06-01
    body: >-
      {
        "name": "workspace1",
        "type": "Microsoft.ProjectArcadia/workspaces"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Synapse/checkNameAvailability?api-version=2021-06-01

      {
        "name": "workspace1",
        "type": "Microsoft.ProjectArcadia/workspaces"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.synapse.models.CheckNameAvailabilityRequest;

      /** Samples for Operations CheckNameAvailability. */
      public final class Main {
          /*
           * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/CheckNameAvailabilityWorkspaceAvailable.json
           */
          /**
           * Sample code: Check for a workspace name that is available.
           *
           * @param manager Entry point to SynapseManager.
           */
          public static void checkForAWorkspaceNameThatIsAvailable(com.azure.resourcemanager.synapse.SynapseManager manager) {
              manager
                  .operations()
                  .checkNameAvailabilityWithResponse(
                      new CheckNameAvailabilityRequest()
                          .withName("workspace1")
                          .withType("Microsoft.ProjectArcadia/workspaces"),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-synapse_1.0.0-beta.6/sdk/synapse/azure-resourcemanager-synapse/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "workspace1",
        "available": true,
        "reason": null,
        "message": null
      }
  - statusCode: default
    body: >-
      {
        "error": {
          "code": "Error code",
          "message": "Error message"
        }
      }
- name: Check for a workspace name that already exists
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Synapse/checkNameAvailability?api-version=2021-06-01
    body: >-
      {
        "name": "workspace1",
        "type": "Microsoft.Synapse/workspaces"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Synapse/checkNameAvailability?api-version=2021-06-01

      {
        "name": "workspace1",
        "type": "Microsoft.Synapse/workspaces"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.synapse.models.CheckNameAvailabilityRequest;

      /** Samples for Operations CheckNameAvailability. */
      public final class Main {
          /*
           * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/CheckNameAvailabilityWorkspaceAlreadyExists.json
           */
          /**
           * Sample code: Check for a workspace name that already exists.
           *
           * @param manager Entry point to SynapseManager.
           */
          public static void checkForAWorkspaceNameThatAlreadyExists(
              com.azure.resourcemanager.synapse.SynapseManager manager) {
              manager
                  .operations()
                  .checkNameAvailabilityWithResponse(
                      new CheckNameAvailabilityRequest().withName("workspace1").withType("Microsoft.Synapse/workspaces"),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-synapse_1.0.0-beta.6/sdk/synapse/azure-resourcemanager-synapse/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armsynapse_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/synapse/armsynapse"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/CheckNameAvailabilityWorkspaceAlreadyExists.json
      func ExampleOperationsClient_CheckNameAvailability() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsynapse.NewOperationsClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CheckNameAvailability(ctx,
      		armsynapse.CheckNameAvailabilityRequest{
      			Name: to.Ptr("workspace1"),
      			Type: to.Ptr("Microsoft.Synapse/workspaces"),
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsynapse%2Farmsynapse%2Fv0.5.0/sdk/resourcemanager/synapse/armsynapse/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "workspace1",
        "available": false,
        "reason": "AlreadyExists",
        "message": "Specified workspace name is already used"
      }
  - statusCode: default
    body: >-
      {
        "error": {
          "code": "Error code",
          "message": "Error message"
        }
      }
security: []
metadata:
  description: "Learn more about Synapse service - Check name availability  \nCheck whether a workspace name is available"
errorCodes: []
