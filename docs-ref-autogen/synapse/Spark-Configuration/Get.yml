### YamlMime:RESTOperation
uid: management.azure.com.synapse.sparkconfiguration.get
name: Get
service: Synapse
groupName: Spark Configuration
apiVersion: 2021-06-01-preview
summary: Get SparkConfiguration by name in a workspace.
consumes: []
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sparkconfigurations/{sparkConfigurationName}?api-version=2021-06-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: workspaceName
  in: path
  isRequired: true
  description: The name of the workspace.
  types:
  - uid: string
- name: sparkConfigurationName
  in: path
  isRequired: true
  description: SparkConfiguration name
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK.
  types:
  - uid: SparkConfigurationResource
- name: Other Status Codes
  description: An error response received from the Azure Synapse service.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: SparkConfigurationResource
  description: SparkConfiguration response details
  kind: object
  properties:
  - name: properties.description
    description: Description about the SparkConfiguration.
    types:
    - uid: string
  - name: properties.configs
    description: SparkConfiguration configs.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.annotations
    description: Annotations for SparkConfiguration.
    types:
    - uid: string
      isArray: true
  - name: properties.notes
    description: additional Notes.
    types:
    - uid: string
  - name: properties.createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: properties.created
    description: The timestamp of resource creation.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: Resource Etag.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Get SparkConfiguration by name
  request:
    uri: GET https://management.azure.com/subscriptions/12345678-1234-1234-1234-12345678abc/resourceGroups/exampleResourceGroup/providers/Microsoft.Synapse/workspaces/exampleWorkspace/sparkconfigurations/exampleSparkConfigurationName?api-version=2021-06-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/12345678-1234-1234-1234-12345678abc/resourceGroups/exampleResourceGroup/providers/Microsoft.Synapse/workspaces/exampleWorkspace/sparkconfigurations/exampleSparkConfigurationName?api-version=2021-06-01-preview
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for SparkConfiguration Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/preview/2021-06-01-preview/examples/SparkConfiguration_Get.json
           */
          /**
           * Sample code: Get SparkConfiguration by name.
           *
           * @param manager Entry point to SynapseManager.
           */
          public static void getSparkConfigurationByName(com.azure.resourcemanager.synapse.SynapseManager manager) {
              manager
                  .sparkConfigurations()
                  .getWithResponse("exampleResourceGroup", "exampleSparkConfigurationName", "exampleWorkspace", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-synapse_1.0.0-beta.6/sdk/synapse/azure-resourcemanager-synapse/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armsynapse_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/synapse/armsynapse"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/synapse/resource-manager/Microsoft.Synapse/preview/2021-06-01-preview/examples/SparkConfiguration_Get.json
      func ExampleSparkConfigurationClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsynapse.NewSparkConfigurationClient("12345678-1234-1234-1234-12345678abc", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"exampleResourceGroup",
      		"exampleSparkConfigurationName",
      		"exampleWorkspace",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsynapse%2Farmsynapse%2Fv0.5.0/sdk/resourcemanager/synapse/armsynapse/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SynapseManagementClient } = require("@azure/arm-synapse");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Get SparkConfiguration by name in a workspace.
       *
       * @summary Get SparkConfiguration by name in a workspace.
       * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/preview/2021-06-01-preview/examples/SparkConfiguration_Get.json
       */
      async function getSparkConfigurationByName() {
        const subscriptionId = "12345678-1234-1234-1234-12345678abc";
        const resourceGroupName = "exampleResourceGroup";
        const sparkConfigurationName = "exampleSparkConfigurationName";
        const workspaceName = "exampleWorkspace";
        const credential = new DefaultAzureCredential();
        const client = new SynapseManagementClient(credential, subscriptionId);
        const result = await client.sparkConfiguration.get(
          resourceGroupName,
          sparkConfigurationName,
          workspaceName
        );
        console.log(result);
      }

      getSparkConfigurationByName().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-synapse_8.1.0-beta.1/sdk/synapse/arm-synapse/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    headers:
    - name: Date
      value: Wed, 23 Oct 2020 21:33:05 GMT
    - name: X-Content-Type-Options
      value: nosniff
    - name: x-ms-ratelimit-remaining-subscription-reads
      value: "14909"
    - name: x-ms-request-id
      value: f632df92-1140-4e19-9e19-0b1c8cbe393b
    - name: x-ms-correlation-request-id
      value: f632df92-1140-4e19-9e19-0b1c8cbe393b
    body: >-
      {
        "id": "/subscriptions/12345678-1234-1234-1234-12345678abc/resourceGroups/exampleResourceGroup/providers/Microsoft.Synapse/workspaces/exampleWorkspace/sparkconfigurations/exampleSparkConfigurationName",
        "name": "exampleSparkConfigurationName",
        "type": "Microsoft.Synapse/workspaces/sparkconfigurations",
        "properties": {
          "description": "test sparkconfiguration description",
          "configs": {
            "prop1": "true",
            "prop2": "true",
            "prop3": "123"
          },
          "annotations": [
            "testAnnotation1",
            "testAnnotation2"
          ],
          "notes": "testNotes",
          "createdBy": "test@microsoft.com",
          "created": "1970-01-01T00:00:00Z"
        },
        "etag": "1500474f-0000-0200-0000-5cbe090d0000"
      }
security: []
metadata:
  description: >
    Learn more about Synapse service - Get SparkConfiguration by name in a workspace.
errorCodes: []
