### YamlMime:RESTOperation
uid: management.azure.com.consumption.reservationtransactions.list
name: List
service: Consumption
groupName: Reservation Transactions
apiVersion: 2021-10-01
summary: 'List of transactions for reserved instances on billing account scope. Note: The refund transactions are posted along with its purchase transaction (i.e. in the purchase billing month). For example, The refund is requested in May 2021. This refund transaction will have event date as May 2021 but the billing month as April 2020 when the reservation purchase was made.'
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/reservationTransactions?api-version=2021-10-01
- content: GET https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/reservationTransactions?$filter={$filter}&api-version=2021-10-01
  isOptional: true
uriParameters:
- name: billingAccountId
  in: path
  isRequired: true
  description: BillingAccount ID
  types:
  - uid: string
- name: $filter
  in: query
  description: "Filter reservation transactions by date range. The properties/EventDate for start date and end date. The filter supports 'le' and  'ge'. Note: API returns data for the entire start date's and end date's billing month. For example, filter properties/eventDate+ge+2020-01-01+AND+properties/eventDate+le+2020-12-29 will include data for the entire December 2020 month (i.e. will contain records for dates December 30 and 31)"
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request. The current version is 2021-10-01.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK. The request has succeeded.
  types:
  - uid: ReservationTransactionsListResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: ReservationTransactionsListResult
  description: Result of listing reservation recommendations.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: The list of reservation recommendations.
    types:
    - uid: ReservationTransaction
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: The link (url) to the next page of results.
    types:
    - uid: string
- name: ErrorResponse
  description: "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. \n\nSome Error responses: \n\n * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header. \n\n * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header."
  kind: object
  properties:
  - name: error
    description: The details of the error.
    types:
    - uid: ErrorDetails
- name: ReservationTransaction
  description: Reservation transaction resource.
  kind: object
  properties:
  - name: properties.eventDate
    isReadyOnly: true
    description: The date of the transaction
    types:
    - uid: string
  - name: properties.reservationOrderId
    isReadyOnly: true
    description: The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.
    types:
    - uid: string
  - name: properties.description
    isReadyOnly: true
    description: The description of the transaction.
    types:
    - uid: string
  - name: properties.eventType
    isReadyOnly: true
    description: The type of the transaction (Purchase, Cancel or Refund).
    types:
    - uid: string
  - name: properties.quantity
    isReadyOnly: true
    description: The quantity of the transaction.
    types:
    - uid: number
  - name: properties.amount
    isReadyOnly: true
    description: The charge of the transaction.
    types:
    - uid: number
  - name: properties.currency
    isReadyOnly: true
    description: The ISO currency in which the transaction is charged, for example, USD.
    types:
    - uid: string
  - name: properties.reservationOrderName
    isReadyOnly: true
    description: The name of the reservation order.
    types:
    - uid: string
  - name: properties.purchasingEnrollment
    isReadyOnly: true
    description: The purchasing enrollment.
    types:
    - uid: string
  - name: properties.purchasingSubscriptionGuid
    isReadyOnly: true
    description: The subscription guid that makes the transaction.
    types:
    - uid: string
  - name: properties.purchasingSubscriptionName
    isReadyOnly: true
    description: The subscription name that makes the transaction.
    types:
    - uid: string
  - name: properties.armSkuName
    isReadyOnly: true
    description: This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.
    types:
    - uid: string
  - name: properties.term
    isReadyOnly: true
    description: This is the term of the transaction.
    types:
    - uid: string
  - name: properties.region
    isReadyOnly: true
    description: The region of the transaction.
    types:
    - uid: string
  - name: properties.accountName
    isReadyOnly: true
    description: The name of the account that makes the transaction.
    types:
    - uid: string
  - name: properties.accountOwnerEmail
    isReadyOnly: true
    description: The email of the account owner that makes the transaction.
    types:
    - uid: string
  - name: properties.departmentName
    isReadyOnly: true
    description: The department name.
    types:
    - uid: string
  - name: properties.costCenter
    isReadyOnly: true
    description: The cost center of this department if it is a department and a cost center is provided.
    types:
    - uid: string
  - name: properties.currentEnrollment
    isReadyOnly: true
    description: The current enrollment.
    types:
    - uid: string
  - name: properties.billingFrequency
    isReadyOnly: true
    description: The billing frequency, which can be either one-time or recurring.
    types:
    - uid: string
  - name: properties.billingMonth
    isReadyOnly: true
    description: The billing month(yyyyMMdd), on which the event initiated.
    types:
    - uid: integer
  - name: properties.monetaryCommitment
    isReadyOnly: true
    description: The monetary commitment amount at the enrollment scope.
    types:
    - uid: number
  - name: properties.overage
    isReadyOnly: true
    description: The overage amount at the enrollment scope.
    types:
    - uid: number
  - name: id
    isReadyOnly: true
    description: Resource Id.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: tags
    isReadyOnly: true
    description: Resource tags.
    types:
    - uid: string
      isArray: true
- name: ErrorDetails
  description: The details of the error.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Error message indicating why the operation failed.
    types:
    - uid: string
examples:
- name: ReservationTransactionsByEnrollmentNumber
  request:
    uri: GET https://management.azure.com/providers/Microsoft.Billing/billingAccounts/123456/providers/Microsoft.Consumption/reservationTransactions?$filter=properties/eventDate+ge+2020-05-20+AND+properties/eventDate+le+2020-05-30&api-version=2021-10-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/providers/Microsoft.Billing/billingAccounts/123456/providers/Microsoft.Consumption/reservationTransactions?$filter=properties/eventDate+ge+2020-05-20+AND+properties/eventDate+le+2020-05-30&api-version=2021-10-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for ReservationTransactions List. */
      public final class Main {
          /*
           * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ReservationTransactionsListByEnrollmentNumber.json
           */
          /**
           * Sample code: ReservationTransactionsByEnrollmentNumber.
           *
           * @param manager Entry point to ConsumptionManager.
           */
          public static void reservationTransactionsByEnrollmentNumber(
              com.azure.resourcemanager.consumption.ConsumptionManager manager) {
              manager
                  .reservationTransactions()
                  .list("123456", "properties/eventDate ge 2020-05-20 AND properties/eventDate le 2020-05-30", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-consumption_1.0.0-beta.3/sdk/consumption/azure-resourcemanager-consumption/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armconsumption_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/consumption/armconsumption"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ReservationTransactionsListByEnrollmentNumber.json
      func ExampleReservationTransactionsClient_NewListPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armconsumption.NewReservationTransactionsClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListPager("123456",
      		&armconsumption.ReservationTransactionsClientListOptions{Filter: to.Ptr("properties/eventDate+ge+2020-05-20+AND+properties/eventDate+le+2020-05-30")})
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fconsumption%2Farmconsumption%2Fv1.0.0/sdk/resourcemanager/consumption/armconsumption/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { ConsumptionManagementClient } = require("@azure/arm-consumption");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to List of transactions for reserved instances on billing account scope
       *
       * @summary List of transactions for reserved instances on billing account scope
       * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ReservationTransactionsListByEnrollmentNumber.json
       */
      async function reservationTransactionsByEnrollmentNumber() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const filter = "properties/eventDate ge 2020-05-20 AND properties/eventDate le 2020-05-30";
        const billingAccountId = "123456";
        const options = { filter };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.reservationTransactions.list(billingAccountId, options)) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      reservationTransactionsByEnrollmentNumber().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-consumption_9.0.1/sdk/consumption/arm-consumption/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/billingAccounts/123456/providers/Microsoft.Consumption/reservationtransactions/201909091919",
            "name": "201909091919",
            "type": "Microsoft.Consumption/reservationTransactions",
            "tags": [],
            "properties": {
              "eventDate": "2019-09-09T19:19:04Z",
              "reservationOrderId": "00000000-0000-0000-0000-000000000000",
              "description": "Standard_DS1_v2 westus 1 Year",
              "eventType": "Refund",
              "quantity": 1,
              "amount": -21,
              "currency": "USD",
              "reservationOrderName": "Transaction-DS1_v2",
              "purchasingEnrollment": "123456",
              "armSkuName": "Standard_DS1_v2",
              "term": "P1Y",
              "region": "westus",
              "purchasingSubscriptionGuid": "a838a8c3-a408-49e1-ac90-42cb95bff9b2",
              "purchasingSubscriptionName": "Infrastructure Subscription",
              "accountName": "Microsoft Infrastructure",
              "accountOwnerEmail": "admin@microsoft.com",
              "departmentName": "Unassigned",
              "costCenter": "",
              "currentEnrollment": "123456",
              "billingFrequency": "recurring",
              "billingMonth": 20190901,
              "monetaryCommitment": 523123.9,
              "overage": 23234.49
            }
          },
          {
            "id": "/billingAccounts/123456/providers/Microsoft.Consumption/reservationtransactions/201909091919",
            "name": "201909091919",
            "type": "Microsoft.Consumption/reservationTransactions",
            "tags": [],
            "properties": {
              "eventDate": "2019-09-09T19:19:04Z",
              "reservationOrderId": "00000000-0000-0000-0000-000000000000",
              "description": "Standard_DS1_v2 westus 1 Year",
              "eventType": "Purchase",
              "quantity": 1,
              "amount": 21,
              "currency": "USD",
              "reservationOrderName": "Transaction-DS1_v2",
              "purchasingEnrollment": "123456",
              "armSkuName": "Standard_DS1_v2",
              "term": "P1Y",
              "region": "westus",
              "purchasingSubscriptionGuid": "a838a8c3-a408-49e1-ac90-42cb95bff9b2",
              "purchasingSubscriptionName": "Infrastructure Subscription",
              "accountName": "Microsoft Infrastructure",
              "accountOwnerEmail": "admin@microsoft.com",
              "departmentName": "Unassigned",
              "costCenter": "",
              "currentEnrollment": "123456",
              "billingFrequency": "recurring",
              "billingMonth": 20190901,
              "monetaryCommitment": 523123.9,
              "overage": 23234.49
            }
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: 'List of transactions for reserved instances on billing account scope. Note: The refund transactions are posted along with its purchase transaction (i.'
errorCodes: []
