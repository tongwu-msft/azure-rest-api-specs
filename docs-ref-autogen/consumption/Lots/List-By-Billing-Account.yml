### YamlMime:RESTOperation
uid: management.azure.com.consumption.lots.listbybillingaccount
name: List By Billing Account
service: Consumption
groupName: Lots
apiVersion: 2021-10-01
summary: Lists all Microsoft Azure consumption commitments for a billing account. The API is only supported for Microsoft Customer Agreements (MCA) and Direct Enterprise Agreement (EA)  billing accounts.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/lots?api-version=2021-10-01
- content: GET https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/lots?api-version=2021-10-01&$filter={$filter}
  isOptional: true
uriParameters:
- name: billingAccountId
  in: path
  isRequired: true
  description: BillingAccount ID
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request. The current version is 2021-10-01.
  types:
  - uid: string
- name: $filter
  in: query
  description: May be used to filter the lots by Status, Source etc. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK. The request has succeeded.
  types:
  - uid: Lots
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: Lots
  description: Result of listing lot summary.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: The list of lot summary.
    types:
    - uid: LotSummary
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: The link (url) to the next page of results.
    types:
    - uid: string
- name: ErrorResponse
  description: "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. \n\nSome Error responses: \n\n * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header. \n\n * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header."
  kind: object
  properties:
  - name: error
    description: The details of the error.
    types:
    - uid: ErrorDetails
- name: LotSummary
  description: A lot summary resource.
  kind: object
  properties:
  - name: properties.originalAmount
    isReadyOnly: true
    description: The original amount of a lot.
    types:
    - uid: amount
  - name: properties.closedBalance
    isReadyOnly: true
    description: The balance as of the last invoice.
    types:
    - uid: amount
  - name: properties.source
    isReadyOnly: true
    description: The source of the lot.
    types:
    - uid: LotSource
  - name: properties.startDate
    isReadyOnly: true
    description: The date when the lot became effective.
    types:
    - uid: string
  - name: properties.expirationDate
    isReadyOnly: true
    description: The expiration date of a lot.
    types:
    - uid: string
  - name: properties.poNumber
    isReadyOnly: true
    description: The po number of the invoice on which the lot was added. This property is not available for ConsumptionCommitment lots.
    types:
    - uid: string
  - name: properties.purchasedDate
    isReadyOnly: true
    description: The date when the lot was added.
    types:
    - uid: string
  - name: properties.status
    isReadyOnly: true
    description: The status of the lot.
    types:
    - uid: Status
  - name: properties.creditCurrency
    isReadyOnly: true
    description: The currency of the lot.
    types:
    - uid: string
  - name: properties.billingCurrency
    isReadyOnly: true
    description: The billing currency of the lot.
    types:
    - uid: string
  - name: properties.originalAmountInBillingCurrency
    isReadyOnly: true
    description: The original amount of a lot in billing currency.
    types:
    - uid: AmountWithExchangeRate
  - name: properties.closedBalanceInBillingCurrency
    isReadyOnly: true
    description: The balance as of the last invoice in billing currency.
    types:
    - uid: AmountWithExchangeRate
  - name: properties.reseller
    isReadyOnly: true
    description: The reseller of the lot.
    types:
    - uid: Reseller
  - name: properties.eTag
    isReadyOnly: true
    description: The eTag for the resource.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource Id.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: eTag
    description: eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not.
    types:
    - uid: string
- name: ErrorDetails
  description: The details of the error.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Error message indicating why the operation failed.
    types:
    - uid: string
- name: amount
  description: The amount plus currency .
  kind: object
  properties:
  - name: currency
    isReadyOnly: true
    description: Amount currency.
    types:
    - uid: string
  - name: value
    isReadyOnly: true
    description: Amount.
    types:
    - uid: number
- name: LotSource
  description: The source of the lot.
  kind: enum
  properties:
  - name: PurchasedCredit
    types:
    - uid: string
  - name: PromotionalCredit
    types:
    - uid: string
  - name: ConsumptionCommitment
    types:
    - uid: string
- name: Status
  description: The status of the lot.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: Active
    types:
    - uid: string
  - name: Inactive
    types:
    - uid: string
  - name: Expired
    types:
    - uid: string
  - name: Complete
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
- name: AmountWithExchangeRate
  description: The amount with exchange rate.
  kind: object
  properties:
  - name: exchangeRate
    isReadyOnly: true
    description: The exchange rate.
    types:
    - uid: number
  - name: exchangeRateMonth
    isReadyOnly: true
    description: The exchange rate month.
    types:
    - uid: integer
  - name: currency
    isReadyOnly: true
    description: Amount currency.
    types:
    - uid: string
  - name: value
    isReadyOnly: true
    description: Amount.
    types:
    - uid: number
- name: Reseller
  description: The reseller properties.
  kind: object
  properties:
  - name: resellerId
    isReadyOnly: true
    description: The reseller property ID.
    types:
    - uid: string
  - name: resellerDescription
    isReadyOnly: true
    description: The reseller property description.
    types:
    - uid: string
examples:
- name: LotsListByBillingAccount
  request:
    uri: GET https://management.azure.com/providers/Microsoft.Billing/billingAccounts/1234:5678/providers/Microsoft.Consumption/lots?api-version=2021-10-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/providers/Microsoft.Billing/billingAccounts/1234:5678/providers/Microsoft.Consumption/lots?api-version=2021-10-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for LotsOperation ListByBillingAccount. */
      public final class Main {
          /*
           * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/LotsListByBillingAccount.json
           */
          /**
           * Sample code: LotsListByBillingAccount.
           *
           * @param manager Entry point to ConsumptionManager.
           */
          public static void lotsListByBillingAccount(com.azure.resourcemanager.consumption.ConsumptionManager manager) {
              manager.lotsOperations().listByBillingAccount("1234:5678", null, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-consumption_1.0.0-beta.3/sdk/consumption/azure-resourcemanager-consumption/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armconsumption_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/consumption/armconsumption"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/LotsListByBillingAccount.json
      func ExampleLotsClient_NewListByBillingAccountPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armconsumption.NewLotsClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListByBillingAccountPager("1234:5678",
      		&armconsumption.LotsClientListByBillingAccountOptions{Filter: nil})
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fconsumption%2Farmconsumption%2Fv1.0.0/sdk/resourcemanager/consumption/armconsumption/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { ConsumptionManagementClient } = require("@azure/arm-consumption");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Lists all Azure credits and Microsoft Azure consumption commitments for a billing account or a billing profile. Microsoft Azure consumption commitments are only supported for the billing account scope.
       *
       * @summary Lists all Azure credits and Microsoft Azure consumption commitments for a billing account or a billing profile. Microsoft Azure consumption commitments are only supported for the billing account scope.
       * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/LotsListByBillingAccount.json
       */
      async function lotsListByBillingAccount() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const billingAccountId = "1234:5678";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.lotsOperations.listByBillingAccount(billingAccountId)) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      lotsListByBillingAccount().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-consumption_9.0.1/sdk/consumption/arm-consumption/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/providers/Microsoft.Billing/billingAccounts/1234:5678/billingProfiles/2468/providers/Microsoft.Consumption/lots/lot1",
            "name": "lot1",
            "type": "Microsoft.Consumption/lots",
            "properties": {
              "originalAmount": {
                "currency": "USD",
                "value": 5000
              },
              "closedBalance": {
                "currency": "USD",
                "value": 60.9
              },
              "source": "ConsumptionCommitment",
              "startDate": "2019-10-01T00:00:00Z",
              "expirationDate": "2019-11-01T00:00:00Z",
              "purchasedDate": "2019-09-01T00:00:00Z",
              "status": "Active"
            }
          },
          {
            "id": "/providers/Microsoft.Billing/billingAccounts/1234:5678/billingProfiles/2468/providers/Microsoft.Consumption/lots/lot2",
            "name": "lot2",
            "type": "Microsoft.Consumption/lots",
            "properties": {
              "originalAmount": {
                "currency": "USD",
                "value": 6000
              },
              "closedBalance": {
                "currency": "USD",
                "value": 80.9
              },
              "source": "ConsumptionCommitment",
              "startDate": "2019-11-01T00:00:00Z",
              "expirationDate": "2019-12-31T00:00:00Z",
              "purchasedDate": "2019-09-01T00:00:00Z",
              "status": "Expired"
            }
          }
        ]
      }
- name: LotsListByBillingAccountWithStatusFilter
  request:
    uri: GET https://management.azure.com/providers/Microsoft.Billing/billingAccounts/1234:5678/providers/Microsoft.Consumption/lots?api-version=2021-10-01&$filter=status eq 'active' AND source eq 'consumptioncommitment'
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/providers/Microsoft.Billing/billingAccounts/1234:5678/providers/Microsoft.Consumption/lots?api-version=2021-10-01&$filter=status eq 'active' AND source eq 'consumptioncommitment'
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for LotsOperation ListByBillingAccount. */
      public final class Main {
          /*
           * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/LotsListByBillingAccountWithFilters.json
           */
          /**
           * Sample code: LotsListByBillingAccountWithStatusFilter.
           *
           * @param manager Entry point to ConsumptionManager.
           */
          public static void lotsListByBillingAccountWithStatusFilter(
              com.azure.resourcemanager.consumption.ConsumptionManager manager) {
              manager
                  .lotsOperations()
                  .listByBillingAccount(
                      "1234:5678", "status eq 'active' AND source eq 'consumptioncommitment'", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-consumption_1.0.0-beta.3/sdk/consumption/azure-resourcemanager-consumption/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { ConsumptionManagementClient } = require("@azure/arm-consumption");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Lists all Azure credits and Microsoft Azure consumption commitments for a billing account or a billing profile. Microsoft Azure consumption commitments are only supported for the billing account scope.
       *
       * @summary Lists all Azure credits and Microsoft Azure consumption commitments for a billing account or a billing profile. Microsoft Azure consumption commitments are only supported for the billing account scope.
       * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/LotsListByBillingAccountWithFilters.json
       */
      async function lotsListByBillingAccountWithStatusFilter() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const billingAccountId = "1234:5678";
        const filter = "status eq 'active' AND source eq 'consumptioncommitment'";
        const options = { filter };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.lotsOperations.listByBillingAccount(billingAccountId, options)) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      lotsListByBillingAccountWithStatusFilter().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-consumption_9.0.1/sdk/consumption/arm-consumption/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/providers/Microsoft.Billing/billingAccounts/1234:5678/billingProfiles/2468/providers/Microsoft.Consumption/lots/lot1",
            "name": "lot1",
            "type": "Microsoft.Consumption/lots",
            "properties": {
              "originalAmount": {
                "currency": "USD",
                "value": 5000
              },
              "closedBalance": {
                "currency": "USD",
                "value": 60.9
              },
              "source": "ConsumptionCommitment",
              "startDate": "2019-10-01T00:00:00Z",
              "expirationDate": "2019-11-01T00:00:00Z",
              "purchasedDate": "2019-09-01T00:00:00Z",
              "status": "Active"
            }
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Lists all Microsoft Azure consumption commitments for a billing account. The API is only supported for Microsoft Customer Agreements (MCA) and Direct Enterprise
errorCodes: []
