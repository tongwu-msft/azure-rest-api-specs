### YamlMime:RESTOperation
uid: management.azure.com.advisor.configurations.listbyresourcegroup
name: List By Resource Group
service: Advisor
groupName: Configurations
apiVersion: 2020-01-01
summary: Retrieve Azure Advisor configurations.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Advisor/configurations?api-version=2020-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The Azure subscription ID.
  types:
  - uid: string
- name: resourceGroup
  in: path
  isRequired: true
  description: The name of the Azure resource group.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK. Successfully retrieved zero or more configurations.
  types:
  - uid: ConfigurationListResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ArmErrorResponse
requestHeader: []
definitions:
- name: ConfigurationListResult
  description: The list of Advisor configurations.
  kind: object
  properties:
  - name: value
    description: The list of configurations.
    types:
    - uid: ConfigData
      isArray: true
  - name: nextLink
    description: The link used to get the next page of configurations.
    types:
    - uid: string
- name: ArmErrorResponse
  kind: object
  properties:
  - name: error
    description: ARM error response body.
    types:
    - uid: ARMErrorResponseBody
- name: ConfigData
  description: The Advisor configuration data structure.
  kind: object
  properties:
  - name: properties.exclude
    description: 'Exclude the resource from Advisor evaluations. Valid values: False (default) or True.'
    types:
    - uid: boolean
  - name: properties.lowCpuThreshold
    description: 'Minimum percentage threshold for Advisor low CPU utilization evaluation. Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20.'
    types:
    - uid: CpuThreshold
  - name: properties.digests
    description: Advisor digest configuration. Valid only for subscriptions
    types:
    - uid: DigestConfig
      isArray: true
  - name: id
    isReadyOnly: true
    description: The resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
- name: ARMErrorResponseBody
  description: ARM error response body.
  kind: object
  properties:
  - name: message
    description: Gets or sets the string that describes the error in detail and provides debugging information.
    types:
    - uid: string
  - name: code
    description: Gets or sets the string that can be used to programmatically identify the error.
    types:
    - uid: string
- name: CpuThreshold
  description: 'Minimum percentage threshold for Advisor low CPU utilization evaluation. Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20.'
  kind: enum
  properties:
  - name: "5"
    types:
    - uid: string
  - name: "10"
    types:
    - uid: string
  - name: "15"
    types:
    - uid: string
  - name: "20"
    types:
    - uid: string
- name: DigestConfig
  description: Advisor Digest configuration entity
  kind: object
  properties:
  - name: name
    description: Name of digest configuration. Value is case-insensitive and must be unique within a subscription.
    types:
    - uid: string
  - name: actionGroupResourceId
    description: Action group resource id used by digest.
    types:
    - uid: string
  - name: frequency
    description: Frequency that digest will be triggered, in days. Value must be between 7 and 30 days inclusive.
    types:
    - uid: integer
  - name: categories
    description: Categories to send digest for. If categories are not provided, then digest will be sent for all categories.
    types:
    - uid: string
      isArray: true
  - name: language
    description: Language for digest content body. Value must be ISO 639-1 code for one of Azure portal supported languages. Otherwise, it will be converted into one. Default value is English (en).
    types:
    - uid: string
  - name: state
    description: State of digest configuration.
    types:
    - uid: DigestConfigState
- name: DigestConfigState
  description: State of digest configuration.
  kind: enum
  properties:
  - name: Active
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
examples:
- name: GetConfigurations
  request:
    uri: GET https://management.azure.com/subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Advisor/configurations?api-version=2020-01-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Advisor/configurations?api-version=2020-01-01
      ```

      # [Go](#tab/Go)
      ``` go
      package armadvisor_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/advisor/armadvisor"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/advisor/resource-manager/Microsoft.Advisor/stable/2020-01-01/examples/ListConfigurations.json
      func ExampleConfigurationsClient_NewListByResourceGroupPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armadvisor.NewConfigurationsClient("subscriptionId", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListByResourceGroupPager("resourceGroup",
      		nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fadvisor%2Farmadvisor%2Fv1.0.0/sdk/resourcemanager/advisor/armadvisor/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AdvisorManagementClient } = require("@azure/arm-advisor");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Retrieve Azure Advisor configurations.
       *
       * @summary Retrieve Azure Advisor configurations.
       * x-ms-original-file: specification/advisor/resource-manager/Microsoft.Advisor/stable/2020-01-01/examples/ListConfigurations.json
       */
      async function getConfigurations() {
        const subscriptionId = "subscriptionId";
        const resourceGroup = "resourceGroup";
        const credential = new DefaultAzureCredential();
        const client = new AdvisorManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.configurations.listByResourceGroup(resourceGroup)) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      getConfigurations().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-advisor_3.0.1/sdk/advisor/arm-advisor/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Advisor/configurations/default",
            "type": "Microsoft.Advisor/configurations",
            "name": "default",
            "properties": {
              "lowCpuThreshold": "5",
              "exclude": false,
              "digests": [
                {
                  "name": "digestConfigName",
                  "actionGroupResourceId": "/subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/microsoft.insights/actionGroups/actionGroupName",
                  "frequency": 30,
                  "categories": [
                    "HighAvailability",
                    "Security",
                    "Performance",
                    "Cost",
                    "OperationalExcellence"
                  ],
                  "language": "en",
                  "state": "Active"
                }
              ]
            }
          }
        ],
        "nextLink": "string"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Advisor service - Retrieve Azure Advisor configurations.
errorCodes: []
