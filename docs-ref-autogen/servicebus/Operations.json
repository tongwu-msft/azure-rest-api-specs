{
  "swagger": "2.0",
  "info": {
    "version": "2015-08-01",
    "title": "ServiceBusManagementClient",
    "description": "Azure Service Bus client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.ServiceBus/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "OperationsList": {
            "parameters": {
              "api-version": "2016-07-01"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "name": "Microsoft.ServiceBus/checkNameAvailability/action",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Non Resource Operation",
                        "operation": "Get namespace availability.",
                        "description": "Checks availability of namespace under given subscription."
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/register/action",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "ServiceBus Resource Provider",
                        "operation": "Registers the ServiceBus Resource Provider",
                        "description": "Registers the subscription for the ServiceBus resource provider and enables the creation of ServiceBus resources"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/write",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Namespace",
                        "operation": "Create Or Update Namespace ",
                        "description": "Create a Namespace Resource and Update its properties. Tags and status of the Namespace are the properties which can be updated."
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/read",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Namespace",
                        "operation": "Get Namespace Resource",
                        "description": "Get the list of Namespace Resource Description"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/Delete",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Namespace",
                        "operation": "Delete Namespace",
                        "description": "Delete Namespace Resource"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/authorizationRules/write",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "AuthorizationRules",
                        "operation": "Create or Update Namespace Authorization Rules",
                        "description": "Create a Namespace level Authorization Rules and update its properties. The Authorization Rules Access Rights, the Primary and Secondary Keys can be updated."
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/authorizationRules/read",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "AuthorizationRules",
                        "operation": "Get Namespace Authorization Rules",
                        "description": "Get the list of Namespaces Authorization Rules description."
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/authorizationRules/delete",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "AuthorizationRules",
                        "operation": "Delete Namespace Authorization Rule",
                        "description": "Delete Namespace Authorization Rule. The Default Namespace Authorization Rule cannot be deleted. "
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/authorizationRules/listkeys/action",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "AuthorizationRules",
                        "operation": "Get Namespace Listkeys",
                        "description": "Get the Connection String to the Namespace"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/authorizationRules/regenerateKeys/action",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "AuthorizationRules",
                        "operation": "Resource Regeneratekeys",
                        "description": "Regenerate the Primary or Secondary key to the Resource"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/queues/write",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Queue",
                        "operation": "Create or Update Queue",
                        "description": "Create or Update Queue properties."
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/queues/read",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Queue",
                        "operation": "Get Queue",
                        "description": "Get list of Queue Resource Descriptions"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/queues/Delete",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Queue",
                        "operation": "Delete Queue",
                        "description": "Operation to delete Queue Resource"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/queues/authorizationRules/write",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Queue AuthorizationRules",
                        "operation": "Create or Update Queue Authorization Rule",
                        "description": "Create Queue Authorization Rules and Update its properties. The Authorization Rules Access Rights, the Primary and Secondary Keys can be updated."
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/queues/authorizationRules/read",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Queue AuthorizationRules",
                        "operation": " Get Queue Authorization Rules",
                        "description": " Get the list of Queue Authorization Rules"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/queues/authorizationRules/delete",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Queue AuthorizationRules",
                        "operation": "Delete Queue Authorization Rules",
                        "description": "Operation to delete Queue Authorization Rules"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/queues/authorizationRules/listkeys/action",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Queue AuthorizationRules",
                        "operation": "List Queue keys",
                        "description": "Get the Connection String to Queue"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/queues/authorizationRules/regenerateKeys/action",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Queue AuthorizationRules",
                        "operation": "Resource Regeneratekeys",
                        "description": "Regenerate the Primary or Secondary key to the Resource"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/write",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Topic",
                        "operation": "Create or Update Topic",
                        "description": "Create or Update Topic properties."
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/read",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Topic",
                        "operation": "Get Topic",
                        "description": "Get list of Topic Resource Descriptions"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/Delete",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Topic",
                        "operation": "Delete Topic",
                        "description": "Operation to delete Topic Resource"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/authorizationRules/write",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Topic AuthorizationRules",
                        "operation": "Create or Update Topic Authorization Rule",
                        "description": "Create Topic Authorization Rules and Update its properties. The Authorization Rules Access Rights, the Primary and Secondary Keys can be updated."
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/authorizationRules/read",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Topic AuthorizationRules",
                        "operation": " Get Topic Authorization Rules",
                        "description": " Get the list of Topic Authorization Rules"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/authorizationRules/delete",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Topic AuthorizationRules",
                        "operation": "Delete Topic Authorization Rules",
                        "description": "Operation to delete Topic Authorization Rules"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/authorizationRules/listkeys/action",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Topic AuthorizationRules",
                        "operation": "List Topic keys",
                        "description": "Get the Connection String to Topic"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/authorizationRules/regenerateKeys/action",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Topic AuthorizationRules",
                        "operation": "Resource Regeneratekeys",
                        "description": "Regenerate the Primary or Secondary key to the Resource"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/subscriptions/write",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "TopicSubscription",
                        "operation": "Create or Update TopicSubscription",
                        "description": "Create or Update TopicSubscription properties."
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/subscriptions/read",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "TopicSubscription",
                        "operation": "Get TopicSubscription",
                        "description": "Get list of TopicSubscription Resource Descriptions"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/subscriptions/Delete",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "TopicSubscription",
                        "operation": "Delete TopicSubscription",
                        "description": "Operation to delete TopicSubscription Resource"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules/write",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Rule",
                        "operation": "Create or Update Rule",
                        "description": "Create or Update Rule properties."
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules/read",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Rule",
                        "operation": "Get Rule",
                        "description": "Get list of Rule Resource Descriptions"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules/Delete",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Rule",
                        "operation": "Delete Rule",
                        "description": "Operation to delete Rule Resource"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/metricDefinitions/read",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Namespace metrics",
                        "operation": "Get Namespace metrics",
                        "description": "Get list of Namespace metrics Resource Descriptions"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/diagnosticSettings/read",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Namespace diagnostic settings",
                        "operation": "Get Namespace diagnostic settings",
                        "description": "Get list of Namespace diagnostic settings Resource Descriptions"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/diagnosticSettings/write",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Namespace diagnostic settings",
                        "operation": "Create or Update Namespace diagnostic settings",
                        "description": "Get list of Namespace diagnostic settings Resource Descriptions"
                      }
                    },
                    {
                      "name": "Microsoft.ServiceBus/namespaces/logDefinitions/read",
                      "display": {
                        "provider": "Microsoft Azure ServiceBus",
                        "resource": "Namespace logs",
                        "operation": "Get Namespace logs",
                        "description": "Get list of Namespace logs Resource Descriptions"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Lists all of the available ServiceBus REST API operations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "TrackedResource": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "location"
      ],
      "description": "The Resource definition."
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        }
      },
      "x-ms-azure-resource": true,
      "description": "The Resource definition for other than namespace."
    },
    "NamespaceCreateOrUpdateParameters": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Namespace location."
        },
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Namespace tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NamespaceProperties"
        }
      },
      "required": [
        "location"
      ],
      "description": "Parameters supplied to the Create Or Update Namespace operation."
    },
    "NamespaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamespaceResource"
          },
          "description": "Result of the List Namespace operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces."
        }
      },
      "description": "The response of the List Namespace operation."
    },
    "NamespaceResource": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NamespaceProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Description of a namespace resource."
    },
    "NamespaceProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Provisioning state of the namespace."
        },
        "status": {
          "type": "string",
          "description": "State of the namespace.",
          "enum": [
            "Unknown",
            "Creating",
            "Created",
            "Activating",
            "Enabling",
            "Active",
            "Disabling",
            "Disabled",
            "SoftDeleting",
            "SoftDeleted",
            "Removing",
            "Removed",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "NamespaceState",
            "modelAsString": false
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the namespace was created."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the namespace was updated."
        },
        "serviceBusEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "Endpoint you can use to perform Service Bus operations."
        },
        "createACSNamespace": {
          "type": "boolean",
          "description": "Indicates whether to create an ACS namespace."
        },
        "enabled": {
          "type": "boolean",
          "description": "Specifies whether this instance is enabled."
        }
      },
      "description": "Properties of the namespace."
    },
    "NamespaceUpdateParameters": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The sku of the created namespace"
        }
      },
      "description": "Parameters supplied to the Patch Namespace operation."
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this SKU.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "The billing tier of this particular SKU.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "format": "int32",
          "type": "integer",
          "description": "The specified messaging units for the tier."
        }
      },
      "required": [
        "tier"
      ],
      "description": "SKU of the namespace."
    },
    "SharedAccessAuthorizationRuleCreateOrUpdateParameters": {
      "properties": {
        "location": {
          "type": "string",
          "description": "data center location."
        },
        "name": {
          "type": "string",
          "description": "Name of the authorization rule."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
        }
      },
      "description": "Parameters supplied to the Create Or Update Authorization Rules operation."
    },
    "SharedAccessAuthorizationRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
          },
          "description": "Result of the List Authorization Rules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Authorization Rules."
        }
      },
      "description": "The response to the List Namespace operation."
    },
    "SharedAccessAuthorizationRuleResource": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of a namespace authorization rule."
    },
    "SharedAccessAuthorizationRuleProperties": {
      "properties": {
        "rights": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Manage",
              "Send",
              "Listen"
            ],
            "x-ms-enum": {
              "name": "AccessRights",
              "modelAsString": false
            }
          },
          "description": "The rights associated with the rule."
        }
      },
      "required": [
        "rights"
      ],
      "description": "SharedAccessAuthorizationRule properties."
    },
    "ResourceListKeys": {
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "description": "Primary connection string of the created namespace authorization rule."
        },
        "secondaryConnectionString": {
          "type": "string",
          "description": "Secondary connection string of the created namespace authorization rule."
        },
        "primaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
        },
        "secondaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
        },
        "keyName": {
          "type": "string",
          "description": "A string that describes the authorization rule."
        }
      },
      "description": "Namespace/ServiceBus Connection String"
    },
    "RegenerateKeysParameters": {
      "properties": {
        "Policykey": {
          "type": "string",
          "description": "Key that needs to be regenerated.",
          "enum": [
            "PrimaryKey",
            "SecondaryKey"
          ],
          "x-ms-enum": {
            "name": "Policykey",
            "modelAsString": false
          }
        }
      },
      "description": "Parameters supplied to the Regenerate Authorization Rule operation."
    },
    "QueueCreateOrUpdateParameters": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Queue name."
        },
        "location": {
          "type": "string",
          "description": "location of the resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/QueueProperties"
        }
      },
      "required": [
        "location"
      ],
      "description": "Parameters supplied to the Create Or Update Queue operation."
    },
    "QueueListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueueResource"
          },
          "description": "Result of the List Queues operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of queues."
        }
      },
      "description": "The response to the List Queues operation."
    },
    "QueueResource": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/QueueProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of queue Resource."
    },
    "QueueProperties": {
      "properties": {
        "lockDuration": {
          "type": "string",
          "description": "The duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute."
        },
        "accessedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Last time a message was sent, or the last time there was a receive request to this queue."
        },
        "autoDeleteOnIdle": {
          "type": "string",
          "description": "the TimeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes."
        },
        "entityAvailabilityStatus": {
          "$ref": "#/definitions/EntityAvailabilityStatus",
          "description": "Entity availability status for the queue."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The exact time the message was created."
        },
        "defaultMessageTimeToLive": {
          "type": "string",
          "description": "The default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
        },
        "duplicateDetectionHistoryTimeWindow": {
          "type": "string",
          "description": "TimeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
        },
        "enableBatchedOperations": {
          "type": "boolean",
          "description": "A value that indicates whether server-side batched operations are enabled."
        },
        "deadLetteringOnMessageExpiration": {
          "type": "boolean",
          "description": "A value that indicates whether this queue has dead letter support when a message expires."
        },
        "enableExpress": {
          "type": "boolean",
          "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage."
        },
        "enablePartitioning": {
          "type": "boolean",
          "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers."
        },
        "isAnonymousAccessible": {
          "type": "boolean",
          "description": "A value that indicates whether the message is accessible anonymously."
        },
        "maxDeliveryCount": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries."
        },
        "maxSizeInMegabytes": {
          "format": "int64",
          "type": "integer",
          "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue."
        },
        "messageCount": {
          "format": "int64",
          "type": "integer",
          "readOnly": true,
          "description": "The number of messages in the queue."
        },
        "countDetails": {
          "readOnly": true,
          "$ref": "#/definitions/MessageCountDetails"
        },
        "requiresDuplicateDetection": {
          "type": "boolean",
          "description": "A value indicating if this queue requires duplicate detection."
        },
        "requiresSession": {
          "type": "boolean",
          "description": "A value that indicates whether the queue supports the concept of sessions."
        },
        "sizeInBytes": {
          "format": "int64",
          "type": "integer",
          "readOnly": true,
          "description": "The size of the queue, in bytes."
        },
        "status": {
          "$ref": "#/definitions/EntityStatus",
          "description": "Enumerates the possible values for the status of a messaging entity."
        },
        "supportOrdering": {
          "type": "boolean",
          "description": "A value that indicates whether the queue supports ordering."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The exact time the message was updated."
        }
      },
      "description": "The Queue Properties definition."
    },
    "MessageCountDetails": {
      "type": "object",
      "properties": {
        "activeMessageCount": {
          "format": "int64",
          "type": "integer",
          "readOnly": true,
          "description": "Number of active messages in the queue, topic, or subscription."
        },
        "deadLetterMessageCount": {
          "format": "int64",
          "type": "integer",
          "readOnly": true,
          "description": "Number of messages that are dead lettered."
        },
        "scheduledMessageCount": {
          "format": "int64",
          "type": "integer",
          "readOnly": true,
          "description": "Number of scheduled messages."
        },
        "transferDeadLetterMessageCount": {
          "format": "int64",
          "type": "integer",
          "readOnly": true,
          "description": "Number of messages transferred into dead letters."
        },
        "transferMessageCount": {
          "format": "int64",
          "type": "integer",
          "readOnly": true,
          "description": "Number of messages transferred to another queue, topic, or subscription."
        }
      },
      "description": "Message Count Details."
    },
    "TopicCreateOrUpdateParameters": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Topic name."
        },
        "location": {
          "type": "string",
          "description": "Location of the resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TopicProperties"
        }
      },
      "required": [
        "location"
      ],
      "description": "Parameters supplied to the Create Or Update Topic operation."
    },
    "TopicListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopicResource"
          },
          "description": "Result of the List Topics operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of topics."
        }
      },
      "description": "The response to the List Topics operation."
    },
    "TopicResource": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TopicProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of topic resource."
    },
    "TopicProperties": {
      "properties": {
        "accessedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Last time the message was sent, or a request was received, for this topic."
        },
        "autoDeleteOnIdle": {
          "type": "string",
          "description": "TimeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
        },
        "entityAvailabilityStatus": {
          "$ref": "#/definitions/EntityAvailabilityStatus",
          "description": "Entity availability status for the topic."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Exact time the message was created."
        },
        "countDetails": {
          "readOnly": true,
          "$ref": "#/definitions/MessageCountDetails"
        },
        "defaultMessageTimeToLive": {
          "type": "string",
          "description": "Default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
        },
        "duplicateDetectionHistoryTimeWindow": {
          "type": "string",
          "description": "TimeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
        },
        "enableBatchedOperations": {
          "type": "boolean",
          "description": "Value that indicates whether server-side batched operations are enabled."
        },
        "enableExpress": {
          "type": "boolean",
          "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage."
        },
        "enablePartitioning": {
          "type": "boolean",
          "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled."
        },
        "enableSubscriptionPartitioning": {
          "type": "boolean",
          "description": "Value that indicates whether partitioning is enabled or disabled."
        },
        "filteringMessagesBeforePublishing": {
          "type": "boolean",
          "description": "Whether messages should be filtered before publishing."
        },
        "isAnonymousAccessible": {
          "type": "boolean",
          "description": "Value that indicates whether the message is accessible anonymously."
        },
        "isExpress": {
          "type": "boolean",
          "description": ""
        },
        "maxSizeInMegabytes": {
          "format": "int64",
          "type": "integer",
          "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic."
        },
        "requiresDuplicateDetection": {
          "type": "boolean",
          "description": "Value indicating if this topic requires duplicate detection."
        },
        "sizeInBytes": {
          "format": "int64",
          "type": "integer",
          "readOnly": true,
          "description": "Size of the topic, in bytes."
        },
        "status": {
          "$ref": "#/definitions/EntityStatus",
          "description": "Enumerates the possible values for the status of a messaging entity."
        },
        "subscriptionCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "Number of subscriptions."
        },
        "supportOrdering": {
          "type": "boolean",
          "description": "Value that indicates whether the topic supports ordering."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The exact time the message was updated."
        }
      },
      "description": "The Tpoic Properties definition."
    },
    "SubscriptionCreateOrUpdateParameters": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Subscription data center location."
        },
        "type": {
          "type": "string",
          "description": "Resource manager type of the resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SubscriptionProperties"
        }
      },
      "required": [
        "location"
      ],
      "description": "Parameters supplied to the Create Or Update Subscription operation."
    },
    "SubscriptionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionResource"
          },
          "description": "Result of the List Subscriptions operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of subscriptions."
        }
      },
      "description": "The response to the List Subscriptions operation."
    },
    "SubscriptionResource": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SubscriptionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of subscription resource."
    },
    "SubscriptionProperties": {
      "properties": {
        "accessedAt": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Last time there was a receive request to this subscription."
        },
        "autoDeleteOnIdle": {
          "type": "string",
          "description": "TimeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
        },
        "countDetails": {
          "readOnly": true,
          "$ref": "#/definitions/MessageCountDetails"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Exact time the message was created."
        },
        "defaultMessageTimeToLive": {
          "type": "string",
          "description": "Default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
        },
        "deadLetteringOnFilterEvaluationExceptions": {
          "type": "boolean",
          "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions."
        },
        "deadLetteringOnMessageExpiration": {
          "type": "boolean",
          "description": "Value that indicates whether a subscription has dead letter support when a message expires."
        },
        "enableBatchedOperations": {
          "type": "boolean",
          "description": "Value that indicates whether server-side batched operations are enabled."
        },
        "entityAvailabilityStatus": {
          "$ref": "#/definitions/EntityAvailabilityStatus",
          "description": "Entity availability status for the topic."
        },
        "isReadOnly": {
          "type": "boolean",
          "description": "Value that indicates whether the entity description is read-only."
        },
        "lockDuration": {
          "type": "string",
          "description": "The lock duration time span for the subscription."
        },
        "maxDeliveryCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of maximum deliveries."
        },
        "messageCount": {
          "format": "int64",
          "type": "integer",
          "readOnly": true,
          "description": "Number of messages."
        },
        "requiresSession": {
          "type": "boolean",
          "description": "Value indicating if a subscription supports the concept of sessions."
        },
        "status": {
          "$ref": "#/definitions/EntityStatus",
          "description": "Enumerates the possible values for the status of a messaging entity."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The exact time the message was updated."
        }
      },
      "description": "Description of Subscription Resource."
    },
    "EntityAvailabilityStatus": {
      "type": "string",
      "enum": [
        "Available",
        "Limited",
        "Renaming",
        "Restoring",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "EntityAvailabilityStatus",
        "modelAsString": false
      },
      "description": "Entity availability status."
    },
    "EntityStatus": {
      "type": "string",
      "enum": [
        "Active",
        "Creating",
        "Deleting",
        "Disabled",
        "ReceiveDisabled",
        "Renaming",
        "Restoring",
        "SendDisabled",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "EntityStatus",
        "modelAsString": false
      },
      "description": "Entity status."
    },
    "UnavailableReason": {
      "type": "string",
      "enum": [
        "None",
        "InvalidName",
        "SubscriptionIsDisabled",
        "NameInUse",
        "NameInLockdown",
        "TooManyNamespaceInCurrentSubscription"
      ],
      "x-ms-enum": {
        "name": "UnavailableReason",
        "modelAsString": true
      },
      "description": "Specifies the reason for the unavailability of the service."
    },
    "CheckNameAvailability": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The Name to check the namespce name availability and The namespace name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number."
        }
      },
      "required": [
        "name"
      ],
      "description": "Description of a Check Name availability request properties."
    },
    "CheckNameAvailabilityResult": {
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Value indicating namespace is availability, true if the namespace is available; otherwise, false."
        },
        "reason": {
          "$ref": "#/definitions/UnavailableReason",
          "description": "The reason for unavailability of a namespace."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "The detailed info regarding the reason associated with the namespace."
        }
      },
      "description": "Description of a Check Name availability request properties."
    },
    "OperationListResult": {
      "description": "Result of the request to list ServiceBus operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "List of ServiceBus operations supported by the Microsoft.ServiceBus resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of operation list results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Operation": {
      "description": "A ServiceBus REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string",
          "readOnly": true
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft.ServiceBus",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "Resource on which the operation is performed: Invoice, etc.",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "Operation type: Read, write, delete, etc.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "Name of the Resource group within the Azure subscription."
    },
    "namespaceNameParameter": {
      "name": "namespaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 6,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The namespace name"
    },
    "authorizationRuleNameParameter": {
      "name": "authorizationRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The authorizationrule name."
    },
    "queueNameParameter": {
      "name": "queueName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The queue name."
    },
    "topicNameParameter": {
      "name": "topicName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The topic name."
    },
    "subscriptionNameParameter": {
      "name": "subscriptionName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The subscription name."
    }
  },
  "x-internal-service-name": "Service Bus",
  "x-internal-toc-name": "Operations"
}