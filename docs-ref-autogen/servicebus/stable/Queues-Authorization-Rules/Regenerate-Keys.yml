### YamlMime:RESTOperation
uid: management.azure.com.servicebus.stable.queues-authorizationrules.regeneratekeys
name: Regenerate Keys
service: Service Bus
groupName: Queues - Authorization Rules
apiVersion: 2021-11-01
summary: Regenerates the primary or secondary connection strings to the queue.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}/regenerateKeys?api-version=2021-11-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the Resource group within the Azure subscription.
  types:
  - uid: string
- name: namespaceName
  in: path
  isRequired: true
  description: The namespace name
  types:
  - uid: string
- name: queueName
  in: path
  isRequired: true
  description: The queue name.
  types:
  - uid: string
- name: authorizationRuleName
  in: path
  isRequired: true
  description: The authorization rule name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Connection strings successfully regenerated.
  types:
  - uid: AccessKeys
- name: Other Status Codes
  description: ServiceBus error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: keyType
    in: body
    isRequired: true
    description: The access key to regenerate.
    types:
    - uid: KeyType
  - name: key
    in: body
    description: Optional, if the key value provided, is reset for KeyType value or autogenerate Key value set for keyType
    types:
    - uid: string
requestHeader: []
definitions:
- name: AccessKeys
  description: Namespace/ServiceBus Connection String
  kind: object
  properties:
  - name: primaryConnectionString
    isReadyOnly: true
    description: Primary connection string of the created namespace authorization rule.
    types:
    - uid: string
  - name: secondaryConnectionString
    isReadyOnly: true
    description: Secondary connection string of the created namespace authorization rule.
    types:
    - uid: string
  - name: aliasPrimaryConnectionString
    isReadyOnly: true
    description: Primary connection string of the alias if GEO DR is enabled
    types:
    - uid: string
  - name: aliasSecondaryConnectionString
    isReadyOnly: true
    description: Secondary  connection string of the alias if GEO DR is enabled
    types:
    - uid: string
  - name: primaryKey
    isReadyOnly: true
    description: A base64-encoded 256-bit primary key for signing and validating the SAS token.
    types:
    - uid: string
  - name: secondaryKey
    isReadyOnly: true
    description: A base64-encoded 256-bit primary key for signing and validating the SAS token.
    types:
    - uid: string
  - name: keyName
    isReadyOnly: true
    description: A string that describes the authorization rule.
    types:
    - uid: string
- name: ErrorResponse
  description: The resource management error response.
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: Error
- name: RegenerateAccessKeyParameters
  description: Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset.
  kind: object
  properties:
  - name: keyType
    description: The access key to regenerate.
    types:
    - uid: KeyType
  - name: key
    description: Optional, if the key value provided, is reset for KeyType value or autogenerate Key value set for keyType
    types:
    - uid: string
- name: Error
  description: The error object.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: KeyType
  description: The access key to regenerate.
  kind: enum
  properties:
  - name: PrimaryKey
    types:
    - uid: string
  - name: SecondaryKey
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: QueueAuthorizationRuleRegenerateKey
  request:
    uri: POST https://management.azure.com/subscriptions/5f750a97-50d9-4e36-8081-c9ee4c0210d4/resourceGroups/ArunMonocle/providers/Microsoft.ServiceBus/namespaces/sdk-namespace-7982/queues/sdk-Queues-2317/authorizationRules/sdk-AuthRules-5800/regenerateKeys?api-version=2021-11-01
    body: >-
      {
        "keyType": "PrimaryKey"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/5f750a97-50d9-4e36-8081-c9ee4c0210d4/resourceGroups/ArunMonocle/providers/Microsoft.ServiceBus/namespaces/sdk-namespace-7982/queues/sdk-Queues-2317/authorizationRules/sdk-AuthRules-5800/regenerateKeys?api-version=2021-11-01

      {
        "keyType": "PrimaryKey"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.servicebus.models.KeyType;
      import com.azure.resourcemanager.servicebus.models.RegenerateAccessKeyParameters;

      /** Samples for Queues RegenerateKeys. */
      public final class Main {
          /*
           * x-ms-original-file: specification/servicebus/resource-manager/Microsoft.ServiceBus/stable/2021-11-01/examples/Queues/SBQueueAuthorizationRuleRegenerateKey.json
           */
          /**
           * Sample code: QueueAuthorizationRuleRegenerateKey.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void queueAuthorizationRuleRegenerateKey(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .serviceBusNamespaces()
                  .manager()
                  .serviceClient()
                  .getQueues()
                  .regenerateKeysWithResponse(
                      "ArunMonocle",
                      "sdk-namespace-7982",
                      "sdk-Queues-2317",
                      "sdk-AuthRules-5800",
                      new RegenerateAccessKeyParameters().withKeyType(KeyType.PRIMARY_KEY),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.19.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armservicebus_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/servicebus/armservicebus"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/servicebus/resource-manager/Microsoft.ServiceBus/stable/2021-11-01/examples/Queues/SBQueueAuthorizationRuleRegenerateKey.json
      func ExampleQueuesClient_RegenerateKeys() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armservicebus.NewQueuesClient("5f750a97-50d9-4e36-8081-c9ee4c0210d4", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.RegenerateKeys(ctx,
      		"ArunMonocle",
      		"sdk-namespace-7982",
      		"sdk-Queues-2317",
      		"sdk-AuthRules-5800",
      		armservicebus.RegenerateAccessKeyParameters{
      			KeyType: to.Ptr(armservicebus.KeyTypePrimaryKey),
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fservicebus%2Farmservicebus%2Fv1.0.0/sdk/resourcemanager/servicebus/armservicebus/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ServiceBusManagementClient } = require("@azure/arm-servicebus");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Regenerates the primary or secondary connection strings to the queue.
       *
       * @summary Regenerates the primary or secondary connection strings to the queue.
       * x-ms-original-file: specification/servicebus/resource-manager/Microsoft.ServiceBus/stable/2021-11-01/examples/Queues/SBQueueAuthorizationRuleRegenerateKey.json
       */
      async function queueAuthorizationRuleRegenerateKey() {
        const subscriptionId = "5f750a97-50d9-4e36-8081-c9ee4c0210d4";
        const resourceGroupName = "ArunMonocle";
        const namespaceName = "sdk-namespace-7982";
        const queueName = "sdk-Queues-2317";
        const authorizationRuleName = "sdk-AuthRules-5800";
        const parameters = { keyType: "PrimaryKey" };
        const credential = new DefaultAzureCredential();
        const client = new ServiceBusManagementClient(credential, subscriptionId);
        const result = await client.queues.regenerateKeys(
          resourceGroupName,
          namespaceName,
          queueName,
          authorizationRuleName,
          parameters
        );
        console.log(result);
      }

      queueAuthorizationRuleRegenerateKey().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-servicebus_6.0.0/sdk/servicebus/arm-servicebus/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "primaryConnectionString": "Endpoint=sb://sdk-namespace-7982.servicebus.windows-int.net/;SharedAccessKeyName=sdk-AuthRules-5800;SharedAccessKey=############################################;EntityPath=sdk-Queues-2317",
        "secondaryConnectionString": "Endpoint=sb://sdk-namespace-7982.servicebus.windows-int.net/;SharedAccessKeyName=sdk-AuthRules-5800;SharedAccessKey=############################################;EntityPath=sdk-Queues-2317",
        "primaryKey": "############################################",
        "secondaryKey": "############################################",
        "keyName": "sdk-AuthRules-5800"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Service Bus service - Regenerates the primary or secondary connection strings to the queue.
errorCodes: []
