### YamlMime:RESTOperation
uid: management.azure.com.servicebus.stable.subscriptions.get
name: Get
service: Service Bus
groupName: Subscriptions
apiVersion: 2021-11-01
summary: Returns a subscription description for the specified topic.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions/{subscriptionName}?api-version=2021-11-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the Resource group within the Azure subscription.
  types:
  - uid: string
- name: namespaceName
  in: path
  isRequired: true
  description: The namespace name
  types:
  - uid: string
- name: topicName
  in: path
  isRequired: true
  description: The topic name.
  types:
  - uid: string
- name: subscriptionName
  in: path
  isRequired: true
  description: The subscription name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved subscription description.
  types:
  - uid: SBSubscription
- name: Other Status Codes
  description: ServiceBus error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: SBSubscription
  description: Description of subscription resource.
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: The system meta data relating to this resource.
    types:
    - uid: systemData
  - name: properties.messageCount
    isReadyOnly: true
    description: Number of messages.
    types:
    - uid: integer
  - name: properties.createdAt
    isReadyOnly: true
    description: Exact time the message was created.
    types:
    - uid: string
  - name: properties.accessedAt
    isReadyOnly: true
    description: Last time there was a receive request to this subscription.
    types:
    - uid: string
  - name: properties.updatedAt
    isReadyOnly: true
    description: The exact time the message was updated.
    types:
    - uid: string
  - name: properties.countDetails
    isReadyOnly: true
    description: Message count details
    types:
    - uid: MessageCountDetails
  - name: properties.lockDuration
    description: ISO 8061 lock duration timespan for the subscription. The default value is 1 minute.
    types:
    - uid: string
  - name: properties.requiresSession
    description: Value indicating if a subscription supports the concept of sessions.
    types:
    - uid: boolean
  - name: properties.defaultMessageTimeToLive
    description: ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
    types:
    - uid: string
  - name: properties.deadLetteringOnFilterEvaluationExceptions
    description: Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.
    types:
    - uid: boolean
  - name: properties.deadLetteringOnMessageExpiration
    description: Value that indicates whether a subscription has dead letter support when a message expires.
    types:
    - uid: boolean
  - name: properties.duplicateDetectionHistoryTimeWindow
    description: ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
    types:
    - uid: string
  - name: properties.maxDeliveryCount
    description: Number of maximum deliveries.
    types:
    - uid: integer
  - name: properties.status
    description: Enumerates the possible values for the status of a messaging entity.
    types:
    - uid: EntityStatus
  - name: properties.enableBatchedOperations
    description: Value that indicates whether server-side batched operations are enabled.
    types:
    - uid: boolean
  - name: properties.autoDeleteOnIdle
    description: ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
    types:
    - uid: string
  - name: properties.forwardTo
    description: Queue/Topic name to forward the messages
    types:
    - uid: string
  - name: properties.forwardDeadLetteredMessagesTo
    description: Queue/Topic name to forward the Dead Letter message
    types:
    - uid: string
  - name: properties.isClientAffine
    description: Value that indicates whether the subscription has an affinity to the client id.
    types:
    - uid: boolean
  - name: properties.clientAffineProperties
    description: Properties specific to client affine subscriptions.
    types:
    - uid: SBClientAffineProperties
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
    types:
    - uid: string
  - name: location
    isReadyOnly: true
    description: The geo-location where the resource lives
    types:
    - uid: string
- name: ErrorResponse
  description: The resource management error response.
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: Error
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The type of identity that last modified the resource.
    types:
    - uid: string
- name: MessageCountDetails
  description: Message Count Details.
  kind: object
  properties:
  - name: activeMessageCount
    isReadyOnly: true
    description: Number of active messages in the queue, topic, or subscription.
    types:
    - uid: integer
  - name: deadLetterMessageCount
    isReadyOnly: true
    description: Number of messages that are dead lettered.
    types:
    - uid: integer
  - name: scheduledMessageCount
    isReadyOnly: true
    description: Number of scheduled messages.
    types:
    - uid: integer
  - name: transferMessageCount
    isReadyOnly: true
    description: Number of messages transferred to another queue, topic, or subscription.
    types:
    - uid: integer
  - name: transferDeadLetterMessageCount
    isReadyOnly: true
    description: Number of messages transferred into dead letters.
    types:
    - uid: integer
- name: EntityStatus
  description: Entity status.
  kind: enum
  properties:
  - name: Active
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
  - name: Restoring
    types:
    - uid: string
  - name: SendDisabled
    types:
    - uid: string
  - name: ReceiveDisabled
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Renaming
    types:
    - uid: string
  - name: Unknown
    types:
    - uid: string
- name: SBClientAffineProperties
  description: Properties specific to client affine subscriptions.
  kind: object
  properties:
  - name: clientId
    description: Indicates the Client ID of the application that created the client-affine subscription.
    types:
    - uid: string
  - name: isDurable
    description: For client-affine subscriptions, this value indicates whether the subscription is durable or not.
    types:
    - uid: boolean
  - name: isShared
    description: For client-affine subscriptions, this value indicates whether the subscription is shared or not.
    types:
    - uid: boolean
- name: Error
  description: The error object.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: SubscriptionGet
  request:
    uri: GET https://management.azure.com/subscriptions/Subscriptionid/resourceGroups/ResourceGroup/providers/Microsoft.ServiceBus/namespaces/sdk-Namespace-1349/topics/sdk-Topics-8740/subscriptions/sdk-Subscriptions-2178?api-version=2021-11-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/Subscriptionid/resourceGroups/ResourceGroup/providers/Microsoft.ServiceBus/namespaces/sdk-Namespace-1349/topics/sdk-Topics-8740/subscriptions/sdk-Subscriptions-2178?api-version=2021-11-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for Subscriptions Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/servicebus/resource-manager/Microsoft.ServiceBus/stable/2021-11-01/examples/Subscriptions/SBSubscriptionGet.json
           */
          /**
           * Sample code: SubscriptionGet.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void subscriptionGet(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .serviceBusNamespaces()
                  .manager()
                  .serviceClient()
                  .getSubscriptions()
                  .getWithResponse(
                      "ResourceGroup", "sdk-Namespace-1349", "sdk-Topics-8740", "sdk-Subscriptions-2178", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armservicebus_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/servicebus/armservicebus"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/servicebus/resource-manager/Microsoft.ServiceBus/stable/2021-11-01/examples/Subscriptions/SBSubscriptionGet.json
      func ExampleSubscriptionsClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armservicebus.NewSubscriptionsClient("Subscriptionid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"ResourceGroup",
      		"sdk-Namespace-1349",
      		"sdk-Topics-8740",
      		"sdk-Subscriptions-2178",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fservicebus%2Farmservicebus%2Fv1.0.0/sdk/resourcemanager/servicebus/armservicebus/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ServiceBusManagementClient } = require("@azure/arm-servicebus");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Returns a subscription description for the specified topic.
       *
       * @summary Returns a subscription description for the specified topic.
       * x-ms-original-file: specification/servicebus/resource-manager/Microsoft.ServiceBus/stable/2021-11-01/examples/Subscriptions/SBSubscriptionGet.json
       */
      async function subscriptionGet() {
        const subscriptionId = "Subscriptionid";
        const resourceGroupName = "ResourceGroup";
        const namespaceName = "sdk-Namespace-1349";
        const topicName = "sdk-Topics-8740";
        const subscriptionName = "sdk-Subscriptions-2178";
        const credential = new DefaultAzureCredential();
        const client = new ServiceBusManagementClient(credential, subscriptionId);
        const result = await client.subscriptions.get(
          resourceGroupName,
          namespaceName,
          topicName,
          subscriptionName
        );
        console.log(result);
      }

      subscriptionGet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-servicebus_6.0.0/sdk/servicebus/arm-servicebus/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/Subscriptionid/resourceGroups/ResourceGroup/providers/Microsoft.ServiceBus/namespaces/sdk-Namespace-1349/topics/sdk-Topics-8740/subscriptions/sdk-Subscriptions-2178",
        "name": "sdk-Subscriptions-2178",
        "type": "Microsoft.ServiceBus/Namespaces/Topics/Subscriptions",
        "properties": {
          "lockDuration": "PT1M",
          "requiresSession": false,
          "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
          "deadLetteringOnMessageExpiration": true,
          "deadLetteringOnFilterEvaluationExceptions": true,
          "messageCount": 0,
          "maxDeliveryCount": 10,
          "status": "Active",
          "enableBatchedOperations": true,
          "createdAt": "2021-01-04T18:02:20.5992764Z",
          "updatedAt": "2021-01-04T18:02:20.5992764Z",
          "accessedAt": "2021-01-04T18:02:20.5992764Z",
          "countDetails": {
            "activeMessageCount": 0,
            "deadLetterMessageCount": 0,
            "scheduledMessageCount": 0,
            "transferMessageCount": 0,
            "transferDeadLetterMessageCount": 0
          },
          "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
          "forwardTo": "sdk-Topics-3065",
          "forwardDeadLetteredMessagesTo": "sdk-Topics-3065"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Service Bus service - Returns a subscription description for the specified topic.
errorCodes: []
