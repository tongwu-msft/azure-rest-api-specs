### YamlMime:RESTOperation
uid: management.azure.com.servicebus.stable.queues.createorupdate
name: Create Or Update
service: Service Bus
groupName: Queues
apiVersion: 2021-11-01
summary: Creates or updates a Service Bus queue. This operation is idempotent.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}?api-version=2021-11-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the Resource group within the Azure subscription.
  types:
  - uid: string
- name: namespaceName
  in: path
  isRequired: true
  description: The namespace name
  types:
  - uid: string
- name: queueName
  in: path
  isRequired: true
  description: The queue name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Queue successfully created.
  types:
  - uid: SBQueue
- name: Other Status Codes
  description: ServiceBus error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.lockDuration
    in: body
    description: ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.
    types:
    - uid: string
  - name: properties.maxSizeInMegabytes
    in: body
    description: The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.
    types:
    - uid: integer
  - name: properties.maxMessageSizeInKilobytes
    in: body
    description: Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024.
    types:
    - uid: integer
  - name: properties.requiresDuplicateDetection
    in: body
    description: A value indicating if this queue requires duplicate detection.
    types:
    - uid: boolean
  - name: properties.requiresSession
    in: body
    description: A value that indicates whether the queue supports the concept of sessions.
    types:
    - uid: boolean
  - name: properties.defaultMessageTimeToLive
    in: body
    description: ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
    types:
    - uid: string
  - name: properties.deadLetteringOnMessageExpiration
    in: body
    description: A value that indicates whether this queue has dead letter support when a message expires.
    types:
    - uid: boolean
  - name: properties.duplicateDetectionHistoryTimeWindow
    in: body
    description: ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
    types:
    - uid: string
  - name: properties.maxDeliveryCount
    in: body
    description: The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.
    types:
    - uid: integer
  - name: properties.status
    in: body
    description: Enumerates the possible values for the status of a messaging entity.
    types:
    - uid: EntityStatus
  - name: properties.enableBatchedOperations
    in: body
    description: Value that indicates whether server-side batched operations are enabled.
    types:
    - uid: boolean
  - name: properties.autoDeleteOnIdle
    in: body
    description: ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.
    types:
    - uid: string
  - name: properties.enablePartitioning
    in: body
    description: A value that indicates whether the queue is to be partitioned across multiple message brokers.
    types:
    - uid: boolean
  - name: properties.enableExpress
    in: body
    description: A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.
    types:
    - uid: boolean
  - name: properties.forwardTo
    in: body
    description: Queue/Topic name to forward the messages
    types:
    - uid: string
  - name: properties.forwardDeadLetteredMessagesTo
    in: body
    description: Queue/Topic name to forward the Dead Letter message
    types:
    - uid: string
requestHeader: []
definitions:
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The type of identity that last modified the resource.
    types:
    - uid: string
- name: MessageCountDetails
  description: Message Count Details.
  kind: object
  properties:
  - name: activeMessageCount
    isReadyOnly: true
    description: Number of active messages in the queue, topic, or subscription.
    types:
    - uid: integer
  - name: deadLetterMessageCount
    isReadyOnly: true
    description: Number of messages that are dead lettered.
    types:
    - uid: integer
  - name: scheduledMessageCount
    isReadyOnly: true
    description: Number of scheduled messages.
    types:
    - uid: integer
  - name: transferMessageCount
    isReadyOnly: true
    description: Number of messages transferred to another queue, topic, or subscription.
    types:
    - uid: integer
  - name: transferDeadLetterMessageCount
    isReadyOnly: true
    description: Number of messages transferred into dead letters.
    types:
    - uid: integer
- name: SBQueue
  description: Description of queue Resource.
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: The system meta data relating to this resource.
    types:
    - uid: systemData
  - name: properties.countDetails
    isReadyOnly: true
    description: Message Count Details.
    types:
    - uid: MessageCountDetails
  - name: properties.createdAt
    isReadyOnly: true
    description: The exact time the message was created.
    types:
    - uid: string
  - name: properties.updatedAt
    isReadyOnly: true
    description: The exact time the message was updated.
    types:
    - uid: string
  - name: properties.accessedAt
    isReadyOnly: true
    description: Last time a message was sent, or the last time there was a receive request to this queue.
    types:
    - uid: string
  - name: properties.sizeInBytes
    isReadyOnly: true
    description: The size of the queue, in bytes.
    types:
    - uid: integer
  - name: properties.messageCount
    isReadyOnly: true
    description: The number of messages in the queue.
    types:
    - uid: integer
  - name: properties.lockDuration
    description: ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.
    types:
    - uid: string
  - name: properties.maxSizeInMegabytes
    description: The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.
    types:
    - uid: integer
  - name: properties.maxMessageSizeInKilobytes
    description: Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024.
    types:
    - uid: integer
  - name: properties.requiresDuplicateDetection
    description: A value indicating if this queue requires duplicate detection.
    types:
    - uid: boolean
  - name: properties.requiresSession
    description: A value that indicates whether the queue supports the concept of sessions.
    types:
    - uid: boolean
  - name: properties.defaultMessageTimeToLive
    description: ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
    types:
    - uid: string
  - name: properties.deadLetteringOnMessageExpiration
    description: A value that indicates whether this queue has dead letter support when a message expires.
    types:
    - uid: boolean
  - name: properties.duplicateDetectionHistoryTimeWindow
    description: ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
    types:
    - uid: string
  - name: properties.maxDeliveryCount
    description: The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.
    types:
    - uid: integer
  - name: properties.status
    description: Enumerates the possible values for the status of a messaging entity.
    types:
    - uid: EntityStatus
  - name: properties.enableBatchedOperations
    description: Value that indicates whether server-side batched operations are enabled.
    types:
    - uid: boolean
  - name: properties.autoDeleteOnIdle
    description: ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.
    types:
    - uid: string
  - name: properties.enablePartitioning
    description: A value that indicates whether the queue is to be partitioned across multiple message brokers.
    types:
    - uid: boolean
  - name: properties.enableExpress
    description: A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.
    types:
    - uid: boolean
  - name: properties.forwardTo
    description: Queue/Topic name to forward the messages
    types:
    - uid: string
  - name: properties.forwardDeadLetteredMessagesTo
    description: Queue/Topic name to forward the Dead Letter message
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
    types:
    - uid: string
  - name: location
    isReadyOnly: true
    description: The geo-location where the resource lives
    types:
    - uid: string
- name: ErrorResponse
  description: The resource management error response.
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: Error
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: EntityStatus
  description: Entity status.
  kind: enum
  properties:
  - name: Active
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
  - name: Restoring
    types:
    - uid: string
  - name: SendDisabled
    types:
    - uid: string
  - name: ReceiveDisabled
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Renaming
    types:
    - uid: string
  - name: Unknown
    types:
    - uid: string
- name: Error
  description: The error object.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: QueueCreate
  request:
    uri: PUT https://management.azure.com/subscriptions/5f750a97-50d9-4e36-8081-c9ee4c0210d4/resourceGroups/ArunMonocle/providers/Microsoft.ServiceBus/namespaces/sdk-Namespace-3174/queues/sdk-Queues-5647?api-version=2021-11-01
    body: >-
      {
        "properties": {
          "enablePartitioning": true
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/5f750a97-50d9-4e36-8081-c9ee4c0210d4/resourceGroups/ArunMonocle/providers/Microsoft.ServiceBus/namespaces/sdk-Namespace-3174/queues/sdk-Queues-5647?api-version=2021-11-01

      {
        "properties": {
          "enablePartitioning": true
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.servicebus.fluent.models.SBQueueInner;

      /** Samples for Queues CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/servicebus/resource-manager/Microsoft.ServiceBus/stable/2021-11-01/examples/Queues/SBQueueCreate.json
           */
          /**
           * Sample code: QueueCreate.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void queueCreate(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .serviceBusNamespaces()
                  .manager()
                  .serviceClient()
                  .getQueues()
                  .createOrUpdateWithResponse(
                      "ArunMonocle",
                      "sdk-Namespace-3174",
                      "sdk-Queues-5647",
                      new SBQueueInner().withEnablePartitioning(true),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.19.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armservicebus_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/servicebus/armservicebus"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/servicebus/resource-manager/Microsoft.ServiceBus/stable/2021-11-01/examples/Queues/SBQueueCreate.json
      func ExampleQueuesClient_CreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armservicebus.NewQueuesClient("5f750a97-50d9-4e36-8081-c9ee4c0210d4", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CreateOrUpdate(ctx,
      		"ArunMonocle",
      		"sdk-Namespace-3174",
      		"sdk-Queues-5647",
      		armservicebus.SBQueue{
      			Properties: &armservicebus.SBQueueProperties{
      				EnablePartitioning: to.Ptr(true),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fservicebus%2Farmservicebus%2Fv1.0.0/sdk/resourcemanager/servicebus/armservicebus/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ServiceBusManagementClient } = require("@azure/arm-servicebus");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a Service Bus queue. This operation is idempotent.
       *
       * @summary Creates or updates a Service Bus queue. This operation is idempotent.
       * x-ms-original-file: specification/servicebus/resource-manager/Microsoft.ServiceBus/stable/2021-11-01/examples/Queues/SBQueueCreate.json
       */
      async function queueCreate() {
        const subscriptionId = "5f750a97-50d9-4e36-8081-c9ee4c0210d4";
        const resourceGroupName = "ArunMonocle";
        const namespaceName = "sdk-Namespace-3174";
        const queueName = "sdk-Queues-5647";
        const parameters = { enablePartitioning: true };
        const credential = new DefaultAzureCredential();
        const client = new ServiceBusManagementClient(credential, subscriptionId);
        const result = await client.queues.createOrUpdate(
          resourceGroupName,
          namespaceName,
          queueName,
          parameters
        );
        console.log(result);
      }

      queueCreate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-servicebus_6.0.0/sdk/servicebus/arm-servicebus/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/5f750a97-50d9-4e36-8081-c9ee4c0210d4/resourceGroups/ArunMonocle/providers/Microsoft.ServiceBus/namespaces/sdk-Namespace-3174/queues/sdk-Queues-5647",
        "name": "sdk-Queues-5647",
        "type": "Microsoft.ServiceBus/Namespaces/Queues",
        "properties": {
          "lockDuration": "PT1M",
          "maxSizeInMegabytes": 163840,
          "maxMessageSizeInKilobytes": 10240,
          "requiresDuplicateDetection": false,
          "requiresSession": false,
          "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
          "duplicateDetectionHistoryTimeWindow": "PT10M",
          "maxDeliveryCount": 10,
          "sizeInBytes": 0,
          "messageCount": 0,
          "status": "Active",
          "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
          "enablePartitioning": true,
          "enableExpress": false,
          "createdAt": "2017-05-26T18:07:33.68Z",
          "updatedAt": "2017-05-26T18:07:34.227Z",
          "accessedAt": "2017-05-26T18:07:34.227Z"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Service Bus service - Creates or updates a Service Bus queue. This operation is idempotent.
errorCodes: []
