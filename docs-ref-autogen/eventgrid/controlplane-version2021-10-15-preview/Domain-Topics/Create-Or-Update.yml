### YamlMime:RESTOperation
uid: management.azure.com.eventgrid.controlplane-version2021-10-15-preview.domaintopics.createorupdate
name: Create Or Update
service: Event Grid
groupName: Domain Topics
apiVersion: 2021-10-15-preview
summary: "Create or update a domain topic.  \nAsynchronously creates or updates a new domain topic with the specified parameters."
consumes: []
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{domainTopicName}?api-version=2021-10-15-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the user's subscription.
  types:
  - uid: string
- name: domainName
  in: path
  isRequired: true
  description: Name of the domain.
  types:
  - uid: string
- name: domainTopicName
  in: path
  isRequired: true
  description: Name of the domain topic.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 201 Created
  description: Created
  types:
  - uid: DomainTopic
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 Bad Request.

     * 500 Internal Server Error.
requestHeader: []
definitions:
- name: DomainTopic
  description: Domain Topic.
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: The system metadata relating to Domain Topic resource.
    types:
    - uid: systemData
  - name: properties.provisioningState
    isReadyOnly: true
    description: Provisioning state of the domain topic.
    types:
    - uid: DomainTopicProvisioningState
  - name: id
    isReadyOnly: true
    description: Fully qualified identifier of the resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Type of the resource.
    types:
    - uid: string
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: DomainTopicProvisioningState
  description: Provisioning state of the domain topic.
  kind: enum
  properties:
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
examples:
- name: DomainTopics_CreateOrUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/domains/exampledomain1/topics/exampledomaintopic1?api-version=2021-10-15-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/domains/exampledomain1/topics/exampledomaintopic1?api-version=2021-10-15-preview
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for DomainTopics CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/eventgrid/resource-manager/Microsoft.EventGrid/preview/2021-10-15-preview/examples/DomainTopics_CreateOrUpdate.json
           */
          /**
           * Sample code: DomainTopics_CreateOrUpdate.
           *
           * @param manager Entry point to EventGridManager.
           */
          public static void domainTopicsCreateOrUpdate(com.azure.resourcemanager.eventgrid.EventGridManager manager) {
              manager.domainTopics().createOrUpdate("examplerg", "exampledomain1", "exampledomaintopic1", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-eventgrid_1.2.0-beta.2/sdk/eventgrid/azure-resourcemanager-eventgrid/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armeventgrid_test

      import (
      	"context"
      	"log"

      	"time"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/eventgrid/armeventgrid"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/eventgrid/resource-manager/Microsoft.EventGrid/preview/2021-10-15-preview/examples/DomainTopics_CreateOrUpdate.json
      func ExampleDomainTopicsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      		return
      	}
      	ctx := context.Background()
      	client, err := armeventgrid.NewDomainTopicsClient("<subscription-id>", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      		return
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"<resource-group-name>",
      		"<domain-name>",
      		"<domain-topic-name>",
      		&armeventgrid.DomainTopicsClientBeginCreateOrUpdateOptions{ResumeToken: ""})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      		return
      	}
      	_, err = poller.PollUntilDone(ctx, 30*time.Second)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      		return
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Feventgrid%2Farmeventgrid%2Fv0.5.0/sdk/resourcemanager/eventgrid/armeventgrid/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "provisioningState": "Succeeded"
        },
        "id": "/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/domains/exampledomain1/topics/exampledomaintopic1",
        "name": "exampledomaintopic1",
        "type": "Microsoft.EventGrid/domains/topics"
      }
security: []
metadata:
  description: "Create or update a domain topic.  \nAsynchronously creates or updates a new domain topic with the specified parameters."
errorCodes: []
