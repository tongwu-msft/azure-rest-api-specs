### YamlMime:RESTOperation
uid: management.azure.com.eventgrid.controlplane-version2022-06-15.partnerregistrations.createorupdate
name: Create Or Update
service: Event Grid
groupName: Partner Registrations
apiVersion: 2022-06-15
summary: "Create a partner registration.  \nCreates a new partner registration with the specified parameters."
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}?api-version=2022-06-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the user's subscription.
  types:
  - uid: string
- name: partnerRegistrationName
  in: path
  isRequired: true
  description: Name of the partner registration.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: PartnerRegistration
- name: 202 Accepted
  description: Accepted
  types:
  - uid: PartnerRegistration
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 Bad Request.

     * 404 Not Found.

     * 500 Internal Server Error.
requestBody:
- name: default
  parameters:
  - name: properties.partnerRegistrationImmutableId
    in: body
    description: >-
      The immutableId of the corresponding partner registration.

      Note: This property is marked for deprecation and is not supported in any future GA API version
    types:
    - uid: string
  - name: location
    in: body
    isRequired: true
    description: Location of the resource.
    types:
    - uid: string
  - name: tags
    in: body
    description: Tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: PartnerRegistration
  description: Information about a partner registration.
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: The system metadata relating to Partner Registration resource.
    types:
    - uid: systemData
  - name: properties.provisioningState
    isReadyOnly: true
    description: Provisioning state of the partner registration.
    types:
    - uid: PartnerRegistrationProvisioningState
  - name: properties.partnerRegistrationImmutableId
    description: >-
      The immutableId of the corresponding partner registration.

      Note: This property is marked for deprecation and is not supported in any future GA API version
    types:
    - uid: string
  - name: location
    description: Location of the resource.
    types:
    - uid: string
  - name: tags
    description: Tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified identifier of the resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Type of the resource.
    types:
    - uid: string
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: PartnerRegistrationProvisioningState
  description: Provisioning state of the partner registration.
  kind: enum
  properties:
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
examples:
- name: PartnerRegistrations_CreateOrUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/partnerRegistrations/examplePartnerRegistrationName1?api-version=2022-06-15
    body: >-
      {
        "location": "global",
        "tags": {
          "key1": "value1",
          "key2": "Value2",
          "key3": "Value3"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/partnerRegistrations/examplePartnerRegistrationName1?api-version=2022-06-15

      {
        "location": "global",
        "tags": {
          "key1": "value1",
          "key2": "Value2",
          "key3": "Value3"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for PartnerRegistrations CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/eventgrid/resource-manager/Microsoft.EventGrid/stable/2022-06-15/examples/PartnerRegistrations_CreateOrUpdate.json
           */
          /**
           * Sample code: PartnerRegistrations_CreateOrUpdate.
           *
           * @param manager Entry point to EventGridManager.
           */
          public static void partnerRegistrationsCreateOrUpdate(
              com.azure.resourcemanager.eventgrid.EventGridManager manager) {
              manager
                  .partnerRegistrations()
                  .define("examplePartnerRegistrationName1")
                  .withRegion("global")
                  .withExistingResourceGroup("examplerg")
                  .withTags(mapOf("key1", "value1", "key2", "Value2", "key3", "Value3"))
                  .create();
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-eventgrid_1.2.0-beta.3/sdk/eventgrid/azure-resourcemanager-eventgrid/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armeventgrid_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/eventgrid/armeventgrid/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/eventgrid/resource-manager/Microsoft.EventGrid/stable/2022-06-15/examples/PartnerRegistrations_CreateOrUpdate.json
      func ExamplePartnerRegistrationsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armeventgrid.NewPartnerRegistrationsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"examplerg",
      		"examplePartnerRegistrationName1",
      		armeventgrid.PartnerRegistration{
      			Location: to.Ptr("global"),
      			Tags: map[string]*string{
      				"key1": to.Ptr("value1"),
      				"key2": to.Ptr("Value2"),
      				"key3": to.Ptr("Value3"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Feventgrid%2Farmeventgrid%2Fv2.0.0/sdk/resourcemanager/eventgrid/armeventgrid/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { EventGridManagementClient } = require("@azure/arm-eventgrid");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates a new partner registration with the specified parameters.
       *
       * @summary Creates a new partner registration with the specified parameters.
       * x-ms-original-file: specification/eventgrid/resource-manager/Microsoft.EventGrid/stable/2022-06-15/examples/PartnerRegistrations_CreateOrUpdate.json
       */
      async function partnerRegistrationsCreateOrUpdate() {
        const subscriptionId = "5b4b650e-28b9-4790-b3ab-ddbd88d727c4";
        const resourceGroupName = "examplerg";
        const partnerRegistrationName = "examplePartnerRegistrationName1";
        const partnerRegistrationInfo = {
          location: "global",
          tags: { key1: "value1", key2: "Value2", key3: "Value3" },
        };
        const credential = new DefaultAzureCredential();
        const client = new EventGridManagementClient(credential, subscriptionId);
        const result = await client.partnerRegistrations.beginCreateOrUpdateAndWait(
          resourceGroupName,
          partnerRegistrationName,
          partnerRegistrationInfo
        );
        console.log(result);
      }

      partnerRegistrationsCreateOrUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-eventgrid_14.0.0/sdk/eventgrid/arm-eventgrid/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "provisioningState": "Succeeded",
          "partnerRegistrationImmutableId": "6a1e637f-1495-4938-bf46-ff468b9a75d2"
        },
        "location": "global",
        "tags": {
          "key1": "value1",
          "key2": "Value2",
          "key3": "Value3"
        },
        "id": "/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/partnerRegistrations/examplePartnerRegistrationName1",
        "name": "examplePartnerRegistrationName1",
        "type": "Microsoft.EventGrid/partnerRegistrations"
      }
  - statusCode: "202"
    body: >-
      {
        "properties": {
          "provisioningState": "Succeeded",
          "partnerRegistrationImmutableId": "6a1e637f-1495-4938-bf46-ff468b9a75d2"
        },
        "location": "global",
        "tags": {
          "key1": "value1",
          "key2": "Value2",
          "key3": "Value3"
        },
        "id": "/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/partnerRegistrations/examplePartnerRegistrationName1",
        "name": "examplePartnerRegistrationName1",
        "type": "Microsoft.EventGrid/partnerRegistrations"
      }
security: []
metadata:
  description: "Learn more about Event Grid service - Create a partner registration.  \nCreates a new partner registration with the specified parameters."
errorCodes: []
