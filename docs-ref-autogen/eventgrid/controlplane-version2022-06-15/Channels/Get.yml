### YamlMime:RESTOperation
uid: management.azure.com.eventgrid.controlplane-version2022-06-15.channels.get
name: Get
service: Event Grid
groupName: Channels
apiVersion: 2022-06-15
summary: "Get a channel.  \nGet properties of a channel."
consumes: []
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/channels/{channelName}?api-version=2022-06-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the partners subscription.
  types:
  - uid: string
- name: partnerNamespaceName
  in: path
  isRequired: true
  description: Name of the partner namespace.
  types:
  - uid: string
- name: channelName
  in: path
  isRequired: true
  description: Name of the channel.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: Channel
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 Bad Request.

     * 500 Internal Server Error.
requestHeader: []
definitions:
- name: Channel
  description: Channel info.
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: The system metadata relating to Channel resource.
    types:
    - uid: systemData
  - name: properties.channelType
    description: The type of the event channel which represents the direction flow of events.
    types:
    - uid: ChannelType
  - name: properties.partnerTopicInfo
    description: This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.
    types:
    - uid: PartnerTopicInfo
  - name: properties.messageForActivation
    description: Context or helpful message that can be used during the approval process by the subscriber.
    types:
    - uid: string
  - name: properties.provisioningState
    description: Provisioning state of the channel.
    types:
    - uid: ChannelProvisioningState
  - name: properties.readinessState
    description: The readiness state of the corresponding partner topic.
    types:
    - uid: ReadinessState
  - name: properties.expirationTimeIfNotActivatedUtc
    description: >-
      Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,

      the channel and corresponding partner topic are deleted.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified identifier of the resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Type of the resource.
    types:
    - uid: string
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: ChannelType
  description: The type of the event channel which represents the direction flow of events.
  kind: enum
  properties:
  - name: PartnerTopic
    types:
    - uid: string
- name: PartnerTopicInfo
  description: Properties of the corresponding partner topic of a Channel.
  kind: object
  properties:
  - name: azureSubscriptionId
    description: >-
      Azure subscription ID of the subscriber. The partner topic associated with the channel will be

      created under this Azure subscription.
    types:
    - uid: string
  - name: resourceGroupName
    description: >-
      Azure Resource Group of the subscriber. The partner topic associated with the channel will be

      created under this resource group.
    types:
    - uid: string
  - name: name
    description: Name of the partner topic associated with the channel.
    types:
    - uid: string
  - name: eventTypeInfo
    description: "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \nsubscriber to view different types of events that are published."
    types:
    - uid: EventTypeInfo
  - name: source
    description: >-
      The source information is provided by the publisher to determine the scope or context from which the events

      are originating. This information can be used by the subscriber during the approval process of the

      created partner topic.
    types:
    - uid: string
- name: ChannelProvisioningState
  description: Provisioning state of the channel.
  kind: enum
  properties:
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: IdleDueToMirroredPartnerTopicDeletion
    types:
    - uid: string
- name: ReadinessState
  description: The readiness state of the corresponding partner topic.
  kind: enum
  properties:
  - name: NeverActivated
    types:
    - uid: string
  - name: Activated
    types:
    - uid: string
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: EventTypeInfo
  description: The event type information for Channels.
  kind: object
  properties:
  - name: kind
    description: The kind of event type used.
    types:
    - uid: EventDefinitionKind
  - name: inlineEventTypes
    description: >-
      A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.

      An example of a valid inline event name is "Contoso.OrderCreated".

      The inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: InlineEventProperties
- name: EventDefinitionKind
  description: The kind of event type used.
  kind: enum
  properties:
  - name: Inline
    types:
    - uid: string
- name: InlineEventProperties
  description: Additional information about every inline event.
  kind: object
  properties:
  - name: description
    description: The description for the inline event.
    types:
    - uid: string
  - name: displayName
    description: The displayName for the inline event.
    types:
    - uid: string
  - name: documentationUrl
    description: The documentationUrl for the inline event.
    types:
    - uid: string
  - name: dataSchemaUrl
    description: The dataSchemaUrl for the inline event.
    types:
    - uid: string
examples:
- name: Channels_Get
  request:
    uri: GET https://management.azure.com/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/partnerNamespaces/examplePartnerNamespaceName1/channels/exampleChannelName1?api-version=2022-06-15
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/partnerNamespaces/examplePartnerNamespaceName1/channels/exampleChannelName1?api-version=2022-06-15
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for Channels Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/eventgrid/resource-manager/Microsoft.EventGrid/stable/2022-06-15/examples/Channels_Get.json
           */
          /**
           * Sample code: Channels_Get.
           *
           * @param manager Entry point to EventGridManager.
           */
          public static void channelsGet(com.azure.resourcemanager.eventgrid.EventGridManager manager) {
              manager
                  .channels()
                  .getWithResponse("examplerg", "examplePartnerNamespaceName1", "exampleChannelName1", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-eventgrid_1.2.0-beta.3/sdk/eventgrid/azure-resourcemanager-eventgrid/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armeventgrid_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/eventgrid/armeventgrid/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/eventgrid/resource-manager/Microsoft.EventGrid/stable/2022-06-15/examples/Channels_Get.json
      func ExampleChannelsClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armeventgrid.NewChannelsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"examplerg",
      		"examplePartnerNamespaceName1",
      		"exampleChannelName1",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Feventgrid%2Farmeventgrid%2Fv2.0.0/sdk/resourcemanager/eventgrid/armeventgrid/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { EventGridManagementClient } = require("@azure/arm-eventgrid");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Get properties of a channel.
       *
       * @summary Get properties of a channel.
       * x-ms-original-file: specification/eventgrid/resource-manager/Microsoft.EventGrid/stable/2022-06-15/examples/Channels_Get.json
       */
      async function channelsGet() {
        const subscriptionId = "5b4b650e-28b9-4790-b3ab-ddbd88d727c4";
        const resourceGroupName = "examplerg";
        const partnerNamespaceName = "examplePartnerNamespaceName1";
        const channelName = "exampleChannelName1";
        const credential = new DefaultAzureCredential();
        const client = new EventGridManagementClient(credential, subscriptionId);
        const result = await client.channels.get(resourceGroupName, partnerNamespaceName, channelName);
        console.log(result);
      }

      channelsGet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-eventgrid_14.0.0/sdk/eventgrid/arm-eventgrid/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "channelType": "PartnerTopic",
          "partnerTopicInfo": {
            "azureSubscriptionId": "5b4b650e-28b9-4790-b3ab-ddbd88d727c4",
            "resourceGroupName": "examplerg2",
            "name": "examplePartnerTopic1",
            "source": "ContosoCorp.Accounts.User1"
          },
          "messageForActivation": "Example message to approver",
          "expirationTimeIfNotActivatedUtc": "2021-10-21T22:50:25.410433Z",
          "readinessState": "NeverActivated",
          "provisioningState": "Succeeded"
        },
        "id": "/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/partnerNamespaces/examplePartnerNamespaceName1/changes/exampleChannelName1",
        "name": "exampleChannelName1",
        "type": "Microsoft.EventGrid/partnerNamespaces/channels"
      }
security: []
metadata:
  description: "Learn more about Event Grid service - Get a channel.  \nGet properties of a channel."
errorCodes: []
