### YamlMime:RESTOperation
uid: management.azure.com.eventgrid.controlplane-version2022-06-15.partnerconfigurations.listbysubscription
name: List By Subscription
service: Event Grid
groupName: Partner Configurations
apiVersion: 2022-06-15
summary: "List partner configurations under an Azure subscription.  \nList all the partner configurations under an Azure subscription."
consumes: []
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerConfigurations?api-version=2022-06-15
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerConfigurations?api-version=2022-06-15&$filter={$filter}&$top={$top}
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: string
- name: $filter
  in: query
  description: "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'."
  types:
  - uid: string
- name: $top
  in: query
  description: The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.
  types:
  - uid: integer
  format: int32
responses:
- name: 200 OK
  description: OK
  types:
  - uid: PartnerConfigurationsListResult
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 Bad Request.

     * 500 Internal Server Error.
requestHeader: []
definitions:
- name: PartnerConfigurationsListResult
  description: Result of the List partner configurations operation
  kind: object
  properties:
  - name: value
    description: A collection of partner configurations.
    types:
    - uid: PartnerConfiguration
      isArray: true
  - name: nextLink
    description: A link for the next page of partner configurations.
    types:
    - uid: string
- name: PartnerConfiguration
  description: Partner configuration information
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: The system metadata relating to partner configuration resource.
    types:
    - uid: systemData
  - name: location
    description: Location of the resource.
    types:
    - uid: string
  - name: tags
    description: Tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.partnerAuthorization
    description: The details of authorized partners.
    types:
    - uid: PartnerAuthorization
  - name: properties.provisioningState
    description: Provisioning state of the partner configuration.
    types:
    - uid: PartnerConfigurationProvisioningState
  - name: id
    isReadyOnly: true
    description: Fully qualified identifier of the resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Type of the resource.
    types:
    - uid: string
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: PartnerAuthorization
  description: The partner authorization details.
  kind: object
  properties:
  - name: defaultMaximumExpirationTimeInDays
    description: >-
      Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is

      not specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.
    types:
    - uid: integer
  - name: authorizedPartnersList
    description: The list of authorized partners.
    types:
    - uid: Partner
      isArray: true
- name: PartnerConfigurationProvisioningState
  description: Provisioning state of the partner configuration.
  kind: enum
  properties:
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: Partner
  description: Information about the partner.
  kind: object
  properties:
  - name: partnerRegistrationImmutableId
    description: The immutableId of the corresponding partner registration.
    types:
    - uid: string
  - name: partnerName
    description: The partner name.
    types:
    - uid: string
  - name: authorizationExpirationTimeInUtc
    description: >-
      Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's

      context will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.

      If not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.
    types:
    - uid: string
examples:
- name: PartnerConfigurations_ListBySubscription
  request:
    uri: GET https://management.azure.com/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/providers/Microsoft.EventGrid/partnerConfigurations?api-version=2022-06-15
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/providers/Microsoft.EventGrid/partnerConfigurations?api-version=2022-06-15
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for PartnerConfigurations List. */
      public final class Main {
          /*
           * x-ms-original-file: specification/eventgrid/resource-manager/Microsoft.EventGrid/stable/2022-06-15/examples/PartnerConfigurations_ListBySubscription.json
           */
          /**
           * Sample code: PartnerConfigurations_ListBySubscription.
           *
           * @param manager Entry point to EventGridManager.
           */
          public static void partnerConfigurationsListBySubscription(
              com.azure.resourcemanager.eventgrid.EventGridManager manager) {
              manager.partnerConfigurations().list(null, null, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-eventgrid_1.2.0-beta.3/sdk/eventgrid/azure-resourcemanager-eventgrid/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armeventgrid_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/eventgrid/armeventgrid/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/eventgrid/resource-manager/Microsoft.EventGrid/stable/2022-06-15/examples/PartnerConfigurations_ListBySubscription.json
      func ExamplePartnerConfigurationsClient_NewListBySubscriptionPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armeventgrid.NewPartnerConfigurationsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListBySubscriptionPager(&armeventgrid.PartnerConfigurationsClientListBySubscriptionOptions{Filter: nil,
      		Top: nil,
      	})
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Feventgrid%2Farmeventgrid%2Fv2.0.0/sdk/resourcemanager/eventgrid/armeventgrid/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { EventGridManagementClient } = require("@azure/arm-eventgrid");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to List all the partner configurations under an Azure subscription.
       *
       * @summary List all the partner configurations under an Azure subscription.
       * x-ms-original-file: specification/eventgrid/resource-manager/Microsoft.EventGrid/stable/2022-06-15/examples/PartnerConfigurations_ListBySubscription.json
       */
      async function partnerConfigurationsListBySubscription() {
        const subscriptionId = "5b4b650e-28b9-4790-b3ab-ddbd88d727c4";
        const credential = new DefaultAzureCredential();
        const client = new EventGridManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.partnerConfigurations.listBySubscription()) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      partnerConfigurationsListBySubscription().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-eventgrid_14.0.0/sdk/eventgrid/arm-eventgrid/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "properties": {
              "partnerAuthorization": {
                "defaultMaximumExpirationTimeInDays": 10,
                "authorizedPartnersList": [
                  {
                    "partnerRegistrationImmutableId": "941892bc-f5d0-4d1c-8fb5-477570fc2b71",
                    "partnerName": "Contoso.Finance",
                    "authorizationExpirationTimeInUtc": "2022-01-28T01:20:55.142Z"
                  },
                  {
                    "partnerRegistrationImmutableId": "5362bdb6-ce3e-4d0d-9a5b-3eb92c8aab38",
                    "partnerName": "fabrikam.HR",
                    "authorizationExpirationTimeInUtc": "2022-02-20T01:00:00.142Z"
                  }
                ]
              }
            },
            "location": "global",
            "tags": {
              "tag1": "value1",
              "tag2": "value2"
            },
            "id": "/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/partnerConfigurations/default",
            "name": "default",
            "type": "Microsoft.EventGrid/partnerConfigurations"
          }
        ]
      }
security: []
metadata:
  description: "List partner configurations under an Azure subscription.  \nList all the partner configurations under an Azure subscription."
errorCodes: []
