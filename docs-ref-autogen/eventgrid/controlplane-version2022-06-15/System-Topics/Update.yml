### YamlMime:RESTOperation
uid: management.azure.com.eventgrid.controlplane-version2022-06-15.systemtopics.update
name: Update
service: Event Grid
groupName: System Topics
apiVersion: 2022-06-15
summary: "Update a system topic.  \nAsynchronously updates a system topic with the specified parameters."
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}?api-version=2022-06-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the user's subscription.
  types:
  - uid: string
- name: systemTopicName
  in: path
  isRequired: true
  description: Name of the system topic.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: System Topic update request accepted.
  types:
  - uid: SystemTopic
- name: 201 Created
  description: System Topic update request accepted.
  types:
  - uid: SystemTopic
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 Bad Request.

     * 500 Internal Server Error.
requestBody:
- name: default
  parameters:
  - name: tags
    in: body
    description: Tags of the system topic.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: identity
    in: body
    description: Resource identity information.
    types:
    - uid: IdentityInfo
requestHeader: []
definitions:
- name: IdentityInfo
  description: The identity information for the resource.
  kind: object
  properties:
  - name: type
    description: The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.
    types:
    - uid: IdentityType
  - name: principalId
    description: The principal ID of resource identity.
    types:
    - uid: string
  - name: tenantId
    description: The tenant ID of resource.
    types:
    - uid: string
  - name: userAssignedIdentities
    description: >-
      The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:

      '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.

      This property is currently not used and reserved for future usage.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: UserIdentityProperties
- name: SystemTopic
  description: EventGrid System Topic.
  kind: object
  properties:
  - name: identity
    description: Identity information for the resource.
    types:
    - uid: IdentityInfo
  - name: systemData
    isReadyOnly: true
    description: The system metadata relating to System Topic resource.
    types:
    - uid: systemData
  - name: properties.provisioningState
    isReadyOnly: true
    description: Provisioning state of the system topic.
    types:
    - uid: ResourceProvisioningState
  - name: properties.source
    description: Source for the system topic.
    types:
    - uid: string
  - name: properties.topicType
    description: TopicType for the system topic.
    types:
    - uid: string
  - name: properties.metricResourceId
    isReadyOnly: true
    description: Metric resource id for the system topic.
    types:
    - uid: string
  - name: location
    description: Location of the resource.
    types:
    - uid: string
  - name: tags
    description: Tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified identifier of the resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Type of the resource.
    types:
    - uid: string
- name: SystemTopicUpdateParameters
  description: Properties of the System Topic update.
  kind: object
  properties:
  - name: tags
    description: Tags of the system topic.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: identity
    description: Resource identity information.
    types:
    - uid: IdentityInfo
- name: IdentityType
  description: The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: SystemAssigned
    types:
    - uid: string
  - name: UserAssigned
    types:
    - uid: string
  - name: SystemAssigned, UserAssigned
    types:
    - uid: string
- name: UserIdentityProperties
  description: The information about the user identity.
  kind: object
  properties:
  - name: principalId
    description: The principal id of user assigned identity.
    types:
    - uid: string
  - name: clientId
    description: The client id of user assigned identity.
    types:
    - uid: string
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: ResourceProvisioningState
  description: Provisioning state of the Private Endpoint Connection.
  kind: enum
  properties:
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
examples:
- name: SystemTopics_Update
  request:
    uri: PATCH https://management.azure.com/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/systemTopics/exampleSystemTopic1?api-version=2022-06-15
    body: >-
      {
        "tags": {
          "tag1": "value1",
          "tag2": "value2"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/systemTopics/exampleSystemTopic1?api-version=2022-06-15

      {
        "tags": {
          "tag1": "value1",
          "tag2": "value2"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.eventgrid.models.SystemTopic;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for SystemTopics Update. */
      public final class Main {
          /*
           * x-ms-original-file: specification/eventgrid/resource-manager/Microsoft.EventGrid/stable/2022-06-15/examples/SystemTopics_Update.json
           */
          /**
           * Sample code: SystemTopics_Update.
           *
           * @param manager Entry point to EventGridManager.
           */
          public static void systemTopicsUpdate(com.azure.resourcemanager.eventgrid.EventGridManager manager) {
              SystemTopic resource =
                  manager
                      .systemTopics()
                      .getByResourceGroupWithResponse("examplerg", "exampleSystemTopic1", Context.NONE)
                      .getValue();
              resource.update().withTags(mapOf("tag1", "value1", "tag2", "value2")).apply();
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-eventgrid_1.2.0-beta.3/sdk/eventgrid/azure-resourcemanager-eventgrid/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armeventgrid_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/eventgrid/armeventgrid/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/eventgrid/resource-manager/Microsoft.EventGrid/stable/2022-06-15/examples/SystemTopics_Update.json
      func ExampleSystemTopicsClient_BeginUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armeventgrid.NewSystemTopicsClient("5b4b650e-28b9-4790-b3ab-ddbd88d727c4", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginUpdate(ctx,
      		"examplerg",
      		"exampleSystemTopic1",
      		armeventgrid.SystemTopicUpdateParameters{
      			Tags: map[string]*string{
      				"tag1": to.Ptr("value1"),
      				"tag2": to.Ptr("value2"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Feventgrid%2Farmeventgrid%2Fv2.0.0/sdk/resourcemanager/eventgrid/armeventgrid/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { EventGridManagementClient } = require("@azure/arm-eventgrid");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Asynchronously updates a system topic with the specified parameters.
       *
       * @summary Asynchronously updates a system topic with the specified parameters.
       * x-ms-original-file: specification/eventgrid/resource-manager/Microsoft.EventGrid/stable/2022-06-15/examples/SystemTopics_Update.json
       */
      async function systemTopicsUpdate() {
        const subscriptionId = "5b4b650e-28b9-4790-b3ab-ddbd88d727c4";
        const resourceGroupName = "examplerg";
        const systemTopicName = "exampleSystemTopic1";
        const systemTopicUpdateParameters = {
          tags: { tag1: "value1", tag2: "value2" },
        };
        const credential = new DefaultAzureCredential();
        const client = new EventGridManagementClient(credential, subscriptionId);
        const result = await client.systemTopics.beginUpdateAndWait(
          resourceGroupName,
          systemTopicName,
          systemTopicUpdateParameters
        );
        console.log(result);
      }

      systemTopicsUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-eventgrid_14.0.0/sdk/eventgrid/arm-eventgrid/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "provisioningState": "Succeeded",
          "source": "/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/azureeventgridrunnerrgcentraluseuap/providers/microsoft.storage/storageaccounts/pubstgrunnerb71cd29e",
          "topicType": "microsoft.storage.storageaccounts",
          "metricResourceId": "183c0fb1-17ff-47b6-ac77-5a47420ab01e"
        },
        "location": "centraluseuap",
        "tags": null,
        "id": "/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/systemTopics/exampleSystemTopic2",
        "name": "exampleSystemTopic2",
        "type": "Microsoft.EventGrid/systemTopics"
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "provisioningState": "Succeeded",
          "source": "/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/azureeventgridrunnerrgcentraluseuap/providers/microsoft.storage/storageaccounts/pubstgrunnerb71cd29e",
          "topicType": "microsoft.storage.storageaccounts",
          "metricResourceId": "183c0fb1-17ff-47b6-ac77-5a47420ab01e"
        },
        "location": "centraluseuap",
        "tags": null,
        "id": "/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/systemTopics/exampleSystemTopic2",
        "name": "exampleSystemTopic2",
        "type": "Microsoft.EventGrid/systemTopics"
      }
security: []
metadata:
  description: >
    Learn more about Event Grid service - Update a system topic.

    Asynchronously updates a system topic with the specified parameters.
errorCodes: []
