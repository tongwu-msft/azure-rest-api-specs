### YamlMime:RESTOperation
uid: management.azure.com.serialconsole.listoperations.listoperations
name: List Operations
service: Serial Console
groupName: List Operations
apiVersion: 2018-05-01
summary: Gets a list of Serial Console API operations.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/providers/Microsoft.SerialConsole/operations?api-version=2018-05-01
uriParameters:
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK - returns a JSON object
  types:
  - uid: SerialConsoleOperations
requestHeader: []
definitions:
- name: SerialConsoleOperations
  description: Serial Console operations
  kind: object
  properties:
  - name: value
    description: A list of Serial Console operations
    types:
    - uid: Value
      isArray: true
- name: Value
  description: A list of Serial Console operations
  kind: object
  properties:
  - name: name
    description: ''
    types:
    - uid: string
  - name: isDataAction
    description: ''
    types:
    - uid: string
  - name: display
    description: ''
    types:
    - uid: Display
- name: Display
  kind: object
  properties:
  - name: provider
    description: ''
    types:
    - uid: string
  - name: resource
    description: ''
    types:
    - uid: string
  - name: operation
    description: ''
    types:
    - uid: string
  - name: description
    description: ''
    types:
    - uid: string
examples:
- name: List all Serial Console management operations supported by Serial Console RP
  request:
    uri: GET https://management.azure.com/providers/Microsoft.SerialConsole/operations?api-version=2018-05-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/providers/Microsoft.SerialConsole/operations?api-version=2018-05-01
      ```

      # [Go](#tab/Go)
      ``` go
      package armserialconsole_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/serialconsole/armserialconsole"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/serialconsole/resource-manager/Microsoft.SerialConsole/stable/2018-05-01/examples/GetOperationsExample.json
      func ExampleMicrosoftSerialConsoleClient_ListOperations() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armserialconsole.NewMicrosoftSerialConsoleClient("<subscription-id>", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.ListOperations(ctx,
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fserialconsole%2Farmserialconsole%2Fv1.0.0/sdk/resourcemanager/serialconsole/armserialconsole/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { MicrosoftSerialConsoleClient } = require("@azure/arm-serialconsole");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a list of Serial Console API operations.
       *
       * @summary Gets a list of Serial Console API operations.
       * x-ms-original-file: specification/serialconsole/resource-manager/Microsoft.SerialConsole/stable/2018-05-01/examples/GetOperationsExample.json
       */
      async function listAllSerialConsoleManagementOperationsSupportedBySerialConsoleRp() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const credential = new DefaultAzureCredential();
        const client = new MicrosoftSerialConsoleClient(credential, subscriptionId);
        const result = await client.listOperations();
        console.log(result);
      }

      listAllSerialConsoleManagementOperationsSupportedBySerialConsoleRp().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-serialconsole_2.0.1/sdk/serialconsole/arm-serialconsole/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "name": "Microsoft.SerialConsole/consoleServices/read",
            "isDataAction": "false",
            "display": {
              "provider": "Microsoft.SerialConsole",
              "resource": "Serial Console instance",
              "operation": "Default",
              "description": "Retrieves the current subscription state"
            }
          },
          {
            "name": "Microsoft.SerialConsole/consoleServices/disableConsole/action",
            "isDataAction": "false",
            "display": {
              "provider": "Microsoft.SerialConsole",
              "resource": "Serial Console instance",
              "operation": "Disable Console",
              "description": "Disable Serial Console for a subscription"
            }
          },
          {
            "name": "Microsoft.SerialConsole/consoleServices/enableConsole/action",
            "isDataAction": "false",
            "display": {
              "provider": "Microsoft.SerialConsole",
              "resource": "Serial Console instance",
              "operation": "Enable Console",
              "description": "Enable Serial Console for a subscription"
            }
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Serial Console service - Gets a list of Serial Console API operations.
errorCodes: []
