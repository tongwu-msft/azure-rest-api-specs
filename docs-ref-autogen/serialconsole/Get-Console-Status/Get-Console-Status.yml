### YamlMime:RESTOperation
uid: management.azure.com.serialconsole.getconsolestatus.getconsolestatus
name: Get Console Status
service: Serial Console
groupName: Get Console Status
apiVersion: 2018-05-01
summary: "Get the disabled status for a subscription  \nGets whether or not Serial Console is disabled for a given subscription"
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.SerialConsole/consoleServices/{default}?api-version=2018-05-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription ID which uniquely identifies the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call requiring it.
  types:
  - uid: string
- name: default
  in: path
  isRequired: true
  description: Default parameter. Leave the value as "default".
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK - Returns a JSON object
  types:
  - uid: SerialConsoleStatus
- name: 404 Not Found
  description: Subscription not found - returns a JSON object with error details
  types:
  - uid: GetSerialConsoleSubscriptionNotFound
requestHeader: []
definitions:
- name: SerialConsoleStatus
  description: Serial Console GET Result
  kind: object
  properties:
  - name: disabled
    description: Whether or not Serial Console is disabled.
    types:
    - uid: boolean
- name: GetSerialConsoleSubscriptionNotFound
  description: Serial Console subscription not found
  kind: object
  properties:
  - name: code
    description: Error code
    types:
    - uid: string
  - name: message
    description: Subscription not found message
    types:
    - uid: string
examples:
- name: Get the Serial Console disabled status for a subscription
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-00000-0000-0000-000000000000/providers/Microsoft.SerialConsole/consoleServices/default?api-version=2018-05-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-00000-0000-0000-000000000000/providers/Microsoft.SerialConsole/consoleServices/default?api-version=2018-05-01
      ```

      # [Go](#tab/Go)
      ``` go
      package armserialconsole_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/serialconsole/armserialconsole"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/serialconsole/resource-manager/Microsoft.SerialConsole/stable/2018-05-01/examples/SerialConsoleStatus.json
      func ExampleMicrosoftSerialConsoleClient_GetConsoleStatus() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armserialconsole.NewMicrosoftSerialConsoleClient("00000000-00000-0000-0000-000000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.GetConsoleStatus(ctx,
      		"default",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fserialconsole%2Farmserialconsole%2Fv1.0.0/sdk/resourcemanager/serialconsole/armserialconsole/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { MicrosoftSerialConsoleClient } = require("@azure/arm-serialconsole");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets whether or not Serial Console is disabled for a given subscription
       *
       * @summary Gets whether or not Serial Console is disabled for a given subscription
       * x-ms-original-file: specification/serialconsole/resource-manager/Microsoft.SerialConsole/stable/2018-05-01/examples/SerialConsoleStatus.json
       */
      async function getTheSerialConsoleDisabledStatusForASubscription() {
        const subscriptionId = "00000000-00000-0000-0000-000000000000";
        const defaultParam = "default";
        const credential = new DefaultAzureCredential();
        const client = new MicrosoftSerialConsoleClient(credential, subscriptionId);
        const result = await client.getConsoleStatus(defaultParam);
        console.log(result);
      }

      getTheSerialConsoleDisabledStatusForASubscription().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-serialconsole_2.0.1/sdk/serialconsole/arm-serialconsole/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "disabled": true
      }
  - statusCode: "404"
    body: >-
      {
        "code": "SubscriptionNotFound",
        "message": "The subscription '00000000-00000-0000-0000-000000000000' could not be found."
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Get the disabled status for a subscription

    Gets whether or not Serial Console is disabled for a given subscription
errorCodes: []
