### YamlMime:RESTOperation
uid: management.azure.com.dynatrace.monitors.createorupdate
name: Create Or Update
service: Dynatrace
groupName: Monitors
apiVersion: 2021-09-01-preview
summary: Create a MonitorResource
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}?api-version=2021-09-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: monitorName
  in: path
  isRequired: true
  description: Monitor resource name
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: ARM operation completed successfully.
  types:
  - uid: MonitorResource
- name: 201 Created
  description: ARM create operation completed successfully.
  types:
  - uid: MonitorResource
- name: Other Status Codes
  description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: identity
    in: body
    description: The managed service identities assigned to this resource.
    types:
    - uid: IdentityProperties
  - name: properties.monitoringStatus
    in: body
    description: Status of the monitor.
    types:
    - uid: MonitoringStatus
  - name: properties.marketplaceSubscriptionStatus
    in: body
    description: Marketplace subscription status.
    types:
    - uid: MarketplaceSubscriptionStatus
  - name: properties.dynatraceEnvironmentProperties
    in: body
    description: Properties of the Dynatrace environment.
    types:
    - uid: DynatraceEnvironmentProperties
  - name: properties.userInfo
    in: body
    description: User info.
    types:
    - uid: UserInfo
  - name: properties.planData
    in: body
    description: Billing plan information.
    types:
    - uid: PlanData
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    in: body
    isRequired: true
    description: The geo-location where the resource lives
    types:
    - uid: string
requestHeader: []
definitions:
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: IdentityProperties
  description: The properties of the managed service identities assigned to this resource.
  kind: object
  properties:
  - name: tenantId
    isReadyOnly: true
    description: The Active Directory tenant id of the principal.
    types:
    - uid: string
  - name: principalId
    isReadyOnly: true
    description: The active directory identifier of this principal.
    types:
    - uid: string
  - name: type
    description: The type of managed identity assigned to this resource.
    types:
    - uid: ManagedIdentityType
  - name: userAssignedIdentities
    description: The identities assigned to this resource by the user.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: UserAssignedIdentity
- name: DynatraceEnvironmentProperties
  description: Properties of the Dynatrace environment.
  kind: object
  properties:
  - name: userId
    description: User id
    types:
    - uid: string
  - name: accountInfo
    description: Dynatrace Account Information
    types:
    - uid: AccountInfo
  - name: environmentInfo
    description: Dynatrace Environment Information
    types:
    - uid: EnvironmentInfo
  - name: singleSignOnProperties
    description: The details of a Dynatrace single sign-on.
    types:
    - uid: DynatraceSingleSignOnProperties
- name: UserInfo
  description: User info.
  kind: object
  properties:
  - name: firstName
    description: First Name of the user
    types:
    - uid: string
  - name: lastName
    description: Last Name of the user
    types:
    - uid: string
  - name: emailAddress
    description: Email of the user used by Dynatrace for contacting them if needed
    types:
    - uid: string
  - name: phoneNumber
    description: Phone number of the user used by Dynatrace for contacting them if needed
    types:
    - uid: string
  - name: country
    description: Country of the user
    types:
    - uid: string
- name: PlanData
  description: Billing plan information.
  kind: object
  properties:
  - name: usageType
    description: different usage type like PAYG/COMMITTED. this could be enum
    types:
    - uid: string
  - name: billingCycle
    description: different billing cycles like MONTHLY/WEEKLY. this could be enum
    types:
    - uid: string
  - name: planDetails
    description: plan id as published by Dynatrace
    types:
    - uid: string
  - name: effectiveDate
    description: date when plan was applied
    types:
    - uid: string
- name: MonitorResource
  description: Dynatrace Monitor Resource
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: System metadata for this resource.
    types:
    - uid: systemData
  - name: identity
    description: The managed service identities assigned to this resource.
    types:
    - uid: IdentityProperties
  - name: properties.monitoringStatus
    description: Status of the monitor.
    types:
    - uid: MonitoringStatus
  - name: properties.marketplaceSubscriptionStatus
    description: Marketplace subscription status.
    types:
    - uid: MarketplaceSubscriptionStatus
  - name: properties.dynatraceEnvironmentProperties
    description: Properties of the Dynatrace environment.
    types:
    - uid: DynatraceEnvironmentProperties
  - name: properties.userInfo
    description: User info.
    types:
    - uid: UserInfo
  - name: properties.planData
    description: Billing plan information.
    types:
    - uid: PlanData
  - name: properties.liftrResourceCategory
    isReadyOnly: true
    description: Liftr Resource category.
    types:
    - uid: LiftrResourceCategories
  - name: properties.liftrResourcePreference
    isReadyOnly: true
    description: The priority of the resource.
    types:
    - uid: integer
  - name: properties.provisioningState
    isReadyOnly: true
    description: Provisioning state of the resource.
    types:
    - uid: ProvisioningState
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: ManagedIdentityType
  description: The kind of managed identity assigned to this resource.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
  - name: UserAssigned
    types:
    - uid: string
  - name: SystemAndUserAssigned
    types:
    - uid: string
- name: UserAssignedIdentity
  description: A managed identity assigned by the user.
  kind: object
  properties:
  - name: clientId
    description: The active directory client identifier for this principal.
    types:
    - uid: string
  - name: principalId
    description: The active directory identifier for this principal.
    types:
    - uid: string
- name: AccountInfo
  description: Dynatrace Account Information
  kind: object
  properties:
  - name: accountId
    description: Account Id of the account this environment is linked to
    types:
    - uid: string
  - name: regionId
    description: Region in which the account is created
    types:
    - uid: string
- name: EnvironmentInfo
  description: Dynatrace Environment Information
  kind: object
  properties:
  - name: environmentId
    description: Id of the environment created
    types:
    - uid: string
  - name: ingestionKey
    description: Ingestion key of the environment
    types:
    - uid: string
  - name: logsIngestionEndpoint
    description: Ingestion endpoint used for sending logs
    types:
    - uid: string
  - name: landingURL
    description: Landing URL for Dynatrace environment
    types:
    - uid: string
- name: DynatraceSingleSignOnProperties
  description: The details of a Dynatrace single sign-on.
  kind: object
  properties:
  - name: singleSignOnState
    description: State of Single Sign On
    types:
    - uid: SingleSignOnStates
  - name: enterpriseAppId
    description: Version of the Dynatrace agent installed on the VM.
    types:
    - uid: string
  - name: singleSignOnUrl
    description: The login URL specific to this Dynatrace Environment
    types:
    - uid: string
  - name: aadDomains
    description: array of Aad(azure active directory) domains
    types:
    - uid: string
      isArray: true
  - name: provisioningState
    isReadyOnly: true
    description: Provisioning state of the resource.
    types:
    - uid: ProvisioningState
- name: MonitoringStatus
  description: Flag specifying if the resource monitoring is enabled or disabled.
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: MarketplaceSubscriptionStatus
  description: Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will go in Suspended state.
  kind: enum
  properties:
  - name: Active
    types:
    - uid: string
  - name: Suspended
    types:
    - uid: string
- name: LiftrResourceCategories
  description: Liftr resource category
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: MonitorLogs
    types:
    - uid: string
- name: ProvisioningState
  description: Provisioning state of the monitoring resource
  kind: enum
  properties:
  - name: Accepted
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
  - name: Deleted
    types:
    - uid: string
  - name: NotSpecified
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: SingleSignOnStates
  description: Various states of the SSO resource
  kind: enum
  properties:
  - name: Initial
    types:
    - uid: string
  - name: Enable
    types:
    - uid: string
  - name: Disable
    types:
    - uid: string
  - name: Existing
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Monitors_CreateOrUpdate_MaximumSet_Gen
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Dynatrace.Observability/monitors/myMonitor?api-version=2021-09-01-preview
    body: >-
      {
        "identity": {
          "type": "SystemAssigned"
        },
        "properties": {
          "monitoringStatus": "Enabled",
          "marketplaceSubscriptionStatus": "Active",
          "dynatraceEnvironmentProperties": {
            "accountInfo": {},
            "environmentInfo": {},
            "singleSignOnProperties": {}
          },
          "userInfo": {
            "firstName": "Alice",
            "lastName": "Bobab",
            "emailAddress": "alice@microsoft.com",
            "phoneNumber": "123456",
            "country": "westus2"
          },
          "planData": {
            "usageType": "Committed",
            "billingCycle": "Monthly",
            "planDetails": "dynatraceapitestplan",
            "effectiveDate": "2019-08-30T15:14:33+02:00"
          },
          "liftrResourceCategory": "Unknown",
          "provisioningState": "Accepted"
        },
        "tags": {
          "Environment": "Dev"
        },
        "location": "West US 2"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Dynatrace.Observability/monitors/myMonitor?api-version=2021-09-01-preview

      {
        "identity": {
          "type": "SystemAssigned"
        },
        "properties": {
          "monitoringStatus": "Enabled",
          "marketplaceSubscriptionStatus": "Active",
          "dynatraceEnvironmentProperties": {
            "accountInfo": {},
            "environmentInfo": {},
            "singleSignOnProperties": {}
          },
          "userInfo": {
            "firstName": "Alice",
            "lastName": "Bobab",
            "emailAddress": "alice@microsoft.com",
            "phoneNumber": "123456",
            "country": "westus2"
          },
          "planData": {
            "usageType": "Committed",
            "billingCycle": "Monthly",
            "planDetails": "dynatraceapitestplan",
            "effectiveDate": "2019-08-30T15:14:33+02:00"
          },
          "liftrResourceCategory": "Unknown",
          "provisioningState": "Accepted"
        },
        "tags": {
          "Environment": "Dev"
        },
        "location": "West US 2"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.resourcemanager.dynatrace.fluent.models.DynatraceSingleSignOnProperties;
      import com.azure.resourcemanager.dynatrace.models.AccountInfo;
      import com.azure.resourcemanager.dynatrace.models.DynatraceEnvironmentProperties;
      import com.azure.resourcemanager.dynatrace.models.EnvironmentInfo;
      import com.azure.resourcemanager.dynatrace.models.IdentityProperties;
      import com.azure.resourcemanager.dynatrace.models.ManagedIdentityType;
      import com.azure.resourcemanager.dynatrace.models.MarketplaceSubscriptionStatus;
      import com.azure.resourcemanager.dynatrace.models.MonitoringStatus;
      import com.azure.resourcemanager.dynatrace.models.PlanData;
      import com.azure.resourcemanager.dynatrace.models.UserInfo;
      import java.time.OffsetDateTime;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for Monitors CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dynatrace/resource-manager/Dynatrace.Observability/preview/2021-09-01-preview/examples/Monitors_CreateOrUpdate_MaximumSet_Gen.json
           */
          /**
           * Sample code: Monitors_CreateOrUpdate_MaximumSet_Gen.
           *
           * @param manager Entry point to DynatraceManager.
           */
          public static void monitorsCreateOrUpdateMaximumSetGen(
              com.azure.resourcemanager.dynatrace.DynatraceManager manager) {
              manager
                  .monitors()
                  .define("myMonitor")
                  .withRegion("West US 2")
                  .withExistingResourceGroup("myResourceGroup")
                  .withTags(mapOf("Environment", "Dev"))
                  .withIdentity(new IdentityProperties().withType(ManagedIdentityType.SYSTEM_ASSIGNED))
                  .withMonitoringStatus(MonitoringStatus.ENABLED)
                  .withMarketplaceSubscriptionStatus(MarketplaceSubscriptionStatus.ACTIVE)
                  .withDynatraceEnvironmentProperties(
                      new DynatraceEnvironmentProperties()
                          .withAccountInfo(new AccountInfo())
                          .withEnvironmentInfo(new EnvironmentInfo())
                          .withSingleSignOnProperties(new DynatraceSingleSignOnProperties()))
                  .withUserInfo(
                      new UserInfo()
                          .withFirstName("Alice")
                          .withLastName("Bobab")
                          .withEmailAddress("alice@microsoft.com")
                          .withPhoneNumber("123456")
                          .withCountry("westus2"))
                  .withPlanData(
                      new PlanData()
                          .withUsageType("Committed")
                          .withBillingCycle("Monthly")
                          .withPlanDetails("dynatraceapitestplan")
                          .withEffectiveDate(OffsetDateTime.parse("2019-08-30T15:14:33+02:00")))
                  .create();
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-dynatrace_1.0.0-beta.1/sdk/dynatrace/azure-resourcemanager-dynatrace/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armdynatrace_test

      import (
      	"context"
      	"log"

      	"time"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/dynatrace/armdynatrace"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/dynatrace/resource-manager/Dynatrace.Observability/preview/2021-09-01-preview/examples/Monitors_CreateOrUpdate_MaximumSet_Gen.json
      func ExampleMonitorsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armdynatrace.NewMonitorsClient("00000000-0000-0000-0000-000000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"myResourceGroup",
      		"myMonitor",
      		armdynatrace.MonitorResource{
      			Location: to.Ptr("West US 2"),
      			Tags: map[string]*string{
      				"Environment": to.Ptr("Dev"),
      			},
      			Identity: &armdynatrace.IdentityProperties{
      				Type: to.Ptr(armdynatrace.ManagedIdentityTypeSystemAssigned),
      			},
      			Properties: &armdynatrace.MonitorProperties{
      				DynatraceEnvironmentProperties: &armdynatrace.EnvironmentProperties{
      					AccountInfo:            &armdynatrace.AccountInfo{},
      					EnvironmentInfo:        &armdynatrace.EnvironmentInfo{},
      					SingleSignOnProperties: &armdynatrace.SingleSignOnProperties{},
      				},
      				LiftrResourceCategory:         to.Ptr(armdynatrace.LiftrResourceCategoriesUnknown),
      				MarketplaceSubscriptionStatus: to.Ptr(armdynatrace.MarketplaceSubscriptionStatusActive),
      				MonitoringStatus:              to.Ptr(armdynatrace.MonitoringStatusEnabled),
      				PlanData: &armdynatrace.PlanData{
      					BillingCycle:  to.Ptr("Monthly"),
      					EffectiveDate: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2019-08-30T15:14:33+02:00"); return t }()),
      					PlanDetails:   to.Ptr("dynatraceapitestplan"),
      					UsageType:     to.Ptr("Committed"),
      				},
      				ProvisioningState: to.Ptr(armdynatrace.ProvisioningStateAccepted),
      				UserInfo: &armdynatrace.UserInfo{
      					Country:      to.Ptr("westus2"),
      					EmailAddress: to.Ptr("alice@microsoft.com"),
      					FirstName:    to.Ptr("Alice"),
      					LastName:     to.Ptr("Bobab"),
      					PhoneNumber:  to.Ptr("123456"),
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fdynatrace%2Farmdynatrace%2Fv0.1.0/sdk/resourcemanager/dynatrace/armdynatrace/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DynatraceObservability } = require("@azure/arm-dynatrace");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create a MonitorResource
       *
       * @summary Create a MonitorResource
       * x-ms-original-file: specification/dynatrace/resource-manager/Dynatrace.Observability/preview/2021-09-01-preview/examples/Monitors_CreateOrUpdate_MaximumSet_Gen.json
       */
      async function monitorsCreateOrUpdateMaximumSetGen() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "myResourceGroup";
        const monitorName = "myMonitor";
        const resource = {
          dynatraceEnvironmentProperties: {
            accountInfo: {},
            environmentInfo: {},
            singleSignOnProperties: {},
          },
          identity: { type: "SystemAssigned" },
          liftrResourceCategory: "Unknown",
          location: "West US 2",
          marketplaceSubscriptionStatus: "Active",
          monitoringStatus: "Enabled",
          planData: {
            billingCycle: "Monthly",
            effectiveDate: new Date("2019-08-30T15:14:33+02:00"),
            planDetails: "dynatraceapitestplan",
            usageType: "Committed",
          },
          provisioningState: "Accepted",
          tags: { environment: "Dev" },
          userInfo: {
            country: "westus2",
            emailAddress: "alice@microsoft.com",
            firstName: "Alice",
            lastName: "Bobab",
            phoneNumber: "123456",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new DynatraceObservability(credential, subscriptionId);
        const result = await client.monitors.beginCreateOrUpdateAndWait(
          resourceGroupName,
          monitorName,
          resource
        );
        console.log(result);
      }

      monitorsCreateOrUpdateMaximumSetGen().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dynatrace_1.0.0-beta.2/sdk/dynatrace/arm-dynatrace/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "identity": {
          "principalId": "4534676867978",
          "tenantId": "23456789001",
          "type": "SystemAssigned"
        },
        "properties": {
          "monitoringStatus": "Enabled",
          "marketplaceSubscriptionStatus": "Active",
          "dynatraceEnvironmentProperties": {
            "userId": "alice123",
            "accountInfo": {
              "accountId": "1234567890",
              "regionId": "wus2"
            },
            "environmentInfo": {
              "environmentId": "a23xcv456",
              "ingestionKey": "1234567890",
              "logsIngestionEndpoint": "https://dynatrace.com"
            },
            "singleSignOnProperties": {
              "singleSignOnState": "Enable",
              "enterpriseAppId": "00000000-0000-0000-0000-000000000000",
              "singleSignOnUrl": "https://www.dynatrace.io/IAmSomeHash",
              "aadDomains": [
                "mpliftrdt20210811outlook.onmicrosoft.com"
              ]
            }
          },
          "userInfo": {
            "firstName": "Alice",
            "lastName": "Bobab",
            "emailAddress": "alice@microsoft.com",
            "phoneNumber": "123456",
            "country": "westus2"
          },
          "planData": {
            "usageType": "Committed",
            "billingCycle": "Monthly",
            "planDetails": "dynatraceapitestplan",
            "effectiveDate": "2019-08-30T15:14:33+02:00"
          },
          "liftrResourceCategory": "Unknown",
          "liftrResourcePreference": 28,
          "provisioningState": "Accepted"
        },
        "systemData": {
          "createdBy": "alice@microsoft.com",
          "createdByType": "User",
          "createdAt": "2021-07-16T04:25:21.040Z",
          "lastModifiedBy": "alice@microsoft.com",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2021-07-16T04:25:21.040Z"
        },
        "tags": {
          "Environment": "Dev"
        },
        "location": "West US 2",
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/monitors/myMonitor",
        "name": "myMonitor",
        "type": "Dynatrace.Observability/monitors"
      }
  - statusCode: "201"
    headers:
    - name: Azure-AsyncOperation
      value: https://foo.com/operationstatus
    body: >-
      {
        "identity": {
          "principalId": "4534676867978",
          "tenantId": "23456789001",
          "type": "SystemAssigned"
        },
        "properties": {
          "monitoringStatus": "Enabled",
          "marketplaceSubscriptionStatus": "Active",
          "dynatraceEnvironmentProperties": {
            "userId": "alice123",
            "accountInfo": {
              "accountId": "1234567890",
              "regionId": "wus2"
            },
            "environmentInfo": {
              "environmentId": "a23xcv456",
              "ingestionKey": "1234567890",
              "logsIngestionEndpoint": "https://dynatrace.com"
            },
            "singleSignOnProperties": {
              "singleSignOnState": "Enable",
              "enterpriseAppId": "00000000-0000-0000-0000-000000000000",
              "singleSignOnUrl": "https://www.dynatrace.io/IAmSomeHash",
              "aadDomains": [
                "mpliftrdt20210811outlook.onmicrosoft.com"
              ]
            }
          },
          "userInfo": {
            "firstName": "Alice",
            "lastName": "Bobab",
            "emailAddress": "alice@microsoft.com",
            "phoneNumber": "123456",
            "country": "westus2"
          },
          "planData": {
            "usageType": "Committed",
            "billingCycle": "Monthly",
            "planDetails": "dynatraceapitestplan",
            "effectiveDate": "2019-08-30T15:14:33+02:00"
          },
          "liftrResourceCategory": "Unknown",
          "liftrResourcePreference": 28,
          "provisioningState": "Accepted"
        },
        "systemData": {
          "createdBy": "alice@microsoft.com",
          "createdByType": "User",
          "createdAt": "2021-07-16T04:25:21.040Z",
          "lastModifiedBy": "alice@microsoft.com",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2021-07-16T04:25:21.040Z"
        },
        "tags": {
          "Environment": "Dev"
        },
        "location": "West US 2",
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/monitors/myMonitor",
        "name": "myMonitor",
        "type": "Dynatrace.Observability/monitors"
      }
- name: Monitors_CreateOrUpdate_MinimumSet_Gen
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Dynatrace.Observability/monitors/myMonitor?api-version=2021-09-01-preview
    body: >-
      {
        "properties": {},
        "location": "West US 2"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Dynatrace.Observability/monitors/myMonitor?api-version=2021-09-01-preview

      {
        "properties": {},
        "location": "West US 2"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for Monitors CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dynatrace/resource-manager/Dynatrace.Observability/preview/2021-09-01-preview/examples/Monitors_CreateOrUpdate_MinimumSet_Gen.json
           */
          /**
           * Sample code: Monitors_CreateOrUpdate_MinimumSet_Gen.
           *
           * @param manager Entry point to DynatraceManager.
           */
          public static void monitorsCreateOrUpdateMinimumSetGen(
              com.azure.resourcemanager.dynatrace.DynatraceManager manager) {
              manager
                  .monitors()
                  .define("myMonitor")
                  .withRegion("West US 2")
                  .withExistingResourceGroup("myResourceGroup")
                  .create();
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-dynatrace_1.0.0-beta.1/sdk/dynatrace/azure-resourcemanager-dynatrace/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DynatraceObservability } = require("@azure/arm-dynatrace");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create a MonitorResource
       *
       * @summary Create a MonitorResource
       * x-ms-original-file: specification/dynatrace/resource-manager/Dynatrace.Observability/preview/2021-09-01-preview/examples/Monitors_CreateOrUpdate_MinimumSet_Gen.json
       */
      async function monitorsCreateOrUpdateMinimumSetGen() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "myResourceGroup";
        const monitorName = "myMonitor";
        const resource = { location: "West US 2" };
        const credential = new DefaultAzureCredential();
        const client = new DynatraceObservability(credential, subscriptionId);
        const result = await client.monitors.beginCreateOrUpdateAndWait(
          resourceGroupName,
          monitorName,
          resource
        );
        console.log(result);
      }

      monitorsCreateOrUpdateMinimumSetGen().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dynatrace_1.0.0-beta.2/sdk/dynatrace/arm-dynatrace/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {},
        "location": "West US 2"
      }
  - statusCode: "201"
    headers:
    - name: Azure-AsyncOperation
      value: https://foo.com/operationstatus
    body: >-
      {
        "properties": {},
        "location": "West US 2"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Dynatrace service - Create a MonitorResource
errorCodes: []
