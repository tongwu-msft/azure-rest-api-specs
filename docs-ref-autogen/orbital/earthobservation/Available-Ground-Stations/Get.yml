### YamlMime:RESTOperation
uid: management.azure.com.orbital.earthobservation.availablegroundstations.get
name: Get
service: Orbital
groupName: Available Ground Stations
apiVersion: 2022-03-01
summary: Gets the specified available ground station.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/availableGroundStations/{groundStationName}?api-version=2022-03-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: groundStationName
  in: path
  isRequired: true
  description: Ground Station name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: apiVersionParameter
responses:
- name: 200 OK
  description: Request successful. The operation returns the resulting ground station resource.
  types:
  - uid: AvailableGroundStation
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: apiVersionParameter
  description: Version of the API to be used with the client request.
  kind: enum
  properties:
  - name: 2020-09-01-preview
    types:
    - uid: string
  - name: 2021-04-04-preview
    types:
    - uid: string
  - name: 2022-03-01
    types:
    - uid: string
- name: AvailableGroundStation
  description: Ground Stations available to schedule Contacts.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: ID of groundStation.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Name of the ground station.
    types:
    - uid: string
  - name: location
    description: Azure region.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: properties.city
    description: City of ground station.
    types:
    - uid: string
  - name: properties.providerName
    description: Ground station provider name.
    types:
    - uid: string
  - name: properties.longitudeDegrees
    description: Longitude of the ground station in decimal degrees.
    types:
    - uid: number
  - name: properties.latitudeDegrees
    description: Latitude of the ground station in decimal degrees.
    types:
    - uid: number
  - name: properties.altitudeMeters
    description: Altitude of the ground station.
    types:
    - uid: number
  - name: properties.releaseMode
    description: Release Status of a ground station.
    types:
    - uid: releaseMode
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: An error response from the service.
    types:
    - uid: CloudErrorBody
- name: releaseMode
  description: Release Status of a ground station.
  kind: enum
  properties:
  - name: Preview
    types:
    - uid: string
  - name: GA
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: Get GroundStation
  request:
    uri: GET https://management.azure.com/subscriptions/c1be1141-a7c9-4aac-9608-3c2e2f1152c3/providers/Microsoft.Orbital/availableGroundStations/EASTUS2_0?api-version=2022-03-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/c1be1141-a7c9-4aac-9608-3c2e2f1152c3/providers/Microsoft.Orbital/availableGroundStations/EASTUS2_0?api-version=2022-03-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for AvailableGroundStations Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/orbital/resource-manager/Microsoft.Orbital/stable/2022-03-01/examples/AvailableGroundStationGet.json
           */
          /**
           * Sample code: Get GroundStation.
           *
           * @param manager Entry point to OrbitalManager.
           */
          public static void getGroundStation(com.azure.resourcemanager.orbital.OrbitalManager manager) {
              manager.availableGroundStations().getWithResponse("EASTUS2_0", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-orbital_1.0.0-beta.1/sdk/orbital/azure-resourcemanager-orbital/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armorbital_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/orbital/armorbital"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/orbital/resource-manager/Microsoft.Orbital/stable/2022-03-01/examples/AvailableGroundStationGet.json
      func ExampleAvailableGroundStationsClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armorbital.NewAvailableGroundStationsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"westus_gs1",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Forbital%2Farmorbital%2Fv1.0.0/sdk/resourcemanager/orbital/armorbital/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AzureOrbital } = require("@azure/arm-orbital");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets the specified  available ground station
       *
       * @summary Gets the specified  available ground station
       * x-ms-original-file: specification/orbital/resource-manager/Microsoft.Orbital/stable/2022-03-01/examples/AvailableGroundStationGet.json
       */
      async function getGroundStation() {
        const subscriptionId = "subid";
        const groundStationName = "westus_gs1";
        const credential = new DefaultAzureCredential();
        const client = new AzureOrbital(credential, subscriptionId);
        const result = await client.availableGroundStations.get(groundStationName);
        console.log(result);
      }

      getGroundStation().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-orbital_1.1.0/sdk/orbital/arm-orbital/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "location": "eastus2",
        "id": "/subscriptions/c1be1141-a7c9-4aac-9608-3c2e2f1152c3/providers/Microsoft.Orbital/availableGroundStations/EASTUS2_0",
        "name": "EASTUS2_0",
        "type": "Microsoft.Orbital/availableGroundStations",
        "properties": {
          "city": "Atlanta",
          "providerName": "Microsoft",
          "longitudeDegrees": -84.39111,
          "latitudeDegrees": 33.74831,
          "altitudeMeters": 1641
        }
      }
security: []
metadata:
  description: >
    Learn more about Orbital service - Gets the specified available ground station.
errorCodes: []
