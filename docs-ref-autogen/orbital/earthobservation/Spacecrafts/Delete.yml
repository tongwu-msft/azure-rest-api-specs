### YamlMime:RESTOperation
uid: management.azure.com.orbital.earthobservation.spacecrafts.delete
name: Delete
service: Orbital
groupName: Spacecrafts
apiVersion: 2022-03-01
summary: Deletes a specified spacecraft resource.
consumes:
- application/json
produces:
- application/json
paths:
- content: DELETE https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}?api-version=2022-03-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: spacecraftName
  in: path
  isRequired: true
  description: Spacecraft ID.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: apiVersionParameter
responses:
- name: 200 OK
  description: Delete successful.
- name: 202 Accepted
  headers:
  - name: Location
    value: string
  description: Accepted and the operation will complete asynchronously.
- name: 204 No Content
  description: Request successful. Resource does not exist.
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: apiVersionParameter
  description: Version of the API to be used with the client request.
  kind: enum
  properties:
  - name: 2020-09-01-preview
    types:
    - uid: string
  - name: 2021-04-04-preview
    types:
    - uid: string
  - name: 2022-03-01
    types:
    - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: An error response from the service.
    types:
    - uid: CloudErrorBody
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: Delete Spacecraft
  request:
    uri: DELETE https://management.azure.com/subscriptions/c1be1141-a7c9-4aac-9608-3c2e2f1152c3/resourceGroups/contoso-Rgp/providers/Microsoft.Orbital/spacecrafts/CONTOSO_SAT?api-version=2022-03-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      DELETE https://management.azure.com/subscriptions/c1be1141-a7c9-4aac-9608-3c2e2f1152c3/resourceGroups/contoso-Rgp/providers/Microsoft.Orbital/spacecrafts/CONTOSO_SAT?api-version=2022-03-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for Spacecrafts Delete. */
      public final class Main {
          /*
           * x-ms-original-file: specification/orbital/resource-manager/Microsoft.Orbital/stable/2022-03-01/examples/SpacecraftDelete.json
           */
          /**
           * Sample code: Delete Spacecraft.
           *
           * @param manager Entry point to OrbitalManager.
           */
          public static void deleteSpacecraft(com.azure.resourcemanager.orbital.OrbitalManager manager) {
              manager.spacecrafts().delete("contoso-Rgp", "CONTOSO_SAT", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-orbital_1.0.0-beta.1/sdk/orbital/azure-resourcemanager-orbital/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armorbital_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/orbital/armorbital"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/orbital/resource-manager/Microsoft.Orbital/stable/2022-03-01/examples/SpacecraftDelete.json
      func ExampleSpacecraftsClient_BeginDelete() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armorbital.NewSpacecraftsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginDelete(ctx,
      		"rg1",
      		"AQUA",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	_, err = poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Forbital%2Farmorbital%2Fv1.0.0/sdk/resourcemanager/orbital/armorbital/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { AzureOrbital } = require("@azure/arm-orbital");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Deletes a specified spacecraft resource.
       *
       * @summary Deletes a specified spacecraft resource.
       * x-ms-original-file: specification/orbital/resource-manager/Microsoft.Orbital/stable/2022-03-01/examples/SpacecraftDelete.json
       */
      async function deleteSpacecraft() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const spacecraftName = "AQUA";
        const credential = new DefaultAzureCredential();
        const client = new AzureOrbital(credential, subscriptionId);
        const result = await client.spacecrafts.beginDeleteAndWait(resourceGroupName, spacecraftName);
        console.log(result);
      }

      deleteSpacecraft().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-orbital_1.0.0/sdk/orbital/arm-orbital/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
  - statusCode: "202"
    headers:
    - name: Location
      value: https://management.azure.com/Microsoft.Orbital/operationResults/4e2ffff7-b331-4fcb-ab11-b5fa49368188?api-version=2022-03-01
  - statusCode: "204"
security: []
metadata:
  description: Learn more about Orbital service - Deletes a specified spacecraft resource.
errorCodes: []
