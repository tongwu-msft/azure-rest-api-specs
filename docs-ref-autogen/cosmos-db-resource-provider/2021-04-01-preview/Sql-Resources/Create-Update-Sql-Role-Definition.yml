### YamlMime:RESTOperation
uid: management.azure.com.cosmos-db-resource-provider.2021-04-01-preview.sqlresources.createupdatesqlroledefinition
name: Create Update Sql Role Definition
service: Cosmos DB Resource Provider
groupName: Sql Resources
apiVersion: 2021-04-01-preview
summary: Creates or updates an Azure Cosmos DB SQL Role Definition.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlRoleDefinitions/{roleDefinitionId}?api-version=2021-04-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: accountName
  in: path
  isRequired: true
  description: Cosmos DB database account name.
  types:
  - uid: string
  pattern: ^[a-z0-9]+(-[a-z0-9]+)*
- name: roleDefinitionId
  in: path
  isRequired: true
  description: The GUID for the Role Definition.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The Role Definition create or update operation was completed successfully.
  types:
  - uid: SqlRoleDefinitionGetResults
- name: 202 Accepted
  description: The Role Definition create or update request was accepted and will complete asynchronously.
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: properties.roleName
    in: body
    description: A user-friendly name for the Role Definition. Must be unique for the database account.
    types:
    - uid: string
  - name: properties.type
    in: body
    description: Indicates whether the Role Definition was built-in or user created.
    types:
    - uid: RoleDefinitionType
  - name: properties.assignableScopes
    in: body
    description: A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.
    types:
    - uid: string
      isArray: true
  - name: properties.permissions
    in: body
    description: The set of operations allowed through this Role Definition.
    types:
    - uid: Permission
      isArray: true
requestHeader: []
definitions:
- name: Permission
  description: The set of data plane operations permitted through this Role Definition.
  kind: object
  properties:
  - name: dataActions
    description: An array of data actions that are allowed.
    types:
    - uid: string
      isArray: true
  - name: notDataActions
    description: An array of data actions that are denied.
    types:
    - uid: string
      isArray: true
- name: SqlRoleDefinitionGetResults
  description: An Azure Cosmos DB SQL Role Definition.
  kind: object
  properties:
  - name: properties.roleName
    description: A user-friendly name for the Role Definition. Must be unique for the database account.
    types:
    - uid: string
  - name: properties.type
    description: Indicates whether the Role Definition was built-in or user created.
    types:
    - uid: RoleDefinitionType
  - name: properties.assignableScopes
    description: A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.
    types:
    - uid: string
      isArray: true
  - name: properties.permissions
    description: The set of operations allowed through this Role Definition.
    types:
    - uid: Permission
      isArray: true
  - name: id
    isReadyOnly: true
    description: The unique resource identifier of the database account.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the database account.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of Azure resource.
    types:
    - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Error Response.
    types:
    - uid: ErrorResponse
- name: SqlRoleDefinitionCreateUpdateParameters
  description: Parameters to create and update an Azure Cosmos DB SQL Role Definition.
  kind: object
  properties:
  - name: properties.roleName
    description: A user-friendly name for the Role Definition. Must be unique for the database account.
    types:
    - uid: string
  - name: properties.type
    description: Indicates whether the Role Definition was built-in or user created.
    types:
    - uid: RoleDefinitionType
  - name: properties.assignableScopes
    description: A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.
    types:
    - uid: string
      isArray: true
  - name: properties.permissions
    description: The set of operations allowed through this Role Definition.
    types:
    - uid: Permission
      isArray: true
- name: RoleDefinitionType
  description: Indicates whether the Role Definition was built-in or user created.
  kind: enum
  properties:
  - name: BuiltInRole
    types:
    - uid: string
  - name: CustomRole
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response.
  kind: object
  properties:
  - name: code
    description: Error code.
    types:
    - uid: string
  - name: message
    description: Error message indicating why the operation failed.
    types:
    - uid: string
examples:
- name: CosmosDBSqlRoleDefinitionCreateUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/mySubscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/sqlRoleDefinitions/myRoleDefinitionId?api-version=2021-04-01-preview
    body: >-
      {
        "properties": {
          "roleName": "myRoleName",
          "type": "CustomRole",
          "assignableScopes": [
            "/subscriptions/mySubscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/dbs/sales",
            "/subscriptions/mySubscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/dbs/purchases"
          ],
          "permissions": [
            {
              "dataActions": [
                "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/create",
                "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
              ],
              "notDataActions": []
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/mySubscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/sqlRoleDefinitions/myRoleDefinitionId?api-version=2021-04-01-preview

      {
        "properties": {
          "roleName": "myRoleName",
          "type": "CustomRole",
          "assignableScopes": [
            "/subscriptions/mySubscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/dbs/sales",
            "/subscriptions/mySubscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/dbs/purchases"
          ],
          "permissions": [
            {
              "dataActions": [
                "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/create",
                "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
              ],
              "notDataActions": []
            }
          ]
        }
      }

      ```

  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/mySubscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/sqlRoleDefinitions/myRoleDefinitionId",
        "name": "myRoleDefinitionId",
        "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
        "properties": {
          "roleName": "myRoleName",
          "type": "CustomRole",
          "assignableScopes": [
            "/subscriptions/mySubscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/dbs/sales",
            "/subscriptions/mySubscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.DocumentDB/databaseAccounts/myAccountName/dbs/purchases"
          ],
          "permissions": [
            {
              "dataActions": [
                "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/create",
                "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
              ]
            }
          ]
        }
      }
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Impersonate your user account
metadata:
  description: Learn more about Cosmos DB Resource Provider service - Creates or updates an Azure Cosmos DB SQL Role Definition.
errorCodes: []
