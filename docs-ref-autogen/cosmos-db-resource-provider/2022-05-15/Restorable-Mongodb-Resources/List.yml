### YamlMime:RESTOperation
uid: management.azure.com.cosmos-db-resource-provider.2022-05-15.restorablemongodbresources.list
name: List
service: Cosmos DB Resource Provider
groupName: Restorable Mongodb Resources
apiVersion: 2022-05-15
summary: Return a list of database and collection combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableMongodbResources?api-version=2022-05-15
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableMongodbResources?api-version=2022-05-15&restoreLocation={restoreLocation}&restoreTimestampInUtc={restoreTimestampInUtc}
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: location
  in: path
  isRequired: true
  description: Cosmos DB region, with spaces between words and each word capitalized.
  types:
  - uid: string
- name: instanceId
  in: path
  isRequired: true
  description: The instanceId GUID of a restorable database account.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
- name: restoreLocation
  in: query
  description: The location where the restorable resources are located.
  types:
  - uid: string
- name: restoreTimestampInUtc
  in: query
  description: The timestamp when the restorable resources existed.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The operation completed successfully.
  types:
  - uid: RestorableMongodbResourcesListResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: RestorableMongodbResourcesListResult
  description: The List operation response, that contains the restorable MongoDB resources.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: List of restorable MongoDB resources, including the database and collection names.
    types:
    - uid: RestorableMongodbResourcesGetResult
      isArray: true
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Error Response.
    types:
    - uid: ErrorResponse
- name: RestorableMongodbResourcesGetResult
  description: Specific Databases to restore.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The unique resource identifier of the ARM resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the ARM resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of Azure resource.
    types:
    - uid: string
  - name: databaseName
    description: The name of the database available for restore.
    types:
    - uid: string
  - name: collectionNames
    description: The names of the collections available for restore.
    types:
    - uid: string
      isArray: true
- name: ErrorResponse
  description: Error Response.
  kind: object
  properties:
  - name: code
    description: Error code.
    types:
    - uid: string
  - name: message
    description: Error message indicating why the operation failed.
    types:
    - uid: string
examples:
- name: CosmosDBRestorableMongodbResourceList
  request:
    uri: GET https://management.azure.com/subscriptions/2296c272-5d55-40d9-bc05-4d56dc2d7588/providers/Microsoft.DocumentDB/locations/WestUS/restorableDatabaseAccounts/d9b26648-2f53-4541-b3d8-3044f4f9810d/restorableMongodbResources?api-version=2022-05-15&restoreLocation=WestUS&restoreTimestampInUtc=06/01/2022 4:56
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/2296c272-5d55-40d9-bc05-4d56dc2d7588/providers/Microsoft.DocumentDB/locations/WestUS/restorableDatabaseAccounts/d9b26648-2f53-4541-b3d8-3044f4f9810d/restorableMongodbResources?api-version=2022-05-15&restoreLocation=WestUS&restoreTimestampInUtc=06/01/2022 4:56
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for RestorableMongodbResources List. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBRestorableMongodbResourceList.json
           */
          /**
           * Sample code: CosmosDBRestorableMongodbResourceList.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void cosmosDBRestorableMongodbResourceList(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .cosmosDBAccounts()
                  .manager()
                  .serviceClient()
                  .getRestorableMongodbResources()
                  .list("WestUS", "d9b26648-2f53-4541-b3d8-3044f4f9810d", "WestUS", "06/01/2022 4:56", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcosmos_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cosmos/armcosmos/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBRestorableMongodbResourceList.json
      func ExampleRestorableMongodbResourcesClient_NewListPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcosmos.NewRestorableMongodbResourcesClient("2296c272-5d55-40d9-bc05-4d56dc2d7588", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListPager("WestUS",
      		"d9b26648-2f53-4541-b3d8-3044f4f9810d",
      		&armcosmos.RestorableMongodbResourcesClientListOptions{RestoreLocation: to.Ptr("WestUS"),
      			RestoreTimestampInUTC: to.Ptr("06/01/2022 4:56"),
      		})
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcosmos%2Farmcosmos%2Fv2.0.0/sdk/resourcemanager/cosmos/armcosmos/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { CosmosDBManagementClient } = require("@azure/arm-cosmosdb");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Return a list of database and collection combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.
       *
       * @summary Return a list of database and collection combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.
       * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBRestorableMongodbResourceList.json
       */
      async function cosmosDbRestorableMongodbResourceList() {
        const subscriptionId = "2296c272-5d55-40d9-bc05-4d56dc2d7588";
        const location = "WestUS";
        const instanceId = "d9b26648-2f53-4541-b3d8-3044f4f9810d";
        const restoreLocation = "WestUS";
        const restoreTimestampInUtc = "06/01/2022 4:56";
        const options = {
          restoreLocation,
          restoreTimestampInUtc,
        };
        const credential = new DefaultAzureCredential();
        const client = new CosmosDBManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.restorableMongodbResources.list(location, instanceId, options)) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      cosmosDbRestorableMongodbResourceList().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-cosmosdb_15.1.0/sdk/cosmosdb/arm-cosmosdb/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/2296c272-5d55-40d9-bc05-4d56dc2d7588/providers/Microsoft.DocumentDB/locations/westus/restorableDatabaseAccounts/d9b26648-2f53-4541-b3d8-3044f4f9810d/restorablemongodbresources/Database1",
            "type": "Microsoft.DocumentDB/locations/restorableDatabaseAccounts/restorablemongodbresources",
            "name": "Database1",
            "databaseName": "Database1",
            "collectionNames": [
              "Collection1"
            ]
          },
          {
            "id": "/subscriptions/2296c272-5d55-40d9-bc05-4d56dc2d7588/providers/Microsoft.DocumentDB/locations/westus/restorableDatabaseAccounts/d9b26648-2f53-4541-b3d8-3044f4f9810d/restorablemongodbresources/Database2",
            "type": "Microsoft.DocumentDB/locations/restorableDatabaseAccounts/restorablemongodbresources",
            "name": "Database2",
            "databaseName": "Database2",
            "collectionNames": [
              "Collection1",
              "Collection2"
            ]
          },
          {
            "id": "/subscriptions/2296c272-5d55-40d9-bc05-4d56dc2d7588/providers/Microsoft.DocumentDB/locations/westus/restorableDatabaseAccounts/d9b26648-2f53-4541-b3d8-3044f4f9810d/restorablemongodbresources/Database3",
            "type": "Microsoft.DocumentDB/locations/restorableDatabaseAccounts/restorablemongodbresources",
            "name": "Database3",
            "databaseName": "Database3",
            "collectionNames": []
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Impersonate your user account
metadata:
  description: Return a list of database and collection combo that exist on the account at the given timestamp and location.
errorCodes: []
