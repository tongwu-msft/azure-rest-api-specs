### YamlMime:RESTOperation
uid: management.azure.com.cosmos-db-resource-provider.2022-05-15.privateendpointconnections.createorupdate
name: Create Or Update
service: Cosmos DB Resource Provider
groupName: Private Endpoint Connections
apiVersion: 2022-05-15
summary: Approve or reject a private endpoint connection with a given name.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2022-05-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: accountName
  in: path
  isRequired: true
  description: Cosmos DB database account name.
  types:
  - uid: string
  pattern: ^[a-z0-9]+(-[a-z0-9]+)*
- name: privateEndpointConnectionName
  in: path
  isRequired: true
  description: The name of the private endpoint connection.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully approved or rejected private endpoint connection.
  types:
  - uid: PrivateEndpointConnection
- name: 202 Accepted
  description: Accepted. The private endpoint connection update will complete asynchronously.
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.privateEndpoint
    in: body
    description: Private endpoint which the connection belongs to.
    types:
    - uid: PrivateEndpointProperty
  - name: properties.privateLinkServiceConnectionState
    in: body
    description: Connection State of the Private Endpoint Connection.
    types:
    - uid: PrivateLinkServiceConnectionStateProperty
  - name: properties.groupId
    in: body
    description: Group id of the private endpoint.
    types:
    - uid: string
  - name: properties.provisioningState
    in: body
    description: Provisioning state of the private endpoint.
    types:
    - uid: string
requestHeader: []
definitions:
- name: PrivateEndpointProperty
  description: Private endpoint which the connection belongs to.
  kind: object
  properties:
  - name: id
    description: Resource id of the private endpoint.
    types:
    - uid: string
- name: PrivateLinkServiceConnectionStateProperty
  description: Connection State of the Private Endpoint Connection.
  kind: object
  properties:
  - name: status
    description: The private link service connection status.
    types:
    - uid: string
  - name: description
    description: The private link service connection description.
    types:
    - uid: string
  - name: actionsRequired
    isReadyOnly: true
    description: Any action that is required beyond basic workflow (approve/ reject/ disconnect)
    types:
    - uid: string
- name: PrivateEndpointConnection
  description: A private endpoint connection
  kind: object
  properties:
  - name: properties.privateEndpoint
    description: Private endpoint which the connection belongs to.
    types:
    - uid: PrivateEndpointProperty
  - name: properties.privateLinkServiceConnectionState
    description: Connection State of the Private Endpoint Connection.
    types:
    - uid: PrivateLinkServiceConnectionStateProperty
  - name: properties.groupId
    description: Group id of the private endpoint.
    types:
    - uid: string
  - name: properties.provisioningState
    description: Provisioning state of the private endpoint.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response.
  kind: object
  properties:
  - name: code
    description: Error code.
    types:
    - uid: string
  - name: message
    description: Error message indicating why the operation failed.
    types:
    - uid: string
examples:
- name: Approve or reject a private endpoint connection with a given name.
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/privateEndpointConnections/privateEndpointConnectionName?api-version=2022-05-15
    body: >-
      {
        "properties": {
          "privateLinkServiceConnectionState": {
            "status": "Approved",
            "description": "Approved by johndoe@contoso.com"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/privateEndpointConnections/privateEndpointConnectionName?api-version=2022-05-15

      {
        "properties": {
          "privateLinkServiceConnectionState": {
            "status": "Approved",
            "description": "Approved by johndoe@contoso.com"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.cosmos.fluent.models.PrivateEndpointConnectionInner;
      import com.azure.resourcemanager.cosmos.models.PrivateLinkServiceConnectionStateProperty;

      /** Samples for PrivateEndpointConnections CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBPrivateEndpointConnectionUpdate.json
           */
          /**
           * Sample code: Approve or reject a private endpoint connection with a given name.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void approveOrRejectAPrivateEndpointConnectionWithAGivenName(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .cosmosDBAccounts()
                  .manager()
                  .serviceClient()
                  .getPrivateEndpointConnections()
                  .createOrUpdate(
                      "rg1",
                      "ddb1",
                      "privateEndpointConnectionName",
                      new PrivateEndpointConnectionInner()
                          .withPrivateLinkServiceConnectionState(
                              new PrivateLinkServiceConnectionStateProperty()
                                  .withStatus("Approved")
                                  .withDescription("Approved by johndoe@contoso.com")),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcosmos_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cosmos/armcosmos/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBPrivateEndpointConnectionUpdate.json
      func ExamplePrivateEndpointConnectionsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcosmos.NewPrivateEndpointConnectionsClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"rg1",
      		"ddb1",
      		"privateEndpointConnectionName",
      		armcosmos.PrivateEndpointConnection{
      			Properties: &armcosmos.PrivateEndpointConnectionProperties{
      				PrivateLinkServiceConnectionState: &armcosmos.PrivateLinkServiceConnectionStateProperty{
      					Description: to.Ptr("Approved by johndoe@contoso.com"),
      					Status:      to.Ptr("Approved"),
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcosmos%2Farmcosmos%2Fv2.0.0/sdk/resourcemanager/cosmos/armcosmos/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { CosmosDBManagementClient } = require("@azure/arm-cosmosdb");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Approve or reject a private endpoint connection with a given name.
       *
       * @summary Approve or reject a private endpoint connection with a given name.
       * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBPrivateEndpointConnectionUpdate.json
       */
      async function approveOrRejectAPrivateEndpointConnectionWithAGivenName() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "rg1";
        const accountName = "ddb1";
        const privateEndpointConnectionName = "privateEndpointConnectionName";
        const parameters = {
          privateLinkServiceConnectionState: {
            description: "Approved by johndoe@contoso.com",
            status: "Approved",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new CosmosDBManagementClient(credential, subscriptionId);
        const result = await client.privateEndpointConnections.beginCreateOrUpdateAndWait(
          resourceGroupName,
          accountName,
          privateEndpointConnectionName,
          parameters
        );
        console.log(result);
      }

      approveOrRejectAPrivateEndpointConnectionWithAGivenName().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-cosmosdb_15.1.0/sdk/cosmosdb/arm-cosmosdb/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/rg1/providers/Microsoft.DocumentDb/databaseAccounts/ddb1/privateEndpointConnections/privateEndpointConnectionName",
        "name": "privateEndpointConnectionName",
        "type": "Microsoft.DocumentDb/databaseAccounts/privateEndpointConnections",
        "properties": {
          "privateEndpoint": {
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/rg1Network/providers/Microsoft.Network/privateEndpoints/privateEndpointName"
          },
          "privateLinkServiceConnectionState": {
            "status": "Approved",
            "description": "Auto-approved",
            "actionsRequired": "None"
          },
          "groupId": "Sql",
          "provisioningState": "Succeeded"
        }
      }
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Impersonate your user account
metadata:
  description: >
    Learn more about Cosmos DB Resource Provider service - Approve or reject a private endpoint connection with a given name.
errorCodes: []
