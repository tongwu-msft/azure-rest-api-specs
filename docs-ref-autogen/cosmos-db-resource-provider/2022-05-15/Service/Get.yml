### YamlMime:RESTOperation
uid: management.azure.com.cosmos-db-resource-provider.2022-05-15.service.get
name: Get
service: Cosmos DB Resource Provider
groupName: Service
apiVersion: 2022-05-15
summary: Gets the status of service.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/services/{serviceName}?api-version=2022-05-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: accountName
  in: path
  isRequired: true
  description: Cosmos DB database account name.
  types:
  - uid: string
  pattern: ^[a-z0-9]+(-[a-z0-9]+)*
- name: serviceName
  in: path
  isRequired: true
  description: Cosmos DB service name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The ServiceResource.
  types:
  - uid: ServiceResource
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: ServiceResource
  description: Properties for the database account.
  kind: object
  properties:
  - name: properties
    description: Services response resource.
    types:
    - uid: DataTransferServiceResourceProperties
    - uid: SqlDedicatedGatewayServiceResourceProperties
    - uid: GraphAPIComputeServiceResourceProperties
    - uid: MaterializedViewsBuilderServiceResourceProperties
    typesTitle: ServiceResourceProperties
  - name: id
    isReadyOnly: true
    description: The unique resource identifier of the database account.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the database account.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of Azure resource.
    types:
    - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Error Response.
    types:
    - uid: ErrorResponse
- name: ErrorResponse
  description: Error Response.
  kind: object
  properties:
  - name: code
    description: Error code.
    types:
    - uid: string
  - name: message
    description: Error message indicating why the operation failed.
    types:
    - uid: string
- name: DataTransferServiceResourceProperties
  description: Properties for DataTransferServiceResource.
  kind: object
  properties:
  - name: locations
    isReadyOnly: true
    description: An array that contains all of the locations for the service.
    types:
    - uid: DataTransferRegionalServiceResource
      isArray: true
  - name: creationTime
    isReadyOnly: true
    description: Time of the last state change (ISO-8601 format).
    types:
    - uid: string
  - name: instanceSize
    description: Instance type for the service.
    types:
    - uid: ServiceSize
  - name: instanceCount
    description: Instance count for the service.
    types:
    - uid: integer
  - name: serviceType
    description: ServiceType for the service.
    types:
    - uid: DataTransfer
    typesTitle: string
  - name: status
    isReadyOnly: true
    description: Describes the status of a service.
    types:
    - uid: ServiceStatus
- name: SqlDedicatedGatewayServiceResourceProperties
  description: Properties for SqlDedicatedGatewayServiceResource.
  kind: object
  properties:
  - name: sqlDedicatedGatewayEndpoint
    description: SqlDedicatedGateway endpoint for the service.
    types:
    - uid: string
  - name: locations
    isReadyOnly: true
    description: An array that contains all of the locations for the service.
    types:
    - uid: SqlDedicatedGatewayRegionalServiceResource
      isArray: true
  - name: creationTime
    isReadyOnly: true
    description: Time of the last state change (ISO-8601 format).
    types:
    - uid: string
  - name: instanceSize
    description: Instance type for the service.
    types:
    - uid: ServiceSize
  - name: instanceCount
    description: Instance count for the service.
    types:
    - uid: integer
  - name: serviceType
    description: ServiceType for the service.
    types:
    - uid: SqlDedicatedGateway
    typesTitle: string
  - name: status
    isReadyOnly: true
    description: Describes the status of a service.
    types:
    - uid: ServiceStatus
- name: GraphAPIComputeServiceResourceProperties
  description: Properties for GraphAPIComputeServiceResource.
  kind: object
  properties:
  - name: graphApiComputeEndpoint
    description: GraphAPICompute endpoint for the service.
    types:
    - uid: string
  - name: locations
    isReadyOnly: true
    description: An array that contains all of the locations for the service.
    types:
    - uid: GraphAPIComputeRegionalServiceResource
      isArray: true
  - name: creationTime
    isReadyOnly: true
    description: Time of the last state change (ISO-8601 format).
    types:
    - uid: string
  - name: instanceSize
    description: Instance type for the service.
    types:
    - uid: ServiceSize
  - name: instanceCount
    description: Instance count for the service.
    types:
    - uid: integer
  - name: serviceType
    description: ServiceType for the service.
    types:
    - uid: GraphAPICompute
    typesTitle: string
  - name: status
    isReadyOnly: true
    description: Describes the status of a service.
    types:
    - uid: ServiceStatus
- name: MaterializedViewsBuilderServiceResourceProperties
  description: Properties for MaterializedViewsBuilderServiceResource.
  kind: object
  properties:
  - name: locations
    isReadyOnly: true
    description: An array that contains all of the locations for the service.
    types:
    - uid: MaterializedViewsBuilderRegionalServiceResource
      isArray: true
  - name: creationTime
    isReadyOnly: true
    description: Time of the last state change (ISO-8601 format).
    types:
    - uid: string
  - name: instanceSize
    description: Instance type for the service.
    types:
    - uid: ServiceSize
  - name: instanceCount
    description: Instance count for the service.
    types:
    - uid: integer
  - name: serviceType
    description: ServiceType for the service.
    types:
    - uid: MaterializedViewsBuilder
    typesTitle: string
  - name: status
    isReadyOnly: true
    description: Describes the status of a service.
    types:
    - uid: ServiceStatus
- name: DataTransferRegionalServiceResource
  description: Resource for a regional service location.
  kind: object
  properties:
  - name: name
    isReadyOnly: true
    description: The regional service name.
    types:
    - uid: string
  - name: location
    isReadyOnly: true
    description: The location name.
    types:
    - uid: string
  - name: status
    isReadyOnly: true
    description: Describes the status of a service.
    types:
    - uid: ServiceStatus
- name: ServiceSize
  description: Instance type for the service.
  kind: enum
  properties:
  - name: Cosmos.D4s
    types:
    - uid: string
  - name: Cosmos.D8s
    types:
    - uid: string
  - name: Cosmos.D16s
    types:
    - uid: string
- name: ServiceType
  description: ServiceType for the service.
  kind: enum
  properties:
  - name: SqlDedicatedGateway
    types:
    - uid: string
  - name: DataTransfer
    types:
    - uid: string
  - name: GraphAPICompute
    types:
    - uid: string
  - name: MaterializedViewsBuilder
    types:
    - uid: string
- name: ServiceStatus
  description: Describes the status of a service.
  kind: enum
  properties:
  - name: Creating
    types:
    - uid: string
  - name: Running
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Error
    types:
    - uid: string
  - name: Stopped
    types:
    - uid: string
- name: SqlDedicatedGatewayRegionalServiceResource
  description: Resource for a regional service location.
  kind: object
  properties:
  - name: sqlDedicatedGatewayEndpoint
    isReadyOnly: true
    description: The regional endpoint for SqlDedicatedGateway.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The regional service name.
    types:
    - uid: string
  - name: location
    isReadyOnly: true
    description: The location name.
    types:
    - uid: string
  - name: status
    isReadyOnly: true
    description: Describes the status of a service.
    types:
    - uid: ServiceStatus
- name: GraphAPIComputeRegionalServiceResource
  description: Resource for a regional service location.
  kind: object
  properties:
  - name: graphApiComputeEndpoint
    isReadyOnly: true
    description: The regional endpoint for GraphAPICompute.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The regional service name.
    types:
    - uid: string
  - name: location
    isReadyOnly: true
    description: The location name.
    types:
    - uid: string
  - name: status
    isReadyOnly: true
    description: Describes the status of a service.
    types:
    - uid: ServiceStatus
- name: MaterializedViewsBuilderRegionalServiceResource
  description: Resource for a regional service location.
  kind: object
  properties:
  - name: name
    isReadyOnly: true
    description: The regional service name.
    types:
    - uid: string
  - name: location
    isReadyOnly: true
    description: The location name.
    types:
    - uid: string
  - name: status
    isReadyOnly: true
    description: Describes the status of a service.
    types:
    - uid: ServiceStatus
examples:
- name: DataTransferServiceGet
  request:
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/services/DataTransfer?api-version=2022-05-15
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/services/DataTransfer?api-version=2022-05-15
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for Service Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBDataTransferServiceGet.json
           */
          /**
           * Sample code: DataTransferServiceGet.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void dataTransferServiceGet(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .cosmosDBAccounts()
                  .manager()
                  .serviceClient()
                  .getServices()
                  .getWithResponse("rg1", "ddb1", "DataTransfer", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcosmos_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cosmos/armcosmos/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBDataTransferServiceGet.json
      func ExampleServiceClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcosmos.NewServiceClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"rg1",
      		"ddb1",
      		"DataTransfer",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcosmos%2Farmcosmos%2Fv2.0.0/sdk/resourcemanager/cosmos/armcosmos/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { CosmosDBManagementClient } = require("@azure/arm-cosmosdb");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets the status of service.
       *
       * @summary Gets the status of service.
       * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBDataTransferServiceGet.json
       */
      async function dataTransferServiceGet() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const accountName = "ddb1";
        const serviceName = "DataTransfer";
        const credential = new DefaultAzureCredential();
        const client = new CosmosDBManagementClient(credential, subscriptionId);
        const result = await client.service.get(resourceGroupName, accountName, serviceName);
        console.log(result);
      }

      dataTransferServiceGet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-cosmosdb_15.1.0/sdk/cosmosdb/arm-cosmosdb/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/services/DataTransfer",
        "name": "DataTransfer",
        "type": "Microsoft.DocumentDB/databaseAccounts/services",
        "properties": {
          "status": "Running",
          "creationTime": "2021-01-25T12:56:05.4622517Z",
          "instanceSize": "Cosmos.D4s",
          "instanceCount": 1,
          "serviceType": "DataTransfer",
          "locations": [
            {
              "name": "DataTransfer-westus2",
              "location": "West US 2",
              "status": "Running"
            }
          ]
        }
      }
- name: GraphAPIComputeServiceGet
  request:
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/services/GraphAPICompute?api-version=2022-05-15
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/services/GraphAPICompute?api-version=2022-05-15
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for Service Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBGraphAPIComputeServiceGet.json
           */
          /**
           * Sample code: GraphAPIComputeServiceGet.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void graphAPIComputeServiceGet(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .cosmosDBAccounts()
                  .manager()
                  .serviceClient()
                  .getServices()
                  .getWithResponse("rg1", "ddb1", "GraphAPICompute", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { CosmosDBManagementClient } = require("@azure/arm-cosmosdb");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets the status of service.
       *
       * @summary Gets the status of service.
       * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBGraphAPIComputeServiceGet.json
       */
      async function graphApiComputeServiceGet() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const accountName = "ddb1";
        const serviceName = "GraphAPICompute";
        const credential = new DefaultAzureCredential();
        const client = new CosmosDBManagementClient(credential, subscriptionId);
        const result = await client.service.get(resourceGroupName, accountName, serviceName);
        console.log(result);
      }

      graphApiComputeServiceGet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-cosmosdb_15.1.0/sdk/cosmosdb/arm-cosmosdb/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/services/GraphAPICompute",
        "name": "GraphAPICompute",
        "type": "Microsoft.DocumentDB/databaseAccounts/services",
        "properties": {
          "status": "Running",
          "creationTime": "2021-01-25T12:56:05.4622517Z",
          "instanceSize": "Cosmos.D4s",
          "instanceCount": 1,
          "serviceType": "GraphAPICompute",
          "graphApiComputeEndpoint": "https://graphAPICompute.gremlin.cosmos.windows-int.net/",
          "locations": [
            {
              "name": "GraphAPICompute-westus2",
              "location": "West US 2",
              "status": "Running",
              "graphApiComputeEndpoint": "https://graphAPICompute-westus.gremlin.cosmos.windows-int.net/"
            }
          ]
        }
      }
- name: SqlDedicatedGatewayServiceGet
  request:
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/services/SqlDedicatedGateway?api-version=2022-05-15
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/services/SqlDedicatedGateway?api-version=2022-05-15
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for Service Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBSqlDedicatedGatewayServiceGet.json
           */
          /**
           * Sample code: SqlDedicatedGatewayServiceGet.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void sqlDedicatedGatewayServiceGet(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .cosmosDBAccounts()
                  .manager()
                  .serviceClient()
                  .getServices()
                  .getWithResponse("rg1", "ddb1", "SqlDedicatedGateway", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { CosmosDBManagementClient } = require("@azure/arm-cosmosdb");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets the status of service.
       *
       * @summary Gets the status of service.
       * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBSqlDedicatedGatewayServiceGet.json
       */
      async function sqlDedicatedGatewayServiceGet() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const accountName = "ddb1";
        const serviceName = "SqlDedicatedGateway";
        const credential = new DefaultAzureCredential();
        const client = new CosmosDBManagementClient(credential, subscriptionId);
        const result = await client.service.get(resourceGroupName, accountName, serviceName);
        console.log(result);
      }

      sqlDedicatedGatewayServiceGet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-cosmosdb_15.1.0/sdk/cosmosdb/arm-cosmosdb/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/services/SqlDedicatedGateway",
        "name": "SqlDedicatedGateway",
        "type": "Microsoft.DocumentDB/databaseAccounts/services",
        "properties": {
          "status": "Running",
          "creationTime": "2021-01-25T12:56:05.4622517Z",
          "instanceSize": "Cosmos.D4s",
          "instanceCount": 1,
          "serviceType": "SqlDedicatedGateway",
          "sqlDedicatedGatewayEndpoint": "https://sqlDedicatedGateway.sqlx.cosmos.windows-int.net/",
          "locations": [
            {
              "name": "SqlDedicatedGateway-westus2",
              "location": "West US 2",
              "status": "Running",
              "sqlDedicatedGatewayEndpoint": "https://sqlDedicatedGateway-westus.sqlx.cosmos.windows-int.net/"
            }
          ]
        }
      }
- name: MaterializedViewsBuilderServiceGet
  request:
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/services/MaterializedViewsBuilder?api-version=2022-05-15
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/services/MaterializedViewsBuilder?api-version=2022-05-15
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for Service Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBMaterializedViewsBuilderServiceGet.json
           */
          /**
           * Sample code: MaterializedViewsBuilderServiceGet.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void materializedViewsBuilderServiceGet(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .cosmosDBAccounts()
                  .manager()
                  .serviceClient()
                  .getServices()
                  .getWithResponse("rg1", "ddb1", "MaterializedViewsBuilder", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { CosmosDBManagementClient } = require("@azure/arm-cosmosdb");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets the status of service.
       *
       * @summary Gets the status of service.
       * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBMaterializedViewsBuilderServiceGet.json
       */
      async function materializedViewsBuilderServiceGet() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const accountName = "ddb1";
        const serviceName = "MaterializedViewsBuilder";
        const credential = new DefaultAzureCredential();
        const client = new CosmosDBManagementClient(credential, subscriptionId);
        const result = await client.service.get(resourceGroupName, accountName, serviceName);
        console.log(result);
      }

      materializedViewsBuilderServiceGet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-cosmosdb_15.1.0/sdk/cosmosdb/arm-cosmosdb/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/services/MaterializedViewsBuilder",
        "name": "MaterializedViewsBuilder",
        "type": "Microsoft.DocumentDB/databaseAccounts/services",
        "properties": {
          "status": "Running",
          "creationTime": "2021-01-25T12:56:05.4622517Z",
          "instanceSize": "Cosmos.D4s",
          "instanceCount": 1,
          "serviceType": "MaterializedViewsBuilder",
          "locations": [
            {
              "name": "MaterializedViewsBuilder-westus2",
              "location": "West US 2",
              "status": "Running"
            }
          ]
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Impersonate your user account
metadata:
  description: >
    Learn more about Cosmos DB Resource Provider service - Gets the status of service.
errorCodes: []
