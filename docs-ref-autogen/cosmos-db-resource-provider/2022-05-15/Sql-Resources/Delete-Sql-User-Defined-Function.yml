### YamlMime:RESTOperation
uid: management.azure.com.cosmos-db-resource-provider.2022-05-15.sqlresources.deletesqluserdefinedfunction
name: Delete Sql User Defined Function
service: Cosmos DB Resource Provider
groupName: Sql Resources
apiVersion: 2022-05-15
summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
consumes:
- application/json
produces:
- application/json
paths:
- content: DELETE https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/userDefinedFunctions/{userDefinedFunctionName}?api-version=2022-05-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: accountName
  in: path
  isRequired: true
  description: Cosmos DB database account name.
  types:
  - uid: string
  pattern: ^[a-z0-9]+(-[a-z0-9]+)*
- name: databaseName
  in: path
  isRequired: true
  description: Cosmos DB database name.
  types:
  - uid: string
- name: containerName
  in: path
  isRequired: true
  description: Cosmos DB container name.
  types:
  - uid: string
- name: userDefinedFunctionName
  in: path
  isRequired: true
  description: Cosmos DB userDefinedFunction name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 202 Accepted
  description: The SQL userDefinedFunction delete operation will complete asynchronously.
- name: 204 No Content
  description: The SQL userDefinedFunction delete operation was completed successfully.
requestHeader: []
definitions: []
examples:
- name: CosmosDBSqlUserDefinedFunctionDelete
  request:
    uri: DELETE https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/sqlDatabases/databaseName/containers/containerName/userDefinedFunctions/userDefinedFunctionName?api-version=2022-05-15
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      DELETE https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/sqlDatabases/databaseName/containers/containerName/userDefinedFunctions/userDefinedFunctionName?api-version=2022-05-15
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for SqlResources DeleteSqlUserDefinedFunction. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBSqlUserDefinedFunctionDelete.json
           */
          /**
           * Sample code: CosmosDBSqlUserDefinedFunctionDelete.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void cosmosDBSqlUserDefinedFunctionDelete(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .cosmosDBAccounts()
                  .manager()
                  .serviceClient()
                  .getSqlResources()
                  .deleteSqlUserDefinedFunction(
                      "rg1", "ddb1", "databaseName", "containerName", "userDefinedFunctionName", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { CosmosDBManagementClient } = require("@azure/arm-cosmosdb");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
       *
       * @summary Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
       * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBSqlUserDefinedFunctionDelete.json
       */
      async function cosmosDbSqlUserDefinedFunctionDelete() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const accountName = "ddb1";
        const databaseName = "databaseName";
        const containerName = "containerName";
        const userDefinedFunctionName = "userDefinedFunctionName";
        const credential = new DefaultAzureCredential();
        const client = new CosmosDBManagementClient(credential, subscriptionId);
        const result = await client.sqlResources.beginDeleteSqlUserDefinedFunctionAndWait(
          resourceGroupName,
          accountName,
          databaseName,
          containerName,
          userDefinedFunctionName
        );
        console.log(result);
      }

      cosmosDbSqlUserDefinedFunctionDelete().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-cosmosdb_15.1.0/sdk/cosmosdb/arm-cosmosdb/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "204"
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Impersonate your user account
metadata:
  description: >
    Learn more about Cosmos DB Resource Provider service - Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
errorCodes: []
