### YamlMime:RESTOperation
uid: management.azure.com.cosmos-db-resource-provider.2022-05-15.mongodbresources.createupdatemongodbdatabase
name: Create Update Mongo DB Database
service: Cosmos DB Resource Provider
groupName: Mongo DB Resources
apiVersion: 2022-05-15
summary: Create or updates Azure Cosmos DB MongoDB database
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}?api-version=2022-05-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: accountName
  in: path
  isRequired: true
  description: Cosmos DB database account name.
  types:
  - uid: string
  pattern: ^[a-z0-9]+(-[a-z0-9]+)*
- name: databaseName
  in: path
  isRequired: true
  description: Cosmos DB database name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 202 Accepted
  description: The MongoDB database create or update operation will complete asynchronously.
- name: 200 OK
  description: The MongoDB database create or update operation was completed successfully.
  types:
  - uid: MongoDBDatabaseGetResults
requestBody:
- name: default
  parameters:
  - name: createUpdateMongoDBDatabaseParameters
    in: body
    description: The parameters to provide for the current MongoDB database.
    types:
    - uid: MongoDBDatabaseCreateUpdateParameters
requestHeader: []
definitions:
- name: MongoDBDatabaseResource
  description: Cosmos DB MongoDB database resource object
  kind: object
  properties:
  - name: id
    description: Name of the Cosmos DB MongoDB database
    types:
    - uid: string
- name: CreateUpdateOptions
  description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
  kind: object
  properties:
  - name: throughput
    description: 'Request Units per second. For example, "throughput": 10000.'
    types:
    - uid: integer
  - name: autoscaleSettings
    description: Specifies the Autoscale settings.
    types:
    - uid: AutoscaleSettings
- name: MongoDBDatabaseGetResults
  description: An Azure Cosmos DB MongoDB database.
  kind: object
  properties:
  - name: properties.resource
    description: ''
    types:
    - uid: Resource
  - name: properties.options
    description: ''
    types:
    - uid: Options
  - name: id
    isReadyOnly: true
    description: The unique resource identifier of the ARM resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the ARM resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of Azure resource.
    types:
    - uid: string
  - name: location
    description: The location of the resource group to which the resource belongs.
    types:
    - uid: string
  - name: tags
    description: 'Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".'
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: MongoDBDatabaseCreateUpdateParameters
  description: The parameters to provide for the current MongoDB database.
  kind: object
  properties:
  - name: properties.resource
    description: The standard JSON format of a MongoDB database
    types:
    - uid: MongoDBDatabaseResource
  - name: properties.options
    description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
    types:
    - uid: CreateUpdateOptions
  - name: id
    isReadyOnly: true
    description: The unique resource identifier of the ARM resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the ARM resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of Azure resource.
    types:
    - uid: string
  - name: location
    description: The location of the resource group to which the resource belongs.
    types:
    - uid: string
  - name: tags
    description: 'Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".'
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: AutoscaleSettings
  kind: object
  properties:
  - name: maxThroughput
    description: Represents maximum throughput, the resource can scale up to.
    types:
    - uid: integer
- name: Resource
  kind: object
  properties:
  - name: id
    description: Name of the Cosmos DB MongoDB database
    types:
    - uid: string
  - name: _rid
    isReadyOnly: true
    description: A system generated property. A unique identifier.
    types:
    - uid: string
  - name: _ts
    isReadyOnly: true
    description: A system generated property that denotes the last updated timestamp of the resource.
    types:
    - uid: number
  - name: _etag
    isReadyOnly: true
    description: A system generated property representing the resource etag required for optimistic concurrency control.
    types:
    - uid: string
- name: Options
  kind: object
  properties:
  - name: throughput
    description: Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
    types:
    - uid: integer
  - name: autoscaleSettings
    description: Specifies the Autoscale settings.
    types:
    - uid: AutoscaleSettings
examples:
- name: CosmosDBMongoDBDatabaseCreateUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/mongodbDatabases/databaseName?api-version=2022-05-15
    body: >-
      {
        "location": "West US",
        "tags": {},
        "properties": {
          "resource": {
            "id": "databaseName"
          },
          "options": {}
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/mongodbDatabases/databaseName?api-version=2022-05-15

      {
        "location": "West US",
        "tags": {},
        "properties": {
          "resource": {
            "id": "databaseName"
          },
          "options": {}
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.cosmos.models.CreateUpdateOptions;
      import com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters;
      import com.azure.resourcemanager.cosmos.models.MongoDBDatabaseResource;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for MongoDBResources CreateUpdateMongoDBDatabase. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBMongoDBDatabaseCreateUpdate.json
           */
          /**
           * Sample code: CosmosDBMongoDBDatabaseCreateUpdate.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void cosmosDBMongoDBDatabaseCreateUpdate(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .cosmosDBAccounts()
                  .manager()
                  .serviceClient()
                  .getMongoDBResources()
                  .createUpdateMongoDBDatabase(
                      "rg1",
                      "ddb1",
                      "databaseName",
                      new MongoDBDatabaseCreateUpdateParameters()
                          .withLocation("West US")
                          .withTags(mapOf())
                          .withResource(new MongoDBDatabaseResource().withId("databaseName"))
                          .withOptions(new CreateUpdateOptions()),
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcosmos_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cosmos/armcosmos/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBMongoDBDatabaseCreateUpdate.json
      func ExampleMongoDBResourcesClient_BeginCreateUpdateMongoDBDatabase() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcosmos.NewMongoDBResourcesClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateUpdateMongoDBDatabase(ctx,
      		"rg1",
      		"ddb1",
      		"databaseName",
      		armcosmos.MongoDBDatabaseCreateUpdateParameters{
      			Location: to.Ptr("West US"),
      			Tags:     map[string]*string{},
      			Properties: &armcosmos.MongoDBDatabaseCreateUpdateProperties{
      				Options: &armcosmos.CreateUpdateOptions{},
      				Resource: &armcosmos.MongoDBDatabaseResource{
      					ID: to.Ptr("databaseName"),
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcosmos%2Farmcosmos%2Fv2.0.0/sdk/resourcemanager/cosmos/armcosmos/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { CosmosDBManagementClient } = require("@azure/arm-cosmosdb");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or updates Azure Cosmos DB MongoDB database
       *
       * @summary Create or updates Azure Cosmos DB MongoDB database
       * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBMongoDBDatabaseCreateUpdate.json
       */
      async function cosmosDbMongoDbdatabaseCreateUpdate() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const accountName = "ddb1";
        const databaseName = "databaseName";
        const createUpdateMongoDBDatabaseParameters = {
          location: "West US",
          options: {},
          resource: { id: "databaseName" },
          tags: {},
        };
        const credential = new DefaultAzureCredential();
        const client = new CosmosDBManagementClient(credential, subscriptionId);
        const result = await client.mongoDBResources.beginCreateUpdateMongoDBDatabaseAndWait(
          resourceGroupName,
          accountName,
          databaseName,
          createUpdateMongoDBDatabaseParameters
        );
        console.log(result);
      }

      cosmosDbMongoDbdatabaseCreateUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-cosmosdb_15.1.0/sdk/cosmosdb/arm-cosmosdb/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/mongodbDatabases/databaseName",
        "name": "databaseName",
        "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
        "location": "West US",
        "tags": {},
        "properties": {
          "resource": {
            "id": "updatedDatabaseName"
          }
        }
      }
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Impersonate your user account
metadata:
  description: >
    Learn more about Cosmos DB Resource Provider service - Create or updates Azure Cosmos DB MongoDB database
errorCodes: []
