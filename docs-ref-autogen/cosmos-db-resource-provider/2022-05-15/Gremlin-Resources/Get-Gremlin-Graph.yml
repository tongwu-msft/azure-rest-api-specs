### YamlMime:RESTOperation
uid: management.azure.com.cosmos-db-resource-provider.2022-05-15.gremlinresources.getgremlingraph
name: Get Gremlin Graph
service: Cosmos DB Resource Provider
groupName: Gremlin Resources
apiVersion: 2022-05-15
summary: Gets the Gremlin graph under an existing Azure Cosmos DB database account.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}?api-version=2022-05-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: accountName
  in: path
  isRequired: true
  description: Cosmos DB database account name.
  types:
  - uid: string
  pattern: ^[a-z0-9]+(-[a-z0-9]+)*
- name: databaseName
  in: path
  isRequired: true
  description: Cosmos DB database name.
  types:
  - uid: string
- name: graphName
  in: path
  isRequired: true
  description: Cosmos DB graph name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The Gremlin graph property was retrieved successfully.
  types:
  - uid: GremlinGraphGetResults
requestHeader: []
definitions:
- name: GremlinGraphGetResults
  description: An Azure Cosmos DB Gremlin graph.
  kind: object
  properties:
  - name: properties.resource
    description: ''
    types:
    - uid: Resource
  - name: properties.options
    description: ''
    types:
    - uid: Options
  - name: id
    isReadyOnly: true
    description: The unique resource identifier of the ARM resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the ARM resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of Azure resource.
    types:
    - uid: string
  - name: location
    description: The location of the resource group to which the resource belongs.
    types:
    - uid: string
  - name: tags
    description: 'Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".'
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: Resource
  kind: object
  properties:
  - name: id
    description: Name of the Cosmos DB Gremlin graph
    types:
    - uid: string
  - name: indexingPolicy
    description: The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
    types:
    - uid: IndexingPolicy
  - name: partitionKey
    description: The configuration of the partition key to be used for partitioning data into multiple partitions
    types:
    - uid: ContainerPartitionKey
  - name: defaultTtl
    description: Default time to live
    types:
    - uid: integer
  - name: uniqueKeyPolicy
    description: The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
    types:
    - uid: UniqueKeyPolicy
  - name: conflictResolutionPolicy
    description: The conflict resolution policy for the graph.
    types:
    - uid: ConflictResolutionPolicy
  - name: analyticalStorageTtl
    description: Analytical TTL.
    types:
    - uid: integer
  - name: _rid
    isReadyOnly: true
    description: A system generated property. A unique identifier.
    types:
    - uid: string
  - name: _ts
    isReadyOnly: true
    description: A system generated property that denotes the last updated timestamp of the resource.
    types:
    - uid: number
  - name: _etag
    isReadyOnly: true
    description: A system generated property representing the resource etag required for optimistic concurrency control.
    types:
    - uid: string
- name: Options
  kind: object
  properties:
  - name: throughput
    description: Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
    types:
    - uid: integer
  - name: autoscaleSettings
    description: Specifies the Autoscale settings.
    types:
    - uid: AutoscaleSettings
- name: IndexingPolicy
  description: Cosmos DB indexing policy
  kind: object
  properties:
  - name: automatic
    description: Indicates if the indexing policy is automatic
    types:
    - uid: boolean
  - name: indexingMode
    description: Indicates the indexing mode.
    types:
    - uid: IndexingMode
    defaultValue: consistent
  - name: includedPaths
    description: List of paths to include in the indexing
    types:
    - uid: IncludedPath
      isArray: true
  - name: excludedPaths
    description: List of paths to exclude from indexing
    types:
    - uid: ExcludedPath
      isArray: true
  - name: compositeIndexes
    description: List of composite path list
    types:
    - uid: array
      isArray: true
  - name: spatialIndexes
    description: List of spatial specifics
    types:
    - uid: SpatialSpec
      isArray: true
- name: ContainerPartitionKey
  description: The configuration of the partition key to be used for partitioning data into multiple partitions
  kind: object
  properties:
  - name: paths
    description: List of paths using which data within the container can be partitioned
    types:
    - uid: string
      isArray: true
  - name: kind
    description: Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
    types:
    - uid: PartitionKind
    defaultValue: Hash
  - name: version
    description: Indicates the version of the partition key definition
    types:
    - uid: integer
  - name: systemKey
    isReadyOnly: true
    description: Indicates if the container is using a system generated partition key
    types:
    - uid: boolean
- name: UniqueKeyPolicy
  description: The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
  kind: object
  properties:
  - name: uniqueKeys
    description: List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
    types:
    - uid: UniqueKey
      isArray: true
- name: ConflictResolutionPolicy
  description: The conflict resolution policy for the container.
  kind: object
  properties:
  - name: mode
    description: Indicates the conflict resolution mode.
    types:
    - uid: ConflictResolutionMode
    defaultValue: LastWriterWins
  - name: conflictResolutionPath
    description: The conflict resolution path in the case of LastWriterWins mode.
    types:
    - uid: string
  - name: conflictResolutionProcedure
    description: The procedure to resolve conflicts in the case of custom mode.
    types:
    - uid: string
- name: AutoscaleSettings
  kind: object
  properties:
  - name: maxThroughput
    description: Represents maximum throughput, the resource can scale up to.
    types:
    - uid: integer
- name: IndexingMode
  description: Indicates the indexing mode.
  kind: enum
  properties:
  - name: consistent
    types:
    - uid: string
  - name: lazy
    types:
    - uid: string
  - name: none
    types:
    - uid: string
- name: IncludedPath
  description: The paths that are included in indexing
  kind: object
  properties:
  - name: path
    description: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
    types:
    - uid: string
  - name: indexes
    description: List of indexes for this path
    types:
    - uid: Indexes
      isArray: true
- name: ExcludedPath
  kind: object
  properties:
  - name: path
    description: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
    types:
    - uid: string
- name: SpatialSpec
  kind: object
  properties:
  - name: path
    description: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
    types:
    - uid: string
  - name: types
    description: List of path's spatial type
    types:
    - uid: string
      isArray: true
- name: PartitionKind
  description: Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
  kind: enum
  properties:
  - name: Hash
    types:
    - uid: string
  - name: Range
    types:
    - uid: string
  - name: MultiHash
    types:
    - uid: string
- name: UniqueKey
  description: The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
  kind: object
  properties:
  - name: paths
    description: List of paths must be unique for each document in the Azure Cosmos DB service
    types:
    - uid: string
      isArray: true
- name: ConflictResolutionMode
  description: Indicates the conflict resolution mode.
  kind: enum
  properties:
  - name: LastWriterWins
    types:
    - uid: string
  - name: Custom
    types:
    - uid: string
- name: Indexes
  description: The indexes for the path.
  kind: object
  properties:
  - name: dataType
    description: The datatype for which the indexing behavior is applied to.
    types:
    - uid: DataType
    defaultValue: String
  - name: precision
    description: The precision of the index. -1 is maximum precision.
    types:
    - uid: integer
  - name: kind
    description: Indicates the type of index.
    types:
    - uid: IndexKind
    defaultValue: Hash
- name: DataType
  description: The datatype for which the indexing behavior is applied to.
  kind: enum
  properties:
  - name: String
    types:
    - uid: string
  - name: Number
    types:
    - uid: string
  - name: Point
    types:
    - uid: string
  - name: Polygon
    types:
    - uid: string
  - name: LineString
    types:
    - uid: string
  - name: MultiPolygon
    types:
    - uid: string
- name: IndexKind
  description: Indicates the type of index.
  kind: enum
  properties:
  - name: Hash
    types:
    - uid: string
  - name: Range
    types:
    - uid: string
  - name: Spatial
    types:
    - uid: string
examples:
- name: CosmosDBGremlinGraphGet
  request:
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/rgName/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/gremlinDatabases/databaseName/graphs/graphName?api-version=2022-05-15
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/subid/resourceGroups/rgName/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/gremlinDatabases/databaseName/graphs/graphName?api-version=2022-05-15
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for GremlinResources GetGremlinGraph. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBGremlinGraphGet.json
           */
          /**
           * Sample code: CosmosDBGremlinGraphGet.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void cosmosDBGremlinGraphGet(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .cosmosDBAccounts()
                  .manager()
                  .serviceClient()
                  .getGremlinResources()
                  .getGremlinGraphWithResponse("rgName", "ddb1", "databaseName", "graphName", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcosmos_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cosmos/armcosmos/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBGremlinGraphGet.json
      func ExampleGremlinResourcesClient_GetGremlinGraph() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcosmos.NewGremlinResourcesClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.GetGremlinGraph(ctx,
      		"rgName",
      		"ddb1",
      		"databaseName",
      		"graphName",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcosmos%2Farmcosmos%2Fv2.0.0/sdk/resourcemanager/cosmos/armcosmos/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { CosmosDBManagementClient } = require("@azure/arm-cosmosdb");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets the Gremlin graph under an existing Azure Cosmos DB database account.
       *
       * @summary Gets the Gremlin graph under an existing Azure Cosmos DB database account.
       * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2022-05-15/examples/CosmosDBGremlinGraphGet.json
       */
      async function cosmosDbGremlinGraphGet() {
        const subscriptionId = "subid";
        const resourceGroupName = "rgName";
        const accountName = "ddb1";
        const databaseName = "databaseName";
        const graphName = "graphName";
        const credential = new DefaultAzureCredential();
        const client = new CosmosDBManagementClient(credential, subscriptionId);
        const result = await client.gremlinResources.getGremlinGraph(
          resourceGroupName,
          accountName,
          databaseName,
          graphName
        );
        console.log(result);
      }

      cosmosDbGremlinGraphGet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-cosmosdb_15.1.0/sdk/cosmosdb/arm-cosmosdb/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "graphName",
        "name": "graphName",
        "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases/graphs",
        "properties": {
          "resource": {
            "id": "graphName",
            "indexingPolicy": {
              "indexingMode": "consistent",
              "automatic": true,
              "includedPaths": [
                {
                  "path": "/*",
                  "indexes": [
                    {
                      "kind": "Range",
                      "dataType": "String",
                      "precision": -1
                    },
                    {
                      "kind": "Range",
                      "dataType": "Number",
                      "precision": -1
                    }
                  ]
                }
              ],
              "excludedPaths": []
            },
            "partitionKey": {
              "paths": [
                "/AccountNumber"
              ],
              "kind": "Hash"
            },
            "defaultTtl": 100,
            "uniqueKeyPolicy": {
              "uniqueKeys": [
                {
                  "paths": [
                    "/testPath"
                  ]
                }
              ]
            },
            "conflictResolutionPolicy": {
              "mode": "LastWriterWins",
              "conflictResolutionPath": "/path"
            },
            "_rid": "PD5DALigDgw=",
            "_ts": 1459200611,
            "_etag": "\"00005900-0000-0000-0000-56f9a2630000\""
          }
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Impersonate your user account
metadata:
  description: >
    Learn more about Cosmos DB Resource Provider service - Gets the Gremlin graph under an existing Azure Cosmos DB database account.
errorCodes: []
