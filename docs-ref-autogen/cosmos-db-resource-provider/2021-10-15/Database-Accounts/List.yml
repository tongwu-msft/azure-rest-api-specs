### YamlMime:RESTOperation
uid: management.azure.com.cosmos-db-resource-provider.2021-10-15.databaseaccounts.list
name: List
service: Cosmos DB Resource Provider
groupName: Database Accounts
apiVersion: 2021-10-15
summary: Lists all the Azure Cosmos DB database accounts available under the subscription.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/databaseAccounts?api-version=2021-10-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The operation completed successfully.
  types:
  - uid: DatabaseAccountsListResult
requestHeader: []
definitions:
- name: DatabaseAccountsListResult
  description: The List operation response, that contains the database accounts and their properties.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: List of database account and their properties.
    types:
    - uid: DatabaseAccountGetResults
      isArray: true
- name: DatabaseAccountGetResults
  description: An Azure Cosmos DB database account.
  kind: object
  properties:
  - name: kind
    description: Indicates the type of database account. This can only be set at database account creation.
    types:
    - uid: DatabaseAccountKind
    defaultValue: GlobalDocumentDB
  - name: identity
    description: Identity for the resource.
    types:
    - uid: ManagedServiceIdentity
  - name: systemData
    isReadyOnly: true
    description: The system meta data relating to this resource.
    types:
    - uid: systemData
  - name: properties.provisioningState
    isReadyOnly: true
    description: The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed.
    types:
    - uid: string
  - name: properties.documentEndpoint
    isReadyOnly: true
    description: The connection endpoint for the Cosmos DB database account.
    types:
    - uid: string
  - name: properties.databaseAccountOfferType
    isReadyOnly: true
    description: 'The offer type for the Cosmos DB database account. Default value: Standard.'
    types:
    - uid: DatabaseAccountOfferType
  - name: properties.ipRules
    description: List of IpRules.
    types:
    - uid: IpAddressOrRange
      isArray: true
  - name: properties.isVirtualNetworkFilterEnabled
    description: Flag to indicate whether to enable/disable Virtual Network ACL rules.
    types:
    - uid: boolean
  - name: properties.enableAutomaticFailover
    description: Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
    types:
    - uid: boolean
  - name: properties.consistencyPolicy
    description: The consistency policy for the Cosmos DB database account.
    types:
    - uid: ConsistencyPolicy
  - name: properties.capabilities
    description: List of Cosmos DB capabilities for the account
    types:
    - uid: Capability
      isArray: true
  - name: properties.writeLocations
    isReadyOnly: true
    description: An array that contains the write location for the Cosmos DB account.
    types:
    - uid: Location
      isArray: true
  - name: properties.readLocations
    isReadyOnly: true
    description: An array that contains of the read locations enabled for the Cosmos DB account.
    types:
    - uid: Location
      isArray: true
  - name: properties.locations
    isReadyOnly: true
    description: An array that contains all of the locations enabled for the Cosmos DB account.
    types:
    - uid: Location
      isArray: true
  - name: properties.failoverPolicies
    isReadyOnly: true
    description: An array that contains the regions ordered by their failover priorities.
    types:
    - uid: FailoverPolicy
      isArray: true
  - name: properties.virtualNetworkRules
    description: List of Virtual Network ACL rules configured for the Cosmos DB account.
    types:
    - uid: VirtualNetworkRule
      isArray: true
  - name: properties.privateEndpointConnections
    isReadyOnly: true
    description: List of Private Endpoint Connections configured for the Cosmos DB account.
    types:
    - uid: PrivateEndpointConnection
      isArray: true
  - name: properties.enableMultipleWriteLocations
    description: Enables the account to write in multiple locations
    types:
    - uid: boolean
  - name: properties.enableCassandraConnector
    description: Enables the cassandra connector on the Cosmos DB C* account
    types:
    - uid: boolean
  - name: properties.connectorOffer
    description: The cassandra connector offer type for the Cosmos DB database C* account.
    types:
    - uid: ConnectorOffer
  - name: properties.disableKeyBasedMetadataWriteAccess
    description: Disable write operations on metadata resources (databases, containers, throughput) via account keys
    types:
    - uid: boolean
  - name: properties.keyVaultKeyUri
    description: The URI of the key vault
    types:
    - uid: string
  - name: properties.defaultIdentity
    description: The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be "FirstPartyIdentity", "SystemAssignedIdentity" and more.
    types:
    - uid: string
  - name: properties.publicNetworkAccess
    description: Whether requests from Public Network are allowed
    types:
    - uid: PublicNetworkAccess
  - name: properties.enableFreeTier
    description: Flag to indicate whether Free Tier is enabled.
    types:
    - uid: boolean
  - name: properties.apiProperties
    description: API specific properties.
    types:
    - uid: ApiProperties
  - name: properties.enableAnalyticalStorage
    description: Flag to indicate whether to enable storage analytics.
    types:
    - uid: boolean
  - name: properties.analyticalStorageConfiguration
    description: Analytical storage specific properties.
    types:
    - uid: AnalyticalStorageConfiguration
  - name: properties.instanceId
    isReadyOnly: true
    description: A unique identifier assigned to the database account
    types:
    - uid: string
  - name: properties.createMode
    description: Enum to indicate the mode of account creation.
    types:
    - uid: CreateMode
    defaultValue: Default
  - name: properties.restoreParameters
    description: Parameters to indicate the information about the restore.
    types:
    - uid: RestoreParameters
  - name: properties.backupPolicy
    description: The object representing the policy for taking backups on an account.
    types:
    - uid: PeriodicModeBackupPolicy
    - uid: ContinuousModeBackupPolicy
    typesTitle: BackupPolicy
  - name: properties.cors
    description: The CORS policy for the Cosmos DB database account.
    types:
    - uid: CorsPolicy
      isArray: true
  - name: properties.networkAclBypass
    description: Indicates what services are allowed to bypass firewall checks.
    types:
    - uid: NetworkAclBypass
  - name: properties.networkAclBypassResourceIds
    description: An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.
    types:
    - uid: string
      isArray: true
  - name: properties.disableLocalAuth
    description: Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
    types:
    - uid: boolean
  - name: properties.capacity
    description: The object that represents all properties related to capacity enforcement on an account.
    types:
    - uid: Capacity
  - name: id
    isReadyOnly: true
    description: The unique resource identifier of the ARM resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the ARM resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of Azure resource.
    types:
    - uid: string
  - name: location
    description: The location of the resource group to which the resource belongs.
    types:
    - uid: string
  - name: tags
    description: 'Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".'
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: DatabaseAccountKind
  description: Indicates the type of database account. This can only be set at database account creation.
  kind: enum
  properties:
  - name: GlobalDocumentDB
    types:
    - uid: string
  - name: MongoDB
    types:
    - uid: string
  - name: Parse
    types:
    - uid: string
- name: ManagedServiceIdentity
  description: Identity for the resource.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: type
    description: The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
    types:
    - uid: ResourceIdentityType
  - name: userAssignedIdentities
    description: "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
    types:
    - uid: UserAssignedIdentities
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: DatabaseAccountOfferType
  description: The offer type for the Cosmos DB database account.
  kind: enum
  properties:
  - name: Standard
    types:
    - uid: string
- name: IpAddressOrRange
  description: IpAddressOrRange object
  kind: object
  properties:
  - name: ipAddressOrRange
    description: 'A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.'
    types:
    - uid: string
- name: ConsistencyPolicy
  description: The consistency policy for the Cosmos DB database account.
  kind: object
  properties:
  - name: defaultConsistencyLevel
    description: The default consistency level and configuration settings of the Cosmos DB account.
    types:
    - uid: DefaultConsistencyLevel
  - name: maxStalenessPrefix
    description: When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
    types:
    - uid: integer
  - name: maxIntervalInSeconds
    description: When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
    types:
    - uid: integer
- name: Capability
  description: Cosmos DB capability object
  kind: object
  properties:
  - name: name
    description: 'Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".'
    types:
    - uid: string
- name: Location
  description: A region in which the Azure Cosmos DB database account is deployed.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: 'The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.'
    types:
    - uid: string
  - name: locationName
    description: The name of the region.
    types:
    - uid: string
  - name: documentEndpoint
    isReadyOnly: true
    description: 'The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/'
    types:
    - uid: string
  - name: provisioningState
    isReadyOnly: true
    description: The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed.
    types:
    - uid: string
  - name: failoverPriority
    description: The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
    types:
    - uid: integer
  - name: isZoneRedundant
    description: Flag to indicate whether or not this region is an AvailabilityZone region
    types:
    - uid: boolean
- name: FailoverPolicy
  description: The failover policy for a given region of a database account.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: 'The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.'
    types:
    - uid: string
  - name: locationName
    description: The name of the region in which the database account exists.
    types:
    - uid: string
  - name: failoverPriority
    description: The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
    types:
    - uid: integer
- name: VirtualNetworkRule
  description: Virtual Network ACL Rule object
  kind: object
  properties:
  - name: id
    description: 'Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.'
    types:
    - uid: string
  - name: ignoreMissingVNetServiceEndpoint
    description: Create firewall rule before the virtual network has vnet service endpoint enabled.
    types:
    - uid: boolean
- name: PrivateEndpointConnection
  description: A private endpoint connection
  kind: object
  properties:
  - name: properties.privateEndpoint
    description: Private endpoint which the connection belongs to.
    types:
    - uid: PrivateEndpointProperty
  - name: properties.privateLinkServiceConnectionState
    description: Connection State of the Private Endpoint Connection.
    types:
    - uid: PrivateLinkServiceConnectionStateProperty
  - name: properties.groupId
    description: Group id of the private endpoint.
    types:
    - uid: string
  - name: properties.provisioningState
    description: Provisioning state of the private endpoint.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ConnectorOffer
  description: The cassandra connector offer type for the Cosmos DB C* database account.
  kind: enum
  properties:
  - name: Small
    types:
    - uid: string
- name: PublicNetworkAccess
  description: Whether requests from Public Network are allowed
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: ApiProperties
  kind: object
  properties:
  - name: serverVersion
    description: Describes the ServerVersion of an a MongoDB account.
    types:
    - uid: ServerVersion
- name: AnalyticalStorageConfiguration
  description: Analytical storage specific properties.
  kind: object
  properties:
  - name: schemaType
    description: Describes the types of schema for analytical storage.
    types:
    - uid: AnalyticalStorageSchemaType
- name: CreateMode
  description: Enum to indicate the mode of account creation.
  kind: enum
  properties:
  - name: Default
    types:
    - uid: string
  - name: Restore
    types:
    - uid: string
- name: RestoreParameters
  description: Parameters to indicate the information about the restore.
  kind: object
  properties:
  - name: restoreMode
    description: Describes the mode of the restore.
    types:
    - uid: RestoreMode
  - name: restoreSource
    description: 'The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}'
    types:
    - uid: string
  - name: restoreTimestampInUtc
    description: Time to which the account has to be restored (ISO-8601 format).
    types:
    - uid: string
  - name: databasesToRestore
    description: List of specific databases available for restore.
    types:
    - uid: DatabaseRestoreResource
      isArray: true
- name: CorsPolicy
  description: The CORS policy for the Cosmos DB database account.
  kind: object
  properties:
  - name: allowedOrigins
    description: The origin domains that are permitted to make a request against the service via CORS.
    types:
    - uid: string
  - name: allowedMethods
    description: The methods (HTTP request verbs) that the origin domain may use for a CORS request.
    types:
    - uid: string
  - name: allowedHeaders
    description: The request headers that the origin domain may specify on the CORS request.
    types:
    - uid: string
  - name: exposedHeaders
    description: The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.
    types:
    - uid: string
  - name: maxAgeInSeconds
    description: The maximum amount time that a browser should cache the preflight OPTIONS request.
    types:
    - uid: integer
- name: NetworkAclBypass
  description: Indicates what services are allowed to bypass firewall checks.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: AzureServices
    types:
    - uid: string
- name: Capacity
  description: The object that represents all properties related to capacity enforcement on an account.
  kind: object
  properties:
  - name: totalThroughputLimit
    description: The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput.
    types:
    - uid: integer
- name: ResourceIdentityType
  description: The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
  - name: UserAssigned
    types:
    - uid: string
  - name: SystemAssigned,UserAssigned
    types:
    - uid: string
  - name: None
    types:
    - uid: string
- name: UserAssignedIdentities
  description: "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
  kind: object
  properties:
  - name: ''
    description: ''
    types:
    - uid: ''
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: DefaultConsistencyLevel
  description: The default consistency level and configuration settings of the Cosmos DB account.
  kind: enum
  properties:
  - name: Eventual
    types:
    - uid: string
  - name: Session
    types:
    - uid: string
  - name: BoundedStaleness
    types:
    - uid: string
  - name: Strong
    types:
    - uid: string
  - name: ConsistentPrefix
    types:
    - uid: string
- name: PrivateEndpointProperty
  description: Private endpoint which the connection belongs to.
  kind: object
  properties:
  - name: id
    description: Resource id of the private endpoint.
    types:
    - uid: string
- name: PrivateLinkServiceConnectionStateProperty
  description: Connection State of the Private Endpoint Connection.
  kind: object
  properties:
  - name: status
    description: The private link service connection status.
    types:
    - uid: string
  - name: description
    description: The private link service connection description.
    types:
    - uid: string
  - name: actionsRequired
    isReadyOnly: true
    description: Any action that is required beyond basic workflow (approve/ reject/ disconnect)
    types:
    - uid: string
- name: ServerVersion
  description: Describes the ServerVersion of an a MongoDB account.
  kind: enum
  properties:
  - name: "3.2"
    types:
    - uid: string
  - name: "3.6"
    types:
    - uid: string
  - name: "4.0"
    types:
    - uid: string
  - name: "4.2"
    types:
    - uid: string
- name: AnalyticalStorageSchemaType
  description: Describes the types of schema for analytical storage.
  kind: enum
  properties:
  - name: WellDefined
    types:
    - uid: string
  - name: FullFidelity
    types:
    - uid: string
- name: RestoreMode
  description: Describes the mode of the restore.
  kind: enum
  properties:
  - name: PointInTime
    types:
    - uid: string
- name: DatabaseRestoreResource
  description: Specific Databases to restore.
  kind: object
  properties:
  - name: databaseName
    description: The name of the database available for restore.
    types:
    - uid: string
  - name: collectionNames
    description: The names of the collections available for restore.
    types:
    - uid: string
      isArray: true
- name: PeriodicModeBackupPolicy
  description: The object representing periodic mode backup policy.
  kind: object
  properties:
  - name: periodicModeProperties
    description: Configuration values for periodic mode backup
    types:
    - uid: PeriodicModeProperties
  - name: type
    description: Describes the mode of backups.
    types:
    - uid: Periodic
    typesTitle: string
  - name: migrationState
    description: The object representing the state of the migration between the backup policies.
    types:
    - uid: BackupPolicyMigrationState
- name: ContinuousModeBackupPolicy
  description: The object representing continuous mode backup policy.
  kind: object
  properties:
  - name: type
    description: Describes the mode of backups.
    types:
    - uid: Continuous
    typesTitle: string
  - name: migrationState
    description: The object representing the state of the migration between the backup policies.
    types:
    - uid: BackupPolicyMigrationState
- name: PeriodicModeProperties
  description: Configuration values for periodic mode backup
  kind: object
  properties:
  - name: backupIntervalInMinutes
    description: An integer representing the interval in minutes between two backups
    types:
    - uid: integer
  - name: backupRetentionIntervalInHours
    description: An integer representing the time (in hours) that each backup is retained
    types:
    - uid: integer
  - name: backupStorageRedundancy
    description: Enum to indicate type of backup residency
    types:
    - uid: BackupStorageRedundancy
- name: BackupPolicyType
  description: Describes the mode of backups.
  kind: enum
  properties:
  - name: Periodic
    types:
    - uid: string
  - name: Continuous
    types:
    - uid: string
- name: BackupPolicyMigrationState
  description: The object representing the state of the migration between the backup policies.
  kind: object
  properties:
  - name: status
    description: Describes the status of migration between backup policy types.
    types:
    - uid: BackupPolicyMigrationStatus
  - name: targetType
    description: Describes the target backup policy type of the backup policy migration.
    types:
    - uid: BackupPolicyType
  - name: startTime
    description: Time at which the backup policy migration started (ISO-8601 format).
    types:
    - uid: string
- name: BackupStorageRedundancy
  description: Enum to indicate type of backup storage redundancy.
  kind: enum
  properties:
  - name: Geo
    types:
    - uid: string
  - name: Local
    types:
    - uid: string
  - name: Zone
    types:
    - uid: string
- name: BackupPolicyMigrationStatus
  description: Describes the status of migration between backup policy types.
  kind: enum
  properties:
  - name: Invalid
    types:
    - uid: string
  - name: InProgress
    types:
    - uid: string
  - name: Completed
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
examples:
- name: CosmosDBDatabaseAccountList
  request:
    uri: GET https://management.azure.com/subscriptions/subid/providers/Microsoft.DocumentDB/databaseAccounts?api-version=2021-10-15
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/subid/providers/Microsoft.DocumentDB/databaseAccounts?api-version=2021-10-15
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for DatabaseAccounts List. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2021-10-15/examples/CosmosDBDatabaseAccountList.json
           */
          /**
           * Sample code: CosmosDBDatabaseAccountList.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void cosmosDBDatabaseAccountList(com.azure.resourcemanager.AzureResourceManager azure) {
              azure.cosmosDBAccounts().manager().serviceClient().getDatabaseAccounts().list(Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcosmos_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cosmos/armcosmos"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2021-10-15/examples/CosmosDBDatabaseAccountList.json
      func ExampleDatabaseAccountsClient_NewListPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcosmos.NewDatabaseAccountsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListPager(nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcosmos%2Farmcosmos%2Fv1.0.0/sdk/resourcemanager/cosmos/armcosmos/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1",
            "name": "ddb1",
            "location": "West US",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "kind": "GlobalDocumentDB",
            "tags": {},
            "properties": {
              "provisioningState": "Succeeded",
              "documentEndpoint": "https://ddb1.documents.azure.com:443/",
              "ipRules": [],
              "databaseAccountOfferType": "Standard",
              "disableKeyBasedMetadataWriteAccess": false,
              "consistencyPolicy": {
                "defaultConsistencyLevel": "Session",
                "maxIntervalInSeconds": 5,
                "maxStalenessPrefix": 100
              },
              "writeLocations": [
                {
                  "id": "ddb1-eastus",
                  "locationName": "East US",
                  "documentEndpoint": "https://ddb1-eastus.documents.azure.com:443/",
                  "provisioningState": "Succeeded",
                  "failoverPriority": 0
                }
              ],
              "readLocations": [
                {
                  "id": "ddb1-eastus",
                  "locationName": "East US",
                  "documentEndpoint": "https://ddb1-eastus.documents.azure.com:443/",
                  "provisioningState": "Succeeded",
                  "failoverPriority": 0
                }
              ],
              "locations": [
                {
                  "id": "ddb1-eastus",
                  "locationName": "East US",
                  "documentEndpoint": "https://ddb1-eastus.documents.azure.com:443/",
                  "provisioningState": "Succeeded",
                  "failoverPriority": 0
                }
              ],
              "failoverPolicies": [
                {
                  "id": "ddb1-eastus",
                  "locationName": "East US",
                  "failoverPriority": 0
                }
              ],
              "privateEndpointConnections": [
                {
                  "id": "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.DocumentDB/databaseAccounts/account1/privateEndpointConnections/pe1",
                  "properties": {
                    "privateEndpoint": {
                      "id": "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/privateEndpoints/pe1"
                    },
                    "privateLinkServiceConnectionState": {
                      "status": "Approved",
                      "actionsRequired": "None"
                    }
                  }
                }
              ],
              "cors": [],
              "defaultIdentity": "FirstPartyIdentity",
              "enableFreeTier": false,
              "apiProperties": {},
              "enableAnalyticalStorage": true,
              "analyticalStorageConfiguration": {
                "schemaType": "WellDefined"
              },
              "instanceId": "d9b26648-2f53-4541-b3d8-3044f4f9810d",
              "createMode": "Default",
              "backupPolicy": {
                "type": "Periodic",
                "periodicModeProperties": {
                  "backupIntervalInMinutes": 240,
                  "backupRetentionIntervalInHours": 720,
                  "backupStorageRedundancy": "Geo"
                }
              },
              "networkAclBypass": "None",
              "networkAclBypassResourceIds": []
            },
            "systemData": {
              "createdAt": "2021-03-12T22:05:09Z"
            },
            "identity": {
              "type": "SystemAssigned,UserAssigned",
              "principalId": "52f4fef3-3c3f-4ff3-b52e-b5c9eeb68656",
              "tenantId": "33e01921-4d64-4f8c-a055-5bdaffd5e33d",
              "userAssignedIdentities": {
                "/subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/eu2cgroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1": {
                  "clientId": "fbe75b66-01c5-4f87-a220-233af3270436",
                  "principalId": "33e01921-4d64-4f8c-a055-5bdaffd5e33d"
                }
              }
            }
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Impersonate your user account
metadata:
  description: Learn more about Cosmos DB Resource Provider service - Lists all the Azure Cosmos DB database accounts available under the subscription.
errorCodes: []
