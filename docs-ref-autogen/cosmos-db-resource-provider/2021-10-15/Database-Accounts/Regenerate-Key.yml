### YamlMime:RESTOperation
uid: management.azure.com.cosmos-db-resource-provider.2021-10-15.databaseaccounts.regeneratekey
name: Regenerate Key
service: Cosmos DB Resource Provider
groupName: Database Accounts
apiVersion: 2021-10-15
summary: Regenerates an access key for the specified Azure Cosmos DB database account.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/regenerateKey?api-version=2021-10-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: accountName
  in: path
  isRequired: true
  description: Cosmos DB database account name.
  types:
  - uid: string
  pattern: ^[a-z0-9]+(-[a-z0-9]+)*
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
- name: 202 Accepted
  description: Accepted. The regenerate key operation will complete asynchronously.
requestBody:
- name: default
  parameters:
  - name: keyKind
    in: body
    isRequired: true
    description: The access key to regenerate.
    types:
    - uid: KeyKind
requestHeader: []
definitions:
- name: DatabaseAccountRegenerateKeyParameters
  description: Parameters to regenerate the keys within the database account.
  kind: object
  properties:
  - name: keyKind
    description: The access key to regenerate.
    types:
    - uid: KeyKind
- name: KeyKind
  description: The access key to regenerate.
  kind: enum
  properties:
  - name: primary
    types:
    - uid: string
  - name: secondary
    types:
    - uid: string
  - name: primaryReadonly
    types:
    - uid: string
  - name: secondaryReadonly
    types:
    - uid: string
examples:
- name: CosmosDBDatabaseAccountRegenerateKey
  request:
    uri: POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/regenerateKey?api-version=2021-10-15
    body: >-
      {
        "keyKind": "primary"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/regenerateKey?api-version=2021-10-15

      {
        "keyKind": "primary"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.cosmos.models.DatabaseAccountRegenerateKeyParameters;
      import com.azure.resourcemanager.cosmos.models.KeyKind;

      /** Samples for DatabaseAccounts RegenerateKey. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2021-10-15/examples/CosmosDBDatabaseAccountRegenerateKey.json
           */
          /**
           * Sample code: CosmosDBDatabaseAccountRegenerateKey.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void cosmosDBDatabaseAccountRegenerateKey(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .cosmosDBAccounts()
                  .manager()
                  .serviceClient()
                  .getDatabaseAccounts()
                  .regenerateKey(
                      "rg1", "ddb1", new DatabaseAccountRegenerateKeyParameters().withKeyKind(KeyKind.PRIMARY), Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcosmos_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cosmos/armcosmos"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2021-10-15/examples/CosmosDBDatabaseAccountRegenerateKey.json
      func ExampleDatabaseAccountsClient_BeginRegenerateKey() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcosmos.NewDatabaseAccountsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginRegenerateKey(ctx,
      		"rg1",
      		"ddb1",
      		armcosmos.DatabaseAccountRegenerateKeyParameters{
      			KeyKind: to.Ptr(armcosmos.KeyKindPrimary),
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	_, err = poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcosmos%2Farmcosmos%2Fv1.0.0/sdk/resourcemanager/cosmos/armcosmos/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Impersonate your user account
metadata:
  description: >
    Learn more about Cosmos DB Resource Provider service - Regenerates an access key for the specified Azure Cosmos DB database account.
errorCodes: []
