{
  "swagger": "2.0",
  "info": {
    "version": "3.0",
    "title": "Custom Vision Prediction Client"
  },
  "host": "southcentralus.api.cognitive.microsoft.com",
  "basePath": "/customvision/v3.0/prediction",
  "schemes": [
    "https"
  ],
  "paths": {},
  "definitions": {
    "ImageUrl": {
      "description": "Image url.",
      "required": [
        "url"
      ],
      "type": "object",
      "properties": {
        "url": {
          "description": "Url of the image.",
          "type": "string",
          "readOnly": false,
          "x-nullable": false
        }
      }
    },
    "ImagePrediction": {
      "description": "Result of an image prediction request.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Prediction Id.",
          "type": "string",
          "readOnly": true,
          "x-nullable": false
        },
        "project": {
          "format": "uuid",
          "description": "Project Id.",
          "type": "string",
          "readOnly": true,
          "x-nullable": false
        },
        "iteration": {
          "format": "uuid",
          "description": "Iteration Id.",
          "type": "string",
          "readOnly": true,
          "x-nullable": false
        },
        "created": {
          "format": "date-time",
          "description": "Date this prediction was created.",
          "type": "string",
          "readOnly": true,
          "x-nullable": false
        },
        "predictions": {
          "description": "List of predictions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Prediction",
            "x-nullable": false
          },
          "readOnly": true
        }
      }
    },
    "Prediction": {
      "description": "Prediction result.",
      "type": "object",
      "properties": {
        "probability": {
          "format": "float",
          "description": "Probability of the tag.",
          "type": "number",
          "readOnly": true,
          "x-nullable": false
        },
        "tagId": {
          "format": "uuid",
          "description": "Id of the predicted tag.",
          "type": "string",
          "readOnly": true,
          "x-nullable": false
        },
        "tagName": {
          "description": "Name of the predicted tag.",
          "type": "string",
          "readOnly": true,
          "x-nullable": true
        },
        "boundingBox": {
          "$ref": "#/definitions/BoundingBox",
          "description": "Bounding box of the prediction.",
          "readOnly": true,
          "x-nullable": true
        }
      }
    },
    "BoundingBox": {
      "description": "Bounding box that defines a region of an image.",
      "required": [
        "left",
        "top",
        "width",
        "height"
      ],
      "type": "object",
      "properties": {
        "left": {
          "format": "float",
          "description": "Coordinate of the left boundary.",
          "type": "number",
          "readOnly": false,
          "x-nullable": false
        },
        "top": {
          "format": "float",
          "description": "Coordinate of the top boundary.",
          "type": "number",
          "readOnly": false,
          "x-nullable": false
        },
        "width": {
          "format": "float",
          "description": "Width.",
          "type": "number",
          "readOnly": false,
          "x-nullable": false
        },
        "height": {
          "format": "float",
          "description": "Height.",
          "type": "number",
          "readOnly": false,
          "x-nullable": false
        }
      }
    },
    "CustomVisionError": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "enum": [
            "NoError",
            "BadRequest",
            "BadRequestExceededBatchSize",
            "BadRequestNotSupported",
            "BadRequestInvalidIds",
            "BadRequestProjectName",
            "BadRequestProjectNameNotUnique",
            "BadRequestProjectDescription",
            "BadRequestProjectUnknownDomain",
            "BadRequestProjectUnknownClassification",
            "BadRequestProjectUnsupportedDomainTypeChange",
            "BadRequestProjectUnsupportedExportPlatform",
            "BadRequestIterationName",
            "BadRequestIterationNameNotUnique",
            "BadRequestIterationDescription",
            "BadRequestIterationIsNotTrained",
            "BadRequestWorkspaceCannotBeModified",
            "BadRequestWorkspaceNotDeletable",
            "BadRequestTagName",
            "BadRequestTagNameNotUnique",
            "BadRequestTagDescription",
            "BadRequestTagType",
            "BadRequestMultipleNegativeTag",
            "BadRequestImageTags",
            "BadRequestImageRegions",
            "BadRequestNegativeAndRegularTagOnSameImage",
            "BadRequestRequiredParamIsNull",
            "BadRequestIterationIsPublished",
            "BadRequestInvalidPublishName",
            "BadRequestInvalidPublishTarget",
            "BadRequestUnpublishFailed",
            "BadRequestSubscriptionApi",
            "BadRequestExceedProjectLimit",
            "BadRequestExceedIterationPerProjectLimit",
            "BadRequestExceedTagPerProjectLimit",
            "BadRequestExceedTagPerImageLimit",
            "BadRequestExceededQuota",
            "BadRequestCannotMigrateProjectWithName",
            "BadRequestNotLimitedTrial",
            "BadRequestImageBatch",
            "BadRequestImageStream",
            "BadRequestImageUrl",
            "BadRequestImageFormat",
            "BadRequestImageSizeBytes",
            "BadRequestImageExceededCount",
            "BadRequestTrainingNotNeeded",
            "BadRequestTrainingNotNeededButTrainingPipelineUpdated",
            "BadRequestTrainingValidationFailed",
            "BadRequestClassificationTrainingValidationFailed",
            "BadRequestMultiClassClassificationTrainingValidationFailed",
            "BadRequestMultiLabelClassificationTrainingValidationFailed",
            "BadRequestDetectionTrainingValidationFailed",
            "BadRequestTrainingAlreadyInProgress",
            "BadRequestDetectionTrainingNotAllowNegativeTag",
            "BadRequestInvalidEmailAddress",
            "BadRequestDomainNotSupportedForAdvancedTraining",
            "BadRequestExportPlatformNotSupportedForAdvancedTraining",
            "BadRequestReservedBudgetInHoursNotEnoughForAdvancedTraining",
            "BadRequestExportValidationFailed",
            "BadRequestExportAlreadyInProgress",
            "BadRequestPredictionIdsMissing",
            "BadRequestPredictionIdsExceededCount",
            "BadRequestPredictionTagsExceededCount",
            "BadRequestPredictionResultsExceededCount",
            "BadRequestPredictionInvalidApplicationName",
            "BadRequestPredictionInvalidQueryParameters",
            "BadRequestInvalid",
            "UnsupportedMediaType",
            "Forbidden",
            "ForbiddenUser",
            "ForbiddenUserResource",
            "ForbiddenUserSignupDisabled",
            "ForbiddenUserSignupAllowanceExceeded",
            "ForbiddenUserDoesNotExist",
            "ForbiddenUserDisabled",
            "ForbiddenUserInsufficientCapability",
            "ForbiddenDRModeEnabled",
            "ForbiddenInvalid",
            "NotFound",
            "NotFoundProject",
            "NotFoundProjectDefaultIteration",
            "NotFoundIteration",
            "NotFoundIterationPerformance",
            "NotFoundTag",
            "NotFoundImage",
            "NotFoundDomain",
            "NotFoundApimSubscription",
            "NotFoundInvalid",
            "Conflict",
            "ConflictInvalid",
            "ErrorUnknown",
            "ErrorProjectInvalidWorkspace",
            "ErrorProjectInvalidPipelineConfiguration",
            "ErrorProjectInvalidDomain",
            "ErrorProjectTrainingRequestFailed",
            "ErrorProjectExportRequestFailed",
            "ErrorFeaturizationServiceUnavailable",
            "ErrorFeaturizationQueueTimeout",
            "ErrorFeaturizationInvalidFeaturizer",
            "ErrorFeaturizationAugmentationUnavailable",
            "ErrorFeaturizationUnrecognizedJob",
            "ErrorFeaturizationAugmentationError",
            "ErrorExporterInvalidPlatform",
            "ErrorExporterInvalidFeaturizer",
            "ErrorExporterInvalidClassifier",
            "ErrorPredictionServiceUnavailable",
            "ErrorPredictionModelNotFound",
            "ErrorPredictionModelNotCached",
            "ErrorPrediction",
            "ErrorPredictionStorage",
            "ErrorRegionProposal",
            "ErrorInvalid"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CustomVisionErrorCodes",
            "modelAsString": true
          }
        },
        "message": {
          "description": "A message explaining the error reported by the service.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "ApiKey": {
      "name": "Prediction-Key",
      "in": "header",
      "description": "API key.",
      "required": true,
      "type": "string",
      "x-ms-client-name": "ApiKey",
      "x-ms-parameter-location": "client"
    },
    "Endpoint": {
      "name": "Endpoint",
      "in": "path",
      "description": "Supported Cognitive Services endpoints.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
      "x-ms-skip-url-encoding": true
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "x-internal-service-id": "cognitiveservices",
  "x-internal-service-name": "Cognitive Services",
  "x-internal-toc-name": "Classify Image",
  "x-internal-product-uid": null,
  "x-internal-split-members": [
    {
      "displayName": "Classify Image",
      "relativePath": "ClassifyImage/ClassifyImage"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}