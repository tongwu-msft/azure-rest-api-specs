{
  "swagger": "2.0",
  "info": {
    "version": "1.0-preview",
    "title": "Form Recognizer Client",
    "description": "Extracts information from forms and images into structured data based on a model created by a set of representative training forms."
  },
  "securityDefinitions": {
    "apim_key": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apim_key": []
    }
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/formrecognizer/v1.0-preview",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "paths": {},
  "definitions": {
    "TrainRequest": {
      "description": "Contract to initiate a train request.",
      "required": [
        "source"
      ],
      "type": "object",
      "properties": {
        "source": {
          "description": "Get or set source path.",
          "maxLength": 2048,
          "minLength": 0,
          "type": "string"
        },
        "sourceFilter": {
          "$ref": "#/definitions/TrainSourceFilter",
          "description": "Get or set filter to further search the\r\nsource path for content."
        }
      }
    },
    "TrainSourceFilter": {
      "description": "Filters to be applied when traversing a data source.",
      "type": "object",
      "properties": {
        "prefix": {
          "description": "A case-sensitive prefix string to filter content\r\nunder the source location. For e.g., when using a Azure Blob\r\nUri use the prefix to restrict subfolders for content.",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "includeSubFolders": {
          "description": "A flag to indicate if sub folders within the set of\r\nprefix folders will also need to be included when searching\r\nfor content to be preprocessed.",
          "type": "boolean"
        }
      }
    },
    "TrainResult": {
      "description": "Response of the Train API call.",
      "type": "object",
      "properties": {
        "modelId": {
          "description": "Identifier of the model.",
          "type": "string",
          "format": "uuid",
          "x-nullable": false
        },
        "trainingDocuments": {
          "description": "List of documents used to train the model and the\r\ntrain operation error reported by each.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormDocumentReport"
          }
        },
        "errors": {
          "description": "Errors returned during the training operation.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormOperationError"
          }
        }
      }
    },
    "KeysResult": {
      "description": "Result of an operation to get\r\nthe keys extracted by a model.",
      "type": "object",
      "properties": {
        "clusters": {
          "description": "Object mapping ClusterIds to Key lists.",
          "type": "object",
          "additionalProperties": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "ModelResult": {
      "description": "Result of a model status query operation.",
      "type": "object",
      "properties": {
        "modelId": {
          "description": "Get or set model identifier.",
          "type": "string",
          "format": "uuid",
          "x-nullable": false
        },
        "status": {
          "description": "Get or set the status of model.",
          "enum": [
            "created",
            "ready",
            "invalid"
          ],
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Get or set the created date time of the model.",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Get or set the model last updated datetime.",
          "type": "string"
        }
      }
    },
    "ModelsResult": {
      "description": "Result of query operation to fetch multiple models.",
      "type": "object",
      "properties": {
        "models": {
          "description": "Collection of models.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelResult"
          }
        }
      }
    },
    "FormDocumentReport": {
      "type": "object",
      "properties": {
        "documentName": {
          "description": "Reference to the data that the report is for.",
          "type": "string"
        },
        "pages": {
          "format": "int32",
          "description": "Total number of pages trained on.",
          "type": "integer"
        },
        "errors": {
          "description": "List of errors per page.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "Status of the training operation.",
          "enum": [
            "success",
            "partialSuccess",
            "failure"
          ],
          "type": "string"
        }
      }
    },
    "FormOperationError": {
      "description": "Error reported during an operation.",
      "type": "object",
      "properties": {
        "errorMessage": {
          "description": "Message reported during the train operation.",
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorInformation"
        }
      }
    },
    "ErrorInformation": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "innerError": {
          "$ref": "#/definitions/InnerError"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "InnerError": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        }
      }
    },
    "AnalyzeResult": {
      "description": "Analyze API call result.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the analyze operation.",
          "enum": [
            "success",
            "partialSuccess",
            "failure"
          ],
          "type": "string"
        },
        "pages": {
          "description": "Page level information extracted in the analyzed\r\ndocument.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtractedPage"
          }
        },
        "errors": {
          "description": "List of errors reported during the analyze\r\noperation.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormOperationError"
          }
        }
      }
    },
    "ExtractedPage": {
      "description": "Extraction information of a single page in a\r\nwith a document.",
      "type": "object",
      "properties": {
        "number": {
          "format": "int32",
          "description": "Page number.",
          "type": "integer"
        },
        "height": {
          "format": "int32",
          "description": "Height of the page (in pixels).",
          "type": "integer"
        },
        "width": {
          "format": "int32",
          "description": "Width of the page (in pixels).",
          "type": "integer"
        },
        "clusterId": {
          "format": "int32",
          "description": "Cluster identifier.",
          "type": "integer"
        },
        "keyValuePairs": {
          "description": "List of Key-Value pairs extracted from the page.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtractedKeyValuePair"
          }
        },
        "tables": {
          "description": "List of Tables and their information extracted from the page.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtractedTable"
          }
        }
      }
    },
    "ExtractedKeyValuePair": {
      "description": "Representation of a key-value pair as a list\r\nof key and value tokens.",
      "type": "object",
      "properties": {
        "key": {
          "description": "List of tokens for the extracted key in a key-value pair.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtractedToken"
          }
        },
        "value": {
          "description": "List of tokens for the extracted value in a key-value pair.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtractedToken"
          }
        }
      }
    },
    "ExtractedTable": {
      "description": "Extraction information about a table\r\ncontained in a page.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Table identifier.",
          "type": "string"
        },
        "columns": {
          "description": "List of columns contained in the table.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtractedTableColumn"
          }
        }
      }
    },
    "ExtractedToken": {
      "description": "Canonical representation of single extracted text.",
      "type": "object",
      "properties": {
        "text": {
          "description": "String value of the extracted text.",
          "type": "string"
        },
        "boundingBox": {
          "description": "Bounding box of the extracted text. Represents the\r\nlocation of the extracted text as a pair of\r\ncartesian co-ordinates. The co-ordinate pairs are arranged by\r\ntop-left, top-right, bottom-right and bottom-left endpoints box\r\nwith origin reference from the bottom-left of the page.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "confidence": {
          "format": "double",
          "description": "A measure of accuracy of the extracted text.",
          "type": "number"
        }
      }
    },
    "ExtractedTableColumn": {
      "description": "Extraction information of a column in\r\na table.",
      "type": "object",
      "properties": {
        "header": {
          "description": "List of extracted tokens for the column header.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtractedToken"
          }
        },
        "entries": {
          "description": "Extracted text for each cell of a column. Each cell\r\nin the column can have a list of one or more tokens.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExtractedToken"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus2.api.cognitive.microsoft.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    }
  },
  "x-internal-service-id": "cognitiveservices",
  "x-internal-service-name": "Cognitive Services",
  "x-internal-toc-name": "Delete Custom Model",
  "x-internal-product-uid": null,
  "x-internal-split-members": [
    {
      "displayName": "Delete Custom Model",
      "relativePath": "DeleteCustomModel/DeleteCustomModel"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}