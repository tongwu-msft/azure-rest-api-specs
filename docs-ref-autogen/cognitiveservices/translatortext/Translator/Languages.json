{
  "swagger": "2.0",
  "info": {
    "version": "3.0",
    "termsOfService": "http://www.microsoftvolumelicensing.com/DocumentSearch.aspx?Mode=3&DocumentTypeId=31",
    "contact": {
      "name": "Microsoft Translator team",
      "email": "translator@microsoft.com",
      "url": "https://www.microsoft.com/translator"
    },
    "title": "Translator Text Client",
    "description": "# Introduction\n\nThe Microsoft Translator Text API provides a JSON-based Web API. It provides:\n\n  * Translation between any supported languages to any other supported language.\n  * Translation to multiple languages in one request.\n  * Transliteration to convert text from one script to another script of the same language.\n  * Language detection, translation, and transliteration in one request.\n  * Dictionary to lookup alternative translations of a term, to find back-translations and examples showing terms used in context.\n  * Rich language detection.\n# Base URLs\n\nThe Translator Text API is available in the following clouds:\n\n| Description | Region    | Base URL                                |\n| -------     | --------  | -------                                 |\n| Azure       | Global    | api.cognitive.microsofttranslator.com   |\n| Azure       | Europe    | api-eur.cognitive.microsofttranslator.com |\n\n\n# Authentication\n\nSubscribe to the Translator Text API, part of Azure Cognitive Services, and use your subscription key from the Azure portal to authenticate. You can follow the steps in https://docs.microsoft.com/en-us/azure/cognitive-services/translator/translator-text-how-to-signup.\n\n\nThe simplest way is to pass your Azure secret key to the Translator service using the http request header `Ocp-Apim-Subscription-Key`.\n\nIf you prefer using a short-lived authentication, you may use your secret key to obtain an authorization token from the token service. In that case you pass the authorization token to the Translator service using the `Authorization` request header. To obtain an authorization token, make a `POST` request to the following URL:\n\n| Environment | Authentication service URL                                |\n| ----------  | ----------                                                |\n| Azure       | `https://api.cognitive.microsoft.com/sts/v1.0/issueToken` |\n\nHere are example requests to obtain a token with a lifetime of 10 minutes, given a secret key:\n\n```python\n// Pass secret key using header\ncurl --header 'Ocp-Apim-Subscription-Key: <your-key>' --data \"\" 'https://api.cognitive.microsoft.com/sts/v1.0/issueToken'\n// Pass secret key using query string parameter\ncurl --data \"\" 'https://api.cognitive.microsoft.com/sts/v1.0/issueToken?Subscription-Key=<your-key>'\n```\n\nA successful request returns the encoded access token as plain text in the response body. The valid token is passed to the Translator service as a bearer token in the Authorization. \n\n```\nAuthorization: Bearer <Base64-access_token>\n```\n\nAn authentication token is valid for 10 minutes. The token should be re-used when making multiple calls to the Translator APIs. If you make requests to the Translator API over an extended period of time,  you  must request a new access token at regular intervals before the token expires, for instance every 9 minutes.\n\nTo summarize, a client request to the Translator API will include one authorization header taken from the following table:\n\n| Headers       | Description  |\n| ----------    | ----------   |\n| Ocp-Apim-Subscription-key    | Use with Cognitive Services subscription if you are passing your secret key.                               The value is the Azure secret key for your subscription to Translator Text API.                         |\n| Authorization                | Use with Cognitive Services subscription if you are passing an authentication token. The value is the Bearer token: `Bearer <token>`.       |\n\n## All-in-one subscription\nThe last authentication option is to use a Cognitive Service’s all-in-one subscription. This allows you to use a single secret key to authenticate requests for multiple services.\nWhen you use an all-in-one secret key, you must include two authentication headers with your request. The first passes the secret key, the second specifies the region associated with your subscription.\n`Ocp-Api-Subscription-Key` `Ocp-Apim-Subscription-Region`\nIf you pass the secret key in the query string with the parameter `Subscription-Key`, then you must specify the region with query parameter `Subscription-Region`.\nIf you use a bearer token, you must obtain the token from the region endpoint:\n`https://<your-region>.api.cognitive.microsoft.com/sts/v1.0/issueToken`.\n\nAvailable regions are: `australiaeast`, `brazilsouth`, `canadacentral`, `centralindia`, `centraluseuap`, `eastasia`, `eastus`, `eastus2`, `japaneast`, `northeurope`, `southcentralus`, `southeastasia`, `uksouth`, `westcentralus`, `westeurope`, `westus`, and `westus2`.\n\nRegion is required for the all-in-one Text API subscription.\n\n\n# Errors\n\nA standard error response is a JSON object with name/value pair named `error`. The value is also a JSON object with properties:\n  * `code`: A server-defined error code.\n  * `message`: A string giving a human-readable representation of the error.\n\nFor example, a customer with a free trial subscription receives the following error once the free quota is exhausted:\n\n```json\n{\n  \"error\": {\n  \"code\":403000,\n  \"message\":\"The subscription has exceeded its free quota.\"\n  }\n}\n```\n# Enter your subscription keys to try out Microsoft Translator.\nSelect the `Authorize` button and enter your Microsoft Translator subscription key, OR your `all in one Cognitive Services` subscription key. If you are using the all in one Cognitive Services key you will need to also enter your subscription region.\n## Available regions are:\n\n  `australiaeast`, `brazilsouth`, `canadacentral`, `centralindia`, `centraluseuap`, `eastasia`, `eastus`, `eastus2`, `japaneast`, `northeurope`, `southcentralus`, `southeastasia`, `uksouth`, `westcentralus`, `westeurope`, `westus`, `westus2`.\n"
  },
  "securityDefinitions": {
    "apim_key": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    },
    "api_key_all_in_one": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    },
    "api_region_all_in_one": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Region",
      "in": "header"
    }
  },
  "security": [
    {
      "apim_key": []
    },
    {
      "api_key_all_in_one": []
    },
    {
      "api_region_all_in_one": []
    }
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "host": "api.cognitive.microsofttranslator.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Languages": {
      "get": {
        "description": "Gets the set of languages currently supported by other operations of the Translator Text API.\n**Authentication is not required to get language resources.**\n\n# Response Body\nA client uses the `scope` query parameter to define which groups of languages it is interested in.\n* `scope=translation` provides languages supported to translate text from one language to another language.\n* `scope=transliteration` provides capabilities for converting text in one language from one script to another script.\n* `scope=dictionary` provides language pairs for which `Dictionary` operations return data.\n\nA client may retrieve several groups simultaneously by specifying a comma-separated list of names. For example, `scope=translation,transliteration,dictionary` would return supported languages for all groups.\n\nA successful response is a JSON object with one property for each requested group.\nThe value for each property is as follows.\n\n* `translation` property\n  The value of the `translation` property is a dictionary of (key, value) pairs. Each key is a BCP 47 language tag. A key identifies a language for which text can be translated to or translated from. The value associated with the key is a JSON object with properties that describe the language\n  * `name-` Display name of the language in the locale requested via `Accept-Language` header.\n  * `nativeName-` Display name of the language in the locale native for this language.\n  * `dir-` Directionality, which is `rtl` for right-to-left languages or `ltr` for left-to-right languages.\n```json\n{\n  \"translation\": {\n  ...\n  \"fr\": {\n  \"name\": \"French\",\n  \"nativeName\": \"Français\",\n  \"dir\": \"ltr\"\n  },\n...\n }\n}\n```\n* `transliteration` property\n  The value of the `transliteration` property is a dictionary of (key, value) pairs. Each key is a BCP 47 language tag. A key identifies a language for which text can be converted from one script to another script. The value associated with the key is a JSON object with properties that describe the language and its supported scripts\n  * `name-` Display name of the language in the locale requested via `Accept-Language` header.\n  * `nativeName-` Display name of the language in the locale native for this language.\n  * `scripts-` List of scripts to convert from. Each element of the `scripts` list has properties-\n    * `code-` Code identifying the script.\n    * `name-` Display name of the script in the locale requested via `Accept-Language` header.\n    * `nativeName-` Display name of the language in the locale native for the language.\n    * `dir-` Directionality, which is `rtl` for right-to-left languages or `ltr` for left-to-right languages.\n    * `toScripts-` List of scripts available to convert text to. Each element of the `toScripts` list has properties `code`, `name`, `nativeName`, and `dir` as described earlier.\n\n```json\n{\n  \"transliteration\": {\n    ...\n    \"ja\": {\n      \"name\": \"Japanese\",\n      \"nativeName\": \"日本語\",\n      \"scripts\": [\n        {\n          \"code\": \"Jpan\",\n          \"name\": \"Japanese\",\n          \"nativeName\": \"日本語\",\n          \"dir\": \"ltr\",\n          \"toScripts\": [\n            {\n              \"code\": \"Latn\",\n              \"name\": \"Latin\",\n              \"nativeName\": \"ラテン語\",\n              \"dir\": \"ltr\"\n            }\n          ]\n        },\n        {\n          \"code\": \"Latn\",\n          \"name\": \"Latin\",\n          \"nativeName\": \"ラテン語\",\n          \"dir\": \"ltr\",\n          \"toScripts\": [\n          {\n            \"code\": \"Jpan\",\n            \"name\": \"Japanese\",\n            \"nativeName\": \"日本語\",\n            \"dir\": \"ltr\"\n          }\n          ]\n        }\n      ]\n    },\n  ...\n  }\n}\n\n```\n* `dictionary` property\nThe value of the `dictionary` property is a dictionary of (key, value) pairs. Each key is a BCP 47 language tag. The key identifies a language for which alternative translations and back-translations are available. The value is a JSON object that describes the source language and the target languages with available translations.\n  * `name-` Display name of the source language in the locale requested via `Accept-Language` header.\n  * `nativeName-` Display name of the language in the locale native for this language.\n  * `dir-` Directionality, which is `rtl` for right-to-left languages or `ltr` for left-to-right languages.\n  * `translations-` List of languages with alterative translations and examples for the query expressed in the source language. Each element of the `translations` list has properties\n    * `name-` Display name of the target language in the locale requested via `Accept-Language` header.\n    * `nativeName-` Display name of the target language in the locale native for the target language.\n    * `dir-` Directionality, which is `rtl` for right-to-left languages or `ltr` for left-to-right languages.\n    * `code-` Language code identifying the target language.\n\n```json\n\n\"es\": {\n  \"name\": \"Spanish\",\n  \"nativeName\": \"Español\",\n  \"dir\": \"ltr\",\n  \"translations\": [\n    {\n      \"name\": \"English\",\n      \"nativeName\": \"English\",\n      \"dir\": \"ltr\",\n      \"code\": \"en\"\n    }\n  ]\n},\n\n```\n\nThe structure of the response object will not change without a change in the version of the API. For the same version of the API, the list of available languages may change over time because Microsoft Translator continually extends the list of languages supported by its services.\n\nThe list of supported languages will not change frequently. To save network bandwidth and improve responsiveness, a client application should consider caching language resources and the corresponding entity tag (`ETag`). Then, the client application can periodically (for example, once every 24 hours) query the service to fetch the latest set of supported languages. Passing the current `ETag` value in an `If-None-Match` header field will allow the service to optimize the response. If the resource has not been modified, the service will return status code 304 and an empty response body.\n \n# Response Header\nETag - Current value of the entity tag for the requested groups of supported languages. To make subsequent requests more efficient, the client may send the `ETag` value in an `If-None-Match` header field.\n\nX-RequestId - Value generated by the service to identify the request. It is used for troubleshooting purposes. \n  \n  \n",
        "tags": [
          "Languages"
        ],
        "operationId": "Translator_Languages",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "name": "scope",
            "description": "A comma-separated list of names defining the group of languages to return. Allowed group names are- `translation`, `transliteration` and `dictionary`. If no scope is given, then all groups are returned, which is equivalent to passing `scope=translation,transliteration,dictionary`. To decide which set of supported languages is appropriate for your scenario, see the description of the response object.",
            "in": "query",
            "required": false,
            "type": "array",
            "minItems": 0,
            "maxItems": 3,
            "items": {
              "type": "string",
              "enum": [
                "translation",
                "transliteration",
                "dictionary"
              ]
            }
          },
          {
            "name": "Accept-Language",
            "description": "The language to use for user interface strings. Some of the fields in the response are names of languages or names of regions. Use this parameter to define the language in which these names are returned. The language is specified by providing a well-formed BCP 47 language tag. For instance, use the value `fr` to request names in French or use the value `zh-Hant` to request names in Chinese Traditional. Names are provided in the English language when a target language is not specified or when localization is not available.",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "X-ClientTraceId",
            "description": "A client-generated GUID to uniquely identify the request. Note that you can omit this header if you include the trace ID in the query string using a query parameter named ClientTraceId.",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LanguagesResult"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "x-ms-examples": {
          "Languages success example": {
            "parameters": {
              "Ocp-Apim-Subscription-Key": "{API key}",
              "Endpoint": "https://api.cognitive.microsofttranslator.com",
              "api-version": "3.0",
              "scope": "translation"
            },
            "responses": {
              "200": {
                "headers": {},
                "body": {
                  "translation": {
                    "af": {
                      "name": "Afrikaan",
                      "nativeName": "Afrikaans",
                      "dir": "ltr"
                    },
                    "ar": {
                      "name": "Arabic",
                      "nativeName": "العربية",
                      "dir": "rtl"
                    },
                    "ja": {
                      "name": "Japanese",
                      "nativeName": "日本語",
                      "dir": "ltr"
                    },
                    "ko": {
                      "name": "Korean",
                      "nativeName": "한국어",
                      "dir": "ltr"
                    },
                    "th": {
                      "name": "Thai",
                      "nativeName": "ไทย",
                      "dir": "ltr"
                    },
                    "zh-Hans": {
                      "name": "Chinese Simplified",
                      "nativeName": "简体中文",
                      "dir": "ltr"
                    },
                    "zh-Hant": {
                      "name": "Chinese Traditional",
                      "nativeName": "繁體中文",
                      "dir": "ltr"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-internal-toc-name": "Languages"
      }
    }
  },
  "definitions": {
    "LanguagesResult": {
      "type": "object",
      "description": "Example of a successful languages request",
      "properties": {
        "translation": {
          "type": "object",
          "properties": {
            "languageCode": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "nativeName": {
                  "type": "string"
                },
                "dir": {
                  "type": "string"
                }
              }
            }
          }
        },
        "transliteration": {
          "type": "object",
          "properties": {
            "languageCode": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "nativeName": {
                  "type": "string"
                },
                "scripts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "nativeName": {
                        "type": "string"
                      },
                      "dir": {
                        "type": "string"
                      },
                      "toScripts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "nativeName": {
                              "type": "string"
                            },
                            "dir": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "dictionary": {
          "type": "object",
          "properties": {
            "languageCode": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "nativeName": {
                  "type": "string"
                },
                "dir": {
                  "type": "string"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "nativeName": {
                        "type": "string"
                      },
                      "dir": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "DictionaryExampleResult": {
      "type": "array",
      "description": "Example of a successful dictionary example request",
      "items": {
        "type": "object",
        "properties": {
          "normalizedSource": {
            "type": "string"
          },
          "normalizedTarget": {
            "type": "string"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sourcePrefix": {
                  "type": "string"
                },
                "sourceTerm": {
                  "type": "string"
                },
                "sourceSuffix": {
                  "type": "string"
                },
                "targetPrefix": {
                  "type": "string"
                },
                "targetTerm": {
                  "type": "string"
                },
                "targetSuffix": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "DictionaryLookupResult": {
      "type": "array",
      "description": "Example of a successful dictionary lookup request",
      "items": {
        "type": "object",
        "properties": {
          "normalizedSource": {
            "type": "string"
          },
          "displaySource": {
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "normalizedTarget": {
                  "type": "string"
                },
                "displayTarget": {
                  "type": "string"
                },
                "posTag": {
                  "type": "string"
                },
                "confidence": {
                  "type": "number"
                },
                "prefixWord": {
                  "type": "string"
                },
                "backTranslations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "normalizedText": {
                        "type": "string"
                      },
                      "displayText": {
                        "type": "string"
                      },
                      "numExamples": {
                        "type": "integer"
                      },
                      "frequencyCount": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "TranslateResult": {
      "type": "array",
      "description": "Example of a successful translate request",
      "items": {
        "type": "object",
        "properties": {
          "translation": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string"
                },
                "to": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "TranslateResultAll": {
      "type": "array",
      "description": "Example of a successful translate request, including all optional parameters.",
      "items": {
        "type": "object",
        "properties": {
          "detectedLanguage": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "score": {
                "type": "integer"
              }
            }
          },
          "translations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string"
                },
                "transliteration": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string"
                    },
                    "script": {
                      "type": "string"
                    }
                  }
                },
                "to": {
                  "type": "string"
                },
                "alignment": {
                  "type": "object",
                  "properties": {
                    "proj": {
                      "type": "string"
                    }
                  }
                },
                "sentLen": {
                  "type": "object",
                  "properties": {
                    "srcSentLen": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "integer": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "transSentLen": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "integer": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "BreakSentenceResult": {
      "type": "array",
      "description": "Example of a successful break sentence request",
      "items": {
        "type": "object",
        "properties": {
          "sentLen": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      }
    },
    "TransliterateResult": {
      "type": "array",
      "description": "Example of a successful transliterate request",
      "items": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "script": {
            "type": "string"
          }
        },
        "example": {
          "text": "this is cool",
          "script": "this is very cool"
        }
      }
    },
    "DetectResult": {
      "type": "array",
      "description": "Example of a successful detect request",
      "items": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          }
        }
      }
    },
    "BreakSentenceTextInput": {
      "type": "object",
      "description": "Text needed for break sentence request",
      "properties": {
        "text": {
          "type": "string",
          "maximum": 10000
        }
      },
      "example": {
        "text": "Today is a good day."
      }
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          }
        }
      }
    },
    "DetectTextInput": {
      "type": "object",
      "description": "Text needed for detect request ",
      "properties": {
        "text": {
          "type": "string",
          "maximum": 10000
        }
      },
      "example": {
        "text": "What language is this? I am not sure, nein"
      }
    },
    "DictionaryLookupTextInput": {
      "type": "object",
      "description": "Text needed for a dictionary lookup request ",
      "properties": {
        "text": {
          "type": "string",
          "maximum": 100
        }
      },
      "example": {
        "text": "Bug"
      }
    },
    "DictionaryExampleTextInput": {
      "type": "object",
      "description": "Text needed for a dictionary example request ",
      "properties": {
        "text": {
          "type": "string",
          "maximum": 100
        },
        "translation": {
          "type": "string"
        }
      },
      "example": {
        "text": "bug",
        "translation": "bicho"
      }
    },
    "TranslateTextInput": {
      "type": "object",
      "description": "Text needed for a translate request ",
      "properties": {
        "text": {
          "type": "string",
          "maximum": 5000
        }
      },
      "example": {
        "text": "I would really like to drive your car."
      }
    },
    "TransliterateTextInput": {
      "type": "object",
      "description": "Text needed for a transliterate request ",
      "properties": {
        "text": {
          "type": "string",
          "maximum": 5000
        }
      },
      "example": {
        "text": "Good morning, how are you today?"
      }
    }
  },
  "parameters": {
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoints",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "ApiVersion": {
      "name": "api-version",
      "description": "Version of the API requested by the client. Value must be **3.0**.",
      "in": "query",
      "required": true,
      "type": "string",
      "default": "3.0"
    }
  },
  "x-internal-service-id": "cognitiveservices",
  "x-internal-service-name": "Cognitive Services",
  "x-internal-toc-name": "Translator",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "Languages",
  "x-internal-operation-name": "Languages"
}