### YamlMime:RESTOperation
uid: api.cognitive.microsofttranslator.com.cognitiveservices.translatortext.translator.languages
name: Languages
service: Cognitive Services
groupName: Translator
apiVersion: "3.0"
summary: "Gets the set of languages currently supported by other operations of the Translator Text API.\n**Authentication is not required to get language resources.**\n\n# Response Body\nA client uses the `scope` query parameter to define which groups of languages it is interested in.\n* `scope=translation` provides languages supported to translate text from one language to another language.\n* `scope=transliteration` provides capabilities for converting text in one language from one script to another script.\n* `scope=dictionary` provides language pairs for which `Dictionary` operations return data.\n\nA client may retrieve several groups simultaneously by specifying a comma-separated list of names. For example, `scope=translation,transliteration,dictionary` would return supported languages for all groups.\n\nA successful response is a JSON object with one property for each requested group.\nThe value for each property is as follows.\n\n* `translation` property\n  The value of the `translation` property is a dictionary of (key, value) pairs. Each key is a BCP 47 language tag. A key identifies a language for which text can be translated to or translated from. The value associated with the key is a JSON object with properties that describe the language\n  * `name-` Display name of the language in the locale requested via `Accept-Language` header.\n  * `nativeName-` Display name of the language in the locale native for this language.\n  * `dir-` Directionality, which is `rtl` for right-to-left languages or `ltr` for left-to-right languages.\n```json\n{\n  \"translation\": {\n  ...\n  \"fr\": {\n  \"name\": \"French\",\n  \"nativeName\": \"Français\",\n  \"dir\": \"ltr\"\n  },\n...\n }\n}\n```\n* `transliteration` property\n  The value of the `transliteration` property is a dictionary of (key, value) pairs. Each key is a BCP 47 language tag. A key identifies a language for which text can be converted from one script to another script. The value associated with the key is a JSON object with properties that describe the language and its supported scripts\n  * `name-` Display name of the language in the locale requested via `Accept-Language` header.\n  * `nativeName-` Display name of the language in the locale native for this language.\n  * `scripts-` List of scripts to convert from. Each element of the `scripts` list has properties-\n    * `code-` Code identifying the script.\n    * `name-` Display name of the script in the locale requested via `Accept-Language` header.\n    * `nativeName-` Display name of the language in the locale native for the language.\n    * `dir-` Directionality, which is `rtl` for right-to-left languages or `ltr` for left-to-right languages.\n    * `toScripts-` List of scripts available to convert text to. Each element of the `toScripts` list has properties `code`, `name`, `nativeName`, and `dir` as described earlier.\n\n```json\n{\n  \"transliteration\": {\n    ...\n    \"ja\": {\n      \"name\": \"Japanese\",\n      \"nativeName\": \"日本語\",\n      \"scripts\": [\n        {\n          \"code\": \"Jpan\",\n          \"name\": \"Japanese\",\n          \"nativeName\": \"日本語\",\n          \"dir\": \"ltr\",\n          \"toScripts\": [\n            {\n              \"code\": \"Latn\",\n              \"name\": \"Latin\",\n              \"nativeName\": \"ラテン語\",\n              \"dir\": \"ltr\"\n            }\n          ]\n        },\n        {\n          \"code\": \"Latn\",\n          \"name\": \"Latin\",\n          \"nativeName\": \"ラテン語\",\n          \"dir\": \"ltr\",\n          \"toScripts\": [\n          {\n            \"code\": \"Jpan\",\n            \"name\": \"Japanese\",\n            \"nativeName\": \"日本語\",\n            \"dir\": \"ltr\"\n          }\n          ]\n        }\n      ]\n    },\n  ...\n  }\n}\n\n```\n* `dictionary` property\nThe value of the `dictionary` property is a dictionary of (key, value) pairs. Each key is a BCP 47 language tag. The key identifies a language for which alternative translations and back-translations are available. The value is a JSON object that describes the source language and the target languages with available translations.\n  * `name-` Display name of the source language in the locale requested via `Accept-Language` header.\n  * `nativeName-` Display name of the language in the locale native for this language.\n  * `dir-` Directionality, which is `rtl` for right-to-left languages or `ltr` for left-to-right languages.\n  * `translations-` List of languages with alterative translations and examples for the query expressed in the source language. Each element of the `translations` list has properties\n    * `name-` Display name of the target language in the locale requested via `Accept-Language` header.\n    * `nativeName-` Display name of the target language in the locale native for the target language.\n    * `dir-` Directionality, which is `rtl` for right-to-left languages or `ltr` for left-to-right languages.\n    * `code-` Language code identifying the target language.\n\n```json\n\n\"es\": {\n  \"name\": \"Spanish\",\n  \"nativeName\": \"Español\",\n  \"dir\": \"ltr\",\n  \"translations\": [\n    {\n      \"name\": \"English\",\n      \"nativeName\": \"English\",\n      \"dir\": \"ltr\",\n      \"code\": \"en\"\n    }\n  ]\n},\n\n```\n\nThe structure of the response object will not change without a change in the version of the API. For the same version of the API, the list of available languages may change over time because Microsoft Translator continually extends the list of languages supported by its services.\n\nThe list of supported languages will not change frequently. To save network bandwidth and improve responsiveness, a client application should consider caching language resources and the corresponding entity tag (`ETag`). Then, the client application can periodically (for example, once every 24 hours) query the service to fetch the latest set of supported languages. Passing the current `ETag` value in an `If-None-Match` header field will allow the service to optimize the response. If the resource has not been modified, the service will return status code 304 and an empty response body.\n \n# Response Header\nETag - Current value of the entity tag for the requested groups of supported languages. To make subsequent requests more efficient, the client may send the `ETag` value in an `If-None-Match` header field.\n\nX-RequestId - Value generated by the service to identify the request. It is used for troubleshooting purposes. \n  \n  \n"
consumes: []
produces:
- application/json
paths:
- content: GET {Endpoint}/Languages?api-version=3.0
- content: GET {Endpoint}/Languages?api-version=3.0&scope={scope}
  isOptional: true
uriParameters:
- name: Endpoint
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: Supported Cognitive Services endpoints
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API requested by the client. Value must be **3.0**.
  types:
  - uid: string
- name: scope
  in: query
  description: A comma-separated list of names defining the group of languages to return. Allowed group names are- `translation`, `transliteration` and `dictionary`. If no scope is given, then all groups are returned, which is equivalent to passing `scope=translation,transliteration,dictionary`. To decide which set of supported languages is appropriate for your scenario, see the description of the response object.
  types:
  - uid: array
responses:
- name: 200 OK
  description: Success
  types:
  - uid: LanguagesResult
- name: Other Status Codes
  description: Error response.
  types:
  - uid: ErrorMessage
requestHeader:
- name: Accept-Language
  in: header
  description: The language to use for user interface strings. Some of the fields in the response are names of languages or names of regions. Use this parameter to define the language in which these names are returned. The language is specified by providing a well-formed BCP 47 language tag. For instance, use the value `fr` to request names in French or use the value `zh-Hant` to request names in Chinese Traditional. Names are provided in the English language when a target language is not specified or when localization is not available.
  types:
  - uid: string
- name: X-ClientTraceId
  in: header
  description: A client-generated GUID to uniquely identify the request. Note that you can omit this header if you include the trace ID in the query string using a query parameter named ClientTraceId.
  types:
  - uid: string
definitions:
- name: LanguagesResult
  description: Example of a successful languages request
  kind: object
  properties:
  - name: translation
    description: ''
    types:
    - uid: Translation
  - name: transliteration
    description: ''
    types:
    - uid: Transliteration
  - name: dictionary
    description: ''
    types:
    - uid: Dictionary
- name: ErrorMessage
  kind: object
  properties:
  - name: error
    description: ''
    types:
    - uid: Error
- name: Translation
  kind: object
  properties:
  - name: languageCode
    description: ''
    types:
    - uid: translation.LanguageCode
- name: Transliteration
  kind: object
  properties:
  - name: languageCode
    description: ''
    types:
    - uid: transliteration.LanguageCode
- name: Dictionary
  kind: object
  properties:
  - name: languageCode
    description: ''
    types:
    - uid: LanguageCode
- name: Error
  kind: object
  properties:
  - name: code
    description: ''
    types:
    - uid: string
  - name: message
    description: ''
    types:
    - uid: string
- name: LanguageCode
  kind: object
  properties:
  - name: name
    description: ''
    types:
    - uid: string
  - name: nativeName
    description: ''
    types:
    - uid: string
  - name: dir
    description: ''
    types:
    - uid: string
  - name: translations
    description: ''
    types:
    - uid: Translations
      isArray: true
- name: translation.LanguageCode
  kind: object
  properties:
  - name: name
    description: ''
    types:
    - uid: string
  - name: nativeName
    description: ''
    types:
    - uid: string
  - name: dir
    description: ''
    types:
    - uid: string
- name: transliteration.LanguageCode
  kind: object
  properties:
  - name: name
    description: ''
    types:
    - uid: string
  - name: nativeName
    description: ''
    types:
    - uid: string
  - name: scripts
    description: ''
    types:
    - uid: Scripts
      isArray: true
- name: Scripts
  kind: object
  properties:
  - name: code
    description: ''
    types:
    - uid: string
  - name: name
    description: ''
    types:
    - uid: string
  - name: nativeName
    description: ''
    types:
    - uid: string
  - name: dir
    description: ''
    types:
    - uid: string
  - name: toScripts
    description: ''
    types:
    - uid: ToScripts
      isArray: true
- name: Translations
  kind: object
  properties:
  - name: name
    description: ''
    types:
    - uid: string
  - name: nativeName
    description: ''
    types:
    - uid: string
  - name: dir
    description: ''
    types:
    - uid: string
  - name: code
    description: ''
    types:
    - uid: string
- name: ToScripts
  kind: object
  properties:
  - name: code
    description: ''
    types:
    - uid: string
  - name: name
    description: ''
    types:
    - uid: string
  - name: nativeName
    description: ''
    types:
    - uid: string
  - name: dir
    description: ''
    types:
    - uid: string
examples:
- name: Languages success example
  request:
    uri: GET https://api.cognitive.microsofttranslator.com/Languages?api-version=3.0&scope=translation
  responses:
  - statusCode: "200"
    body: >-
      {
        "translation": {
          "af": {
            "name": "Afrikaan",
            "nativeName": "Afrikaans",
            "dir": "ltr"
          },
          "ar": {
            "name": "Arabic",
            "nativeName": "العربية",
            "dir": "rtl"
          },
          "ja": {
            "name": "Japanese",
            "nativeName": "日本語",
            "dir": "ltr"
          },
          "ko": {
            "name": "Korean",
            "nativeName": "한국어",
            "dir": "ltr"
          },
          "th": {
            "name": "Thai",
            "nativeName": "ไทย",
            "dir": "ltr"
          },
          "zh-Hans": {
            "name": "Chinese Simplified",
            "nativeName": "简体中文",
            "dir": "ltr"
          },
          "zh-Hant": {
            "name": "Chinese Traditional",
            "nativeName": "繁體中文",
            "dir": "ltr"
          }
        }
      }
security:
- name: Ocp-Apim-Subscription-Key
  type: apiKey
  in: header
- name: Ocp-Apim-Subscription-Key
  type: apiKey
  in: header
- name: Ocp-Apim-Subscription-Region
  type: apiKey
  in: header
errorCodes: []
