### YamlMime:RESTOperation
uid: management.azure.com.storsimple.devicesettings.updatenetworksettings
name: Update Network Settings
service: StorSimple
groupName: Device Settings
apiVersion: 2017-06-01
summary: Updates the network settings on the specified device.
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/networkSettings/default?api-version=2017-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The subscription id
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The resource group name
  types:
  - uid: string
- name: managerName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The manager name
  types:
  - uid: string
- name: deviceName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The device name
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The api version
  types:
  - uid: string
responses:
- name: 200 OK
  description: The Network settings.
  types:
  - uid: NetworkSettings
- name: 202 Accepted
  description: Accepted the request to update network settings.
requestBody:
- name: default
  parameters:
  - name: properties.dnsSettings
    in: body
    description: The DNS (Domain Name System) settings of device.
    types:
    - uid: DNSSettings
  - name: properties.networkAdapters
    in: body
    description: The network adapter list of device.
    types:
    - uid: NetworkAdapterList
requestHeader: []
definitions:
- name: DNSSettings
  description: The DNS(Domain Name Server) settings of a device.
  kind: object
  properties:
  - name: primaryDnsServer
    description: The primary IPv4 DNS server for the device
    types:
    - uid: string
  - name: primaryIpv6DnsServer
    description: The primary IPv6 DNS server for the device
    types:
    - uid: string
  - name: secondaryDnsServers
    description: The secondary IPv4 DNS server for the device
    types:
    - uid: string
      isArray: true
  - name: secondaryIpv6DnsServers
    description: The secondary IPv6 DNS server for the device
    types:
    - uid: string
      isArray: true
- name: NetworkAdapterList
  description: The collection of network adapters on the device.
  kind: object
  properties:
  - name: value
    description: The value.
    types:
    - uid: NetworkAdapters
      isArray: true
- name: NetworkSettings
  description: Represents the network settings of a device.
  kind: object
  properties:
  - name: properties.dnsSettings
    description: The DNS (Domain Name System) settings of device.
    types:
    - uid: DNSSettings
  - name: properties.networkAdapters
    description: The network adapter list of device.
    types:
    - uid: NetworkAdapterList
  - name: properties.webproxySettings
    description: The webproxy settings of device.
    types:
    - uid: WebproxySettings
  - name: id
    isReadyOnly: true
    description: The path ID that uniquely identifies the object.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the object.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The hierarchical type of the object.
    types:
    - uid: string
  - name: kind
    description: The Kind of the object. Currently only Series8000 is supported
    types:
    - uid: Kind
- name: NetworkSettingsPatch
  description: Represents the patch request for the network settings of a device.
  kind: object
  properties:
  - name: properties.dnsSettings
    description: The DNS (Domain Name System) settings of device.
    types:
    - uid: DNSSettings
  - name: properties.networkAdapters
    description: The network adapter list of device.
    types:
    - uid: NetworkAdapterList
- name: NetworkAdapters
  description: Represents the network adapter on device.
  kind: object
  properties:
  - name: interfaceId
    description: The ID of the network adapter.
    types:
    - uid: NetInterfaceId
  - name: netInterfaceStatus
    description: Value indicating status of network adapter.
    types:
    - uid: NetInterfaceStatus
  - name: isDefault
    description: Value indicating whether this instance is default.
    types:
    - uid: boolean
  - name: iscsiAndCloudStatus
    description: Value indicating cloud and ISCSI status of network adapter.
    types:
    - uid: ISCSIAndCloudStatus
  - name: speed
    description: The speed of the network adapter.
    types:
    - uid: integer
  - name: mode
    description: The mode of network adapter, either IPv4, IPv6 or both.
    types:
    - uid: NetworkMode
  - name: nicIpv4Settings
    description: The IPv4 configuration of the network adapter.
    types:
    - uid: NicIPv4
  - name: nicIpv6Settings
    description: The IPv6 configuration of the network adapter.
    types:
    - uid: NicIPv6
- name: WebproxySettings
  description: The web proxy settings on the device.
  kind: object
  properties:
  - name: connectionUri
    description: The connection URI.
    types:
    - uid: string
  - name: authentication
    description: The authentication type.
    types:
    - uid: AuthenticationType
  - name: username
    description: The webproxy username.
    types:
    - uid: string
- name: Kind
  description: The Kind of the object. Currently only Series8000 is supported
  kind: enum
  properties:
  - name: Series8000
    types:
    - uid: string
- name: NetInterfaceId
  description: The ID of the network adapter.
  kind: enum
  properties:
  - name: Invalid
    types:
    - uid: string
  - name: Data0
    types:
    - uid: string
  - name: Data1
    types:
    - uid: string
  - name: Data2
    types:
    - uid: string
  - name: Data3
    types:
    - uid: string
  - name: Data4
    types:
    - uid: string
  - name: Data5
    types:
    - uid: string
- name: NetInterfaceStatus
  description: Value indicating status of network adapter.
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: ISCSIAndCloudStatus
  description: Value indicating cloud and ISCSI status of network adapter.
  kind: enum
  properties:
  - name: Disabled
    types:
    - uid: string
  - name: IscsiEnabled
    types:
    - uid: string
  - name: CloudEnabled
    types:
    - uid: string
  - name: IscsiAndCloudEnabled
    types:
    - uid: string
- name: NetworkMode
  description: The mode of network adapter, either IPv4, IPv6 or both.
  kind: enum
  properties:
  - name: Invalid
    types:
    - uid: string
  - name: IPV4
    types:
    - uid: string
  - name: IPV6
    types:
    - uid: string
  - name: BOTH
    types:
    - uid: string
- name: NicIPv4
  description: Details related to the IPv4 address configuration.
  kind: object
  properties:
  - name: ipv4Address
    description: The IPv4 address of the network adapter.
    types:
    - uid: string
  - name: ipv4Netmask
    description: The IPv4 netmask of the network adapter.
    types:
    - uid: string
  - name: ipv4Gateway
    description: The IPv4 gateway of the network adapter.
    types:
    - uid: string
  - name: controller0Ipv4Address
    description: The IPv4 address of Controller0.
    types:
    - uid: string
  - name: controller1Ipv4Address
    description: The IPv4 address of Controller1.
    types:
    - uid: string
- name: NicIPv6
  description: Details related to the IPv6 address configuration.
  kind: object
  properties:
  - name: ipv6Address
    description: The IPv6 address of the network adapter.
    types:
    - uid: string
  - name: ipv6Prefix
    description: The IPv6 prefix of the network adapter.
    types:
    - uid: string
  - name: ipv6Gateway
    description: The IPv6 gateway of the network adapter.
    types:
    - uid: string
  - name: controller0Ipv6Address
    description: The IPv6 address of Controller0.
    types:
    - uid: string
  - name: controller1Ipv6Address
    description: The IPv6 address of Controller1.
    types:
    - uid: string
- name: AuthenticationType
  description: The authentication type.
  kind: enum
  properties:
  - name: Invalid
    types:
    - uid: string
  - name: None
    types:
    - uid: string
  - name: Basic
    types:
    - uid: string
  - name: NTLM
    types:
    - uid: string
examples:
- name: DeviceSettingsUpdateNetworkSettings
  request:
    uri: PATCH https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/networkSettings/default?api-version=2017-06-01
    body: >-
      {
        "properties": {
          "dnsSettings": {
            "primaryDnsServer": "10.171.65.60",
            "secondaryDnsServers": [
              "8.8.8.8"
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/networkSettings/default?api-version=2017-06-01

      {
        "properties": {
          "dnsSettings": {
            "primaryDnsServer": "10.171.65.60",
            "secondaryDnsServers": [
              "8.8.8.8"
            ]
          }
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armstorsimple8000series_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storsimple8000series/armstorsimple8000series"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storsimple8000series/resource-manager/Microsoft.StorSimple/stable/2017-06-01/examples/DeviceSettingsUpdateNetworkSettings.json
      func ExampleDeviceSettingsClient_BeginUpdateNetworkSettings() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorsimple8000series.NewDeviceSettingsClient("4385cf00-2d3a-425a-832f-f4285b1c9dce", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginUpdateNetworkSettings(ctx,
      		"Device05ForSDKTest",
      		"ResourceGroupForSDKTest",
      		"ManagerForSDKTest1",
      		armstorsimple8000series.NetworkSettingsPatch{
      			Properties: &armstorsimple8000series.NetworkSettingsPatchProperties{
      				DNSSettings: &armstorsimple8000series.DNSSettings{
      					PrimaryDNSServer: to.Ptr("10.171.65.60"),
      					SecondaryDNSServers: []*string{
      						to.Ptr("8.8.8.8")},
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorsimple8000series%2Farmstorsimple8000series%2Fv1.0.0/sdk/resourcemanager/storsimple8000series/armstorsimple8000series/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { StorSimple8000SeriesManagementClient } = require("@azure/arm-storsimple8000series");
      const { DefaultAzureCredential } = require("@azure/identity");

      async function deviceSettingsUpdateNetworkSettings() {
        const subscriptionId = "4385cf00-2d3a-425a-832f-f4285b1c9dce";
        const deviceName = "Device05ForSDKTest";
        const resourceGroupName = "ResourceGroupForSDKTest";
        const managerName = "ManagerForSDKTest1";
        const parameters = {
          dnsSettings: {
            primaryDnsServer: "10.171.65.60",
            secondaryDnsServers: ["8.8.8.8"],
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new StorSimple8000SeriesManagementClient(credential, subscriptionId);
        const result = await client.deviceSettings.beginUpdateNetworkSettingsAndWait(
          deviceName,
          resourceGroupName,
          managerName,
          parameters
        );
        console.log(result);
      }

      deviceSettingsUpdateNetworkSettings().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storsimple8000series_2.0.1/sdk/storsimple8000series/arm-storsimple8000series/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "encryptionStatus": "Enabled",
          "keyRolloverStatus": "NotRequired"
        },
        "id": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/encryptionSettings/default",
        "name": "default",
        "type": "Microsoft.StorSimple/managers/encryptionSettings",
        "kind": "Series8000"
      }
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about StorSimple service - Updates the network settings on the specified device.
errorCodes: []
