### YamlMime:RESTOperation
uid: management.azure.com.storsimple.accesscontrolrecords.createorupdate
name: Create Or Update
service: StorSimple
groupName: Access Control Records
apiVersion: 2017-06-01
summary: Creates or Updates an access control record.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords/{accessControlRecordName}?api-version=2017-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The subscription id
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The resource group name
  types:
  - uid: string
- name: managerName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The manager name
  types:
  - uid: string
- name: accessControlRecordName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The name of the access control record.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The api version
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully created or updated the access control record.
  types:
  - uid: AccessControlRecord
- name: 202 Accepted
  description: Accepted the request to create or update the access control record.
requestBody:
- name: default
  parameters:
  - name: properties.initiatorName
    in: body
    isRequired: true
    description: The iSCSI initiator name (IQN).
    types:
    - uid: string
  - name: kind
    in: body
    description: The Kind of the object. Currently only Series8000 is supported
    types:
    - uid: Kind
requestHeader: []
definitions:
- name: AccessControlRecord
  description: The access control record.
  kind: object
  properties:
  - name: properties.initiatorName
    description: The iSCSI initiator name (IQN).
    types:
    - uid: string
  - name: properties.volumeCount
    isReadyOnly: true
    description: The number of volumes using the access control record.
    types:
    - uid: integer
  - name: id
    isReadyOnly: true
    description: The path ID that uniquely identifies the object.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the object.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The hierarchical type of the object.
    types:
    - uid: string
  - name: kind
    description: The Kind of the object. Currently only Series8000 is supported
    types:
    - uid: Kind
- name: Kind
  description: The Kind of the object. Currently only Series8000 is supported
  kind: enum
  properties:
  - name: Series8000
    types:
    - uid: string
examples:
- name: AccessControlRecordsCreateOrUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/accessControlRecords/ACRForTest?api-version=2017-06-01
    body: >-
      {
        "properties": {
          "initiatorName": "iqn.2017-06.com.contoso:ForTest"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/accessControlRecords/ACRForTest?api-version=2017-06-01

      {
        "properties": {
          "initiatorName": "iqn.2017-06.com.contoso:ForTest"
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armstorsimple8000series_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storsimple8000series/armstorsimple8000series"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storsimple8000series/resource-manager/Microsoft.StorSimple/stable/2017-06-01/examples/AccessControlRecordsCreateOrUpdate.json
      func ExampleAccessControlRecordsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorsimple8000series.NewAccessControlRecordsClient("4385cf00-2d3a-425a-832f-f4285b1c9dce", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"ACRForTest",
      		"ResourceGroupForSDKTest",
      		"ManagerForSDKTest1",
      		armstorsimple8000series.AccessControlRecord{
      			Properties: &armstorsimple8000series.AccessControlRecordProperties{
      				InitiatorName: to.Ptr("iqn.2017-06.com.contoso:ForTest"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorsimple8000series%2Farmstorsimple8000series%2Fv1.0.0/sdk/resourcemanager/storsimple8000series/armstorsimple8000series/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { StorSimple8000SeriesManagementClient } = require("@azure/arm-storsimple8000series");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or Updates an access control record.
       *
       * @summary Creates or Updates an access control record.
       * x-ms-original-file: specification/storsimple8000series/resource-manager/Microsoft.StorSimple/stable/2017-06-01/examples/AccessControlRecordsCreateOrUpdate.json
       */
      async function accessControlRecordsCreateOrUpdate() {
        const subscriptionId = "4385cf00-2d3a-425a-832f-f4285b1c9dce";
        const accessControlRecordName = "ACRForTest";
        const resourceGroupName = "ResourceGroupForSDKTest";
        const managerName = "ManagerForSDKTest1";
        const parameters = {
          initiatorName: "iqn.2017-06.com.contoso:ForTest",
        };
        const credential = new DefaultAzureCredential();
        const client = new StorSimple8000SeriesManagementClient(credential, subscriptionId);
        const result = await client.accessControlRecords.beginCreateOrUpdateAndWait(
          accessControlRecordName,
          resourceGroupName,
          managerName,
          parameters
        );
        console.log(result);
      }

      accessControlRecordsCreateOrUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storsimple8000series_2.0.1/sdk/storsimple8000series/arm-storsimple8000series/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "initiatorName": "iqn.2017-06.com.contoso:ForTest",
          "volumeCount": 0
        },
        "id": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/accessControlRecords/ACRForTest",
        "name": "ACRForTest",
        "type": "Microsoft.StorSimple/managers/accessControlRecords",
        "kind": "Series8000"
      }
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about StorSimple service - Creates or Updates an access control record.
errorCodes: []
