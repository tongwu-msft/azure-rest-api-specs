### YamlMime:RESTOperation
uid: management.azure.com.storsimple.volumecontainers.createorupdate
name: Create Or Update
service: StorSimple
groupName: Volume Containers
apiVersion: 2017-06-01
summary: Creates or updates the volume container.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}?api-version=2017-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The subscription id
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The resource group name
  types:
  - uid: string
- name: managerName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The manager name
  types:
  - uid: string
- name: deviceName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The device name
  types:
  - uid: string
- name: volumeContainerName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The name of the volume container.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The api version
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully created or updated the Volume Container.
  types:
  - uid: VolumeContainer
- name: 202 Accepted
  description: Accepted the request to create or update the Volume Container
requestBody:
- name: default
  parameters:
  - name: properties.encryptionKey
    in: body
    description: The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
    types:
    - uid: AsymmetricEncryptedSecret
  - name: properties.storageAccountCredentialId
    in: body
    isRequired: true
    description: The path ID of storage account associated with the volume container.
    types:
    - uid: string
  - name: properties.bandWidthRateInMbps
    in: body
    description: The bandwidth-rate set on the volume container.
    types:
    - uid: integer
  - name: properties.bandwidthSettingId
    in: body
    description: The ID of the bandwidth setting associated with the volume container.
    types:
    - uid: string
  - name: kind
    in: body
    description: The Kind of the object. Currently only Series8000 is supported
    types:
    - uid: Kind
requestHeader: []
definitions:
- name: AsymmetricEncryptedSecret
  description: Represent the secrets intended for encryption with asymmetric key pair.
  kind: object
  properties:
  - name: value
    description: The value of the secret.
    types:
    - uid: string
  - name: encryptionCertThumbprint
    description: Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
    types:
    - uid: string
  - name: encryptionAlgorithm
    description: The algorithm used to encrypt "Value".
    types:
    - uid: EncryptionAlgorithm
- name: VolumeContainer
  description: The volume container.
  kind: object
  properties:
  - name: properties.encryptionKey
    description: The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
    types:
    - uid: AsymmetricEncryptedSecret
  - name: properties.encryptionStatus
    isReadyOnly: true
    description: The flag to denote whether encryption is enabled or not.
    types:
    - uid: EncryptionStatus
  - name: properties.volumeCount
    isReadyOnly: true
    description: The number of volumes in the volume Container.
    types:
    - uid: integer
  - name: properties.storageAccountCredentialId
    description: The path ID of storage account associated with the volume container.
    types:
    - uid: string
  - name: properties.ownerShipStatus
    isReadyOnly: true
    description: The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
    types:
    - uid: OwnerShipStatus
  - name: properties.bandWidthRateInMbps
    description: The bandwidth-rate set on the volume container.
    types:
    - uid: integer
  - name: properties.bandwidthSettingId
    description: The ID of the bandwidth setting associated with the volume container.
    types:
    - uid: string
  - name: properties.totalCloudStorageUsageInBytes
    isReadyOnly: true
    description: The total cloud storage for the volume container.
    types:
    - uid: integer
  - name: id
    isReadyOnly: true
    description: The path ID that uniquely identifies the object.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the object.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The hierarchical type of the object.
    types:
    - uid: string
  - name: kind
    description: The Kind of the object. Currently only Series8000 is supported
    types:
    - uid: Kind
- name: EncryptionAlgorithm
  description: The algorithm used to encrypt "Value".
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: AES256
    types:
    - uid: string
  - name: RSAES_PKCS1_v_1_5
    types:
    - uid: string
- name: EncryptionStatus
  description: The encryption status to indicates if encryption is enabled or not.
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: OwnerShipStatus
  description: The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
  kind: enum
  properties:
  - name: Owned
    types:
    - uid: string
  - name: NotOwned
    types:
    - uid: string
- name: Kind
  description: The Kind of the object. Currently only Series8000 is supported
  kind: enum
  properties:
  - name: Series8000
    types:
    - uid: string
examples:
- name: VolumeContainersCreateOrUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/volumeContainers/VolumeContainerForSDKTest?api-version=2017-06-01
    body: >-
      {
        "properties": {
          "encryptionKey": {
            "value": "R//pyVLx/fn58ia098JiLgZB5RY7fVT+6o8a4fmsvjy+ls2UgJphMf25XVqEQCZnsp/5uxteN1M/9ArPIICdhM7M1+b/Ur7kJ0FH0ktxfk7CrPWWJLI4q20LZoduJGI56lREav1VpuLdqw5F9fRcq7zbfgPQ3B/SD0mfumNRiV+AnwbC6msfavIuWrhVDl9iSzEPE+zU06/kpsexnrS81yYT2QlVVUbvpY4F3zfH8TQPpAROTbv2pld6JO4eGOrZ5O1iOr6XCg2TY2W/jf+Ev4z5tqC9VWXE5kh65gjBfpWN0bDWXKekqEhor2crHAxZi4dybdY8Ok1MDWd1CSU8kw==",
            "encryptionCertThumbprint": "A872A2DF196AC7682EE24791E7DE2E2A360F5926",
            "encryptionAlgorithm": "RSAES_PKCS1_v_1_5"
          },
          "storageAccountCredentialId": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/storageAccountCredentials/safortestrecording",
          "bandwidthSettingId": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/bandwidthSettings/bandwidthSetting1"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/volumeContainers/VolumeContainerForSDKTest?api-version=2017-06-01

      {
        "properties": {
          "encryptionKey": {
            "value": "R//pyVLx/fn58ia098JiLgZB5RY7fVT+6o8a4fmsvjy+ls2UgJphMf25XVqEQCZnsp/5uxteN1M/9ArPIICdhM7M1+b/Ur7kJ0FH0ktxfk7CrPWWJLI4q20LZoduJGI56lREav1VpuLdqw5F9fRcq7zbfgPQ3B/SD0mfumNRiV+AnwbC6msfavIuWrhVDl9iSzEPE+zU06/kpsexnrS81yYT2QlVVUbvpY4F3zfH8TQPpAROTbv2pld6JO4eGOrZ5O1iOr6XCg2TY2W/jf+Ev4z5tqC9VWXE5kh65gjBfpWN0bDWXKekqEhor2crHAxZi4dybdY8Ok1MDWd1CSU8kw==",
            "encryptionCertThumbprint": "A872A2DF196AC7682EE24791E7DE2E2A360F5926",
            "encryptionAlgorithm": "RSAES_PKCS1_v_1_5"
          },
          "storageAccountCredentialId": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/storageAccountCredentials/safortestrecording",
          "bandwidthSettingId": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/bandwidthSettings/bandwidthSetting1"
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armstorsimple8000series_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storsimple8000series/armstorsimple8000series"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storsimple8000series/resource-manager/Microsoft.StorSimple/stable/2017-06-01/examples/VolumeContainersCreateOrUpdate.json
      func ExampleVolumeContainersClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorsimple8000series.NewVolumeContainersClient("4385cf00-2d3a-425a-832f-f4285b1c9dce", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"Device05ForSDKTest",
      		"VolumeContainerForSDKTest",
      		"ResourceGroupForSDKTest",
      		"ManagerForSDKTest1",
      		armstorsimple8000series.VolumeContainer{
      			Properties: &armstorsimple8000series.VolumeContainerProperties{
      				BandwidthSettingID: to.Ptr("/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/bandwidthSettings/bandwidthSetting1"),
      				EncryptionKey: &armstorsimple8000series.AsymmetricEncryptedSecret{
      					EncryptionAlgorithm:      to.Ptr(armstorsimple8000series.EncryptionAlgorithmRSAESPKCS1V15),
      					EncryptionCertThumbprint: to.Ptr("A872A2DF196AC7682EE24791E7DE2E2A360F5926"),
      					Value:                    to.Ptr("R//pyVLx/fn58ia098JiLgZB5RY7fVT+6o8a4fmsvjy+ls2UgJphMf25XVqEQCZnsp/5uxteN1M/9ArPIICdhM7M1+b/Ur7kJ0FH0ktxfk7CrPWWJLI4q20LZoduJGI56lREav1VpuLdqw5F9fRcq7zbfgPQ3B/SD0mfumNRiV+AnwbC6msfavIuWrhVDl9iSzEPE+zU06/kpsexnrS81yYT2QlVVUbvpY4F3zfH8TQPpAROTbv2pld6JO4eGOrZ5O1iOr6XCg2TY2W/jf+Ev4z5tqC9VWXE5kh65gjBfpWN0bDWXKekqEhor2crHAxZi4dybdY8Ok1MDWd1CSU8kw=="),
      				},
      				StorageAccountCredentialID: to.Ptr("/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/storageAccountCredentials/safortestrecording"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorsimple8000series%2Farmstorsimple8000series%2Fv1.0.0/sdk/resourcemanager/storsimple8000series/armstorsimple8000series/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { StorSimple8000SeriesManagementClient } = require("@azure/arm-storsimple8000series");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates the volume container.
       *
       * @summary Creates or updates the volume container.
       * x-ms-original-file: specification/storsimple8000series/resource-manager/Microsoft.StorSimple/stable/2017-06-01/examples/VolumeContainersCreateOrUpdate.json
       */
      async function volumeContainersCreateOrUpdate() {
        const subscriptionId = "4385cf00-2d3a-425a-832f-f4285b1c9dce";
        const deviceName = "Device05ForSDKTest";
        const volumeContainerName = "VolumeContainerForSDKTest";
        const resourceGroupName = "ResourceGroupForSDKTest";
        const managerName = "ManagerForSDKTest1";
        const parameters = {
          bandwidthSettingId:
            "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/bandwidthSettings/bandwidthSetting1",
          encryptionKey: {
            encryptionAlgorithm: "RSAES_PKCS1_v_1_5",
            encryptionCertThumbprint: "A872A2DF196AC7682EE24791E7DE2E2A360F5926",
            value:
              "R//pyVLx/fn58ia098JiLgZB5RY7fVT+6o8a4fmsvjy+ls2UgJphMf25XVqEQCZnsp/5uxteN1M/9ArPIICdhM7M1+b/Ur7kJ0FH0ktxfk7CrPWWJLI4q20LZoduJGI56lREav1VpuLdqw5F9fRcq7zbfgPQ3B/SD0mfumNRiV+AnwbC6msfavIuWrhVDl9iSzEPE+zU06/kpsexnrS81yYT2QlVVUbvpY4F3zfH8TQPpAROTbv2pld6JO4eGOrZ5O1iOr6XCg2TY2W/jf+Ev4z5tqC9VWXE5kh65gjBfpWN0bDWXKekqEhor2crHAxZi4dybdY8Ok1MDWd1CSU8kw==",
          },
          storageAccountCredentialId:
            "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/storageAccountCredentials/safortestrecording",
        };
        const credential = new DefaultAzureCredential();
        const client = new StorSimple8000SeriesManagementClient(credential, subscriptionId);
        const result = await client.volumeContainers.beginCreateOrUpdateAndWait(
          deviceName,
          volumeContainerName,
          resourceGroupName,
          managerName,
          parameters
        );
        console.log(result);
      }

      volumeContainersCreateOrUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storsimple8000series_2.0.1/sdk/storsimple8000series/arm-storsimple8000series/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "encryptionStatus": "Enabled",
          "volumeCount": 1,
          "storageAccountCredentialId": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/storageAccountCredentials/safortestrecording",
          "ownerShipStatus": "Owned",
          "bandwidthSettingId": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/bandwidthSettings/bandwidthSetting1",
          "totalCloudStorageUsageInBytes": 0
        },
        "id": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/volumeContainers/VolumeContainerForSDKTest",
        "name": "VolumeContainerForSDKTest",
        "type": "Microsoft.StorSimple/managers/devices/volumeContainers",
        "kind": "Series8000"
      }
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about StorSimple service - Creates or updates the volume container.
errorCodes: []
