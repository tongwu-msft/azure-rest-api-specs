### YamlMime:RESTOperation
uid: management.azure.com.storsimple.hardwarecomponentgroups.changecontrollerpowerstate
name: Change Controller Power State
service: StorSimple
groupName: Hardware Component Groups
apiVersion: 2017-06-01
summary: Changes the power state of the controller.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/hardwareComponentGroups/{hardwareComponentGroupName}/changeControllerPowerState?api-version=2017-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The subscription id
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The resource group name
  types:
  - uid: string
- name: managerName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The manager name
  types:
  - uid: string
- name: deviceName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The device name
  types:
  - uid: string
- name: hardwareComponentGroupName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The hardware component group name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The api version
  types:
  - uid: string
responses:
- name: 202 Accepted
  description: Accepted the request to change power state of the controller.
- name: 204 No Content
  description: Successfully changed the power state of the controller.
requestBody:
- name: default
  parameters:
  - name: properties.action
    in: body
    isRequired: true
    description: The power state that the request is expecting for the controller of the device.
    types:
    - uid: ControllerPowerStateAction
  - name: properties.activeController
    in: body
    isRequired: true
    description: The active controller that the request is expecting on the device.
    types:
    - uid: ControllerId
  - name: properties.controller0State
    in: body
    isRequired: true
    description: The controller 0's status that the request is expecting on the device.
    types:
    - uid: ControllerStatus
  - name: properties.controller1State
    in: body
    isRequired: true
    description: The controller 1's status that the request is expecting on the device.
    types:
    - uid: ControllerStatus
  - name: kind
    in: body
    description: The Kind of the object. Currently only Series8000 is supported
    types:
    - uid: Kind
requestHeader: []
definitions:
- name: ControllerPowerStateChangeRequest
  description: The controller power state change request.
  kind: object
  properties:
  - name: properties.action
    description: The power state that the request is expecting for the controller of the device.
    types:
    - uid: ControllerPowerStateAction
  - name: properties.activeController
    description: The active controller that the request is expecting on the device.
    types:
    - uid: ControllerId
  - name: properties.controller0State
    description: The controller 0's status that the request is expecting on the device.
    types:
    - uid: ControllerStatus
  - name: properties.controller1State
    description: The controller 1's status that the request is expecting on the device.
    types:
    - uid: ControllerStatus
  - name: id
    isReadyOnly: true
    description: The path ID that uniquely identifies the object.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the object.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The hierarchical type of the object.
    types:
    - uid: string
  - name: kind
    description: The Kind of the object. Currently only Series8000 is supported
    types:
    - uid: Kind
- name: ControllerPowerStateAction
  description: The power state that the request is expecting for the controller of the device.
  kind: enum
  properties:
  - name: Start
    types:
    - uid: string
  - name: Restart
    types:
    - uid: string
  - name: Shutdown
    types:
    - uid: string
- name: ControllerId
  description: The active controller that the request is expecting on the device.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: None
    types:
    - uid: string
  - name: Controller0
    types:
    - uid: string
  - name: Controller1
    types:
    - uid: string
- name: ControllerStatus
  description: The controller 0's status that the request is expecting on the device.
  kind: enum
  properties:
  - name: NotPresent
    types:
    - uid: string
  - name: PoweredOff
    types:
    - uid: string
  - name: Ok
    types:
    - uid: string
  - name: Recovering
    types:
    - uid: string
  - name: Warning
    types:
    - uid: string
  - name: Failure
    types:
    - uid: string
- name: Kind
  description: The Kind of the object. Currently only Series8000 is supported
  kind: enum
  properties:
  - name: Series8000
    types:
    - uid: string
examples:
- name: HardwareComponentGroupsChangeControllerPowerState
  request:
    uri: POST https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/hardwareComponentGroups/Controller0Components/changeControllerPowerState?api-version=2017-06-01
    body: >-
      {
        "properties": {
          "action": "Start",
          "activeController": "Controller0",
          "controller0State": "Ok",
          "controller1State": "NotPresent"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/hardwareComponentGroups/Controller0Components/changeControllerPowerState?api-version=2017-06-01

      {
        "properties": {
          "action": "Start",
          "activeController": "Controller0",
          "controller0State": "Ok",
          "controller1State": "NotPresent"
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armstorsimple8000series_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storsimple8000series/armstorsimple8000series"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storsimple8000series/resource-manager/Microsoft.StorSimple/stable/2017-06-01/examples/HardwareComponentGroupsChangeControllerPowerState.json
      func ExampleHardwareComponentGroupsClient_BeginChangeControllerPowerState() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorsimple8000series.NewHardwareComponentGroupsClient("4385cf00-2d3a-425a-832f-f4285b1c9dce", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginChangeControllerPowerState(ctx,
      		"Device05ForSDKTest",
      		"Controller0Components",
      		"ResourceGroupForSDKTest",
      		"ManagerForSDKTest1",
      		armstorsimple8000series.ControllerPowerStateChangeRequest{
      			Properties: &armstorsimple8000series.ControllerPowerStateChangeRequestProperties{
      				Action:           to.Ptr(armstorsimple8000series.ControllerPowerStateActionStart),
      				ActiveController: to.Ptr(armstorsimple8000series.ControllerIDController0),
      				Controller0State: to.Ptr(armstorsimple8000series.ControllerStatusOk),
      				Controller1State: to.Ptr(armstorsimple8000series.ControllerStatusNotPresent),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	_, err = poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorsimple8000series%2Farmstorsimple8000series%2Fv1.0.0/sdk/resourcemanager/storsimple8000series/armstorsimple8000series/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { StorSimple8000SeriesManagementClient } = require("@azure/arm-storsimple8000series");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Changes the power state of the controller.
       *
       * @summary Changes the power state of the controller.
       * x-ms-original-file: specification/storsimple8000series/resource-manager/Microsoft.StorSimple/stable/2017-06-01/examples/HardwareComponentGroupsChangeControllerPowerState.json
       */
      async function hardwareComponentGroupsChangeControllerPowerState() {
        const subscriptionId = "4385cf00-2d3a-425a-832f-f4285b1c9dce";
        const deviceName = "Device05ForSDKTest";
        const hardwareComponentGroupName = "Controller0Components";
        const resourceGroupName = "ResourceGroupForSDKTest";
        const managerName = "ManagerForSDKTest1";
        const parameters = {
          action: "Start",
          activeController: "Controller0",
          controller0State: "Ok",
          controller1State: "NotPresent",
        };
        const credential = new DefaultAzureCredential();
        const client = new StorSimple8000SeriesManagementClient(credential, subscriptionId);
        const result = await client.hardwareComponentGroups.beginChangeControllerPowerStateAndWait(
          deviceName,
          hardwareComponentGroupName,
          resourceGroupName,
          managerName,
          parameters
        );
        console.log(result);
      }

      hardwareComponentGroupsChangeControllerPowerState().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storsimple8000series_2.0.1/sdk/storsimple8000series/arm-storsimple8000series/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "202"
  - statusCode: "204"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about StorSimple service - Changes the power state of the controller.
errorCodes: []
