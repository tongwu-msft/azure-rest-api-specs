### YamlMime:RESTOperation
uid: management.azure.com.storsimple.devices.configure
name: Configure
service: StorSimple
groupName: Devices
apiVersion: 2017-06-01
summary: Complete minimal setup before using the device.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/configureDevice?api-version=2017-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The subscription id
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The resource group name
  types:
  - uid: string
- name: managerName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The manager name
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The api version
  types:
  - uid: string
responses:
- name: 202 Accepted
  description: Accepted the request to configure device.
- name: 204 No Content
  description: Successfully configured the device.
requestBody:
- name: default
  parameters:
  - name: properties.friendlyName
    in: body
    isRequired: true
    description: The friendly name for the device.
    types:
    - uid: string
  - name: properties.currentDeviceName
    in: body
    isRequired: true
    description: The current name of the device.
    types:
    - uid: string
  - name: properties.timeZone
    in: body
    isRequired: true
    description: 'The device time zone. For eg: "Pacific Standard Time"'
    types:
    - uid: string
  - name: properties.dnsSettings
    in: body
    description: The secondary DNS Settings of the device.
    types:
    - uid: SecondaryDNSSettings
  - name: properties.networkInterfaceData0Settings
    in: body
    description: The 'Data 0' network interface card settings.
    types:
    - uid: NetworkInterfaceData0Settings
  - name: kind
    in: body
    description: The Kind of the object. Currently only Series8000 is supported
    types:
    - uid: Kind
requestHeader: []
definitions:
- name: SecondaryDNSSettings
  description: The secondary DNS settings.
  kind: object
  properties:
  - name: secondaryDnsServers
    description: The list of secondary DNS Server IP addresses.
    types:
    - uid: string
      isArray: true
- name: NetworkInterfaceData0Settings
  description: The 'Data 0' network interface card settings.
  kind: object
  properties:
  - name: controllerZeroIp
    description: The controller 0's IPv4 address.
    types:
    - uid: string
  - name: controllerOneIp
    description: The controller 1's IPv4 address.
    types:
    - uid: string
- name: ConfigureDeviceRequest
  description: The mandatory device configuration request.
  kind: object
  properties:
  - name: properties.friendlyName
    description: The friendly name for the device.
    types:
    - uid: string
  - name: properties.currentDeviceName
    description: The current name of the device.
    types:
    - uid: string
  - name: properties.timeZone
    description: 'The device time zone. For eg: "Pacific Standard Time"'
    types:
    - uid: string
  - name: properties.dnsSettings
    description: The secondary DNS Settings of the device.
    types:
    - uid: SecondaryDNSSettings
  - name: properties.networkInterfaceData0Settings
    description: The 'Data 0' network interface card settings.
    types:
    - uid: NetworkInterfaceData0Settings
  - name: id
    isReadyOnly: true
    description: The path ID that uniquely identifies the object.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the object.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The hierarchical type of the object.
    types:
    - uid: string
  - name: kind
    description: The Kind of the object. Currently only Series8000 is supported
    types:
    - uid: Kind
- name: Kind
  description: The Kind of the object. Currently only Series8000 is supported
  kind: enum
  properties:
  - name: Series8000
    types:
    - uid: string
examples:
- name: DevicesConfigure
  request:
    uri: POST https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/configureDevice?api-version=2017-06-01
    body: >-
      {
        "properties": {
          "friendlyName": "Device001ForSDKTest",
          "currentDeviceName": "Device001ForSDKTest",
          "timeZone": "Pacific Standard Time",
          "networkInterfaceData0Settings": {
            "controllerZeroIp": "10.168.220.227",
            "controllerOneIp": "10.168.220.228"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/configureDevice?api-version=2017-06-01

      {
        "properties": {
          "friendlyName": "Device001ForSDKTest",
          "currentDeviceName": "Device001ForSDKTest",
          "timeZone": "Pacific Standard Time",
          "networkInterfaceData0Settings": {
            "controllerZeroIp": "10.168.220.227",
            "controllerOneIp": "10.168.220.228"
          }
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armstorsimple8000series_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storsimple8000series/armstorsimple8000series"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storsimple8000series/resource-manager/Microsoft.StorSimple/stable/2017-06-01/examples/DevicesConfigure.json
      func ExampleDevicesClient_BeginConfigure() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorsimple8000series.NewDevicesClient("4385cf00-2d3a-425a-832f-f4285b1c9dce", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginConfigure(ctx,
      		"ResourceGroupForSDKTest",
      		"ManagerForSDKTest1",
      		armstorsimple8000series.ConfigureDeviceRequest{
      			Properties: &armstorsimple8000series.ConfigureDeviceRequestProperties{
      				CurrentDeviceName: to.Ptr("Device001ForSDKTest"),
      				FriendlyName:      to.Ptr("Device001ForSDKTest"),
      				NetworkInterfaceData0Settings: &armstorsimple8000series.NetworkInterfaceData0Settings{
      					ControllerOneIP:  to.Ptr("10.168.220.228"),
      					ControllerZeroIP: to.Ptr("10.168.220.227"),
      				},
      				TimeZone: to.Ptr("Pacific Standard Time"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	_, err = poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorsimple8000series%2Farmstorsimple8000series%2Fv1.0.0/sdk/resourcemanager/storsimple8000series/armstorsimple8000series/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { StorSimple8000SeriesManagementClient } = require("@azure/arm-storsimple8000series");
      const { DefaultAzureCredential } = require("@azure/identity");

      async function devicesConfigure() {
        const subscriptionId = "4385cf00-2d3a-425a-832f-f4285b1c9dce";
        const resourceGroupName = "ResourceGroupForSDKTest";
        const managerName = "ManagerForSDKTest1";
        const parameters = {
          currentDeviceName: "Device001ForSDKTest",
          friendlyName: "Device001ForSDKTest",
          networkInterfaceData0Settings: {
            controllerOneIp: "10.168.220.228",
            controllerZeroIp: "10.168.220.227",
          },
          timeZone: "Pacific Standard Time",
        };
        const credential = new DefaultAzureCredential();
        const client = new StorSimple8000SeriesManagementClient(credential, subscriptionId);
        const result = await client.devices.beginConfigureAndWait(
          resourceGroupName,
          managerName,
          parameters
        );
        console.log(result);
      }

      devicesConfigure().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storsimple8000series_2.0.1/sdk/storsimple8000series/arm-storsimple8000series/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "202"
  - statusCode: "204"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about StorSimple service - Complete minimal setup before using the device.
errorCodes: []
