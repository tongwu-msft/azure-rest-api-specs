### YamlMime:RESTOperation
uid: management.azure.com.storsimple.managers.getdevicepublicencryptionkey
name: Get Device Public Encryption Key
service: StorSimple
groupName: Managers
apiVersion: 2017-06-01
summary: Returns the public encryption key of the device.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/publicEncryptionKey?api-version=2017-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The subscription id
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The resource group name
  types:
  - uid: string
- name: managerName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The manager name
  types:
  - uid: string
- name: deviceName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The device name
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The api version
  types:
  - uid: string
responses:
- name: 200 OK
  description: The public key.
  types:
  - uid: PublicKey
requestHeader: []
definitions:
- name: PublicKey
  description: The public key.
  kind: object
  properties:
  - name: key
    description: The key.
    types:
    - uid: string
examples:
- name: ManagersGetDevicePublicEncryptionKey
  request:
    uri: POST https://management.azure.com/subscriptions/d3ebfe71-b7a9-4c57-92b9-68a2afde4de5/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/sca01forsdktest/publicEncryptionKey?api-version=2017-06-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/d3ebfe71-b7a9-4c57-92b9-68a2afde4de5/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/sca01forsdktest/publicEncryptionKey?api-version=2017-06-01
      ```

      # [Go](#tab/Go)
      ``` go
      package armstorsimple8000series_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storsimple8000series/armstorsimple8000series"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storsimple8000series/resource-manager/Microsoft.StorSimple/stable/2017-06-01/examples/ManagersGetDevicePublicEncryptionKey.json
      func ExampleManagersClient_GetDevicePublicEncryptionKey() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorsimple8000series.NewManagersClient("d3ebfe71-b7a9-4c57-92b9-68a2afde4de5", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.GetDevicePublicEncryptionKey(ctx,
      		"sca01forsdktest",
      		"ResourceGroupForSDKTest",
      		"ManagerForSDKTest1",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorsimple8000series%2Farmstorsimple8000series%2Fv1.0.0/sdk/resourcemanager/storsimple8000series/armstorsimple8000series/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { StorSimple8000SeriesManagementClient } = require("@azure/arm-storsimple8000series");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Returns the public encryption key of the device.
       *
       * @summary Returns the public encryption key of the device.
       * x-ms-original-file: specification/storsimple8000series/resource-manager/Microsoft.StorSimple/stable/2017-06-01/examples/ManagersGetDevicePublicEncryptionKey.json
       */
      async function managersGetDevicePublicEncryptionKey() {
        const subscriptionId = "d3ebfe71-b7a9-4c57-92b9-68a2afde4de5";
        const deviceName = "sca01forsdktest";
        const resourceGroupName = "ResourceGroupForSDKTest";
        const managerName = "ManagerForSDKTest1";
        const credential = new DefaultAzureCredential();
        const client = new StorSimple8000SeriesManagementClient(credential, subscriptionId);
        const result = await client.managers.getDevicePublicEncryptionKey(
          deviceName,
          resourceGroupName,
          managerName
        );
        console.log(result);
      }

      managersGetDevicePublicEncryptionKey().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storsimple8000series_2.0.1/sdk/storsimple8000series/arm-storsimple8000series/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "key": "MIIDhjCCAm6gAwIBAgIQenen3LlBm4pFTfxko4pMMjANBgkqhkiG9w0BAQUFADB/MX0wewYDVQQDHnQAQwBCAF8AZgBhAGMAOAA2ADEAOAA3AC0AZgAzADYANgAtADQAYgA5ADUALQBiADQAMgBmAC0AZgBmADEAMAA3ADEANQAzAGQAOAA1AGUAXwA2ADMANgAzADMANwAzADcAMgAyADQANQAyADYANwAxADgAMDAeFw0xNzA2MTcwMDAwMDBaFw0yMDA2MjIxNDA3MDRaMH8xfTB7BgNVBAMedABDAEIAXwBmAGEAYwA4ADYAMQA4ADcALQBmADMANgA2AC0ANABiADkANQAtAGIANAAyAGYALQBmAGYAMQAwADcAMQA1ADMAZAA4ADUAZQBfADYAMwA2ADMAMwA3ADMANwAyADIANAA1ADIANgA3ADEAOAAwMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAz6r59tE8cxAf5g4cCs/JyaLKKpLf+5OEpSAsPnxHR5FBOaebsOV1raGDOmqIrc1dSOXArAyY6NcqizKkdslA0aNftKjya8Kks618Jf61mQVNHhq5fEyqTuVNSe3FZn1I2Xs2yS2NEt3YQl+GwisLgoT5ecC27NFZMEgjw2EOJwD9fjZG21CoCBCErEf+5j5HJkXk1jrn/o4wI7OnCGswPhlbGgDzl8eKcfSvMKpib50faCWdsvglC097CGtSmgu0a73IwGnac1eZCAnoVQmjaIFsdMeVNOqFot23tj1HT+Dwb9cECN8wKT7bkHCGSS84+veGiR0XEh3Op1iZ46zsIQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQAfgsz7cH8NsiR5Ub0Pgx4T0cm8saMgJIfXZdMkCPTysdxU60EgmoDC/3KypFHAhhsBaFAvFrlXEybM4n4WLiDPeNM1Dr4xq56zzBhO0gO84Vp2PXk2VdybLfiobDyMb8cgAPXXcxzzb3jdRb1/bobiUuWBJvWSRHv5fON00c+BzloUzWJHY2BezNHBCof5awoMd+hzSfxX5WRFNW29rKgWW0h8A1cYNhaWGRxSA+U7YciYRyMDew8Nae1WCxVj9v/qsEXGd+jFDOckdJd5ySgXOQCPyG8j9/QM+Lsrsx29JnGsiiddaRfCtI4K8QdjkOjh0+RXMO3DeWhkFEmoOlNK"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about StorSimple service - Returns the public encryption key of the device.
errorCodes: []
