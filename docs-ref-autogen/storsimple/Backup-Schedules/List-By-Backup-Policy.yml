### YamlMime:RESTOperation
uid: management.azure.com.storsimple.backupschedules.listbybackuppolicy
name: List By Backup Policy
service: StorSimple
groupName: Backup Schedules
apiVersion: 2017-06-01
summary: Gets all the backup schedules in a backup policy.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupPolicies/{backupPolicyName}/schedules?api-version=2017-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The subscription id
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The resource group name
  types:
  - uid: string
- name: managerName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The manager name
  types:
  - uid: string
- name: deviceName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The device name
  types:
  - uid: string
- name: backupPolicyName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The backup policy name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The api version
  types:
  - uid: string
responses:
- name: 200 OK
  description: The collection of backup schedules.
  types:
  - uid: BackupScheduleList
requestHeader: []
definitions:
- name: BackupScheduleList
  description: The backup schedule list.
  kind: object
  properties:
  - name: value
    description: The value.
    types:
    - uid: BackupSchedule
      isArray: true
- name: BackupSchedule
  description: The backup schedule.
  kind: object
  properties:
  - name: properties.scheduleRecurrence
    description: The schedule recurrence.
    types:
    - uid: ScheduleRecurrence
  - name: properties.backupType
    description: The type of backup which needs to be taken.
    types:
    - uid: BackupType
  - name: properties.retentionCount
    description: The number of backups to be retained.
    types:
    - uid: integer
  - name: properties.startTime
    description: The start time of the schedule.
    types:
    - uid: string
  - name: properties.scheduleStatus
    description: The schedule status.
    types:
    - uid: ScheduleStatus
  - name: properties.lastSuccessfulRun
    isReadyOnly: true
    description: The last successful backup run which was triggered for the schedule.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: The path ID that uniquely identifies the object.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the object.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The hierarchical type of the object.
    types:
    - uid: string
  - name: kind
    description: The Kind of the object. Currently only Series8000 is supported
    types:
    - uid: Kind
- name: ScheduleRecurrence
  description: The schedule recurrence.
  kind: object
  properties:
  - name: recurrenceType
    description: The recurrence type.
    types:
    - uid: RecurrenceType
  - name: recurrenceValue
    description: The recurrence value.
    types:
    - uid: integer
  - name: weeklyDaysList
    description: The week days list. Applicable only for schedules of recurrence type 'weekly'.
    types:
    - uid: string
      isArray: true
- name: BackupType
  description: The type of the backup.
  kind: enum
  properties:
  - name: LocalSnapshot
    types:
    - uid: string
  - name: CloudSnapshot
    types:
    - uid: string
- name: ScheduleStatus
  description: The schedule status.
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: Kind
  description: The Kind of the object. Currently only Series8000 is supported
  kind: enum
  properties:
  - name: Series8000
    types:
    - uid: string
- name: RecurrenceType
  description: The recurrence type.
  kind: enum
  properties:
  - name: Minutes
    types:
    - uid: string
  - name: Hourly
    types:
    - uid: string
  - name: Daily
    types:
    - uid: string
  - name: Weekly
    types:
    - uid: string
examples:
- name: BackupSchedulesListByBackupPolicy
  request:
    uri: GET https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/backupPolicies/BkUpPolicy01ForSDKTest/schedules?api-version=2017-06-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/backupPolicies/BkUpPolicy01ForSDKTest/schedules?api-version=2017-06-01
      ```

      # [Go](#tab/Go)
      ``` go
      package armstorsimple8000series_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storsimple8000series/armstorsimple8000series"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storsimple8000series/resource-manager/Microsoft.StorSimple/stable/2017-06-01/examples/BackupSchedulesListByBackupPolicy.json
      func ExampleBackupSchedulesClient_NewListByBackupPolicyPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorsimple8000series.NewBackupSchedulesClient("4385cf00-2d3a-425a-832f-f4285b1c9dce", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListByBackupPolicyPager("Device05ForSDKTest",
      		"BkUpPolicy01ForSDKTest",
      		"ResourceGroupForSDKTest",
      		"ManagerForSDKTest1",
      		nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorsimple8000series%2Farmstorsimple8000series%2Fv1.0.0/sdk/resourcemanager/storsimple8000series/armstorsimple8000series/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { StorSimple8000SeriesManagementClient } = require("@azure/arm-storsimple8000series");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets all the backup schedules in a backup policy.
       *
       * @summary Gets all the backup schedules in a backup policy.
       * x-ms-original-file: specification/storsimple8000series/resource-manager/Microsoft.StorSimple/stable/2017-06-01/examples/BackupSchedulesListByBackupPolicy.json
       */
      async function backupSchedulesListByBackupPolicy() {
        const subscriptionId = "4385cf00-2d3a-425a-832f-f4285b1c9dce";
        const deviceName = "Device05ForSDKTest";
        const backupPolicyName = "BkUpPolicy01ForSDKTest";
        const resourceGroupName = "ResourceGroupForSDKTest";
        const managerName = "ManagerForSDKTest1";
        const credential = new DefaultAzureCredential();
        const client = new StorSimple8000SeriesManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.backupSchedules.listByBackupPolicy(
          deviceName,
          backupPolicyName,
          resourceGroupName,
          managerName
        )) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      backupSchedulesListByBackupPolicy().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storsimple8000series_2.0.1/sdk/storsimple8000series/arm-storsimple8000series/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "properties": {
              "scheduleRecurrence": {
                "recurrenceType": "Daily",
                "recurrenceValue": 1
              },
              "backupType": "CloudSnapshot",
              "retentionCount": 1,
              "startTime": "2017-06-24T00:00:00Z",
              "scheduleStatus": "Enabled"
            },
            "id": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/backupPolicies/BkUpPolicy01ForSDKTest/schedules/schedule1",
            "name": "schedule1",
            "type": "Microsoft.StorSimple/managers/devices/backupPolicies/schedules",
            "kind": "Series8000"
          },
          {
            "properties": {
              "scheduleRecurrence": {
                "recurrenceType": "Weekly",
                "recurrenceValue": 1,
                "weeklyDaysList": [
                  "Monday",
                  "Thursday",
                  "Friday"
                ]
              },
              "backupType": "CloudSnapshot",
              "retentionCount": 1,
              "startTime": "2017-06-24T01:00:00Z",
              "scheduleStatus": "Enabled"
            },
            "id": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/backupPolicies/BkUpPolicy01ForSDKTest/schedules/schedule2",
            "name": "schedule2",
            "type": "Microsoft.StorSimple/managers/devices/backupPolicies/schedules",
            "kind": "Series8000"
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about StorSimple service - Gets all the backup schedules in a backup policy.
errorCodes: []
