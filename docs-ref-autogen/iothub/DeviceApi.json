{
  "swagger": "2.0",
  "info": {
    "version": "2016-11-14",
    "title": "Device Identities API",
    "description": "Use this REST API to manage the devices in the identity registry of an IoT hub. This API enables you to create, update, and delete device identities as well as perform bulk operations. Each API call must include the api-version query parameter as well the authorization header containing a Shared Access Signature token with the appropriate permissions."
  },
  "host": "<fully-qualified IoT hub domain name>",
  "schemes": [
    "https"
  ],
  "paths": {},
  "definitions": {
    "QuerySpecification": {
      "description": "Query specification to retrieve information about device twins and jobs using a SQL-like language. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language for more information.",
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      },
      "required": [
        "query"
      ]
    },
    "QueryResultWithContinuation": {
      "description": "Query result with continuation token if appropriate.",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/QueryResult"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "QueryResult": {
      "description": "Results produced from a query. It contains the type of result, a list of result items, and a continuation token if appropriate.",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "unknown",
            "twin",
            "deviceJob",
            "jobResponse",
            "raw"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "QueryResultType",
            "modelAsString": "True"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "continuationToken": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "items"
      ]
    },
    "RegistryStatistics": {
      "description": "Represents the device statistics gathered by IoT Hub. Contains the total number of device identities and a breakdown of the number of devices that are enabled and disabled.",
      "type": "object",
      "properties": {
        "totalDeviceCount": {
          "format": "int64",
          "type": "integer"
        },
        "enabledDeviceCount": {
          "format": "int64",
          "type": "integer"
        },
        "disabledDeviceCount": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "totalDeviceCount",
        "enabledDeviceCount",
        "disabledDeviceCount"
      ]
    },
    "ServiceStatistics": {
      "description": "Represents the service statistics gathered by an IoT hub. Contains the total number of devices currently connected to an IoT hub. ",
      "type": "object",
      "properties": {
        "connectedDeviceCount": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "connectedDeviceCount"
      ]
    },
    "ExportImportDevice": {
      "description": "Container of IoT Hub device properties and their accessors for import and export scenarios",
      "type": "object",
      "properties": {
        "id": {
          "description": "The deviceId uniquely identifies the device in the IoT hub's identity registry. A case-sensitive string (up to 128 char long) of ASCII 7-bit alphanumeric chars + {'-', ':', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}.",
          "type": "string",
          "pattern": "^[A-Za-z0-9\\-:.+%_#*?!(),=@;$']{1,128}$"
        },
        "eTag": {
          "type": "string"
        },
        "importMode": {
          "description": "Identifies the behavior when merging a device to the registry during import actions.",
          "enum": [
            "createOrUpdate",
            "create",
            "update",
            "updateIfMatchETag",
            "createOrUpdateIfMatchETag",
            "delete",
            "deleteIfMatchETag"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ImportMode",
            "modelAsString": "True"
          }
        },
        "status": {
          "description": "Represents the current status of a device. A disabled device is not allowed to perform any messaging operation. An IoT hub administrator can choose to enable or disable a device.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceStatus",
            "modelAsString": "False"
          }
        },
        "statusReason": {
          "description": "A string of user metadata. Reason, if any, for the device to be in specified status. Not interpreted or used by Iot Hub.",
          "type": "string"
        },
        "authentication": {
          "$ref": "#/definitions/AuthenticationMechanism"
        },
        "tags": {
          "description": "A set of key-value pair tags. You can use tags to select devices when you query the identity registry.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "properties": {
          "$ref": "#/definitions/PropertyContainer"
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "Device": {
      "description": "Container of IoT Hub device properties and their accessors.",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "The deviceId uniquely identifies the device in the IoT hub's identity registry. A case-sensitive string (up to 128 char long) of ASCII 7-bit alphanumeric chars + {'-', ':', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}.",
          "type": "string",
          "pattern": "^[A-Za-z0-9\\-:.+%_#*?!(),=@;$']{1,128}$"
        },
        "generationId": {
          "description": "An IoT hub-generated case-sensitive string (up to 128 char long). Used to distinguish devices with the same deviceId when they have been deleted and recreated.",
          "type": "string",
          "readOnly": true
        },
        "etag": {
          "description": "A string representing an ETag for the device identity, as per RFC7232. It is used in the HTTP protocol to resolve conflicting concurrent updates to the properties of this device. An ETag is required when performing an update or delete operation on a device.",
          "type": "string"
        },
        "connectionState": {
          "description": "Specifies the different connection states of a device.",
          "enum": [
            "disconnected",
            "connected"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceConnectionState",
            "modelAsString": "True"
          }
        },
        "status": {
          "description": "Represents the current status of a device. A disabled device is not allowed to perform any messaging operation. An IoT hub administrator can choose to enable or disable a device.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceStatus",
            "modelAsString": "True"
          }
        },
        "statusReason": {
          "description": "A string of user metadata. Reason, if any, for the device to be in specified status. Not interpreted or used by the IoT hub",
          "type": "string"
        },
        "connectionStateUpdatedTime": {
          "description": "Time when the \"connectionState\" was last updated. In ISO8601 datetime format in UTC, for example, 2015-01-28T16:24:48.789Z",
          "format": "date-time",
          "type": "string"
        },
        "statusUpdatedTime": {
          "description": "Time when the \"status\" was last updated. In ISO8601 datetime format in UTC; for example, 2015-01-28T16:24:48.789Z",
          "format": "date-time",
          "type": "string"
        },
        "lastActivityTime": {
          "description": "Last time the device connected, received or sent a message. In ISO8601 datetime format in UTC, for example, 2015-01-28T16:24:48.789Z. This does not update if the device uses the HTTP/1 protocol to perform messaging operations.",
          "format": "date-time",
          "type": "string"
        },
        "cloudToDeviceMessageCount": {
          "description": "Current number of cloud-to-device messages that are waiting to be delivered to the device.",
          "format": "int32",
          "type": "integer"
        },
        "authentication": {
          "$ref": "#/definitions/AuthenticationMechanism"
        }
      },
      "required": [
        "deviceId"
      ]
    },
    "AuthenticationMechanism": {
      "description": "Used to specify the authentication mechanism used by a device. Two mutually-exclusive options are supported - shared access signature keys and device X.509 client certificates.",
      "type": "object",
      "properties": {
        "symmetricKey": {
          "$ref": "#/definitions/SymmetricKey"
        },
        "x509Thumbprint": {
          "$ref": "#/definitions/X509Thumbprint"
        }
      },
      "required": []
    },
    "SymmetricKey": {
      "description": "Primary and secondary shared access signature symmetric keys of a device. If specified, both primary key and secondary key are required. The keys must be in valid base-64 format with a key length between 16 bytes and 64 bytes. They can be identical. If they are not specified, the Iot Hub generates both keys for the device with a default key length of 32 bytes.",
      "type": "object",
      "properties": {
        "primaryKey": {
          "format": "base-64",
          "type": "string"
        },
        "secondaryKey": {
          "format": "base-64",
          "type": "string"
        }
      },
      "required": []
    },
    "X509Thumbprint": {
      "description": "If the device is using X.509 client certificates for authentication, at least one of primaryThumbprint or secondaryThumbprint must be specified. They can be identical.",
      "type": "object",
      "properties": {
        "primaryThumbprint": {
          "description": "Represents the SHA-1 hash of the X.509 client certificate used by the device when connecting to an IoT hub. Thumbprint values other than 40 hex chars are not accepted.",
          "type": "string",
          "pattern": "^([A-Fa-f0-9]{2}){20}$"
        },
        "secondaryThumbprint": {
          "description": "Represents the SHA-1 hash of the X.509 client certificate used by the device when connecting to an IoT hub. Thumbprint values other than 40 hex chars are not accepted.",
          "type": "string"
        }
      },
      "required": []
    },
    "PropertyContainer": {
      "description": "Container of desired and reported IoT Hub device twin properties.",
      "type": "object",
      "properties": {
        "desired": {
          "$ref": "#/definitions/DeviceTwinProperties"
        },
        "reported": {
          "$ref": "#/definitions/DeviceTwinProperties"
        }
      },
      "required": []
    },
    "BulkRegistryOperationResult": {
      "description": "Encapsulates the result of a bulk device identity operation. The \"errors\" array contains an entry for each error encountered during the bulk device identity operation.",
      "type": "object",
      "properties": {
        "isSuccessful": {
          "type": "boolean"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceRegistryOperationError"
          }
        }
      },
      "required": [
        "isSuccessful"
      ]
    },
    "DeviceRegistryOperationError": {
      "description": "Encapsulated device identity operation error details.",
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "errorCode": {
          "enum": [
            "InvalidErrorCode",
            "InvalidProtocolVersion",
            "DeviceInvalidResultCount",
            "InvalidOperation",
            "ArgumentInvalid",
            "ArgumentNull",
            "IotHubFormatError",
            "DeviceStorageEntitySerializationError",
            "BlobContainerValidationError",
            "ImportWarningExistsError",
            "InvalidSchemaVersion",
            "DeviceDefinedMultipleTimes",
            "DeserializationError",
            "BulkRegistryOperationFailure",
            "DefaultStorageEndpointNotConfigured",
            "InvalidFileUploadCorrelationId",
            "ExpiredFileUploadCorrelationId",
            "InvalidStorageEndpoint",
            "InvalidMessagingEndpoint",
            "InvalidFileUploadCompletionStatus",
            "InvalidStorageEndpointOrBlob",
            "RequestCanceled",
            "InvalidStorageEndpointProperty",
            "InvalidRouteTestInput",
            "InvalidSourceOnRoute",
            "IotHubNotFound",
            "IotHubUnauthorizedAccess",
            "IotHubUnauthorized",
            "IotHubSuspended",
            "IotHubQuotaExceeded",
            "JobQuotaExceeded",
            "DeviceMaximumQueueDepthExceeded",
            "IotHubMaxCbsTokenExceeded",
            "DeviceMaximumActiveFileUploadLimitExceeded",
            "DeviceMaximumQueueSizeExceeded",
            "DeviceModelMaxPropertiesExceeded",
            "DeviceModelMaxIndexablePropertiesExceeded",
            "DeviceNotFound",
            "JobNotFound",
            "PartitionNotFound",
            "QuotaMetricNotFound",
            "SystemPropertyNotFound",
            "AmqpAddressNotFound",
            "QueryStoreClusterNotFound",
            "DeviceNotOnline",
            "OperationNotAllowedInCurrentState",
            "ImportDevicesNotSupported",
            "BulkAddDevicesNotSupported",
            "DeviceAlreadyExists",
            "LinkCreationConflict",
            "ModelAlreadyExists",
            "DeviceLocked",
            "DeviceJobAlreadyExists",
            "PreconditionFailed",
            "DeviceMessageLockLost",
            "JobRunPreconditionFailed",
            "MessageTooLarge",
            "TooManyDevices",
            "IncompatibleDataType",
            "ThrottlingException",
            "ThrottleBacklogLimitExceeded",
            "ThrottlingBacklogTimeout",
            "ThrottlingMaxActiveJobCountExceeded",
            "ServerError",
            "JobCancelled",
            "StatisticsRetrievalError",
            "ConnectionForcefullyClosed",
            "InvalidBlobState",
            "BackupTimedOut",
            "AzureStorageTimeout",
            "GenericTimeout",
            "InvalidThrottleParameter",
            "EventHubLinkAlreadyClosed",
            "ReliableBlobStoreError",
            "RetryAttemptsExhausted",
            "UnexpectedPropertyValue",
            "OrchestrationOperationFailed",
            "InvalidResponseWhileProxying",
            "ServiceUnavailable",
            "IotHubFailingOver",
            "ConnectionUnavailable",
            "DeviceUnavailable",
            "GatewayTimeout"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ErrorCode",
            "modelAsString": "True"
          }
        },
        "errorStatus": {
          "type": "string"
        }
      },
      "required": [
        "deviceId",
        "errorCode",
        "errorStatus"
      ]
    },
    "PurgeMessageQueueResult": {
      "description": "Contains the results of the PurgeCommandQueue request.",
      "type": "object",
      "properties": {
        "totalMessagesPurged": {
          "format": "int32",
          "type": "integer"
        },
        "deviceId": {
          "description": "The deviceId uniquely identifies the device in the IoT hub's identity registry. A case-sensitive string (up to 128 char long) of ASCII 7-bit alphanumeric chars + {'-', ':', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}.",
          "type": "string",
          "pattern": "^[A-Za-z0-9\\-:.+%_#*?!(),=@;$']{1,128}$"
        }
      }
    },
    "DeviceTwinInfo": {
      "description": "Container of IoT Hub device twin properties and their accessors.",
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "The deviceId uniquely identifies the device in the IoT hub's identity registry. A case-sensitive string (up to 128 char long) of ASCII 7-bit alphanumeric chars + {'-', ':', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}.",
          "type": "string",
          "pattern": "^[A-Za-z0-9\\-:.+%_#*?!(),=@;$']{1,128}$"
        },
        "LastActivityTimeUtc": {
          "description": "The last time the device connected, received or sent a message. In ISO8601 datetime format in UTC, for example, 2015-01-28T16:24:48.789Z. This does not update if the device uses the HTTP/1 protocol to perform messaging operations.",
          "$ref": "#/definitions/VariantValueDateTime"
        },
        "IsConnected": {
          "description": "Indicates if the device is currently connected to the IoT hub or not.",
          "type": "boolean"
        },
        "LastConnectedTimeUtc": {
          "description": "The last time the device connected to the IoT hub. In ISO8601 datetime format in UTC, for example, 2015-01-28T16:24:48.789Z. This does not update if the device uses the HTTP/1 protocol to perform messaging operations.",
          "$ref": "#/definitions/VariantValueDateTime"
        },
        "Version": {
          "description": "Version for device twin, including tags and desired properties",
          "format": "int64",
          "type": "integer"
        },
        "Tags": {
          "description": "A JSON document read and written by the solution back end. Tags are not visible to device apps.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "DesiredProperties": {
          "description": "Used in conjunction with reported properties to synchronize device configuration or condition. Desired properties can only be set by the solution back end and can be read by the device app. The device app can also be notified in real time of changes on the desired properties.",
          "$ref": "#/definitions/DeviceTwinProperties"
        },
        "ReportedProperties": {
          "description": "Used in conjunction with desired properties to synchronize device configuration or condition. Reported properties can only be set by the device app and can be read and queried by the solution back end.",
          "$ref": "#/definitions/DeviceTwinProperties"
        },
        "ProvisioningState": {
          "description": "Provisioning state of device twin.",
          "enum": [
            "Creating",
            "Deleting",
            "Active",
            "Deleted"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": "True"
          }
        }
      },
      "required": [
        "deviceId"
      ]
    },
    "VariantValueDateTime": {
      "description": "Type representing DateTime in different time zones.",
      "type": "object",
      "properties": {
        "Value": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "ObjectValue": {
          "type": "object",
          "readOnly": true
        },
        "IsNull": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "DeviceTwinProperties": {
      "description": "Type representing properties that are part of IoT Hub device twin.",
      "type": "object",
      "properties": {
        "Version": {
          "format": "int64",
          "type": "integer"
        },
        "Properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "Metadata": {
          "$ref": "#/definitions/Metadata"
        }
      },
      "required": [
        "version"
      ]
    },
    "Metadata": {
      "description": "Metadata",
      "type": "object",
      "properties": {
        "LastUpdatedUtc": {
          "description": "The last time the properties were updated. In ISO8601 datetime format in UTC, for example, 2015-01-28T16:24:48.789Z.",
          "$ref": "#/definitions/VariantValueDateTime"
        },
        "LastUpdatedVersion": {
          "description": "This SHOULD be null for Reported properties metadata and MUST not be null for Desired properties metadata.",
          "format": "int64",
          "type": "integer"
        },
        "HasChildren": {
          "description": "True if nested properies are present.",
          "type": "boolean",
          "readOnly": true
        },
        "Nested": {
          "description": "Nested properties.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Metadata"
          },
          "readOnly": true
        }
      },
      "required": [
        "lastUpdatedUtc"
      ]
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "in": "query",
      "description": "The version of the API.",
      "required": true,
      "type": "string",
      "default": "2016-11-14"
    }
  },
  "x-internal-service-name": "IoT Hub",
  "x-internal-toc-name": "Device Api",
  "x-internal-split-members": [
    {
      "displayName": "Bulk Device Operation",
      "relativePath": "DeviceApi/BulkDeviceOperation"
    },
    {
      "displayName": "Delete Device",
      "relativePath": "DeviceApi/DeleteDevice"
    },
    {
      "displayName": "Get Device",
      "relativePath": "DeviceApi/GetDevice"
    },
    {
      "displayName": "Get Devices",
      "relativePath": "DeviceApi/GetDevices"
    },
    {
      "displayName": "Get Registry Statistics",
      "relativePath": "DeviceApi/GetRegistryStatistics"
    },
    {
      "displayName": "Get Service Statistics",
      "relativePath": "DeviceApi/GetServiceStatistics"
    },
    {
      "displayName": "Purge Command Queue",
      "relativePath": "DeviceApi/PurgeCommandQueue"
    },
    {
      "displayName": "Put Device",
      "relativePath": "DeviceApi/PutDevice"
    },
    {
      "displayName": "Query Devices",
      "relativePath": "DeviceApi/QueryDevices"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}