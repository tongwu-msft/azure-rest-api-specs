### YamlMime:RESTOperation
uid: management.azure.com.avs.datastores.createorupdate
name: Create Or Update
service: AVS
groupName: Datastores
apiVersion: 2021-12-01
summary: Create or update a datastore in a private cloud cluster
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/datastores/{datastoreName}?api-version=2021-12-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: privateCloudName
  in: path
  isRequired: true
  description: Name of the private cloud
  types:
  - uid: string
- name: clusterName
  in: path
  isRequired: true
  description: Name of the cluster in the private cloud
  types:
  - uid: string
- name: datastoreName
  in: path
  isRequired: true
  description: Name of the datastore in the private cloud cluster
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: successful operation
  types:
  - uid: Datastore
- name: 201 Created
  description: accepted operation
  types:
  - uid: Datastore
- name: Other Status Codes
  description: Error response describing why the operation failed
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: properties.netAppVolume
    in: body
    description: An Azure NetApp Files volume
    types:
    - uid: NetAppVolume
  - name: properties.diskPoolVolume
    in: body
    description: An iSCSI volume
    types:
    - uid: DiskPoolVolume
requestHeader: []
definitions:
- name: NetAppVolume
  description: An Azure NetApp Files volume from Microsoft.NetApp provider
  kind: object
  properties:
  - name: id
    description: Azure resource ID of the NetApp volume
    types:
    - uid: string
- name: DiskPoolVolume
  description: An iSCSI volume from Microsoft.StoragePool provider
  kind: object
  properties:
  - name: targetId
    description: Azure resource ID of the iSCSI target
    types:
    - uid: string
  - name: lunName
    description: Name of the LUN to be used for datastore
    types:
    - uid: string
  - name: mountOption
    description: Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN
    types:
    - uid: MountOptionEnum
    defaultValue: MOUNT
  - name: path
    isReadyOnly: true
    description: Device path
    types:
    - uid: string
- name: Datastore
  description: A datastore resource
  kind: object
  properties:
  - name: properties.provisioningState
    isReadyOnly: true
    description: The state of the datastore provisioning
    types:
    - uid: DatastoreProvisioningState
  - name: properties.netAppVolume
    description: An Azure NetApp Files volume
    types:
    - uid: NetAppVolume
  - name: properties.diskPoolVolume
    description: An iSCSI volume
    types:
    - uid: DiskPoolVolume
  - name: properties.status
    isReadyOnly: true
    description: The operational status of the datastore
    types:
    - uid: DatastoreStatus
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
- name: CloudError
  description: API error response
  kind: object
  properties:
  - name: error
    description: "Error Response  \nAn error returned by the API"
    types:
    - uid: ErrorResponse
- name: MountOptionEnum
  description: Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN
  kind: enum
  properties:
  - name: MOUNT
    types:
    - uid: string
  - name: ATTACH
    types:
    - uid: string
- name: DatastoreProvisioningState
  description: The state of the datastore provisioning
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Cancelled
    types:
    - uid: string
  - name: Pending
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
- name: DatastoreStatus
  description: The operational status of the datastore
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: Accessible
    types:
    - uid: string
  - name: Inaccessible
    types:
    - uid: string
  - name: Attached
    types:
    - uid: string
  - name: Detached
    types:
    - uid: string
  - name: LostCommunication
    types:
    - uid: string
  - name: DeadOrError
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Datastores_CreateOrUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/datastores/datastore1?api-version=2021-12-01
    body: >-
      {
        "properties": {
          "netAppVolume": {
            "id": "/subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/ResourceGroup1/providers/Microsoft.NetApp/netAppAccounts/NetAppAccount1/capacityPools/CapacityPool1/volumes/NFSVol1"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/datastores/datastore1?api-version=2021-12-01

      {
        "properties": {
          "netAppVolume": {
            "id": "/subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/ResourceGroup1/providers/Microsoft.NetApp/netAppAccounts/NetAppAccount1/capacityPools/CapacityPool1/volumes/NFSVol1"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.resourcemanager.avs.models.NetAppVolume;

      /** Samples for Datastores CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/vmware/resource-manager/Microsoft.AVS/stable/2021-12-01/examples/Datastores_CreateOrUpdate.json
           */
          /**
           * Sample code: Datastores_CreateOrUpdate.
           *
           * @param manager Entry point to AvsManager.
           */
          public static void datastoresCreateOrUpdate(com.azure.resourcemanager.avs.AvsManager manager) {
              manager
                  .datastores()
                  .define("datastore1")
                  .withExistingCluster("group1", "cloud1", "cluster1")
                  .withNetAppVolume(
                      new NetAppVolume()
                          .withId(
                              "/subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/ResourceGroup1/providers/Microsoft.NetApp/netAppAccounts/NetAppAccount1/capacityPools/CapacityPool1/volumes/NFSVol1"))
                  .create();
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-avs_1.0.0-beta.3/sdk/avs/azure-resourcemanager-avs/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armavs_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/avs/armavs"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/vmware/resource-manager/Microsoft.AVS/stable/2021-12-01/examples/Datastores_CreateOrUpdate.json
      func ExampleDatastoresClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armavs.NewDatastoresClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"group1",
      		"cloud1",
      		"cluster1",
      		"datastore1",
      		armavs.Datastore{
      			Properties: &armavs.DatastoreProperties{
      				NetAppVolume: &armavs.NetAppVolume{
      					ID: to.Ptr("/subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/ResourceGroup1/providers/Microsoft.NetApp/netAppAccounts/NetAppAccount1/capacityPools/CapacityPool1/volumes/NFSVol1"),
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Favs%2Farmavs%2Fv1.0.0/sdk/resourcemanager/avs/armavs/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AzureVMwareSolutionAPI } = require("@azure/arm-avs");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update a datastore in a private cloud cluster
       *
       * @summary Create or update a datastore in a private cloud cluster
       * x-ms-original-file: specification/vmware/resource-manager/Microsoft.AVS/stable/2021-12-01/examples/Datastores_CreateOrUpdate.json
       */
      async function datastoresCreateOrUpdate() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "group1";
        const privateCloudName = "cloud1";
        const clusterName = "cluster1";
        const datastoreName = "datastore1";
        const datastore = {
          netAppVolume: {
            id: "/subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/ResourceGroup1/providers/Microsoft.NetApp/netAppAccounts/NetAppAccount1/capacityPools/CapacityPool1/volumes/NFSVol1",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new AzureVMwareSolutionAPI(credential, subscriptionId);
        const result = await client.datastores.beginCreateOrUpdateAndWait(
          resourceGroupName,
          privateCloudName,
          clusterName,
          datastoreName,
          datastore
        );
        console.log(result);
      }

      datastoresCreateOrUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-avs_3.1.1/sdk/avs/arm-avs/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/datastores/datastore1",
        "name": "datastore1",
        "properties": {
          "netAppVolume": {
            "id": "/subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/ResourceGroup1/providers/Microsoft.NetApp/netAppAccounts/NetAppAccount1/capacityPools/CapacityPool1/volumes/NFSVol1"
          },
          "provisioningState": "Succeeded",
          "status": "Accessible"
        },
        "type": "Microsoft.AVS/privateClouds/clusters/datastores"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/datastores/datastore1",
        "name": "datastore1",
        "properties": {
          "netAppVolume": {
            "id": "/subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/ResourceGroup1/providers/Microsoft.NetApp/netAppAccounts/NetAppAccount1/capacityPools/CapacityPool1/volumes/NFSVol1"
          },
          "provisioningState": "Creating",
          "status": "Unknown"
        },
        "type": "Microsoft.AVS/privateClouds/clusters/datastores"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about AVS service - Create or update a datastore in a private cloud cluster
errorCodes: []
