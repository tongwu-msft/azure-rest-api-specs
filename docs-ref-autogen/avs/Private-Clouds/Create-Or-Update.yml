### YamlMime:RESTOperation
uid: management.azure.com.avs.privateclouds.createorupdate
name: Create Or Update
service: AVS
groupName: Private Clouds
apiVersion: 2021-12-01
summary: Create or update a private cloud
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}?api-version=2021-12-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: privateCloudName
  in: path
  isRequired: true
  description: Name of the private cloud
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: successful operation
  types:
  - uid: PrivateCloud
- name: 201 Created
  description: accepted operation
  types:
  - uid: PrivateCloud
- name: Other Status Codes
  description: Error response describing why the operation failed
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: sku
    in: body
    isRequired: true
    description: The private cloud SKU
    types:
    - uid: Sku
  - name: identity
    in: body
    description: The identity of the private cloud, if configured.
    types:
    - uid: PrivateCloudIdentity
  - name: properties.circuit
    in: body
    description: An ExpressRoute Circuit
    types:
    - uid: Circuit
  - name: properties.networkBlock
    in: body
    isRequired: true
    description: The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22
    types:
    - uid: string
  - name: properties.vcenterPassword
    in: body
    description: Optionally, set the vCenter admin password when the private cloud is created
    types:
    - uid: string
  - name: properties.nsxtPassword
    in: body
    description: Optionally, set the NSX-T Manager password when the private cloud is created
    types:
    - uid: string
  - name: properties.secondaryCircuit
    in: body
    description: A secondary expressRoute circuit from a separate AZ. Only present in a stretched private cloud
    types:
    - uid: Circuit
  - name: location
    in: body
    isRequired: true
    description: Resource location
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.managementCluster
    in: body
    isRequired: true
    description: The default cluster used for management
    types:
    - uid: ManagementCluster
  - name: properties.internet
    in: body
    description: Connectivity to internet is enabled or disabled
    types:
    - uid: InternetEnum
  - name: properties.identitySources
    in: body
    description: vCenter Single Sign On Identity Sources
    types:
    - uid: IdentitySource
      isArray: true
  - name: properties.availability
    in: body
    description: Properties describing how the cloud is distributed across availability zones
    types:
    - uid: AvailabilityProperties
  - name: properties.encryption
    in: body
    description: Customer managed key encryption, can be enabled or disabled
    types:
    - uid: Encryption
requestHeader: []
definitions:
- name: Sku
  description: The resource model definition representing SKU
  kind: object
  properties:
  - name: name
    description: The name of the SKU.
    types:
    - uid: string
- name: PrivateCloudIdentity
  description: Identity for the virtual machine.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal ID of private cloud identity. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant ID associated with the private cloud. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: type
    description: The type of identity used for the private cloud. The type 'SystemAssigned' refers to an implicitly created identity. The type 'None' will remove any identities from the Private Cloud.
    types:
    - uid: ResourceIdentityType
- name: Circuit
  description: An ExpressRoute Circuit
  kind: object
  properties:
  - name: primarySubnet
    isReadyOnly: true
    description: CIDR of primary subnet
    types:
    - uid: string
  - name: secondarySubnet
    isReadyOnly: true
    description: CIDR of secondary subnet
    types:
    - uid: string
  - name: expressRouteID
    isReadyOnly: true
    description: Identifier of the ExpressRoute Circuit (Microsoft Colo only)
    types:
    - uid: string
  - name: expressRoutePrivatePeeringID
    isReadyOnly: true
    description: ExpressRoute Circuit private peering identifier
    types:
    - uid: string
- name: Endpoints
  description: Endpoint addresses
  kind: object
  properties:
  - name: nsxtManager
    isReadyOnly: true
    description: Endpoint for the NSX-T Data Center manager
    types:
    - uid: string
  - name: vcsa
    isReadyOnly: true
    description: Endpoint for Virtual Center Server Appliance
    types:
    - uid: string
  - name: hcxCloudManager
    isReadyOnly: true
    description: Endpoint for the HCX Cloud Manager
    types:
    - uid: string
- name: ManagementCluster
  description: The properties of a management cluster
  kind: object
  properties:
  - name: clusterSize
    description: The cluster size
    types:
    - uid: integer
  - name: provisioningState
    isReadyOnly: true
    description: The state of the cluster provisioning
    types:
    - uid: ClusterProvisioningState
  - name: clusterId
    isReadyOnly: true
    description: The identity
    types:
    - uid: integer
  - name: hosts
    description: The hosts
    types:
    - uid: string
      isArray: true
- name: IdentitySource
  description: vCenter Single Sign On Identity Source
  kind: object
  properties:
  - name: name
    description: The name of the identity source
    types:
    - uid: string
  - name: alias
    description: The domain's NetBIOS name
    types:
    - uid: string
  - name: domain
    description: The domain's dns name
    types:
    - uid: string
  - name: baseUserDN
    description: The base distinguished name for users
    types:
    - uid: string
  - name: baseGroupDN
    description: The base distinguished name for groups
    types:
    - uid: string
  - name: primaryServer
    description: Primary server URL
    types:
    - uid: string
  - name: secondaryServer
    description: Secondary server URL
    types:
    - uid: string
  - name: ssl
    description: Protect LDAP communication using SSL certificate (LDAPS)
    types:
    - uid: SslEnum
  - name: username
    description: The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
    types:
    - uid: string
  - name: password
    description: The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
    types:
    - uid: string
- name: AvailabilityProperties
  description: The properties describing private cloud availability zone distribution
  kind: object
  properties:
  - name: strategy
    description: The availability strategy for the private cloud
    types:
    - uid: AvailabilityStrategy
  - name: zone
    description: The primary availability zone for the private cloud
    types:
    - uid: integer
  - name: secondaryZone
    description: The secondary availability zone for the private cloud
    types:
    - uid: integer
- name: Encryption
  description: The properties of customer managed encryption key
  kind: object
  properties:
  - name: status
    description: Status of customer managed encryption key
    types:
    - uid: EncryptionState
  - name: keyVaultProperties
    description: The key vault where the encryption key is stored
    types:
    - uid: EncryptionKeyVaultProperties
- name: PrivateCloud
  description: A private cloud resource
  kind: object
  properties:
  - name: sku
    description: The private cloud SKU
    types:
    - uid: Sku
  - name: identity
    description: The identity of the private cloud, if configured.
    types:
    - uid: PrivateCloudIdentity
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state
    types:
    - uid: PrivateCloudProvisioningState
  - name: properties.circuit
    description: An ExpressRoute Circuit
    types:
    - uid: Circuit
  - name: properties.endpoints
    isReadyOnly: true
    description: The endpoints
    types:
    - uid: Endpoints
  - name: properties.networkBlock
    description: The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22
    types:
    - uid: string
  - name: properties.managementNetwork
    isReadyOnly: true
    description: Network used to access vCenter Server and NSX-T Manager
    types:
    - uid: string
  - name: properties.provisioningNetwork
    isReadyOnly: true
    description: Used for virtual machine cold migration, cloning, and snapshot migration
    types:
    - uid: string
  - name: properties.vmotionNetwork
    isReadyOnly: true
    description: Used for live migration of virtual machines
    types:
    - uid: string
  - name: properties.vcenterPassword
    description: Optionally, set the vCenter admin password when the private cloud is created
    types:
    - uid: string
  - name: properties.nsxtPassword
    description: Optionally, set the NSX-T Manager password when the private cloud is created
    types:
    - uid: string
  - name: properties.vcenterCertificateThumbprint
    isReadyOnly: true
    description: Thumbprint of the vCenter Server SSL certificate
    types:
    - uid: string
  - name: properties.nsxtCertificateThumbprint
    isReadyOnly: true
    description: Thumbprint of the NSX-T Manager SSL certificate
    types:
    - uid: string
  - name: properties.externalCloudLinks
    isReadyOnly: true
    description: Array of cloud link IDs from other clouds that connect to this one
    types:
    - uid: string
      isArray: true
  - name: properties.secondaryCircuit
    description: A secondary expressRoute circuit from a separate AZ. Only present in a stretched private cloud
    types:
    - uid: Circuit
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: properties.managementCluster
    description: The default cluster used for management
    types:
    - uid: ManagementCluster
  - name: properties.internet
    description: Connectivity to internet is enabled or disabled
    types:
    - uid: InternetEnum
    defaultValue: Disabled
  - name: properties.identitySources
    description: vCenter Single Sign On Identity Sources
    types:
    - uid: IdentitySource
      isArray: true
  - name: properties.availability
    description: Properties describing how the cloud is distributed across availability zones
    types:
    - uid: AvailabilityProperties
  - name: properties.encryption
    description: Customer managed key encryption, can be enabled or disabled
    types:
    - uid: Encryption
- name: CloudError
  description: API error response
  kind: object
  properties:
  - name: error
    description: "Error Response  \nAn error returned by the API"
    types:
    - uid: ErrorResponse
- name: ResourceIdentityType
  description: The type of identity used for the private cloud. The type 'SystemAssigned' refers to an implicitly created identity. The type 'None' will remove any identities from the Private Cloud.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
  - name: None
    types:
    - uid: string
- name: ClusterProvisioningState
  description: The state of the cluster provisioning
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Cancelled
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
- name: SslEnum
  description: Protect LDAP communication using SSL certificate (LDAPS)
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: AvailabilityStrategy
  description: The availability strategy for the private cloud
  kind: enum
  properties:
  - name: SingleZone
    types:
    - uid: string
  - name: DualZone
    types:
    - uid: string
- name: EncryptionState
  description: Status of customer managed encryption key
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: EncryptionKeyVaultProperties
  description: An Encryption Key
  kind: object
  properties:
  - name: keyName
    description: The name of the key.
    types:
    - uid: string
  - name: keyVersion
    description: The version of the key.
    types:
    - uid: string
  - name: keyVaultUrl
    description: The URL of the vault.
    types:
    - uid: string
  - name: keyState
    isReadyOnly: true
    description: The state of key provided
    types:
    - uid: EncryptionKeyStatus
  - name: versionType
    isReadyOnly: true
    description: Property of the key if user provided or auto detected
    types:
    - uid: EncryptionVersionType
- name: PrivateCloudProvisioningState
  description: The provisioning state
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Cancelled
    types:
    - uid: string
  - name: Pending
    types:
    - uid: string
  - name: Building
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
- name: InternetEnum
  description: Connectivity to internet is enabled or disabled
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: EncryptionKeyStatus
  description: The state of key provided
  kind: enum
  properties:
  - name: Connected
    types:
    - uid: string
  - name: AccessDenied
    types:
    - uid: string
- name: EncryptionVersionType
  description: Property of the key if user provided or auto detected
  kind: enum
  properties:
  - name: Fixed
    types:
    - uid: string
  - name: AutoDetected
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: PrivateClouds_CreateOrUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1?api-version=2021-12-01
    body: >-
      {
        "location": "eastus2",
        "sku": {
          "name": "AV36"
        },
        "identity": {
          "type": "SystemAssigned"
        },
        "properties": {
          "networkBlock": "192.168.48.0/22",
          "managementCluster": {
            "clusterSize": 4
          }
        },
        "tags": {}
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1?api-version=2021-12-01

      {
        "location": "eastus2",
        "sku": {
          "name": "AV36"
        },
        "identity": {
          "type": "SystemAssigned"
        },
        "properties": {
          "networkBlock": "192.168.48.0/22",
          "managementCluster": {
            "clusterSize": 4
          }
        },
        "tags": {}
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.resourcemanager.avs.models.ManagementCluster;
      import com.azure.resourcemanager.avs.models.PrivateCloudIdentity;
      import com.azure.resourcemanager.avs.models.ResourceIdentityType;
      import com.azure.resourcemanager.avs.models.Sku;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for PrivateClouds CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/vmware/resource-manager/Microsoft.AVS/stable/2021-12-01/examples/PrivateClouds_CreateOrUpdate.json
           */
          /**
           * Sample code: PrivateClouds_CreateOrUpdate.
           *
           * @param manager Entry point to AvsManager.
           */
          public static void privateCloudsCreateOrUpdate(com.azure.resourcemanager.avs.AvsManager manager) {
              manager
                  .privateClouds()
                  .define("cloud1")
                  .withRegion("eastus2")
                  .withExistingResourceGroup("group1")
                  .withSku(new Sku().withName("AV36"))
                  .withTags(mapOf())
                  .withIdentity(new PrivateCloudIdentity().withType(ResourceIdentityType.SYSTEM_ASSIGNED))
                  .withNetworkBlock("192.168.48.0/22")
                  .withManagementCluster(new ManagementCluster().withClusterSize(4))
                  .create();
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-avs_1.0.0-beta.3/sdk/avs/azure-resourcemanager-avs/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armavs_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/avs/armavs"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/vmware/resource-manager/Microsoft.AVS/stable/2021-12-01/examples/PrivateClouds_CreateOrUpdate.json
      func ExamplePrivateCloudsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armavs.NewPrivateCloudsClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"group1",
      		"cloud1",
      		armavs.PrivateCloud{
      			Location: to.Ptr("eastus2"),
      			Tags:     map[string]*string{},
      			Identity: &armavs.PrivateCloudIdentity{
      				Type: to.Ptr(armavs.ResourceIdentityTypeSystemAssigned),
      			},
      			Properties: &armavs.PrivateCloudProperties{
      				ManagementCluster: &armavs.ManagementCluster{
      					ClusterSize: to.Ptr[int32](4),
      				},
      				NetworkBlock: to.Ptr("192.168.48.0/22"),
      			},
      			SKU: &armavs.SKU{
      				Name: to.Ptr("AV36"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Favs%2Farmavs%2Fv1.0.0/sdk/resourcemanager/avs/armavs/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1",
        "location": "eastus2",
        "name": "cloud1",
        "sku": {
          "name": "AV36"
        },
        "properties": {
          "availability": {
            "strategy": "SingleZone",
            "zone": 1
          },
          "networkBlock": "192.168.48.0/22",
          "circuit": {
            "expressRouteID": "/subscriptions/{subscription-id}/resourceGroups/tnt13-41a90db2-9d5e-4bd5-a77a-5ce7b58213d6-eastus2/providers/Microsoft.Network/expressroutecircuits/tnt13-41a90db2-9d5e-4bd5-a77a-5ce7b58213d6-eastus2-xconnect",
            "primarySubnet": "192.168.53.0/30",
            "secondarySubnet": "192.168.53.4/30"
          },
          "managementCluster": {
            "clusterId": 1,
            "clusterSize": 4,
            "hosts": [
              "fakehost18.nyc1.kubernetes.center",
              "fakehost19.nyc1.kubernetes.center",
              "fakehost20.nyc1.kubernetes.center",
              "fakehost21.nyc1.kubernetes.center"
            ]
          },
          "endpoints": {
            "nsxtManager": "https://192.168.50.3/",
            "vcsa": "https://192.168.50.2/"
          },
          "externalCloudLinks": [
            "/subscriptions/12341234-1234-1234-1234-123412341234/resourceGroups/mygroup/providers/Microsoft.AVS/privateClouds/cloud2"
          ],
          "identitySources": [
            {
              "alias": "groupAlias",
              "baseGroupDN": "ou=baseGroup",
              "baseUserDN": "ou=baseUser",
              "domain": "domain1",
              "name": "group1",
              "primaryServer": "ldaps://1.1.1.1:636/",
              "secondaryServer": "ldaps://1.1.1.2:636/",
              "ssl": "Enabled"
            }
          ],
          "internet": "Disabled",
          "provisioningState": "Succeeded"
        },
        "tags": {},
        "type": "Microsoft.AVS/privateClouds"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1",
        "location": "eastus2",
        "name": "cloud1",
        "sku": {
          "name": "AV36"
        },
        "properties": {
          "availability": {
            "strategy": "SingleZone",
            "zone": 1
          },
          "networkBlock": "192.168.48.0/22",
          "circuit": {
            "expressRouteID": "/subscriptions/{subscription-id}/resourceGroups/tnt13-41a90db2-9d5e-4bd5-a77a-5ce7b58213d6-eastus2/providers/Microsoft.Network/expressroutecircuits/tnt13-41a90db2-9d5e-4bd5-a77a-5ce7b58213d6-eastus2-xconnect",
            "primarySubnet": "192.168.53.0/30",
            "secondarySubnet": "192.168.53.4/30"
          },
          "managementCluster": {
            "clusterId": 1,
            "clusterSize": 4,
            "hosts": [
              "fakehost18.nyc1.kubernetes.center",
              "fakehost19.nyc1.kubernetes.center",
              "fakehost20.nyc1.kubernetes.center",
              "fakehost21.nyc1.kubernetes.center"
            ]
          },
          "endpoints": {
            "nsxtManager": "https://192.168.50.3/",
            "vcsa": "https://192.168.50.2/"
          },
          "identitySources": [
            {
              "alias": "groupAlias",
              "baseGroupDN": "ou=baseGroup",
              "baseUserDN": "ou=baseUser",
              "domain": "domain1",
              "name": "group1",
              "primaryServer": "ldaps://1.1.1.1:636/",
              "secondaryServer": "ldaps://1.1.1.2:636/",
              "ssl": "Enabled"
            }
          ],
          "internet": "Disabled",
          "provisioningState": "Updating"
        },
        "tags": {},
        "type": "Microsoft.AVS/privateClouds"
      }
- name: PrivateClouds_CreateOrUpdate_Stretched
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1?api-version=2021-12-01
    body: >-
      {
        "location": "eastus2",
        "sku": {
          "name": "AV36"
        },
        "properties": {
          "availability": {
            "strategy": "DualZone",
            "zone": 1,
            "secondaryZone": 2
          },
          "networkBlock": "192.168.48.0/22",
          "managementCluster": {
            "clusterSize": 4
          }
        },
        "tags": {}
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1?api-version=2021-12-01

      {
        "location": "eastus2",
        "sku": {
          "name": "AV36"
        },
        "properties": {
          "availability": {
            "strategy": "DualZone",
            "zone": 1,
            "secondaryZone": 2
          },
          "networkBlock": "192.168.48.0/22",
          "managementCluster": {
            "clusterSize": 4
          }
        },
        "tags": {}
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.resourcemanager.avs.models.AvailabilityProperties;
      import com.azure.resourcemanager.avs.models.AvailabilityStrategy;
      import com.azure.resourcemanager.avs.models.ManagementCluster;
      import com.azure.resourcemanager.avs.models.Sku;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for PrivateClouds CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/vmware/resource-manager/Microsoft.AVS/stable/2021-12-01/examples/PrivateClouds_CreateOrUpdate_Stretched.json
           */
          /**
           * Sample code: PrivateClouds_CreateOrUpdate_Stretched.
           *
           * @param manager Entry point to AvsManager.
           */
          public static void privateCloudsCreateOrUpdateStretched(com.azure.resourcemanager.avs.AvsManager manager) {
              manager
                  .privateClouds()
                  .define("cloud1")
                  .withRegion("eastus2")
                  .withExistingResourceGroup("group1")
                  .withSku(new Sku().withName("AV36"))
                  .withTags(mapOf())
                  .withNetworkBlock("192.168.48.0/22")
                  .withManagementCluster(new ManagementCluster().withClusterSize(4))
                  .withAvailability(
                      new AvailabilityProperties()
                          .withStrategy(AvailabilityStrategy.DUAL_ZONE)
                          .withZone(1)
                          .withSecondaryZone(2))
                  .create();
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-avs_1.0.0-beta.3/sdk/avs/azure-resourcemanager-avs/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1",
        "location": "eastus2",
        "name": "cloud1",
        "sku": {
          "name": "AV36"
        },
        "properties": {
          "availability": {
            "strategy": "DualZone",
            "zone": 1,
            "secondaryZone": 2
          },
          "networkBlock": "192.168.48.0/22",
          "circuit": {
            "expressRouteID": "/subscriptions/{subscription-id}/resourceGroups/tnt13-41a90db2-9d5e-4bd5-a77a-5ce7b58213d6-eastus2/providers/Microsoft.Network/expressroutecircuits/tnt13-41a90db2-9d5e-4bd5-a77a-5ce7b58213d6-eastus2-xconnect",
            "primarySubnet": "192.168.53.0/30",
            "secondarySubnet": "192.168.53.4/30"
          },
          "secondaryCircuit": {
            "expressRouteID": "/subscriptions/{subscription-id}/resourceGroups/tnt13-41a90db2-9d5e-4bd5-a77a-5ce7b58213d6-eastus2/providers/Microsoft.Network/expressroutecircuits/tnt13-41a90db2-9d5e-4bd5-a77a-5ce7b58213d6-eastus2-xconnect2",
            "primarySubnet": "192.168.53.0/30",
            "secondarySubnet": "192.168.53.4/30"
          },
          "managementCluster": {
            "clusterId": 1,
            "clusterSize": 4,
            "hosts": [
              "fakehost18.nyc1.kubernetes.center",
              "fakehost19.nyc1.kubernetes.center",
              "fakehost20.nyc1.kubernetes.center",
              "fakehost21.nyc1.kubernetes.center"
            ]
          },
          "endpoints": {
            "nsxtManager": "https://192.168.50.3/",
            "vcsa": "https://192.168.50.2/"
          },
          "externalCloudLinks": [
            "/subscriptions/12341234-1234-1234-1234-123412341234/resourceGroups/mygroup/providers/Microsoft.AVS/privateClouds/cloud2"
          ],
          "identitySources": [
            {
              "alias": "groupAlias",
              "baseGroupDN": "ou=baseGroup",
              "baseUserDN": "ou=baseUser",
              "domain": "domain1",
              "name": "group1",
              "primaryServer": "ldaps://1.1.1.1:636/",
              "secondaryServer": "ldaps://1.1.1.2:636/",
              "ssl": "Enabled"
            }
          ],
          "internet": "Disabled",
          "provisioningState": "Succeeded"
        },
        "tags": {},
        "type": "Microsoft.AVS/privateClouds"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1",
        "location": "eastus2",
        "name": "cloud1",
        "sku": {
          "name": "AV36"
        },
        "properties": {
          "availability": {
            "strategy": "SingleZone",
            "zone": 1
          },
          "networkBlock": "192.168.48.0/22",
          "circuit": {
            "expressRouteID": "/subscriptions/{subscription-id}/resourceGroups/tnt13-41a90db2-9d5e-4bd5-a77a-5ce7b58213d6-eastus2/providers/Microsoft.Network/expressroutecircuits/tnt13-41a90db2-9d5e-4bd5-a77a-5ce7b58213d6-eastus2-xconnect",
            "primarySubnet": "192.168.53.0/30",
            "secondarySubnet": "192.168.53.4/30"
          },
          "managementCluster": {
            "clusterId": 1,
            "clusterSize": 4,
            "hosts": [
              "fakehost18.nyc1.kubernetes.center",
              "fakehost19.nyc1.kubernetes.center",
              "fakehost20.nyc1.kubernetes.center",
              "fakehost21.nyc1.kubernetes.center"
            ]
          },
          "endpoints": {
            "nsxtManager": "https://192.168.50.3/",
            "vcsa": "https://192.168.50.2/"
          },
          "identitySources": [
            {
              "alias": "groupAlias",
              "baseGroupDN": "ou=baseGroup",
              "baseUserDN": "ou=baseUser",
              "domain": "domain1",
              "name": "group1",
              "primaryServer": "ldaps://1.1.1.1:636/",
              "secondaryServer": "ldaps://1.1.1.2:636/",
              "ssl": "Enabled"
            }
          ],
          "internet": "Disabled",
          "provisioningState": "Updating"
        },
        "tags": {},
        "type": "Microsoft.AVS/privateClouds"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about AVS service - Create or update a private cloud
errorCodes: []
