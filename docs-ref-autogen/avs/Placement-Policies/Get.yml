### YamlMime:RESTOperation
uid: management.azure.com.avs.placementpolicies.get
name: Get
service: AVS
groupName: Placement Policies
apiVersion: 2021-12-01
summary: Get a placement policy by name in a private cloud cluster
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/placementPolicies/{placementPolicyName}?api-version=2021-12-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: privateCloudName
  in: path
  isRequired: true
  description: Name of the private cloud
  types:
  - uid: string
- name: clusterName
  in: path
  isRequired: true
  description: Name of the cluster in the private cloud
  types:
  - uid: string
- name: placementPolicyName
  in: path
  isRequired: true
  description: Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement policy
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: successful operation
  types:
  - uid: PlacementPolicy
- name: Other Status Codes
  description: Error response describing why the operation failed
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: PlacementPolicy
  description: A vSphere Distributed Resource Scheduler (DRS) placement policy
  kind: object
  properties:
  - name: properties
    description: placement policy properties
    types:
    - uid: VmVmPlacementPolicyProperties
    - uid: VmHostPlacementPolicyProperties
    typesTitle: PlacementPolicyProperties
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
- name: CloudError
  description: API error response
  kind: object
  properties:
  - name: error
    description: "Error Response  \nAn error returned by the API"
    types:
    - uid: ErrorResponse
- name: ErrorResponse
  description: Error Response
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: VmVmPlacementPolicyProperties
  description: VM-VM placement policy properties
  kind: object
  properties:
  - name: vmMembers
    description: Virtual machine members list
    types:
    - uid: string
      isArray: true
  - name: affinityType
    description: placement policy affinity type
    types:
    - uid: AffinityType
  - name: type
    description: placement policy type
    types:
    - uid: VmVm
    typesTitle: string
  - name: state
    description: Whether the placement policy is enabled or disabled
    types:
    - uid: PlacementPolicyState
  - name: displayName
    description: Display name of the placement policy
    types:
    - uid: string
  - name: provisioningState
    isReadyOnly: true
    description: The provisioning state
    types:
    - uid: PlacementPolicyProvisioningState
- name: VmHostPlacementPolicyProperties
  description: VM-Host placement policy properties
  kind: object
  properties:
  - name: vmMembers
    description: Virtual machine members list
    types:
    - uid: string
      isArray: true
  - name: hostMembers
    description: Host members list
    types:
    - uid: string
      isArray: true
  - name: affinityType
    description: placement policy affinity type
    types:
    - uid: AffinityType
  - name: type
    description: placement policy type
    types:
    - uid: VmHost
    typesTitle: string
  - name: state
    description: Whether the placement policy is enabled or disabled
    types:
    - uid: PlacementPolicyState
  - name: displayName
    description: Display name of the placement policy
    types:
    - uid: string
  - name: provisioningState
    isReadyOnly: true
    description: The provisioning state
    types:
    - uid: PlacementPolicyProvisioningState
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
- name: AffinityType
  description: Placement policy affinity type
  kind: enum
  properties:
  - name: Affinity
    types:
    - uid: string
  - name: AntiAffinity
    types:
    - uid: string
- name: PlacementPolicyState
  description: Whether the placement policy is enabled or disabled
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: PlacementPolicyProvisioningState
  description: The provisioning state
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Building
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
examples:
- name: PlacementPolicies_Get
  request:
    uri: GET https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/placementPolicies/policy1?api-version=2021-12-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/placementPolicies/policy1?api-version=2021-12-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for PlacementPolicies Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/vmware/resource-manager/Microsoft.AVS/stable/2021-12-01/examples/PlacementPolicies_Get.json
           */
          /**
           * Sample code: PlacementPolicies_Get.
           *
           * @param manager Entry point to AvsManager.
           */
          public static void placementPoliciesGet(com.azure.resourcemanager.avs.AvsManager manager) {
              manager.placementPolicies().getWithResponse("group1", "cloud1", "cluster1", "policy1", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-avs_1.0.0-beta.3/sdk/avs/azure-resourcemanager-avs/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armavs_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/avs/armavs"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/vmware/resource-manager/Microsoft.AVS/stable/2021-12-01/examples/PlacementPolicies_Get.json
      func ExamplePlacementPoliciesClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armavs.NewPlacementPoliciesClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"group1",
      		"cloud1",
      		"cluster1",
      		"policy1",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Favs%2Farmavs%2Fv1.0.0/sdk/resourcemanager/avs/armavs/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AzureVMwareSolutionAPI } = require("@azure/arm-avs");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Get a placement policy by name in a private cloud cluster
       *
       * @summary Get a placement policy by name in a private cloud cluster
       * x-ms-original-file: specification/vmware/resource-manager/Microsoft.AVS/stable/2021-12-01/examples/PlacementPolicies_Get.json
       */
      async function placementPoliciesGet() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "group1";
        const privateCloudName = "cloud1";
        const clusterName = "cluster1";
        const placementPolicyName = "policy1";
        const credential = new DefaultAzureCredential();
        const client = new AzureVMwareSolutionAPI(credential, subscriptionId);
        const result = await client.placementPolicies.get(
          resourceGroupName,
          privateCloudName,
          clusterName,
          placementPolicyName
        );
        console.log(result);
      }

      placementPoliciesGet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-avs_3.1.2/sdk/avs/arm-avs/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/placementPolicies/policy1",
        "name": "policy1",
        "type": "Microsoft.AVS/privateClouds/clusters/placementPolicies",
        "properties": {
          "displayName": "policy1",
          "type": "VmHost",
          "state": "Enabled",
          "vmMembers": [
            "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/virtualMachines/vm-128",
            "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/virtualMachines/vm-256"
          ],
          "hostMembers": [
            "fakehost22.nyc1.kubernetes.center",
            "fakehost23.nyc1.kubernetes.center",
            "fakehost24.nyc1.kubernetes.center"
          ],
          "affinityType": "AntiAffinity",
          "provisioningState": "Succeeded"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about AVS service - Get a placement policy by name in a private cloud cluster
errorCodes: []
