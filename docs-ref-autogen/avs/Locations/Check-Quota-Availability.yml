### YamlMime:RESTOperation
uid: management.azure.com.avs.locations.checkquotaavailability
name: Check Quota Availability
service: AVS
groupName: Locations
apiVersion: 2021-12-01
summary: Return quota for subscription by region
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.AVS/locations/{location}/checkQuotaAvailability?api-version=2021-12-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: location
  in: path
  isRequired: true
  description: Azure region
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Request has succeeded
  types:
  - uid: Quota
- name: Other Status Codes
  description: Error response describing why the operation failed
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: Quota
  description: Subscription quotas
  kind: object
  properties:
  - name: hostsRemaining
    isReadyOnly: true
    description: Remaining hosts quota by sku type
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: integer
  - name: quotaEnabled
    isReadyOnly: true
    description: Host quota is active for current subscription
    types:
    - uid: QuotaEnabled
- name: CloudError
  description: API error response
  kind: object
  properties:
  - name: error
    description: "Error Response  \nAn error returned by the API"
    types:
    - uid: ErrorResponse
- name: QuotaEnabled
  description: Host quota is active for current subscription
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Locations_CheckQuotaAvailability
  request:
    uri: POST https://management.azure.com/subscriptions/{subscription-id}/providers/Microsoft.AVS/locations/eastus/checkQuotaAvailability?api-version=2021-12-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/{subscription-id}/providers/Microsoft.AVS/locations/eastus/checkQuotaAvailability?api-version=2021-12-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for Locations CheckQuotaAvailability. */
      public final class Main {
          /*
           * x-ms-original-file: specification/vmware/resource-manager/Microsoft.AVS/stable/2021-12-01/examples/Locations_CheckQuotaAvailability.json
           */
          /**
           * Sample code: Locations_CheckQuotaAvailability.
           *
           * @param manager Entry point to AvsManager.
           */
          public static void locationsCheckQuotaAvailability(com.azure.resourcemanager.avs.AvsManager manager) {
              manager.locations().checkQuotaAvailabilityWithResponse("eastus", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-avs_1.0.0-beta.3/sdk/avs/azure-resourcemanager-avs/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armavs_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/avs/armavs"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/vmware/resource-manager/Microsoft.AVS/stable/2021-12-01/examples/Locations_CheckQuotaAvailability.json
      func ExampleLocationsClient_CheckQuotaAvailability() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armavs.NewLocationsClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CheckQuotaAvailability(ctx,
      		"eastus",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Favs%2Farmavs%2Fv1.0.0/sdk/resourcemanager/avs/armavs/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AzureVMwareSolutionAPI } = require("@azure/arm-avs");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Return quota for subscription by region
       *
       * @summary Return quota for subscription by region
       * x-ms-original-file: specification/vmware/resource-manager/Microsoft.AVS/stable/2021-12-01/examples/Locations_CheckQuotaAvailability.json
       */
      async function locationsCheckQuotaAvailability() {
        const subscriptionId = "{subscription-id}";
        const location = "eastus";
        const credential = new DefaultAzureCredential();
        const client = new AzureVMwareSolutionAPI(credential, subscriptionId);
        const result = await client.locations.checkQuotaAvailability(location);
        console.log(result);
      }

      locationsCheckQuotaAvailability().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-avs_3.1.1/sdk/avs/arm-avs/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "hostsRemaining": {
          "AV20": 0,
          "AV36": 999
        },
        "quotaEnabled": "Enabled"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about AVS service - Return quota for subscription by region
errorCodes: []
