### YamlMime:RESTOperation
uid: management.azure.com.internetanalyzer.reports.getlatencyscorecards
name: Get Latency Scorecards
service: Internet Analyzer
groupName: Reports
apiVersion: 2019-11-01
summary: Gets a Latency Scorecard for a given Experiment
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}/LatencyScorecard?api-version=2019-11-01&aggregationInterval={aggregationInterval}
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}/LatencyScorecard?api-version=2019-11-01&endDateTimeUTC={endDateTimeUTC}&country={country}&aggregationInterval={aggregationInterval}
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the Resource group within the Azure subscription.
  types:
  - uid: string
  pattern: ^[a-zA-Z0-9_\-\(\)\.]*[^\.]$
- name: profileName
  in: path
  isRequired: true
  description: The Profile identifier associated with the Tenant and Partner
  types:
  - uid: string
  pattern: ^[a-zA-Z0-9_\-\(\)\.]*[^\.]$
- name: experimentName
  in: path
  isRequired: true
  description: The Experiment identifier associated with the Experiment
  types:
  - uid: string
  pattern: ^[a-zA-Z0-9_\-\(\)\.]*[^\.]$
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
- name: endDateTimeUTC
  in: query
  description: The end DateTime of the Latency Scorecard in UTC
  types:
  - uid: string
- name: country
  in: query
  description: The country associated with the Latency Scorecard. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html
  types:
  - uid: string
- name: aggregationInterval
  in: query
  isRequired: true
  description: The aggregation interval of the Latency Scorecard
  types:
  - uid: latencyScorecardAggregationInterval
responses:
- name: 200 OK
  description: successful operation
  types:
  - uid: LatencyScorecard
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: latencyScorecardAggregationInterval
  description: The aggregation interval of the Latency Scorecard
  kind: enum
  properties:
  - name: Daily
    types:
    - uid: string
  - name: Weekly
    types:
    - uid: string
  - name: Monthly
    types:
    - uid: string
- name: LatencyScorecard
  description: Defines the LatencyScorecard
  kind: object
  properties:
  - name: properties.id
    isReadyOnly: true
    description: The unique identifier of the Latency Scorecard
    types:
    - uid: string
  - name: properties.name
    isReadyOnly: true
    description: The name of the Latency Scorecard
    types:
    - uid: string
  - name: properties.description
    isReadyOnly: true
    description: The description of the Latency Scorecard
    types:
    - uid: string
  - name: properties.endpointA
    isReadyOnly: true
    description: The A endpoint in the scorecard
    types:
    - uid: string
  - name: properties.endpointB
    isReadyOnly: true
    description: The B endpoint in the scorecard
    types:
    - uid: string
  - name: properties.startDateTimeUTC
    isReadyOnly: true
    description: The start time of the Latency Scorecard in UTC
    types:
    - uid: string
  - name: properties.endDateTimeUTC
    isReadyOnly: true
    description: The end time of the Latency Scorecard in UTC
    types:
    - uid: string
  - name: properties.country
    isReadyOnly: true
    description: The country associated with the Latency Scorecard. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html
    types:
    - uid: string
  - name: properties.latencyMetrics
    description: The latency metrics of the Latency Scorecard
    types:
    - uid: LatencyMetric
      isArray: true
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: ErrorResponse
  description: Error response indicates Front Door service is not able to process the incoming request. The reason is provided in the error message.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Error message indicating why the operation failed.
    types:
    - uid: string
- name: LatencyMetric
  description: Defines the properties of a latency metric used in the latency scorecard
  kind: object
  properties:
  - name: name
    isReadyOnly: true
    description: The name of the Latency Metric
    types:
    - uid: string
  - name: endDateTimeUTC
    isReadyOnly: true
    description: The end time of the Latency Scorecard in UTC
    types:
    - uid: string
  - name: aValue
    isReadyOnly: true
    description: The metric value of the A endpoint
    types:
    - uid: number
  - name: bValue
    isReadyOnly: true
    description: The metric value of the B endpoint
    types:
    - uid: number
  - name: delta
    isReadyOnly: true
    description: The difference in value between endpoint A and B
    types:
    - uid: number
  - name: deltaPercent
    isReadyOnly: true
    description: The percent difference between endpoint A and B
    types:
    - uid: number
  - name: aCLower95CI
    isReadyOnly: true
    description: The lower end of the 95% confidence interval for endpoint A
    types:
    - uid: number
  - name: aHUpper95CI
    isReadyOnly: true
    description: The upper end of the 95% confidence interval for endpoint A
    types:
    - uid: number
  - name: bCLower95CI
    isReadyOnly: true
    description: The lower end of the 95% confidence interval for endpoint B
    types:
    - uid: number
  - name: bUpper95CI
    isReadyOnly: true
    description: The upper end of the 95% confidence interval for endpoint B
    types:
    - uid: number
examples:
- name: Gets a Latency Scorecard for a given Experiment
  request:
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/MyResourceGroup/providers/Microsoft.Network/NetworkExperimentProfiles/MyProfile/Experiments/MyExperiment/LatencyScorecard?api-version=2019-11-01&aggregationInterval=Daily
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/subid/resourceGroups/MyResourceGroup/providers/Microsoft.Network/NetworkExperimentProfiles/MyProfile/Experiments/MyExperiment/LatencyScorecard?api-version=2019-11-01&aggregationInterval=Daily
      ```

      # [Go](#tab/Go)
      ``` go
      package armfrontdoor_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/frontdoor/armfrontdoor"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/frontdoor/resource-manager/Microsoft.Network/stable/2019-11-01/examples/NetworkExperimentGetLatencyScorecard.json
      func ExampleReportsClient_GetLatencyScorecards() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armfrontdoor.NewReportsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.GetLatencyScorecards(ctx,
      		"MyResourceGroup",
      		"MyProfile",
      		"MyExperiment",
      		armfrontdoor.LatencyScorecardAggregationIntervalDaily,
      		&armfrontdoor.ReportsClientGetLatencyScorecardsOptions{EndDateTimeUTC: nil,
      			Country: nil,
      		})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Ffrontdoor%2Farmfrontdoor%2Fv1.0.0/sdk/resourcemanager/frontdoor/armfrontdoor/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { FrontDoorManagementClient } = require("@azure/arm-frontdoor");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a Latency Scorecard for a given Experiment
       *
       * @summary Gets a Latency Scorecard for a given Experiment
       * x-ms-original-file: specification/frontdoor/resource-manager/Microsoft.Network/stable/2019-11-01/examples/NetworkExperimentGetLatencyScorecard.json
       */
      async function getsALatencyScorecardForAGivenExperiment() {
        const subscriptionId = "subid";
        const resourceGroupName = "MyResourceGroup";
        const profileName = "MyProfile";
        const experimentName = "MyExperiment";
        const aggregationInterval = "Daily";
        const credential = new DefaultAzureCredential();
        const client = new FrontDoorManagementClient(credential, subscriptionId);
        const result = await client.reports.getLatencyScorecards(
          resourceGroupName,
          profileName,
          experimentName,
          aggregationInterval
        );
        console.log(result);
      }

      getsALatencyScorecardForAGivenExperiment().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-frontdoor_5.0.1/sdk/frontdoor/arm-frontdoor/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/MyResourceGroup/providers/Microsoft.Network/NetworkExperimentProfiles/MyProfile/Experiments/MyExperiment/LatencyScorecard",
        "name": "DailyLatencyScorecard",
        "properties": {
          "description": "This scorecard is the latency scorecard, aggregated over a day",
          "endpointA": "https://endpointA.com",
          "endpointB": "https://endpoingB.com",
          "startDateTimeUTC": "2019-07-21T17:32:28Z",
          "endDateTimeUTC": "2019-09-21T17:32:28Z",
          "country": "USA"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Internet Analyzer service - Gets a Latency Scorecard for a given Experiment
errorCodes: []
