{
  "swagger": "2.0",
  "info": {
    "version": "2017-09-01",
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}": {
      "get": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_Get",
        "description": "Gets the specified network watcher by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a network watcher resource.",
            "schema": {
              "$ref": "#/definitions/NetworkWatcher"
            }
          }
        },
        "produces": [
          "application/json",
          "text/json"
        ],
        "consumes": [
          "application/json",
          "text/json"
        ],
        "x-internal-toc-name": "Get"
      }
    }
  },
  "definitions": {
    "NetworkWatcher": {
      "properties": {
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkWatcherPropertiesFormat"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Network watcher in a resource group."
    },
    "NetworkWatcherPropertiesFormat": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Updating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": false
          },
          "description": "The provisioning state of the resource."
        }
      },
      "description": "The network watcher properties."
    },
    "NetworkWatcherListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkWatcher"
          }
        }
      },
      "description": "List of network watcher resources."
    },
    "TopologyParameters": {
      "required": [
        "targetResourceGroupName"
      ],
      "properties": {
        "targetResourceGroupName": {
          "type": "string",
          "description": "The name of the target resource group to perform topology on."
        }
      },
      "description": "Parameters that define the representation of topology."
    },
    "Topology": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "GUID representing the operation id."
        },
        "createdDateTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The datetime when the topology was initially created for the resource group."
        },
        "lastModified": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The datetime when the topology was last modified."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopologyResource"
          }
        }
      },
      "description": "Topology of the specified resource group."
    },
    "TopologyResource": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource."
        },
        "id": {
          "type": "string",
          "description": "ID of the resource."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "associations": {
          "type": "array",
          "description": "Holds the associations the resource has with other resources in the resource group.",
          "items": {
            "$ref": "#/definitions/TopologyAssociation"
          }
        }
      },
      "description": "The network resource topology information for the given resource group."
    },
    "TopologyAssociation": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource that is associated with the parent resource."
        },
        "resourceId": {
          "type": "string",
          "description": "The ID of the resource that is associated with the parent resource."
        },
        "associationType": {
          "type": "string",
          "enum": [
            "Associated",
            "Contains"
          ],
          "x-ms-enum": {
            "name": "AssociationType",
            "modelAsString": false
          },
          "description": "The association type of the child resource to the parent resource."
        }
      },
      "description": "Resources that have an association with the parent resource."
    },
    "VerificationIPFlowParameters": {
      "description": "Parameters that define the IP flow to be verified.",
      "required": [
        "targetResourceId",
        "direction",
        "protocol",
        "localPort",
        "remotePort",
        "localIPAddress",
        "remoteIPAddress"
      ],
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "The ID of the target resource to perform next-hop on."
        },
        "direction": {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "Direction",
            "modelAsString": false
          },
          "description": "The direction of the packet represented as a 5-tuple."
        },
        "protocol": {
          "type": "string",
          "enum": [
            "TCP",
            "UDP"
          ],
          "x-ms-enum": {
            "name": "Protocol",
            "modelAsString": false
          },
          "description": "Protocol to be verified on."
        },
        "localPort": {
          "type": "string",
          "description": "The local port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction."
        },
        "remotePort": {
          "type": "string",
          "description": "The remote port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction."
        },
        "localIPAddress": {
          "type": "string",
          "description": "The local IP address. Acceptable values are valid IPv4 addresses."
        },
        "remoteIPAddress": {
          "type": "string",
          "description": "The remote IP address. Acceptable values are valid IPv4 addresses."
        },
        "targetNicResourceId": {
          "type": "string",
          "description": "The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of them, then this parameter must be specified. Otherwise optional)."
        }
      }
    },
    "VerificationIPFlowResult": {
      "description": "Results of IP flow verification on the target resource.",
      "properties": {
        "access": {
          "type": "string",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "Access",
            "modelAsString": false
          },
          "description": "Indicates whether the traffic is allowed or denied."
        },
        "ruleName": {
          "type": "string",
          "description": "Name of the rule. If input is not matched against any security rule, it is not displayed."
        }
      }
    },
    "NextHopParameters": {
      "description": "Parameters that define the source and destination endpoint.",
      "required": [
        "targetResourceId",
        "sourceIPAddress",
        "destinationIPAddress"
      ],
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "The resource identifier of the target resource against which the action is to be performed."
        },
        "sourceIPAddress": {
          "type": "string",
          "description": "The source IP address."
        },
        "destinationIPAddress": {
          "type": "string",
          "description": "The destination IP address."
        },
        "targetNicResourceId": {
          "type": "string",
          "description": "The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of the nics, then this parameter must be specified. Otherwise optional)."
        }
      }
    },
    "NextHopResult": {
      "description": "The information about next hop from the specified VM.",
      "properties": {
        "nextHopType": {
          "type": "string",
          "enum": [
            "Internet",
            "VirtualAppliance",
            "VirtualNetworkGateway",
            "VnetLocal",
            "HyperNetGateway",
            "None"
          ],
          "x-ms-enum": {
            "name": "NextHopType",
            "modelAsString": false
          },
          "description": "Next hop type."
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "Next hop IP Address"
        },
        "routeTableId": {
          "type": "string",
          "description": "The resource identifier for the route table associated with the route being returned. If the route being returned does not correspond to any user created routes then this field will be the string 'System Route'."
        }
      }
    },
    "SecurityGroupViewParameters": {
      "description": "Parameters that define the VM to check security groups for.",
      "required": [
        "targetResourceId"
      ],
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "ID of the target VM."
        }
      }
    },
    "SecurityGroupViewResult": {
      "description": "The information about security rules applied to the specified VM.",
      "properties": {
        "networkInterfaces": {
          "type": "array",
          "description": "List of network interfaces on the specified VM.",
          "items": {
            "$ref": "#/definitions/SecurityGroupNetworkInterface"
          }
        }
      }
    },
    "SecurityGroupNetworkInterface": {
      "description": "Network interface and all its associated security rules.",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the network interface."
        },
        "securityRuleAssociations": {
          "$ref": "#/definitions/SecurityRuleAssociations"
        }
      }
    },
    "SecurityRuleAssociations": {
      "description": "All security rules associated with the network interface.",
      "properties": {
        "networkInterfaceAssociation": {
          "$ref": "#/definitions/NetworkInterfaceAssociation"
        },
        "subnetAssociation": {
          "$ref": "#/definitions/SubnetAssociation"
        },
        "defaultSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "Collection of default security rules of the network security group."
        },
        "effectiveSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectiveNetworkSecurityRule"
          },
          "description": "Collection of effective security rules."
        }
      }
    },
    "NetworkInterfaceAssociation": {
      "description": "Network interface and its custom security rules.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Network interface ID."
        },
        "securityRules": {
          "type": "array",
          "description": "Collection of custom security rules.",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          }
        }
      }
    },
    "SubnetAssociation": {
      "description": "Network interface and its custom security rules.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Subnet ID."
        },
        "securityRules": {
          "type": "array",
          "description": "Collection of custom security rules.",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          }
        }
      }
    },
    "PacketCapture": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PacketCaptureParameters"
        }
      },
      "required": [
        "properties"
      ],
      "description": "Parameters that define the create packet capture operation."
    },
    "PacketCaptureParameters": {
      "properties": {
        "target": {
          "type": "string",
          "description": "The ID of the targeted resource, only VM is currently supported."
        },
        "bytesToCapturePerPacket": {
          "type": "integer",
          "default": 0,
          "description": "Number of bytes captured per packet, the remaining bytes are truncated."
        },
        "totalBytesPerSession": {
          "type": "integer",
          "default": 1073741824,
          "description": "Maximum size of the capture output."
        },
        "timeLimitInSeconds": {
          "type": "integer",
          "default": 18000,
          "description": "Maximum duration of the capture session in seconds."
        },
        "storageLocation": {
          "$ref": "#/definitions/PacketCaptureStorageLocation"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketCaptureFilter"
          }
        }
      },
      "required": [
        "target",
        "storageLocation"
      ],
      "description": "Parameters that define the create packet capture operation."
    },
    "PacketCaptureStorageLocation": {
      "properties": {
        "storageId": {
          "type": "string",
          "description": "The ID of the storage account to save the packet capture session. Required if no local file path is provided."
        },
        "storagePath": {
          "type": "string",
          "description": "The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture."
        },
        "filePath": {
          "type": "string",
          "description": "A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional."
        }
      },
      "description": "Describes the storage location for a packet capture session."
    },
    "PacketCaptureFilter": {
      "properties": {
        "protocol": {
          "type": "string",
          "enum": [
            "TCP",
            "UDP",
            "Any"
          ],
          "x-ms-enum": {
            "name": "PcProtocol",
            "modelAsString": false
          },
          "default": "Any",
          "description": "Protocol to be filtered on."
        },
        "localIPAddress": {
          "type": "string",
          "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5\"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        },
        "remoteIPAddress": {
          "type": "string",
          "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        },
        "localPort": {
          "type": "string",
          "description": "Local port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        },
        "remotePort": {
          "type": "string",
          "description": "Remote port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        }
      },
      "description": "Filter that is applied to packet capture request. Multiple filters can be applied."
    },
    "PacketCaptureListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketCaptureResult"
          },
          "description": "Information about packet capture sessions."
        }
      },
      "description": "List of packet capture sessions."
    },
    "PacketCaptureResult": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the packet capture session."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "ID of the packet capture operation."
        },
        "etag": {
          "type": "string",
          "default": "A unique read-only string that changes whenever the resource is updated."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PacketCaptureResultProperties"
        }
      },
      "description": "Information about packet capture session."
    },
    "PacketCaptureResultProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Updating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": false
          },
          "description": "The provisioning state of the packet capture session."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PacketCaptureParameters"
        }
      ],
      "description": "Describes the properties of a packet capture session."
    },
    "PacketCaptureQueryStatusResult": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the packet capture resource."
        },
        "id": {
          "type": "string",
          "description": "The ID of the packet capture resource."
        },
        "captureStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the packet capture session."
        },
        "packetCaptureStatus": {
          "type": "string",
          "enum": [
            "NotStarted",
            "Running",
            "Stopped",
            "Error",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "PcStatus",
            "modelAsString": false
          },
          "description": "The status of the packet capture session."
        },
        "stopReason": {
          "type": "string",
          "description": "The reason the current packet capture session was stopped."
        },
        "packetCaptureError": {
          "type": "array",
          "description": "List of errors of packet capture session.",
          "items": {
            "type": "string",
            "enum": [
              "InternalError",
              "AgentStopped",
              "CaptureFailed",
              "LocalFileFailed",
              "StorageFailed"
            ],
            "x-ms-enum": {
              "name": "PcError",
              "modelAsString": false
            }
          }
        }
      },
      "description": "Status of packet capture session."
    },
    "TroubleshootingParameters": {
      "description": "Parameters that define the resource to troubleshoot.",
      "required": [
        "targetResourceId",
        "properties"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The target resource to troubleshoot.",
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TroubleshootingProperties"
        }
      }
    },
    "QueryTroubleshootingParameters": {
      "description": "Parameters that define the resource to query the troubleshooting result.",
      "required": [
        "targetResourceId"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The target resource ID to query the troubleshooting result.",
          "type": "string"
        }
      }
    },
    "TroubleshootingProperties": {
      "description": "Storage location provided for troubleshoot.",
      "required": [
        "storageId",
        "storagePath"
      ],
      "properties": {
        "storageId": {
          "description": "The ID for the storage account to save the troubleshoot result.",
          "type": "string"
        },
        "storagePath": {
          "description": "The path to the blob to save the troubleshoot result in.",
          "type": "string"
        }
      }
    },
    "TroubleshootingResult": {
      "description": "Troubleshooting information gained from specified resource.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the troubleshooting."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the troubleshooting."
        },
        "code": {
          "type": "string",
          "description": "The result code of the troubleshooting."
        },
        "results": {
          "type": "array",
          "description": "Information from troubleshooting.",
          "items": {
            "$ref": "#/definitions/TroubleshootingDetails"
          }
        }
      }
    },
    "TroubleshootingDetails": {
      "description": "Information gained from troubleshooting of specified resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the get troubleshoot operation."
        },
        "reasonType": {
          "type": "string",
          "description": "Reason type of failure."
        },
        "summary": {
          "type": "string",
          "description": "A summary of troubleshooting."
        },
        "detail": {
          "type": "string",
          "description": "Details on troubleshooting results."
        },
        "recommendedActions": {
          "type": "array",
          "description": "List of recommended actions.",
          "items": {
            "$ref": "#/definitions/TroubleshootingRecommendedActions"
          }
        }
      }
    },
    "TroubleshootingRecommendedActions": {
      "description": "Recommended actions based on discovered issues.",
      "properties": {
        "actionId": {
          "description": "ID of the recommended action.",
          "type": "string"
        },
        "actionText": {
          "description": "Description of recommended actions.",
          "type": "string"
        },
        "actionUri": {
          "description": "The uri linking to a documentation for the recommended troubleshooting actions.",
          "type": "string"
        },
        "actionUriText": {
          "description": "The information from the URI for the recommended troubleshooting actions.",
          "type": "string"
        }
      }
    },
    "FlowLogProperties": {
      "description": "Parameters that define the configuration of flow log.",
      "required": [
        "storageId",
        "enabled"
      ],
      "properties": {
        "storageId": {
          "description": "ID of the storage account which is used to store the flow log.",
          "type": "string"
        },
        "enabled": {
          "description": "Flag to enable/disable flow logging.",
          "type": "boolean"
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicyParameters"
        }
      }
    },
    "FlowLogStatusParameters": {
      "description": "Parameters that define a resource to query flow log status.",
      "required": [
        "targetResourceId"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The target resource where getting the flow logging status.",
          "type": "string"
        }
      }
    },
    "RetentionPolicyParameters": {
      "description": "Parameters that define the retention policy for flow log.",
      "properties": {
        "days": {
          "description": "Number of days to retain flow log records.",
          "type": "integer",
          "default": 0
        },
        "enabled": {
          "description": "Flag to enable/disable retention.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "FlowLogInformation": {
      "description": "Information on the configuration of flow log.",
      "required": [
        "targetResourceId",
        "properties"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The ID of the resource to configure for flow logging.",
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FlowLogProperties"
        }
      }
    },
    "ConnectivityParameters": {
      "description": "Parameters that determine how the connectivity check will be performed.",
      "required": [
        "source",
        "destination"
      ],
      "properties": {
        "source": {
          "$ref": "#/definitions/ConnectivitySource"
        },
        "destination": {
          "$ref": "#/definitions/ConnectivityDestination"
        }
      }
    },
    "ConnectivitySource": {
      "description": "Parameters that define the source of the connection.",
      "required": [
        "resourceId"
      ],
      "properties": {
        "resourceId": {
          "description": "The ID of the resource from which a connectivity check will be initiated.",
          "type": "string"
        },
        "port": {
          "description": "The source port from which a connectivity check will be performed.",
          "type": "integer"
        }
      }
    },
    "ConnectivityDestination": {
      "description": "Parameters that define destination of connection.",
      "properties": {
        "resourceId": {
          "description": "The ID of the resource to which a connection attempt will be made.",
          "type": "string"
        },
        "address": {
          "description": "The IP address or URI the resource to which a connection attempt will be made.",
          "type": "string"
        },
        "port": {
          "description": "Port on which check connectivity will be performed.",
          "type": "integer"
        }
      }
    },
    "ConnectivityInformation": {
      "description": "Information on the connectivity status.",
      "properties": {
        "hops": {
          "readOnly": true,
          "type": "array",
          "description": "List of hops between the source and the destination.",
          "items": {
            "$ref": "#/definitions/ConnectivityHop"
          }
        },
        "connectionStatus": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unknown",
            "Connected",
            "Disconnected",
            "Degraded"
          ],
          "x-ms-enum": {
            "name": "ConnectionStatus",
            "modelAsString": false
          },
          "description": "The connection status."
        },
        "avgLatencyInMs": {
          "description": "Average latency in milliseconds.",
          "readOnly": true,
          "type": "integer"
        },
        "minLatencyInMs": {
          "description": "Minimum latency in milliseconds.",
          "readOnly": true,
          "type": "integer"
        },
        "maxLatencyInMs": {
          "description": "Maximum latency in milliseconds.",
          "readOnly": true,
          "type": "integer"
        },
        "probesSent": {
          "description": "Total number of probes sent.",
          "readOnly": true,
          "type": "integer"
        },
        "probesFailed": {
          "description": "Number of failed probes.",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "ConnectivityHop": {
      "description": "Information about a hop between the source and the destination.",
      "properties": {
        "type": {
          "description": "The type of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "address": {
          "description": "The IP address of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "resourceId": {
          "description": "The ID of the resource corresponding to this hop.",
          "readOnly": true,
          "type": "string"
        },
        "nextHopIds": {
          "readOnly": true,
          "type": "array",
          "description": "List of next hop identifiers.",
          "items": {
            "type": "string"
          }
        },
        "issues": {
          "readOnly": true,
          "type": "array",
          "description": "List of issues.",
          "items": {
            "$ref": "#/definitions/ConnectivityIssue"
          }
        }
      }
    },
    "ConnectivityIssue": {
      "description": "Information about an issue encountered in the process of checking for connectivity.",
      "properties": {
        "origin": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Local",
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": false
          },
          "description": "The origin of the issue."
        },
        "severity": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Error",
            "Warning"
          ],
          "x-ms-enum": {
            "name": "Severity",
            "modelAsString": false
          },
          "description": "The severity of the issue."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unknown",
            "AgentStopped",
            "GuestFirewall",
            "DnsResolution",
            "SocketBind",
            "NetworkSecurityRule",
            "UserDefinedRoute",
            "PortThrottled",
            "Platform"
          ],
          "x-ms-enum": {
            "name": "IssueType",
            "modelAsString": false
          },
          "description": "The type of issue."
        },
        "context": {
          "readOnly": true,
          "type": "array",
          "description": "Provides additional context on the issue.",
          "items": {
            "$ref": "#/definitions/IssueContext"
          }
        }
      }
    },
    "IssueContext": {
      "description": "A key-value pair that provides additional context on the issue.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "AzureReachabilityReportParameters": {
      "properties": {
        "providerLocation": {
          "$ref": "#/definitions/AzureReachabilityReportLocation"
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Internet service providers."
        },
        "azureLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional Azure regions to scope the query to."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time for the Azure reachability report."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time for the Azure reachability report."
        }
      },
      "required": [
        "providerLocation",
        "startTime",
        "endTime"
      ],
      "description": "Geographic and time constraints for Azure reachability report."
    },
    "AzureReachabilityReportLocation": {
      "properties": {
        "country": {
          "type": "string",
          "description": "The name of the country."
        },
        "state": {
          "type": "string",
          "description": "The name of the state."
        },
        "city": {
          "type": "string",
          "description": "The name of the city or town."
        }
      },
      "required": [
        "country"
      ],
      "description": "Parameters that define a geographic location."
    },
    "AzureReachabilityReport": {
      "properties": {
        "aggregationLevel": {
          "type": "string",
          "description": "The aggregation level of Azure reachability report. Can be Country, State or City."
        },
        "providerLocation": {
          "$ref": "#/definitions/AzureReachabilityReportLocation"
        },
        "reachabilityReport": {
          "type": "array",
          "description": "List of Azure reachability report items.",
          "items": {
            "$ref": "#/definitions/AzureReachabilityReportItem"
          }
        }
      },
      "required": [
        "aggregationLevel",
        "providerLocation",
        "reachabilityReport"
      ],
      "description": "Azure reachability report details."
    },
    "AzureReachabilityReportItem": {
      "properties": {
        "provider": {
          "type": "string",
          "description": "The Internet service provider."
        },
        "azureLocation": {
          "type": "string",
          "description": "The Azure region."
        },
        "latencies": {
          "type": "array",
          "description": "List of latency details for each of the time series.",
          "items": {
            "$ref": "#/definitions/AzureReachabilityReportLatencyInfo"
          }
        }
      },
      "description": "Azure reachability report details for a given provider location."
    },
    "AzureReachabilityReportLatencyInfo": {
      "properties": {
        "timeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time stamp."
        },
        "score": {
          "type": "integer",
          "description": "The relative latency score between 1 and 100, higher values indicating a faster connection.",
          "minimum": 1,
          "maximum": 100
        }
      },
      "description": "Details on latency for a time series."
    },
    "AvailableProvidersListParameters": {
      "properties": {
        "azureLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Azure regions."
        },
        "country": {
          "type": "string",
          "description": "The country for available providers list."
        },
        "state": {
          "type": "string",
          "description": "The state for available providers list."
        },
        "city": {
          "type": "string",
          "description": "The city or town for available providers list."
        }
      },
      "description": "Constraints that determine the list of available Internet service providers."
    },
    "AvailableProvidersList": {
      "properties": {
        "countries": {
          "type": "array",
          "description": "List of available countries.",
          "items": {
            "$ref": "#/definitions/AvailableProvidersListCountry"
          }
        }
      },
      "required": [
        "countries"
      ],
      "description": "List of available countries with details."
    },
    "AvailableProvidersListCountry": {
      "properties": {
        "countryName": {
          "type": "string",
          "description": "The country name."
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Internet service providers."
        },
        "states": {
          "type": "array",
          "description": "List of available states in the country.",
          "items": {
            "$ref": "#/definitions/AvailableProvidersListState"
          }
        }
      },
      "description": "Country details."
    },
    "AvailableProvidersListState": {
      "properties": {
        "stateName": {
          "type": "string",
          "description": "The state name."
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Internet service providers."
        },
        "cities": {
          "type": "array",
          "description": "List of available cities or towns in the state.",
          "items": {
            "$ref": "#/definitions/AvailableProvidersListCity"
          }
        }
      },
      "description": "State details."
    },
    "AvailableProvidersListCity": {
      "properties": {
        "cityName": {
          "type": "string",
          "description": "The city or town name."
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Internet service providers."
        }
      },
      "description": "City or town details."
    },
    "SubResourceReadOnly": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Resource ID",
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID.",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Common resource representation.",
      "x-ms-azure-resource": true,
      "required": [
        "location"
      ]
    },
    "ApplicationSecurityGroupPropertiesFormat": {
      "properties": {
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Application security group properties."
    },
    "ApplicationSecurityGroup": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationSecurityGroupPropertiesFormat",
          "description": "Properties of the application security group."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "An application security group in a resource group."
    },
    "SecurityRulePropertiesFormat": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for this rule. Restricted to 140 chars."
        },
        "protocol": {
          "type": "string",
          "description": "Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.",
          "enum": [
            "Tcp",
            "Udp",
            "*"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleProtocol",
            "modelAsString": false
          }
        },
        "sourcePortRange": {
          "type": "string",
          "description": "The source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "The destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "
        },
        "sourceAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The CIDR or source IP ranges."
        },
        "sourceApplicationSecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationSecurityGroup"
          },
          "description": "The application security group specified as source."
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "The destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
        },
        "destinationAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The destination address prefixes. CIDR or destination IP ranges."
        },
        "destinationApplicationSecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationSecurityGroup"
          },
          "description": "The application security group specified as destination."
        },
        "sourcePortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The source port."
          },
          "description": "The source port ranges."
        },
        "destinationPortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The destination port."
          },
          "description": "The destination port ranges."
        },
        "access": {
          "type": "string",
          "description": "The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleAccess",
            "modelAsString": false
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."
        },
        "direction": {
          "type": "string",
          "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outcoming traffic. Possible values are: 'Inbound' and 'Outbound'.",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleDirection",
            "modelAsString": false
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Security rule resource.",
      "required": [
        "protocol",
        "sourceAddressPrefix",
        "destinationAddressPrefix",
        "access",
        "direction",
        "sourcePortRange",
        "destinationPortRange",
        "priority"
      ]
    },
    "SecurityRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityRulePropertiesFormat",
          "description": "Properties of the security rule"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResourceReadOnly"
        }
      ],
      "description": "Network security rule."
    },
    "EffectiveNetworkSecurityRule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the security rule specified by the user (if created by the user)."
        },
        "protocol": {
          "type": "string",
          "description": "The network protocol this rule applies to. Possible values are: 'Tcp', 'Udp', and 'All'.",
          "enum": [
            "Tcp",
            "Udp",
            "All"
          ],
          "x-ms-enum": {
            "name": "EffectiveSecurityRuleProtocol",
            "modelAsString": false
          }
        },
        "sourcePortRange": {
          "type": "string",
          "description": "The source port or range."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "The destination port or range."
        },
        "sourcePortRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The source port ranges. Expected values include a single integer between 0 and 65535, a range using '-' as seperator (e.g. 100-400), or an asterix (*)"
        },
        "destinationPortRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The destination port ranges. Expected values include a single integer between 0 and 65535, a range using '-' as seperator (e.g. 100-400), or an asterix (*)"
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The source address prefix."
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "The destination address prefix."
        },
        "sourceAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The source address prefixes. Expected values include CIDR IP ranges, Default Tags (VirtualNetwork, AureLoadBalancer, Internet), System Tags, and the asterix (*)."
        },
        "destinationAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The destination address prefixes. Expected values include CIDR IP ranges, Default Tags (VirtualNetwork, AureLoadBalancer, Internet), System Tags, and the asterix (*)."
        },
        "expandedSourceAddressPrefix": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The expanded source address prefix."
        },
        "expandedDestinationAddressPrefix": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Expanded destination address prefix."
        },
        "access": {
          "type": "string",
          "description": "Whether network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleAccess",
            "modelAsString": false
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the rule."
        },
        "direction": {
          "type": "string",
          "description": "The direction of the rule. Possible values are: 'Inbound and Outbound'.",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleDirection",
            "modelAsString": false
          }
        }
      },
      "description": "Effective network security rules."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  },
  "x-internal-service-name": "Network Watcher",
  "x-internal-toc-name": "Network Watchers",
  "x-internal-split-type": "Operation"
}