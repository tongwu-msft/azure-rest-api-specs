### YamlMime:RESTOperation
uid: management.azure.com.network-watcher.networkwatchers.gettroubleshootingresult
name: Get Troubleshooting Result
service: Network Watcher
groupName: Network Watchers
apiVersion: 2022-01-01
summary: Get the last completed troubleshooting result on a specified resource.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult?api-version=2022-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: networkWatcherName
  in: path
  isRequired: true
  description: The name of the network watcher resource.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successful get troubleshooting result request.
  types:
  - uid: TroubleshootingResult
- name: 202 Accepted
  description: Accepted get troubleshooting result request.
  types:
  - uid: TroubleshootingResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: targetResourceId
    in: body
    isRequired: true
    description: The target resource ID to query the troubleshooting result.
    types:
    - uid: string
requestHeader: []
definitions:
- name: TroubleshootingResult
  description: Troubleshooting information gained from specified resource.
  kind: object
  properties:
  - name: startTime
    description: The start time of the troubleshooting.
    types:
    - uid: string
  - name: endTime
    description: The end time of the troubleshooting.
    types:
    - uid: string
  - name: code
    description: The result code of the troubleshooting.
    types:
    - uid: string
  - name: results
    description: Information from troubleshooting.
    types:
    - uid: TroubleshootingDetails
      isArray: true
- name: ErrorResponse
  description: The error object.
  kind: object
  properties:
  - name: error
    description: "Error  \nThe error details object."
    types:
    - uid: ErrorDetails
- name: QueryTroubleshootingParameters
  description: Parameters that define the resource to query the troubleshooting result.
  kind: object
  properties:
  - name: targetResourceId
    description: The target resource ID to query the troubleshooting result.
    types:
    - uid: string
- name: TroubleshootingDetails
  description: Information gained from troubleshooting of specified resource.
  kind: object
  properties:
  - name: id
    description: The id of the get troubleshoot operation.
    types:
    - uid: string
  - name: reasonType
    description: Reason type of failure.
    types:
    - uid: string
  - name: summary
    description: A summary of troubleshooting.
    types:
    - uid: string
  - name: detail
    description: Details on troubleshooting results.
    types:
    - uid: string
  - name: recommendedActions
    description: List of recommended actions.
    types:
    - uid: TroubleshootingRecommendedActions
      isArray: true
- name: ErrorDetails
  description: Common error details representation.
  kind: object
  properties:
  - name: code
    description: Error code.
    types:
    - uid: string
  - name: target
    description: Error target.
    types:
    - uid: string
  - name: message
    description: Error message.
    types:
    - uid: string
- name: TroubleshootingRecommendedActions
  description: Recommended actions based on discovered issues.
  kind: object
  properties:
  - name: actionId
    description: ID of the recommended action.
    types:
    - uid: string
  - name: actionText
    description: Description of recommended actions.
    types:
    - uid: string
  - name: actionUri
    description: The uri linking to a documentation for the recommended troubleshooting actions.
    types:
    - uid: string
  - name: actionUriText
    description: The information from the URI for the recommended troubleshooting actions.
    types:
    - uid: string
examples:
- name: Get troubleshoot result
  request:
    uri: POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/queryTroubleshootResult?api-version=2022-01-01
    body: >-
      {
        "targetResourceId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/queryTroubleshootResult?api-version=2022-01-01

      {
        "targetResourceId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1"
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/NetworkWatcherTroubleshootResultQuery.json
      func ExampleWatchersClient_BeginGetTroubleshootingResult() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewWatchersClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginGetTroubleshootingResult(ctx, "rg1", "nw1", armnetwork.QueryTroubleshootingParameters{
      		TargetResourceID: to.Ptr("/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1"),
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.1.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Get the last completed troubleshooting result on a specified resource.
       *
       * @summary Get the last completed troubleshooting result on a specified resource.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/NetworkWatcherTroubleshootResultQuery.json
       */
      async function getTroubleshootResult() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const networkWatcherName = "nw1";
        const parameters = {
          targetResourceId:
            "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1",
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.networkWatchers.beginGetTroubleshootingResultAndWait(
          resourceGroupName,
          networkWatcherName,
          parameters
        );
        console.log(result);
      }

      getTroubleshootResult().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_29.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "startTime": "2017-01-12T00:19:47.0442834Z",
        "endTime": "2017-01-12T00:20:09.914Z",
        "code": "UnHealthy",
        "results": [
          {
            "id": "000000",
            "reasonType": "VipUnResponsive",
            "summary": "We are sorry, your VPN gateway is unreachable from the Internet",
            "detail": "During this time S2S VPN tunnels to on premises sites or other Azure virtual networks will be disconnected",
            "recommendedActions": [
              {
                "actionText": "Verify if there is a network security group (NSG) applied to the GatewaySubnet",
                "actionUri": "https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-nsg-arm-pportal",
                "actionUriText": "Verify"
              },
              {
                "actionText": "If your VPN gateway isn't up and running by the expected resolution time, contact support",
                "actionUri": "http://azure.microsoft.com/support",
                "actionUriText": "contact support"
              }
            ]
          }
        ]
      }
  - statusCode: "202"
    headers:
    - name: Location
      value: https:/management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/queryTroubleshootResult?api-version=2022-01-01
    body: >-
      {
        "startTime": "2017-01-12T00:19:47.0442834Z",
        "endTime": "2017-01-12T00:20:09.914Z",
        "code": "UnHealthy",
        "results": [
          {
            "id": "000000",
            "reasonType": "VipUnResponsive",
            "summary": "We are sorry, your VPN gateway is unreachable from the Internet",
            "detail": "During this time S2S VPN tunnels to on premises sites or other Azure virtual networks will be disconnected",
            "recommendedActions": [
              {
                "actionText": "Verify if there is a network security group (NSG) applied to the GatewaySubnet",
                "actionUri": "https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-nsg-arm-pportal",
                "actionUriText": "Verify"
              },
              {
                "actionText": "If your VPN gateway isn't up and running by the expected resolution time, contact support",
                "actionUri": "http://azure.microsoft.com/support",
                "actionUriText": "contact support"
              }
            ]
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Network Watcher service - Get the last completed troubleshooting result on a specified resource.
errorCodes: []
