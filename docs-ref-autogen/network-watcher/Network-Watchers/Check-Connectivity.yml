### YamlMime:RESTOperation
uid: management.azure.com.network-watcher.networkwatchers.checkconnectivity
name: Check Connectivity
service: Network Watcher
groupName: Network Watchers
apiVersion: 2022-01-01
summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck?api-version=2022-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the network watcher resource group.
  types:
  - uid: string
- name: networkWatcherName
  in: path
  isRequired: true
  description: The name of the network watcher resource.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successful request for checking connectivity.
  types:
  - uid: ConnectivityInformation
- name: 202 Accepted
  description: Accepted and the operation will complete asynchronously.
  types:
  - uid: ConnectivityInformation
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: source
    in: body
    isRequired: true
    description: The source of the connection.
    types:
    - uid: ConnectivitySource
  - name: destination
    in: body
    isRequired: true
    description: The destination of connection.
    types:
    - uid: ConnectivityDestination
  - name: protocol
    in: body
    description: Network protocol.
    types:
    - uid: Protocol
  - name: protocolConfiguration
    in: body
    description: Configuration of the protocol.
    types:
    - uid: ProtocolConfiguration
  - name: preferredIPVersion
    in: body
    description: Preferred IP version of the connection.
    types:
    - uid: IPVersion
requestHeader: []
definitions:
- name: ConnectivitySource
  description: Parameters that define the source of the connection.
  kind: object
  properties:
  - name: resourceId
    description: The ID of the resource from which a connectivity check will be initiated.
    types:
    - uid: string
  - name: port
    description: The source port from which a connectivity check will be performed.
    types:
    - uid: integer
- name: ConnectivityDestination
  description: Parameters that define destination of connection.
  kind: object
  properties:
  - name: resourceId
    description: The ID of the resource to which a connection attempt will be made.
    types:
    - uid: string
  - name: address
    description: The IP address or URI the resource to which a connection attempt will be made.
    types:
    - uid: string
  - name: port
    description: Port on which check connectivity will be performed.
    types:
    - uid: integer
- name: ProtocolConfiguration
  description: Configuration of the protocol.
  kind: object
  properties:
  - name: HTTPConfiguration
    description: HTTP configuration of the connectivity check.
    types:
    - uid: HTTPConfiguration
- name: ConnectivityInformation
  description: Information on the connectivity status.
  kind: object
  properties:
  - name: hops
    isReadyOnly: true
    description: List of hops between the source and the destination.
    types:
    - uid: ConnectivityHop
      isArray: true
  - name: connectionStatus
    isReadyOnly: true
    description: The connection status.
    types:
    - uid: ConnectionStatus
  - name: avgLatencyInMs
    isReadyOnly: true
    description: Average latency in milliseconds.
    types:
    - uid: integer
  - name: minLatencyInMs
    isReadyOnly: true
    description: Minimum latency in milliseconds.
    types:
    - uid: integer
  - name: maxLatencyInMs
    isReadyOnly: true
    description: Maximum latency in milliseconds.
    types:
    - uid: integer
  - name: probesSent
    isReadyOnly: true
    description: Total number of probes sent.
    types:
    - uid: integer
  - name: probesFailed
    isReadyOnly: true
    description: Number of failed probes.
    types:
    - uid: integer
- name: ErrorResponse
  description: The error object.
  kind: object
  properties:
  - name: error
    description: "Error  \nThe error details object."
    types:
    - uid: ErrorDetails
- name: ConnectivityParameters
  description: Parameters that determine how the connectivity check will be performed.
  kind: object
  properties:
  - name: source
    description: The source of the connection.
    types:
    - uid: ConnectivitySource
  - name: destination
    description: The destination of connection.
    types:
    - uid: ConnectivityDestination
  - name: protocol
    description: Network protocol.
    types:
    - uid: Protocol
  - name: protocolConfiguration
    description: Configuration of the protocol.
    types:
    - uid: ProtocolConfiguration
  - name: preferredIPVersion
    description: Preferred IP version of the connection.
    types:
    - uid: IPVersion
- name: HTTPConfiguration
  description: HTTP configuration of the connectivity check.
  kind: object
  properties:
  - name: method
    description: HTTP method.
    types:
    - uid: HTTPMethod
  - name: headers
    description: List of HTTP headers.
    types:
    - uid: HTTPHeader
      isArray: true
  - name: validStatusCodes
    description: Valid status codes.
    types:
    - uid: integer
      isArray: true
- name: ConnectivityHop
  description: Information about a hop between the source and the destination.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The type of the hop.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: The ID of the hop.
    types:
    - uid: string
  - name: address
    isReadyOnly: true
    description: The IP address of the hop.
    types:
    - uid: string
  - name: resourceId
    isReadyOnly: true
    description: The ID of the resource corresponding to this hop.
    types:
    - uid: string
  - name: nextHopIds
    isReadyOnly: true
    description: List of next hop identifiers.
    types:
    - uid: string
      isArray: true
  - name: previousHopIds
    isReadyOnly: true
    description: List of previous hop identifiers.
    types:
    - uid: string
      isArray: true
  - name: links
    isReadyOnly: true
    description: List of hop links.
    types:
    - uid: HopLink
      isArray: true
  - name: previousLinks
    isReadyOnly: true
    description: List of previous hop links.
    types:
    - uid: HopLink
      isArray: true
  - name: issues
    isReadyOnly: true
    description: List of issues.
    types:
    - uid: ConnectivityIssue
      isArray: true
- name: ConnectionStatus
  description: The connection status.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: Connected
    types:
    - uid: string
  - name: Disconnected
    types:
    - uid: string
  - name: Degraded
    types:
    - uid: string
- name: ErrorDetails
  description: Common error details representation.
  kind: object
  properties:
  - name: code
    description: Error code.
    types:
    - uid: string
  - name: target
    description: Error target.
    types:
    - uid: string
  - name: message
    description: Error message.
    types:
    - uid: string
- name: Protocol
  description: Network protocol.
  kind: enum
  properties:
  - name: Tcp
    types:
    - uid: string
  - name: Http
    types:
    - uid: string
  - name: Https
    types:
    - uid: string
  - name: Icmp
    types:
    - uid: string
- name: IPVersion
  description: IP address version.
  kind: enum
  properties:
  - name: IPv4
    types:
    - uid: string
  - name: IPv6
    types:
    - uid: string
- name: HTTPMethod
  description: HTTP method.
  kind: enum
  properties:
  - name: Get
    types:
    - uid: string
- name: HTTPHeader
  description: The HTTP header.
  kind: object
  properties:
  - name: name
    description: The name in HTTP header.
    types:
    - uid: string
  - name: value
    description: The value in HTTP header.
    types:
    - uid: string
- name: HopLink
  description: Hop link.
  kind: object
  properties:
  - name: nextHopId
    isReadyOnly: true
    description: The ID of the next hop.
    types:
    - uid: string
  - name: linkType
    isReadyOnly: true
    description: Link type.
    types:
    - uid: string
  - name: issues
    isReadyOnly: true
    description: List of issues.
    types:
    - uid: ConnectivityIssue
      isArray: true
  - name: context
    isReadyOnly: true
    description: Provides additional context on links.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: resourceId
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: properties.roundTripTimeMin
    isReadyOnly: true
    description: Minimum roundtrip time in milliseconds.
    types:
    - uid: integer
  - name: properties.roundTripTimeAvg
    isReadyOnly: true
    description: Average roundtrip time in milliseconds.
    types:
    - uid: integer
  - name: properties.roundTripTimeMax
    isReadyOnly: true
    description: Maximum roundtrip time in milliseconds.
    types:
    - uid: integer
- name: ConnectivityIssue
  description: Information about an issue encountered in the process of checking for connectivity.
  kind: object
  properties:
  - name: origin
    isReadyOnly: true
    description: The origin of the issue.
    types:
    - uid: Origin
  - name: severity
    isReadyOnly: true
    description: The severity of the issue.
    types:
    - uid: Severity
  - name: type
    isReadyOnly: true
    description: The type of issue.
    types:
    - uid: IssueType
  - name: context
    isReadyOnly: true
    description: Provides additional context on the issue.
    types:
    - uid: object
      isArray: true
- name: Origin
  description: The origin of the issue.
  kind: enum
  properties:
  - name: Local
    types:
    - uid: string
  - name: Inbound
    types:
    - uid: string
  - name: Outbound
    types:
    - uid: string
- name: Severity
  description: The severity of the issue.
  kind: enum
  properties:
  - name: Error
    types:
    - uid: string
  - name: Warning
    types:
    - uid: string
- name: IssueType
  description: The type of issue.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: AgentStopped
    types:
    - uid: string
  - name: GuestFirewall
    types:
    - uid: string
  - name: DnsResolution
    types:
    - uid: string
  - name: SocketBind
    types:
    - uid: string
  - name: NetworkSecurityRule
    types:
    - uid: string
  - name: UserDefinedRoute
    types:
    - uid: string
  - name: PortThrottled
    types:
    - uid: string
  - name: Platform
    types:
    - uid: string
examples:
- name: Check connectivity
  request:
    uri: POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectivityCheck?api-version=2022-01-01
    body: >-
      {
        "source": {
          "resourceId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1"
        },
        "destination": {
          "address": "192.168.100.4",
          "port": 3389
        },
        "preferredIPVersion": "IPv4"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectivityCheck?api-version=2022-01-01

      {
        "source": {
          "resourceId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1"
        },
        "destination": {
          "address": "192.168.100.4",
          "port": 3389
        },
        "preferredIPVersion": "IPv4"
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/NetworkWatcherConnectivityCheck.json
      func ExampleWatchersClient_BeginCheckConnectivity() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewWatchersClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCheckConnectivity(ctx, "rg1", "nw1", armnetwork.ConnectivityParameters{
      		Destination: &armnetwork.ConnectivityDestination{
      			Address: to.Ptr("192.168.100.4"),
      			Port:    to.Ptr[int32](3389),
      		},
      		PreferredIPVersion: to.Ptr(armnetwork.IPVersionIPv4),
      		Source: &armnetwork.ConnectivitySource{
      			ResourceID: to.Ptr("/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1"),
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.1.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
       *
       * @summary Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/NetworkWatcherConnectivityCheck.json
       */
      async function checkConnectivity() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const networkWatcherName = "nw1";
        const parameters = {
          destination: { address: "192.168.100.4", port: 3389 },
          preferredIPVersion: "IPv4",
          source: {
            resourceId:
              "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.networkWatchers.beginCheckConnectivityAndWait(
          resourceGroupName,
          networkWatcherName,
          parameters
        );
        console.log(result);
      }

      checkConnectivity().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_29.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "hops": [
          {
            "type": "Source",
            "id": "7dbbe7aa-60ba-4650-831e-63d775d38e9e",
            "address": "10.1.1.4",
            "resourceId": "subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/nic0/ipConfigurations/ipconfig1",
            "nextHopIds": [
              "75c8d819-b208-4584-a311-1aa45ce753f9"
            ],
            "issues": []
          },
          {
            "type": "VirtualNetwork",
            "id": "75c8d819-b208-4584-a311-1aa45ce753f9",
            "address": "192.168.100.4",
            "resourceId": "subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/nic1/ipConfigurations/ipconfig1",
            "nextHopIds": [],
            "issues": []
          }
        ],
        "connectionStatus": "Connected",
        "avgLatencyInMs": 1,
        "minLatencyInMs": 1,
        "maxLatencyInMs": 4,
        "probesSent": 100,
        "probesFailed": 0
      }
  - statusCode: "202"
    headers:
    - name: Location
      value: https:/management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectivityCheck?api-version=2022-01-01
    body: >-
      {
        "hops": [
          {
            "type": "Source",
            "id": "7dbbe7aa-60ba-4650-831e-63d775d38e9e",
            "address": "10.1.1.4",
            "resourceId": "subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/nic0/ipConfigurations/ipconfig1",
            "nextHopIds": [
              "75c8d819-b208-4584-a311-1aa45ce753f9"
            ],
            "issues": []
          },
          {
            "type": "VirtualNetwork",
            "id": "75c8d819-b208-4584-a311-1aa45ce753f9",
            "address": "192.168.100.4",
            "resourceId": "subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/nic1/ipConfigurations/ipconfig1",
            "nextHopIds": [],
            "issues": []
          }
        ],
        "connectionStatus": "Connected",
        "avgLatencyInMs": 1,
        "minLatencyInMs": 1,
        "maxLatencyInMs": 4,
        "probesSent": 100,
        "probesFailed": 0
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
errorCodes: []
