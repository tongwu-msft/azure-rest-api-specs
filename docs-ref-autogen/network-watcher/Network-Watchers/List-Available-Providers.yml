### YamlMime:RESTOperation
uid: management.azure.com.network-watcher.networkwatchers.listavailableproviders
name: List Available Providers
service: Network Watcher
groupName: Network Watchers
apiVersion: 2022-01-01
summary: 'NOTE: This feature is currently in preview and still being tested for stability. Lists all available internet service providers for a specified Azure region.'
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/availableProvidersList?api-version=2022-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the network watcher resource group.
  types:
  - uid: string
- name: networkWatcherName
  in: path
  isRequired: true
  description: The name of the network watcher resource.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successful request for list of available providers.
  types:
  - uid: AvailableProvidersList
- name: 202 Accepted
  description: Accepted and the operation will complete asynchronously.
  types:
  - uid: AvailableProvidersList
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: azureLocations
    in: body
    description: A list of Azure regions.
    types:
    - uid: string
      isArray: true
  - name: country
    in: body
    description: The country for available providers list.
    types:
    - uid: string
  - name: state
    in: body
    description: The state for available providers list.
    types:
    - uid: string
  - name: city
    in: body
    description: The city or town for available providers list.
    types:
    - uid: string
requestHeader: []
definitions:
- name: AvailableProvidersList
  description: List of available countries with details.
  kind: object
  properties:
  - name: countries
    description: List of available countries.
    types:
    - uid: AvailableProvidersListCountry
      isArray: true
- name: ErrorResponse
  description: The error object.
  kind: object
  properties:
  - name: error
    description: "Error  \nThe error details object."
    types:
    - uid: ErrorDetails
- name: AvailableProvidersListParameters
  description: Constraints that determine the list of available Internet service providers.
  kind: object
  properties:
  - name: azureLocations
    description: A list of Azure regions.
    types:
    - uid: string
      isArray: true
  - name: country
    description: The country for available providers list.
    types:
    - uid: string
  - name: state
    description: The state for available providers list.
    types:
    - uid: string
  - name: city
    description: The city or town for available providers list.
    types:
    - uid: string
- name: AvailableProvidersListCountry
  description: Country details.
  kind: object
  properties:
  - name: countryName
    description: The country name.
    types:
    - uid: string
  - name: providers
    description: A list of Internet service providers.
    types:
    - uid: string
      isArray: true
  - name: states
    description: List of available states in the country.
    types:
    - uid: AvailableProvidersListState
      isArray: true
- name: ErrorDetails
  description: Common error details representation.
  kind: object
  properties:
  - name: code
    description: Error code.
    types:
    - uid: string
  - name: target
    description: Error target.
    types:
    - uid: string
  - name: message
    description: Error message.
    types:
    - uid: string
- name: AvailableProvidersListState
  description: State details.
  kind: object
  properties:
  - name: stateName
    description: The state name.
    types:
    - uid: string
  - name: providers
    description: A list of Internet service providers.
    types:
    - uid: string
      isArray: true
  - name: cities
    description: List of available cities or towns in the state.
    types:
    - uid: AvailableProvidersListCity
      isArray: true
- name: AvailableProvidersListCity
  description: City or town details.
  kind: object
  properties:
  - name: cityName
    description: The city or town name.
    types:
    - uid: string
  - name: providers
    description: A list of Internet service providers.
    types:
    - uid: string
      isArray: true
examples:
- name: Get Available Providers List
  request:
    uri: POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/availableProvidersList?api-version=2022-01-01
    body: >-
      {
        "azureLocations": [
          "West US"
        ],
        "country": "United States",
        "state": "washington",
        "city": "seattle"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/availableProvidersList?api-version=2022-01-01

      {
        "azureLocations": [
          "West US"
        ],
        "country": "United States",
        "state": "washington",
        "city": "seattle"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.models.AvailableProvidersListParameters;
      import java.util.Arrays;

      /** Samples for NetworkWatchers ListAvailableProviders. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/NetworkWatcherAvailableProvidersListGet.json
           */
          /**
           * Sample code: Get Available Providers List.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void getAvailableProvidersList(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getNetworkWatchers()
                  .listAvailableProviders(
                      "rg1",
                      "nw1",
                      new AvailableProvidersListParameters()
                          .withAzureLocations(Arrays.asList("West US"))
                          .withCountry("United States")
                          .withState("washington")
                          .withCity("seattle"),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.19.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/NetworkWatcherAvailableProvidersListGet.json
      func ExampleWatchersClient_BeginListAvailableProviders() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewWatchersClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginListAvailableProviders(ctx, "rg1", "nw1", armnetwork.AvailableProvidersListParameters{
      		AzureLocations: []*string{
      			to.Ptr("West US")},
      		City:    to.Ptr("seattle"),
      		Country: to.Ptr("United States"),
      		State:   to.Ptr("washington"),
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.1.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to NOTE: This feature is currently in preview and still being tested for stability. Lists all available internet service providers for a specified Azure region.
       *
       * @summary NOTE: This feature is currently in preview and still being tested for stability. Lists all available internet service providers for a specified Azure region.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/NetworkWatcherAvailableProvidersListGet.json
       */
      async function getAvailableProvidersList() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const networkWatcherName = "nw1";
        const parameters = {
          azureLocations: ["West US"],
          city: "seattle",
          country: "United States",
          state: "washington",
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.networkWatchers.beginListAvailableProvidersAndWait(
          resourceGroupName,
          networkWatcherName,
          parameters
        );
        console.log(result);
      }

      getAvailableProvidersList().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_29.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "countries": [
          {
            "countryName": "United States",
            "states": [
              {
                "stateName": "washington",
                "cities": [
                  {
                    "cityName": "seattle",
                    "providers": [
                      "Comcast Cable Communications, Inc. - ASN 7922",
                      "Comcast Cable Communications, LLC - ASN 7922",
                      "Level 3 Communications, Inc. (GBLX) - ASN 3549",
                      "Qwest Communications Company, LLC - ASN 209"
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
  - statusCode: "202"
    headers:
    - name: Location
      value: https:/management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/availableProvidersList?api-version=2022-01-01
    body: >-
      {
        "countries": [
          {
            "countryName": "United States",
            "states": [
              {
                "stateName": "washington",
                "cities": [
                  {
                    "cityName": "seattle",
                    "providers": [
                      "Comcast Cable Communications, Inc. - ASN 7922",
                      "Comcast Cable Communications, LLC - ASN 7922",
                      "Level 3 Communications, Inc. (GBLX) - ASN 3549",
                      "Qwest Communications Company, LLC - ASN 209"
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    NOTE: This feature is currently in preview and still being tested for stability. Lists all available internet service providers for a specified Azure region.
errorCodes: []
