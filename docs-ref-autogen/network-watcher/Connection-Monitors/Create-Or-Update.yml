### YamlMime:RESTOperation
uid: management.azure.com.network-watcher.connectionmonitors.createorupdate
name: Create Or Update
service: Network Watcher
groupName: Connection Monitors
apiVersion: 2021-08-01
summary: Create or update a connection monitor.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}?api-version=2021-08-01
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}?api-version=2021-08-01&migrate={migrate}
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group containing Network Watcher.
  types:
  - uid: string
- name: networkWatcherName
  in: path
  isRequired: true
  description: The name of the Network Watcher resource.
  types:
  - uid: string
- name: connectionMonitorName
  in: path
  isRequired: true
  description: The name of the connection monitor.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
- name: migrate
  in: query
  description: Value indicating whether connection monitor V1 should be migrated to V2 format.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Update successful. The operation returns the resulting network watcher resource.
  types:
  - uid: ConnectionMonitorResult
- name: 201 Created
  description: Create successful. The operation returns the resulting network watcher resource.
  types:
  - uid: ConnectionMonitorResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: location
    in: body
    description: Connection monitor location.
    types:
    - uid: string
  - name: tags
    in: body
    description: Connection monitor tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.source
    in: body
    description: Describes the source of connection monitor.
    types:
    - uid: ConnectionMonitorSource
  - name: properties.destination
    in: body
    description: Describes the destination of connection monitor.
    types:
    - uid: ConnectionMonitorDestination
  - name: properties.autoStart
    in: body
    description: Determines if the connection monitor will start automatically once created.
    types:
    - uid: boolean
  - name: properties.monitoringIntervalInSeconds
    in: body
    description: Monitoring interval in seconds.
    types:
    - uid: integer
  - name: properties.endpoints
    in: body
    description: List of connection monitor endpoints.
    types:
    - uid: ConnectionMonitorEndpoint
      isArray: true
  - name: properties.testConfigurations
    in: body
    description: List of connection monitor test configurations.
    types:
    - uid: ConnectionMonitorTestConfiguration
      isArray: true
  - name: properties.testGroups
    in: body
    description: List of connection monitor test groups.
    types:
    - uid: ConnectionMonitorTestGroup
      isArray: true
  - name: properties.outputs
    in: body
    description: List of connection monitor outputs.
    types:
    - uid: ConnectionMonitorOutput
      isArray: true
  - name: properties.notes
    in: body
    description: Optional notes to be associated with the connection monitor.
    types:
    - uid: string
requestHeader: []
definitions:
- name: ConnectionMonitorSource
  description: Describes the source of connection monitor.
  kind: object
  properties:
  - name: resourceId
    description: The ID of the resource used as the source by connection monitor.
    types:
    - uid: string
  - name: port
    description: The source port used by connection monitor.
    types:
    - uid: integer
- name: ConnectionMonitorDestination
  description: Describes the destination of connection monitor.
  kind: object
  properties:
  - name: resourceId
    description: The ID of the resource used as the destination by connection monitor.
    types:
    - uid: string
  - name: address
    description: Address of the connection monitor destination (IP or domain name).
    types:
    - uid: string
  - name: port
    description: The destination port used by connection monitor.
    types:
    - uid: integer
- name: ConnectionMonitorEndpoint
  description: Describes the connection monitor endpoint.
  kind: object
  properties:
  - name: name
    description: The name of the connection monitor endpoint.
    types:
    - uid: string
  - name: type
    description: The endpoint type.
    types:
    - uid: EndpointType
  - name: resourceId
    description: Resource ID of the connection monitor endpoint.
    types:
    - uid: string
  - name: address
    description: Address of the connection monitor endpoint (IP or domain name).
    types:
    - uid: string
  - name: filter
    description: Filter for sub-items within the endpoint.
    types:
    - uid: ConnectionMonitorEndpointFilter
  - name: scope
    description: Endpoint scope.
    types:
    - uid: ConnectionMonitorEndpointScope
  - name: coverageLevel
    description: Test coverage for the endpoint.
    types:
    - uid: CoverageLevel
- name: ConnectionMonitorTestConfiguration
  description: Describes a connection monitor test configuration.
  kind: object
  properties:
  - name: name
    description: The name of the connection monitor test configuration.
    types:
    - uid: string
  - name: testFrequencySec
    description: The frequency of test evaluation, in seconds.
    types:
    - uid: integer
  - name: protocol
    description: The protocol to use in test evaluation.
    types:
    - uid: ConnectionMonitorTestConfigurationProtocol
  - name: preferredIPVersion
    description: The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
    types:
    - uid: PreferredIPVersion
  - name: httpConfiguration
    description: The parameters used to perform test evaluation over HTTP.
    types:
    - uid: ConnectionMonitorHttpConfiguration
  - name: tcpConfiguration
    description: The parameters used to perform test evaluation over TCP.
    types:
    - uid: ConnectionMonitorTcpConfiguration
  - name: icmpConfiguration
    description: The parameters used to perform test evaluation over ICMP.
    types:
    - uid: ConnectionMonitorIcmpConfiguration
  - name: successThreshold
    description: The threshold for declaring a test successful.
    types:
    - uid: ConnectionMonitorSuccessThreshold
- name: ConnectionMonitorTestGroup
  description: Describes the connection monitor test group.
  kind: object
  properties:
  - name: name
    description: The name of the connection monitor test group.
    types:
    - uid: string
  - name: disable
    description: Value indicating whether test group is disabled.
    types:
    - uid: boolean
  - name: testConfigurations
    description: List of test configuration names.
    types:
    - uid: string
      isArray: true
  - name: sources
    description: List of source endpoint names.
    types:
    - uid: string
      isArray: true
  - name: destinations
    description: List of destination endpoint names.
    types:
    - uid: string
      isArray: true
- name: ConnectionMonitorOutput
  description: Describes a connection monitor output destination.
  kind: object
  properties:
  - name: type
    description: Connection monitor output destination type. Currently, only "Workspace" is supported.
    types:
    - uid: OutputType
  - name: workspaceSettings
    description: Describes the settings for producing output into a log analytics workspace.
    types:
    - uid: ConnectionMonitorWorkspaceSettings
- name: ConnectionMonitorResult
  description: Information about the connection monitor.
  kind: object
  properties:
  - name: name
    isReadyOnly: true
    description: Name of the connection monitor.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: ID of the connection monitor.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Connection monitor type.
    types:
    - uid: string
  - name: location
    description: Connection monitor location.
    types:
    - uid: string
  - name: tags
    description: Connection monitor tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the connection monitor.
    types:
    - uid: ProvisioningState
  - name: properties.startTime
    isReadyOnly: true
    description: The date and time when the connection monitor was started.
    types:
    - uid: string
  - name: properties.monitoringStatus
    isReadyOnly: true
    description: The monitoring status of the connection monitor.
    types:
    - uid: string
  - name: properties.connectionMonitorType
    isReadyOnly: true
    description: Type of connection monitor.
    types:
    - uid: ConnectionMonitorType
  - name: properties.source
    description: Describes the source of connection monitor.
    types:
    - uid: ConnectionMonitorSource
  - name: properties.destination
    description: Describes the destination of connection monitor.
    types:
    - uid: ConnectionMonitorDestination
  - name: properties.autoStart
    description: Determines if the connection monitor will start automatically once created.
    types:
    - uid: boolean
    defaultValue: true
  - name: properties.monitoringIntervalInSeconds
    description: Monitoring interval in seconds.
    types:
    - uid: integer
    defaultValue: 60
  - name: properties.endpoints
    description: List of connection monitor endpoints.
    types:
    - uid: ConnectionMonitorEndpoint
      isArray: true
  - name: properties.testConfigurations
    description: List of connection monitor test configurations.
    types:
    - uid: ConnectionMonitorTestConfiguration
      isArray: true
  - name: properties.testGroups
    description: List of connection monitor test groups.
    types:
    - uid: ConnectionMonitorTestGroup
      isArray: true
  - name: properties.outputs
    description: List of connection monitor outputs.
    types:
    - uid: ConnectionMonitorOutput
      isArray: true
  - name: properties.notes
    description: Optional notes to be associated with the connection monitor.
    types:
    - uid: string
- name: ErrorResponse
  description: The error object.
  kind: object
  properties:
  - name: error
    description: "Error  \nThe error details object."
    types:
    - uid: ErrorDetails
- name: ConnectionMonitor
  description: Parameters that define the operation to create a connection monitor.
  kind: object
  properties:
  - name: location
    description: Connection monitor location.
    types:
    - uid: string
  - name: tags
    description: Connection monitor tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.source
    description: Describes the source of connection monitor.
    types:
    - uid: ConnectionMonitorSource
  - name: properties.destination
    description: Describes the destination of connection monitor.
    types:
    - uid: ConnectionMonitorDestination
  - name: properties.autoStart
    description: Determines if the connection monitor will start automatically once created.
    types:
    - uid: boolean
    defaultValue: true
  - name: properties.monitoringIntervalInSeconds
    description: Monitoring interval in seconds.
    types:
    - uid: integer
    defaultValue: 60
  - name: properties.endpoints
    description: List of connection monitor endpoints.
    types:
    - uid: ConnectionMonitorEndpoint
      isArray: true
  - name: properties.testConfigurations
    description: List of connection monitor test configurations.
    types:
    - uid: ConnectionMonitorTestConfiguration
      isArray: true
  - name: properties.testGroups
    description: List of connection monitor test groups.
    types:
    - uid: ConnectionMonitorTestGroup
      isArray: true
  - name: properties.outputs
    description: List of connection monitor outputs.
    types:
    - uid: ConnectionMonitorOutput
      isArray: true
  - name: properties.notes
    description: Optional notes to be associated with the connection monitor.
    types:
    - uid: string
- name: EndpointType
  description: The endpoint type.
  kind: enum
  properties:
  - name: AzureVM
    types:
    - uid: string
  - name: AzureVNet
    types:
    - uid: string
  - name: AzureSubnet
    types:
    - uid: string
  - name: ExternalAddress
    types:
    - uid: string
  - name: MMAWorkspaceMachine
    types:
    - uid: string
  - name: MMAWorkspaceNetwork
    types:
    - uid: string
- name: ConnectionMonitorEndpointFilter
  description: Describes the connection monitor endpoint filter.
  kind: object
  properties:
  - name: type
    description: The behavior of the endpoint filter. Currently only 'Include' is supported.
    types:
    - uid: ConnectionMonitorEndpointFilterType
  - name: items
    description: List of items in the filter.
    types:
    - uid: ConnectionMonitorEndpointFilterItem
      isArray: true
- name: ConnectionMonitorEndpointScope
  description: Describes the connection monitor endpoint scope.
  kind: object
  properties:
  - name: include
    description: List of items which needs to be included to the endpoint scope.
    types:
    - uid: ConnectionMonitorEndpointScopeItem
      isArray: true
  - name: exclude
    description: List of items which needs to be excluded from the endpoint scope.
    types:
    - uid: ConnectionMonitorEndpointScopeItem
      isArray: true
- name: CoverageLevel
  description: Test coverage for the endpoint.
  kind: enum
  properties:
  - name: Default
    types:
    - uid: string
  - name: Low
    types:
    - uid: string
  - name: BelowAverage
    types:
    - uid: string
  - name: Average
    types:
    - uid: string
  - name: AboveAverage
    types:
    - uid: string
  - name: Full
    types:
    - uid: string
- name: ConnectionMonitorTestConfigurationProtocol
  description: The protocol to use in test evaluation.
  kind: enum
  properties:
  - name: Tcp
    types:
    - uid: string
  - name: Http
    types:
    - uid: string
  - name: Icmp
    types:
    - uid: string
- name: PreferredIPVersion
  description: The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
  kind: enum
  properties:
  - name: IPv4
    types:
    - uid: string
  - name: IPv6
    types:
    - uid: string
- name: ConnectionMonitorHttpConfiguration
  description: Describes the HTTP configuration.
  kind: object
  properties:
  - name: port
    description: The port to connect to.
    types:
    - uid: integer
  - name: method
    description: The HTTP method to use.
    types:
    - uid: HTTPConfigurationMethod
  - name: path
    description: The path component of the URI. For instance, "/dir1/dir2".
    types:
    - uid: string
  - name: requestHeaders
    description: The HTTP headers to transmit with the request.
    types:
    - uid: HTTPHeader
      isArray: true
  - name: validStatusCodeRanges
    description: HTTP status codes to consider successful. For instance, "2xx,301-304,418".
    types:
    - uid: string
      isArray: true
  - name: preferHTTPS
    description: Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
    types:
    - uid: boolean
- name: ConnectionMonitorTcpConfiguration
  description: Describes the TCP configuration.
  kind: object
  properties:
  - name: port
    description: The port to connect to.
    types:
    - uid: integer
  - name: disableTraceRoute
    description: Value indicating whether path evaluation with trace route should be disabled.
    types:
    - uid: boolean
  - name: destinationPortBehavior
    description: Destination port behavior.
    types:
    - uid: DestinationPortBehavior
- name: ConnectionMonitorIcmpConfiguration
  description: Describes the ICMP configuration.
  kind: object
  properties:
  - name: disableTraceRoute
    description: Value indicating whether path evaluation with trace route should be disabled.
    types:
    - uid: boolean
- name: ConnectionMonitorSuccessThreshold
  description: Describes the threshold for declaring a test successful.
  kind: object
  properties:
  - name: checksFailedPercent
    description: The maximum percentage of failed checks permitted for a test to evaluate as successful.
    types:
    - uid: integer
  - name: roundTripTimeMs
    description: The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
    types:
    - uid: number
- name: OutputType
  description: Connection monitor output destination type. Currently, only "Workspace" is supported.
  kind: enum
  properties:
  - name: Workspace
    types:
    - uid: string
- name: ConnectionMonitorWorkspaceSettings
  description: Describes the settings for producing output into a log analytics workspace.
  kind: object
  properties:
  - name: workspaceResourceId
    description: Log analytics workspace resource ID.
    types:
    - uid: string
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: ConnectionMonitorType
  description: Type of connection monitor.
  kind: enum
  properties:
  - name: MultiEndpoint
    types:
    - uid: string
  - name: SingleSourceDestination
    types:
    - uid: string
- name: ErrorDetails
  description: Common error details representation.
  kind: object
  properties:
  - name: code
    description: Error code.
    types:
    - uid: string
  - name: target
    description: Error target.
    types:
    - uid: string
  - name: message
    description: Error message.
    types:
    - uid: string
- name: ConnectionMonitorEndpointFilterType
  description: The behavior of the endpoint filter. Currently only 'Include' is supported.
  kind: enum
  properties:
  - name: Include
    types:
    - uid: string
- name: ConnectionMonitorEndpointFilterItem
  description: Describes the connection monitor endpoint filter item.
  kind: object
  properties:
  - name: type
    description: The type of item included in the filter. Currently only 'AgentAddress' is supported.
    types:
    - uid: ConnectionMonitorEndpointFilterItemType
  - name: address
    description: The address of the filter item.
    types:
    - uid: string
- name: ConnectionMonitorEndpointScopeItem
  description: Describes the connection monitor endpoint scope item.
  kind: object
  properties:
  - name: address
    description: The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
    types:
    - uid: string
- name: HTTPConfigurationMethod
  description: The HTTP method to use.
  kind: enum
  properties:
  - name: Get
    types:
    - uid: string
  - name: Post
    types:
    - uid: string
- name: HTTPHeader
  description: The HTTP header.
  kind: object
  properties:
  - name: name
    description: The name in HTTP header.
    types:
    - uid: string
  - name: value
    description: The value in HTTP header.
    types:
    - uid: string
- name: DestinationPortBehavior
  description: Destination port behavior.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: ListenIfAvailable
    types:
    - uid: string
- name: ConnectionMonitorEndpointFilterItemType
  description: The type of item included in the filter. Currently only 'AgentAddress' is supported.
  kind: enum
  properties:
  - name: AgentAddress
    types:
    - uid: string
examples:
- name: Create connection monitor V1
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1?api-version=2021-08-01
    body: >-
      {
        "location": "eastus",
        "properties": {
          "endpoints": [
            {
              "name": "source",
              "resourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/ct1"
            },
            {
              "name": "destination",
              "address": "bing.com"
            }
          ],
          "testConfigurations": [
            {
              "name": "tcp",
              "testFrequencySec": 60,
              "protocol": "Tcp",
              "tcpConfiguration": {
                "port": 80
              }
            }
          ],
          "testGroups": [
            {
              "name": "tg",
              "testConfigurations": [
                "tcp"
              ],
              "sources": [
                "source"
              ],
              "destinations": [
                "destination"
              ]
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1?api-version=2021-08-01

      {
        "location": "eastus",
        "properties": {
          "endpoints": [
            {
              "name": "source",
              "resourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/ct1"
            },
            {
              "name": "destination",
              "address": "bing.com"
            }
          ],
          "testConfigurations": [
            {
              "name": "tcp",
              "testFrequencySec": 60,
              "protocol": "Tcp",
              "tcpConfiguration": {
                "port": 80
              }
            }
          ],
          "testGroups": [
            {
              "name": "tg",
              "testConfigurations": [
                "tcp"
              ],
              "sources": [
                "source"
              ],
              "destinations": [
                "destination"
              ]
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.fluent.models.ConnectionMonitorInner;
      import com.azure.resourcemanager.network.models.ConnectionMonitorEndpoint;
      import com.azure.resourcemanager.network.models.ConnectionMonitorTcpConfiguration;
      import com.azure.resourcemanager.network.models.ConnectionMonitorTestConfiguration;
      import com.azure.resourcemanager.network.models.ConnectionMonitorTestConfigurationProtocol;
      import com.azure.resourcemanager.network.models.ConnectionMonitorTestGroup;
      import java.util.Arrays;

      /** Samples for ConnectionMonitors CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/NetworkWatcherConnectionMonitorCreate.json
           */
          /**
           * Sample code: Create connection monitor V1.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createConnectionMonitorV1(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getConnectionMonitors()
                  .createOrUpdate(
                      "rg1",
                      "nw1",
                      "cm1",
                      new ConnectionMonitorInner()
                          .withLocation("eastus")
                          .withEndpoints(
                              Arrays
                                  .asList(
                                      new ConnectionMonitorEndpoint()
                                          .withName("source")
                                          .withResourceId(
                                              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/ct1"),
                                      new ConnectionMonitorEndpoint().withName("destination").withAddress("bing.com")))
                          .withTestConfigurations(
                              Arrays
                                  .asList(
                                      new ConnectionMonitorTestConfiguration()
                                          .withName("tcp")
                                          .withTestFrequencySec(60)
                                          .withProtocol(ConnectionMonitorTestConfigurationProtocol.TCP)
                                          .withTcpConfiguration(new ConnectionMonitorTcpConfiguration().withPort(80))))
                          .withTestGroups(
                              Arrays
                                  .asList(
                                      new ConnectionMonitorTestGroup()
                                          .withName("tg")
                                          .withTestConfigurations(Arrays.asList("tcp"))
                                          .withSources(Arrays.asList("source"))
                                          .withDestinations(Arrays.asList("destination")))),
                      null,
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/NetworkWatcherConnectionMonitorCreate.json
      func ExampleConnectionMonitorsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewConnectionMonitorsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"rg1",
      		"nw1",
      		"cm1",
      		armnetwork.ConnectionMonitor{
      			Location: to.Ptr("eastus"),
      			Properties: &armnetwork.ConnectionMonitorParameters{
      				Endpoints: []*armnetwork.ConnectionMonitorEndpoint{
      					{
      						Name:       to.Ptr("source"),
      						ResourceID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/ct1"),
      					},
      					{
      						Name:    to.Ptr("destination"),
      						Address: to.Ptr("bing.com"),
      					}},
      				TestConfigurations: []*armnetwork.ConnectionMonitorTestConfiguration{
      					{
      						Name: to.Ptr("tcp"),
      						TCPConfiguration: &armnetwork.ConnectionMonitorTCPConfiguration{
      							Port: to.Ptr[int32](80),
      						},
      						TestFrequencySec: to.Ptr[int32](60),
      						Protocol:         to.Ptr(armnetwork.ConnectionMonitorTestConfigurationProtocolTCP),
      					}},
      				TestGroups: []*armnetwork.ConnectionMonitorTestGroup{
      					{
      						Name: to.Ptr("tg"),
      						Destinations: []*string{
      							to.Ptr("destination")},
      						Sources: []*string{
      							to.Ptr("source")},
      						TestConfigurations: []*string{
      							to.Ptr("tcp")},
      					}},
      			},
      		},
      		&armnetwork.ConnectionMonitorsClientBeginCreateOrUpdateOptions{Migrate: nil})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.0.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update a connection monitor.
       *
       * @summary Create or update a connection monitor.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/NetworkWatcherConnectionMonitorCreate.json
       */
      async function createConnectionMonitorV1() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const networkWatcherName = "nw1";
        const connectionMonitorName = "cm1";
        const parameters = {
          endpoints: [
            {
              name: "source",
              resourceId:
                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/ct1",
            },
            { name: "destination", address: "bing.com" },
          ],
          location: "eastus",
          testConfigurations: [
            {
              name: "tcp",
              tcpConfiguration: { port: 80 },
              testFrequencySec: 60,
              protocol: "Tcp",
            },
          ],
          testGroups: [
            {
              name: "tg",
              destinations: ["destination"],
              sources: ["source"],
              testConfigurations: ["tcp"],
            },
          ],
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.connectionMonitors.beginCreateOrUpdateAndWait(
          resourceGroupName,
          networkWatcherName,
          connectionMonitorName,
          parameters
        );
        console.log(result);
      }

      createConnectionMonitorV1().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_28.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "cm1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1",
        "etag": "W/\"e7497f26-5f09-4559-900b-fe98f3dedb6f\"",
        "properties": {
          "provisioningState": "Updating",
          "endpoints": [
            {
              "name": "source",
              "resourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/ct1"
            },
            {
              "name": "destination",
              "address": "bing.com"
            }
          ],
          "testConfigurations": [
            {
              "name": "tcp",
              "testFrequencySec": 60,
              "protocol": "Tcp",
              "tcpConfiguration": {
                "port": 80
              }
            }
          ],
          "testGroups": [
            {
              "name": "tg",
              "testConfigurations": [
                "tcp"
              ],
              "sources": [
                "source"
              ],
              "destinations": [
                "destination"
              ]
            }
          ]
        },
        "location": "eastus",
        "type": "Microsoft.Network/networkWatchers/connectionMonitors"
      }
  - statusCode: "201"
    body: >-
      {
        "name": "cm1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1",
        "etag": "W/\"e7497f26-5f09-4559-900b-fe98f3dedb6f\"",
        "properties": {
          "provisioningState": "Succeeded",
          "endpoints": [
            {
              "name": "source",
              "resourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/ct1"
            },
            {
              "name": "destination",
              "address": "bing.com"
            }
          ],
          "testConfigurations": [
            {
              "name": "tcp",
              "testFrequencySec": 60,
              "protocol": "Tcp",
              "tcpConfiguration": {
                "port": 80
              }
            }
          ],
          "testGroups": [
            {
              "name": "tg",
              "testConfigurations": [
                "tcp"
              ],
              "sources": [
                "source"
              ],
              "destinations": [
                "destination"
              ]
            }
          ]
        },
        "location": "eastus",
        "type": "Microsoft.Network/networkWatchers/connectionMonitors"
      }
- name: Create connection monitor V2
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1?api-version=2021-08-01
    body: >-
      {
        "properties": {
          "endpoints": [
            {
              "name": "vm1",
              "resourceId": "/subscriptions/96e68903-0a56-4819-9987-8d08ad6a1f99/resourceGroups/NwRgIrinaCentralUSEUAP/providers/Microsoft.Compute/virtualMachines/vm1"
            },
            {
              "name": "CanaryWorkspaceVamshi",
              "resourceId": "/subscriptions/96e68903-0a56-4819-9987-8d08ad6a1f99/resourceGroups/vasamudrRG/providers/Microsoft.OperationalInsights/workspaces/vasamudrWorkspace",
              "filter": {
                "type": "Include",
                "items": [
                  {
                    "type": "AgentAddress",
                    "address": "npmuser"
                  }
                ]
              }
            },
            {
              "name": "bing",
              "address": "bing.com"
            },
            {
              "name": "google",
              "address": "google.com"
            }
          ],
          "testConfigurations": [
            {
              "name": "testConfig1",
              "testFrequencySec": 60,
              "protocol": "Tcp",
              "tcpConfiguration": {
                "port": 80,
                "disableTraceRoute": false
              }
            }
          ],
          "testGroups": [
            {
              "name": "test1",
              "disable": false,
              "testConfigurations": [
                "testConfig1"
              ],
              "sources": [
                "vm1",
                "CanaryWorkspaceVamshi"
              ],
              "destinations": [
                "bing",
                "google"
              ]
            }
          ],
          "outputs": []
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1?api-version=2021-08-01

      {
        "properties": {
          "endpoints": [
            {
              "name": "vm1",
              "resourceId": "/subscriptions/96e68903-0a56-4819-9987-8d08ad6a1f99/resourceGroups/NwRgIrinaCentralUSEUAP/providers/Microsoft.Compute/virtualMachines/vm1"
            },
            {
              "name": "CanaryWorkspaceVamshi",
              "resourceId": "/subscriptions/96e68903-0a56-4819-9987-8d08ad6a1f99/resourceGroups/vasamudrRG/providers/Microsoft.OperationalInsights/workspaces/vasamudrWorkspace",
              "filter": {
                "type": "Include",
                "items": [
                  {
                    "type": "AgentAddress",
                    "address": "npmuser"
                  }
                ]
              }
            },
            {
              "name": "bing",
              "address": "bing.com"
            },
            {
              "name": "google",
              "address": "google.com"
            }
          ],
          "testConfigurations": [
            {
              "name": "testConfig1",
              "testFrequencySec": 60,
              "protocol": "Tcp",
              "tcpConfiguration": {
                "port": 80,
                "disableTraceRoute": false
              }
            }
          ],
          "testGroups": [
            {
              "name": "test1",
              "disable": false,
              "testConfigurations": [
                "testConfig1"
              ],
              "sources": [
                "vm1",
                "CanaryWorkspaceVamshi"
              ],
              "destinations": [
                "bing",
                "google"
              ]
            }
          ],
          "outputs": []
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.fluent.models.ConnectionMonitorInner;
      import com.azure.resourcemanager.network.models.ConnectionMonitorEndpoint;
      import com.azure.resourcemanager.network.models.ConnectionMonitorEndpointFilter;
      import com.azure.resourcemanager.network.models.ConnectionMonitorEndpointFilterItem;
      import com.azure.resourcemanager.network.models.ConnectionMonitorEndpointFilterItemType;
      import com.azure.resourcemanager.network.models.ConnectionMonitorEndpointFilterType;
      import com.azure.resourcemanager.network.models.ConnectionMonitorTcpConfiguration;
      import com.azure.resourcemanager.network.models.ConnectionMonitorTestConfiguration;
      import com.azure.resourcemanager.network.models.ConnectionMonitorTestConfigurationProtocol;
      import com.azure.resourcemanager.network.models.ConnectionMonitorTestGroup;
      import java.util.Arrays;

      /** Samples for ConnectionMonitors CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/NetworkWatcherConnectionMonitorV2Create.json
           */
          /**
           * Sample code: Create connection monitor V2.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createConnectionMonitorV2(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getConnectionMonitors()
                  .createOrUpdate(
                      "rg1",
                      "nw1",
                      "cm1",
                      new ConnectionMonitorInner()
                          .withEndpoints(
                              Arrays
                                  .asList(
                                      new ConnectionMonitorEndpoint()
                                          .withName("vm1")
                                          .withResourceId(
                                              "/subscriptions/96e68903-0a56-4819-9987-8d08ad6a1f99/resourceGroups/NwRgIrinaCentralUSEUAP/providers/Microsoft.Compute/virtualMachines/vm1"),
                                      new ConnectionMonitorEndpoint()
                                          .withName("CanaryWorkspaceVamshi")
                                          .withResourceId(
                                              "/subscriptions/96e68903-0a56-4819-9987-8d08ad6a1f99/resourceGroups/vasamudrRG/providers/Microsoft.OperationalInsights/workspaces/vasamudrWorkspace")
                                          .withFilter(
                                              new ConnectionMonitorEndpointFilter()
                                                  .withType(ConnectionMonitorEndpointFilterType.INCLUDE)
                                                  .withItems(
                                                      Arrays
                                                          .asList(
                                                              new ConnectionMonitorEndpointFilterItem()
                                                                  .withType(
                                                                      ConnectionMonitorEndpointFilterItemType.AGENT_ADDRESS)
                                                                  .withAddress("npmuser")))),
                                      new ConnectionMonitorEndpoint().withName("bing").withAddress("bing.com"),
                                      new ConnectionMonitorEndpoint().withName("google").withAddress("google.com")))
                          .withTestConfigurations(
                              Arrays
                                  .asList(
                                      new ConnectionMonitorTestConfiguration()
                                          .withName("testConfig1")
                                          .withTestFrequencySec(60)
                                          .withProtocol(ConnectionMonitorTestConfigurationProtocol.TCP)
                                          .withTcpConfiguration(
                                              new ConnectionMonitorTcpConfiguration()
                                                  .withPort(80)
                                                  .withDisableTraceRoute(false))))
                          .withTestGroups(
                              Arrays
                                  .asList(
                                      new ConnectionMonitorTestGroup()
                                          .withName("test1")
                                          .withDisable(false)
                                          .withTestConfigurations(Arrays.asList("testConfig1"))
                                          .withSources(Arrays.asList("vm1", "CanaryWorkspaceVamshi"))
                                          .withDestinations(Arrays.asList("bing", "google"))))
                          .withOutputs(Arrays.asList()),
                      null,
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update a connection monitor.
       *
       * @summary Create or update a connection monitor.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/NetworkWatcherConnectionMonitorV2Create.json
       */
      async function createConnectionMonitorV2() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const networkWatcherName = "nw1";
        const connectionMonitorName = "cm1";
        const parameters = {
          endpoints: [
            {
              name: "vm1",
              resourceId:
                "/subscriptions/96e68903-0a56-4819-9987-8d08ad6a1f99/resourceGroups/NwRgIrinaCentralUSEUAP/providers/Microsoft.Compute/virtualMachines/vm1",
            },
            {
              name: "CanaryWorkspaceVamshi",
              filter: {
                type: "Include",
                items: [{ type: "AgentAddress", address: "npmuser" }],
              },
              resourceId:
                "/subscriptions/96e68903-0a56-4819-9987-8d08ad6a1f99/resourceGroups/vasamudrRG/providers/Microsoft.OperationalInsights/workspaces/vasamudrWorkspace",
            },
            { name: "bing", address: "bing.com" },
            { name: "google", address: "google.com" },
          ],
          outputs: [],
          testConfigurations: [
            {
              name: "testConfig1",
              tcpConfiguration: { disableTraceRoute: false, port: 80 },
              testFrequencySec: 60,
              protocol: "Tcp",
            },
          ],
          testGroups: [
            {
              name: "test1",
              destinations: ["bing", "google"],
              disable: false,
              sources: ["vm1", "CanaryWorkspaceVamshi"],
              testConfigurations: ["testConfig1"],
            },
          ],
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.connectionMonitors.beginCreateOrUpdateAndWait(
          resourceGroupName,
          networkWatcherName,
          connectionMonitorName,
          parameters
        );
        console.log(result);
      }

      createConnectionMonitorV2().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_28.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "cm1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1",
        "etag": "W/\"e7497f26-5f09-4559-900b-fe98f3dedb6f\"",
        "properties": {
          "endpoints": [
            {
              "name": "vm1",
              "resourceId": "/subscriptions/96e68903-0a56-4819-9987-8d08ad6a1f99/resourceGroups/NwRgIrinaCentralUSEUAP/providers/Microsoft.Compute/virtualMachines/vm1"
            },
            {
              "name": "CanaryWorkspaceVamshi",
              "resourceId": "/subscriptions/96e68903-0a56-4819-9987-8d08ad6a1f99/resourceGroups/vasamudrRG/providers/Microsoft.OperationalInsights/workspaces/vasamudrWorkspace",
              "filter": {
                "type": "Include",
                "items": [
                  {
                    "type": "AgentAddress",
                    "address": "npmuser"
                  }
                ]
              }
            },
            {
              "name": "bing",
              "address": "bing.com"
            },
            {
              "name": "google",
              "address": "google.com"
            }
          ],
          "testConfigurations": [
            {
              "name": "testConfig1",
              "testFrequencySec": 60,
              "protocol": "Tcp",
              "tcpConfiguration": {
                "port": 80,
                "disableTraceRoute": false
              }
            }
          ],
          "testGroups": [
            {
              "name": "test1",
              "disable": false,
              "testConfigurations": [
                "testConfig1"
              ],
              "sources": [
                "vm1",
                "CanaryWorkspaceVamshi"
              ],
              "destinations": [
                "bing",
                "google"
              ]
            }
          ],
          "outputs": []
        },
        "location": "centraluseuap",
        "type": "Microsoft.Network/networkWatchers/connectionMonitors"
      }
  - statusCode: "201"
    body: >-
      {
        "name": "cm1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1",
        "etag": "W/\"e7497f26-5f09-4559-900b-fe98f3dedb6f\"",
        "properties": {
          "endpoints": [
            {
              "name": "vm1",
              "resourceId": "/subscriptions/96e68903-0a56-4819-9987-8d08ad6a1f99/resourceGroups/NwRgIrinaCentralUSEUAP/providers/Microsoft.Compute/virtualMachines/vm1"
            },
            {
              "name": "CanaryWorkspaceVamshi",
              "resourceId": "/subscriptions/96e68903-0a56-4819-9987-8d08ad6a1f99/resourceGroups/vasamudrRG/providers/Microsoft.OperationalInsights/workspaces/vasamudrWorkspace",
              "filter": {
                "type": "Include",
                "items": [
                  {
                    "type": "AgentAddress",
                    "address": "npmuser"
                  }
                ]
              }
            },
            {
              "name": "bing",
              "address": "bing.com"
            },
            {
              "name": "google",
              "address": "google.com"
            }
          ],
          "testConfigurations": [
            {
              "name": "testConfig1",
              "testFrequencySec": 60,
              "protocol": "Tcp",
              "tcpConfiguration": {
                "port": 80,
                "disableTraceRoute": false
              }
            }
          ],
          "testGroups": [
            {
              "name": "test1",
              "disable": false,
              "testConfigurations": [
                "testConfig1"
              ],
              "sources": [
                "vm1",
                "CanaryWorkspaceVamshi"
              ],
              "destinations": [
                "bing",
                "google"
              ]
            }
          ],
          "outputs": []
        },
        "location": "centraluseuap",
        "type": "Microsoft.Network/networkWatchers/connectionMonitors"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Network Watcher service - Create or update a connection monitor.
errorCodes: []
