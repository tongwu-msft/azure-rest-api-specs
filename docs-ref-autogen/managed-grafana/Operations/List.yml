### YamlMime:RESTOperation
uid: management.azure.com.managed-grafana.operations.list
name: List
service: Managed Grafana
groupName: Operations
apiVersion: 2021-09-01-preview
summary: List all available API operations provided by Microsoft.Dashboard.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/providers/Microsoft.Dashboard/operations?api-version=2021-09-01-preview
uriParameters:
- name: api-version
  in: query
  isRequired: true
  description: The API version to be used with the HTTP request (e.g. YYYY-MM-DD).
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK. Return all available API operations provided by Microsoft.Dashboard.
  types:
  - uid: OperationListResult
- name: Other Status Codes
  description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: OperationListResult
  description: A list of REST API operations supported by Microsoft.Dashboard provider. It contains an URL link to get the next set of results.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: List of operations supported by the Microsoft.Dashboard provider.
    types:
    - uid: OperationResult
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: URL to get the next set of operation list results if there are any.
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: OperationResult
  description: A Microsoft.Dashboard REST API operation.
  kind: object
  properties:
  - name: name
    isReadyOnly: true
    description: Operation name, i.e., {provider}/{resource}/{operation}.
    types:
    - uid: string
  - name: isDataAction
    isReadyOnly: true
    description: Indicates whether the operation applies to data-plane. Set "true" for data-plane operations and "false" for ARM/control-plane operations.
    types:
    - uid: boolean
  - name: display
    description: Localized display information for this particular operation.
    types:
    - uid: OperationDisplay
  - name: origin
    isReadyOnly: true
    description: The intended executor of the operation.
    types:
    - uid: Origin
  - name: actionType
    isReadyOnly: true
    description: Indicates the action type. "Internal" refers to actions that are for internal only APIs.
    types:
    - uid: ActionType
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: OperationDisplay
  description: Localized display information for this particular operation.
  kind: object
  properties:
  - name: provider
    isReadyOnly: true
    description: The localized friendly form of the resource provider name, i.e., Microsoft.Dashboard.
    types:
    - uid: string
  - name: resource
    isReadyOnly: true
    description: The localized friendly name of the resource type related to this operation, e.g., 'grafana'.
    types:
    - uid: string
  - name: operation
    isReadyOnly: true
    description: Operation type, e.g., read, write, delete, etc.
    types:
    - uid: string
  - name: description
    isReadyOnly: true
    description: Description of the operation, e.g., 'Read grafana'.
    types:
    - uid: string
- name: Origin
  description: The intended executor of the operation.
  kind: enum
  properties:
  - name: user
    types:
    - uid: string
  - name: system
    types:
    - uid: string
  - name: user,system
    types:
    - uid: string
- name: ActionType
  description: Indicates the action type. "Internal" refers to actions that are for internal only APIs.
  kind: enum
  properties:
  - name: Internal
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Operations_List
  request:
    uri: GET https://management.azure.com/providers/Microsoft.Dashboard/operations?api-version=2021-09-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/providers/Microsoft.Dashboard/operations?api-version=2021-09-01-preview
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for Operations List. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dashboard/resource-manager/Microsoft.Dashboard/preview/2021-09-01-preview/examples/Operations_List.json
           */
          /**
           * Sample code: Operations_List.
           *
           * @param manager Entry point to DashboardManager.
           */
          public static void operationsList(com.azure.resourcemanager.dashboard.DashboardManager manager) {
              manager.operations().list(Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-dashboard_1.0.0-beta.1/sdk/dashboard/azure-resourcemanager-dashboard/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armdashboard_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/dashboard/armdashboard"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/dashboard/resource-manager/Microsoft.Dashboard/preview/2021-09-01-preview/examples/Operations_List.json
      func ExampleOperationsClient_NewListPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armdashboard.NewOperationsClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListPager(nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fdashboard%2Farmdashboard%2Fv0.3.0/sdk/resourcemanager/dashboard/armdashboard/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DashboardManagementClient } = require("@azure/arm-dashboard");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to List all available API operations provided by Microsoft.Dashboard.
       *
       * @summary List all available API operations provided by Microsoft.Dashboard.
       * x-ms-original-file: specification/dashboard/resource-manager/Microsoft.Dashboard/preview/2021-09-01-preview/examples/Operations_List.json
       */
      async function operationsList() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const credential = new DefaultAzureCredential();
        const client = new DashboardManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.operations.list()) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      operationsList().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dashboard_1.0.0-beta.1/sdk/dashboard/arm-dashboard/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "name": "Microsoft.Dashboard/grafana/write",
            "display": {
              "provider": "Microsoft.Dashboard",
              "resource": "grafana",
              "operation": "write",
              "description": "Write grafana workspace resource"
            },
            "origin": "user",
            "actionType": "Internal"
          }
        ],
        "nextLink": null
      }
security: []
metadata:
  description: Learn more about Managed Grafana service - List all available API operations provided by Microsoft.Dashboard.
errorCodes: []
