### YamlMime:RESTOperation
uid: management.azure.com.searchmanagement.services.update
name: Update
service: Search Management
groupName: Services
apiVersion: 2015-08-19
summary: Updates an existing Search service in the given resource group.
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}?api-version=2015-08-19
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The unique identifier for a Microsoft Azure subscription. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the current subscription. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: searchServiceName
  in: path
  isRequired: true
  description: The name of the Azure Search service to update.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for each request. The current version is 2015-08-19.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The existing service definition was successfully updated. If you changed the number of replicas or partitions, the scale operation will happen asynchronously. You can periodically get your service definition and monitor progress via the provisioningState property.
  types:
  - uid: SearchService
- name: Other Status Codes
  description: 'HTTP 400 (Bad Request): The given service definition is invalid or you attempted to change a property that is immutable; See the error code and message in the response for details. HTTP 404 (Not Found): The subscription or resource group could not be found. HTTP 409 (Conflict): The specified subscription is disabled.'
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: sku
    in: body
    description: The SKU of the Search Service, which determines price tier and capacity limits. This property is required when creating a new Search Service.
    types:
    - uid: Sku
  - name: properties.replicaCount
    in: body
    description: The number of replicas in the Search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU.
    types:
    - uid: integer
  - name: properties.partitionCount
    in: body
    description: The number of partitions in the Search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3.
    types:
    - uid: integer
  - name: properties.hostingMode
    in: body
    description: Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
    types:
    - uid: HostingMode
  - name: location
    in: body
    description: The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth). This property is required when creating a new resource.
    types:
    - uid: string
  - name: tags
    in: body
    description: Tags to help categorize the resource in the Azure portal.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: identity
    in: body
    description: The identity of the resource.
    types:
    - uid: Identity
requestHeader:
- name: x-ms-client-request-id
  in: header
  description: A client-generated GUID value that identifies this request. If specified, this will be included in response information as a way to track the request.
  types:
  - uid: string
  format: uuid
definitions:
- name: Sku
  description: Defines the SKU of an Azure Search Service, which determines price tier and capacity limits.
  kind: object
  properties:
  - name: name
    description: "The SKU of the Search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': Offers maximum capacity per search unit with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity')."
    types:
    - uid: SkuName
- name: Identity
  description: Identity for the resource.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal ID of resource identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant ID of resource.
    types:
    - uid: string
  - name: type
    description: The identity type.
    types:
    - uid: IdentityType
- name: SearchService
  description: Describes an Azure Search service and its current state.
  kind: object
  properties:
  - name: sku
    description: The SKU of the Search Service, which determines price tier and capacity limits. This property is required when creating a new Search Service.
    types:
    - uid: Sku
  - name: properties.replicaCount
    description: The number of replicas in the Search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU.
    types:
    - uid: integer
  - name: properties.partitionCount
    description: The number of partitions in the Search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3.
    types:
    - uid: integer
  - name: properties.hostingMode
    description: Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
    types:
    - uid: HostingMode
  - name: properties.status
    isReadyOnly: true
    description: "The status of the Search service. Possible values include: 'running': The Search service is running and no provisioning operations are underway. 'provisioning': The Search service is being provisioned or scaled up or down. 'deleting': The Search service is being deleted. 'degraded': The Search service is degraded. This can occur when the underlying search units are not healthy. The Search service is most likely operational, but performance might be slow and some requests might be dropped. 'disabled': The Search service is disabled. In this state, the service will reject all API requests. 'error': The Search service is in an error state. If your service is in the degraded, disabled, or error states, it means the Azure Search team is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned."
    types:
    - uid: SearchServiceStatus
  - name: properties.statusDetails
    isReadyOnly: true
    description: The details of the Search service status.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The state of the last provisioning operation performed on the Search service. Provisioning is an intermediate state that occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded' or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free service, this value tends to come back as 'succeeded' directly in the call to Create Search service. This is because the free service uses capacity that is already set up.
    types:
    - uid: ProvisioningState
  - name: id
    isReadyOnly: true
    description: The ID of the resource. This can be used with the Azure Resource Manager to link resources together.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The resource type.
    types:
    - uid: string
  - name: location
    description: The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth). This property is required when creating a new resource.
    types:
    - uid: string
  - name: tags
    description: Tags to help categorize the resource in the Azure portal.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: identity
    description: The identity of the resource.
    types:
    - uid: Identity
- name: CloudError
  description: Contains information about an API error.
  kind: object
  properties:
  - name: error
    description: Describes a particular API error with an error code and a message.
    types:
    - uid: CloudErrorBody
- name: SkuName
  description: "The SKU of the Search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': Offers maximum capacity per search unit with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity')."
  kind: enum
  properties:
  - name: free
    types:
    - uid: string
  - name: basic
    types:
    - uid: string
  - name: standard
    types:
    - uid: string
  - name: standard2
    types:
    - uid: string
  - name: standard3
    types:
    - uid: string
- name: IdentityType
  description: The identity type.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
- name: HostingMode
  description: Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
  kind: enum
  properties:
  - name: default
    types:
    - uid: string
  - name: highDensity
    types:
    - uid: string
- name: SearchServiceStatus
  description: "The status of the Search service. Possible values include: 'running': The Search service is running and no provisioning operations are underway. 'provisioning': The Search service is being provisioned or scaled up or down. 'deleting': The Search service is being deleted. 'degraded': The Search service is degraded. This can occur when the underlying search units are not healthy. The Search service is most likely operational, but performance might be slow and some requests might be dropped. 'disabled': The Search service is disabled. In this state, the service will reject all API requests. 'error': The Search service is in an error state. If your service is in the degraded, disabled, or error states, it means the Azure Search team is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned."
  kind: enum
  properties:
  - name: running
    types:
    - uid: string
  - name: provisioning
    types:
    - uid: string
  - name: deleting
    types:
    - uid: string
  - name: degraded
    types:
    - uid: string
  - name: disabled
    types:
    - uid: string
  - name: error
    types:
    - uid: string
- name: ProvisioningState
  description: The state of the last provisioning operation performed on the Search service. Provisioning is an intermediate state that occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded' or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free service, this value tends to come back as 'succeeded' directly in the call to Create Search service. This is because the free service uses capacity that is already set up.
  kind: enum
  properties:
  - name: succeeded
    types:
    - uid: string
  - name: provisioning
    types:
    - uid: string
  - name: failed
    types:
    - uid: string
- name: CloudErrorBody
  description: Describes a particular API error with an error code and a message.
  kind: object
  properties:
  - name: code
    description: An error code that describes the error condition more precisely than an HTTP status code. Can be used to programatically handle specific error cases.
    types:
    - uid: string
  - name: message
    description: A message that describes the error in detail and provides debugging information.
    types:
    - uid: string
  - name: target
    description: The target of the particular error (for example, the name of the property in error).
    types:
    - uid: string
  - name: details
    description: Contains nested errors that are related to this error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: SearchUpdateService
  request:
    uri: PATCH https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Search/searchServices/mysearchservice?api-version=2015-08-19
    body: >-
      {
        "tags": {
          "app-name": "My e-commerce app",
          "new-tag": "Adding a new tag"
        },
        "properties": {
          "replicaCount": 2
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Search/searchServices/mysearchservice",
        "name": "mysearchservice",
        "location": "westus",
        "type": "Microsoft.Search/searchServices",
        "tags": {
          "app-name": "My e-commerce app"
        },
        "sku": {
          "name": "standard"
        },
        "properties": {
          "replicaCount": 3,
          "partitionCount": 1,
          "status": "provisioning",
          "statusDetails": "",
          "hostingMode": "default",
          "provisioningState": "provisioning"
        }
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
