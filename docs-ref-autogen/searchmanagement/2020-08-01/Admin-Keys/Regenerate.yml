### YamlMime:RESTOperation
uid: management.azure.com.searchmanagement.2020-08-01.adminkeys.regenerate
name: Regenerate
service: Search Management
groupName: Admin Keys
apiVersion: 2020-08-01
summary: Regenerates either the primary or secondary admin API key. You can only regenerate one key at a time.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}/regenerateAdminKey/{keyKind}?api-version=2020-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The unique identifier for a Microsoft Azure subscription. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the current subscription. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: searchServiceName
  in: path
  isRequired: true
  description: The name of the Azure Cognitive Search service associated with the specified resource group.
  types:
  - uid: string
- name: keyKind
  in: path
  isRequired: true
  description: Specifies which key to regenerate. Valid values include 'primary' and 'secondary'.
  types:
  - uid: AdminKeyKind
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for each request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The specified admin key was successfully regenerated. Both admin keys are included in the response, including the newly-regenerated key.
  types:
  - uid: AdminKeyResult
- name: Other Status Codes
  description: 'HTTP 404 (Not Found): The subscription, resource group, or search service could not be found. HTTP 409 (Conflict): The specified subscription is disabled.'
  types:
  - uid: CloudError
requestHeader:
- name: x-ms-client-request-id
  in: header
  description: A client-generated GUID value that identifies this request. If specified, this will be included in response information as a way to track the request.
  types:
  - uid: string
  format: uuid
definitions:
- name: AdminKeyKind
  description: Specifies which key to regenerate. Valid values include 'primary' and 'secondary'.
  kind: enum
  properties:
  - name: primary
    types:
    - uid: string
  - name: secondary
    types:
    - uid: string
- name: AdminKeyResult
  description: Response containing the primary and secondary admin API keys for a given Azure Cognitive Search service.
  kind: object
  properties:
  - name: primaryKey
    isReadyOnly: true
    description: The primary admin API key of the search service.
    types:
    - uid: string
  - name: secondaryKey
    isReadyOnly: true
    description: The secondary admin API key of the search service.
    types:
    - uid: string
- name: CloudError
  description: Contains information about an API error.
  kind: object
  properties:
  - name: error
    description: Describes a particular API error with an error code and a message.
    types:
    - uid: CloudErrorBody
- name: CloudErrorBody
  description: Describes a particular API error with an error code and a message.
  kind: object
  properties:
  - name: code
    description: An error code that describes the error condition more precisely than an HTTP status code. Can be used to programmatically handle specific error cases.
    types:
    - uid: string
  - name: message
    description: A message that describes the error in detail and provides debugging information.
    types:
    - uid: string
  - name: target
    description: The target of the particular error (for example, the name of the property in error).
    types:
    - uid: string
  - name: details
    description: Contains nested errors that are related to this error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: SearchRegenerateAdminKey
  request:
    uri: POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Search/searchServices/mysearchservice/regenerateAdminKey/primary?api-version=2020-08-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Search/searchServices/mysearchservice/regenerateAdminKey/primary?api-version=2020-08-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.search.models.AdminKeyKind;

      /** Samples for AdminKeys Regenerate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/search/resource-manager/Microsoft.Search/stable/2020-08-01/examples/SearchRegenerateAdminKey.json
           */
          /**
           * Sample code: SearchRegenerateAdminKey.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void searchRegenerateAdminKey(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .searchServices()
                  .manager()
                  .serviceClient()
                  .getAdminKeys()
                  .regenerateWithResponse("rg1", "mysearchservice", AdminKeyKind.PRIMARY, null, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.19.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armsearch_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/search/armsearch"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/search/resource-manager/Microsoft.Search/stable/2020-08-01/examples/SearchRegenerateAdminKey.json
      func ExampleAdminKeysClient_Regenerate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsearch.NewAdminKeysClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Regenerate(ctx,
      		"rg1",
      		"mysearchservice",
      		armsearch.AdminKeyKindPrimary,
      		&armsearch.SearchManagementRequestOptions{ClientRequestID: nil},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsearch%2Farmsearch%2Fv1.0.0/sdk/resourcemanager/search/armsearch/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SearchManagementClient } = require("@azure/arm-search");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Regenerates either the primary or secondary admin API key. You can only regenerate one key at a time.
       *
       * @summary Regenerates either the primary or secondary admin API key. You can only regenerate one key at a time.
       * x-ms-original-file: specification/search/resource-manager/Microsoft.Search/stable/2020-08-01/examples/SearchRegenerateAdminKey.json
       */
      async function searchRegenerateAdminKey() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const searchServiceName = "mysearchservice";
        const keyKind = "primary";
        const credential = new DefaultAzureCredential();
        const client = new SearchManagementClient(credential, subscriptionId);
        const result = await client.adminKeys.regenerate(resourceGroupName, searchServiceName, keyKind);
        console.log(result);
      }

      searchRegenerateAdminKey().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-search_3.0.1/sdk/search/arm-search/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "primaryKey": "<your primary admin API key>",
        "secondaryKey": "<your secondary admin API key>"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Regenerates either the primary or secondary admin API key. You can only regenerate one key at a time.
errorCodes: []
