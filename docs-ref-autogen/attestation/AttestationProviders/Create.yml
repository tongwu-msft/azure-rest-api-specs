### YamlMime:RESTOperation
uid: management.azure.com.attestation.attestationproviders.create
name: Create
service: Azure Attestation
groupName: Attestation Providers
apiVersion: 2018-09-01-preview
summary: Creates or updates the Attestation Provider.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}?api-version=2018-09-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: providerName
  in: path
  isRequired: true
  description: Name of the attestation service instance.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Created or updated attestation service
  types:
  - uid: AttestationProvider
- name: 201 Created
  description: Created or updated attestation service
  types:
  - uid: AttestationProvider
- name: Other Status Codes
  description: Error result from Attestation service
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: location
    in: body
    isRequired: true
    description: The supported Azure location where the attestation service instance should be created.
    types:
    - uid: string
  - name: tags
    in: body
    description: The tags that will be assigned to the attestation service instance.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    in: body
    isRequired: true
    description: Properties of the attestation service instance
    types:
    - uid: AttestationServiceCreationSpecificParams
requestHeader: []
definitions:
- name: AttestationServiceCreationSpecificParams
  description: Client supplied parameters used to create a new attestation service instance.
  kind: object
  properties:
  - name: attestationPolicy
    description: Name of attestation policy.
    types:
    - uid: string
  - name: policySigningCertificates
    description: JSON Web Key Set defining a set of X.509 Certificates that will represent the parent certificate for the signing certificate used for policy operations
    types:
    - uid: JSONWebKeySet
- name: AttestationProvider
  description: Attestation service response message.
  kind: object
  properties:
  - name: properties.trustModel
    description: Trust model for the attestation service instance.
    types:
    - uid: string
  - name: properties.status
    description: Status of attestation service.
    types:
    - uid: AttestationServiceStatus
  - name: properties.attestUri
    description: Gets the uri of attestation service
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: CloudError
  description: An error response from Attestation.
  kind: object
  properties:
  - name: error
    description: An error response from Attestation.
    types:
    - uid: CloudErrorBody
- name: AttestationServiceCreationParams
  description: Parameters for creating an attestation service instance
  kind: object
  properties:
  - name: location
    description: The supported Azure location where the attestation service instance should be created.
    types:
    - uid: string
  - name: tags
    description: The tags that will be assigned to the attestation service instance.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    description: Properties of the attestation service instance
    types:
    - uid: AttestationServiceCreationSpecificParams
- name: JSONWebKeySet
  kind: object
  properties:
  - name: keys
    description: >-
      The value of the "keys" parameter is an array of JWK values.  By

      default, the order of the JWK values within the array does not imply

      an order of preference among them, although applications of JWK Sets

      can choose to assign a meaning to the order for their purposes, if

      desired.
    types:
    - uid: JSONWebKey
      isArray: true
- name: AttestationServiceStatus
  description: Status of attestation service.
  kind: enum
  properties:
  - name: Ready
    types:
    - uid: string
  - name: NotReady
    types:
    - uid: string
  - name: Error
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from Attestation.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for displaying in a user interface.
    types:
    - uid: string
- name: JSONWebKey
  kind: object
  properties:
  - name: alg
    description: >-
      The "alg" (algorithm) parameter identifies the algorithm intended for

      use with the key.  The values used should either be registered in the

      IANA "JSON Web Signature and Encryption Algorithms" registry

      established by [JWA] or be a value that contains a Collision-

      Resistant Name.
    types:
    - uid: string
  - name: crv
    description: The "crv" (curve) parameter identifies the curve type
    types:
    - uid: string
  - name: d
    description: RSA private exponent or ECC private key
    types:
    - uid: string
  - name: dp
    description: RSA Private Key Parameter
    types:
    - uid: string
  - name: dq
    description: RSA Private Key Parameter
    types:
    - uid: string
  - name: e
    description: RSA public exponent, in Base64
    types:
    - uid: string
  - name: k
    description: Symmetric key
    types:
    - uid: string
  - name: kid
    description: >-
      The "kid" (key ID) parameter is used to match a specific key.  This

      is used, for instance, to choose among a set of keys within a JWK Set

      during key rollover.  The structure of the "kid" value is

      unspecified.  When "kid" values are used within a JWK Set, different

      keys within the JWK Set SHOULD use distinct "kid" values.  (One

      example in which different keys might use the same "kid" value is if

      they have different "kty" (key type) values but are considered to be

      equivalent alternatives by the application using them.)  The "kid"

      value is a case-sensitive string.
    types:
    - uid: string
  - name: kty
    description: >-
      The "kty" (key type) parameter identifies the cryptographic algorithm

      family used with the key, such as "RSA" or "EC". "kty" values should

      either be registered in the IANA "JSON Web Key Types" registry

      established by [JWA] or be a value that contains a Collision-

      Resistant Name.  The "kty" value is a case-sensitive string.
    types:
    - uid: string
  - name: n
    description: RSA modulus, in Base64
    types:
    - uid: string
  - name: p
    description: RSA secret prime
    types:
    - uid: string
  - name: q
    description: RSA secret prime, with p < q
    types:
    - uid: string
  - name: qi
    description: RSA Private Key Parameter
    types:
    - uid: string
  - name: use
    description: >-
      Use ("public key use") identifies the intended use of

      the public key. The "use" parameter is employed to indicate whether

      a public key is used for encrypting data or verifying the signature

      on data. Values are commonly "sig" (signature) or "enc" (encryption).
    types:
    - uid: string
  - name: x
    description: X coordinate for the Elliptic Curve point
    types:
    - uid: string
  - name: x5c
    description: >-
      The "x5c" (X.509 certificate chain) parameter contains a chain of one

      or more PKIX certificates [RFC5280].  The certificate chain is

      represented as a JSON array of certificate value strings.  Each

      string in the array is a base64-encoded (Section 4 of [RFC4648] --

      not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.

      The PKIX certificate containing the key value MUST be the first

      certificate.
    types:
    - uid: string
      isArray: true
  - name: y
    description: Y coordinate for the Elliptic Curve point
    types:
    - uid: string
examples:
- name: AttestationProviders_Create
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MyResourceGroup/providers/Microsoft.Attestation/attestationProviders/myattestationprovider?api-version=2018-09-01-preview
    body: "\"test\""
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MyResourceGroup/providers/Microsoft.Attestation/attestationProviders/myattestationprovider",
        "name": "myattestationprovider",
        "type": "Microsoft.Attestation/attestationProviders",
        "location": "East US",
        "tags": {
          "Property1": "Value1",
          "Property2": "Value2",
          "Property3": "Value3"
        },
        "properties": {
          "trustModel": "Isolated",
          "status": "Ready",
          "attestUri": "https://superservice.attestation.azure.net"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MyResourceGroup/providers/Microsoft.Attestation/attestationProviders/myattestationprovider",
        "name": "myattestationprovider",
        "type": "Microsoft.Attestation/attestationProviders",
        "location": "East US",
        "tags": {
          "Property1": "Value1",
          "Property2": "Value2",
          "Property3": "Value3"
        },
        "properties": {
          "trustModel": "Isolated",
          "status": "Ready",
          "attestUri": "https://superservice.attestation.azure.net"
        }
      }
security: []
errorCodes: []
