### YamlMime:RESTOperation
uid: time-series-insights.dataaccess(preview).timeseriestypes.executebatch
name: Execute Batch
service: Time Series Insights
groupName: Time Series Types
apiVersion: 2018-11-01-preview
summary: Executes a batch get, create, update, delete operation on multiple time series types.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://{environmentFqdn}/timeseries/types/$batch?api-version=2018-11-01-preview
uriParameters:
- name: environmentFqdn
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: Per environment FQDN, for example 10000000-0000-0000-0000-100000000109.env.timeseries.azure.com. You can obtain this domain name from the response of the Get Environments API, Azure portal, or Azure Resource Manager.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request. Currently supported version is "2018-11-01-preview".
  types:
  - uid: string
responses:
- name: 200 OK
  headers:
  - name: x-ms-request-id
    value: string
  description: Successful operation.
  types:
  - uid: TypesBatchResponse
- name: Other Status Codes
  headers:
  - name: x-ms-request-id
    value: string
  description: Unexpected error.
  types:
  - uid: TsiError
requestBody:
- name: default
  parameters:
  - name: get
    in: body
    description: Definition of what time series types to return.
    types:
    - uid: TypesRequestBatchGetOrDelete
  - name: put
    in: body
    description: Definition of what time series types to update or create.
    types:
    - uid: TimeSeriesType
      isArray: true
  - name: delete
    in: body
    description: Definition of what time series types to delete.
    types:
    - uid: TypesRequestBatchGetOrDelete
requestHeader:
- name: x-ms-client-request-id
  in: header
  description: Optional client request ID. Service records this value. Allows the service to trace operation across services, and allows the customer to contact support regarding a particular request.
  types:
  - uid: string
- name: x-ms-client-session-id
  in: header
  description: Optional client session ID. Service records this value. Allows the service to trace a group of related operations across services, and allows the customer to contact support regarding a particular group of requests.
  types:
  - uid: string
definitions:
- name: TypesRequestBatchGetOrDelete
  description: Request to get or delete time series types by IDs or type names. Exactly one of "typeIds" or "names" must be set.
  kind: object
  properties:
  - name: typeIds
    description: List of IDs of time series types to return or delete.
    types:
    - uid: string
      isArray: true
  - name: names
    description: List of names of time series types to return or delete.
    types:
    - uid: string
      isArray: true
- name: TimeSeriesType
  description: Time series type defines variables or formulas for doing computation on events associated with time series instances. Each time series instance is associated with exactly one type. A type can have one or more variables. For example, a time series instance might be of type Temperature Sensor, which consists of the variables avg temperature, min temperature, and max temperature.
  kind: object
  properties:
  - name: id
    description: Case-sensitive unique type identifier that is immutable. Can be null on create or update requests, and then server generates the ID. Not null on get and delete operations.
    types:
    - uid: string
  - name: name
    description: User-given unique name for the type. Mutable, not null.
    types:
    - uid: string
  - name: description
    description: Description of the type. May be null.
    types:
    - uid: string
  - name: variables
    description: Different variables associated with the type. Not empty, not null.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: Variable
- name: TypesBatchResponse
  description: Response of a single operation on a batch of time series types. Exactly one of "get", "put" or "delete" will be set.
  kind: object
  properties:
  - name: get
    isReadyOnly: true
    description: List of types or error objects corresponding by position to the "get" array in the request. Type object is set when operation is successful and error object is set when operation is unsuccessful.
    types:
    - uid: TimeSeriesTypeOrError
      isArray: true
  - name: put
    isReadyOnly: true
    description: List of types or error objects corresponding by position to the "put" array in the request. Type object is set when operation is successful and error object is set when operation is unsuccessful.
    types:
    - uid: TimeSeriesTypeOrError
      isArray: true
  - name: delete
    isReadyOnly: true
    description: List of error objects corresponding by position to the "delete" array in the request - null when the operation is successful.
    types:
    - uid: TsiErrorBody
      isArray: true
- name: TsiError
  description: Information about an API error.
  kind: object
  properties:
  - name: error
    description: A particular API error with an error code and a message.
    types:
    - uid: TsiErrorBody
- name: TypesBatchRequest
  description: Request to perform a single operation on a batch of time series types. Exactly one of "get", "put" or "delete" must be set.
  kind: object
  properties:
  - name: get
    description: Definition of what time series types to return.
    types:
    - uid: TypesRequestBatchGetOrDelete
  - name: put
    description: Definition of what time series types to update or create.
    types:
    - uid: TimeSeriesType
      isArray: true
  - name: delete
    description: Definition of what time series types to delete.
    types:
    - uid: TypesRequestBatchGetOrDelete
- name: TimeSeriesTypeOrError
  description: Result of a batch operation on a particular time series type. Type object is set when operation is successful and error object is set when operation is unsuccessful.
  kind: object
  properties:
  - name: timeSeriesType
    isReadyOnly: true
    description: Time series type object - set when the operation is successful.
    types:
    - uid: TimeSeriesType
  - name: error
    isReadyOnly: true
    description: Error object - set when the operation is unsuccessful.
    types:
    - uid: TsiErrorBody
- name: TsiErrorBody
  description: A particular API error with an error code and a message.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Language-independent, human-readable string that defines a service-specific error code. This code serves as a more specific indicator for the HTTP error code specified in the response. Can be used to programmatically handle specific error cases.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Human-readable, language-independent representation of the error. It is intended as an aid to developers and is not suitable for exposure to end users.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: Target of the particular error (for example, the name of the property in error). May be null.
    types:
    - uid: string
  - name: innerError
    isReadyOnly: true
    description: Contains more specific error that narrows down the cause. May be null.
    types:
    - uid: TsiErrorBody
  - name: details
    isReadyOnly: true
    description: Contains additional error information. May be null.
    types:
    - uid: TsiErrorDetails
      isArray: true
- name: NumericVariable
  description: Numeric variable represents a single continuous numeric signal that can be reconstructed using interpolation.
  kind: object
  properties:
  - name: kind
    description: Allowed "kind" values are - "numeric" or "aggregate". While "numeric" allows you to specify value of the reconstructed signal and the expression to aggregate them, the "aggregate" kind lets you directly aggregate on the event properties without specifying value.
    types:
    - uid: numeric
    typesTitle: string
  - name: filter
    description: "Filter over the events that restricts the number of events being considered for computation. Example: \"$event.Status.String='Good'\". Optional."
    types:
    - uid: Tsx
  - name: value
    description: 'Value time series expression is used to represent the value of the signal that is going to be aggregated or interpolated. For example, temperature values from the event is represented like this: "$event.Temperature.Double".'
    types:
    - uid: Tsx
  - name: interpolation
    description: 'The interpolation operation to be performed on the raw data points. Currently, only sampling of interpolated time series is allowed. Allowed aggregate function - eg: left($value). Can be null if no interpolation needs to be applied.'
    types:
    - uid: Interpolation
  - name: aggregation
    description: 'Aggregation time series expression when kind is "numeric" is used to represent the aggregation that needs to be performed on the $value expression. This requires $value to be specified and can only use $value inside the aggregate functions. For example, aggregation for calculating minimum of the $value is written as: "min($value)".'
    types:
    - uid: Tsx
- name: AggregateVariable
  description: Aggregate variable represents any aggregation calculation. Aggregate Variables does not support interpolation.
  kind: object
  properties:
  - name: kind
    description: Allowed "kind" values are - "numeric" or "aggregate". While "numeric" allows you to specify value of the reconstructed signal and the expression to aggregate them, the "aggregate" kind lets you directly aggregate on the event properties without specifying value.
    types:
    - uid: aggregate
    typesTitle: string
  - name: filter
    description: "Filter over the events that restricts the number of events being considered for computation. Example: \"$event.Status.String='Good'\". Optional."
    types:
    - uid: Tsx
  - name: aggregation
    description: 'Aggregation time series expression when kind is "aggregate" is used to represent the aggregation that needs to be performed directly using event properties like "$event.Temperature". For example, aggregation for calculating range of temperature changes can be written as: "max($event.Temperature)-min($event.Temperature)".'
    types:
    - uid: Tsx
- name: CategoricalVariable
  description: Categorical variable represents signal that needs to be analyzed based on the count or duration of occurrence of limited set of defined values.
  kind: object
  properties:
  - name: kind
    description: Allowed "kind" values are - "numeric" or "aggregate". While "numeric" allows you to specify value of the reconstructed signal and the expression to aggregate them, the "aggregate" kind lets you directly aggregate on the event properties without specifying value.
    types:
    - uid: categorical
    typesTitle: string
  - name: filter
    description: "Filter over the events that restricts the number of events being considered for computation. Example: \"$event.Status.String='Good'\". Optional."
    types:
    - uid: Tsx
  - name: value
    description: Value time series expression is used to represent the value of the signal that is going to be categorized. It can evaluate to only 'String' or 'Long' type for categorical variables.
    types:
    - uid: Tsx
  - name: interpolation
    description: Categorical variable supports only 'step' interpolation.
    types:
    - uid: Interpolation
  - name: categories
    description: Category used in categorical variables. A category is defined by 'label' and the 'values' that are assigned this label.
    types:
    - uid: TimeSeriesAggregateCategory
      isArray: true
  - name: defaultCategory
    description: Represents the default category.
    types:
    - uid: TimeSeriesDefaultCategory
- name: TsiErrorDetails
  description: Additional error information.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Language-independent, human-readable string that defines a service-specific error code. This code serves as a more specific indicator for the HTTP error code specified in the response. Can be used to programmatically handle specific error cases.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Human-readable, language-independent representation of the error. It is intended as an aid to developers and is not suitable for exposure to end users.
    types:
    - uid: string
- name: Tsx
  description: "Time series expression (TSX) written as a single string. Examples: \"$event.Status.String='Good'\", \"avg($event.Temperature)\". Refer to the documentation on how to write time series expressions."
  kind: object
  properties:
  - name: tsx
    description: "Time series expression (TSX) written as a single string. Examples: \"$event.Status.String='Good'\", \"avg($event.Temperature)\". Refer to the documentation on how to write time series expressions."
    types:
    - uid: string
- name: Interpolation
  description: 'The interpolation operation to be performed on the raw data points. Currently, only sampling of interpolated time series is allowed. Allowed aggregate function - eg: left($value). Can be null if no interpolation needs to be applied.'
  kind: object
  properties:
  - name: kind
    description: 'The type of interpolation technique : "Linear" or "Step".'
    types:
    - uid: InterpolationKind
  - name: boundary
    description: The time range to the left and right of the search span to be used for Interpolation. This is helpful in scenarios where the data points are missing close to the start or end of the input search span. Can be null.
    types:
    - uid: Boundary
- name: TimeSeriesAggregateCategory
  description: Category used in categorical variables. A category is defined by 'label' and the 'values' that are assigned this label.
  kind: object
  properties:
  - name: label
    description: The name of the category which will be used in constructing the output variable names.
    types:
    - uid: string
  - name: values
    description: The list of values that a category maps to. Can be either a unique list of string or list of long.
    types:
    - uid: object
      isArray: true
- name: TimeSeriesDefaultCategory
  description: Represents the default category.
  kind: object
  properties:
  - name: label
    description: The name of the default category which will be assigned to the values that does not match any of those that are defined in the 'categories'.
    types:
    - uid: string
- name: InterpolationKind
  description: 'The type of interpolation technique : "Linear" or "Step".'
  kind: enum
  properties:
  - name: Linear
    types:
    - uid: string
  - name: Step
    types:
    - uid: string
- name: Boundary
  description: The time range to the left and right of the search span to be used for Interpolation. This is helpful in scenarios where the data points are missing close to the start or end of the input search span. Can be null.
  kind: object
  properties:
  - name: span
    description: ''
    types:
    - uid: string
examples:
- name: TypesBatchGetByIds
  request:
    uri: POST https://10000000-0000-0000-0000-100000000109.env.timeseries.azure.com/timeseries/types/$batch?api-version=2018-11-01-preview
    body: >-
      {
        "get": {
          "typeIds": [
            "1be09af9-f089-4d6b-9f0b-48018b5f7393",
            "c1cb7a33-ed9b-4cf1-9958-f3162fed8ee8"
          ],
          "names": null
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "get": [
          {
            "timeSeriesType": {
              "id": "1be09af9-f089-4d6b-9f0b-48018b5f7393",
              "name": "DefaultType",
              "description": "Default type",
              "variables": {
                "EventCount": {
                  "kind": "aggregate",
                  "filter": null,
                  "aggregation": {
                    "tsx": "count()"
                  }
                }
              }
            },
            "error": null
          },
          {
            "timeSeriesType": {
              "id": "c1cb7a33-ed9b-4cf1-9958-f3162fed8ee8",
              "name": "TemperatureSensor",
              "description": "This is a temperature sensor.",
              "variables": {
                "AverageTemperature": {
                  "kind": "numeric",
                  "value": {
                    "tsx": "$event.Temperature.Double"
                  },
                  "filter": null,
                  "aggregation": {
                    "tsx": "avg($value)"
                  }
                }
              }
            },
            "error": null
          }
        ]
      }
- name: TypesBatchGetByNames
  request:
    uri: POST https://10000000-0000-0000-0000-100000000109.env.timeseries.azure.com/timeseries/types/$batch?api-version=2018-11-01-preview
    body: >-
      {
        "get": {
          "names": [
            "DefaultType",
            "TemperatureSensor"
          ]
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "get": [
          {
            "timeSeriesType": {
              "id": "1be09af9-f089-4d6b-9f0b-48018b5f7393",
              "name": "DefaultType",
              "description": "Default type",
              "variables": {
                "EventCount": {
                  "kind": "aggregate",
                  "filter": null,
                  "aggregation": {
                    "tsx": "count()"
                  }
                }
              }
            },
            "error": null
          },
          {
            "timeSeriesType": {
              "id": "c1cb7a33-ed9b-4cf1-9958-f3162fed8ee8",
              "name": "TemperatureSensor",
              "description": "This is a temperature sensor.",
              "variables": {
                "AverageTemperature": {
                  "kind": "numeric",
                  "value": {
                    "tsx": "$event.Temperature.Double"
                  },
                  "filter": null,
                  "aggregation": {
                    "tsx": "avg($value)"
                  }
                }
              }
            },
            "error": null
          }
        ]
      }
- name: TypesBatchPut
  request:
    uri: POST https://10000000-0000-0000-0000-100000000109.env.timeseries.azure.com/timeseries/types/$batch?api-version=2018-11-01-preview
    body: >-
      {
        "put": [
          {
            "id": "1be09af9-f089-4d6b-9f0b-48018b5f7393",
            "name": "DefaultType",
            "description": "My Default type",
            "variables": {
              "EventCount": {
                "kind": "aggregate",
                "filter": null,
                "aggregation": {
                  "tsx": "count()"
                }
              }
            }
          },
          {
            "id": "c1cb7a33-ed9b-4cf1-9958-f3162fed8ee8",
            "name": "OutdoorTemperatureSensor",
            "description": "This is an outdoor temperature sensor.",
            "variables": {
              "AverageTemperature": {
                "kind": "numeric",
                "value": {
                  "tsx": "$event.Temperature.Double"
                },
                "filter": {
                  "tsx": "$event.Mode.String = 'outdoor'"
                },
                "aggregation": {
                  "tsx": "avg($value)"
                }
              }
            }
          }
        ]
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "put": [
          {
            "timeSeriesType": {
              "id": "1be09af9-f089-4d6b-9f0b-48018b5f7393",
              "name": "DefaultType",
              "description": "My Default type",
              "variables": {
                "EventCount": {
                  "kind": "aggregate",
                  "filter": null,
                  "aggregation": {
                    "tsx": "count()"
                  }
                }
              }
            },
            "error": null
          },
          {
            "timeSeriesType": {
              "id": "c1cb7a33-ed9b-4cf1-9958-f3162fed8ee8",
              "name": "OutdoorTemperatureSensor",
              "description": "This is an outdoor temperature sensor.",
              "variables": {
                "AverageTemperature": {
                  "kind": "numeric",
                  "value": {
                    "tsx": "$event.Temperature.Double"
                  },
                  "filter": {
                    "tsx": "$event.Mode.String = 'outdoor'"
                  },
                  "aggregation": {
                    "tsx": "avg($value)"
                  }
                }
              }
            },
            "error": null
          }
        ]
      }
- name: TypesBatchDeleteByIds
  request:
    uri: POST https://10000000-0000-0000-0000-100000000109.env.timeseries.azure.com/timeseries/types/$batch?api-version=2018-11-01-preview
    body: >-
      {
        "delete": {
          "typeIds": [
            "9250f816-faed-44c4-88e6-630e5eefa38b"
          ]
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "delete": [
          null
        ]
      }
- name: TypesBatchDeleteByNames
  request:
    uri: POST https://10000000-0000-0000-0000-100000000109.env.timeseries.azure.com/timeseries/types/$batch?api-version=2018-11-01-preview
    body: >-
      {
        "delete": {
          "names": [
            "TemperatureSensor"
          ]
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "delete": [
          null
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Time Series Insights service - Executes a batch get, create, update, delete operation on multiple time series types.
errorCodes: []
