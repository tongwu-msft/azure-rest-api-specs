### YamlMime:RESTOperation
uid: keyvault.getsecretversions.getsecretversions
name: Get Secret Versions
service: Key Vault
groupName: Get Secret Versions
apiVersion: "7.0"
summary: "List all versions of the specified secret.  \nThe full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission."
consumes:
- application/json
produces:
- application/json
paths:
- content: GET {vaultBaseUrl}/secrets/{secret-name}/versions?api-version=7.0
- content: GET {vaultBaseUrl}/secrets/{secret-name}/versions?maxresults={maxresults}&api-version=7.0
  isOptional: true
uriParameters:
- name: vaultBaseUrl
  in: path
  isRequired: true
  description: The vault name, for example https://myvault.vault.azure.net.
  types:
  - uid: string
- name: secret-name
  in: path
  isRequired: true
  description: The name of the secret.
  types:
  - uid: string
- name: maxresults
  in: query
  description: Maximum number of results to return in a page. If not specified, the service will return up to 25 results.
  types:
  - uid: integer
  format: int32
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: A response message containing a list of secrets along with a link to the next page of secrets.
  types:
  - uid: SecretListResult
- name: Other Status Codes
  description: Key Vault error response describing why the operation failed.
  types:
  - uid: KeyVaultError
requestHeader: []
definitions:
- name: SecretListResult
  description: The secret list result.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: A response message containing a list of secrets in the key vault along with a link to the next page of secrets.
    types:
    - uid: SecretItem
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: The URL to get the next set of secrets.
    types:
    - uid: string
- name: KeyVaultError
  description: The key vault error exception.
  kind: object
  properties:
  - name: error
    isReadyOnly: true
    description: The key vault server error.
    types:
    - uid: Error
- name: SecretItem
  description: The secret item containing secret metadata.
  kind: object
  properties:
  - name: id
    description: Secret identifier.
    types:
    - uid: string
  - name: attributes
    description: The secret management attributes.
    types:
    - uid: SecretAttributes
  - name: tags
    description: Application specific metadata in the form of key-value pairs.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: contentType
    description: Type of the secret value such as a password.
    types:
    - uid: string
  - name: managed
    isReadyOnly: true
    description: True if the secret's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true.
    types:
    - uid: boolean
- name: Error
  description: The key vault server error.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: innererror
    isReadyOnly: true
    description: The key vault server error.
    types:
    - uid: Error
- name: SecretAttributes
  description: The secret management attributes.
  kind: object
  properties:
  - name: recoveryLevel
    isReadyOnly: true
    description: Reflects the deletion recovery level currently in effect for secrets in the current vault. If it contains 'Purgeable', the secret can be permanently deleted by a privileged user; otherwise, only the system can purge the secret, at the end of the retention interval.
    types:
    - uid: DeletionRecoveryLevel
  - name: enabled
    description: Determines whether the object is enabled.
    types:
    - uid: boolean
  - name: nbf
    description: Not before date in UTC.
    types:
    - uid: integer
  - name: exp
    description: Expiry date in UTC.
    types:
    - uid: integer
  - name: created
    isReadyOnly: true
    description: Creation time in UTC.
    types:
    - uid: integer
  - name: updated
    isReadyOnly: true
    description: Last updated time in UTC.
    types:
    - uid: integer
- name: DeletionRecoveryLevel
  description: Reflects the deletion recovery level currently in effect for keys in the current vault. If it contains 'Purgeable' the key can be permanently deleted by a privileged user; otherwise, only the system can purge the key, at the end of the retention interval.
  kind: enum
  properties:
  - name: Purgeable
    types:
    - uid: string
  - name: Recoverable+Purgeable
    types:
    - uid: string
  - name: Recoverable
    types:
    - uid: string
  - name: Recoverable+ProtectedSubscription
    types:
    - uid: string
examples:
- name: GetSecretVersions
  request:
    uri: GET {vaultBaseUrl}/secrets/listsecretversionstest/versions?maxresults=1&api-version=7.0
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "https://testvault1021.vault.azure.net/secrets/listsecretversionstest/11a536561da34d6b8b452d880df58f3a",
            "attributes": {
              "enabled": true,
              "created": 1481851699,
              "updated": 1481851699
            }
          }
        ],
        "nextLink": "https://testvault1021.vault.azure.net:443/secrets/listsecretversionstest/versions?api-version=7.0&$skiptoken=eyJOZXh0TWFya2VyIjoiMiExNDQhTURBd01EWXlJWE5sWTNKbGRDOU1TVk5VVTBWRFVrVlVWa1ZTVTBsUFRsTlVSVk5VTHpGRU5EazJNa0l4UlVRM09EUkVRa1k0T1RsR016TXpNa1UwTnpZNFFqY3dJVEF3TURBeU9DRTVPVGs1TFRFeUxUTXhWREl6T2pVNU9qVTVMams1T1RrNU9UbGFJUS0tIiwiVGFyZ2V0TG9jYXRpb24iOjB9&maxresults=1"
      }
security: []
