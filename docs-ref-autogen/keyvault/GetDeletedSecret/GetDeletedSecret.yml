### YamlMime:RESTOperation
uid: keyvault.getdeletedsecret.getdeletedsecret
name: Get Deleted Secret
service: Key Vault
groupName: Get Deleted Secret
apiVersion: "7.0"
summary: "Gets the specified deleted secret.  \nThe Get Deleted Secret operation returns the specified deleted secret along with its attributes. This operation requires the secrets/get permission."
consumes:
- application/json
produces:
- application/json
paths:
- content: GET {vaultBaseUrl}/deletedsecrets/{secret-name}?api-version=7.0
uriParameters:
- name: vaultBaseUrl
  in: path
  isRequired: true
  description: The vault name, for example https://myvault.vault.azure.net.
  types:
  - uid: string
- name: secret-name
  in: path
  isRequired: true
  description: The name of the secret.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: A secret bundle of the secret and its attributes.
  types:
  - uid: DeletedSecretBundle
- name: Other Status Codes
  description: Key Vault error response describing why the operation failed.
  types:
  - uid: KeyVaultError
requestHeader: []
definitions:
- name: DeletedSecretBundle
  description: A Deleted Secret consisting of its previous id, attributes and its tags, as well as information on when it will be purged.
  kind: object
  properties:
  - name: recoveryId
    description: The url of the recovery object, used to identify and recover the deleted secret.
    types:
    - uid: string
  - name: scheduledPurgeDate
    isReadyOnly: true
    description: The time when the secret is scheduled to be purged, in UTC
    types:
    - uid: integer
  - name: deletedDate
    isReadyOnly: true
    description: The time when the secret was deleted, in UTC
    types:
    - uid: integer
  - name: value
    description: The secret value.
    types:
    - uid: string
  - name: id
    description: The secret id.
    types:
    - uid: string
  - name: contentType
    description: The content type of the secret.
    types:
    - uid: string
  - name: attributes
    description: The secret management attributes.
    types:
    - uid: SecretAttributes
  - name: tags
    description: Application specific metadata in the form of key-value pairs.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: kid
    isReadyOnly: true
    description: If this is a secret backing a KV certificate, then this field specifies the corresponding key backing the KV certificate.
    types:
    - uid: string
  - name: managed
    isReadyOnly: true
    description: True if the secret's lifetime is managed by key vault. If this is a secret backing a certificate, then managed will be true.
    types:
    - uid: boolean
- name: KeyVaultError
  description: The key vault error exception.
  kind: object
  properties:
  - name: error
    isReadyOnly: true
    description: The key vault server error.
    types:
    - uid: Error
- name: SecretAttributes
  description: The secret management attributes.
  kind: object
  properties:
  - name: recoveryLevel
    isReadyOnly: true
    description: Reflects the deletion recovery level currently in effect for secrets in the current vault. If it contains 'Purgeable', the secret can be permanently deleted by a privileged user; otherwise, only the system can purge the secret, at the end of the retention interval.
    types:
    - uid: DeletionRecoveryLevel
  - name: enabled
    description: Determines whether the object is enabled.
    types:
    - uid: boolean
  - name: nbf
    description: Not before date in UTC.
    types:
    - uid: integer
  - name: exp
    description: Expiry date in UTC.
    types:
    - uid: integer
  - name: created
    isReadyOnly: true
    description: Creation time in UTC.
    types:
    - uid: integer
  - name: updated
    isReadyOnly: true
    description: Last updated time in UTC.
    types:
    - uid: integer
- name: Error
  description: The key vault server error.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: innererror
    isReadyOnly: true
    description: The key vault server error.
    types:
    - uid: Error
- name: DeletionRecoveryLevel
  description: Reflects the deletion recovery level currently in effect for keys in the current vault. If it contains 'Purgeable' the key can be permanently deleted by a privileged user; otherwise, only the system can purge the key, at the end of the retention interval.
  kind: enum
  properties:
  - name: Purgeable
    types:
    - uid: string
  - name: Recoverable+Purgeable
    types:
    - uid: string
  - name: Recoverable
    types:
    - uid: string
  - name: Recoverable+ProtectedSubscription
    types:
    - uid: string
examples:
- name: GetDeletedSecret
  request:
    uri: GET {vaultBaseUrl}/deletedsecrets/GetDeletedSecretTest?api-version=7.0
  responses:
  - statusCode: "200"
    body: >-
      {
        "recoveryId": "https://kv-sdk-test.vault-int.azure-int.net/deletedsecrets/GetDeletedSecretTest",
        "deletedDate": 1493938433,
        "scheduledPurgeDate": 1501714433,
        "id": "https://kv-sdk-test.vault-int.azure-int.net/secrets/GetDeletedSecretTest/b595353d9c39413d80626575b3b5d865",
        "attributes": {
          "enabled": true,
          "created": 1493938433,
          "updated": 1493938433,
          "recoveryLevel": "Recoverable+Purgeable"
        }
      }
security: []
errorCodes: []
