{
  "swagger": "2.0",
  "info": {
    "version": "7.0",
    "title": "KeyVaultClient",
    "description": "The key vault client performs cryptographic key operations and vault operations against the Key Vault service."
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{vaultBaseUrl}",
    "useSchemePrefix": false,
    "positionInOperation": "first",
    "parameters": [
      {
        "name": "vaultBaseUrl",
        "description": "The vault name, for example https://myvault.vault.azure.net.",
        "required": true,
        "type": "string",
        "in": "path",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "paths": {
    "/certificates/restore": {
      "post": {
        "tags": [
          "Certificates"
        ],
        "operationId": "RestoreCertificate",
        "summary": "Restores a backed up certificate to a vault.",
        "description": "Restores a backed up certificate, and all its versions, to a vault. This operation requires the certificates/restore permission.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/CertificateRestoreParameters"
            },
            "description": "The parameters to restore the certificate."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Restored certificate bundle in the vault.",
            "schema": {
              "$ref": "#/definitions/CertificateBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "RestoreCertificate": {
            "parameters": {
              "certificateName": "testcert",
              "api-version": "7.0",
              "value": ""
            },
            "responses": {
              "200": {
                "body": {
                  "id": "https://demovault-rude-junior-95.vault.azure.net/certificates/testcert/21983500952149bbb3129b0c60e367a6",
                  "kid": "https://demovault-rude-junior-95.vault.azure.net/keys/testcert/21983500952149bbb3129b0c60e367a6",
                  "sid": "https://demovault-rude-junior-95.vault.azure.net/secrets/testcert/21983500952149bbb3129b0c60e367a6",
                  "x5t": "Z-n6Mydb08bmyOgk7bmx5HT8tyo",
                  "cer": "MIIDMjCCAhqgAwIBAgIQGn/FrGQZT/Cd9kgXIsytEjANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDEwtleGFtcGxlLmNvbTAeFw0xODA0MTcxODI2MjZaFw0xOTA0MTcxODM2MjZaMBYxFDASBgNVBAMTC2V4YW1wbGUuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsODIu9EJhfnn57k4++j6dC1M6Egi9aZucFQ9Jc29vFG9L9BkzllPGluKKdH1ypsrAUif7yGaq5d1nDyLhZUncU8dV/YIA7oll/fC+d0H4A37kVbM/60zXhXnKRx+DRZ2hJQzNBOodCaZpyZZEuYvtWdSCSILpa0R7yXYevjLaG5LfckOzuurXqeos7WB+l2q1c+6zx1KbNXbBl7QOz2nzk9oJU7CdhPOc+LOLppmsXRwwluKtmCDyKdrKAF/dANp5zGXFsognQcRctLSGQp8FbgBVQyZ+v81n9bPpSaBoUQMcH4uG9jPO6CWwbDSWE+FVYAm5kgjuW/1hqRSnOEV8QIDAQABo3wwejAOBgNVHQ8BAf8EBAMCBaAwCQYDVR0TBAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHwYDVR0jBBgwFoAUaYJoBFokrORdsxOTA8sgrosMOmgwHQYDVR0OBBYEFGmCaARaJKzkXbMTkwPLIK6LDDpoMA0GCSqGSIb3DQEBCwUAA4IBAQAxL3t0kV1dq/PGUztjW+qK6Nh4sx7jsU59JtjON6zcibJ4hM+Q3Z+cEvW9zuGkuTbLz6fKNL9VnkF1LnlWTsyRmS7bF15/7iOgfdrr0vkJKVM1Zv/tqKEpBJ7Cbc0vW/VJQxZN+OlqGNc9bcx3cnqkRwpkgM25T0dVpoWtCgMwayUtbPFbTZWHHbpzHLF2BzYf5HyW1BoKXcVPM3r/rS7RETasRRsz2GqXXdfhjCd+HKVyv5kD9N3WcFNUsaq3TqAUZyOx9bO0Cn3gkmgz05JpfhPEylXwVpVAccOoXsNoFdxEKGO0w7pk7PwOhsW8sFprdXWp6OxtL0rrCNFF/llT",
                  "attributes": {
                    "enabled": true,
                    "nbf": 1523989586,
                    "exp": 1555526186,
                    "created": 1523990186,
                    "updated": 1523990186,
                    "recoveryLevel": "Purgeable"
                  },
                  "policy": {
                    "id": "https://rude-junior-95.vault.azure.net/certificates/testcert/policy",
                    "key_props": {
                      "exportable": true,
                      "kty": "RSA",
                      "key_size": 2048,
                      "reuse_key": false
                    },
                    "secret_props": {
                      "contentType": "application/x-pkcs12"
                    },
                    "x509_props": {
                      "subject": "CN=example.com",
                      "ekus": [
                        "1.3.6.1.5.5.7.3.1",
                        "1.3.6.1.5.5.7.3.2"
                      ],
                      "key_usage": [
                        "digitalSignature",
                        "keyEncipherment"
                      ],
                      "validity_months": 12,
                      "basic_constraints": {
                        "ca": false
                      }
                    },
                    "lifetime_actions": [
                      {
                        "trigger": {
                          "lifetime_percentage": 80
                        },
                        "action": {
                          "action_type": "AutoRenew"
                        }
                      }
                    ],
                    "issuer": {
                      "name": "Self"
                    },
                    "attributes": {
                      "enabled": true,
                      "created": 1523990175,
                      "updated": 1523990175
                    }
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Restore Certificate"
      }
    }
  },
  "definitions": {
    "Attributes": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Determines whether the object is enabled."
        },
        "nbf": {
          "x-ms-client-name": "NotBefore",
          "type": "integer",
          "format": "unixtime",
          "description": "Not before date in UTC."
        },
        "exp": {
          "x-ms-client-name": "Expires",
          "type": "integer",
          "format": "unixtime",
          "description": "Expiry date in UTC."
        },
        "created": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Creation time in UTC."
        },
        "updated": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Last updated time in UTC."
        }
      },
      "description": "The object attributes managed by the KeyVault service."
    },
    "JsonWebKey": {
      "properties": {
        "kid": {
          "type": "string",
          "description": "Key identifier."
        },
        "kty": {
          "type": "string",
          "description": "JsonWebKey Key Type (kty), as defined in https://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-40.",
          "enum": [
            "EC",
            "EC-HSM",
            "RSA",
            "RSA-HSM",
            "oct"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeyType",
            "modelAsString": true,
            "values": [
              {
                "value": "EC",
                "description": "Elliptic Curve."
              },
              {
                "value": "EC-HSM",
                "description": "Elliptic Curve with a private key which is not exportable from the HSM."
              },
              {
                "value": "RSA",
                "description": "RSA (https://tools.ietf.org/html/rfc3447)"
              },
              {
                "value": "RSA-HSM",
                "description": "RSA with a private key which is not exportable from the HSM."
              },
              {
                "value": "oct",
                "description": "Octet sequence (used to represent symmetric keys)"
              }
            ]
          }
        },
        "key_ops": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Supported key operations."
          }
        },
        "n": {
          "type": "string",
          "format": "base64url",
          "description": "RSA modulus."
        },
        "e": {
          "type": "string",
          "format": "base64url",
          "description": "RSA public exponent."
        },
        "d": {
          "type": "string",
          "format": "base64url",
          "description": "RSA private exponent, or the D component of an EC private key."
        },
        "dp": {
          "x-ms-client-name": "DP",
          "type": "string",
          "format": "base64url",
          "description": "RSA private key parameter."
        },
        "dq": {
          "x-ms-client-name": "DQ",
          "type": "string",
          "format": "base64url",
          "description": "RSA private key parameter."
        },
        "qi": {
          "x-ms-client-name": "QI",
          "type": "string",
          "format": "base64url",
          "description": "RSA private key parameter."
        },
        "p": {
          "type": "string",
          "format": "base64url",
          "description": "RSA secret prime."
        },
        "q": {
          "type": "string",
          "format": "base64url",
          "description": "RSA secret prime, with p < q."
        },
        "k": {
          "type": "string",
          "format": "base64url",
          "description": "Symmetric key."
        },
        "key_hsm": {
          "x-ms-client-name": "t",
          "type": "string",
          "format": "base64url",
          "description": "HSM Token, used with 'Bring Your Own Key'."
        },
        "crv": {
          "type": "string",
          "description": "Elliptic curve name. For valid values, see JsonWebKeyCurveName.",
          "enum": [
            "P-256",
            "P-384",
            "P-521",
            "P-256K"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeyCurveName",
            "modelAsString": true,
            "values": [
              {
                "value": "P-256",
                "description": "The NIST P-256 elliptic curve, AKA SECG curve SECP256R1."
              },
              {
                "value": "P-384",
                "description": "The NIST P-384 elliptic curve, AKA SECG curve SECP384R1."
              },
              {
                "value": "P-521",
                "description": "The NIST P-521 elliptic curve, AKA SECG curve SECP521R1."
              },
              {
                "value": "P-256K",
                "description": "The SECG SECP256K1 elliptic curve."
              }
            ]
          }
        },
        "x": {
          "type": "string",
          "format": "base64url",
          "description": "X component of an EC public key."
        },
        "y": {
          "type": "string",
          "format": "base64url",
          "description": "Y component of an EC public key."
        }
      },
      "description": "As of http://tools.ietf.org/html/draft-ietf-jose-json-web-key-18"
    },
    "KeyAttributes": {
      "allOf": [
        {
          "$ref": "#/definitions/Attributes"
        }
      ],
      "properties": {
        "recoveryLevel": {
          "type": "string",
          "description": "Reflects the deletion recovery level currently in effect for keys in the current vault. If it contains 'Purgeable' the key can be permanently deleted by a privileged user; otherwise, only the system can purge the key, at the end of the retention interval.",
          "enum": [
            "Purgeable",
            "Recoverable+Purgeable",
            "Recoverable",
            "Recoverable+ProtectedSubscription"
          ],
          "x-ms-enum": {
            "name": "DeletionRecoveryLevel",
            "modelAsString": true
          },
          "readOnly": true,
          "x-nullable": false
        }
      },
      "description": "The attributes of a key managed by the key vault service."
    },
    "KeyBundle": {
      "properties": {
        "key": {
          "$ref": "#/definitions/JsonWebKey",
          "description": "The Json web key."
        },
        "attributes": {
          "$ref": "#/definitions/KeyAttributes",
          "description": "The key management attributes."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        },
        "managed": {
          "type": "boolean",
          "readOnly": true,
          "description": "True if the key's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true."
        }
      },
      "description": "A KeyBundle consisting of a WebKey plus its attributes."
    },
    "KeyItem": {
      "properties": {
        "kid": {
          "type": "string",
          "description": "Key identifier."
        },
        "attributes": {
          "$ref": "#/definitions/KeyAttributes",
          "description": "The key management attributes."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        },
        "managed": {
          "type": "boolean",
          "readOnly": true,
          "description": "True if the key's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true."
        }
      },
      "description": "The key item containing key metadata."
    },
    "DeletedKeyBundle": {
      "allOf": [
        {
          "$ref": "#/definitions/KeyBundle"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted key."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the key is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the key was deleted, in UTC"
        }
      },
      "description": "A DeletedKeyBundle consisting of a WebKey plus its Attributes and deletion info"
    },
    "DeletedKeyItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KeyItem"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted key."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the key is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the key was deleted, in UTC"
        }
      },
      "description": "The deleted key item containing the deleted key metadata and information about deletion."
    },
    "SecretBundle": {
      "properties": {
        "value": {
          "type": "string",
          "description": "The secret value."
        },
        "id": {
          "type": "string",
          "description": "The secret id."
        },
        "contentType": {
          "type": "string",
          "description": "The content type of the secret."
        },
        "attributes": {
          "$ref": "#/definitions/SecretAttributes",
          "description": "The secret management attributes."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        },
        "kid": {
          "type": "string",
          "readOnly": true,
          "description": "If this is a secret backing a KV certificate, then this field specifies the corresponding key backing the KV certificate."
        },
        "managed": {
          "type": "boolean",
          "readOnly": true,
          "description": "True if the secret's lifetime is managed by key vault. If this is a secret backing a certificate, then managed will be true."
        }
      },
      "description": "A secret consisting of a value, id and its attributes."
    },
    "SecretItem": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Secret identifier."
        },
        "attributes": {
          "$ref": "#/definitions/SecretAttributes",
          "description": "The secret management attributes."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        },
        "contentType": {
          "type": "string",
          "description": "Type of the secret value such as a password."
        },
        "managed": {
          "type": "boolean",
          "readOnly": true,
          "description": "True if the secret's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true."
        }
      },
      "description": "The secret item containing secret metadata."
    },
    "DeletedSecretBundle": {
      "allOf": [
        {
          "$ref": "#/definitions/SecretBundle"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted secret."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the secret is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the secret was deleted, in UTC"
        }
      },
      "description": "A Deleted Secret consisting of its previous id, attributes and its tags, as well as information on when it will be purged."
    },
    "DeletedSecretItem": {
      "allOf": [
        {
          "$ref": "#/definitions/SecretItem"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted secret."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the secret is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the secret was deleted, in UTC"
        }
      },
      "description": "The deleted secret item containing metadata about the deleted secret."
    },
    "SecretAttributes": {
      "allOf": [
        {
          "$ref": "#/definitions/Attributes"
        }
      ],
      "properties": {
        "recoveryLevel": {
          "type": "string",
          "description": "Reflects the deletion recovery level currently in effect for secrets in the current vault. If it contains 'Purgeable', the secret can be permanently deleted by a privileged user; otherwise, only the system can purge the secret, at the end of the retention interval.",
          "enum": [
            "Purgeable",
            "Recoverable+Purgeable",
            "Recoverable",
            "Recoverable+ProtectedSubscription"
          ],
          "x-ms-enum": {
            "name": "DeletionRecoveryLevel",
            "modelAsString": true
          },
          "readOnly": true,
          "x-nullable": false
        }
      },
      "description": "The secret management attributes."
    },
    "SecretRestoreParameters": {
      "properties": {
        "value": {
          "type": "string",
          "x-ms-client-name": "secretBundleBackup",
          "format": "base64url",
          "description": "The backup blob associated with a secret bundle."
        }
      },
      "description": "The secret restore parameters.",
      "required": [
        "value"
      ]
    },
    "StorageRestoreParameters": {
      "properties": {
        "value": {
          "type": "string",
          "x-ms-client-name": "storageBundleBackup",
          "format": "base64url",
          "description": "The backup blob associated with a storage account."
        }
      },
      "description": "The secret restore parameters.",
      "required": [
        "value"
      ]
    },
    "CertificateAttributes": {
      "allOf": [
        {
          "$ref": "#/definitions/Attributes"
        }
      ],
      "properties": {
        "recoveryLevel": {
          "type": "string",
          "description": "Reflects the deletion recovery level currently in effect for certificates in the current vault. If it contains 'Purgeable', the certificate can be permanently deleted by a privileged user; otherwise, only the system can purge the certificate, at the end of the retention interval.",
          "enum": [
            "Purgeable",
            "Recoverable+Purgeable",
            "Recoverable",
            "Recoverable+ProtectedSubscription"
          ],
          "x-ms-enum": {
            "name": "DeletionRecoveryLevel",
            "modelAsString": true
          },
          "readOnly": true,
          "x-nullable": false
        }
      },
      "description": "The certificate management attributes."
    },
    "CertificateItem": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Certificate identifier."
        },
        "attributes": {
          "$ref": "#/definitions/CertificateAttributes",
          "description": "The certificate management attributes."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        },
        "x5t": {
          "x-ms-client-name": "X509Thumbprint",
          "type": "string",
          "format": "base64url",
          "description": "Thumbprint of the certificate."
        }
      },
      "description": "The certificate item containing certificate metadata."
    },
    "CertificateIssuerItem": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Certificate Identifier."
        },
        "provider": {
          "type": "string",
          "description": "The issuer provider."
        }
      },
      "description": "The certificate issuer item containing certificate issuer metadata."
    },
    "CertificateBundle": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The certificate id.",
          "readOnly": true
        },
        "kid": {
          "type": "string",
          "description": "The key id.",
          "readOnly": true
        },
        "sid": {
          "type": "string",
          "description": "The secret id.",
          "readOnly": true
        },
        "x5t": {
          "x-ms-client-name": "X509Thumbprint",
          "type": "string",
          "format": "base64url",
          "description": "Thumbprint of the certificate.",
          "readOnly": true
        },
        "policy": {
          "$ref": "#/definitions/CertificatePolicy",
          "description": "The management policy.",
          "readOnly": true
        },
        "cer": {
          "type": "string",
          "format": "byte",
          "description": "CER contents of x509 certificate."
        },
        "contentType": {
          "type": "string",
          "description": "The content type of the secret."
        },
        "attributes": {
          "$ref": "#/definitions/CertificateAttributes",
          "description": "The certificate attributes."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs"
        }
      },
      "description": "A certificate bundle consists of a certificate (X509) plus its attributes."
    },
    "DeletedCertificateBundle": {
      "allOf": [
        {
          "$ref": "#/definitions/CertificateBundle"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted certificate."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the certificate is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the certificate was deleted, in UTC"
        }
      },
      "description": "A Deleted Certificate consisting of its previous id, attributes and its tags, as well as information on when it will be purged."
    },
    "DeletedCertificateItem": {
      "allOf": [
        {
          "$ref": "#/definitions/CertificateItem"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted certificate."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the certificate is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the certificate was deleted, in UTC"
        }
      },
      "description": "The deleted certificate item containing metadata about the deleted certificate."
    },
    "CertificateOperation": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The certificate id.",
          "readOnly": true
        },
        "issuer": {
          "x-ms-client-name": "IssuerParameters",
          "$ref": "#/definitions/IssuerParameters",
          "description": "Parameters for the issuer of the X509 component of a certificate."
        },
        "csr": {
          "type": "string",
          "format": "byte",
          "description": "The certificate signing request (CSR) that is being used in the certificate operation."
        },
        "cancellation_requested": {
          "type": "boolean",
          "description": "Indicates if cancellation was requested on the certificate operation."
        },
        "status": {
          "type": "string",
          "description": "Status of the certificate operation."
        },
        "status_details": {
          "type": "string",
          "description": "The status details of the certificate operation."
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Error encountered, if any, during the certificate operation."
        },
        "target": {
          "type": "string",
          "description": "Location which contains the result of the certificate operation."
        },
        "request_id": {
          "type": "string",
          "description": "Identifier for the certificate operation."
        }
      },
      "description": "A certificate operation is returned in case of asynchronous requests."
    },
    "CertificatePolicy": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The certificate id.",
          "readOnly": true
        },
        "key_props": {
          "x-ms-client-name": "KeyProperties",
          "$ref": "#/definitions/KeyProperties",
          "description": "Properties of the key backing a certificate."
        },
        "secret_props": {
          "x-ms-client-name": "SecretProperties",
          "$ref": "#/definitions/SecretProperties",
          "description": "Properties of the secret backing a certificate."
        },
        "x509_props": {
          "x-ms-client-name": "X509CertificateProperties",
          "$ref": "#/definitions/X509CertificateProperties",
          "description": "Properties of the X509 component of a certificate."
        },
        "lifetime_actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LifetimeAction"
          },
          "description": "Actions that will be performed by Key Vault over the lifetime of a certificate."
        },
        "issuer": {
          "x-ms-client-name": "IssuerParameters",
          "$ref": "#/definitions/IssuerParameters",
          "description": "Parameters for the issuer of the X509 component of a certificate."
        },
        "attributes": {
          "$ref": "#/definitions/CertificateAttributes",
          "description": "The certificate attributes."
        }
      },
      "description": "Management policy for a certificate."
    },
    "KeyProperties": {
      "properties": {
        "exportable": {
          "type": "boolean",
          "description": "Indicates if the private key can be exported."
        },
        "kty": {
          "x-ms-client-name": "keyType",
          "type": "string",
          "description": "The type of key pair to be used for the certificate.",
          "enum": [
            "EC",
            "EC-HSM",
            "RSA",
            "RSA-HSM",
            "oct"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeyType",
            "modelAsString": true
          }
        },
        "key_size": {
          "type": "integer",
          "format": "int32",
          "description": "The key size in bits. For example: 2048, 3072, or 4096 for RSA."
        },
        "reuse_key": {
          "type": "boolean",
          "description": "Indicates if the same key pair will be used on certificate renewal."
        },
        "crv": {
          "x-ms-client-name": "curve",
          "type": "string",
          "description": "Elliptic curve name. For valid values, see JsonWebKeyCurveName.",
          "enum": [
            "P-256",
            "P-384",
            "P-521",
            "P-256K"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeyCurveName",
            "modelAsString": true
          }
        }
      },
      "description": "Properties of the key pair backing a certificate."
    },
    "SecretProperties": {
      "properties": {
        "contentType": {
          "type": "string",
          "description": "The media type (MIME type)."
        }
      },
      "description": "Properties of the key backing a certificate."
    },
    "X509CertificateProperties": {
      "properties": {
        "subject": {
          "type": "string",
          "description": "The subject name. Should be a valid X509 distinguished Name."
        },
        "ekus": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The enhanced key usage."
        },
        "sans": {
          "x-ms-client-name": "SubjectAlternativeNames",
          "$ref": "#/definitions/SubjectAlternativeNames",
          "description": "The subject alternative names."
        },
        "key_usage": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "digitalSignature",
              "nonRepudiation",
              "keyEncipherment",
              "dataEncipherment",
              "keyAgreement",
              "keyCertSign",
              "cRLSign",
              "encipherOnly",
              "decipherOnly"
            ],
            "x-ms-enum": {
              "name": "KeyUsageType",
              "modelAsString": true
            }
          },
          "description": "List of key usages."
        },
        "validity_months": {
          "x-ms-client-name": "ValidityInMonths",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "The duration that the certificate is valid in months."
        }
      },
      "description": "Properties of the X509 component of a certificate."
    },
    "IssuerParameters": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the referenced issuer object or reserved names; for example, 'Self' or 'Unknown'."
        },
        "cty": {
          "x-ms-client-name": "CertificateType",
          "type": "string",
          "description": "Certificate type as supported by the provider (optional); for example 'OV-SSL', 'EV-SSL'"
        },
        "cert_transparency": {
          "x-ms-client-name": "CertificateTransparency",
          "type": "boolean",
          "description": "Indicates if the certificates generated under this policy should be published to certificate transparency logs."
        }
      },
      "description": "Parameters for the issuer of the X509 component of a certificate."
    },
    "LifetimeAction": {
      "properties": {
        "trigger": {
          "$ref": "#/definitions/Trigger",
          "description": "The condition that will execute the action."
        },
        "action": {
          "$ref": "#/definitions/Action",
          "description": "The action that will be executed."
        }
      },
      "description": "Action and its trigger that will be performed by Key Vault over the lifetime of a certificate."
    },
    "Action": {
      "properties": {
        "action_type": {
          "type": "string",
          "description": "The type of the action.",
          "enum": [
            "EmailContacts",
            "AutoRenew"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": false
          }
        }
      },
      "description": "The action that will be executed."
    },
    "Trigger": {
      "properties": {
        "lifetime_percentage": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 99,
          "description": "Percentage of lifetime at which to trigger. Value should be between 1 and 99."
        },
        "days_before_expiry": {
          "type": "integer",
          "format": "int32",
          "description": "Days before expiry to attempt renewal. Value should be between 1 and validity_in_months multiplied by 27. If validity_in_months is 36, then value should be between 1 and 972 (36 * 27)."
        }
      },
      "description": "A condition to be satisfied for an action to be executed."
    },
    "SubjectAlternativeNames": {
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Email addresses."
        },
        "dns_names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Domain names."
        },
        "upns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User principal names."
        }
      },
      "description": "The subject alternate names of a X509 object."
    },
    "IssuerBundle": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier for the issuer object.",
          "readOnly": true
        },
        "provider": {
          "type": "string",
          "description": "The issuer provider."
        },
        "credentials": {
          "$ref": "#/definitions/IssuerCredentials",
          "description": "The credentials to be used for the issuer."
        },
        "org_details": {
          "x-ms-client-name": "OrganizationDetails",
          "$ref": "#/definitions/OrganizationDetails",
          "description": "Details of the organization as provided to the issuer."
        },
        "attributes": {
          "$ref": "#/definitions/IssuerAttributes",
          "description": "Attributes of the issuer object."
        }
      },
      "description": "The issuer for Key Vault certificate."
    },
    "IssuerAttributes": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Determines whether the issuer is enabled."
        },
        "created": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Creation time in UTC."
        },
        "updated": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Last updated time in UTC."
        }
      },
      "description": "The attributes of an issuer managed by the Key Vault service."
    },
    "IssuerCredentials": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "The user name/account name/account id."
        },
        "pwd": {
          "x-ms-client-name": "Password",
          "type": "string",
          "description": "The password/secret/account key."
        }
      },
      "description": "The credentials to be used for the certificate issuer."
    },
    "OrganizationDetails": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the organization."
        },
        "admin_details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdministratorDetails"
          },
          "description": "Details of the organization administrator."
        }
      },
      "description": "Details of the organization of the certificate issuer."
    },
    "AdministratorDetails": {
      "properties": {
        "first_name": {
          "type": "string",
          "description": "First name."
        },
        "last_name": {
          "type": "string",
          "description": "Last name."
        },
        "email": {
          "x-ms-client-name": "EmailAddress",
          "type": "string",
          "description": "Email address."
        },
        "phone": {
          "type": "string",
          "description": "Phone number."
        }
      },
      "description": "Details of the organization administrator of the certificate issuer."
    },
    "Contacts": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier for the contacts collection.",
          "readOnly": true
        },
        "contacts": {
          "x-ms-client-name": "ContactList",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "description": "The contact list for the vault certificates."
        }
      },
      "description": "The contacts for the vault certificates."
    },
    "Contact": {
      "properties": {
        "email": {
          "x-ms-client-name": "EmailAddress",
          "type": "string",
          "description": "Email address."
        },
        "name": {
          "type": "string",
          "description": "Name."
        },
        "phone": {
          "type": "string",
          "description": "Phone number."
        }
      },
      "description": "The contact information for the vault certificates."
    },
    "KeyCreateParameters": {
      "properties": {
        "kty": {
          "type": "string",
          "minLength": 1,
          "description": "The type of key to create. For valid values, see JsonWebKeyType.",
          "enum": [
            "EC",
            "EC-HSM",
            "RSA",
            "RSA-HSM",
            "oct"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeyType",
            "modelAsString": true
          }
        },
        "key_size": {
          "type": "integer",
          "format": "int32",
          "description": "The key size in bits. For example: 2048, 3072, or 4096 for RSA."
        },
        "key_ops": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "JSON web key operations. For more information, see JsonWebKeyOperation.",
            "enum": [
              "encrypt",
              "decrypt",
              "sign",
              "verify",
              "wrapKey",
              "unwrapKey"
            ],
            "x-ms-enum": {
              "name": "JsonWebKeyOperation",
              "modelAsString": true
            }
          }
        },
        "attributes": {
          "x-ms-client-name": "keyAttributes",
          "$ref": "#/definitions/KeyAttributes"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        },
        "crv": {
          "x-ms-client-name": "curve",
          "type": "string",
          "description": "Elliptic curve name. For valid values, see JsonWebKeyCurveName.",
          "enum": [
            "P-256",
            "P-384",
            "P-521",
            "P-256K"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeyCurveName",
            "modelAsString": true
          }
        }
      },
      "description": "The key create parameters.",
      "required": [
        "kty"
      ]
    },
    "KeyImportParameters": {
      "properties": {
        "Hsm": {
          "type": "boolean",
          "description": "Whether to import as a hardware key (HSM) or software key."
        },
        "key": {
          "$ref": "#/definitions/JsonWebKey",
          "description": "The Json web key"
        },
        "attributes": {
          "x-ms-client-name": "keyAttributes",
          "$ref": "#/definitions/KeyAttributes",
          "description": "The key management attributes."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The key import parameters.",
      "required": [
        "key"
      ]
    },
    "KeyOperationsParameters": {
      "properties": {
        "alg": {
          "x-ms-client-name": "algorithm",
          "type": "string",
          "minLength": 1,
          "description": "algorithm identifier",
          "enum": [
            "RSA-OAEP",
            "RSA-OAEP-256",
            "RSA1_5"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeyEncryptionAlgorithm",
            "modelAsString": true
          }
        },
        "value": {
          "type": "string",
          "format": "base64url"
        }
      },
      "description": "The key operations parameters.",
      "required": [
        "alg",
        "value"
      ]
    },
    "KeySignParameters": {
      "properties": {
        "alg": {
          "x-ms-client-name": "algorithm",
          "type": "string",
          "minLength": 1,
          "description": "The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.",
          "enum": [
            "PS256",
            "PS384",
            "PS512",
            "RS256",
            "RS384",
            "RS512",
            "RSNULL",
            "ES256",
            "ES384",
            "ES512",
            "ES256K"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeySignatureAlgorithm",
            "modelAsString": true,
            "values": [
              {
                "value": "PS256",
                "description": "RSASSA-PSS using SHA-256 and MGF1 with SHA-256, as described in https://tools.ietf.org/html/rfc7518"
              },
              {
                "value": "PS384",
                "description": "RSASSA-PSS using SHA-384 and MGF1 with SHA-384, as described in https://tools.ietf.org/html/rfc7518"
              },
              {
                "value": "PS512",
                "description": "RSASSA-PSS using SHA-512 and MGF1 with SHA-512, as described in https://tools.ietf.org/html/rfc7518"
              },
              {
                "value": "RS256",
                "description": "RSASSA-PKCS1-v1_5 using SHA-256, as described in https://tools.ietf.org/html/rfc7518"
              },
              {
                "value": "RS384",
                "description": "RSASSA-PKCS1-v1_5 using SHA-384, as described in https://tools.ietf.org/html/rfc7518"
              },
              {
                "value": "RS512",
                "description": "RSASSA-PKCS1-v1_5 using SHA-512, as described in https://tools.ietf.org/html/rfc7518"
              },
              {
                "value": "RSNULL",
                "description": "Reserved"
              },
              {
                "value": "ES256",
                "description": "ECDSA using P-256 and SHA-256, as described in https://tools.ietf.org/html/rfc7518."
              },
              {
                "value": "ES384",
                "description": "ECDSA using P-384 and SHA-384, as described in https://tools.ietf.org/html/rfc7518"
              },
              {
                "value": "ES512",
                "description": "ECDSA using P-521 and SHA-512, as described in https://tools.ietf.org/html/rfc7518"
              },
              {
                "value": "ES256K",
                "description": "ECDSA using P-256K and SHA-256, as described in https://tools.ietf.org/html/rfc7518"
              }
            ]
          }
        },
        "value": {
          "type": "string",
          "format": "base64url"
        }
      },
      "description": "The key operations parameters.",
      "required": [
        "alg",
        "value"
      ]
    },
    "KeyVerifyParameters": {
      "properties": {
        "alg": {
          "x-ms-client-name": "algorithm",
          "type": "string",
          "minLength": 1,
          "description": "The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.",
          "enum": [
            "PS256",
            "PS384",
            "PS512",
            "RS256",
            "RS384",
            "RS512",
            "RSNULL",
            "ES256",
            "ES384",
            "ES512",
            "ES256K"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeySignatureAlgorithm",
            "modelAsString": true
          }
        },
        "digest": {
          "type": "string",
          "format": "base64url",
          "description": "The digest used for signing."
        },
        "value": {
          "x-ms-client-name": "signature",
          "type": "string",
          "format": "base64url",
          "description": "The signature to be verified."
        }
      },
      "description": "The key verify parameters.",
      "required": [
        "alg",
        "digest",
        "value"
      ]
    },
    "KeyUpdateParameters": {
      "properties": {
        "key_ops": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "encrypt",
              "decrypt",
              "sign",
              "verify",
              "wrapKey",
              "unwrapKey"
            ],
            "x-ms-enum": {
              "name": "JsonWebKeyOperation",
              "modelAsString": true
            }
          },
          "description": "Json web key operations. For more information on possible key operations, see JsonWebKeyOperation."
        },
        "attributes": {
          "x-ms-client-name": "keyAttributes",
          "$ref": "#/definitions/KeyAttributes"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The key update parameters."
    },
    "KeyRestoreParameters": {
      "properties": {
        "value": {
          "type": "string",
          "x-ms-client-name": "keyBundleBackup",
          "format": "base64url",
          "description": "The backup blob associated with a key bundle."
        }
      },
      "description": "The key restore parameters.",
      "required": [
        "value"
      ]
    },
    "SecretSetParameters": {
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the secret."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        },
        "contentType": {
          "type": "string",
          "description": "Type of the secret value such as a password."
        },
        "attributes": {
          "x-ms-client-name": "secretAttributes",
          "$ref": "#/definitions/SecretAttributes",
          "description": "The secret management attributes."
        }
      },
      "description": "The secret set parameters.",
      "required": [
        "value"
      ]
    },
    "SecretUpdateParameters": {
      "properties": {
        "contentType": {
          "type": "string",
          "description": "Type of the secret value such as a password."
        },
        "attributes": {
          "x-ms-client-name": "secretAttributes",
          "$ref": "#/definitions/SecretAttributes",
          "description": "The secret management attributes."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The secret update parameters."
    },
    "CertificateCreateParameters": {
      "properties": {
        "policy": {
          "x-ms-client-name": "CertificatePolicy",
          "$ref": "#/definitions/CertificatePolicy",
          "description": "The management policy for the certificate."
        },
        "attributes": {
          "x-ms-client-name": "CertificateAttributes",
          "$ref": "#/definitions/CertificateAttributes",
          "description": "The attributes of the certificate (optional)."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The certificate create parameters."
    },
    "CertificateImportParameters": {
      "properties": {
        "value": {
          "x-ms-client-name": "base64EncodedCertificate",
          "type": "string",
          "description": "Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key."
        },
        "pwd": {
          "x-ms-client-name": "password",
          "type": "string",
          "description": "If the private key in base64EncodedCertificate is encrypted, the password used for encryption."
        },
        "policy": {
          "x-ms-client-name": "CertificatePolicy",
          "$ref": "#/definitions/CertificatePolicy",
          "description": "The management policy for the certificate."
        },
        "attributes": {
          "x-ms-client-name": "CertificateAttributes",
          "$ref": "#/definitions/CertificateAttributes",
          "description": "The attributes of the certificate (optional)."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The certificate import parameters.",
      "required": [
        "value"
      ]
    },
    "CertificateUpdateParameters": {
      "properties": {
        "policy": {
          "x-ms-client-name": "CertificatePolicy",
          "$ref": "#/definitions/CertificatePolicy",
          "description": "The management policy for the certificate."
        },
        "attributes": {
          "x-ms-client-name": "CertificateAttributes",
          "$ref": "#/definitions/CertificateAttributes",
          "description": "The attributes of the certificate (optional)."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The certificate update parameters."
    },
    "CertificateMergeParameters": {
      "properties": {
        "x5c": {
          "x-ms-client-name": "x509Certificates",
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "description": "The certificate or the certificate chain to merge."
        },
        "attributes": {
          "x-ms-client-name": "CertificateAttributes",
          "$ref": "#/definitions/CertificateAttributes",
          "description": "The attributes of the certificate (optional)."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The certificate merge parameters",
      "required": [
        "x5c"
      ]
    },
    "CertificateIssuerSetParameters": {
      "properties": {
        "provider": {
          "type": "string",
          "description": "The issuer provider."
        },
        "credentials": {
          "$ref": "#/definitions/IssuerCredentials",
          "description": "The credentials to be used for the issuer."
        },
        "org_details": {
          "x-ms-client-name": "OrganizationDetails",
          "$ref": "#/definitions/OrganizationDetails",
          "description": "Details of the organization as provided to the issuer."
        },
        "attributes": {
          "$ref": "#/definitions/IssuerAttributes",
          "description": "Attributes of the issuer object."
        }
      },
      "description": "The certificate issuer set parameters.",
      "required": [
        "provider"
      ]
    },
    "CertificateIssuerUpdateParameters": {
      "properties": {
        "provider": {
          "type": "string",
          "description": "The issuer provider."
        },
        "credentials": {
          "$ref": "#/definitions/IssuerCredentials",
          "description": "The credentials to be used for the issuer."
        },
        "org_details": {
          "x-ms-client-name": "OrganizationDetails",
          "$ref": "#/definitions/OrganizationDetails",
          "description": "Details of the organization as provided to the issuer."
        },
        "attributes": {
          "$ref": "#/definitions/IssuerAttributes",
          "description": "Attributes of the issuer object."
        }
      },
      "description": "The certificate issuer update parameters."
    },
    "CertificateOperationUpdateParameter": {
      "properties": {
        "cancellation_requested": {
          "type": "boolean",
          "description": "Indicates if cancellation was requested on the certificate operation."
        }
      },
      "description": "The certificate operation update parameters.",
      "required": [
        "cancellation_requested"
      ]
    },
    "KeyOperationResult": {
      "properties": {
        "kid": {
          "type": "string",
          "description": "Key identifier",
          "readOnly": true
        },
        "value": {
          "x-ms-client-name": "result",
          "type": "string",
          "format": "base64url",
          "readOnly": true
        }
      },
      "description": "The key operation result."
    },
    "KeyVerifyResult": {
      "properties": {
        "value": {
          "type": "boolean",
          "readOnly": true,
          "description": "True if the signature is verified, otherwise false."
        }
      },
      "description": "The key verify result."
    },
    "KeyListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of keys in the key vault along with a link to the next page of keys."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of keys."
        }
      },
      "description": "The key list result."
    },
    "DeletedKeyListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedKeyItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of deleted keys in the vault along with a link to the next page of deleted keys"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of deleted keys."
        }
      },
      "description": "A list of keys that have been deleted in this vault."
    },
    "SecretListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecretItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of secrets in the key vault along with a link to the next page of secrets."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of secrets."
        }
      },
      "description": "The secret list result."
    },
    "DeletedSecretListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedSecretItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of the deleted secrets in the vault along with a link to the next page of deleted secrets"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of deleted secrets."
        }
      },
      "description": "The deleted secret list result"
    },
    "CertificateListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificateItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of certificates in the key vault along with a link to the next page of certificates."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of certificates."
        }
      },
      "description": "The certificate list result."
    },
    "DeletedCertificateListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedCertificateItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of deleted certificates in the vault along with a link to the next page of deleted certificates"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of deleted certificates."
        }
      },
      "description": "A list of certificates that have been deleted in this vault."
    },
    "CertificateIssuerListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificateIssuerItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of certificate issuers in the key vault along with a link to the next page of certificate issuers."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of certificate issuers."
        }
      },
      "description": "The certificate issuer list result."
    },
    "BackupKeyResult": {
      "properties": {
        "value": {
          "type": "string",
          "format": "base64url",
          "readOnly": true,
          "description": "The backup blob containing the backed up key."
        }
      },
      "description": "The backup key result, containing the backup blob."
    },
    "BackupSecretResult": {
      "properties": {
        "value": {
          "type": "string",
          "format": "base64url",
          "readOnly": true,
          "description": "The backup blob containing the backed up secret."
        }
      },
      "description": "The backup secret result, containing the backup blob."
    },
    "BackupStorageResult": {
      "properties": {
        "value": {
          "type": "string",
          "format": "base64url",
          "readOnly": true,
          "description": "The backup blob containing the backed up storage account."
        }
      },
      "description": "The backup storage result, containing the backup blob."
    },
    "PendingCertificateSigningRequestResult": {
      "properties": {
        "value": {
          "type": "string",
          "readOnly": true,
          "description": "The pending certificate signing request as Base64 encoded string."
        }
      },
      "description": "The pending certificate signing request result."
    },
    "StorageAccountAttributes": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "the enabled state of the object."
        },
        "created": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Creation time in UTC."
        },
        "updated": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Last updated time in UTC."
        },
        "recoveryLevel": {
          "type": "string",
          "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
          "enum": [
            "Purgeable",
            "Recoverable+Purgeable",
            "Recoverable",
            "Recoverable+ProtectedSubscription"
          ],
          "x-ms-enum": {
            "name": "DeletionRecoveryLevel",
            "modelAsString": true
          },
          "readOnly": true,
          "x-nullable": false
        }
      },
      "description": "The storage account management attributes."
    },
    "StorageBundle": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The storage account id.",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "The storage account resource id.",
          "readOnly": true
        },
        "activeKeyName": {
          "type": "string",
          "description": "The current active storage account key name.",
          "readOnly": true
        },
        "autoRegenerateKey": {
          "type": "boolean",
          "description": "whether keyvault should manage the storage account for the user.",
          "readOnly": true
        },
        "regenerationPeriod": {
          "type": "string",
          "description": "The key regeneration time duration specified in ISO-8601 format.",
          "readOnly": true
        },
        "attributes": {
          "$ref": "#/definitions/StorageAccountAttributes",
          "description": "The storage account attributes.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs",
          "readOnly": true
        }
      },
      "description": "A Storage account bundle consists of key vault storage account details plus its attributes."
    },
    "DeletedStorageBundle": {
      "allOf": [
        {
          "$ref": "#/definitions/StorageBundle"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted storage account."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the storage account is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the storage account was deleted, in UTC"
        }
      },
      "description": "A deleted storage account bundle consisting of its previous id, attributes and its tags, as well as information on when it will be purged."
    },
    "StorageAccountCreateParameters": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Storage account resource id."
        },
        "activeKeyName": {
          "type": "string",
          "description": "Current active storage account key name."
        },
        "autoRegenerateKey": {
          "type": "boolean",
          "description": "whether keyvault should manage the storage account for the user."
        },
        "regenerationPeriod": {
          "type": "string",
          "description": "The key regeneration time duration specified in ISO-8601 format."
        },
        "attributes": {
          "x-ms-client-name": "StorageAccountAttributes",
          "$ref": "#/definitions/StorageAccountAttributes",
          "description": "The attributes of the storage account."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The storage account create parameters.",
      "required": [
        "resourceId",
        "activeKeyName",
        "autoRegenerateKey"
      ]
    },
    "StorageAccountUpdateParameters": {
      "properties": {
        "activeKeyName": {
          "type": "string",
          "description": "The current active storage account key name."
        },
        "autoRegenerateKey": {
          "type": "boolean",
          "description": "whether keyvault should manage the storage account for the user."
        },
        "regenerationPeriod": {
          "type": "string",
          "description": "The key regeneration time duration specified in ISO-8601 format."
        },
        "attributes": {
          "x-ms-client-name": "StorageAccountAttributes",
          "$ref": "#/definitions/StorageAccountAttributes",
          "description": "The attributes of the storage account."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The storage account update parameters."
    },
    "StorageAccountRegenerteKeyParameters": {
      "properties": {
        "keyName": {
          "type": "string",
          "description": "The storage account key name."
        }
      },
      "description": "The storage account key regenerate parameters.",
      "required": [
        "keyName"
      ]
    },
    "StorageAccountItem": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Storage identifier.",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "Storage account resource Id.",
          "readOnly": true
        },
        "attributes": {
          "$ref": "#/definitions/StorageAccountAttributes",
          "description": "The storage account management attributes.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs.",
          "readOnly": true
        }
      },
      "description": "The storage account item containing storage account metadata."
    },
    "DeletedStorageAccountItem": {
      "allOf": [
        {
          "$ref": "#/definitions/StorageAccountItem"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted storage account."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the storage account is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the storage account was deleted, in UTC"
        }
      },
      "description": "The deleted storage account item containing metadata about the deleted storage account."
    },
    "StorageListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of storage accounts in the key vault along with a link to the next page of storage accounts."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of storage accounts."
        }
      },
      "description": "The storage accounts list result."
    },
    "DeletedStorageListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedStorageAccountItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of the deleted storage accounts in the vault along with a link to the next page of deleted storage accounts"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of deleted storage accounts."
        }
      },
      "description": "The deleted storage account list result"
    },
    "SasDefinitionAttributes": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "the enabled state of the object."
        },
        "created": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Creation time in UTC."
        },
        "updated": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Last updated time in UTC."
        },
        "recoveryLevel": {
          "type": "string",
          "description": "Reflects the deletion recovery level currently in effect for SAS definitions in the current vault. If it contains 'Purgeable' the SAS definition can be permanently deleted by a privileged user; otherwise, only the system can purge the SAS definition, at the end of the retention interval.",
          "enum": [
            "Purgeable",
            "Recoverable+Purgeable",
            "Recoverable",
            "Recoverable+ProtectedSubscription"
          ],
          "x-ms-enum": {
            "name": "DeletionRecoveryLevel",
            "modelAsString": true
          },
          "readOnly": true,
          "x-nullable": false
        }
      },
      "description": "The SAS definition management attributes."
    },
    "SasDefinitionBundle": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The SAS definition id.",
          "readOnly": true
        },
        "sid": {
          "x-ms-client-name": "SecretId",
          "type": "string",
          "description": "Storage account SAS definition secret id.",
          "readOnly": true
        },
        "templateUri": {
          "type": "string",
          "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template.",
          "readOnly": true
        },
        "sasType": {
          "type": "string",
          "description": "The type of SAS token the SAS definition will create.",
          "enum": [
            "account",
            "service"
          ],
          "x-ms-enum": {
            "name": "SasTokenType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "validityPeriod": {
          "type": "string",
          "description": "The validity period of SAS tokens created according to the SAS definition.",
          "readOnly": true
        },
        "attributes": {
          "$ref": "#/definitions/SasDefinitionAttributes",
          "description": "The SAS definition attributes.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs",
          "readOnly": true
        }
      },
      "description": "A SAS definition bundle consists of key vault SAS definition details plus its attributes."
    },
    "DeletedSasDefinitionBundle": {
      "allOf": [
        {
          "$ref": "#/definitions/SasDefinitionBundle"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted SAS definition."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the SAS definition is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the SAS definition was deleted, in UTC"
        }
      },
      "description": "A deleted SAS definition bundle consisting of its previous id, attributes and its tags, as well as information on when it will be purged."
    },
    "SasDefinitionItem": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The storage SAS identifier.",
          "readOnly": true
        },
        "sid": {
          "x-ms-client-name": "SecretId",
          "type": "string",
          "description": "The storage account SAS definition secret id.",
          "readOnly": true
        },
        "attributes": {
          "$ref": "#/definitions/SasDefinitionAttributes",
          "description": "The SAS definition management attributes.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs.",
          "readOnly": true
        }
      },
      "description": "The SAS definition item containing storage SAS definition metadata."
    },
    "DeletedSasDefinitionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/SasDefinitionItem"
        }
      ],
      "properties": {
        "recoveryId": {
          "type": "string",
          "description": "The url of the recovery object, used to identify and recover the deleted SAS definition."
        },
        "scheduledPurgeDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the SAS definition is scheduled to be purged, in UTC"
        },
        "deletedDate": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "The time when the SAS definition was deleted, in UTC"
        }
      },
      "description": "The deleted SAS definition item containing metadata about the deleted SAS definition."
    },
    "SasDefinitionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SasDefinitionItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of SAS definitions along with a link to the next page of SAS definitions."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of SAS definitions."
        }
      },
      "description": "The storage account SAS definition list result."
    },
    "DeletedSasDefinitionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedSasDefinitionItem"
          },
          "readOnly": true,
          "description": "A response message containing a list of the deleted SAS definitions in the vault along with a link to the next page of deleted sas definitions"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of deleted SAS definitions."
        }
      },
      "description": "The deleted SAS definition list result"
    },
    "SasDefinitionCreateParameters": {
      "properties": {
        "templateUri": {
          "type": "string",
          "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template."
        },
        "sasType": {
          "type": "string",
          "description": "The type of SAS token the SAS definition will create.",
          "enum": [
            "account",
            "service"
          ],
          "x-ms-enum": {
            "name": "SasTokenType",
            "modelAsString": true
          }
        },
        "validityPeriod": {
          "type": "string",
          "description": "The validity period of SAS tokens created according to the SAS definition."
        },
        "attributes": {
          "x-ms-client-name": "SasDefinitionAttributes",
          "$ref": "#/definitions/SasDefinitionAttributes",
          "description": "The attributes of the SAS definition."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The SAS definition create parameters.",
      "required": [
        "templateUri",
        "sasType",
        "validityPeriod"
      ]
    },
    "SasDefinitionUpdateParameters": {
      "properties": {
        "templateUri": {
          "type": "string",
          "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template."
        },
        "sasType": {
          "type": "string",
          "description": "The type of SAS token the SAS definition will create.",
          "enum": [
            "account",
            "service"
          ],
          "x-ms-enum": {
            "name": "SasTokenType",
            "modelAsString": true
          }
        },
        "validityPeriod": {
          "type": "string",
          "description": "The validity period of SAS tokens created according to the SAS definition."
        },
        "attributes": {
          "x-ms-client-name": "SasDefinitionAttributes",
          "$ref": "#/definitions/SasDefinitionAttributes",
          "description": "The attributes of the SAS definition."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        }
      },
      "description": "The SAS definition update parameters."
    },
    "KeyVaultError": {
      "properties": {
        "error": {
          "readOnly": true,
          "$ref": "#/definitions/Error"
        }
      },
      "description": "The key vault error exception."
    },
    "Error": {
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "The error message."
        },
        "innererror": {
          "x-ms-client-name": "innerError",
          "readOnly": true,
          "$ref": "#/definitions/Error"
        }
      },
      "description": "The key vault server error."
    },
    "CertificateRestoreParameters": {
      "properties": {
        "value": {
          "type": "string",
          "x-ms-client-name": "certificateBundleBackup",
          "format": "base64url",
          "description": "The backup blob associated with a certificate bundle."
        }
      },
      "description": "The certificate restore parameters.",
      "required": [
        "value"
      ]
    },
    "BackupCertificateResult": {
      "properties": {
        "value": {
          "type": "string",
          "format": "base64url",
          "readOnly": true,
          "description": "The backup blob containing the backed up certificate."
        }
      },
      "description": "The backup certificate result, containing the backup blob."
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  },
  "x-internal-service-id": "keyvault",
  "x-internal-service-name": "Key Vault",
  "x-internal-toc-name": "Restore Certificate",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "RestoreCertificate",
  "x-internal-operation-name": "Restore Certificate"
}