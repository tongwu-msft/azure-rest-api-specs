### YamlMime:RESTOperation
uid: keyvault.getdeletedstorageaccounts.getdeletedstorageaccounts
name: Get Deleted Storage Accounts
service: Key Vault
groupName: Get Deleted Storage Accounts
apiVersion: "7.0"
summary: "Lists deleted storage accounts for the specified vault.  \nThe Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission."
consumes:
- application/json
produces:
- application/json
paths:
- content: GET {vaultBaseUrl}/deletedstorage?api-version=7.0
- content: GET {vaultBaseUrl}/deletedstorage?maxresults={maxresults}&api-version=7.0
  isOptional: true
uriParameters:
- name: vaultBaseUrl
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The vault name, for example https://myvault.vault.azure.net.
  types:
  - uid: string
- name: maxresults
  in: query
  description: Maximum number of results to return in a page. If not specified the service will return up to 25 results.
  types:
  - uid: integer
  format: int32
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: A response message containing a list of deleted storage accounts in the vault, along with a link to the next page of deleted storage accounts.
  types:
  - uid: DeletedStorageListResult
- name: Other Status Codes
  description: Key Vault error response describing why the operation failed.
  types:
  - uid: KeyVaultError
requestHeader: []
definitions:
- name: DeletedStorageListResult
  description: The deleted storage account list result
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: A response message containing a list of the deleted storage accounts in the vault along with a link to the next page of deleted storage accounts
    types:
    - uid: DeletedStorageAccountItem
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: The URL to get the next set of deleted storage accounts.
    types:
    - uid: string
- name: KeyVaultError
  description: The key vault error exception.
  kind: object
  properties:
  - name: error
    isReadyOnly: true
    description: The key vault server error.
    types:
    - uid: Error
- name: DeletedStorageAccountItem
  description: The deleted storage account item containing metadata about the deleted storage account.
  kind: object
  properties:
  - name: recoveryId
    description: The url of the recovery object, used to identify and recover the deleted storage account.
    types:
    - uid: string
  - name: scheduledPurgeDate
    isReadyOnly: true
    description: The time when the storage account is scheduled to be purged, in UTC
    types:
    - uid: integer
  - name: deletedDate
    isReadyOnly: true
    description: The time when the storage account was deleted, in UTC
    types:
    - uid: integer
  - name: id
    isReadyOnly: true
    description: Storage identifier.
    types:
    - uid: string
  - name: resourceId
    isReadyOnly: true
    description: Storage account resource Id.
    types:
    - uid: string
  - name: attributes
    isReadyOnly: true
    description: The storage account management attributes.
    types:
    - uid: StorageAccountAttributes
  - name: tags
    isReadyOnly: true
    description: Application specific metadata in the form of key-value pairs.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: Error
  description: The key vault server error.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: innererror
    isReadyOnly: true
    description: The key vault server error.
    types:
    - uid: Error
- name: StorageAccountAttributes
  description: The storage account management attributes.
  kind: object
  properties:
  - name: enabled
    description: the enabled state of the object.
    types:
    - uid: boolean
  - name: created
    isReadyOnly: true
    description: Creation time in UTC.
    types:
    - uid: integer
  - name: updated
    isReadyOnly: true
    description: Last updated time in UTC.
    types:
    - uid: integer
  - name: recoveryLevel
    isReadyOnly: true
    description: Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.
    types:
    - uid: DeletionRecoveryLevel
- name: DeletionRecoveryLevel
  description: Reflects the deletion recovery level currently in effect for keys in the current vault. If it contains 'Purgeable' the key can be permanently deleted by a privileged user; otherwise, only the system can purge the key, at the end of the retention interval.
  kind: enum
  properties:
  - name: Purgeable
    description: Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)
    types:
    - uid: string
  - name: Recoverable+Purgeable
    description: Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered
    types:
    - uid: string
  - name: Recoverable
    description: Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered
    types:
    - uid: string
  - name: Recoverable+ProtectedSubscription
    description: Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered
    types:
    - uid: string
  - name: CustomizedRecoverable+Purgeable
    description: Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled.
    types:
    - uid: string
  - name: CustomizedRecoverable
    description: Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available.
    types:
    - uid: string
  - name: CustomizedRecoverable+ProtectedSubscription
    description: Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled.
    types:
    - uid: string
examples:
- name: List Deleted Storage Accounts
  request:
    uri: GET https://storage-sdk-test.vault-int.azure-int.net//deletedstorage?api-version=7.0
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "https://storage-sdk-test.vault-int.azure-int.net/storage/listDeletedStorage01",
            "resourceId": "/subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Storage/storageAccounts/kvstorageacc1",
            "recoveryId": "https://storage-sdk-test.vault-int.azure-int.net/deletedstorage/listDeletedStorage01",
            "scheduledPurgeDate": 1490790000,
            "deletedDate": 1490760000,
            "attributes": {
              "enabled": true,
              "created": 1490738386,
              "updated": 1490738386,
              "recoveryLevel": "Recoverable+Purgeable"
            },
            "tags": {
              "tag1": "val1",
              "tag2": "val2"
            }
          },
          {
            "id": "https://storage-sdk-test.vault-int.azure-int.net/storage/listDeletedStorage02",
            "resourceId": "/subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Storage/storageAccounts/kvstorageacc2",
            "recoveryId": "https://storage-sdk-test.vault-int.azure-int.net/deletedstorage/listDeletedStorage02",
            "scheduledPurgeDate": 1490790000,
            "deletedDate": 1490760000,
            "attributes": {
              "enabled": true,
              "created": 1490738386,
              "updated": 1490738386,
              "recoveryLevel": "Recoverable+Purgeable"
            },
            "tags": {
              "tag3": "val3",
              "tag4": "val4"
            }
          }
        ],
        "nextLink": "https://{BaseUri}/storage?api-version=7.0&%24skiptoken=<token>"
      }
security: []
errorCodes: []
