### YamlMime:RESTOperation
uid: management.azure.com.keyvault.keyvault.vaults.checknameavailability
name: Check Name Availability
service: Key Vault
groupName: Vaults
apiVersion: 2021-10-01
summary: Checks that the vault name is valid and is not already in use.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkNameAvailability?api-version=2021-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK -- Operation to check the vault name availability was successful.
  types:
  - uid: CheckNameAvailabilityResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    isRequired: true
    description: The vault name.
    types:
    - uid: string
  - name: type
    in: body
    isRequired: true
    description: The type of resource, Microsoft.KeyVault/vaults
    types:
    - uid: Type
requestHeader: []
definitions:
- name: CheckNameAvailabilityResult
  description: The CheckNameAvailability operation response.
  kind: object
  properties:
  - name: nameAvailable
    isReadyOnly: true
    description: A boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.
    types:
    - uid: boolean
  - name: reason
    isReadyOnly: true
    description: The reason that a vault name could not be used. The Reason element is only returned if NameAvailable is false.
    types:
    - uid: Reason
  - name: message
    isReadyOnly: true
    description: An error message explaining the Reason value in more detail.
    types:
    - uid: string
- name: CloudError
  description: An error response from Key Vault resource provider
  kind: object
  properties:
  - name: error
    description: An error response from Key Vault resource provider
    types:
    - uid: CloudErrorBody
- name: VaultCheckNameAvailabilityParameters
  description: The parameters used to check the availability of the vault name.
  kind: object
  properties:
  - name: name
    description: The vault name.
    types:
    - uid: string
  - name: type
    description: The type of resource, Microsoft.KeyVault/vaults
    types:
    - uid: Type
- name: Reason
  description: The reason that a vault name could not be used. The Reason element is only returned if NameAvailable is false.
  kind: enum
  properties:
  - name: AccountNameInvalid
    types:
    - uid: string
  - name: AlreadyExists
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from Key Vault resource provider
  kind: object
  properties:
  - name: code
    description: Error code. This is a mnemonic that can be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: User friendly error message. The message is typically localized and may vary with service version.
    types:
    - uid: string
- name: Type
  description: The type of resource, Microsoft.KeyVault/vaults
  kind: enum
  properties:
  - name: Microsoft.KeyVault/vaults
    types:
    - uid: string
examples:
- name: Validate a vault name
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.KeyVault/checkNameAvailability?api-version=2021-10-01
    body: >-
      {
        "name": "sample-vault",
        "type": "Microsoft.KeyVault/vaults"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.KeyVault/checkNameAvailability?api-version=2021-10-01

      {
        "name": "sample-vault",
        "type": "Microsoft.KeyVault/vaults"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.keyvault.models.VaultCheckNameAvailabilityParameters;

      /** Samples for Vaults CheckNameAvailability. */
      public final class Main {
          /*
           * x-ms-original-file: specification/keyvault/resource-manager/Microsoft.KeyVault/stable/2021-10-01/examples/checkVaultNameAvailability.json
           */
          /**
           * Sample code: Validate a vault name.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void validateAVaultName(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .vaults()
                  .manager()
                  .serviceClient()
                  .getVaults()
                  .checkNameAvailabilityWithResponse(
                      new VaultCheckNameAvailabilityParameters().withName("sample-vault"), Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armkeyvault_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/keyvault/armkeyvault"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/keyvault/resource-manager/Microsoft.KeyVault/stable/2021-10-01/examples/checkVaultNameAvailability.json
      func ExampleVaultsClient_CheckNameAvailability() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armkeyvault.NewVaultsClient("00000000-0000-0000-0000-000000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CheckNameAvailability(ctx,
      		armkeyvault.VaultCheckNameAvailabilityParameters{
      			Name: to.Ptr("sample-vault"),
      			Type: to.Ptr("Microsoft.KeyVault/vaults"),
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fkeyvault%2Farmkeyvault%2Fv1.0.0/sdk/resourcemanager/keyvault/armkeyvault/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "nameAvailable": true
      }
security: []
metadata:
  description: >
    Learn more about Key Vault service - Checks that the vault name is valid and is not already in use.
errorCodes: []
