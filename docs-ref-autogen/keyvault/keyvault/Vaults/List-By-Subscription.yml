### YamlMime:RESTOperation
uid: management.azure.com.keyvault.keyvault.vaults.listbysubscription
name: List By Subscription
service: Key Vault
groupName: Vaults
apiVersion: 2021-10-01
summary: The List operation gets information about the vaults associated with the subscription.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/vaults?api-version=2021-10-01
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/vaults?$top={$top}&api-version=2021-10-01
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: $top
  in: query
  description: Maximum number of results to return.
  types:
  - uid: integer
  format: int32
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Get information about all key vaults in the specified subscription.
  types:
  - uid: VaultListResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: VaultListResult
  description: List of vaults
  kind: object
  properties:
  - name: value
    description: The list of vaults.
    types:
    - uid: Vault
      isArray: true
  - name: nextLink
    description: The URL to get the next set of vaults.
    types:
    - uid: string
- name: CloudError
  description: An error response from Key Vault resource provider
  kind: object
  properties:
  - name: error
    description: An error response from Key Vault resource provider
    types:
    - uid: CloudErrorBody
- name: Vault
  description: Resource information with extended details.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: Fully qualified identifier of the key vault resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Name of the key vault resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type of the key vault resource.
    types:
    - uid: string
  - name: location
    description: Azure location of the key vault resource.
    types:
    - uid: string
  - name: tags
    description: Tags assigned to the key vault resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: systemData
    isReadyOnly: true
    description: System metadata for the key vault.
    types:
    - uid: SystemData
  - name: properties
    description: Properties of the vault
    types:
    - uid: VaultProperties
- name: CloudErrorBody
  description: An error response from Key Vault resource provider
  kind: object
  properties:
  - name: code
    description: Error code. This is a mnemonic that can be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: User friendly error message. The message is typically localized and may vary with service version.
    types:
    - uid: string
- name: SystemData
  description: Metadata pertaining to creation and last modification of the key vault resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the key vault resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the key vault resource.
    types:
    - uid: identityType
  - name: createdAt
    description: The timestamp of the key vault resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the key vault resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the key vault resource.
    types:
    - uid: identityType
  - name: lastModifiedAt
    description: The timestamp of the key vault resource last modification (UTC).
    types:
    - uid: string
- name: VaultProperties
  description: Properties of the vault
  kind: object
  properties:
  - name: tenantId
    description: The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
    types:
    - uid: string
  - name: sku
    description: SKU details
    types:
    - uid: Sku
  - name: accessPolicies
    description: An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.
    types:
    - uid: AccessPolicyEntry
      isArray: true
  - name: vaultUri
    description: The URI of the vault for performing operations on keys and secrets.
    types:
    - uid: string
  - name: hsmPoolResourceId
    isReadyOnly: true
    description: The resource id of HSM Pool.
    types:
    - uid: string
  - name: enabledForDeployment
    description: Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.
    types:
    - uid: boolean
  - name: enabledForDiskEncryption
    description: Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.
    types:
    - uid: boolean
  - name: enabledForTemplateDeployment
    description: Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.
    types:
    - uid: boolean
  - name: enableSoftDelete
    description: Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.
    types:
    - uid: boolean
  - name: softDeleteRetentionInDays
    description: softDelete data retention days. It accepts >=7 and <=90.
    types:
    - uid: integer
  - name: enableRbacAuthorization
    description: Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.
    types:
    - uid: boolean
  - name: createMode
    description: The vault's create mode to indicate whether the vault need to be recovered or not.
    types:
    - uid: CreateMode
  - name: enablePurgeProtection
    description: Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.
    types:
    - uid: boolean
  - name: networkAcls
    description: Rules governing the accessibility of the key vault from specific network locations.
    types:
    - uid: NetworkRuleSet
  - name: provisioningState
    description: Provisioning state of the vault.
    types:
    - uid: VaultProvisioningState
  - name: privateEndpointConnections
    isReadyOnly: true
    description: List of private endpoint connections associated with the key vault.
    types:
    - uid: PrivateEndpointConnectionItem
      isArray: true
  - name: publicNetworkAccess
    description: Property to specify whether the vault will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked. This will override the set firewall rules, meaning that even if the firewall rules are present we will not honor the rules.
    types:
    - uid: string
- name: identityType
  description: The type of identity that created the key vault resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: Sku
  description: SKU details
  kind: object
  properties:
  - name: family
    description: SKU family name
    types:
    - uid: SkuFamily
  - name: name
    description: SKU name to specify whether the key vault is a standard vault or a premium vault.
    types:
    - uid: SkuName
- name: AccessPolicyEntry
  description: An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.
  kind: object
  properties:
  - name: tenantId
    description: The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
    types:
    - uid: string
  - name: objectId
    description: The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.
    types:
    - uid: string
  - name: applicationId
    description: " Application ID of the client making request on behalf of a principal"
    types:
    - uid: string
  - name: permissions
    description: Permissions the identity has for keys, secrets and certificates.
    types:
    - uid: Permissions
- name: CreateMode
  description: The vault's create mode to indicate whether the vault need to be recovered or not.
  kind: enum
  properties:
  - name: recover
    types:
    - uid: string
  - name: default
    types:
    - uid: string
- name: NetworkRuleSet
  description: A set of rules governing the network accessibility of a vault.
  kind: object
  properties:
  - name: bypass
    description: Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.
    types:
    - uid: NetworkRuleBypassOptions
  - name: defaultAction
    description: The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
    types:
    - uid: NetworkRuleAction
  - name: ipRules
    description: The list of IP address rules.
    types:
    - uid: IPRule
      isArray: true
  - name: virtualNetworkRules
    description: The list of virtual network rules.
    types:
    - uid: VirtualNetworkRule
      isArray: true
- name: VaultProvisioningState
  description: Provisioning state of the vault.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: RegisteringDns
    types:
    - uid: string
- name: PrivateEndpointConnectionItem
  description: Private endpoint connection item.
  kind: object
  properties:
  - name: id
    description: Id of private endpoint connection.
    types:
    - uid: string
  - name: etag
    description: Modified whenever there is a change in the state of private endpoint connection.
    types:
    - uid: string
  - name: properties.privateEndpoint
    description: Properties of the private endpoint object.
    types:
    - uid: PrivateEndpoint
  - name: properties.privateLinkServiceConnectionState
    description: Approval state of the private link connection.
    types:
    - uid: PrivateLinkServiceConnectionState
  - name: properties.provisioningState
    isReadyOnly: true
    description: Provisioning state of the private endpoint connection.
    types:
    - uid: PrivateEndpointConnectionProvisioningState
- name: SkuFamily
  description: SKU family name
  kind: enum
  properties:
  - name: A
    types:
    - uid: string
- name: SkuName
  description: SKU name to specify whether the key vault is a standard vault or a premium vault.
  kind: enum
  properties:
  - name: standard
    types:
    - uid: string
  - name: premium
    types:
    - uid: string
- name: Permissions
  description: Permissions the identity has for keys, secrets, certificates and storage.
  kind: object
  properties:
  - name: keys
    description: Permissions to keys
    types:
    - uid: string
      isArray: true
  - name: secrets
    description: Permissions to secrets
    types:
    - uid: string
      isArray: true
  - name: certificates
    description: Permissions to certificates
    types:
    - uid: string
      isArray: true
  - name: storage
    description: Permissions to storage accounts
    types:
    - uid: string
      isArray: true
- name: NetworkRuleBypassOptions
  description: Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.
  kind: enum
  properties:
  - name: AzureServices
    types:
    - uid: string
  - name: None
    types:
    - uid: string
- name: NetworkRuleAction
  description: The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
  kind: enum
  properties:
  - name: Allow
    types:
    - uid: string
  - name: Deny
    types:
    - uid: string
- name: IPRule
  description: A rule governing the accessibility of a vault from a specific ip address or ip range.
  kind: object
  properties:
  - name: value
    description: An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).
    types:
    - uid: string
- name: VirtualNetworkRule
  description: A rule governing the accessibility of a vault from a specific virtual network.
  kind: object
  properties:
  - name: id
    description: Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
    types:
    - uid: string
  - name: ignoreMissingVnetServiceEndpoint
    description: Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.
    types:
    - uid: boolean
- name: PrivateEndpoint
  description: Private endpoint object properties.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: Full identifier of the private endpoint resource.
    types:
    - uid: string
- name: PrivateLinkServiceConnectionState
  description: An object that represents the approval state of the private link connection.
  kind: object
  properties:
  - name: status
    description: Indicates whether the connection has been approved, rejected or removed by the key vault owner.
    types:
    - uid: PrivateEndpointServiceConnectionStatus
  - name: description
    description: The reason for approval or rejection.
    types:
    - uid: string
  - name: actionsRequired
    description: A message indicating if changes on the service provider require any updates on the consumer.
    types:
    - uid: ActionsRequired
- name: PrivateEndpointConnectionProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Disconnected
    types:
    - uid: string
- name: PrivateEndpointServiceConnectionStatus
  description: The private endpoint connection status.
  kind: enum
  properties:
  - name: Pending
    types:
    - uid: string
  - name: Approved
    types:
    - uid: string
  - name: Rejected
    types:
    - uid: string
  - name: Disconnected
    types:
    - uid: string
- name: ActionsRequired
  description: A message indicating if changes on the service provider require any updates on the consumer.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
examples:
- name: List vaults in the specified subscription
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.KeyVault/vaults?$top=1&api-version=2021-10-01
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sample-group/providers/Microsoft.KeyVault/vaults/sample-vault",
            "name": "sample-vault",
            "type": "Microsoft.KeyVault/vaults",
            "location": "westus",
            "tags": {},
            "systemData": {
              "createdBy": "keyVaultUser1",
              "createdByType": "User",
              "createdAt": "2020-01-01T12:00:00.0000000Z",
              "lastModifiedBy": "keyVaultUser2",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2020-01-01T12:00:00.0000000Z"
            },
            "properties": {
              "sku": {
                "family": "A",
                "name": "premium"
              },
              "tenantId": "00000000-0000-0000-0000-000000000000",
              "accessPolicies": [
                {
                  "tenantId": "00000000-0000-0000-0000-000000000000",
                  "objectId": "00000000-0000-0000-0000-000000000000",
                  "permissions": {
                    "keys": [
                      "encrypt",
                      "decrypt",
                      "wrapKey",
                      "unwrapKey",
                      "sign",
                      "verify",
                      "get",
                      "list",
                      "create",
                      "update",
                      "import",
                      "delete",
                      "backup",
                      "restore",
                      "recover",
                      "purge"
                    ],
                    "secrets": [
                      "get",
                      "list",
                      "set",
                      "delete",
                      "backup",
                      "restore",
                      "recover",
                      "purge"
                    ],
                    "certificates": [
                      "get",
                      "list",
                      "delete",
                      "create",
                      "import",
                      "update",
                      "managecontacts",
                      "getissuers",
                      "listissuers",
                      "setissuers",
                      "deleteissuers",
                      "manageissuers",
                      "recover",
                      "purge"
                    ]
                  }
                }
              ],
              "enabledForDeployment": true,
              "enabledForDiskEncryption": true,
              "enabledForTemplateDeployment": true,
              "enableSoftDelete": true,
              "hsmPoolResourceId": "00000000-0000-0000-0000-000000000000",
              "vaultUri": "https://sample-vault.vault.azure.net/",
              "provisioningState": "Succeeded"
            }
          }
        ],
        "nextLink": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resources?api-version=22021-10-01&$skiptoken=dmF1bHQtcGVza3ktanVyeS03MzA3Ng=="
      }
security: []
metadata:
  description: Learn more about Key Vault service - The List operation gets information about the vaults associated with the subscription.
errorCodes: []
