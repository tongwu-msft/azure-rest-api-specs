{
  "swagger": "2.0",
  "info": {
    "version": "preview",
    "title": "Azure IoT Central",
    "description": "Azure IoT Central is a service that makes it easy to connect, monitor, and manage your IoT devices at scale."
  },
  "basePath": "/api/preview",
  "schemes": [
    "https"
  ],
  "definitions": {
    "ApiToken": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Permission"
        },
        {
          "properties": {
            "id": {
              "description": "Unique ID of the api token.",
              "type": "string",
              "readOnly": true
            },
            "token": {
              "description": "Value of the api token.",
              "type": "string",
              "readOnly": true
            },
            "expiry": {
              "description": "String-formatted date representing the time when the token expires",
              "type": "string",
              "format": "date-time"
            }
          }
        }
      ]
    },
    "ApiTokenCollection": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of api tokens.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiToken"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "Capability": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NamedEntity"
        },
        {
          "properties": {
            "name": {
              "description": "The programmatic name of the named entity.",
              "type": "string"
            }
          }
        }
      ],
      "additionalProperties": {
        "type": "object"
      }
    },
    "Interface": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "properties": {
            "contents": {
              "description": "The data definitions contained by the interface.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Capability"
              }
            }
          }
        }
      ]
    },
    "Component": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NamedEntity"
        },
        {
          "properties": {
            "schema": {
              "description": "The interface used by this component.",
              "$ref": "#/definitions/Interface"
            }
          }
        }
      ]
    },
    "CapabilityModel": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "properties": {
            "implements": {
              "description": "The component implemented by the capability model.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Component"
              }
            },
            "contents": {
              "description": "The relationships contained by the capability model.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/NamedEntity"
              }
            }
          }
        }
      ]
    },
    "Endpoint": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the endpoint.",
          "type": "string"
        },
        "connectionString": {
          "description": "Information for connecting to the endpoint.",
          "type": "string"
        },
        "name": {
          "description": "Name of the entity to send data to.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "connectionString",
        "name"
      ],
      "discriminator": "type"
    },
    "StorageEndpoint": {
      "allOf": [
        {
          "$ref": "#/definitions/Endpoint"
        }
      ]
    },
    "EventHubsEndpoint": {
      "allOf": [
        {
          "$ref": "#/definitions/Endpoint"
        }
      ]
    },
    "ServiceBusQueueEndpoint": {
      "allOf": [
        {
          "$ref": "#/definitions/Endpoint"
        }
      ]
    },
    "ServiceBusTopicEndpoint": {
      "allOf": [
        {
          "$ref": "#/definitions/Endpoint"
        }
      ]
    },
    "ContinuousDataExport": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique ID of the continuous data export.",
          "type": "string",
          "readOnly": true
        },
        "etag": {
          "description": "ETag used to prevent conflict in continuous data export updates.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the continuous data export.",
          "type": "string"
        },
        "endpoint": {
          "description": "Location where exported data should be sent.",
          "$ref": "#/definitions/Endpoint"
        },
        "status": {
          "description": "Indicates whether the continuous data export is starting, running, etc.",
          "type": "string",
          "readOnly": true
        },
        "enabled": {
          "description": "Boolean indicating whether the continuous data export should be running or not.",
          "type": "boolean"
        },
        "sources": {
          "description": "Data sources to export to the endpoint.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "devices",
              "deviceTemplates",
              "telemetry"
            ]
          },
          "minItems": 1
        }
      },
      "required": [
        "endpoint",
        "enabled",
        "sources"
      ]
    },
    "ContinuousDataExportCollection": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of continuous data exports.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContinuousDataExport"
          }
        },
        "nextLink": {
          "description": "URL to get the next page of continuous data exports.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "Device": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique ID of the device.",
          "type": "string",
          "readOnly": true
        },
        "etag": {
          "description": "ETag used to prevent conflict in device updates.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the device.",
          "type": "string"
        },
        "description": {
          "description": "Detailed description of the device.",
          "type": "string"
        },
        "instanceOf": {
          "description": "The model definition for the device.",
          "type": "string"
        },
        "simulated": {
          "description": "Whether the device is simulated.",
          "type": "boolean"
        },
        "approved": {
          "description": "Whether the device has been approved to connect to IoT Central.",
          "type": "boolean"
        },
        "provisioned": {
          "description": "Whether resources have been allocated for the device.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "required": [
        "instanceOf"
      ]
    },
    "DeviceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of devices.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Device"
          }
        },
        "nextLink": {
          "description": "URL to get the next page of devices.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeviceCommand": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The request ID of the device command execution.",
          "type": "string",
          "readOnly": true
        },
        "request": {
          "description": "The payload for the device command."
        },
        "response": {
          "description": "The payload of the device command response.",
          "readOnly": true
        },
        "responseCode": {
          "description": "The status code of the device command response.",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "DeviceCommandCollection": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of device command executions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceCommand"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "DeviceCloudProperties": {
      "description": "Cloud property values associated with the device.",
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "SymmetricKey": {
      "type": "object",
      "properties": {
        "primaryKey": {
          "description": "The primary key for the credential.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "The secondary key for the credential.",
          "type": "string"
        }
      },
      "required": [
        "primaryKey",
        "secondaryKey"
      ]
    },
    "DeviceCredentials": {
      "type": "object",
      "properties": {
        "scopeId": {
          "description": "Scope id for connecting to device provisioning service.",
          "type": "string"
        },
        "symmetricKey": {
          "description": "The symmetric key credentials for the device.",
          "$ref": "#/definitions/SymmetricKey"
        }
      },
      "required": [
        "scopeId",
        "symmetricKey"
      ]
    },
    "DeviceProperties": {
      "description": "Property values associated with the device.",
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "DeviceTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique ID of the device template.",
          "type": "string",
          "readOnly": true
        },
        "etag": {
          "description": "ETag used to prevent conflict in device template updates.",
          "type": "string"
        },
        "types": {
          "description": "The types of device to which this template applies.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "Display name of the device template.",
          "type": "string"
        },
        "description": {
          "description": "Detailed description of the device template.",
          "type": "string"
        },
        "capabilityModel": {
          "$ref": "#/definitions/CapabilityModel"
        },
        "solutionModel": {
          "$ref": "#/definitions/SolutionModel"
        }
      },
      "required": [
        "types",
        "capabilityModel"
      ]
    },
    "DeviceTemplateCollection": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of device templates.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceTemplate"
          }
        },
        "nextLink": {
          "description": "URL to get the next page of device templates.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "Entity": {
      "type": "object",
      "properties": {
        "@context": {
          "description": "JSON-LD context for the entity."
        },
        "@id": {
          "description": "Unique ID of the entity.",
          "type": "string"
        },
        "@type": {
          "description": "Type of the entity.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "displayName": {
          "description": "Display name of the entity.",
          "type": "string"
        },
        "description": {
          "description": "Detailed description of the entity.",
          "type": "string"
        },
        "comment": {
          "description": "Developer comment about the entity.",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ]
    },
    "NamedEntity": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "properties": {
            "name": {
              "description": "The programmatic name of the named entity.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "Permission": {
      "type": "object",
      "properties": {
        "roles": {
          "description": "Roles that the permission has been granted permission to.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 1
        }
      },
      "required": [
        "roles"
      ]
    },
    "Value": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of this API response."
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique ID of the role.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Display name of the role.",
          "type": "string"
        }
      }
    },
    "RoleCollection": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of roles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionModel": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "properties": {
            "cloudProperties": {
              "description": "The cloud properties defined by the solution model.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Capability"
              }
            },
            "initialValues": {
              "description": "The initial values defined by the solution model.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/InitialValue"
              }
            },
            "overrides": {
              "description": "The overrides defined by the solution model.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Override"
              }
            }
          }
        }
      ]
    },
    "InitialValue": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "properties": {
            "capability": {
              "$ref": "#/definitions/CapabilityReference"
            },
            "value": {
              "description": "The initial value of the capability."
            }
          }
        }
      ]
    },
    "Override": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "properties": {
            "capability": {
              "$ref": "#/definitions/CapabilityReference"
            },
            "displayUnit": {
              "description": "The overridden display unit.",
              "type": "string"
            },
            "semanticType": {
              "description": "The overridden semantic type.",
              "type": "string"
            },
            "unit": {
              "description": "The overridden unit.",
              "type": "string"
            },
            "valueDetail": {
              "$ref": "#/definitions/ValueDetail"
            }
          }
        }
      ]
    },
    "ValueDetail": {
      "description": "Visualization details for the referenced capability.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "additionalProperties": {
        "type": "object"
      }
    },
    "CapabilityReference": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "properties": {
            "component": {
              "description": "The name of the component being referenced.",
              "type": "string"
            },
            "reference": {
              "description": "The name of the capability being referenced.",
              "type": "string"
            }
          }
        }
      ]
    }
  },
  "paths": {
    "/deviceTemplates/{device_template_id}": {
      "get": {
        "operationId": "DeviceTemplates_Get",
        "summary": "Get a device template by ID",
        "parameters": [
          {
            "$ref": "#/parameters/DeviceTemplateId"
          }
        ],
        "x-ms-examples": {
          "Get a device template by Id": {
            "title": "Get a device template by Id",
            "description": "Get a published device template by Id. This operation does not return device templates in draft state.",
            "parameters": {
              "centralDnsSuffixInPath": "azureiotcentral.com",
              "subdomain": "appsubdomain",
              "device_template_id": "urn:sbk9sd6sl:modelDefinition:u3b_fwd7os"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "urn:sbk9sd6sl:modelDefinition:u3b_fwd7os",
                  "types": [
                    "DeviceModel"
                  ],
                  "displayName": "RS40 Occupancy Sensor",
                  "capabilityModel": {
                    "@id": "urn:rigado:RS40_Occupancy_Sensor:1",
                    "@type": [
                      "CapabilityModel"
                    ],
                    "implements": [
                      {
                        "@id": "urn:rigado:RS40_Occupancy_Sensor:Device_information_RS40_Occupancy_Sensor:1",
                        "@type": [
                          "InterfaceInstance"
                        ],
                        "name": "Device_information_RS40_Occupancy_Sensor",
                        "schema": {
                          "@id": "urn:azureiot:DeviceManagement:DeviceInformation:1",
                          "@type": [
                            "Interface"
                          ],
                          "displayName": "Device Information",
                          "contents": [
                            {
                              "@id": "urn:azureiot:DeviceManagement:DeviceInformation:manufacturer:1",
                              "@type": [
                                "Property"
                              ],
                              "description": "Company name of the device manufacturer. This could be the same as the name of the original equipment manufacturer (OEM). Ex. Contoso.",
                              "displayName": "Manufacturer",
                              "name": "manufacturer",
                              "schema": "string"
                            },
                            {
                              "@id": "urn:azureiot:DeviceManagement:DeviceInformation:model:1",
                              "@type": [
                                "Property"
                              ],
                              "description": "Device model name or ID. Ex. Surface Book 2.",
                              "displayName": "Device model",
                              "name": "model",
                              "schema": "string"
                            },
                            {
                              "@id": "urn:azureiot:DeviceManagement:DeviceInformation:swVersion:1",
                              "@type": [
                                "Property"
                              ],
                              "description": "Version of the software on your device. This could be the version of your firmware. Ex. 1.3.45",
                              "displayName": "Software version",
                              "name": "swVersion",
                              "schema": "string"
                            },
                            {
                              "@id": "urn:azureiot:DeviceManagement:DeviceInformation:osName:1",
                              "@type": [
                                "Property"
                              ],
                              "description": "Name of the operating system on the device. Ex. Windows 10 IoT Core.",
                              "displayName": "Operating system name",
                              "name": "osName",
                              "schema": "string"
                            },
                            {
                              "@id": "urn:azureiot:DeviceManagement:DeviceInformation:processorArchitecture:1",
                              "@type": [
                                "Property"
                              ],
                              "description": "Architecture of the processor on the device. Ex. x64 or ARM.",
                              "displayName": "Processor architecture",
                              "name": "processorArchitecture",
                              "schema": "string"
                            },
                            {
                              "@id": "urn:azureiot:DeviceManagement:DeviceInformation:processorManufacturer:1",
                              "@type": [
                                "Property"
                              ],
                              "description": "Name of the manufacturer of the processor on the device. Ex. Intel.",
                              "displayName": "Processor manufacturer",
                              "name": "processorManufacturer",
                              "schema": "string"
                            },
                            {
                              "@id": "urn:azureiot:DeviceManagement:DeviceInformation:totalStorage:1",
                              "@type": [
                                "Property"
                              ],
                              "description": "Total available storage on the device in kilobytes. Ex. 2048000 kilobytes.",
                              "displayName": "Total storage",
                              "name": "totalStorage",
                              "displayUnit": "kilobytes",
                              "schema": "long"
                            },
                            {
                              "@id": "urn:azureiot:DeviceManagement:DeviceInformation:totalMemory:1",
                              "@type": [
                                "Property"
                              ],
                              "description": "Total available memory on the device in kilobytes. Ex. 256000 kilobytes.",
                              "displayName": "Total memory",
                              "name": "totalMemory",
                              "displayUnit": "kilobytes",
                              "schema": "long"
                            }
                          ]
                        }
                      },
                      {
                        "@id": "urn:rigado:RS40_Occupancy_Sensor:RS40_Occupancy_Sensor:1",
                        "@type": [
                          "InterfaceInstance"
                        ],
                        "name": "RS40_Occupancy_Sensor",
                        "schema": {
                          "@id": "urn:rigado:interfaces:RS40_Occupancy_Sensor:1",
                          "@type": [
                            "Interface"
                          ],
                          "displayName": "Interface",
                          "contents": [
                            {
                              "@id": "urn:rigado:interfaces:RS40_Occupancy_Sensor:count:1",
                              "@type": [
                                "Telemetry"
                              ],
                              "comment": "",
                              "description": "Count of motion events seen in the previous interval",
                              "displayName": "count",
                              "name": "count",
                              "schema": "integer"
                            },
                            {
                              "@id": "urn:rigado:interfaces:RS40_Occupancy_Sensor:state:1",
                              "@type": [
                                "Telemetry"
                              ],
                              "description": "Occupancy State",
                              "displayName": "state",
                              "name": "state",
                              "schema": "boolean"
                            }
                          ]
                        }
                      }
                    ],
                    "displayName": "RS40 Occupancy Sensor",
                    "contents": [],
                    "@context": [
                      "http://azureiot.com/v1/contexts/IoTModel.json"
                    ]
                  },
                  "solutionModel": {
                    "@id": "urn:sbk9sd6sl:modelDefinition:rxyaituqzz",
                    "@type": [
                      "SolutionModel"
                    ],
                    "cloudProperties": [],
                    "initialValues": [],
                    "overrides": []
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceTemplate"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Get"
      }
    }
  },
  "parameters": {
    "DeviceId": {
      "in": "path",
      "name": "device_id",
      "description": "Unique ID of the device.",
      "x-ms-parameter-location": "method",
      "type": "string",
      "required": true
    },
    "ComponentName": {
      "in": "path",
      "name": "component_name",
      "description": "Name of the device component.",
      "x-ms-parameter-location": "method",
      "type": "string",
      "required": true
    },
    "DeviceTemplateId": {
      "in": "path",
      "name": "device_template_id",
      "description": "Unique ID of the device template.",
      "x-ms-parameter-location": "method",
      "type": "string",
      "required": true
    },
    "Subdomain": {
      "in": "path",
      "name": "subdomain",
      "description": "Application subdomain.",
      "x-ms-parameter-location": "client",
      "type": "string",
      "required": true
    },
    "CentralDnsSuffixInPath": {
      "name": "centralDnsSuffixInPath",
      "in": "path",
      "required": true,
      "type": "string",
      "default": "azureiotcentral.com",
      "x-ms-skip-url-encoding": true,
      "description": "The DNS suffix used as the base for all Azure IoT Central service requests.",
      "x-ms-parameter-location": "client"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{subdomain}.{centralDnsSuffixInPath}",
    "parameters": [
      {
        "$ref": "#/parameters/Subdomain"
      },
      {
        "$ref": "#/parameters/CentralDnsSuffixInPath"
      }
    ]
  },
  "x-internal-service-id": "iotcentral",
  "x-internal-service-name": "IoT Central",
  "x-internal-toc-name": "Device Templates",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "Get",
  "x-internal-operation-name": "Get"
}