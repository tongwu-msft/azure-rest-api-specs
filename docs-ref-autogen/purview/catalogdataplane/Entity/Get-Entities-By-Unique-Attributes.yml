### YamlMime:RESTOperation
uid: catalog.api.purview.catalogdataplane.entity.getentitiesbyuniqueattributes
name: Get Entities By Unique Attributes
service: Purview
groupName: Entity
apiVersion: 2021-09-01
summary: >-
  Bulk API to retrieve list of entities identified by its unique attributes.


  In addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format


  typeName=\<typeName>&attr_1:\<attrName>=\<attrValue>&attr_2:\<attrName>=\<attrValue>&attr_3:\<attrName>=\<attrValue>


  NOTE: The attrName should be an unique attribute for the given entity-type


  The REST request would look something like this


  GET /v2/entity/bulk/uniqueAttribute/type/hive_db?attr_0:qualifiedName=db1@cl1&attr_2:qualifiedName=db2@cl1
consumes:
- application/json
produces:
- application/json
paths:
- content: GET {Endpoint}/catalog/api/atlas/v2/entity/bulk/uniqueAttribute/type/{typeName}
- content: GET {Endpoint}/catalog/api/atlas/v2/entity/bulk/uniqueAttribute/type/{typeName}?minExtInfo={minExtInfo}&ignoreRelationships={ignoreRelationships}&attr_N:qualifiedName={attr_N:qualifiedName}
  isOptional: true
uriParameters:
- name: Endpoint
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: 'The catalog endpoint of your Purview account. Example: https://{accountName}.purview.azure.com'
  types:
  - uid: string
- name: typeName
  in: path
  isRequired: true
  description: The name of the type.
  types:
  - uid: string
- name: minExtInfo
  in: query
  description: Whether to return minimal information for referred entities.
  types:
  - uid: boolean
- name: ignoreRelationships
  in: query
  description: Whether to ignore relationship attributes.
  types:
  - uid: boolean
- name: attr_N:qualifiedName
  in: query
  description: Qualified name of an entity. E.g. to find 2 entities you can set attrs_0:qualifiedName=db1@cl1&attrs_2:qualifiedName=db2@cl1
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK.
  types:
  - uid: AtlasEntitiesWithExtInfo
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: AtlasEntitiesWithExtInfo
  description: AtlasEntitiesWithExtInfo
  kind: object
  properties:
  - name: referredEntities
    description: The referred entities.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: object
  - name: entities
    description: An array of entities.
    types:
    - uid: AtlasEntity
      isArray: true
- name: ErrorResponse
  description: An error response from the service
  kind: object
  properties:
  - name: requestId
    description: The request ID.
    types:
    - uid: string
  - name: errorCode
    description: The error code.
    types:
    - uid: string
  - name: errorMessage
    description: The error message.
    types:
    - uid: string
- name: AtlasEntity
  description: AtlasEntity
  kind: object
  properties:
  - name: attributes
    description: The attributes of the struct.
    types:
    - uid: Attributes
  - name: typeName
    description: The name of the type.
    types:
    - uid: string
  - name: lastModifiedTS
    description: "lastModifiedTS  \nETag for concurrency control."
    types:
    - uid: string
  - name: classifications
    description: An array of classifications.
    types:
    - uid: AtlasClassification
      isArray: true
  - name: createTime
    description: The created time of the record.
    types:
    - uid: number
  - name: createdBy
    description: The user who created the record.
    types:
    - uid: string
  - name: guid
    description: The GUID of the entity.
    types:
    - uid: string
  - name: homeId
    description: The home ID of the entity.
    types:
    - uid: string
  - name: meanings
    description: An array of term assignment headers indicating the meanings of the entity.
    types:
    - uid: AtlasTermAssignmentHeader
      isArray: true
  - name: provenanceType
    description: Used to record the provenance of an instance of an entity or relationship.
    types:
    - uid: number
  - name: proxy
    description: Determines if there's a proxy.
    types:
    - uid: boolean
  - name: relationshipAttributes
    description: The attributes of relationship.
    types:
    - uid: RelationshipAttributes
  - name: status
    description: "Status  \nStatus of the entity - can be active or deleted. Deleted entities are not removed from Atlas store."
    types:
    - uid: Status
  - name: updateTime
    description: The update time of the record.
    types:
    - uid: number
  - name: updatedBy
    description: The user who updated the record.
    types:
    - uid: string
  - name: version
    description: The version of the entity.
    types:
    - uid: number
  - name: source
    description: indicate the source who create the classification detail
    types:
    - uid: string
  - name: sourceDetails
    description: more detail on source information
    types:
    - uid: SourceDetails
  - name: contacts
    description: The dictionary of contacts for terms. Key could be Expert or Owner.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: array
- name: Attributes
  description: The attributes of the struct.
  kind: object
  properties:
  - name: ''
    description: ''
    types:
    - uid: ''
- name: AtlasClassification
  description: AtlasClassification
  kind: object
  properties:
  - name: attributes
    description: The attributes of the struct.
    types:
    - uid: Attributes
  - name: typeName
    description: The name of the type.
    types:
    - uid: string
  - name: lastModifiedTS
    description: "lastModifiedTS  \nETag for concurrency control."
    types:
    - uid: string
  - name: entityGuid
    description: The GUID of the entity.
    types:
    - uid: string
  - name: entityStatus
    description: "Status  \nStatus of the entity - can be active or deleted. Deleted entities are not removed from Atlas store."
    types:
    - uid: Status
  - name: removePropagationsOnEntityDelete
    description: Determines if propagations will be removed on entity deletion.
    types:
    - uid: boolean
  - name: validityPeriods
    description: An array of time boundaries indicating validity periods.
    types:
    - uid: TimeBoundary
      isArray: true
  - name: source
    description: indicate the source who create the classification detail
    types:
    - uid: string
  - name: sourceDetails
    description: more detail on source information
    types:
    - uid: SourceDetails
- name: AtlasTermAssignmentHeader
  description: AtlasTermAssignmentHeader
  kind: object
  properties:
  - name: confidence
    description: The confidence of the term assignment.
    types:
    - uid: integer
  - name: createdBy
    description: The user who created the record.
    types:
    - uid: string
  - name: description
    description: The description of the term assignment.
    types:
    - uid: string
  - name: displayText
    description: The display text.
    types:
    - uid: string
  - name: expression
    description: The expression of the term assignment.
    types:
    - uid: string
  - name: relationGuid
    description: The GUID of the relationship.
    types:
    - uid: string
  - name: source
    description: The source of the term.
    types:
    - uid: string
  - name: status
    description: "AtlasTermAssignmentStatus  \nThe status of terms assignment."
    types:
    - uid: AtlasTermAssignmentStatus
  - name: steward
    description: The steward of the term.
    types:
    - uid: string
  - name: termGuid
    description: The GUID of the term.
    types:
    - uid: string
- name: RelationshipAttributes
  description: The attributes of relationship.
  kind: object
  properties:
  - name: ''
    description: ''
    types:
    - uid: ''
- name: Status
  description: Status
  kind: enum
  properties:
  - name: ACTIVE
    types:
    - uid: string
  - name: DELETED
    types:
    - uid: string
- name: SourceDetails
  description: more detail on source information
  kind: object
  properties:
  - name: ''
    description: ''
    types:
    - uid: ''
- name: TimeBoundary
  description: TimeBoundary
  kind: object
  properties:
  - name: endTime
    description: The end of the time boundary.
    types:
    - uid: string
  - name: startTime
    description: The start of the time boundary.
    types:
    - uid: string
  - name: timeZone
    description: The timezone of the time boundary.
    types:
    - uid: string
- name: AtlasTermAssignmentStatus
  description: AtlasTermAssignmentStatus
  kind: enum
  properties:
  - name: DISCOVERED
    types:
    - uid: string
  - name: PROPOSED
    types:
    - uid: string
  - name: IMPORTED
    types:
    - uid: string
  - name: VALIDATED
    types:
    - uid: string
  - name: DEPRECATED
    types:
    - uid: string
  - name: OBSOLETE
    types:
    - uid: string
  - name: OTHER
    types:
    - uid: string
examples:
- name: Entity_GetEntitiesByUniqueAttributes
  request:
    uri: GET {Endpoint}/catalog/api/atlas/v2/entity/bulk/uniqueAttribute/type/azure_storage_account
  responses:
  - statusCode: "200"
    body: >-
      {
        "referredEntities": {},
        "entities": [
          {
            "typeName": "column",
            "attributes": {
              "owner": null,
              "qualifiedName": "adl://exampleaccount.azuredatalakestore.net/123/1/DP_TFS/CBT/Extensions/DTTP.targets#:xml/Project/PropertyGroup/ExampleName1",
              "name": "ExampleName1",
              "description": null,
              "type": "string"
            },
            "guid": "784c0f2f-afd2-e26b-f9cb-984f6c2c5021",
            "status": "ACTIVE",
            "createdBy": "ExampleCreator",
            "updatedBy": "ExampleUpdator",
            "createTime": 1553072455110,
            "updateTime": 1553072455110,
            "version": 0,
            "relationshipAttributes": {
              "schema": [],
              "inputToProcesses": [],
              "composeSchema": {
                "guid": "cc6652ae-dc6d-90c9-1899-252eabc0e929",
                "typeName": "tabular_schema",
                "displayText": "tabular_schema",
                "relationshipGuid": "400fd8e4-97bd-45eb-a21c-880b4094ce5b",
                "relationshipStatus": "ACTIVE",
                "relationshipAttributes": {
                  "typeName": "tabular_schema_columns"
                }
              },
              "meanings": [],
              "outputFromProcesses": [],
              "tabular_schema": null
            }
          },
          {
            "typeName": "column",
            "attributes": {
              "owner": null,
              "qualifiedName": "adl://exampleaccount.azuredatalakestore.net/123/1/Experience/CBT/Extensions/CodeAnalysis.targets#:xml/Project/PropertyGroup/ExampleName2",
              "name": "ExampleName2",
              "description": null,
              "type": "string"
            },
            "guid": "b4ebc8be-cef4-860a-bee9-28cc34cb5caa",
            "status": "ACTIVE",
            "createdBy": "ExampleCreator",
            "updatedBy": "ExampleUpdator",
            "createTime": 1553072455110,
            "updateTime": 1553072455110,
            "version": 0,
            "relationshipAttributes": {
              "schema": [],
              "inputToProcesses": [],
              "composeSchema": {
                "guid": "381dd3e6-dad5-7409-c21d-ea55b666e420",
                "typeName": "tabular_schema",
                "displayText": "tabular_schema",
                "relationshipGuid": "0b652860-ab79-48cd-a0cf-0867fbba31a3",
                "relationshipStatus": "ACTIVE",
                "relationshipAttributes": {
                  "typeName": "tabular_schema_columns"
                }
              },
              "meanings": [],
              "outputFromProcesses": [],
              "tabular_schema": null
            }
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >-
    Bulk API to retrieve list of entities identified by its unique attributes.


    In addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format


    typeName=\<typeName>&attr_1:\<attrName>=\<attrValue>&attr_2:\<attrName>=\<attrValue>&attr_3:\<attrName>=\<attrValue>


    NOTE: The attrName should be an unique attribute for the given entity-type


    The REST request would look something like this


    GET /v2/entity/bulk/uniqueAttribute/type/hive_db?attr_0:qualifiedName=db1@cl1&attr_2:qualifiedName=db2@cl1
errorCodes: []
