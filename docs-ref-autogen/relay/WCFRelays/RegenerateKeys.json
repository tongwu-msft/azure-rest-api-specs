{
  "swagger": "2.0",
  "info": {
    "version": "2017-04-01",
    "x-ms-code-generation-settings": {
      "name": "RelayManagementClient"
    },
    "title": "Relay API",
    "description": "Use these API to manage Azure Relay resources through Azure Resource Manager."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "WCFRelays"
        ],
        "operationId": "WCFRelays_RegenerateKeys",
        "x-ms-examples": {
          "RelayAuthorizationRuleRegenrateKey.json": {
            "parameters": {
              "namespaceName": "sdk-RelayNamespace-01",
              "relayName": "sdk-Relay-wcf-01",
              "authorizationRuleName": "sdk-RelayAuthRules-01",
              "resourceGroupName": "RG-eg",
              "api-version": "2017-04-01",
              "subscriptionId": "8c246e6a-cbc6-4a87-aff1-d6a886f376ef",
              "parameters": {
                "keyType": "PrimaryKey"
              }
            },
            "responses": {
              "200": {
                "body": {
                  "primaryConnectionString": "Endpoint=sb://sdk-relaynamespace-01.servicebus.windows.net/;SharedAccessKeyName=sdk-RelayAuthRules-01;SharedAccessKey=############################################",
                  "secondaryConnectionString": "Endpoint=sb://sdk-relaynamespace-01.servicebus.windows.net/;SharedAccessKeyName=sdk-RelayAuthRules-01;SharedAccessKey=############################################",
                  "primaryKey": "############################################",
                  "secondaryKey": "############################################",
                  "keyName": "sdk-RelayAuthRules-01"
                }
              }
            }
          }
        },
        "description": "Regenerates the primary or secondary connection strings to the WCF relay.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/relayNameParameter"
          },
          {
            "$ref": "#/parameters/authorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateAccessKeyParameters"
            },
            "description": "Parameters supplied to regenerate authorization rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Regenerate Keys"
      }
    }
  },
  "definitions": {
    "TrackedResource": {
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "location"
      ],
      "description": "Definition of resource."
    },
    "ResourceNamespacePatch": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Definition of resource."
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "description": "The resource definition.",
      "x-ms-azure-resource": true
    },
    "HybridConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HybridConnection"
          },
          "description": "Result of the list hybrid connections."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if value contains incomplete list hybrid connection operation."
        }
      },
      "description": "The response of the list hybrid connection operation."
    },
    "HybridConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "createdAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the hybrid connection was created."
            },
            "updatedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the namespace was updated."
            },
            "listenerCount": {
              "readOnly": true,
              "format": "int32",
              "type": "integer",
              "minimum": 0,
              "maximum": 25,
              "description": "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported."
            },
            "requiresClientAuthorization": {
              "type": "boolean",
              "description": "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
            },
            "userMetadata": {
              "type": "string",
              "description": "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
            }
          },
          "description": "Properties of the HybridConnection."
        }
      },
      "description": "Description of hybrid connection resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "WcfRelaysListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WcfRelay"
          },
          "description": "Result of the list WCF relay operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if value contains incomplete list of WCF relays."
        }
      },
      "description": "The response of the list WCF relay operation."
    },
    "WcfRelay": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "isDynamic": {
              "readOnly": true,
              "type": "boolean",
              "description": "Returns true if the relay is dynamic; otherwise, false."
            },
            "createdAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the WCF relay was created."
            },
            "updatedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the namespace was updated."
            },
            "listenerCount": {
              "readOnly": true,
              "format": "int32",
              "type": "integer",
              "minimum": 0,
              "maximum": 25,
              "description": "The number of listeners for this relay. Note that min :1 and max:25 are supported."
            },
            "relayType": {
              "type": "string",
              "description": "WCF relay type.",
              "enum": [
                "NetTcp",
                "Http"
              ],
              "x-ms-enum": {
                "name": "Relaytype",
                "modelAsString": false
              }
            },
            "requiresClientAuthorization": {
              "type": "boolean",
              "description": "Returns true if client authorization is needed for this relay; otherwise, false."
            },
            "requiresTransportSecurity": {
              "type": "boolean",
              "description": "Returns true if transport security is needed for this relay; otherwise, false."
            },
            "userMetadata": {
              "type": "string",
              "description": "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
            }
          },
          "description": "Properties of the WCF relay."
        }
      },
      "description": "Description of the WCF relay resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "RelayNamespaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelayNamespace"
          },
          "description": "Result of the list namespace operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
        }
      },
      "description": "The response from the list namespace operation."
    },
    "RelayNamespace": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "SKU of the namespace."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RelayNamespaceProperties",
          "description": "Description of Relay namespace"
        }
      },
      "description": "Description of a namespace resource.",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ]
    },
    "RelayNamespaceProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Created",
            "Succeeded",
            "Deleted",
            "Failed",
            "Updating",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "provisioningStateEnum",
            "modelAsString": false
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the namespace was created."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the namespace was updated."
        },
        "serviceBusEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "Endpoint you can use to perform Service Bus operations."
        },
        "metricId": {
          "type": "string",
          "readOnly": true,
          "description": "Identifier for Azure Insights metrics."
        }
      },
      "description": "Properties of the namespace."
    },
    "RelayUpdateParameters": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "SKU of the namespace."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RelayNamespaceProperties",
          "description": "Description of Relay namespace."
        }
      },
      "description": "Description of a namespace resource.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceNamespacePatch"
        }
      ]
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this SKU.",
          "enum": [
            "Standard"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false
          }
        },
        "tier": {
          "type": "string",
          "description": "The tier of this SKU.",
          "enum": [
            "Standard"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": false
          }
        }
      },
      "description": "SKU of the namespace.",
      "required": [
        "name"
      ]
    },
    "AuthorizationRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationRule"
          },
          "description": "Result of the list authorization rules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
        }
      },
      "description": "The response from the list namespace operation."
    },
    "AuthorizationRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "rights": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "Manage",
                  "Send",
                  "Listen"
                ],
                "x-ms-enum": {
                  "name": "AccessRights",
                  "modelAsString": false
                }
              },
              "description": "The rights associated with the rule."
            }
          },
          "required": [
            "rights"
          ],
          "description": "Authorization rule properties."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of a namespace authorization rule."
    },
    "AccessKeys": {
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "description": "Primary connection string of the created namespace authorization rule."
        },
        "secondaryConnectionString": {
          "type": "string",
          "description": "Secondary connection string of the created namespace authorization rule."
        },
        "primaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
        },
        "secondaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
        },
        "keyName": {
          "type": "string",
          "description": "A string that describes the authorization rule."
        }
      },
      "description": "Namespace/Relay Connection String"
    },
    "RegenerateAccessKeyParameters": {
      "properties": {
        "keyType": {
          "type": "string",
          "description": "The access key to regenerate.",
          "enum": [
            "PrimaryKey",
            "SecondaryKey"
          ],
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        },
        "key": {
          "type": "string",
          "description": "Optional. If the key value is provided, this is set to key type, or autogenerated key value set for key type."
        }
      },
      "required": [
        "keyType"
      ],
      "description": "Parameters supplied to the regenerate authorization rule operation, specifies which key neeeds to be reset."
    },
    "UnavailableReason": {
      "type": "string",
      "enum": [
        "None",
        "InvalidName",
        "SubscriptionIsDisabled",
        "NameInUse",
        "NameInLockdown",
        "TooManyNamespaceInCurrentSubscription"
      ],
      "x-ms-enum": {
        "name": "UnavailableReason",
        "modelAsString": false
      },
      "description": "Specifies the reason for the unavailability of the service."
    },
    "CheckNameAvailability": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The namespace name to check for availability. The namespace name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number."
        }
      },
      "required": [
        "name"
      ],
      "description": "Description of the check name availability request properties."
    },
    "CheckNameAvailabilityResult": {
      "properties": {
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "The detailed info regarding the reason associated with the namespace."
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Value indicating namespace is available. Returns true if the namespace is available; otherwise, false."
        },
        "reason": {
          "$ref": "#/definitions/UnavailableReason",
          "description": "The reason for unavailability of a namespace."
        }
      },
      "description": "Description of the check name availability request properties."
    },
    "OperationListResult": {
      "description": "Result of the request to list Relay operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "List of Relay operations supported by resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of operation list results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Operation": {
      "description": "A Relay REST API operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string",
          "readOnly": true
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Relay.",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "Resource on which the operation is performed: Invoice, etc.",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "Operation type: Read, write, delete, etc.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "ErrorResponse": {
      "description": "Error reponse indicates Relay service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "Name of the Resource group within the Azure subscription."
    },
    "namespaceNameParameter": {
      "name": "namespaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 6,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The namespace name"
    },
    "hybridConnectionNameParameter": {
      "name": "hybridConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "description": "The hybrid connection name."
    },
    "authorizationRuleNameParameter": {
      "name": "authorizationRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "description": "The authorization rule name."
    },
    "relayNameParameter": {
      "name": "relayName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "description": "The relay name."
    }
  },
  "x-internal-service-name": "Relay",
  "x-internal-toc-name": "WCF Relays",
  "x-internal-split-type": "Operation"
}