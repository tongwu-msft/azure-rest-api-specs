### YamlMime:RESTOperation
uid: management.azure.com.relay.wcfrelays.listkeys
name: List Keys
service: Relay
groupName: WCF Relays
apiVersion: 2017-04-01
summary: Primary and secondary connection strings to the WCF relay.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}/listKeys?api-version=2017-04-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the Resource group within the Azure subscription.
  types:
  - uid: string
- name: namespaceName
  in: path
  isRequired: true
  description: The namespace name
  types:
  - uid: string
- name: relayName
  in: path
  isRequired: true
  description: The relay name.
  types:
  - uid: string
- name: authorizationRuleName
  in: path
  isRequired: true
  description: The authorization rule name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successful.
  types:
  - uid: AccessKeys
- name: Other Status Codes
  description: Relay error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: AccessKeys
  description: Namespace/Relay Connection String
  kind: object
  properties:
  - name: primaryConnectionString
    description: Primary connection string of the created namespace authorization rule.
    types:
    - uid: string
  - name: secondaryConnectionString
    description: Secondary connection string of the created namespace authorization rule.
    types:
    - uid: string
  - name: primaryKey
    description: A base64-encoded 256-bit primary key for signing and validating the SAS token.
    types:
    - uid: string
  - name: secondaryKey
    description: A base64-encoded 256-bit secondary key for signing and validating the SAS token.
    types:
    - uid: string
  - name: keyName
    description: A string that describes the authorization rule.
    types:
    - uid: string
- name: ErrorResponse
  description: Error reponse indicates Relay service is not able to process the incoming request. The reason is provided in the error message.
  kind: object
  properties:
  - name: code
    description: Error code.
    types:
    - uid: string
  - name: message
    description: Error message indicating why the operation failed.
    types:
    - uid: string
examples:
- name: RelayAuthorizationRuleListKey.json
  request:
    uri: POST https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/resourcegroup/providers/Microsoft.Relay/namespaces/example-RelayNamespace-01/wcfRelays/example-Relay-wcf-01/authorizationRules/example-RelayAuthRules-01/listKeys?api-version=2017-04-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/resourcegroup/providers/Microsoft.Relay/namespaces/example-RelayNamespace-01/wcfRelays/example-Relay-wcf-01/authorizationRules/example-RelayAuthRules-01/listKeys?api-version=2017-04-01
      ```

      # [Go](#tab/Go)
      ``` go
      package armrelay_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/relay/armrelay"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/relay/resource-manager/Microsoft.Relay/stable/2017-04-01/examples/Relay/RelayAuthorizationRuleListKey.json
      func ExampleWCFRelaysClient_ListKeys() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      		return
      	}
      	ctx := context.Background()
      	client, err := armrelay.NewWCFRelaysClient("<subscription-id>", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      		return
      	}
      	res, err := client.ListKeys(ctx,
      		"<resource-group-name>",
      		"<namespace-name>",
      		"<relay-name>",
      		"<authorization-rule-name>",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      		return
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Frelay%2Farmrelay%2Fv0.5.0/sdk/resourcemanager/relay/armrelay/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { RelayAPI } = require("@azure/arm-relay");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Primary and secondary connection strings to the WCF relay.
       *
       * @summary Primary and secondary connection strings to the WCF relay.
       * x-ms-original-file: specification/relay/resource-manager/Microsoft.Relay/stable/2017-04-01/examples/Relay/RelayAuthorizationRuleListKey.json
       */
      async function relayAuthorizationRuleListKeyJson() {
        const subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
        const resourceGroupName = "resourcegroup";
        const namespaceName = "example-RelayNamespace-01";
        const relayName = "example-Relay-wcf-01";
        const authorizationRuleName = "example-RelayAuthRules-01";
        const credential = new DefaultAzureCredential();
        const client = new RelayAPI(credential, subscriptionId);
        const result = await client.wCFRelays.listKeys(
          resourceGroupName,
          namespaceName,
          relayName,
          authorizationRuleName
        );
        console.log(result);
      }

      relayAuthorizationRuleListKeyJson().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-relay_3.1.0/sdk/relay/arm-relay/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "primaryConnectionString": "Endpoint=sb://example-Relaynamespace-01.servicebus.windows.net/;SharedAccessKeyName=example-RelayAuthRules-01;SharedAccessKey=############################################",
        "secondaryConnectionString": "Endpoint=sb://example-Relaynamespace-01.servicebus.windows.net/;SharedAccessKeyName=example-RelayAuthRules-01;SharedAccessKey=############################################",
        "primaryKey": "############################################",
        "secondaryKey": "############################################",
        "keyName": "example-RelayAuthRules-01"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Relay service - Primary and secondary connection strings to the WCF relay.
errorCodes: []
