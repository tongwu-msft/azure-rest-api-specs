### YamlMime:RESTOperation
uid: management.azure.com.relay.wcfrelays.listbynamespace
name: List By Namespace
service: Relay
groupName: WCF Relays
apiVersion: 2017-04-01
summary: Lists the WCF relays within the namespace.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays?api-version=2017-04-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the Resource group within the Azure subscription.
  types:
  - uid: string
- name: namespaceName
  in: path
  isRequired: true
  description: The namespace name
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: WCF relays returned successfully.
  types:
  - uid: WcfRelaysListResult
- name: Other Status Codes
  description: Relay error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: WcfRelaysListResult
  description: The response of the list WCF relay operation.
  kind: object
  properties:
  - name: value
    description: Result of the list WCF relay operation.
    types:
    - uid: WcfRelay
      isArray: true
  - name: nextLink
    description: Link to the next set of results. Not empty if value contains incomplete list of WCF relays.
    types:
    - uid: string
- name: ErrorResponse
  description: Error reponse indicates Relay service is not able to process the incoming request. The reason is provided in the error message.
  kind: object
  properties:
  - name: code
    description: Error code.
    types:
    - uid: string
  - name: message
    description: Error message indicating why the operation failed.
    types:
    - uid: string
- name: WcfRelay
  description: Description of the WCF relay resource.
  kind: object
  properties:
  - name: properties.isDynamic
    isReadyOnly: true
    description: Returns true if the relay is dynamic; otherwise, false.
    types:
    - uid: boolean
  - name: properties.createdAt
    isReadyOnly: true
    description: The time the WCF relay was created.
    types:
    - uid: string
  - name: properties.updatedAt
    isReadyOnly: true
    description: The time the namespace was updated.
    types:
    - uid: string
  - name: properties.listenerCount
    isReadyOnly: true
    description: The number of listeners for this relay. Note that min :1 and max:25 are supported.
    types:
    - uid: integer
  - name: properties.relayType
    description: WCF relay type.
    types:
    - uid: Relaytype
  - name: properties.requiresClientAuthorization
    description: Returns true if client authorization is needed for this relay; otherwise, false.
    types:
    - uid: boolean
  - name: properties.requiresTransportSecurity
    description: Returns true if transport security is needed for this relay; otherwise, false.
    types:
    - uid: boolean
  - name: properties.userMetadata
    description: The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
- name: Relaytype
  description: WCF relay type.
  kind: enum
  properties:
  - name: NetTcp
    types:
    - uid: string
  - name: Http
    types:
    - uid: string
examples:
- name: RelayListAll
  request:
    uri: GET https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/resourcegroup/providers/Microsoft.Relay/namespaces/example-RelayNamespace-01/wcfRelays?api-version=2017-04-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/resourcegroup/providers/Microsoft.Relay/namespaces/example-RelayNamespace-01/wcfRelays?api-version=2017-04-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for WcfRelays ListByNamespace. */
      public final class Main {
          /*
           * x-ms-original-file: specification/relay/resource-manager/Microsoft.Relay/stable/2017-04-01/examples/Relay/RelayListAll.json
           */
          /**
           * Sample code: RelayListAll.
           *
           * @param manager Entry point to RelayManager.
           */
          public static void relayListAll(com.azure.resourcemanager.relay.RelayManager manager) {
              manager.wcfRelays().listByNamespace("resourcegroup", "example-RelayNamespace-01", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-relay_1.0.0-beta.2/sdk/relay/azure-resourcemanager-relay/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armrelay_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/relay/armrelay"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/relay/resource-manager/Microsoft.Relay/stable/2017-04-01/examples/Relay/RelayListAll.json
      func ExampleWCFRelaysClient_NewListByNamespacePager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      		return
      	}
      	ctx := context.Background()
      	client, err := armrelay.NewWCFRelaysClient("<subscription-id>", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      		return
      	}
      	pager := client.NewListByNamespacePager("<resource-group-name>",
      		"<namespace-name>",
      		nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      			return
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Frelay%2Farmrelay%2Fv0.5.0/sdk/resourcemanager/relay/armrelay/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { RelayAPI } = require("@azure/arm-relay");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Lists the WCF relays within the namespace.
       *
       * @summary Lists the WCF relays within the namespace.
       * x-ms-original-file: specification/relay/resource-manager/Microsoft.Relay/stable/2017-04-01/examples/Relay/RelayListAll.json
       */
      async function relayListAll() {
        const subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
        const resourceGroupName = "resourcegroup";
        const namespaceName = "example-RelayNamespace-01";
        const credential = new DefaultAzureCredential();
        const client = new RelayAPI(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.wCFRelays.listByNamespace(resourceGroupName, namespaceName)) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      relayListAll().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-relay_3.1.0/sdk/relay/arm-relay/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/RG1-eg/providers/Microsoft.Relay/namespaces/example-RelayNamespace-01/WcfRelays/example-Relay-Wcf-01",
            "name": "example-Relay-Wcf-01",
            "type": "Microsoft.Relay/Namespaces/WcfRelays",
            "properties": {
              "createdAt": "2017-01-24T00:46:27.0049983Z",
              "updatedAt": "2017-01-24T00:46:27.0049983Z",
              "relayType": "NetTcp",
              "requiresClientAuthorization": true,
              "requiresTransportSecurity": true,
              "isDynamic": false,
              "userMetadata": "usermetadata is a placeholder to store user-defined string data for the HybridConnection endpoint.e.g. it can be used to store  descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored"
            }
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Relay service - Lists the WCF relays within the namespace.
errorCodes: []
