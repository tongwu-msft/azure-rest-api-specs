### YamlMime:RESTOperation
uid: management.azure.com.iot-dps.dpscertificate.createorupdate
name: Create Or Update
service: IoT Hub Device Provisioning Service
groupName: Dps Certificate
apiVersion: 2017-11-15
summary: "Upload the certificate to the provisioning service.  \nAdd new certificate or update an existing certificate."
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}?api-version=2017-11-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription identifier.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Resource group identifier.
  types:
  - uid: string
- name: provisioningServiceName
  in: path
  isRequired: true
  description: The name of the provisioning service.
  types:
  - uid: string
- name: certificateName
  in: path
  isRequired: true
  description: The name of the certificate create or update.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The version of the API.
  types:
  - uid: string
responses:
- name: 200 OK
  description: If certificate already exist and update was successful, the operation returns HTTP status code of 201 (OK).
  types:
  - uid: CertificateResponse
- name: Other Status Codes
  description: Default error response.
  types:
  - uid: ErrorDetails
requestBody:
- name: default
  parameters:
  - name: certificate
    in: body
    description: Base-64 representation of the X509 leaf certificate .cer file or just .pem file content.
    types:
    - uid: string
requestHeader:
- name: If-Match
  in: header
  description: ETag of the certificate. This is required to update an existing certificate, and ignored while creating a brand new certificate.
  types:
  - uid: string
definitions:
- name: CertificateResponse
  description: The X509 Certificate.
  kind: object
  properties:
  - name: properties
    description: properties of a certificate
    types:
    - uid: CertificateProperties
  - name: id
    isReadyOnly: true
    description: The resource identifier.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the certificate.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: The entity tag.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The resource type.
    types:
    - uid: string
- name: ErrorDetails
  description: Error details.
  kind: object
  properties:
  - name: Code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: HttpStatusCode
    isReadyOnly: true
    description: The HTTP status code.
    types:
    - uid: string
  - name: Message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: Details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: string
- name: CertificateBodyDescription
  description: The JSON-serialized X509 Certificate.
  kind: object
  properties:
  - name: certificate
    description: Base-64 representation of the X509 leaf certificate .cer file or just .pem file content.
    types:
    - uid: string
- name: CertificateProperties
  description: The description of an X509 CA Certificate.
  kind: object
  properties:
  - name: subject
    isReadyOnly: true
    description: The certificate's subject name.
    types:
    - uid: string
  - name: expiry
    isReadyOnly: true
    description: The certificate's expiration date and time.
    types:
    - uid: string
  - name: thumbprint
    isReadyOnly: true
    description: The certificate's thumbprint.
    types:
    - uid: string
  - name: isVerified
    isReadyOnly: true
    description: Determines whether certificate has been verified.
    types:
    - uid: boolean
  - name: created
    isReadyOnly: true
    description: The certificate's creation date and time.
    types:
    - uid: string
  - name: updated
    isReadyOnly: true
    description: The certificate's last update date and time.
    types:
    - uid: string
examples:
- name: DPSCreateOrUpdateCertificate
  request:
    uri: PUT https://management.azure.com/subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups/myResourceGroup/providers/Microsoft.Devices/provisioningServices/myFirstProvisioningService/certificates/cert?api-version=2017-11-15
    body: >-
      {
        "certificate": "############################################"
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "subject": "CN=testdevice1",
          "expiry": "Sat, 31 Dec 2039 23:59:59 GMT",
          "thumbprint": "97388663832D0393C9246CAB4FBA2C8677185A25",
          "isVerified": false,
          "created": "Thu, 12 Oct 2017 19:23:50 GMT",
          "updated": "Thu, 12 Oct 2017 19:23:50 GMT"
        },
        "id": "/subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups/myResourceGroup/providers/Microsoft.Devices/ProvisioningServives/myFirstProvisioningService/certificates/cert",
        "name": "cert",
        "type": "Microsoft.Devices/ProvisioningServices/Certificates",
        "etag": "AAAAAAExpNs="
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
