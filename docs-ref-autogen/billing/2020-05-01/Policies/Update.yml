### YamlMime:RESTOperation
uid: management.azure.com.billing.2020-05-01.policies.update
name: Update
service: Billing
groupName: Policies
apiVersion: 2020-05-01
summary: Updates the policies for a billing profile. This operation is supported only for billing accounts with agreement type Microsoft Customer Agreement.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/policies/default?api-version=2020-05-01
uriParameters:
- name: billingAccountName
  in: path
  isRequired: true
  description: The ID that uniquely identifies a billing account.
  types:
  - uid: string
- name: billingProfileName
  in: path
  isRequired: true
  description: The ID that uniquely identifies a billing profile.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The version of the API to be used with the client request. The current version is 2020-05-01.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK. The request has succeeded.
  types:
  - uid: Policy
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.marketplacePurchases
    in: body
    description: The policy that controls whether Azure marketplace purchases are allowed for a billing profile.
    types:
    - uid: MarketplacePurchasesPolicy
  - name: properties.reservationPurchases
    in: body
    description: The policy that controls whether Azure reservation purchases are allowed for a billing profile.
    types:
    - uid: ReservationPurchasesPolicy
  - name: properties.viewCharges
    in: body
    description: The policy that controls whether users with Azure RBAC access to a subscription can view its charges.
    types:
    - uid: ViewChargesPolicy
requestHeader: []
definitions:
- name: Policy
  description: A policy.
  kind: object
  properties:
  - name: properties.marketplacePurchases
    description: The policy that controls whether Azure marketplace purchases are allowed for a billing profile.
    types:
    - uid: MarketplacePurchasesPolicy
  - name: properties.reservationPurchases
    description: The policy that controls whether Azure reservation purchases are allowed for a billing profile.
    types:
    - uid: ReservationPurchasesPolicy
  - name: properties.viewCharges
    description: The policy that controls whether users with Azure RBAC access to a subscription can view its charges.
    types:
    - uid: ViewChargesPolicy
  - name: id
    isReadyOnly: true
    description: Resource Id.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
- name: ErrorResponse
  description: Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.
  kind: object
  properties:
  - name: error
    description: The details of the error.
    types:
    - uid: ErrorDetails
- name: MarketplacePurchasesPolicy
  description: The policy that controls whether Azure marketplace purchases are allowed for a billing profile.
  kind: enum
  properties:
  - name: AllAllowed
    types:
    - uid: string
  - name: OnlyFreeAllowed
    types:
    - uid: string
  - name: NotAllowed
    types:
    - uid: string
- name: ReservationPurchasesPolicy
  description: The policy that controls whether Azure reservation purchases are allowed for a billing profile.
  kind: enum
  properties:
  - name: Allowed
    types:
    - uid: string
  - name: NotAllowed
    types:
    - uid: string
- name: ViewChargesPolicy
  description: The policy that controls whether users with Azure RBAC access to a subscription can view its charges.
  kind: enum
  properties:
  - name: Allowed
    types:
    - uid: string
  - name: NotAllowed
    types:
    - uid: string
- name: ErrorDetails
  description: The details of the error.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Error message indicating why the operation failed.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The target of the particular error.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The sub details of the error.
    types:
    - uid: ErrorSubDetails
      isArray: true
- name: ErrorSubDetails
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Error message indicating why the operation failed.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The target of the particular error.
    types:
    - uid: string
examples:
- name: UpdatePolicy
  request:
    uri: PUT https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/policies/default?api-version=2020-05-01
    body: >-
      {
        "properties": {
          "marketplacePurchases": "OnlyFreeAllowed",
          "reservationPurchases": "NotAllowed",
          "viewCharges": "Allowed"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/policies/default?api-version=2020-05-01

      {
        "properties": {
          "marketplacePurchases": "OnlyFreeAllowed",
          "reservationPurchases": "NotAllowed",
          "viewCharges": "Allowed"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.billing.fluent.models.PolicyInner;
      import com.azure.resourcemanager.billing.models.MarketplacePurchasesPolicy;
      import com.azure.resourcemanager.billing.models.ReservationPurchasesPolicy;
      import com.azure.resourcemanager.billing.models.ViewChargesPolicy;

      /** Samples for Policies Update. */
      public final class Main {
          /*
           * x-ms-original-file: specification/billing/resource-manager/Microsoft.Billing/stable/2020-05-01/examples/UpdatePolicy.json
           */
          /**
           * Sample code: UpdatePolicy.
           *
           * @param manager Entry point to BillingManager.
           */
          public static void updatePolicy(com.azure.resourcemanager.billing.BillingManager manager) {
              manager
                  .policies()
                  .updateWithResponse(
                      "{billingAccountName}",
                      "{billingProfileName}",
                      new PolicyInner()
                          .withMarketplacePurchases(MarketplacePurchasesPolicy.ONLY_FREE_ALLOWED)
                          .withReservationPurchases(ReservationPurchasesPolicy.NOT_ALLOWED)
                          .withViewCharges(ViewChargesPolicy.ALLOWED),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-billing_1.0.0-beta.2/sdk/billing/azure-resourcemanager-billing/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armbilling_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/billing/armbilling"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/billing/resource-manager/Microsoft.Billing/stable/2020-05-01/examples/UpdatePolicy.json
      func ExamplePoliciesClient_Update() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armbilling.NewPoliciesClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Update(ctx,
      		"{billingAccountName}",
      		"{billingProfileName}",
      		armbilling.Policy{
      			Properties: &armbilling.PolicyProperties{
      				MarketplacePurchases: to.Ptr(armbilling.MarketplacePurchasesPolicyOnlyFreeAllowed),
      				ReservationPurchases: to.Ptr(armbilling.ReservationPurchasesPolicyNotAllowed),
      				ViewCharges:          to.Ptr(armbilling.ViewChargesPolicyAllowed),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fbilling%2Farmbilling%2Fv0.5.0/sdk/resourcemanager/billing/armbilling/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/policies/default",
        "name": "default",
        "type": "Microsoft.Billing/billingAccounts/billingProfiles/policies",
        "properties": {
          "marketplacePurchases": "OnlyFreeAllowed",
          "reservationPurchases": "NotAllowed",
          "viewCharges": "Allowed"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Updates the policies for a billing profile. This operation is supported only for billing accounts with agreement type Microsoft Customer Agreement.
errorCodes: []
