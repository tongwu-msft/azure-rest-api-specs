### YamlMime:RESTOperation
uid: management.azure.com.mariadb.virtualnetworkrules.listbyserver
name: List By Server
service: MariaDB
groupName: Virtual Network Rules
apiVersion: 2018-06-01
summary: Gets a list of virtual network rules in a server.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/virtualNetworkRules?api-version=2018-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved the list of virtual network rules.
  types:
  - uid: VirtualNetworkRuleListResult
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 ResourceNotFound - The requested resource was not found.
requestHeader: []
definitions:
- name: VirtualNetworkRuleListResult
  description: A list of virtual network rules.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: Array of results.
    types:
    - uid: VirtualNetworkRule
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: Link to retrieve next page of results.
    types:
    - uid: string
- name: VirtualNetworkRule
  description: A virtual network rule.
  kind: object
  properties:
  - name: properties.virtualNetworkSubnetId
    description: The ARM resource id of the virtual network subnet.
    types:
    - uid: string
  - name: properties.ignoreMissingVnetServiceEndpoint
    description: Create firewall rule before the virtual network has vnet service endpoint enabled.
    types:
    - uid: boolean
  - name: properties.state
    isReadyOnly: true
    description: Virtual Network Rule State
    types:
    - uid: VirtualNetworkRuleState
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: VirtualNetworkRuleState
  description: Virtual Network Rule State
  kind: enum
  properties:
  - name: Initializing
    types:
    - uid: string
  - name: InProgress
    types:
    - uid: string
  - name: Ready
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Unknown
    types:
    - uid: string
examples:
- name: List virtual network rules
  request:
    uri: GET https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforMariaDB/servers/vnet-test-svr/virtualNetworkRules?api-version=2018-06-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforMariaDB/servers/vnet-test-svr/virtualNetworkRules?api-version=2018-06-01
      ```

      # [Go](#tab/Go)
      ``` go
      package armmariadb_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/mariadb/armmariadb"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/mariadb/resource-manager/Microsoft.DBforMariaDB/stable/2018-06-01/examples/VirtualNetworkRulesList.json
      func ExampleVirtualNetworkRulesClient_NewListByServerPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armmariadb.NewVirtualNetworkRulesClient("ffffffff-ffff-ffff-ffff-ffffffffffff", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListByServerPager("TestGroup",
      		"vnet-test-svr",
      		nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fmariadb%2Farmmariadb%2Fv1.0.0/sdk/resourcemanager/mariadb/armmariadb/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { MariaDBManagementClient } = require("@azure/arm-mariadb");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a list of virtual network rules in a server.
       *
       * @summary Gets a list of virtual network rules in a server.
       * x-ms-original-file: specification/mariadb/resource-manager/Microsoft.DBforMariaDB/stable/2018-06-01/examples/VirtualNetworkRulesList.json
       */
      async function listVirtualNetworkRules() {
        const subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
        const resourceGroupName = "TestGroup";
        const serverName = "vnet-test-svr";
        const credential = new DefaultAzureCredential();
        const client = new MariaDBManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.virtualNetworkRules.listByServer(resourceGroupName, serverName)) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      listVirtualNetworkRules().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-mariadb_2.0.1/sdk/mariadb/arm-mariadb/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforMariaDB/servers/vnet-test-svr/virtualNetworkRules/vnet-firewall-rule",
            "name": "vnet-firewall-rule",
            "type": "Microsoft.DBforMariaDB/servers/virtualNetworkRules",
            "properties": {
              "ignoreMissingVnetServiceEndpoint": false,
              "state": "Ready",
              "virtualNetworkSubnetId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet"
            }
          },
          {
            "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforMariaDB/servers/vnet-test-svr/virtualNetworkRules/vnet-firewall-rule",
            "name": "vnet-firewall-rule",
            "type": "Microsoft.DBforMariaDB/servers/virtualNetworkRules",
            "properties": {
              "ignoreMissingVnetServiceEndpoint": false,
              "state": "Ready",
              "virtualNetworkSubnetId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet"
            }
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about MariaDB service - Gets a list of virtual network rules in a server.
errorCodes: []
