### YamlMime:RESTOperation
uid: faceapi.face.detectwithstream
name: Detect With Stream
service: Cognitive Services - Face
groupName: Face
apiVersion: "1.0"
summary: >-
  Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes.<br />

  * No image will be stored. Only the extracted face feature will be stored on server. The faceId is an identifier of the face feature and will be used in [Face - Identify](https://docs.microsoft.com/rest/api/faceapi/face/identify), [Face - Verify](https://docs.microsoft.com/rest/api/faceapi/face/verifyfacetoface), and [Face - Find Similar](https://docs.microsoft.com/rest/api/faceapi/face/findsimilar). The stored face feature(s) will expire and be deleted at the time specified by faceIdTimeToLive after the original detection call.

  * Optional parameters include faceId, landmarks, and attributes. Attributes include age, gender, headPose, smile, facialHair, glasses, emotion, hair, makeup, occlusion, accessories, blur, exposure, noise, and mask. Some of the results returned for specific attributes may not be highly accurate.

  * JPEG, PNG, GIF (the first frame), and BMP format are supported. The allowed image file size is from 1KB to 6MB.

  * Up to 100 faces can be returned for an image. Faces are ranked by face rectangle size from large to small.

  * For optimal results when querying [Face - Identify](https://docs.microsoft.com/rest/api/faceapi/face/identify), [Face - Verify](https://docs.microsoft.com/rest/api/faceapi/face/verifyfacetoface), and [Face - Find Similar](https://docs.microsoft.com/rest/api/faceapi/face/findsimilar) ('returnFaceId' is true), please use faces that are: frontal, clear, and with a minimum size of 200x200 pixels (100 pixels between eyes).

  * The minimum detectable face size is 36x36 pixels in an image no larger than 1920x1080 pixels. Images with dimensions higher than 1920x1080 pixels will need a proportionally larger minimum face size.

  * Different 'detectionModel' values can be provided. To use and compare different detection models, please refer to [How to specify a detection model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)

  * Different 'recognitionModel' values are provided. If follow-up operations like Verify, Identify, Find Similar are needed, please specify the recognition model with 'recognitionModel' parameter. The default value for 'recognitionModel' is 'recognition_01', if latest model needed, please explicitly specify the model you need in this parameter. Once specified, the detected faceIds will be associated with the specified recognition model. More details, please refer to [Specify a recognition model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model).
consumes:
- application/octet-stream
produces:
- application/json
paths:
- content: POST {Endpoint}/face/v1.0/detect
- content: POST {Endpoint}/face/v1.0/detect?overload=stream&returnFaceId={returnFaceId}&returnFaceLandmarks={returnFaceLandmarks}&returnFaceAttributes={returnFaceAttributes}&recognitionModel={recognitionModel}&returnRecognitionModel={returnRecognitionModel}&detectionModel={detectionModel}&faceIdTimeToLive={faceIdTimeToLive}
  isOptional: true
uriParameters:
- name: Endpoint
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: 'Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).'
  types:
  - uid: string
- name: returnFaceId
  in: query
  description: A value indicating whether the operation should return faceIds of detected faces.
  types:
  - uid: boolean
- name: returnFaceLandmarks
  in: query
  description: A value indicating whether the operation should return landmarks of the detected faces.
  types:
  - uid: boolean
- name: returnFaceAttributes
  in: query
  description: Analyze and return the one or more specified face attributes in the comma-separated string like "returnFaceAttributes=age,gender". The available attributes depends on the 'detectionModel' specified. 'detection_01' supports age, gender, headPose, smile, facialHair, glasses, emotion, hair, makeup, occlusion, accessories, blur, exposure, and noise. While 'detection_02' does not support any attributes and 'detection_03' only supports mask. Note that each face attribute analysis has additional computational and time cost.
  types:
  - uid: array
- name: recognitionModel
  in: query
  description: Name of recognition model. Recognition model is used when the face features are extracted and associated with detected faceIds, (Large)FaceList or (Large)PersonGroup. A recognition model name can be provided when performing Face - Detect or (Large)FaceList - Create or (Large)PersonGroup - Create. The default value is 'recognition_01', if latest model needed, please explicitly specify the model you need.
  types:
  - uid: RecognitionModel
- name: returnRecognitionModel
  in: query
  description: A value indicating whether the operation should return 'recognitionModel' in response.
  types:
  - uid: boolean
- name: detectionModel
  in: query
  description: Name of detection model. Detection model is used to detect faces in the submitted image. A detection model name can be provided when performing Face - Detect or (Large)FaceList - Add Face or (Large)PersonGroup - Add Face. The default value is 'detection_01', if another model is needed, please explicitly specify it.
  types:
  - uid: DetectionModel
- name: faceIdTimeToLive
  in: query
  description: The number of seconds for the faceId being cached. Supported range from 60 seconds up to 86400 seconds. The default value is 86400 (24 hours).
  types:
  - uid: integer
responses:
- name: 200 OK
  description: A successful call returns an array of face entries ranked by face rectangle size in descending order. An empty response indicates no faces detected.
  types:
  - uid: DetectedFace
    isArray: true
- name: Other Status Codes
  description: Error response.
  types:
  - uid: APIError
requestBody:
- name: default
  parameters:
  - name: Image
    in: body
    description: An image stream.
    types:
    - uid: object
requestHeader:
- name: Ocp-Apim-Subscription-Key
  in: header
  isRequired: true
  types:
  - uid: string
definitions:
- name: RecognitionModel
  description: Name of recognition model. Recognition model is used when the face features are extracted and associated with detected faceIds, (Large)FaceList or (Large)PersonGroup. A recognition model name can be provided when performing Face - Detect or (Large)FaceList - Create or (Large)PersonGroup - Create. The default value is 'recognition_01', if latest model needed, please explicitly specify the model you need.
  kind: enum
  properties:
  - name: recognition_01
    types:
    - uid: string
  - name: recognition_02
    types:
    - uid: string
  - name: recognition_03
    types:
    - uid: string
  - name: recognition_04
    types:
    - uid: string
- name: DetectionModel
  description: Name of detection model. Detection model is used to detect faces in the submitted image. A detection model name can be provided when performing Face - Detect or (Large)FaceList - Add Face or (Large)PersonGroup - Add Face. The default value is 'detection_01', if another model is needed, please explicitly specify it.
  kind: enum
  properties:
  - name: detection_01
    types:
    - uid: string
  - name: detection_02
    types:
    - uid: string
  - name: detection_03
    types:
    - uid: string
- name: DetectedFace
  description: Detected Face object.
  kind: object
  properties:
  - name: faceId
    description: ''
    types:
    - uid: string
  - name: recognitionModel
    description: Name of recognition model. Recognition model is used when the face features are extracted and associated with detected faceIds, (Large)FaceList or (Large)PersonGroup. A recognition model name can be provided when performing Face - Detect or (Large)FaceList - Create or (Large)PersonGroup - Create. The default value is 'recognition_01', if latest model needed, please explicitly specify the model you need.
    types:
    - uid: RecognitionModel
  - name: faceRectangle
    description: A rectangle within which a face can be found
    types:
    - uid: FaceRectangle
  - name: faceLandmarks
    description: A collection of 27-point face landmarks pointing to the important positions of face components.
    types:
    - uid: FaceLandmarks
  - name: faceAttributes
    description: Face Attributes
    types:
    - uid: FaceAttributes
- name: APIError
  description: Error information returned by the API
  kind: object
  properties:
  - name: error
    description: Error body.
    types:
    - uid: Error
- name: FaceRectangle
  description: A rectangle within which a face can be found
  kind: object
  properties:
  - name: width
    description: The width of the rectangle, in pixels.
    types:
    - uid: integer
  - name: height
    description: The height of the rectangle, in pixels.
    types:
    - uid: integer
  - name: left
    description: The distance from the left edge if the image to the left edge of the rectangle, in pixels.
    types:
    - uid: integer
  - name: top
    description: The distance from the top edge if the image to the top edge of the rectangle, in pixels.
    types:
    - uid: integer
- name: FaceLandmarks
  description: A collection of 27-point face landmarks pointing to the important positions of face components.
  kind: object
  properties:
  - name: pupilLeft
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: pupilRight
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: noseTip
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: mouthLeft
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: mouthRight
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: eyebrowLeftOuter
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: eyebrowLeftInner
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: eyeLeftOuter
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: eyeLeftTop
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: eyeLeftBottom
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: eyeLeftInner
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: eyebrowRightInner
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: eyebrowRightOuter
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: eyeRightInner
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: eyeRightTop
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: eyeRightBottom
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: eyeRightOuter
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: noseRootLeft
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: noseRootRight
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: noseLeftAlarTop
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: noseRightAlarTop
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: noseLeftAlarOutTip
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: noseRightAlarOutTip
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: upperLipTop
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: upperLipBottom
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: underLipTop
    description: Coordinates within an image
    types:
    - uid: Coordinate
  - name: underLipBottom
    description: Coordinates within an image
    types:
    - uid: Coordinate
- name: FaceAttributes
  description: Face Attributes
  kind: object
  properties:
  - name: age
    description: Age in years
    types:
    - uid: number
  - name: gender
    description: Possible gender of the face.
    types:
    - uid: Gender
  - name: smile
    description: 'Smile intensity, a number between [0,1] '
    types:
    - uid: number
  - name: facialHair
    description: Properties describing facial hair attributes.
    types:
    - uid: FacialHair
  - name: glasses
    description: Glasses type if any of the face.
    types:
    - uid: GlassesType
  - name: headPose
    description: Properties indicating head pose of the face.
    types:
    - uid: HeadPose
  - name: emotion
    description: Properties describing facial emotion in form of confidence ranging from 0 to 1.
    types:
    - uid: Emotion
  - name: hair
    description: Properties describing hair attributes.
    types:
    - uid: Hair
  - name: makeup
    description: Properties describing the presence of makeup on a given face.
    types:
    - uid: Makeup
  - name: occlusion
    description: Properties describing occlusions on a given face.
    types:
    - uid: Occlusion
  - name: accessories
    description: Properties describing any accessories on a given face.
    types:
    - uid: Accessory
      isArray: true
  - name: blur
    description: Properties describing any presence of blur within the image.
    types:
    - uid: Blur
  - name: exposure
    description: Properties describing exposure level of the image.
    types:
    - uid: Exposure
  - name: noise
    description: Properties describing noise level of the image.
    types:
    - uid: Noise
  - name: mask
    description: Properties describing the presence of a mask on a given face.
    types:
    - uid: Mask
- name: Error
  description: Error body.
  kind: object
  properties:
  - name: code
    description: ''
    types:
    - uid: string
  - name: message
    description: ''
    types:
    - uid: string
- name: Coordinate
  description: Coordinates within an image
  kind: object
  properties:
  - name: x
    description: The horizontal component, in pixels.
    types:
    - uid: number
  - name: y
    description: The vertical component, in pixels.
    types:
    - uid: number
- name: Gender
  description: Possible gender of the face.
  kind: enum
  properties:
  - name: male
    types:
    - uid: string
  - name: female
    types:
    - uid: string
- name: FacialHair
  description: Properties describing facial hair attributes.
  kind: object
  properties:
  - name: moustache
    description: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
    types:
    - uid: number
  - name: beard
    description: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
    types:
    - uid: number
  - name: sideburns
    description: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
    types:
    - uid: number
- name: GlassesType
  description: Glasses type if any of the face.
  kind: enum
  properties:
  - name: noGlasses
    types:
    - uid: string
  - name: readingGlasses
    types:
    - uid: string
  - name: sunglasses
    types:
    - uid: string
  - name: swimmingGoggles
    types:
    - uid: string
- name: HeadPose
  description: Properties indicating head pose of the face.
  kind: object
  properties:
  - name: roll
    description: ''
    types:
    - uid: number
  - name: yaw
    description: ''
    types:
    - uid: number
  - name: pitch
    description: ''
    types:
    - uid: number
- name: Emotion
  description: Properties describing facial emotion in form of confidence ranging from 0 to 1.
  kind: object
  properties:
  - name: anger
    description: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
    types:
    - uid: number
  - name: contempt
    description: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
    types:
    - uid: number
  - name: disgust
    description: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
    types:
    - uid: number
  - name: fear
    description: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
    types:
    - uid: number
  - name: happiness
    description: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
    types:
    - uid: number
  - name: neutral
    description: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
    types:
    - uid: number
  - name: sadness
    description: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
    types:
    - uid: number
  - name: surprise
    description: A number ranging from 0 to 1 indicating a level of confidence associated with a property.
    types:
    - uid: number
- name: Hair
  description: Properties describing hair attributes.
  kind: object
  properties:
  - name: bald
    description: A number describing confidence level of whether the person is bald.
    types:
    - uid: number
  - name: invisible
    description: A boolean value describing whether the hair is visible in the image.
    types:
    - uid: boolean
  - name: hairColor
    description: An array of candidate colors and confidence level in the presence of each.
    types:
    - uid: HairColor
      isArray: true
- name: Makeup
  description: Properties describing the presence of makeup on a given face.
  kind: object
  properties:
  - name: eyeMakeup
    description: A boolean value describing whether eye makeup is present on a face.
    types:
    - uid: boolean
  - name: lipMakeup
    description: A boolean value describing whether lip makeup is present on a face.
    types:
    - uid: boolean
- name: Occlusion
  description: Properties describing occlusions on a given face.
  kind: object
  properties:
  - name: foreheadOccluded
    description: A boolean value indicating whether forehead is occluded.
    types:
    - uid: boolean
  - name: eyeOccluded
    description: A boolean value indicating whether eyes are occluded.
    types:
    - uid: boolean
  - name: mouthOccluded
    description: A boolean value indicating whether the mouth is occluded.
    types:
    - uid: boolean
- name: Accessory
  description: Accessory item and corresponding confidence level.
  kind: object
  properties:
  - name: type
    description: Type of an accessory
    types:
    - uid: AccessoryType
  - name: confidence
    description: Confidence level of an accessory
    types:
    - uid: number
- name: Blur
  description: Properties describing any presence of blur within the image.
  kind: object
  properties:
  - name: blurLevel
    description: An enum value indicating level of blurriness.
    types:
    - uid: BlurLevel
  - name: value
    description: A number indicating level of blurriness ranging from 0 to 1.
    types:
    - uid: number
- name: Exposure
  description: Properties describing exposure level of the image.
  kind: object
  properties:
  - name: exposureLevel
    description: An enum value indicating level of exposure.
    types:
    - uid: ExposureLevel
  - name: value
    description: A number indicating level of exposure level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure.
    types:
    - uid: number
- name: Noise
  description: Properties describing noise level of the image.
  kind: object
  properties:
  - name: noiseLevel
    description: An enum value indicating level of noise.
    types:
    - uid: NoiseLevel
  - name: value
    description: A number indicating level of noise level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure. [0, 0.3) is low noise level. [0.3, 0.7) is medium noise level. [0.7, 1] is high noise level.
    types:
    - uid: number
- name: Mask
  description: Properties describing the presence of a mask on a given face.
  kind: object
  properties:
  - name: type
    description: Mask type if any of the face
    types:
    - uid: MaskType
  - name: noseAndMouthCovered
    description: A boolean value indicating whether nose and mouth are covered.
    types:
    - uid: boolean
- name: HairColor
  description: Hair color and associated confidence
  kind: object
  properties:
  - name: color
    description: Name of the hair color.
    types:
    - uid: HairColorType
  - name: confidence
    description: Confidence level of the color
    types:
    - uid: number
- name: AccessoryType
  description: Type of an accessory
  kind: enum
  properties:
  - name: headWear
    types:
    - uid: string
  - name: glasses
    types:
    - uid: string
  - name: mask
    types:
    - uid: string
- name: BlurLevel
  description: An enum value indicating level of blurriness.
  kind: enum
  properties:
  - name: Low
    types:
    - uid: string
  - name: Medium
    types:
    - uid: string
  - name: High
    types:
    - uid: string
- name: ExposureLevel
  description: An enum value indicating level of exposure.
  kind: enum
  properties:
  - name: UnderExposure
    types:
    - uid: string
  - name: GoodExposure
    types:
    - uid: string
  - name: OverExposure
    types:
    - uid: string
- name: NoiseLevel
  description: An enum value indicating level of noise.
  kind: enum
  properties:
  - name: Low
    types:
    - uid: string
  - name: Medium
    types:
    - uid: string
  - name: High
    types:
    - uid: string
- name: MaskType
  description: Mask type if any of the face
  kind: enum
  properties:
  - name: noMask
    types:
    - uid: string
  - name: faceMask
    types:
    - uid: string
  - name: otherMaskOrOcclusion
    types:
    - uid: string
  - name: uncertain
    types:
    - uid: string
- name: HairColorType
  description: Name of the hair color.
  kind: enum
  properties:
  - name: unknown
    types:
    - uid: string
  - name: white
    types:
    - uid: string
  - name: gray
    types:
    - uid: string
  - name: blond
    types:
    - uid: string
  - name: brown
    types:
    - uid: string
  - name: red
    types:
    - uid: string
  - name: black
    types:
    - uid: string
  - name: other
    types:
    - uid: string
examples:
- name: Detect with stream example
  request:
    uri: >-
      POST {Endpoint}/face/v1.0/detect?overload=stream&returnFaceAttributes=[

        "age",

        "gender",

        "headPose",

        "smile",

        "facialHair",

        "glasses",

        "emotion",

        "hair",

        "makeup",

        "occlusion",

        "accessories",

        "blur",

        "exposure",

        "noise"

      ]&recognitionModel=recognition_01&returnRecognitionModel=True&detectionModel=detection_01
    body: "\"{Image binary in base 64 format}\""
    headers:
    - name: Ocp-Apim-Subscription-Key
      value: '{API key}'
  responses:
  - statusCode: "200"
    body: >-
      [
        {
          "faceId": "c5c24a82-6845-4031-9d5d-978df9175426",
          "recognitionModel": "recognition_01",
          "faceRectangle": {
            "width": 78,
            "height": 78,
            "left": 394,
            "top": 54
          },
          "faceLandmarks": {
            "pupilLeft": {
              "x": 412.7,
              "y": 78.4
            },
            "pupilRight": {
              "x": 446.8,
              "y": 74.2
            },
            "noseTip": {
              "x": 437.7,
              "y": 92.4
            },
            "mouthLeft": {
              "x": 417.8,
              "y": 114.4
            },
            "mouthRight": {
              "x": 451.3,
              "y": 109.3
            },
            "eyebrowLeftOuter": {
              "x": 397.9,
              "y": 78.5
            },
            "eyebrowLeftInner": {
              "x": 425.4,
              "y": 70.5
            },
            "eyeLeftOuter": {
              "x": 406.7,
              "y": 80.6
            },
            "eyeLeftTop": {
              "x": 412.2,
              "y": 76.2
            },
            "eyeLeftBottom": {
              "x": 413,
              "y": 80.1
            },
            "eyeLeftInner": {
              "x": 418.9,
              "y": 78
            },
            "eyebrowRightInner": {
              "x": 4.8,
              "y": 69.7
            },
            "eyebrowRightOuter": {
              "x": 5.5,
              "y": 68.5
            },
            "eyeRightInner": {
              "x": 441.5,
              "y": 75
            },
            "eyeRightTop": {
              "x": 446.4,
              "y": 71.7
            },
            "eyeRightBottom": {
              "x": 447,
              "y": 75.3
            },
            "eyeRightOuter": {
              "x": 451.7,
              "y": 73.4
            },
            "noseRootLeft": {
              "x": 428,
              "y": 77.1
            },
            "noseRootRight": {
              "x": 435.8,
              "y": 75.6
            },
            "noseLeftAlarTop": {
              "x": 428.3,
              "y": 89.7
            },
            "noseRightAlarTop": {
              "x": 442.2,
              "y": 87
            },
            "noseLeftAlarOutTip": {
              "x": 424.3,
              "y": 96.4
            },
            "noseRightAlarOutTip": {
              "x": 446.6,
              "y": 92.5
            },
            "upperLipTop": {
              "x": 437.6,
              "y": 105.9
            },
            "upperLipBottom": {
              "x": 437.6,
              "y": 108.2
            },
            "underLipTop": {
              "x": 436.8,
              "y": 111.4
            },
            "underLipBottom": {
              "x": 437.3,
              "y": 114.5
            }
          },
          "faceAttributes": {
            "age": 71,
            "gender": "male",
            "smile": 0.88,
            "facialHair": {
              "moustache": 0.8,
              "beard": 0.1,
              "sideburns": 0.02
            },
            "glasses": "sunglasses",
            "headPose": {
              "roll": 2.1,
              "yaw": 3,
              "pitch": 1.6
            },
            "emotion": {
              "anger": 0.575,
              "contempt": 0,
              "disgust": 0.006,
              "fear": 0.008,
              "happiness": 0.394,
              "neutral": 0.013,
              "sadness": 0,
              "surprise": 0.004
            },
            "hair": {
              "bald": 0,
              "invisible": false,
              "hairColor": [
                {
                  "color": "brown",
                  "confidence": 1
                },
                {
                  "color": "blond",
                  "confidence": 0.88
                },
                {
                  "color": "black",
                  "confidence": 0.48
                },
                {
                  "color": "other",
                  "confidence": 0.11
                },
                {
                  "color": "gray",
                  "confidence": 0.07
                },
                {
                  "color": "red",
                  "confidence": 0.03
                }
              ]
            },
            "makeup": {
              "eyeMakeup": true,
              "lipMakeup": false
            },
            "occlusion": {
              "foreheadOccluded": false,
              "eyeOccluded": false,
              "mouthOccluded": false
            },
            "accessories": [
              {
                "type": "headWear",
                "confidence": 0.99
              },
              {
                "type": "glasses",
                "confidence": 1
              },
              {
                "type": "mask",
                "confidence": 0.87
              }
            ],
            "blur": {
              "blurLevel": "Medium",
              "value": 0.51
            },
            "exposure": {
              "exposureLevel": "GoodExposure",
              "value": 0.55
            },
            "noise": {
              "noiseLevel": "Low",
              "value": 0.12
            }
          }
        }
      ]
security:
- name: Ocp-Apim-Subscription-Key
  type: apiKey
  in: header
errorCodes: []
