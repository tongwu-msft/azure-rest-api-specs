### YamlMime:RESTOperation
uid: storageservices.datalakestoragegen2.path.update
name: Update
service: Storage Services
groupName: Path
apiVersion: 2020-06-12
summary: "Append Data | Flush Data | Set Properties | Set Access Control  \nUploads data to be appended to a file, flushes (writes) previously uploaded data to a file, sets properties for a file or directory, or sets access control for a file or directory. Data can only be appended to a file. Concurrent writes to the same file using multiple clients are not supported. This operation supports conditional HTTP requests. For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)."
consumes:
- application/octet-stream
produces:
- application/json
paths:
- content: PATCH {url}/{filesystem}/{path}?action={action}&mode={mode}
- content: PATCH {url}/{filesystem}/{path}?action={action}&maxRecords={maxRecords}&continuation={continuation}&mode={mode}&forceFlag={forceFlag}&position={position}&retainUncommittedData={retainUncommittedData}&close={close}&timeout={timeout}
  isOptional: true
uriParameters:
- name: url
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The URL of the service account, container, or blob that is the targe of the desired operation.
  types:
  - uid: string
- name: action
  in: query
  isRequired: true
  description: The action must be "append" to upload data to be appended to a file, "flush" to flush previously uploaded data to a file, "setProperties" to set the properties of a file or directory, "setAccessControl" to set the owner, group, permissions, or access control list for a file or directory, or  "setAccessControlRecursive" to set the access control list for a directory recursively. Note that Hierarchical Namespace must be enabled for the account in order to use access control.  Also note that the Access Control List (ACL) includes permissions for the owner, owning group, and others, so the x-ms-permissions and x-ms-acl request headers are mutually exclusive.
  types:
  - uid: PathUpdateAction
- name: maxRecords
  in: query
  description: Optional. Valid for "SetAccessControlRecursive" operation. It specifies the maximum number of files or directories on which the acl change will be applied. If omitted or greater than 2,000, the request will process up to 2,000 items
  types:
  - uid: integer
  format: int32
- name: continuation
  in: query
  description: Optional. The number of paths processed with each invocation is limited. If the number of paths to be processed exceeds this limit, a continuation token is returned in the response header x-ms-continuation. When a continuation token is  returned in the response, it must be percent-encoded and specified in a subsequent invocation of setAcessControlRecursive operation.
  types:
  - uid: string
- name: mode
  in: query
  isRequired: true
  description: Mode "set" sets POSIX access control rights on files and directories, "modify" modifies one or more POSIX access control rights  that pre-exist on files and directories, "remove" removes one or more POSIX access control rights  that were present earlier on files and directories
  types:
  - uid: PathSetAccessControlRecursiveMode
- name: forceFlag
  in: query
  description: Optional. Valid for "SetAccessControlRecursive" operation. If set to false, the operation will terminate quickly on encountering user errors (4XX). If true, the operation will ignore user errors and proceed with the operation on other sub-entities of the directory. Continuation token will only be returned when forceFlag is true in case of user errors. If not set the default value is false for this.
  types:
  - uid: boolean
- name: position
  in: query
  description: This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.  It is required when uploading data to be appended to the file and when flushing previously uploaded data to the file.  The value must be the position where the data is to be appended.  Uploaded data is not immediately flushed, or written, to the file.  To flush, the previously uploaded data must be contiguous, the position parameter must be specified and equal to the length of the file after all data has been written, and there must not be a request entity body included with the request.
  types:
  - uid: integer
  format: int64
- name: retainUncommittedData
  in: query
  description: Valid only for flush operations.  If "true", uncommitted data is retained after the flush operation completes; otherwise, the uncommitted data is deleted after the flush operation.  The default is false.  Data at offsets less than the specified position are written to the file when flush succeeds, but this optional parameter allows data after the flush position to be retained for a future flush operation.
  types:
  - uid: boolean
- name: close
  in: query
  description: Azure Storage Events allow applications to receive notifications when files change. When Azure Storage Events are enabled, a file changed event is raised. This event has a property indicating whether this is the final change to distinguish the difference between an intermediate flush to a file stream and the final close of a file stream. The close query parameter is valid only when the action is "flush" and change notifications are enabled. If the value of close is "true" and the flush operation completes successfully, the service raises a file change notification with a property indicating that this is the final update (the file stream has been closed). If "false" a change notification is raised indicating the file has changed. The default is false. This query parameter is set to true by the Hadoop ABFS driver to indicate that the file stream has been closed."
  types:
  - uid: boolean
- name: timeout
  in: query
  description: The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting Timeouts for Blob Service Operations.</a>
  types:
  - uid: integer
responses:
- name: 200 OK
  headers:
  - name: Date
    value: string
  - name: ETag
    value: string
  - name: Last-Modified
    value: string
  - name: Accept-Ranges
    value: string
  - name: Cache-Control
    value: string
  - name: Content-Disposition
    value: string
  - name: Content-Encoding
    value: string
  - name: Content-Language
    value: string
  - name: Content-Length
    value: integer
  - name: Content-Range
    value: string
  - name: Content-Type
    value: string
  - name: Content-MD5
    value: string
  - name: x-ms-properties
    value: string
  - name: x-ms-continuation
    value: string
  - name: x-ms-request-id
    value: string
  - name: x-ms-version
    value: string
  description: The data was flushed (written) to the file or the properties were set successfully.  Response body is optional and is valid only for "SetAccessControlRecursive"
  types:
  - uid: SetAccessControlRecursiveResponse
- name: 202 Accepted
  headers:
  - name: Content-MD5
    value: string
  - name: Date
    value: string
  - name: x-ms-request-id
    value: string
  - name: x-ms-version
    value: string
  description: The uploaded data was accepted.
- name: Other Status Codes
  headers:
  - name: x-ms-error-code
    value: string
  description: Failure
  types:
  - uid: StorageError
requestBody:
- name: default
  parameters:
  - name: body
    in: body
    description: Initial data
    types:
    - uid: object
requestHeader:
- name: Content-Length
  in: header
  description: Required for "Append Data" and "Flush Data".  Must be 0 for "Flush Data".  Must be the length of the request content in bytes for "Append Data".
  types:
  - uid: integer
  format: int64
- name: x-ms-content-md5
  in: header
  description: Specify the transactional md5 for the body, to be validated by the service.
  types:
  - uid: string
  format: byte
- name: x-ms-lease-id
  in: header
  description: If specified, the operation only succeeds if the resource's lease is active and matches this ID.
  types:
  - uid: string
- name: x-ms-cache-control
  in: header
  description: Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request.
  types:
  - uid: string
- name: x-ms-content-type
  in: header
  description: Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request.
  types:
  - uid: string
- name: x-ms-content-disposition
  in: header
  description: Optional. Sets the blob's Content-Disposition header.
  types:
  - uid: string
- name: x-ms-content-encoding
  in: header
  description: Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request.
  types:
  - uid: string
- name: x-ms-content-language
  in: header
  description: Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request.
  types:
  - uid: string
- name: x-ms-properties
  in: header
  description: Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties.
  types:
  - uid: string
- name: x-ms-owner
  in: header
  description: Optional. The owner of the blob or directory.
  types:
  - uid: string
- name: x-ms-group
  in: header
  description: Optional. The owning group of the blob or directory.
  types:
  - uid: string
- name: x-ms-permissions
  in: header
  description: Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.
  types:
  - uid: string
- name: x-ms-acl
  in: header
  description: Sets POSIX access control rights on files and directories. The value is a comma-separated list of access control entries. Each access control entry (ACE) consists of a scope, a type, a user or group identifier, and permissions in the format "[scope:][type]:[id]:[permissions]".
  types:
  - uid: string
- name: If-Match
  in: header
  description: Specify an ETag value to operate only on blobs with a matching value.
  types:
  - uid: string
  format: etag
- name: If-None-Match
  in: header
  description: Specify an ETag value to operate only on blobs without a matching value.
  types:
  - uid: string
  format: etag
- name: If-Modified-Since
  in: header
  description: Specify this header value to operate only on a blob if it has been modified since the specified date/time.
  types:
  - uid: string
  format: date-time-rfc1123
- name: If-Unmodified-Since
  in: header
  description: Specify this header value to operate only on a blob if it has not been modified since the specified date/time.
  types:
  - uid: string
  format: date-time-rfc1123
- name: x-ms-client-request-id
  in: header
  description: Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.
  types:
  - uid: string
- name: x-ms-version
  in: header
  isRequired: true
  description: Specifies the version of the operation to use for this request.
  types:
  - uid: string
definitions:
- name: PathUpdateAction
  description: The action must be "append" to upload data to be appended to a file, "flush" to flush previously uploaded data to a file, "setProperties" to set the properties of a file or directory, "setAccessControl" to set the owner, group, permissions, or access control list for a file or directory, or  "setAccessControlRecursive" to set the access control list for a directory recursively. Note that Hierarchical Namespace must be enabled for the account in order to use access control.  Also note that the Access Control List (ACL) includes permissions for the owner, owning group, and others, so the x-ms-permissions and x-ms-acl request headers are mutually exclusive.
  kind: enum
  properties:
  - name: append
    types:
    - uid: string
  - name: flush
    types:
    - uid: string
  - name: setProperties
    types:
    - uid: string
  - name: setAccessControl
    types:
    - uid: string
  - name: setAccessControlRecursive
    types:
    - uid: string
- name: PathSetAccessControlRecursiveMode
  description: Mode "set" sets POSIX access control rights on files and directories, "modify" modifies one or more POSIX access control rights  that pre-exist on files and directories, "remove" removes one or more POSIX access control rights  that were present earlier on files and directories
  kind: enum
  properties:
  - name: set
    types:
    - uid: string
  - name: modify
    types:
    - uid: string
  - name: remove
    types:
    - uid: string
- name: SetAccessControlRecursiveResponse
  kind: object
  properties:
  - name: directoriesSuccessful
    description: ''
    types:
    - uid: integer
  - name: filesSuccessful
    description: ''
    types:
    - uid: integer
  - name: failureCount
    description: ''
    types:
    - uid: integer
  - name: failedEntries
    description: ''
    types:
    - uid: AclFailedEntry
      isArray: true
- name: StorageError
  kind: object
  properties:
  - name: error
    description: The service error response object.
    types:
    - uid: Error
- name: AclFailedEntry
  kind: object
  properties:
  - name: name
    description: ''
    types:
    - uid: string
  - name: type
    description: ''
    types:
    - uid: string
  - name: errorMessage
    description: ''
    types:
    - uid: string
- name: Error
  description: The service error response object.
  kind: object
  properties:
  - name: Code
    description: The service error code.
    types:
    - uid: string
  - name: Message
    description: The service error message.
    types:
    - uid: string
examples: []
security: []
errorCodes: []
