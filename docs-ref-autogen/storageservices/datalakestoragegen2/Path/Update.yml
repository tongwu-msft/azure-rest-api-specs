### YamlMime:RESTOperation
uid: storageservices.datalakestoragegen2.path.update
name: Update
service: Storage Services
groupName: Path
apiVersion: 2019-12-12
summary: "Append Data | Flush Data | Set Properties | Set Access Control  \nUploads data to be appended to a file, flushes (writes) previously uploaded data to a file, sets properties for a file or directory, or sets access control for a file or directory. Data can only be appended to a file. This operation supports conditional HTTP requests. For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations)."
consumes:
- application/octet-stream
- text/plain
produces:
- application/json
paths:
- content: PATCH https://{accountName}.{dnsSuffix}/{filesystem}/{path}?action={action}
- content: PATCH https://{accountName}.{dnsSuffix}/{filesystem}/{path}?action={action}&position={position}&retainUncommittedData={retainUncommittedData}&close={close}&mode={mode}&maxRecords={maxRecords}&forceFlag={forceFlag}&continuation={continuation}&timeout={timeout}
  isOptional: true
uriParameters:
- name: accountName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The Azure Storage account name.
  types:
  - uid: string
- name: dnsSuffix
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The DNS suffix for the Azure Data Lake Storage endpoint.
  types:
  - uid: string
- name: filesystem
  in: path
  isRequired: true
  description: The filesystem identifier.
  types:
  - uid: string
  pattern: ^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$
- name: path
  in: path
  isRequired: true
  description: The file or directory path.
  types:
  - uid: string
- name: action
  in: query
  isRequired: true
  description: The action must be "append" to upload data to be appended to a file, "flush" to flush previously uploaded data to a file, "setProperties" to set the properties of a file or directory, or "setAccessControl" to set the owner, group, permissions, or access control list for a file or directory, or "setAccessControlRecursive" to set the access control list for a directory recursively. Note that Hierarchical Namespace must be enabled for the account in order to use access control.  Also note that the Access Control List (ACL) includes permissions for the owner, owning group, and others, so the x-ms-permissions and x-ms-acl request headers are mutually exclusive.
  types:
  - uid: PathUpdateAction
- name: position
  in: query
  description: This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.  It is required when uploading data to be appended to the file and when flushing previously uploaded data to the file.  The value must be the position where the data is to be appended.  Uploaded data is not immediately flushed, or written, to the file.  To flush, the previously uploaded data must be contiguous, the position parameter must be specified and equal to the length of the file after all data has been written, and there must not be a request entity body included with the request.
  types:
  - uid: integer
  format: int64
- name: retainUncommittedData
  in: query
  description: Valid only for flush operations.  If "true", uncommitted data is retained after the flush operation completes; otherwise, the uncommitted data is deleted after the flush operation.  The default is false.  Data at offsets less than the specified position are written to the file when flush succeeds, but this optional parameter allows data after the flush position to be retained for a future flush operation.
  types:
  - uid: boolean
- name: close
  in: query
  description: Azure Storage Events allow applications to receive notifications when files change. When Azure Storage Events are enabled, a file changed event is raised. This event has a property indicating whether this is the final change to distinguish the difference between an intermediate flush to a file stream and the final close of a file stream. The close query parameter is valid only when the action is "flush" and change notifications are enabled. If the value of close is "true" and the flush operation completes successfully, the service raises a file change notification with a property indicating that this is the final update (the file stream has been closed). If "false" a change notification is raised indicating the file has changed. The default is false. This query parameter is set to true by the Hadoop ABFS driver to indicate that the file stream has been closed."
  types:
  - uid: boolean
- name: mode
  in: query
  description: Optional. Valid and required for "setAccessControlRecursive" operation. Mode "set" sets POSIX access control rights on files and directories, "modify" modifies one or more POSIX access control rights  that pre-exist on files and directories, "remove" removes one or more POSIX access control rights that were present earlier on files and directories
  types:
  - uid: string
- name: maxRecords
  in: query
  description: Optional and valid only for "setAccessControlRecursive" operation. It specifies the maximum number of files or directories on which the acl change will be applied. If omitted or greater than 2,000, the request will process up to 2,000 items
  types:
  - uid: integer
  format: int32
- name: forceFlag
  in: query
  description: Optional and valid only for "setAccessControlRecursive" operation. If this is "false" operation will terminate fast on encountering user errors (4XX). If "true" the api will ignore user errors and proceed with the operation on other sub-entities of the directory. Detailed status of user errors will be returned in the response for either scenario. Continuation token will only be returned when forceFlag is "true" in case of user errors. Default value for forceFlag is false.
  types:
  - uid: boolean
- name: continuation
  in: query
  description: Optional and valid only for "setAccessControlRecursive" operation. The number of paths processed with each invocation is limited. If the number of paths to be processed exceeds this limit, a continuation token is returned in the response header x-ms-continuation. When a continuation token is returned in the response, it must be percent-encoded and specified in a subsequent invocation of setAccessControlRecursive operation.
  types:
  - uid: string
- name: timeout
  in: query
  description: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
  types:
  - uid: integer
  format: int32
responses:
- name: 200 OK
  headers:
  - name: Date
    value: string
  - name: ETag
    value: string
  - name: Last-Modified
    value: string
  - name: Accept-Ranges
    value: string
  - name: Cache-Control
    value: string
  - name: Content-Disposition
    value: string
  - name: Content-Encoding
    value: string
  - name: Content-Language
    value: string
  - name: Content-Length
    value: integer
  - name: Content-Range
    value: string
  - name: Content-Type
    value: string
  - name: Content-MD5
    value: string
  - name: x-ms-properties
    value: string
  - name: x-ms-continuation
    value: string
  - name: x-ms-request-id
    value: string
  - name: x-ms-version
    value: string
  description: The data was flushed (written) to the file or the properties were set successfully. Response body is optional and is valid only for "SetAccessControlRecursive"
  types:
  - uid: SetAccessControlRecursiveResponse
- name: 202 Accepted
  headers:
  - name: Content-MD5
    value: string
  - name: Date
    value: string
  - name: x-ms-request-id
    value: string
  - name: x-ms-version
    value: string
  description: The uploaded data was accepted.
- name: Other Status Codes
  headers:
  - name: x-ms-request-id
    value: string
  - name: x-ms-version
    value: string
  description: >-
    An error occurred. The possible HTTP status, code, and message strings are listed below:

    * 400 Bad Request, ContentLengthMustBeZero, "The Content-Length request header must be zero."

    * 400 Bad Request, InvalidAuthenticationInfo, "Authentication information is not given in the correct format. Check the value of Authorization header."

    * 400 Bad Request, InvalidFlushPosition, "The uploaded data is not contiguous or the position query parameter value is not equal to the length of the file after appending the uploaded data."

    * 400 Bad Request, InvalidHeaderValue, "The value for one of the HTTP headers is not in the correct format."

    * 400 Bad Request, InvalidHttpVerb, "The HTTP verb specified is invalid - it is not recognized by the server."

    * 400 Bad Request, InvalidInput, "One of the request inputs is not valid."

    * 400 Bad Request, InvalidPropertyName, "A property name cannot be empty."

    * 400 Bad Request, InvalidPropertyName, "The property name contains invalid characters."

    * 400 Bad Request, InvalidQueryParameterValue, "Value for one of the query parameters specified in the request URI is invalid."

    * 400 Bad Request, InvalidResourceName, "The specified resource name contains invalid characters."

    * 400 Bad Request, InvalidSourceUri, "The source URI is invalid."

    * 400 Bad Request, InvalidUri, "The request URI is invalid."

    * 400 Bad Request, MissingRequiredHeader, "An HTTP header that's mandatory for this request is not specified."

    * 400 Bad Request, MissingRequiredQueryParameter, "A query parameter that's mandatory for this request is not specified."

    * 400 Bad Request, MultipleConditionHeadersNotSupported, "Multiple condition headers are not supported."

    * 400 Bad Request, OutOfRangeInput, "One of the request inputs is out of range."

    * 400 Bad Request, OutOfRangeQueryParameterValue, "One of the query parameters specified in the request URI is outside the permissible range."

    * 400 Bad Request, UnsupportedHeader, "One of the headers specified in the request is not supported."

    * 400 Bad Request, UnsupportedQueryParameter, "One of the query parameters specified in the request URI is not supported."

    * 400 Bad Request, UnsupportedRestVersion, "The specified Rest Version is Unsupported."

    * 403 Forbidden, AccountIsDisabled, "The specified account is disabled."

    * 403 Forbidden, AuthorizationFailure, "This request is not authorized to perform this operation."

    * 403 Forbidden, InsufficientAccountPermissions, "The account being accessed does not have sufficient permissions to execute this operation."

    * 404 Not Found, FilesystemNotFound, "The specified filesystem does not exist."

    * 404 Not Found, PathNotFound, "The specified path does not exist."

    * 404 Not Found, RenameDestinationParentPathNotFound, "The parent directory of the destination path does not exist."

    * 404 Not Found, ResourceNotFound, "The specified resource does not exist."

    * 404 Not Found, SourcePathNotFound, "The source path for a rename operation does not exist."

    * 405 Method Not Allowed, UnsupportedHttpVerb, "The resource doesn't support the specified HTTP verb."

    * 409 Conflict, DestinationPathIsBeingDeleted, "The specified destination path is marked to be deleted."

    * 409 Conflict, DirectoryNotEmpty, "The recursive query parameter value must be true to delete a non-empty directory."

    * 409 Conflict, FilesystemAlreadyExists, "The specified filesystem already exists."

    * 409 Conflict, FilesystemBeingDeleted, "The specified filesystem is being deleted."

    * 409 Conflict, InvalidDestinationPath, "The specified path, or an element of the path, exists and its resource type is invalid for this operation."* 409 Conflict, InvalidFlushOperation, "The resource was created or modified by the Blob Service API and cannot be written to by the Data Lake Storage Service API."

    * 409 Conflict, InvalidRenameSourcePath, "The source directory cannot be the same as the destination directory, nor can the destination be a subdirectory of the source directory."

    * 409 Conflict, InvalidSourceOrDestinationResourceType, "The source and destination resource type must be identical."

    * 409 Conflict, LeaseAlreadyPresent, "There is already a lease present."

    * 409 Conflict, LeaseIdMismatchWithLeaseOperation, "The lease ID specified did not match the lease ID for the resource with the specified lease operation."

    * 409 Conflict, LeaseIsAlreadyBroken, "The lease has already been broken and cannot be broken again."

    * 409 Conflict, LeaseIsBreakingAndCannotBeAcquired, "The lease ID matched, but the lease is currently in breaking state and cannot be acquired until it is broken."

    * 409 Conflict, LeaseIsBreakingAndCannotBeChanged, "The lease ID matched, but the lease is currently in breaking state and cannot be changed."

    * 409 Conflict, LeaseIsBrokenAndCannotBeRenewed, "The lease ID matched, but the lease has been broken explicitly and cannot be renewed."

    * 409 Conflict, LeaseNameMismatch, "The lease name specified did not match the existing lease name."

    * 409 Conflict, LeaseNotPresentWithLeaseOperation, "The lease ID is not present with the specified lease operation."

    * 409 Conflict, PathAlreadyExists, "The specified path already exists."

    * 409 Conflict, PathConflict, "The specified path, or an element of the path, exists and its resource type is invalid for this operation."

    * 409 Conflict, SourcePathIsBeingDeleted, "The specified source path is marked to be deleted."

    * 409 Conflict, ResourceTypeMismatch, "The resource type specified in the request does not match the type of the resource."

    * 412 Precondition Failed, ConditionNotMet, "The condition specified using HTTP conditional header(s) is not met."

    * 412 Precondition Failed, LeaseIdMismatch, "The lease ID specified did not match the lease ID for the resource."

    * 412 Precondition Failed, LeaseIdMissing, "There is currently a lease on the resource and no lease ID was specified in the request."

    * 412 Precondition Failed, LeaseNotPresent, "There is currently no lease on the resource."

    * 412 Precondition Failed, LeaseLost, "A lease ID was specified, but the lease for the resource has expired."

    * 412 Precondition Failed, SourceConditionNotMet, "The source condition specified using HTTP conditional header(s) is not met."

    * 413 Request Entity Too Large, RequestBodyTooLarge, "The request body is too large and exceeds the maximum permissible limit."

    * 416 Requested Range Not Satisfiable, InvalidRange, "The range specified is invalid for the current size of the resource."

    * 500 Internal Server Error, InternalError, "The server encountered an internal error. Please retry the request."

    * 500 Internal Server Error, OperationTimedOut, "The operation could not be completed within the permitted time."

    * 503 Service Unavailable, ServerBusy, "Egress is over the account limit."

    * 503 Service Unavailable, ServerBusy, "Ingress is over the account limit."

    * 503 Service Unavailable, ServerBusy, "Operations per second is over the account limit."

    * 503 Service Unavailable, ServerBusy, "The server is currently unable to receive requests. Please retry your request."
  types:
  - uid: DataLakeStorageError
requestBody:
- name: default
  parameters:
  - name: requestBody
    in: body
    description: Valid only for append operations.  The data to be uploaded and appended to the file.
    types:
    - uid: object
requestHeader:
- name: Content-Length
  in: header
  description: Required for "Append Data" and "Flush Data".  Must be 0 for "Flush Data".  Must be the length of the request content in bytes for "Append Data".
  types:
  - uid: integer
  format: int64
- name: Content-MD5
  in: header
  description: Optional. An MD5 hash of the request content. This header is valid on "Append" and "Flush" operations. This hash is used to verify the integrity of the request content during transport. When this header is specified, the storage service compares the hash of the content that has arrived with this header value. If the two hashes do not match, the operation will fail with error code 400 (Bad Request). Note that this MD5 hash is not stored with the file. This header is associated with the request content, and not with the stored content of the file itself.
  types:
  - uid: string
- name: x-ms-lease-id
  in: header
  description: The lease ID must be specified if there is an active lease. Invalid for "setAccessControlRecursive" operations.
  types:
  - uid: string
  pattern: ^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$
- name: x-ms-cache-control
  in: header
  description: Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the "Cache-Control" response header for "Read File" operations.
  types:
  - uid: string
- name: x-ms-content-type
  in: header
  description: Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the "Content-Type" response header for "Read File" operations.
  types:
  - uid: string
- name: x-ms-content-disposition
  in: header
  description: Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the "Content-Disposition" response header for "Read File" operations.
  types:
  - uid: string
- name: x-ms-content-encoding
  in: header
  description: Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the "Content-Encoding" response header for "Read File" operations.
  types:
  - uid: string
- name: x-ms-content-language
  in: header
  description: Optional and only valid for flush and set properties operations.  The service stores this value and includes it in the "Content-Language" response header for "Read File" operations.
  types:
  - uid: string
- name: x-ms-content-md5
  in: header
  description: Optional and only valid for "Flush and Set Properties" operations.  The service stores this value and includes it in the "Content-Md5" response header for "Read and Get Properties" operations. If this property is not specified on the request, then the property will be cleared for the file. Subsequent calls to "Read and Get Properties" will not return this property unless it is explicitly set on that file again.
  types:
  - uid: string
- name: x-ms-properties
  in: header
  description: Optional.  User-defined properties to be stored with the file or directory, in the format of a comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set. Valid only for the setProperties operation. If the file or directory exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties.
  types:
  - uid: string
- name: x-ms-owner
  in: header
  description: Optional and valid only for the setAccessControl operation. Sets the owner of the file or directory.
  types:
  - uid: string
- name: x-ms-group
  in: header
  description: Optional and valid only for the setAccessControl operation. Sets the owning group of the file or directory.
  types:
  - uid: string
- name: x-ms-permissions
  in: header
  description: Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported. Invalid in conjunction with x-ms-acl.
  types:
  - uid: string
- name: x-ms-acl
  in: header
  description: "Optional and valid only for the setAccessControl and setAccessControlRecursive operations. Required for setAccessControlRecursive operation. Sets POSIX access control rights on files and directories. The value is a comma-separated list of access control entries that fully replaces the existing access control list (ACL) in case of setAccessControl and \"set\" mode of setAccessControlRecursive. \"modify\" mode of setAccessControlRecursive updates the pre-existing ACLS. Each access control entry (ACE) consists of a scope, a type, a user or group identifier, and permissions in the format \"[scope:][type]:[id]:[permissions]\". The scope must be \"default\" to indicate the ACE belongs to the default ACL for a directory; otherwise scope is implicit and the ACE belongs to the access ACL.  There are four ACE types: \"user\" grants rights to the owner or a named user, \"group\" grants rights to the owning group or a named group, \"mask\" restricts rights granted to named users and the members of groups, and \"other\" grants rights to all users not found in any of the other entries. The user or group identifier is omitted for entries of type \"mask\" and \"other\".  The user or group identifier is also omitted for the owner and owning group.  The permission field is a 3-character sequence where the first character is 'r' to grant read access, the second character is 'w' to grant write access, and the third character is 'x' to grant execute permission.  If access is not granted, the '-' character is used to denote that the permission is denied. For example, the following ACL grants read, write, and execute rights to the file owner and john.doe@contoso, the read right to the owning group, and nothing to everyone else: \"user::rwx,user:john.doe@contoso:rwx,group::r--,other::---,mask=rwx\". Invalid in conjunction with x-ms-permissions. \"remove\" mode of setAccessControlRecursive removes the pre-existing ACLs and should not contain permissions in the access control list specified : \"user:john.doe@contoso:, mask:\". \"set\" mode of setAccessControlRecursive sets the ACLs replacing the pre-existing ACLs of the scope specified and must contain all three - owning user, owning group and other info if access scope is getting set or if either of owning user, owning group or other is being set in default scope. \"set\" and \"modify\" modes of setAccessControlRecursive must contain permissions as part of access control list."
  types:
  - uid: string
- name: If-Match
  in: header
  description: Optional for Flush Data, Set Access Control and Set Properties, but invalid for Append Data and Set Access Control Recursive.  An ETag value. Specify this header to perform the operation only if the resource's ETag matches the value specified. The ETag must be specified in quotes.
  types:
  - uid: string
- name: If-None-Match
  in: header
  description: Optional for Flush Data, Set Access Control and Set Properties, but invalid for Append Data and Set Access Control Recursive.  An ETag value or the special wildcard ("*") value. Specify this header to perform the operation only if the resource's ETag does not match the value specified. The ETag must be specified in quotes.
  types:
  - uid: string
- name: If-Modified-Since
  in: header
  description: Optional for Flush Data and Set Properties, but invalid for Append Data and Set Access Control Recursive. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.
  types:
  - uid: string
- name: If-Unmodified-Since
  in: header
  description: Optional for Flush Data and Set Properties, but invalid for Append Data and Set Access Control Recursive. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.
  types:
  - uid: string
- name: x-ms-client-request-id
  in: header
  description: A UUID recorded in the analytics logs for troubleshooting and correlation.
  types:
  - uid: string
  pattern: ^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$
- name: x-ms-date
  in: header
  description: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
  types:
  - uid: string
- name: x-ms-version
  in: header
  description: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
  types:
  - uid: string
definitions:
- name: PathUpdateAction
  description: The action must be "append" to upload data to be appended to a file, "flush" to flush previously uploaded data to a file, "setProperties" to set the properties of a file or directory, or "setAccessControl" to set the owner, group, permissions, or access control list for a file or directory, or "setAccessControlRecursive" to set the access control list for a directory recursively. Note that Hierarchical Namespace must be enabled for the account in order to use access control.  Also note that the Access Control List (ACL) includes permissions for the owner, owning group, and others, so the x-ms-permissions and x-ms-acl request headers are mutually exclusive.
  kind: enum
  properties:
  - name: append
    types:
    - uid: string
  - name: flush
    types:
    - uid: string
  - name: setProperties
    types:
    - uid: string
  - name: setAccessControl
    types:
    - uid: string
  - name: setAccessControlRecursive
    types:
    - uid: string
- name: SetAccessControlRecursiveResponse
  kind: object
  properties:
  - name: directoriesSuccessful
    description: ''
    types:
    - uid: integer
  - name: filesSuccessful
    description: ''
    types:
    - uid: integer
  - name: failureCount
    description: ''
    types:
    - uid: integer
  - name: failedEntries
    description: ''
    types:
    - uid: AclFailedEntryList
      isArray: true
- name: DataLakeStorageError
  kind: object
  properties:
  - name: error
    description: The service error response object.
    types:
    - uid: Error
- name: AclFailedEntryList
  kind: object
  properties:
  - name: name
    description: ''
    types:
    - uid: string
  - name: type
    description: ''
    types:
    - uid: string
  - name: errorMessage
    description: ''
    types:
    - uid: string
- name: Error
  description: The service error response object.
  kind: object
  properties:
  - name: code
    description: The service error code.
    types:
    - uid: string
  - name: message
    description: The service error message.
    types:
    - uid: string
examples: []
security: []
errorCodes: []
