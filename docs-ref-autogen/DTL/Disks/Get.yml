### YamlMime:RESTOperation
uid: management.azure.com.dtl.disks.get
name: Get
service: Dev Test Labs
groupName: Disks
apiVersion: 2018-09-15
summary: Get disk.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}?api-version=2018-09-15
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}?$expand={$expand}&api-version=2018-09-15
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: labName
  in: path
  isRequired: true
  description: The name of the lab.
  types:
  - uid: string
- name: userName
  in: path
  isRequired: true
  description: The name of the user profile.
  types:
  - uid: string
- name: name
  in: path
  isRequired: true
  description: The name of the disk.
  types:
  - uid: string
- name: $expand
  in: query
  description: "Specify the $expand query. Example: 'properties($select=diskType)'"
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: Disk
- name: Other Status Codes
  description: BadRequest
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: Disk
  description: A Disk.
  kind: object
  properties:
  - name: properties.diskType
    description: The storage type for the disk (i.e. Standard, Premium).
    types:
    - uid: StorageType
  - name: properties.diskSizeGiB
    description: The size of the disk in Gibibytes.
    types:
    - uid: integer
  - name: properties.leasedByLabVmId
    description: The resource ID of the VM to which this disk is leased.
    types:
    - uid: string
  - name: properties.diskBlobName
    description: When backed by a blob, the name of the VHD blob without extension.
    types:
    - uid: string
  - name: properties.diskUri
    description: When backed by a blob, the URI of underlying blob.
    types:
    - uid: string
  - name: properties.storageAccountId
    description: When backed by a blob, the storage account where the blob is.
    types:
    - uid: string
  - name: properties.createdDate
    isReadyOnly: true
    description: The creation date of the disk.
    types:
    - uid: string
  - name: properties.hostCaching
    description: The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).
    types:
    - uid: string
  - name: properties.managedDiskId
    description: When backed by managed disk, this is the ID of the compute disk resource.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning status of the resource.
    types:
    - uid: string
  - name: properties.uniqueIdentifier
    isReadyOnly: true
    description: The unique immutable identifier of a resource (Guid).
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: The identifier of the resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
  - name: location
    description: The location of the resource.
    types:
    - uid: string
  - name: tags
    description: The tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: Error from a REST request.
  kind: object
  properties:
  - name: error
    description: The cloud error that occurred
    types:
    - uid: CloudErrorBody
- name: StorageType
  description: The storage type for the disk (i.e. Standard, Premium).
  kind: enum
  properties:
  - name: Standard
    types:
    - uid: string
  - name: Premium
    types:
    - uid: string
  - name: StandardSSD
    types:
    - uid: string
- name: CloudErrorBody
  description: Body of an error from a REST request.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
  - name: target
    description: The error target.
    types:
    - uid: string
  - name: details
    description: Inner errors.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: Disks_Get
  request:
    uri: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/users/@me/disks/{diskName}?api-version=2018-09-15
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/users/@me/disks/{diskName}?api-version=2018-09-15
      ```

      # [Go](#tab/Go)
      ``` go
      package armdevtestlabs_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/devtestlabs/armdevtestlabs"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/devtestlabs/resource-manager/Microsoft.DevTestLab/stable/2018-09-15/examples/Disks_Get.json
      func ExampleDisksClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armdevtestlabs.NewDisksClient("{subscriptionId}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"resourceGroupName",
      		"{labName}",
      		"@me",
      		"{diskName}",
      		&armdevtestlabs.DisksClientGetOptions{Expand: nil})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fdevtestlabs%2Farmdevtestlabs%2Fv1.0.0/sdk/resourcemanager/devtestlabs/armdevtestlabs/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DevTestLabsClient } = require("@azure/arm-devtestlabs");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Get disk.
       *
       * @summary Get disk.
       * x-ms-original-file: specification/devtestlabs/resource-manager/Microsoft.DevTestLab/stable/2018-09-15/examples/Disks_Get.json
       */
      async function disksGet() {
        const subscriptionId = "{subscriptionId}";
        const resourceGroupName = "resourceGroupName";
        const labName = "{labName}";
        const userName = "@me";
        const name = "{diskName}";
        const credential = new DefaultAzureCredential();
        const client = new DevTestLabsClient(credential, subscriptionId);
        const result = await client.disks.get(resourceGroupName, labName, userName, name);
        console.log(result);
      }

      disksGet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-devtestlabs_4.0.1/sdk/devtestlabs/arm-devtestlabs/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscriptionId}/resourcegroups/resourceGroupName/providers/microsoft.devtestlab/labs/{labName}/users/{userId}/disks/{diskName}",
        "name": "{diskName}",
        "type": "Microsoft.DevTestLab/labs/users/disks",
        "properties": {
          "diskType": "Standard",
          "diskSizeGiB": 1023,
          "leasedByLabVmId": "/subscriptions/{subscriptionId}/resourcegroups/resourceGroupName/providers/microsoft.devtestlab/labs/{labName}/virtualmachines/vmName",
          "diskUri": "",
          "createdDate": "2021-01-04T20:27:32.1445632+00:00",
          "hostCaching": "None",
          "managedDiskId": "/subscriptions/{subscriptionId}/resourcegroups/resourceGroupName/providers/microsoft.compute/disks/{diskName}",
          "provisioningState": "Succeeded",
          "uniqueIdentifier": "9bf098d1-1b64-41a5-aa05-286767074a0b"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: OAuth2 Implicit Grant
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Access Microsoft Azure
metadata:
  description: >
    Learn more about Dev Test Labs service - Get disk.
errorCodes: []
