### YamlMime:RESTOperation
uid: management.azure.com.dtl.artifacts.generatearmtemplate
name: Generate Arm Template
service: Dev Test Labs
groupName: Artifacts
apiVersion: 2018-09-15
summary: Generates an ARM template for the given artifact, uploads the required files to a storage account, and validates the generated artifact.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/{name}/generateArmTemplate?api-version=2018-09-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: labName
  in: path
  isRequired: true
  description: The name of the lab.
  types:
  - uid: string
- name: artifactSourceName
  in: path
  isRequired: true
  description: The name of the artifact source.
  types:
  - uid: string
- name: name
  in: path
  isRequired: true
  description: The name of the artifact.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: ArmTemplateInfo
- name: Other Status Codes
  description: BadRequest
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: virtualMachineName
    in: body
    description: The resource name of the virtual machine.
    types:
    - uid: string
  - name: parameters
    in: body
    description: The parameters of the ARM template.
    types:
    - uid: ParameterInfo
      isArray: true
  - name: location
    in: body
    description: The location of the virtual machine.
    types:
    - uid: string
  - name: fileUploadOptions
    in: body
    description: Options for uploading the files for the artifact. UploadFilesAndGenerateSasTokens is the default value.
    types:
    - uid: FileUploadOptions
requestHeader: []
definitions:
- name: ParameterInfo
  description: Information about an artifact's parameter.
  kind: object
  properties:
  - name: name
    description: The name of the artifact parameter.
    types:
    - uid: string
  - name: value
    description: The value of the artifact parameter.
    types:
    - uid: string
- name: ArmTemplateInfo
  description: Information about a generated ARM template.
  kind: object
  properties:
  - name: template
    description: The template's contents.
    types:
    - uid: object
  - name: parameters
    description: The parameters of the ARM template.
    types:
    - uid: object
- name: CloudError
  description: Error from a REST request.
  kind: object
  properties:
  - name: error
    description: The cloud error that occurred
    types:
    - uid: CloudErrorBody
- name: GenerateArmTemplateRequest
  description: Parameters for generating an ARM template for deploying artifacts.
  kind: object
  properties:
  - name: virtualMachineName
    description: The resource name of the virtual machine.
    types:
    - uid: string
  - name: parameters
    description: The parameters of the ARM template.
    types:
    - uid: ParameterInfo
      isArray: true
  - name: location
    description: The location of the virtual machine.
    types:
    - uid: string
  - name: fileUploadOptions
    description: Options for uploading the files for the artifact. UploadFilesAndGenerateSasTokens is the default value.
    types:
    - uid: FileUploadOptions
- name: CloudErrorBody
  description: Body of an error from a REST request.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
  - name: target
    description: The error target.
    types:
    - uid: string
  - name: details
    description: Inner errors.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: FileUploadOptions
  description: Options for uploading the files for the artifact. UploadFilesAndGenerateSasTokens is the default value.
  kind: enum
  properties:
  - name: UploadFilesAndGenerateSasTokens
    types:
    - uid: string
  - name: None
    types:
    - uid: string
examples:
- name: Artifacts_GenerateArmTemplate
  request:
    uri: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/{artifactName}/generateArmTemplate?api-version=2018-09-15
    body: >-
      {
        "fileUploadOptions": "None",
        "location": "{location}",
        "virtualMachineName": "{vmName}"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/{artifactName}/generateArmTemplate?api-version=2018-09-15

      {
        "fileUploadOptions": "None",
        "location": "{location}",
        "virtualMachineName": "{vmName}"
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armdevtestlabs_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/devtestlabs/armdevtestlabs"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/devtestlabs/resource-manager/Microsoft.DevTestLab/stable/2018-09-15/examples/Artifacts_GenerateArmTemplate.json
      func ExampleArtifactsClient_GenerateArmTemplate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armdevtestlabs.NewArtifactsClient("{subscriptionId}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.GenerateArmTemplate(ctx,
      		"resourceGroupName",
      		"{labName}",
      		"{artifactSourceName}",
      		"{artifactName}",
      		armdevtestlabs.GenerateArmTemplateRequest{
      			FileUploadOptions:  to.Ptr(armdevtestlabs.FileUploadOptionsNone),
      			Location:           to.Ptr("{location}"),
      			VirtualMachineName: to.Ptr("{vmName}"),
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fdevtestlabs%2Farmdevtestlabs%2Fv1.0.0/sdk/resourcemanager/devtestlabs/armdevtestlabs/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DevTestLabsClient } = require("@azure/arm-devtestlabs");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Generates an ARM template for the given artifact, uploads the required files to a storage account, and validates the generated artifact.
       *
       * @summary Generates an ARM template for the given artifact, uploads the required files to a storage account, and validates the generated artifact.
       * x-ms-original-file: specification/devtestlabs/resource-manager/Microsoft.DevTestLab/stable/2018-09-15/examples/Artifacts_GenerateArmTemplate.json
       */
      async function artifactsGenerateArmTemplate() {
        const subscriptionId = "{subscriptionId}";
        const resourceGroupName = "resourceGroupName";
        const labName = "{labName}";
        const artifactSourceName = "{artifactSourceName}";
        const name = "{artifactName}";
        const generateArmTemplateRequest = {
          fileUploadOptions: "None",
          location: "{location}",
          virtualMachineName: "{vmName}",
        };
        const credential = new DefaultAzureCredential();
        const client = new DevTestLabsClient(credential, subscriptionId);
        const result = await client.artifacts.generateArmTemplate(
          resourceGroupName,
          labName,
          artifactSourceName,
          name,
          generateArmTemplateRequest
        );
        console.log(result);
      }

      artifactsGenerateArmTemplate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-devtestlabs_4.0.1/sdk/devtestlabs/arm-devtestlabs/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "template": {
          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string"
            },
            "extensionName": {
              "type": "string"
            }
          },
          "variables": {
            "_commandToExecute": "{commandToExecute}."
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "name": "[parameters('extensionName')]",
              "apiVersion": "2015-06-15",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": "true",
                "forceUpdateTag": "15/10/2018 00:00:00 +00:00",
                "settings": {
                  "fileUris": [
                    "{MsDtlArtifactFileUris}"
                  ],
                  "commandToExecute": ""
                },
                "protectedSettings": {
                  "commandToExecute": "[concat('cd {MsDtlScriptFolder}/scripts && ', variables('_commandToExecute'))]"
                }
              }
            }
          ]
        },
        "parameters": {
          "extensionName": {
            "value": "{vmName}/CustomScriptExtension"
          },
          "location": {
            "value": "{location}"
          }
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: OAuth2 Implicit Grant
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Access Microsoft Azure
metadata:
  description: Generates an ARM template for the given artifact, uploads the required files to a storage account, and validates the generated artifact.
errorCodes: []
