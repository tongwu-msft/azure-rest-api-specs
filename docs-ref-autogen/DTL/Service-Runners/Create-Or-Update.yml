### YamlMime:RESTOperation
uid: management.azure.com.dtl.servicerunners.createorupdate
name: Create Or Update
service: Dev Test Labs
groupName: Service Runners
apiVersion: 2018-09-15
summary: Create or replace an existing service runner.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners/{name}?api-version=2018-09-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: labName
  in: path
  isRequired: true
  description: The name of the lab.
  types:
  - uid: string
- name: name
  in: path
  isRequired: true
  description: The name of the service runner.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: ServiceRunner
- name: 201 Created
  description: Created
  types:
  - uid: ServiceRunner
- name: Other Status Codes
  description: BadRequest
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: identity
    in: body
    description: The identity of the resource.
    types:
    - uid: IdentityProperties
  - name: location
    in: body
    description: The location of the resource.
    types:
    - uid: string
  - name: tags
    in: body
    description: The tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: IdentityProperties
  description: Properties of a managed identity
  kind: object
  properties:
  - name: type
    description: Managed identity.
    types:
    - uid: ManagedIdentityType
  - name: principalId
    description: The principal id of resource identity.
    types:
    - uid: string
  - name: tenantId
    description: The tenant identifier of resource.
    types:
    - uid: string
  - name: clientSecretUrl
    description: The client secret URL of the identity.
    types:
    - uid: string
- name: ServiceRunner
  description: A container for a managed identity to execute DevTest lab services.
  kind: object
  properties:
  - name: identity
    description: The identity of the resource.
    types:
    - uid: IdentityProperties
  - name: id
    isReadyOnly: true
    description: The identifier of the resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
  - name: location
    description: The location of the resource.
    types:
    - uid: string
  - name: tags
    description: The tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: Error from a REST request.
  kind: object
  properties:
  - name: error
    description: The cloud error that occurred
    types:
    - uid: CloudErrorBody
- name: ManagedIdentityType
  description: Managed identity.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: SystemAssigned
    types:
    - uid: string
  - name: UserAssigned
    types:
    - uid: string
  - name: SystemAssigned,UserAssigned
    types:
    - uid: string
- name: CloudErrorBody
  description: Body of an error from a REST request.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
  - name: target
    description: The error target.
    types:
    - uid: string
  - name: details
    description: Inner errors.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: ServiceRunners_CreateOrUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{devtestlabName}/servicerunners/{servicerunnerName}?api-version=2018-09-15
    body: >-
      {
        "location": "{location}",
        "tags": {
          "tagName1": "tagValue1"
        },
        "identity": {
          "type": "{identityType}",
          "principalId": "{identityPrincipalId}",
          "tenantId": "{identityTenantId}",
          "clientSecretUrl": "{identityClientSecretUrl}"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{devtestlabName}/servicerunners/{servicerunnerName}?api-version=2018-09-15

      {
        "location": "{location}",
        "tags": {
          "tagName1": "tagValue1"
        },
        "identity": {
          "type": "{identityType}",
          "principalId": "{identityPrincipalId}",
          "tenantId": "{identityTenantId}",
          "clientSecretUrl": "{identityClientSecretUrl}"
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armdevtestlabs_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/devtestlabs/armdevtestlabs"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/devtestlabs/resource-manager/Microsoft.DevTestLab/stable/2018-09-15/examples/ServiceRunners_CreateOrUpdate.json
      func ExampleServiceRunnersClient_CreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armdevtestlabs.NewServiceRunnersClient("{subscriptionId}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CreateOrUpdate(ctx,
      		"resourceGroupName",
      		"{devtestlabName}",
      		"{servicerunnerName}",
      		armdevtestlabs.ServiceRunner{
      			Location: to.Ptr("{location}"),
      			Tags: map[string]*string{
      				"tagName1": to.Ptr("tagValue1"),
      			},
      			Identity: &armdevtestlabs.IdentityProperties{
      				Type:            to.Ptr(armdevtestlabs.ManagedIdentityType("{identityType}")),
      				ClientSecretURL: to.Ptr("{identityClientSecretUrl}"),
      				PrincipalID:     to.Ptr("{identityPrincipalId}"),
      				TenantID:        to.Ptr("{identityTenantId}"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fdevtestlabs%2Farmdevtestlabs%2Fv1.0.0/sdk/resourcemanager/devtestlabs/armdevtestlabs/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DevTestLabsClient } = require("@azure/arm-devtestlabs");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or replace an existing service runner.
       *
       * @summary Create or replace an existing service runner.
       * x-ms-original-file: specification/devtestlabs/resource-manager/Microsoft.DevTestLab/stable/2018-09-15/examples/ServiceRunners_CreateOrUpdate.json
       */
      async function serviceRunnersCreateOrUpdate() {
        const subscriptionId = "{subscriptionId}";
        const resourceGroupName = "resourceGroupName";
        const labName = "{devtestlabName}";
        const name = "{servicerunnerName}";
        const serviceRunner = {
          identity: {
            type: "{identityType}",
            clientSecretUrl: "{identityClientSecretUrl}",
            principalId: "{identityPrincipalId}",
            tenantId: "{identityTenantId}",
          },
          location: "{location}",
          tags: { tagName1: "tagValue1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new DevTestLabsClient(credential, subscriptionId);
        const result = await client.serviceRunners.createOrUpdate(
          resourceGroupName,
          labName,
          name,
          serviceRunner
        );
        console.log(result);
      }

      serviceRunnersCreateOrUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-devtestlabs_4.0.1/sdk/devtestlabs/arm-devtestlabs/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "identity": {
          "type": "{identityType}",
          "principalId": "{identityPrincipalId}",
          "tenantId": "{identityTenantId}",
          "clientSecretUrl": "{identityClientSecretUrl}"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "identity": {
          "type": "{identityType}",
          "principalId": "{identityPrincipalId}",
          "tenantId": "{identityTenantId}",
          "clientSecretUrl": "{identityClientSecretUrl}"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: OAuth2 Implicit Grant
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Access Microsoft Azure
metadata:
  description: Learn more about Dev Test Labs service - Create or replace an existing service runner.
errorCodes: []
