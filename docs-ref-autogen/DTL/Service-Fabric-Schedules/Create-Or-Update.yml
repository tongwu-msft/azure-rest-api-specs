### YamlMime:RESTOperation
uid: management.azure.com.dtl.servicefabricschedules.createorupdate
name: Create Or Update
service: Dev Test Labs
groupName: Service Fabric Schedules
apiVersion: 2018-09-15
summary: Create or replace an existing schedule.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{serviceFabricName}/schedules/{name}?api-version=2018-09-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: labName
  in: path
  isRequired: true
  description: The name of the lab.
  types:
  - uid: string
- name: userName
  in: path
  isRequired: true
  description: The name of the user profile.
  types:
  - uid: string
- name: serviceFabricName
  in: path
  isRequired: true
  description: The name of the service fabric.
  types:
  - uid: string
- name: name
  in: path
  isRequired: true
  description: The name of the schedule.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: Schedule
- name: 201 Created
  description: Created
  types:
  - uid: Schedule
- name: Other Status Codes
  description: BadRequest
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: properties.status
    in: body
    description: The status of the schedule (i.e. Enabled, Disabled)
    types:
    - uid: EnableStatus
  - name: properties.taskType
    in: body
    description: The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
    types:
    - uid: string
  - name: properties.weeklyRecurrence
    in: body
    description: If the schedule will occur only some days of the week, specify the weekly recurrence.
    types:
    - uid: WeekDetails
  - name: properties.dailyRecurrence
    in: body
    description: If the schedule will occur once each day of the week, specify the daily recurrence.
    types:
    - uid: DayDetails
  - name: properties.hourlyRecurrence
    in: body
    description: If the schedule will occur multiple times a day, specify the hourly recurrence.
    types:
    - uid: HourDetails
  - name: properties.timeZoneId
    in: body
    description: The time zone ID (e.g. Pacific Standard time).
    types:
    - uid: string
  - name: properties.notificationSettings
    in: body
    description: Notification settings.
    types:
    - uid: NotificationSettings
  - name: properties.targetResourceId
    in: body
    description: The resource ID to which the schedule belongs
    types:
    - uid: string
  - name: location
    in: body
    description: The location of the resource.
    types:
    - uid: string
  - name: tags
    in: body
    description: The tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: WeekDetails
  description: Properties of a weekly schedule.
  kind: object
  properties:
  - name: weekdays
    description: The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
    types:
    - uid: string
      isArray: true
  - name: time
    description: The time of the day the schedule will occur.
    types:
    - uid: string
- name: DayDetails
  description: Properties of a daily schedule.
  kind: object
  properties:
  - name: time
    description: The time of day the schedule will occur.
    types:
    - uid: string
- name: HourDetails
  description: Properties of an hourly schedule.
  kind: object
  properties:
  - name: minute
    description: Minutes of the hour the schedule will run.
    types:
    - uid: integer
- name: NotificationSettings
  description: Notification settings for a schedule.
  kind: object
  properties:
  - name: status
    description: If notifications are enabled for this schedule (i.e. Enabled, Disabled).
    types:
    - uid: EnableStatus
    defaultValue: Disabled
  - name: timeInMinutes
    description: Time in minutes before event at which notification will be sent.
    types:
    - uid: integer
  - name: webhookUrl
    description: The webhook URL to which the notification will be sent.
    types:
    - uid: string
  - name: emailRecipient
    description: The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
    types:
    - uid: string
  - name: notificationLocale
    description: The locale to use when sending a notification (fallback for unsupported languages is EN).
    types:
    - uid: string
- name: Schedule
  description: A schedule.
  kind: object
  properties:
  - name: properties.status
    description: The status of the schedule (i.e. Enabled, Disabled)
    types:
    - uid: EnableStatus
    defaultValue: Disabled
  - name: properties.taskType
    description: The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
    types:
    - uid: string
  - name: properties.weeklyRecurrence
    description: If the schedule will occur only some days of the week, specify the weekly recurrence.
    types:
    - uid: WeekDetails
  - name: properties.dailyRecurrence
    description: If the schedule will occur once each day of the week, specify the daily recurrence.
    types:
    - uid: DayDetails
  - name: properties.hourlyRecurrence
    description: If the schedule will occur multiple times a day, specify the hourly recurrence.
    types:
    - uid: HourDetails
  - name: properties.timeZoneId
    description: The time zone ID (e.g. Pacific Standard time).
    types:
    - uid: string
  - name: properties.notificationSettings
    description: Notification settings.
    types:
    - uid: NotificationSettings
  - name: properties.createdDate
    isReadyOnly: true
    description: The creation date of the schedule.
    types:
    - uid: string
  - name: properties.targetResourceId
    description: The resource ID to which the schedule belongs
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning status of the resource.
    types:
    - uid: string
  - name: properties.uniqueIdentifier
    isReadyOnly: true
    description: The unique immutable identifier of a resource (Guid).
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: The identifier of the resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
  - name: location
    description: The location of the resource.
    types:
    - uid: string
  - name: tags
    description: The tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: Error from a REST request.
  kind: object
  properties:
  - name: error
    description: The cloud error that occurred
    types:
    - uid: CloudErrorBody
- name: EnableStatus
  description: The status of the schedule (i.e. Enabled, Disabled)
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: CloudErrorBody
  description: Body of an error from a REST request.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
  - name: target
    description: The error target.
    types:
    - uid: string
  - name: details
    description: Inner errors.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: ServiceFabricSchedules_CreateOrUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/users/@me/servicefabrics/{serviceFrabicName}/schedules/{scheduleName}?api-version=2018-09-15
    body: >-
      {
        "location": "{location}",
        "properties": {
          "status": "{Enabled|Disabled}",
          "taskType": "{Unknown|LabVmsShutdownTask|LabVmsStartupTask|LabVmReclamationTask|ComputeVmShutdownTask}",
          "weeklyRecurrence": {
            "weekdays": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "time": "19:00"
          },
          "dailyRecurrence": {
            "time": "19:00"
          },
          "hourlyRecurrence": {
            "minute": 0
          },
          "timeZoneId": "Pacific Standard Time",
          "notificationSettings": {
            "status": "{Enabled|Disabled}",
            "timeInMinutes": 15,
            "webhookUrl": "{webhoolUrl}",
            "emailRecipient": "{email}",
            "notificationLocale": "EN"
          },
          "targetResourceId": "/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/users/{uniqueIdentifier}/servicefabrics/{serviceFrabicName}"
        },
        "tags": {
          "tagName1": "tagValue1"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/users/@me/servicefabrics/{serviceFrabicName}/schedules/{scheduleName}?api-version=2018-09-15

      {
        "location": "{location}",
        "properties": {
          "status": "{Enabled|Disabled}",
          "taskType": "{Unknown|LabVmsShutdownTask|LabVmsStartupTask|LabVmReclamationTask|ComputeVmShutdownTask}",
          "weeklyRecurrence": {
            "weekdays": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "time": "19:00"
          },
          "dailyRecurrence": {
            "time": "19:00"
          },
          "hourlyRecurrence": {
            "minute": 0
          },
          "timeZoneId": "Pacific Standard Time",
          "notificationSettings": {
            "status": "{Enabled|Disabled}",
            "timeInMinutes": 15,
            "webhookUrl": "{webhoolUrl}",
            "emailRecipient": "{email}",
            "notificationLocale": "EN"
          },
          "targetResourceId": "/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/users/{uniqueIdentifier}/servicefabrics/{serviceFrabicName}"
        },
        "tags": {
          "tagName1": "tagValue1"
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armdevtestlabs_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/devtestlabs/armdevtestlabs"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/devtestlabs/resource-manager/Microsoft.DevTestLab/stable/2018-09-15/examples/ServiceFabricSchedules_CreateOrUpdate.json
      func ExampleServiceFabricSchedulesClient_CreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armdevtestlabs.NewServiceFabricSchedulesClient("{subscriptionId}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CreateOrUpdate(ctx,
      		"resourceGroupName",
      		"{labName}",
      		"@me",
      		"{serviceFrabicName}",
      		"{scheduleName}",
      		armdevtestlabs.Schedule{
      			Location: to.Ptr("{location}"),
      			Tags: map[string]*string{
      				"tagName1": to.Ptr("tagValue1"),
      			},
      			Properties: &armdevtestlabs.ScheduleProperties{
      				DailyRecurrence: &armdevtestlabs.DayDetails{
      					Time: to.Ptr("19:00"),
      				},
      				HourlyRecurrence: &armdevtestlabs.HourDetails{
      					Minute: to.Ptr[int32](0),
      				},
      				NotificationSettings: &armdevtestlabs.NotificationSettings{
      					EmailRecipient:     to.Ptr("{email}"),
      					NotificationLocale: to.Ptr("EN"),
      					Status:             to.Ptr(armdevtestlabs.EnableStatus("{Enabled|Disabled}")),
      					TimeInMinutes:      to.Ptr[int32](15),
      					WebhookURL:         to.Ptr("{webhoolUrl}"),
      				},
      				Status:           to.Ptr(armdevtestlabs.EnableStatus("{Enabled|Disabled}")),
      				TargetResourceID: to.Ptr("/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/users/{uniqueIdentifier}/servicefabrics/{serviceFrabicName}"),
      				TaskType:         to.Ptr("{Unknown|LabVmsShutdownTask|LabVmsStartupTask|LabVmReclamationTask|ComputeVmShutdownTask}"),
      				TimeZoneID:       to.Ptr("Pacific Standard Time"),
      				WeeklyRecurrence: &armdevtestlabs.WeekDetails{
      					Time: to.Ptr("19:00"),
      					Weekdays: []*string{
      						to.Ptr("Monday"),
      						to.Ptr("Tuesday"),
      						to.Ptr("Wednesday"),
      						to.Ptr("Thursday"),
      						to.Ptr("Friday"),
      						to.Ptr("Saturday"),
      						to.Ptr("Sunday")},
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fdevtestlabs%2Farmdevtestlabs%2Fv1.0.0/sdk/resourcemanager/devtestlabs/armdevtestlabs/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { DevTestLabsClient } = require("@azure/arm-devtestlabs");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or replace an existing schedule.
       *
       * @summary Create or replace an existing schedule.
       * x-ms-original-file: specification/devtestlabs/resource-manager/Microsoft.DevTestLab/stable/2018-09-15/examples/ServiceFabricSchedules_CreateOrUpdate.json
       */
      async function serviceFabricSchedulesCreateOrUpdate() {
        const subscriptionId = "{subscriptionId}";
        const resourceGroupName = "resourceGroupName";
        const labName = "{labName}";
        const userName = "@me";
        const serviceFabricName = "{serviceFrabicName}";
        const name = "{scheduleName}";
        const schedule = {
          dailyRecurrence: { time: "19:00" },
          hourlyRecurrence: { minute: 0 },
          location: "{location}",
          notificationSettings: {
            emailRecipient: "{email}",
            notificationLocale: "EN",
            status: "{Enabled|Disabled}",
            timeInMinutes: 15,
            webhookUrl: "{webhoolUrl}",
          },
          status: "{Enabled|Disabled}",
          tags: { tagName1: "tagValue1" },
          targetResourceId:
            "/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/users/{uniqueIdentifier}/servicefabrics/{serviceFrabicName}",
          taskType:
            "{Unknown|LabVmsShutdownTask|LabVmsStartupTask|LabVmReclamationTask|ComputeVmShutdownTask}",
          timeZoneId: "Pacific Standard Time",
          weeklyRecurrence: {
            time: "19:00",
            weekdays: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new DevTestLabsClient(credential, subscriptionId);
        const result = await client.serviceFabricSchedules.createOrUpdate(
          resourceGroupName,
          labName,
          userName,
          serviceFabricName,
          name,
          schedule
        );
        console.log(result);
      }

      serviceFabricSchedulesCreateOrUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-devtestlabs_4.0.1/sdk/devtestlabs/arm-devtestlabs/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "status": "Enabled",
          "taskType": "Unknown",
          "weeklyRecurrence": {
            "weekdays": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "time": "1900"
          },
          "timeZoneId": "Pacific Standard Time",
          "notificationSettings": {
            "status": "Disabled",
            "timeInMinutes": 15,
            "webhookUrl": "{webhookUrl}",
            "emailRecipient": "{email}",
            "notificationLocale": "EN"
          },
          "createdDate": "2018-09-15T00:00:00.0000000-00:00",
          "targetResourceId": "/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/users/{uniqueIdentifier}/servicefabrics/{serviceFrabicName}",
          "provisioningState": "Succeeded",
          "uniqueIdentifier": "{uniqueIdentifier}"
        },
        "id": "/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/users/{uniqueIdentifier}/servicefabrics/{serviceFrabicName}/schedules/{scheduleName}",
        "name": "{scheduleName}",
        "type": "microsoft.devtestlab/labs/users/servicefabrics/schedules",
        "location": "{location}",
        "tags": {
          "tagName1": "tagValue1"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "status": "Enabled",
          "taskType": "Unknown",
          "weeklyRecurrence": {
            "weekdays": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "time": "1900"
          },
          "timeZoneId": "Pacific Standard Time",
          "notificationSettings": {
            "status": "Disabled",
            "timeInMinutes": 15,
            "webhookUrl": "{webhookUrl}",
            "emailRecipient": "{email}",
            "notificationLocale": "EN"
          },
          "createdDate": "2018-09-15T00:00:00.0000000-00:00",
          "targetResourceId": "/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/users/{uniqueIdentifier}/servicefabrics/{serviceFrabicName}",
          "provisioningState": "Succeeded",
          "uniqueIdentifier": "{uniqueIdentifier}"
        },
        "id": "/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/users/{uniqueIdentifier}/servicefabrics/{serviceFrabicName}/schedules/{scheduleName}",
        "name": "{scheduleName}",
        "type": "microsoft.devtestlab/labs/users/servicefabrics/schedules",
        "location": "{location}",
        "tags": {
          "tagName1": "tagValue1"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: OAuth2 Implicit Grant
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Access Microsoft Azure
metadata:
  description: Learn more about Dev Test Labs service - Create or replace an existing schedule.
errorCodes: []
