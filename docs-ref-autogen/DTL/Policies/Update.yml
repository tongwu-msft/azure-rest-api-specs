### YamlMime:RESTOperation
uid: management.azure.com.dtl.policies.update
name: Update
service: Dev Test Labs
groupName: Policies
apiVersion: 2018-09-15
summary: Allows modifying tags of policies. All other properties will be ignored.
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}?api-version=2018-09-15
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: labName
  in: path
  isRequired: true
  description: The name of the lab.
  types:
  - uid: string
- name: policySetName
  in: path
  isRequired: true
  description: The name of the policy set.
  types:
  - uid: string
- name: name
  in: path
  isRequired: true
  description: The name of the policy.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: Policy
- name: Other Status Codes
  description: BadRequest
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: tags
    in: body
    description: The tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: Policy
  description: A Policy.
  kind: object
  properties:
  - name: properties.description
    description: The description of the policy.
    types:
    - uid: string
  - name: properties.status
    description: The status of the policy.
    types:
    - uid: PolicyStatus
  - name: properties.factName
    description: The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
    types:
    - uid: PolicyFactName
  - name: properties.factData
    description: The fact data of the policy.
    types:
    - uid: string
  - name: properties.threshold
    description: The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
    types:
    - uid: string
  - name: properties.evaluatorType
    description: The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).
    types:
    - uid: PolicyEvaluatorType
  - name: properties.createdDate
    isReadyOnly: true
    description: The creation date of the policy.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning status of the resource.
    types:
    - uid: string
  - name: properties.uniqueIdentifier
    isReadyOnly: true
    description: The unique immutable identifier of a resource (Guid).
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: The identifier of the resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
  - name: location
    description: The location of the resource.
    types:
    - uid: string
  - name: tags
    description: The tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: Error from a REST request.
  kind: object
  properties:
  - name: error
    description: The cloud error that occurred
    types:
    - uid: CloudErrorBody
- name: PolicyFragment
  description: A Policy.
  kind: object
  properties:
  - name: tags
    description: The tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: PolicyStatus
  description: The status of the policy.
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: PolicyFactName
  description: The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
  kind: enum
  properties:
  - name: UserOwnedLabVmCount
    types:
    - uid: string
  - name: UserOwnedLabPremiumVmCount
    types:
    - uid: string
  - name: LabVmCount
    types:
    - uid: string
  - name: LabPremiumVmCount
    types:
    - uid: string
  - name: LabVmSize
    types:
    - uid: string
  - name: GalleryImage
    types:
    - uid: string
  - name: UserOwnedLabVmCountInSubnet
    types:
    - uid: string
  - name: LabTargetCost
    types:
    - uid: string
  - name: EnvironmentTemplate
    types:
    - uid: string
  - name: ScheduleEditPermission
    types:
    - uid: string
- name: PolicyEvaluatorType
  description: The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).
  kind: enum
  properties:
  - name: AllowedValuesPolicy
    types:
    - uid: string
  - name: MaxValuePolicy
    types:
    - uid: string
- name: CloudErrorBody
  description: Body of an error from a REST request.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
  - name: target
    description: The error target.
    types:
    - uid: string
  - name: details
    description: Inner errors.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: Policies_Update
  request:
    uri: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{policyName}?api-version=2018-09-15
    body: >-
      {
        "tags": {
          "tagName1": "tagValue1"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{policyName}?api-version=2018-09-15

      {
        "tags": {
          "tagName1": "tagValue1"
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armdevtestlabs_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/devtestlabs/armdevtestlabs"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/devtestlabs/resource-manager/Microsoft.DevTestLab/stable/2018-09-15/examples/Policies_Update.json
      func ExamplePoliciesClient_Update() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armdevtestlabs.NewPoliciesClient("{subscriptionId}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Update(ctx,
      		"resourceGroupName",
      		"{labName}",
      		"{policySetName}",
      		"{policyName}",
      		armdevtestlabs.PolicyFragment{
      			Tags: map[string]*string{
      				"tagName1": to.Ptr("tagValue1"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fdevtestlabs%2Farmdevtestlabs%2Fv1.0.0/sdk/resourcemanager/devtestlabs/armdevtestlabs/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DevTestLabsClient } = require("@azure/arm-devtestlabs");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Allows modifying tags of policies. All other properties will be ignored.
       *
       * @summary Allows modifying tags of policies. All other properties will be ignored.
       * x-ms-original-file: specification/devtestlabs/resource-manager/Microsoft.DevTestLab/stable/2018-09-15/examples/Policies_Update.json
       */
      async function policiesUpdate() {
        const subscriptionId = "{subscriptionId}";
        const resourceGroupName = "resourceGroupName";
        const labName = "{labName}";
        const policySetName = "{policySetName}";
        const name = "{policyName}";
        const policy = { tags: { tagName1: "tagValue1" } };
        const credential = new DefaultAzureCredential();
        const client = new DevTestLabsClient(credential, subscriptionId);
        const result = await client.policies.update(
          resourceGroupName,
          labName,
          policySetName,
          name,
          policy
        );
        console.log(result);
      }

      policiesUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-devtestlabs_4.0.1/sdk/devtestlabs/arm-devtestlabs/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscriptionId}/resourceGroups/resourceGroupName/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{policyName}",
        "name": "{labName}",
        "type": "Microsoft.DevTestLab/labs/policies",
        "location": "{location}",
        "properties": {
          "description": "{policyDescription}",
          "status": "{policyStatus}",
          "factName": "{policyFactName}",
          "factData": "{policyFactData}",
          "threshold": "{policyThreshold}",
          "evaluatorType": "{policyEvaluatorType}",
          "createdDate": "2018-10-01T18:40:48.1739018-07:00",
          "provisioningState": "Succeeded",
          "uniqueIdentifier": "{uniqueIdentifier}"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: OAuth2 Implicit Grant
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Access Microsoft Azure
metadata:
  description: >
    Learn more about Dev Test Labs service - Allows modifying tags of policies. All other properties will be ignored.
errorCodes: []
