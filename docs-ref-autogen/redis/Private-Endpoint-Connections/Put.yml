### YamlMime:RESTOperation
uid: management.azure.com.redis.privateendpointconnections.put
name: Put
service: Redis Cache
groupName: Private Endpoint Connections
apiVersion: 2021-06-01
summary: Update the state of specified private endpoint connection associated with the redis cache.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2021-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: cacheName
  in: path
  isRequired: true
  description: The name of the Redis cache.
  types:
  - uid: string
- name: privateEndpointConnectionName
  in: path
  isRequired: true
  description: The name of the private endpoint connection associated with the Azure resource
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 201 Created
  description: OK -- Update the private endpoint connection properties successfully.
  types:
  - uid: PrivateEndpointConnection
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.privateEndpoint
    in: body
    description: The resource of private end point.
    types:
    - uid: PrivateEndpoint
  - name: properties.privateLinkServiceConnectionState
    in: body
    isRequired: true
    description: A collection of information about the state of the connection between service consumer and provider.
    types:
    - uid: PrivateLinkServiceConnectionState
requestHeader: []
definitions:
- name: PrivateEndpoint
  description: The Private Endpoint resource.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The ARM identifier for Private Endpoint
    types:
    - uid: string
- name: PrivateLinkServiceConnectionState
  description: A collection of information about the state of the connection between service consumer and provider.
  kind: object
  properties:
  - name: status
    description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
    types:
    - uid: PrivateEndpointServiceConnectionStatus
  - name: description
    description: The reason for approval/rejection of the connection.
    types:
    - uid: string
  - name: actionsRequired
    description: A message indicating if changes on the service provider require any updates on the consumer.
    types:
    - uid: string
- name: PrivateEndpointConnection
  description: The Private Endpoint Connection resource.
  kind: object
  properties:
  - name: properties.privateEndpoint
    description: The resource of private end point.
    types:
    - uid: PrivateEndpoint
  - name: properties.privateLinkServiceConnectionState
    description: A collection of information about the state of the connection between service consumer and provider.
    types:
    - uid: PrivateLinkServiceConnectionState
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the private endpoint connection resource.
    types:
    - uid: PrivateEndpointConnectionProvisioningState
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: PrivateEndpointServiceConnectionStatus
  description: The private endpoint connection status.
  kind: enum
  properties:
  - name: Pending
    types:
    - uid: string
  - name: Approved
    types:
    - uid: string
  - name: Rejected
    types:
    - uid: string
- name: PrivateEndpointConnectionProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: RedisCachePutPrivateEndpointConnection
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/rgtest01/providers/Microsoft.Cache/redis/cachetest01/privateEndpointConnections/pectest01?api-version=2021-06-01
    body: >-
      {
        "properties": {
          "privateLinkServiceConnectionState": {
            "status": "Approved",
            "description": "Auto-Approved"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/rgtest01/providers/Microsoft.Cache/redis/cachetest01/privateEndpointConnections/pectest01?api-version=2021-06-01

      {
        "properties": {
          "privateLinkServiceConnectionState": {
            "status": "Approved",
            "description": "Auto-Approved"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.redis.fluent.models.PrivateEndpointConnectionInner;
      import com.azure.resourcemanager.redis.models.PrivateEndpointServiceConnectionStatus;
      import com.azure.resourcemanager.redis.models.PrivateLinkServiceConnectionState;

      /** Samples for PrivateEndpointConnections Put. */
      public final class Main {
          /*
           * x-ms-original-file: specification/redis/resource-manager/Microsoft.Cache/stable/2021-06-01/examples/RedisCachePutPrivateEndpointConnection.json
           */
          /**
           * Sample code: RedisCachePutPrivateEndpointConnection.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void redisCachePutPrivateEndpointConnection(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .redisCaches()
                  .manager()
                  .serviceClient()
                  .getPrivateEndpointConnections()
                  .put(
                      "rgtest01",
                      "cachetest01",
                      "pectest01",
                      new PrivateEndpointConnectionInner()
                          .withPrivateLinkServiceConnectionState(
                              new PrivateLinkServiceConnectionState()
                                  .withStatus(PrivateEndpointServiceConnectionStatus.APPROVED)
                                  .withDescription("Auto-Approved")),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armredis_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/redis/armredis"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/redis/resource-manager/Microsoft.Cache/stable/2021-06-01/examples/RedisCachePutPrivateEndpointConnection.json
      func ExamplePrivateEndpointConnectionsClient_BeginPut() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armredis.NewPrivateEndpointConnectionsClient("{subscriptionId}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginPut(ctx,
      		"rgtest01",
      		"cachetest01",
      		"pectest01",
      		armredis.PrivateEndpointConnection{
      			Properties: &armredis.PrivateEndpointConnectionProperties{
      				PrivateLinkServiceConnectionState: &armredis.PrivateLinkServiceConnectionState{
      					Description: to.Ptr("Auto-Approved"),
      					Status:      to.Ptr(armredis.PrivateEndpointServiceConnectionStatusApproved),
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	_, err = poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fredis%2Farmredis%2Fv1.0.0/sdk/resourcemanager/redis/armredis/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { RedisManagementClient } = require("@azure/arm-rediscache");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Update the state of specified private endpoint connection associated with the redis cache.
       *
       * @summary Update the state of specified private endpoint connection associated with the redis cache.
       * x-ms-original-file: specification/redis/resource-manager/Microsoft.Cache/stable/2021-06-01/examples/RedisCachePutPrivateEndpointConnection.json
       */
      async function redisCachePutPrivateEndpointConnection() {
        const subscriptionId = "{subscriptionId}";
        const resourceGroupName = "rgtest01";
        const cacheName = "cachetest01";
        const privateEndpointConnectionName = "pectest01";
        const properties = {
          privateLinkServiceConnectionState: {
            description: "Auto-Approved",
            status: "Approved",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new RedisManagementClient(credential, subscriptionId);
        const result = await client.privateEndpointConnections.beginPutAndWait(
          resourceGroupName,
          cacheName,
          privateEndpointConnectionName,
          properties
        );
        console.log(result);
      }

      redisCachePutPrivateEndpointConnection().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-rediscache_6.1.0/sdk/redis/arm-rediscache/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscriptionId}/resourceGroups/rgtest01/providers/Microsoft.Cache/Redis/cachetest01/privateEndpointConnections/pectest01",
        "name": "pectest01",
        "type": "Microsoft.Cache/Redis/privateEndpointConnections",
        "properties": {
          "provisioningState": "Succeeded",
          "privateEndpoint": {
            "id": "/subscriptions/{subscriptionId}/resourceGroups/rgtest01/providers/Microsoft.Network/privateEndpoints/petest01"
          },
          "privateLinkServiceConnectionState": {
            "status": "Approved",
            "description": "Auto-Approved",
            "actionsRequired": "None"
          }
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Redis Cache service - Update the state of specified private endpoint connection associated with the redis cache.
errorCodes: []
