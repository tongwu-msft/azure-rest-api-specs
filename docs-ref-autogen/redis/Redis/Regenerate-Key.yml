### YamlMime:RESTOperation
uid: management.azure.com.redis.redis.regeneratekey
name: Regenerate Key
service: Redis Cache
groupName: Redis
apiVersion: 2021-06-01
summary: Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/regenerateKey?api-version=2021-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: name
  in: path
  isRequired: true
  description: The name of the Redis cache.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Lists the regenerated keys for Redis Cache
  types:
  - uid: RedisAccessKeys
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: keyType
    in: body
    isRequired: true
    description: The Redis access key to regenerate.
    types:
    - uid: RedisKeyType
requestHeader: []
definitions:
- name: RedisAccessKeys
  description: Redis cache access keys.
  kind: object
  properties:
  - name: primaryKey
    isReadyOnly: true
    description: The current primary key that clients can use to authenticate with Redis cache.
    types:
    - uid: string
  - name: secondaryKey
    isReadyOnly: true
    description: The current secondary key that clients can use to authenticate with Redis cache.
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: RedisRegenerateKeyParameters
  description: Specifies which Redis access keys to reset.
  kind: object
  properties:
  - name: keyType
    description: The Redis access key to regenerate.
    types:
    - uid: RedisKeyType
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: RedisKeyType
  description: The Redis access key to regenerate.
  kind: enum
  properties:
  - name: Primary
    types:
    - uid: string
  - name: Secondary
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: RedisCacheRegenerateKey
  request:
    uri: POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/redis/cache1/regenerateKey?api-version=2021-06-01
    body: >-
      {
        "keyType": "Primary"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/redis/cache1/regenerateKey?api-version=2021-06-01

      {
        "keyType": "Primary"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.redis.models.RedisKeyType;
      import com.azure.resourcemanager.redis.models.RedisRegenerateKeyParameters;

      /** Samples for Redis RegenerateKey. */
      public final class Main {
          /*
           * x-ms-original-file: specification/redis/resource-manager/Microsoft.Cache/stable/2021-06-01/examples/RedisCacheRegenerateKey.json
           */
          /**
           * Sample code: RedisCacheRegenerateKey.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void redisCacheRegenerateKey(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .redisCaches()
                  .manager()
                  .serviceClient()
                  .getRedis()
                  .regenerateKeyWithResponse(
                      "rg1", "cache1", new RedisRegenerateKeyParameters().withKeyType(RedisKeyType.PRIMARY), Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armredis_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/redis/armredis"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/redis/resource-manager/Microsoft.Cache/stable/2021-06-01/examples/RedisCacheRegenerateKey.json
      func ExampleClient_RegenerateKey() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armredis.NewClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.RegenerateKey(ctx,
      		"rg1",
      		"cache1",
      		armredis.RegenerateKeyParameters{
      			KeyType: to.Ptr(armredis.RedisKeyTypePrimary),
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fredis%2Farmredis%2Fv1.0.0/sdk/resourcemanager/redis/armredis/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { RedisManagementClient } = require("@azure/arm-rediscache");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.
       *
       * @summary Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.
       * x-ms-original-file: specification/redis/resource-manager/Microsoft.Cache/stable/2021-06-01/examples/RedisCacheRegenerateKey.json
       */
      async function redisCacheRegenerateKey() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const name = "cache1";
        const parameters = { keyType: "Primary" };
        const credential = new DefaultAzureCredential();
        const client = new RedisManagementClient(credential, subscriptionId);
        const result = await client.redis.regenerateKey(resourceGroupName, name, parameters);
        console.log(result);
      }

      redisCacheRegenerateKey().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-rediscache_6.1.0/sdk/redis/arm-rediscache/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "primaryKey": "<primaryKey>",
        "secondaryKey": "<secondaryKey>"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.
errorCodes: []
