### YamlMime:RESTOperation
uid: management.azure.com.redis.redis.exportdata
name: Export Data
service: Redis Cache
groupName: Redis
apiVersion: 2021-06-01
summary: Export data from the redis cache to blobs in a container.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/export?api-version=2021-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: name
  in: path
  isRequired: true
  description: The name of the Redis cache.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 202 Accepted
  description: Export operation successfully enqueued; follow the Location header to poll for final outcome.
- name: 200 OK
  description: Export operation succeeded.
- name: 204 No Content
  description: Export operation succeeded.
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: format
    in: body
    description: File format.
    types:
    - uid: string
  - name: prefix
    in: body
    isRequired: true
    description: Prefix to use for exported files.
    types:
    - uid: string
  - name: container
    in: body
    isRequired: true
    description: Container name to export to.
    types:
    - uid: string
requestHeader: []
definitions:
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: ExportRDBParameters
  description: Parameters for Redis export operation.
  kind: object
  properties:
  - name: format
    description: File format.
    types:
    - uid: string
  - name: prefix
    description: Prefix to use for exported files.
    types:
    - uid: string
  - name: container
    description: Container name to export to.
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: RedisCacheExport
  request:
    uri: POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/redis/cache1/export?api-version=2021-06-01
    body: >-
      {
        "format": "RDB",
        "prefix": "datadump1",
        "container": "https://contosostorage.blob.core.window.net/urltoBlobContainer?sasKeyParameters"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/redis/cache1/export?api-version=2021-06-01

      {
        "format": "RDB",
        "prefix": "datadump1",
        "container": "https://contosostorage.blob.core.window.net/urltoBlobContainer?sasKeyParameters"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.redis.models.ExportRdbParameters;

      /** Samples for Redis ExportData. */
      public final class Main {
          /*
           * x-ms-original-file: specification/redis/resource-manager/Microsoft.Cache/stable/2021-06-01/examples/RedisCacheExport.json
           */
          /**
           * Sample code: RedisCacheExport.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void redisCacheExport(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .redisCaches()
                  .manager()
                  .serviceClient()
                  .getRedis()
                  .exportData(
                      "rg1",
                      "cache1",
                      new ExportRdbParameters()
                          .withFormat("RDB")
                          .withPrefix("datadump1")
                          .withContainer("https://contosostorage.blob.core.window.net/urltoBlobContainer?sasKeyParameters"),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armredis_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/redis/armredis"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/redis/resource-manager/Microsoft.Cache/stable/2021-06-01/examples/RedisCacheExport.json
      func ExampleClient_BeginExportData() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armredis.NewClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginExportData(ctx,
      		"rg1",
      		"cache1",
      		armredis.ExportRDBParameters{
      			Format:    to.Ptr("RDB"),
      			Container: to.Ptr("https://contosostorage.blob.core.window.net/urltoBlobContainer?sasKeyParameters"),
      			Prefix:    to.Ptr("datadump1"),
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	_, err = poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fredis%2Farmredis%2Fv1.0.0/sdk/resourcemanager/redis/armredis/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { RedisManagementClient } = require("@azure/arm-rediscache");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Export data from the redis cache to blobs in a container.
       *
       * @summary Export data from the redis cache to blobs in a container.
       * x-ms-original-file: specification/redis/resource-manager/Microsoft.Cache/stable/2021-06-01/examples/RedisCacheExport.json
       */
      async function redisCacheExport() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const name = "cache1";
        const parameters = {
          format: "RDB",
          container: "https://contosostorage.blob.core.window.net/urltoBlobContainer?sasKeyParameters",
          prefix: "datadump1",
        };
        const credential = new DefaultAzureCredential();
        const client = new RedisManagementClient(credential, subscriptionId);
        const result = await client.redis.beginExportDataAndWait(resourceGroupName, name, parameters);
        console.log(result);
      }

      redisCacheExport().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-rediscache_6.1.0/sdk/redis/arm-rediscache/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
  - statusCode: "202"
    headers:
    - name: location
      value: https://management.azure.com/subscriptions/subid/providers/Microsoft.Cache/...pathToOperationResult...
  - statusCode: "204"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Redis Cache service - Export data from the redis cache to blobs in a container.
errorCodes: []
