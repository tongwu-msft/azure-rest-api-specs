### YamlMime:RESTOperation
uid: management.azure.com.redis.redisenterprisecache.databases.update
name: Update
service: Redis Cache
groupName: Databases
apiVersion: 2022-01-01
summary: Updates a database
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}?api-version=2022-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: clusterName
  in: path
  isRequired: true
  description: The name of the RedisEnterprise cluster.
  types:
  - uid: string
- name: databaseName
  in: path
  isRequired: true
  description: The name of the database.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The database was/is being updated. Check provisioningState and resourceState for detailed status.
  types:
  - uid: Database
- name: 202 Accepted
  description: The database update operation was successfully started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.clientProtocol
    in: body
    description: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.
    types:
    - uid: Protocol
  - name: properties.port
    in: body
    description: TCP port of the database endpoint. Specified at create time. Defaults to an available port.
    types:
    - uid: integer
  - name: properties.clusteringPolicy
    in: body
    description: Clustering policy - default is OSSCluster. Specified at create time.
    types:
    - uid: ClusteringPolicy
  - name: properties.evictionPolicy
    in: body
    description: Redis eviction policy - default is VolatileLRU
    types:
    - uid: EvictionPolicy
  - name: properties.persistence
    in: body
    description: "Persistence settings  \nPersistence settings"
    types:
    - uid: Persistence
  - name: properties.modules
    in: body
    description: Optional set of redis modules to enable in this database - modules can only be added at creation time.
    types:
    - uid: Module
      isArray: true
  - name: properties.geoReplication
    in: body
    description: Optional set of properties to configure geo replication for this database.
    types:
    - uid: GeoReplication
requestHeader: []
definitions:
- name: Persistence
  description: Persistence settings
  kind: object
  properties:
  - name: aofEnabled
    description: Sets whether AOF is enabled.
    types:
    - uid: boolean
  - name: rdbEnabled
    description: Sets whether RDB is enabled.
    types:
    - uid: boolean
  - name: aofFrequency
    description: Sets the frequency at which data is written to disk.
    types:
    - uid: AofFrequency
  - name: rdbFrequency
    description: Sets the frequency at which a snapshot of the database is created.
    types:
    - uid: RdbFrequency
- name: Module
  description: Module settings
  kind: object
  properties:
  - name: name
    description: The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'
    types:
    - uid: string
  - name: args
    description: Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'.
    types:
    - uid: string
  - name: version
    isReadyOnly: true
    description: The version of the module, e.g. '1.0'.
    types:
    - uid: string
- name: GeoReplication
  description: Optional set of properties to configure geo replication for this database.
  kind: object
  properties:
  - name: groupNickname
    description: Name for the group of linked database resources
    types:
    - uid: string
  - name: linkedDatabases
    description: List of database resources to link with this database
    types:
    - uid: LinkedDatabase
      isArray: true
- name: Database
  description: Describes a database on the RedisEnterprise cluster
  kind: object
  properties:
  - name: properties.clientProtocol
    description: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.
    types:
    - uid: Protocol
  - name: properties.port
    description: TCP port of the database endpoint. Specified at create time. Defaults to an available port.
    types:
    - uid: integer
  - name: properties.provisioningState
    isReadyOnly: true
    description: Current provisioning status of the database
    types:
    - uid: ProvisioningState
  - name: properties.resourceState
    isReadyOnly: true
    description: Current resource status of the database
    types:
    - uid: ResourceState
  - name: properties.clusteringPolicy
    description: Clustering policy - default is OSSCluster. Specified at create time.
    types:
    - uid: ClusteringPolicy
  - name: properties.evictionPolicy
    description: Redis eviction policy - default is VolatileLRU
    types:
    - uid: EvictionPolicy
  - name: properties.persistence
    description: "Persistence settings  \nPersistence settings"
    types:
    - uid: Persistence
  - name: properties.modules
    description: Optional set of redis modules to enable in this database - modules can only be added at creation time.
    types:
    - uid: Module
      isArray: true
  - name: properties.geoReplication
    description: Optional set of properties to configure geo replication for this database.
    types:
    - uid: GeoReplication
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: DatabaseUpdate
  description: A partial update to the RedisEnterprise database
  kind: object
  properties:
  - name: properties.clientProtocol
    description: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.
    types:
    - uid: Protocol
  - name: properties.port
    description: TCP port of the database endpoint. Specified at create time. Defaults to an available port.
    types:
    - uid: integer
  - name: properties.provisioningState
    isReadyOnly: true
    description: Current provisioning status of the database
    types:
    - uid: ProvisioningState
  - name: properties.resourceState
    isReadyOnly: true
    description: Current resource status of the database
    types:
    - uid: ResourceState
  - name: properties.clusteringPolicy
    description: Clustering policy - default is OSSCluster. Specified at create time.
    types:
    - uid: ClusteringPolicy
  - name: properties.evictionPolicy
    description: Redis eviction policy - default is VolatileLRU
    types:
    - uid: EvictionPolicy
  - name: properties.persistence
    description: "Persistence settings  \nPersistence settings"
    types:
    - uid: Persistence
  - name: properties.modules
    description: Optional set of redis modules to enable in this database - modules can only be added at creation time.
    types:
    - uid: Module
      isArray: true
  - name: properties.geoReplication
    description: Optional set of properties to configure geo replication for this database.
    types:
    - uid: GeoReplication
- name: AofFrequency
  description: Sets the frequency at which data is written to disk.
  kind: enum
  properties:
  - name: 1s
    types:
    - uid: string
  - name: always
    types:
    - uid: string
- name: RdbFrequency
  description: Sets the frequency at which a snapshot of the database is created.
  kind: enum
  properties:
  - name: 1h
    types:
    - uid: string
  - name: 6h
    types:
    - uid: string
  - name: 12h
    types:
    - uid: string
- name: LinkedDatabase
  description: Linked Database
  kind: object
  properties:
  - name: id
    description: Resource ID of a database resource to link with this database.
    types:
    - uid: string
  - name: state
    isReadyOnly: true
    description: State of the link between the database resources.
    types:
    - uid: LinkState
- name: Protocol
  description: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.
  kind: enum
  properties:
  - name: Encrypted
    types:
    - uid: string
  - name: Plaintext
    types:
    - uid: string
- name: ProvisioningState
  description: Current provisioning status
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
- name: ResourceState
  description: Current resource status
  kind: enum
  properties:
  - name: Running
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: CreateFailed
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: UpdateFailed
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: DeleteFailed
    types:
    - uid: string
  - name: Enabling
    types:
    - uid: string
  - name: EnableFailed
    types:
    - uid: string
  - name: Disabling
    types:
    - uid: string
  - name: DisableFailed
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: ClusteringPolicy
  description: Clustering policy - default is OSSCluster. Specified at create time.
  kind: enum
  properties:
  - name: EnterpriseCluster
    types:
    - uid: string
  - name: OSSCluster
    types:
    - uid: string
- name: EvictionPolicy
  description: Redis eviction policy - default is VolatileLRU
  kind: enum
  properties:
  - name: AllKeysLFU
    types:
    - uid: string
  - name: AllKeysLRU
    types:
    - uid: string
  - name: AllKeysRandom
    types:
    - uid: string
  - name: VolatileLRU
    types:
    - uid: string
  - name: VolatileLFU
    types:
    - uid: string
  - name: VolatileTTL
    types:
    - uid: string
  - name: VolatileRandom
    types:
    - uid: string
  - name: NoEviction
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: LinkState
  description: State of the link between the database resources.
  kind: enum
  properties:
  - name: Linked
    types:
    - uid: string
  - name: Linking
    types:
    - uid: string
  - name: Unlinking
    types:
    - uid: string
  - name: LinkFailed
    types:
    - uid: string
  - name: UnlinkFailed
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: RedisEnterpriseDatabasesUpdate
  request:
    uri: PATCH https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/redisEnterprise/cache1/databases/default?api-version=2022-01-01
    body: >-
      {
        "properties": {
          "clientProtocol": "Encrypted",
          "evictionPolicy": "AllKeysLRU",
          "persistence": {
            "rdbEnabled": true,
            "rdbFrequency": "12h"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/redisEnterprise/cache1/databases/default?api-version=2022-01-01

      {
        "properties": {
          "clientProtocol": "Encrypted",
          "evictionPolicy": "AllKeysLRU",
          "persistence": {
            "rdbEnabled": true,
            "rdbFrequency": "12h"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.redisenterprise.models.Database;
      import com.azure.resourcemanager.redisenterprise.models.EvictionPolicy;
      import com.azure.resourcemanager.redisenterprise.models.Persistence;
      import com.azure.resourcemanager.redisenterprise.models.Protocol;
      import com.azure.resourcemanager.redisenterprise.models.RdbFrequency;

      /** Samples for Databases Update. */
      public final class Main {
          /*
           * x-ms-original-file: specification/redisenterprise/resource-manager/Microsoft.Cache/stable/2022-01-01/examples/RedisEnterpriseDatabasesUpdate.json
           */
          /**
           * Sample code: RedisEnterpriseDatabasesUpdate.
           *
           * @param manager Entry point to RedisEnterpriseManager.
           */
          public static void redisEnterpriseDatabasesUpdate(
              com.azure.resourcemanager.redisenterprise.RedisEnterpriseManager manager) {
              Database resource = manager.databases().getWithResponse("rg1", "cache1", "default", Context.NONE).getValue();
              resource
                  .update()
                  .withClientProtocol(Protocol.ENCRYPTED)
                  .withEvictionPolicy(EvictionPolicy.ALL_KEYS_LRU)
                  .withPersistence(new Persistence().withRdbEnabled(true).withRdbFrequency(RdbFrequency.ONE_TWOH))
                  .apply();
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-redisenterprise_1.1.0-beta.1/sdk/redisenterprise/azure-resourcemanager-redisenterprise/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armredisenterprise_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/redisenterprise/armredisenterprise"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/redisenterprise/resource-manager/Microsoft.Cache/stable/2022-01-01/examples/RedisEnterpriseDatabasesUpdate.json
      func ExampleDatabasesClient_BeginUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armredisenterprise.NewDatabasesClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginUpdate(ctx,
      		"rg1",
      		"cache1",
      		"default",
      		armredisenterprise.DatabaseUpdate{
      			Properties: &armredisenterprise.DatabaseProperties{
      				ClientProtocol: to.Ptr(armredisenterprise.ProtocolEncrypted),
      				EvictionPolicy: to.Ptr(armredisenterprise.EvictionPolicyAllKeysLRU),
      				Persistence: &armredisenterprise.Persistence{
      					RdbEnabled:   to.Ptr(true),
      					RdbFrequency: to.Ptr(armredisenterprise.RdbFrequencyTwelveH),
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fredisenterprise%2Farmredisenterprise%2Fv1.0.0/sdk/resourcemanager/redisenterprise/armredisenterprise/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { RedisEnterpriseManagementClient } = require("@azure/arm-redisenterprisecache");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Updates a database
       *
       * @summary Updates a database
       * x-ms-original-file: specification/redisenterprise/resource-manager/Microsoft.Cache/stable/2022-01-01/examples/RedisEnterpriseDatabasesUpdate.json
       */
      async function redisEnterpriseDatabasesUpdate() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const clusterName = "cache1";
        const databaseName = "default";
        const parameters = {
          clientProtocol: "Encrypted",
          evictionPolicy: "AllKeysLRU",
          persistence: { rdbEnabled: true, rdbFrequency: "12h" },
        };
        const credential = new DefaultAzureCredential();
        const client = new RedisEnterpriseManagementClient(credential, subscriptionId);
        const result = await client.databases.beginUpdateAndWait(
          resourceGroupName,
          clusterName,
          databaseName,
          parameters
        );
        console.log(result);
      }

      redisEnterpriseDatabasesUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-redisenterprisecache_2.1.0/sdk/redisenterprise/arm-redisenterprisecache/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/redisEnterprise/cache1/databases/default",
        "name": "cache1/default",
        "type": "Microsoft.Cache/redisEnterprise/databases",
        "properties": {
          "provisioningState": "Updating",
          "resourceState": "Updating",
          "clientProtocol": "Encrypted",
          "clusteringPolicy": "OSSCluster",
          "evictionPolicy": "AllKeysLRU",
          "persistence": {
            "rdbEnabled": true,
            "rdbFrequency": "12h"
          },
          "port": 10000,
          "modules": [
            {
              "name": "RediSearch",
              "args": "",
              "version": "1.0.0"
            }
          ]
        }
      }
  - statusCode: "202"
    headers:
    - name: Azure-AsyncOperation
      value: https://management.azure.com/subscriptions/subid/providers/Microsoft.Cache/...pathToOperationStatus...
    - name: Location
      value: https://management.azure.com/subscriptions/subid/providers/Microsoft.Cache/...pathToOperationResult...
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Redis Cache service - Updates a database
errorCodes: []
