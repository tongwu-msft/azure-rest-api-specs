### YamlMime:RESTOperation
uid: management.azure.com.redis.linkedserver.create
name: Create
service: Redis Cache
groupName: Linked Server
apiVersion: 2021-06-01
summary: Adds a linked server to the Redis cache (requires Premium SKU).
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/linkedServers/{linkedServerName}?api-version=2021-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: name
  in: path
  isRequired: true
  description: The name of the Redis cache.
  types:
  - uid: string
- name: linkedServerName
  in: path
  isRequired: true
  description: The name of the linked server that is being added to the Redis cache.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The linked server was successfully added.
  types:
  - uid: RedisLinkedServerWithProperties
- name: 201 Created
  description: The linked server was successfully added.
  types:
  - uid: RedisLinkedServerWithProperties
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.linkedRedisCacheId
    in: body
    isRequired: true
    description: Fully qualified resourceId of the linked redis cache.
    types:
    - uid: string
  - name: properties.linkedRedisCacheLocation
    in: body
    isRequired: true
    description: Location of the linked redis cache.
    types:
    - uid: string
  - name: properties.serverRole
    in: body
    isRequired: true
    description: Role of the linked server.
    types:
    - uid: ReplicationRole
requestHeader: []
definitions:
- name: RedisLinkedServerWithProperties
  description: Response to put/get linked server (with properties) for Redis cache.
  kind: object
  properties:
  - name: properties.provisioningState
    isReadyOnly: true
    description: Terminal state of the link between primary and secondary redis cache.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
  - name: properties.linkedRedisCacheId
    description: Fully qualified resourceId of the linked redis cache.
    types:
    - uid: string
  - name: properties.linkedRedisCacheLocation
    description: Location of the linked redis cache.
    types:
    - uid: string
  - name: properties.serverRole
    description: Role of the linked server.
    types:
    - uid: ReplicationRole
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: RedisLinkedServerCreateParameters
  description: Parameter required for creating a linked server to redis cache.
  kind: object
  properties:
  - name: properties.linkedRedisCacheId
    description: Fully qualified resourceId of the linked redis cache.
    types:
    - uid: string
  - name: properties.linkedRedisCacheLocation
    description: Location of the linked redis cache.
    types:
    - uid: string
  - name: properties.serverRole
    description: Role of the linked server.
    types:
    - uid: ReplicationRole
- name: ReplicationRole
  description: Role of the linked server.
  kind: enum
  properties:
  - name: Primary
    types:
    - uid: string
  - name: Secondary
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: LinkedServer_Create
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/redis/cache1/linkedServers/cache2?api-version=2021-06-01
    body: >-
      {
        "properties": {
          "linkedRedisCacheId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2",
          "linkedRedisCacheLocation": "West US",
          "serverRole": "Secondary"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/redis/cache1/linkedServers/cache2?api-version=2021-06-01

      {
        "properties": {
          "linkedRedisCacheId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2",
          "linkedRedisCacheLocation": "West US",
          "serverRole": "Secondary"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters;
      import com.azure.resourcemanager.redis.models.ReplicationRole;

      /** Samples for LinkedServer Create. */
      public final class Main {
          /*
           * x-ms-original-file: specification/redis/resource-manager/Microsoft.Cache/stable/2021-06-01/examples/RedisCacheLinkedServer_Create.json
           */
          /**
           * Sample code: LinkedServer_Create.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void linkedServerCreate(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .redisCaches()
                  .manager()
                  .serviceClient()
                  .getLinkedServers()
                  .create(
                      "rg1",
                      "cache1",
                      "cache2",
                      new RedisLinkedServerCreateParameters()
                          .withLinkedRedisCacheId(
                              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2")
                          .withLinkedRedisCacheLocation("West US")
                          .withServerRole(ReplicationRole.SECONDARY),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armredis_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/redis/armredis"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/redis/resource-manager/Microsoft.Cache/stable/2021-06-01/examples/RedisCacheLinkedServer_Create.json
      func ExampleLinkedServerClient_BeginCreate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armredis.NewLinkedServerClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreate(ctx,
      		"rg1",
      		"cache1",
      		"cache2",
      		armredis.LinkedServerCreateParameters{
      			Properties: &armredis.LinkedServerCreateProperties{
      				LinkedRedisCacheID:       to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2"),
      				LinkedRedisCacheLocation: to.Ptr("West US"),
      				ServerRole:               to.Ptr(armredis.ReplicationRoleSecondary),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fredis%2Farmredis%2Fv1.0.0/sdk/resourcemanager/redis/armredis/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { RedisManagementClient } = require("@azure/arm-rediscache");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Adds a linked server to the Redis cache (requires Premium SKU).
       *
       * @summary Adds a linked server to the Redis cache (requires Premium SKU).
       * x-ms-original-file: specification/redis/resource-manager/Microsoft.Cache/stable/2021-06-01/examples/RedisCacheLinkedServer_Create.json
       */
      async function linkedServerCreate() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const name = "cache1";
        const linkedServerName = "cache2";
        const parameters = {
          linkedRedisCacheId:
            "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2",
          linkedRedisCacheLocation: "West US",
          serverRole: "Secondary",
        };
        const credential = new DefaultAzureCredential();
        const client = new RedisManagementClient(credential, subscriptionId);
        const result = await client.linkedServer.beginCreateAndWait(
          resourceGroupName,
          name,
          linkedServerName,
          parameters
        );
        console.log(result);
      }

      linkedServerCreate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-rediscache_6.1.0/sdk/redis/arm-rediscache/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2",
        "name": "cache2",
        "type": "Microsoft.Cache/Redis/linkedServers",
        "properties": {
          "linkedRedisCacheId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2",
          "linkedRedisCacheLocation": "West US",
          "provisioningState": "Creating",
          "serverRole": "Secondary"
        }
      }
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2",
        "name": "cache2",
        "type": "Microsoft.Cache/Redis/linkedServers",
        "properties": {
          "linkedRedisCacheId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2",
          "linkedRedisCacheLocation": "West US",
          "provisioningState": "Creating",
          "serverRole": "Secondary"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Redis Cache service - Adds a linked server to the Redis cache (requires Premium SKU).
errorCodes: []
