### YamlMime:RESTOperation
uid: management.azure.com.containerregistry.webhooks.update
name: Update
service: Container Registry
groupName: Webhooks
apiVersion: 2017-10-01
summary: Updates a webhook with the specified parameters.
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}?api-version=2017-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The Microsoft Azure subscription ID.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group to which the container registry belongs.
  types:
  - uid: string
- name: registryName
  in: path
  isRequired: true
  description: The name of the container registry.
  types:
  - uid: string
  pattern: ^[a-zA-Z0-9]*$
- name: webhookName
  in: path
  isRequired: true
  description: The name of the webhook.
  types:
  - uid: string
  pattern: ^[a-zA-Z0-9]*$
- name: api-version
  in: query
  isRequired: true
  description: The client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The request was successful; the request was well-formed and received properly.
  types:
  - uid: Webhook
- name: 201 Created
  description: The request was successful; the operation will complete asynchronously.
  types:
  - uid: Webhook
requestBody:
- name: default
  parameters:
  - name: tags
    in: body
    description: The tags for the webhook.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.serviceUri
    in: body
    description: The service URI for the webhook to post notifications.
    types:
    - uid: string
  - name: properties.customHeaders
    in: body
    description: Custom headers that will be added to the webhook notifications.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.status
    in: body
    description: The status of the webhook at the time the operation was called.
    types:
    - uid: WebhookStatus
  - name: properties.scope
    in: body
    description: The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
    types:
    - uid: string
  - name: properties.actions
    in: body
    description: The list of actions that trigger the webhook to post notifications.
    types:
    - uid: string
      isArray: true
requestHeader: []
definitions:
- name: Webhook
  description: An object that represents a webhook for a container registry.
  kind: object
  properties:
  - name: properties.status
    description: The status of the webhook at the time the operation was called.
    types:
    - uid: WebhookStatus
  - name: properties.scope
    description: The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
    types:
    - uid: string
  - name: properties.actions
    description: The list of actions that trigger the webhook to post notifications.
    types:
    - uid: string
      isArray: true
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the webhook at the time the operation was called.
    types:
    - uid: ProvisioningState
  - name: id
    isReadyOnly: true
    description: The resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
  - name: location
    description: The location of the resource. This cannot be changed after the resource is created.
    types:
    - uid: string
  - name: tags
    description: The tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: WebhookUpdateParameters
  description: The parameters for updating a webhook.
  kind: object
  properties:
  - name: tags
    description: The tags for the webhook.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.serviceUri
    description: The service URI for the webhook to post notifications.
    types:
    - uid: string
  - name: properties.customHeaders
    description: Custom headers that will be added to the webhook notifications.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.status
    description: The status of the webhook at the time the operation was called.
    types:
    - uid: WebhookStatus
  - name: properties.scope
    description: The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
    types:
    - uid: string
  - name: properties.actions
    description: The list of actions that trigger the webhook to post notifications.
    types:
    - uid: string
      isArray: true
- name: WebhookStatus
  description: The status of the webhook at the time the operation was called.
  kind: enum
  properties:
  - name: enabled
    types:
    - uid: string
  - name: disabled
    types:
    - uid: string
- name: ProvisioningState
  description: The provisioning state of the container registry at the time the operation was called.
  kind: enum
  properties:
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
examples:
- name: WebhookUpdate
  request:
    uri: PATCH https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/webhooks/myWebhook?api-version=2017-10-01
    body: >-
      {
        "tags": {
          "key": "value"
        },
        "properties": {
          "serviceUri": "http://myservice.com",
          "customHeaders": {
            "Authorization": "Basic 000000000000000000000000000000000000000000000000000"
          },
          "status": "enabled",
          "scope": "myRepository",
          "actions": [
            "push"
          ]
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/webhooks/myWebhook",
        "name": "myWebhook",
        "type": "Microsoft.ContainerRegistry/registries/webhooks",
        "location": "westus",
        "tags": {
          "key": "value"
        },
        "properties": {
          "status": "enabled",
          "scope": "myRepository",
          "actions": [
            "push"
          ],
          "provisioningState": "Succeeded"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/webhooks/myWebhook",
        "name": "myWebhook",
        "type": "Microsoft.ContainerRegistry/registries/webhooks",
        "location": "westus",
        "tags": {
          "key": "value"
        },
        "properties": {
          "status": "enabled",
          "scope": "myRepository",
          "actions": [
            "push"
          ],
          "provisioningState": "Updating"
        }
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
