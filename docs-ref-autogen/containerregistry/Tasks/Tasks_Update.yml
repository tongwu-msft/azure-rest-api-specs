### YamlMime:RESTOperation
uid: management.azure.com.containerregistry.tasks.tasks_update
name: Update
service: Container Registry
groupName: Tasks
apiVersion: 2018-09-01
summary: Updates a task with the specified parameters.
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}?api-version=2018-09-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The Microsoft Azure subscription ID.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group to which the container registry belongs.
  types:
  - uid: string
- name: registryName
  in: path
  isRequired: true
  description: The name of the container registry.
  types:
  - uid: string
  pattern: ^[a-zA-Z0-9]*$
- name: taskName
  in: path
  isRequired: true
  description: The name of the container registry task.
  types:
  - uid: string
  pattern: ^[a-zA-Z0-9-_]*$
- name: api-version
  in: query
  isRequired: true
  description: The client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The request was successful; the request was well-formed and received properly.
  types:
  - uid: Task
- name: 201 Created
  description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
  types:
  - uid: Task
- name: Other Status Codes
  description: Error response describing why the operation failed. If the registry doesn't exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.
requestBody:
- name: default
  parameters:
  - name: tags
    in: body
    description: The ARM resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.status
    in: body
    description: The current status of task.
    types:
    - uid: TaskStatus
  - name: properties.platform
    in: body
    description: The platform properties against which the run has to happen.
    types:
    - uid: PlatformUpdateParameters
  - name: properties.agentConfiguration
    in: body
    description: The machine configuration of the run agent.
    types:
    - uid: AgentProperties
  - name: properties.timeout
    in: body
    description: Run timeout in seconds.
    types:
    - uid: integer
  - name: properties.step
    in: body
    description: The properties for updating a task step.
    types:
    - uid: DockerBuildStepUpdateParameters
    - uid: FileTaskStepUpdateParameters
    - uid: EncodedTaskStepUpdateParameters
    typesTitle: TaskStepUpdateParameters
  - name: properties.trigger
    in: body
    description: The properties for updating trigger properties.
    types:
    - uid: TriggerUpdateParameters
requestHeader: []
definitions:
- name: PlatformUpdateParameters
  description: The properties for updating the platform configuration.
  kind: object
  properties:
  - name: os
    description: The operating system type required for the run.
    types:
    - uid: OS
  - name: architecture
    description: The OS architecture.
    types:
    - uid: Architecture
  - name: variant
    description: Variant of the CPU.
    types:
    - uid: Variant
- name: AgentProperties
  description: The properties that determine the run agent configuration.
  kind: object
  properties:
  - name: cpu
    description: The CPU configuration in terms of number of cores required for the run.
    types:
    - uid: integer
- name: TriggerUpdateParameters
  description: The properties for updating triggers.
  kind: object
  properties:
  - name: sourceTriggers
    description: The collection of triggers based on source code repository.
    types:
    - uid: SourceTriggerUpdateParameters
      isArray: true
  - name: baseImageTrigger
    description: The trigger based on base image dependencies.
    types:
    - uid: BaseImageTriggerUpdateParameters
- name: Task
  description: "The task that has the ARM resource and task properties. \r\nThe  task will have all information to schedule a run against it."
  kind: object
  properties:
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the task.
    types:
    - uid: ProvisioningState
  - name: properties.creationDate
    isReadyOnly: true
    description: The creation date of task.
    types:
    - uid: string
  - name: properties.status
    description: The current status of task.
    types:
    - uid: TaskStatus
  - name: properties.platform
    description: The platform properties against which the run has to happen.
    types:
    - uid: PlatformProperties
  - name: properties.agentConfiguration
    description: The machine configuration of the run agent.
    types:
    - uid: AgentProperties
  - name: properties.timeout
    description: Run timeout in seconds.
    types:
    - uid: integer
  - name: properties.step
    description: The properties of a task step.
    types:
    - uid: DockerBuildStep
    - uid: FileTaskStep
    - uid: EncodedTaskStep
    typesTitle: TaskStepProperties
  - name: properties.trigger
    description: The properties that describe all triggers for the task.
    types:
    - uid: TriggerProperties
  - name: id
    isReadyOnly: true
    description: The resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
  - name: location
    description: The location of the resource. This cannot be changed after the resource is created.
    types:
    - uid: string
  - name: tags
    description: The tags of the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: TaskUpdateParameters
  description: The parameters for updating a task.
  kind: object
  properties:
  - name: tags
    description: The ARM resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.status
    description: The current status of task.
    types:
    - uid: TaskStatus
  - name: properties.platform
    description: The platform properties against which the run has to happen.
    types:
    - uid: PlatformUpdateParameters
  - name: properties.agentConfiguration
    description: The machine configuration of the run agent.
    types:
    - uid: AgentProperties
  - name: properties.timeout
    description: Run timeout in seconds.
    types:
    - uid: integer
  - name: properties.step
    description: The properties for updating a task step.
    types:
    - uid: DockerBuildStepUpdateParameters
    - uid: FileTaskStepUpdateParameters
    - uid: EncodedTaskStepUpdateParameters
    typesTitle: TaskStepUpdateParameters
  - name: properties.trigger
    description: The properties for updating trigger properties.
    types:
    - uid: TriggerUpdateParameters
- name: OS
  description: The operating system type required for the run.
  kind: enum
  properties:
  - name: Windows
    types:
    - uid: string
  - name: Linux
    types:
    - uid: string
- name: Architecture
  description: The OS architecture.
  kind: enum
  properties:
  - name: amd64
    types:
    - uid: string
  - name: x86
    types:
    - uid: string
  - name: arm
    types:
    - uid: string
- name: Variant
  description: Variant of the CPU.
  kind: enum
  properties:
  - name: v6
    types:
    - uid: string
  - name: v7
    types:
    - uid: string
  - name: v8
    types:
    - uid: string
- name: DockerBuildStepUpdateParameters
  description: The properties for updating a docker build step.
  kind: object
  properties:
  - name: imageNames
    description: The fully qualified image names including the repository and tag.
    types:
    - uid: string
      isArray: true
  - name: isPushEnabled
    description: The value of this property indicates whether the image built should be pushed to the registry or not.
    types:
    - uid: boolean
  - name: noCache
    description: The value of this property indicates whether the image cache is enabled or not.
    types:
    - uid: boolean
  - name: dockerFilePath
    description: The Docker file path relative to the source context.
    types:
    - uid: string
  - name: arguments
    description: The collection of override arguments to be used when executing this build step.
    types:
    - uid: Argument
      isArray: true
  - name: type
    isReadyOnly: true
    description: The type of the step.
    types:
    - uid: Docker
    typesTitle: string
  - name: contextPath
    description: The URL(absolute or relative) of the source context for the task step.
    types:
    - uid: string
- name: FileTaskStepUpdateParameters
  description: The properties of updating a task step.
  kind: object
  properties:
  - name: taskFilePath
    description: The task template/definition file path relative to the source context.
    types:
    - uid: string
  - name: valuesFilePath
    description: The values/parameters file path relative to the source context.
    types:
    - uid: string
  - name: values
    description: The collection of overridable values that can be passed when running a task.
    types:
    - uid: SetValue
      isArray: true
  - name: type
    isReadyOnly: true
    description: The type of the step.
    types:
    - uid: FileTask
    typesTitle: string
  - name: contextPath
    description: The URL(absolute or relative) of the source context for the task step.
    types:
    - uid: string
- name: EncodedTaskStepUpdateParameters
  description: The properties for updating encoded task step.
  kind: object
  properties:
  - name: encodedTaskContent
    description: Base64 encoded value of the template/definition file content.
    types:
    - uid: string
  - name: encodedValuesContent
    description: Base64 encoded value of the parameters/values file content.
    types:
    - uid: string
  - name: values
    description: The collection of overridable values that can be passed when running a task.
    types:
    - uid: SetValue
      isArray: true
  - name: type
    isReadyOnly: true
    description: The type of the step.
    types:
    - uid: EncodedTask
    typesTitle: string
  - name: contextPath
    description: The URL(absolute or relative) of the source context for the task step.
    types:
    - uid: string
- name: SourceTriggerUpdateParameters
  description: The properties for updating a source based trigger.
  kind: object
  properties:
  - name: sourceRepository
    description: The properties that describes the source(code) for the task.
    types:
    - uid: SourceUpdateParameters
  - name: sourceTriggerEvents
    description: The source event corresponding to the trigger.
    types:
    - uid: string
      isArray: true
  - name: status
    description: The current status of trigger.
    types:
    - uid: TriggerStatus
  - name: name
    description: The name of the trigger.
    types:
    - uid: string
- name: BaseImageTriggerUpdateParameters
  description: The properties for updating base image dependency trigger.
  kind: object
  properties:
  - name: baseImageTriggerType
    description: The type of the auto trigger for base image dependency updates.
    types:
    - uid: BaseImageTriggerType
  - name: status
    description: The current status of trigger.
    types:
    - uid: TriggerStatus
  - name: name
    description: The name of the trigger.
    types:
    - uid: string
- name: ProvisioningState
  description: The provisioning state of a run.
  kind: enum
  properties:
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
- name: TaskStatus
  description: The current status of task.
  kind: enum
  properties:
  - name: Disabled
    types:
    - uid: string
  - name: Enabled
    types:
    - uid: string
- name: PlatformProperties
  description: The platform properties against which the run has to happen.
  kind: object
  properties:
  - name: os
    description: The operating system type required for the run.
    types:
    - uid: OS
  - name: architecture
    description: The OS architecture.
    types:
    - uid: Architecture
  - name: variant
    description: Variant of the CPU.
    types:
    - uid: Variant
- name: TriggerProperties
  description: The properties of a trigger.
  kind: object
  properties:
  - name: sourceTriggers
    description: The collection of triggers based on source code repository.
    types:
    - uid: SourceTrigger
      isArray: true
  - name: baseImageTrigger
    description: The trigger based on base image dependencies.
    types:
    - uid: BaseImageTrigger
- name: Argument
  description: The properties of a run argument.
  kind: object
  properties:
  - name: name
    description: The name of the argument.
    types:
    - uid: string
  - name: value
    description: The value of the argument.
    types:
    - uid: string
  - name: isSecret
    description: Flag to indicate whether the argument represents a secret and want to be removed from build logs.
    types:
    - uid: boolean
- name: SetValue
  description: The properties of a overridable value that can be passed to a task template.
  kind: object
  properties:
  - name: name
    description: The name of the overridable value.
    types:
    - uid: string
  - name: value
    description: The overridable value.
    types:
    - uid: string
  - name: isSecret
    description: Flag to indicate whether the value represents a secret or not.
    types:
    - uid: boolean
- name: SourceUpdateParameters
  description: The properties for updating the source code repository.
  kind: object
  properties:
  - name: sourceControlType
    description: The type of source control service.
    types:
    - uid: SourceControlType
  - name: repositoryUrl
    description: The full URL to the source code respository
    types:
    - uid: string
  - name: branch
    description: The branch name of the source code.
    types:
    - uid: string
  - name: sourceControlAuthProperties
    description: >-
      The authorization properties for accessing the source code repository and to set up

      webhooks for notifications.
    types:
    - uid: AuthInfoUpdateParameters
- name: TriggerStatus
  description: The current status of trigger.
  kind: enum
  properties:
  - name: Disabled
    types:
    - uid: string
  - name: Enabled
    types:
    - uid: string
- name: BaseImageTriggerType
  description: The type of the auto trigger for base image dependency updates.
  kind: enum
  properties:
  - name: All
    types:
    - uid: string
  - name: Runtime
    types:
    - uid: string
- name: DockerBuildStep
  description: The Docker build step.
  kind: object
  properties:
  - name: imageNames
    description: The fully qualified image names including the repository and tag.
    types:
    - uid: string
      isArray: true
  - name: isPushEnabled
    description: The value of this property indicates whether the image built should be pushed to the registry or not.
    types:
    - uid: boolean
  - name: noCache
    description: The value of this property indicates whether the image cache is enabled or not.
    types:
    - uid: boolean
  - name: dockerFilePath
    description: The Docker file path relative to the source context.
    types:
    - uid: string
  - name: arguments
    description: The collection of override arguments to be used when executing this build step.
    types:
    - uid: Argument
      isArray: true
  - name: type
    isReadyOnly: true
    description: The type of the step.
    types:
    - uid: Docker
    typesTitle: string
  - name: baseImageDependencies
    isReadyOnly: true
    description: List of base image dependencies for a step.
    types:
    - uid: BaseImageDependency
      isArray: true
  - name: contextPath
    description: The URL(absolute or relative) of the source context for the task step.
    types:
    - uid: string
- name: FileTaskStep
  description: The properties of a task step.
  kind: object
  properties:
  - name: taskFilePath
    description: The task template/definition file path relative to the source context.
    types:
    - uid: string
  - name: valuesFilePath
    description: The task values/parameters file path relative to the source context.
    types:
    - uid: string
  - name: values
    description: The collection of overridable values that can be passed when running a task.
    types:
    - uid: SetValue
      isArray: true
  - name: type
    isReadyOnly: true
    description: The type of the step.
    types:
    - uid: FileTask
    typesTitle: string
  - name: baseImageDependencies
    isReadyOnly: true
    description: List of base image dependencies for a step.
    types:
    - uid: BaseImageDependency
      isArray: true
  - name: contextPath
    description: The URL(absolute or relative) of the source context for the task step.
    types:
    - uid: string
- name: EncodedTaskStep
  description: The properties of a encoded task step.
  kind: object
  properties:
  - name: encodedTaskContent
    description: Base64 encoded value of the template/definition file content.
    types:
    - uid: string
  - name: encodedValuesContent
    description: Base64 encoded value of the parameters/values file content.
    types:
    - uid: string
  - name: values
    description: The collection of overridable values that can be passed when running a task.
    types:
    - uid: SetValue
      isArray: true
  - name: type
    isReadyOnly: true
    description: The type of the step.
    types:
    - uid: EncodedTask
    typesTitle: string
  - name: baseImageDependencies
    isReadyOnly: true
    description: List of base image dependencies for a step.
    types:
    - uid: BaseImageDependency
      isArray: true
  - name: contextPath
    description: The URL(absolute or relative) of the source context for the task step.
    types:
    - uid: string
- name: SourceTrigger
  description: The properties of a source based trigger.
  kind: object
  properties:
  - name: sourceRepository
    description: The properties that describes the source(code) for the task.
    types:
    - uid: SourceProperties
  - name: sourceTriggerEvents
    description: The source event corresponding to the trigger.
    types:
    - uid: string
      isArray: true
  - name: status
    description: The current status of trigger.
    types:
    - uid: TriggerStatus
  - name: name
    description: The name of the trigger.
    types:
    - uid: string
- name: BaseImageTrigger
  description: The trigger based on base image dependency.
  kind: object
  properties:
  - name: baseImageTriggerType
    description: The type of the auto trigger for base image dependency updates.
    types:
    - uid: BaseImageTriggerType
  - name: status
    description: The current status of trigger.
    types:
    - uid: TriggerStatus
  - name: name
    description: The name of the trigger.
    types:
    - uid: string
- name: SourceControlType
  description: The type of source control service.
  kind: enum
  properties:
  - name: Github
    types:
    - uid: string
  - name: VisualStudioTeamService
    types:
    - uid: string
- name: AuthInfoUpdateParameters
  description: The authorization properties for accessing the source code repository.
  kind: object
  properties:
  - name: tokenType
    description: The type of Auth token.
    types:
    - uid: TokenType
  - name: token
    description: The access token used to access the source control provider.
    types:
    - uid: string
  - name: refreshToken
    description: The refresh token used to refresh the access token.
    types:
    - uid: string
  - name: scope
    description: The scope of the access token.
    types:
    - uid: string
  - name: expiresIn
    description: Time in seconds that the token remains valid
    types:
    - uid: integer
- name: BaseImageDependency
  description: Properties that describe a base image dependency.
  kind: object
  properties:
  - name: type
    description: The type of the base image dependency.
    types:
    - uid: BaseImageDependencyType
  - name: registry
    description: The registry login server.
    types:
    - uid: string
  - name: repository
    description: The repository name.
    types:
    - uid: string
  - name: tag
    description: The tag name.
    types:
    - uid: string
  - name: digest
    description: The sha256-based digest of the image manifest.
    types:
    - uid: string
- name: SourceProperties
  description: The properties of the source code repository.
  kind: object
  properties:
  - name: sourceControlType
    description: The type of source control service.
    types:
    - uid: SourceControlType
  - name: repositoryUrl
    description: The full URL to the source code respository
    types:
    - uid: string
  - name: branch
    description: The branch name of the source code.
    types:
    - uid: string
  - name: sourceControlAuthProperties
    description: >-
      The authorization properties for accessing the source code repository and to set up

      webhooks for notifications.
    types:
    - uid: AuthInfo
- name: TokenType
  description: The type of Auth token.
  kind: enum
  properties:
  - name: PAT
    types:
    - uid: string
  - name: OAuth
    types:
    - uid: string
- name: BaseImageDependencyType
  description: The type of the base image dependency.
  kind: enum
  properties:
  - name: BuildTime
    types:
    - uid: string
  - name: RunTime
    types:
    - uid: string
- name: AuthInfo
  description: The authorization properties for accessing the source code repository.
  kind: object
  properties:
  - name: tokenType
    description: The type of Auth token.
    types:
    - uid: TokenType
  - name: token
    description: The access token used to access the source control provider.
    types:
    - uid: string
  - name: refreshToken
    description: The refresh token used to refresh the access token.
    types:
    - uid: string
  - name: scope
    description: The scope of the access token.
    types:
    - uid: string
  - name: expiresIn
    description: Time in seconds that the token remains valid
    types:
    - uid: integer
examples:
- name: Tasks_Update
  request:
    uri: PATCH https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask?api-version=2018-09-01
    body: >-
      {
        "properties": {
          "status": "Enabled",
          "agentConfiguration": {
            "cpu": 3
          },
          "step": {
            "type": "Docker",
            "imageNames": [
              "azurerest:testtag1"
            ],
            "dockerFilePath": "src/DockerFile"
          },
          "trigger": {
            "sourceTriggers": [
              {
                "name": "mySourceTrigger",
                "sourceRepository": {
                  "sourceControlAuthProperties": {
                    "tokenType": "PAT",
                    "token": "xxxxx"
                  }
                },
                "sourceTriggerEvents": [
                  "commit"
                ]
              }
            ]
          }
        },
        "tags": {
          "testkey": "value"
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "provisioningState": "Succeeded",
          "creationDate": "2018-01-25T06:54:23.536Z",
          "status": "Enabled",
          "platform": {
            "os": "Linux",
            "architecture": "amd64"
          },
          "agentConfiguration": {
            "cpu": 3
          },
          "step": {
            "type": "Docker",
            "imageNames": [
              "azurerest:testtag1"
            ],
            "dockerFilePath": "src/DockerFile",
            "contextPath": "src",
            "isPushEnabled": true,
            "noCache": false,
            "arguments": [
              {
                "name": "mytestargument",
                "value": "mytestvalue",
                "isSecret": false
              }
            ]
          },
          "trigger": {
            "sourceTriggers": [
              {
                "name": "mySourceTrigger",
                "sourceRepository": {
                  "sourceControlType": "Github",
                  "repositoryUrl": "https://github.com/Azure/azure-rest-api-specs",
                  "branch": "master"
                },
                "sourceTriggerEvents": [
                  "commit"
                ]
              }
            ],
            "baseImageTrigger": {
              "name": "myBaseImageTrigger",
              "baseImageTriggerType": "Runtime"
            }
          }
        },
        "id": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask",
        "name": "myTask",
        "type": "Microsoft.ContainerRegistry/registries/tasks",
        "location": "eastus",
        "tags": {
          "testkey": "value"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "provisioningState": "Succeeded",
          "creationDate": "2018-01-25T06:54:23.536Z",
          "status": "Enabled",
          "platform": {
            "os": "Linux",
            "architecture": "amd64"
          },
          "agentConfiguration": {
            "cpu": 3
          },
          "step": {
            "type": "Docker",
            "imageNames": [
              "azurerest:testtag1"
            ],
            "dockerFilePath": "src/DockerFile",
            "contextPath": "src",
            "isPushEnabled": true,
            "noCache": false,
            "arguments": [
              {
                "name": "mytestargument",
                "value": "mytestvalue",
                "isSecret": false
              }
            ]
          },
          "trigger": {
            "sourceTriggers": [
              {
                "name": "mySourceTrigger",
                "sourceRepository": {
                  "sourceControlType": "Github",
                  "repositoryUrl": "https://github.com/Azure/azure-rest-api-specs",
                  "branch": "master"
                },
                "sourceTriggerEvents": [
                  "commit"
                ]
              }
            ],
            "baseImageTrigger": {
              "name": "myBaseImageTrigger",
              "baseImageTriggerType": "Runtime"
            }
          }
        },
        "id": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask",
        "name": "myTask",
        "type": "Microsoft.ContainerRegistry/registries/tasks",
        "location": "eastus",
        "tags": {
          "testkey": "value"
        }
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
