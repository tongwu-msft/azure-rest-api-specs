### YamlMime:RESTOperation
uid: management.azure.com.communication.communicationservice.regeneratekey
name: Regenerate Key
service: Communication
groupName: Communication Service
apiVersion: 2020-08-20-preview
summary: "Regenerate Key  \nRegenerate CommunicationService access key. PrimaryKey and SecondaryKey cannot be regenerated at the same time."
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/{communicationServiceName}/regenerateKey?api-version=2020-08-20-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription ID which uniquely identifies the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: communicationServiceName
  in: path
  isRequired: true
  description: The name of the CommunicationService resource.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Created. The response contains the new key.
  types:
  - uid: CommunicationServiceKeys
- name: 201 Created
  description: Created and an async operation is executing in background to make the new key take effect. The response contains new keys and an Azure-AsyncOperation header to query the async operation result.
  types:
  - uid: CommunicationServiceKeys
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: keyType
    in: body
    description: The keyType to regenerate. Must be either 'primary' or 'secondary'(case-insensitive).
    types:
    - uid: KeyType
requestHeader: []
definitions:
- name: CommunicationServiceKeys
  description: A class representing the access keys of a CommunicationService.
  kind: object
  properties:
  - name: primaryKey
    description: The primary access key.
    types:
    - uid: string
  - name: secondaryKey
    description: The secondary access key.
    types:
    - uid: string
  - name: primaryConnectionString
    description: CommunicationService connection string constructed via the primaryKey
    types:
    - uid: string
  - name: secondaryConnectionString
    description: CommunicationService connection string constructed via the secondaryKey
    types:
    - uid: string
- name: ErrorResponse
  description: Error response indicating why the requested operation could not be performed.
  kind: object
  properties:
  - name: error
    description: The error
    types:
    - uid: Error
- name: RegenerateKeyParameters
  description: Parameters describes the request to regenerate access keys
  kind: object
  properties:
  - name: keyType
    description: The keyType to regenerate. Must be either 'primary' or 'secondary'(case-insensitive).
    types:
    - uid: KeyType
- name: Error
  description: The error
  kind: object
  properties:
  - name: code
    description: Error code.
    types:
    - uid: string
  - name: message
    description: Error message indicating why the operation failed.
    types:
    - uid: string
- name: KeyType
  description: The keyType to regenerate. Must be either 'primary' or 'secondary'(case-insensitive).
  kind: enum
  properties:
  - name: Primary
    types:
    - uid: string
  - name: Secondary
    types:
    - uid: string
examples:
- name: Regenerate key
  request:
    uri: POST https://management.azure.com/subscriptions/12345/resourceGroups/MyResourceGroup/providers/Microsoft.Communication/communicationServices/MyCommunicationResource/regenerateKey?api-version=2020-08-20-preview
    body: >-
      {
        "keyType": "Primary"
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "primaryKey": "1234",
        "primaryConnectionString": "endpoint=http://example.com;accesskey=1234"
      }
  - statusCode: "201"
    body: '{}'
security: []
errorCodes: []
