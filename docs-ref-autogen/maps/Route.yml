### YamlMime:RESTOperationGroup
uid: atlas.microsoft.com.maps.route
name: Route
apiVersion: "1.0"
service: Maps
operations:
- uid: atlas.microsoft.com.maps.route.getroutedirections
  summary: >-
    **Applies to**: S0 and S1 pricing tiers.



    Returns  a route between an origin and a destination, passing through waypoints if they are specified. The route will take into account factors such as current traffic and the typical road speeds on the requested day of the week and time of day.


    Information returned includes the distance, estimated travel time, and a representation of the route geometry. Additional routing information such as optimized waypoint order or turn by turn instructions is also available, depending on the options selected.


    Routing service provides a set of parameters for a detailed description of vehicle-specific Consumption Model. Please check [Consumption Model](https://docs.microsoft.com/azure/azure-maps/consumption-model) for detailed explanation of the concepts and parameters involved.
- uid: atlas.microsoft.com.maps.route.getrouterangepreview
  summary: >-
    __Route Range (Isochrone) API__



    **Applies to**: S1 pricing tier. Access from S0 pricing tier will be deprecated after February 4th' 2019.


    This service will calculate a set of locations that can be reached from the origin point based on fuel, energy,  or time budget that is specified. A polygon boundary (or Isochrone) is returned in a counterclockwise  orientation as well as the precise polygon center which was the result of the origin point.


    The returned polygon can be used for further processing such as  [Search Inside Geometry](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchinsidegeometry) to  search for POIs within the provided Isochrone.
- uid: atlas.microsoft.com.maps.route.postroutedirections
  summary: >-
    **Applies to**: S0 and S1 pricing tiers.



    Returns  a route between an origin and a destination, passing through waypoints if they are specified. The route will take into account factors such as current traffic and the typical road speeds on the requested day of the week and time of day.


    Information returned includes the distance, estimated travel time, and a representation of the route geometry. Additional routing information such as optimized waypoint order or turn by turn instructions is also available, depending on the options selected.


    Routing service provides a set of parameters for a detailed description of a vehicle-specific Consumption Model. Please check [Consumption Model](https://docs.microsoft.com/en-us/rest/api/maps/consumption-model) for detailed explanation of the concepts and parameters involved.
- uid: atlas.microsoft.com.maps.route.postroutedirectionsbatchpreview
  summary: "## Route Directions Batch API\n\n**Applies to**: S1 pricing tier. Access from S0 pricing tier will be deprecated after February 4th' 2019.\n\nThe Route Directions Batch API allows the caller to batch up to 1,000 [Route Directions API](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections) queries/requests using just a single API call.\n### Submit Batch Request\nTo send the _route directions_ queries you will use a `POST` request where the request body will contain the `queries` array in `json` format and the `Content-Type` header will be set to `application/json`. Here's a sample request body containing 5 _route directions_ queries:  \n<br>\n```json\n{\n    \"queries\": [\n        \"?query=47.639987,-122.128384:47.621252,-122.184408:47.596437,-122.332000&routeType=fastest&travelMode=car\",\n        \"?query=47.620659,-122.348934:47.610101,-122.342015&travelMode=bicycle&routeType=eco&traffic=false\",\n        \"?query=40.759856,-73.985108:40.771136,-73.973506&travelMode=pedestrian&routeType=shortest\"\n    ]\n}\n```\n<br> A _route directions_ query in a batch is just a partial URL _without_ the protocol, base URL, path, api-version and subscription-key. It can accept any of the supported _route directions_ [URI parameters](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections#uri-parameters). The string values in the _route directions_ query must be properly escaped (e.g. \" character should be escaped with \\\\ ) and it should also be properly URL-encoded.     \n<br>\nThe maximum number of queries that can be specified in the batch is **1,000** and the batch should contain at least **1** query.    \n<br>\nPlease note that the Route Directions Batch API is a long-running request. Here's a typical sequence of operations:\n1. Client sends a Route Directions Batch `POST` request to Azure Maps\n2. The server will respond with one of the following:\n    \n    > HTTP `202 Accepted` - Batch request has been accepted.\n    \n    > HTTP `Error` - There was an error processing your Batch request. This could either be a `400 Bad Request` or any other `Error` status code.\n\n3. If the batch request was accepted successfully, the `Location` header in the response contains the URL to download the results of the batch request.\n4. Client issues a `GET` request on the _download URL_ obtained in Step 3 to download the batch results.\n\n<br>\n### Download Batch Results\nTo download the batch results you will issue a `GET` request to the batch download endpoint. This _download URL_ can be obtained from the `Location` header of a successful `POST` batch request and looks like the following:\n<br>\n```\nhttps://atlas.microsoft.com/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}\n```\n<br> Here's the typical sequence of operations for downloading the batch results:\n1. Client sends a `GET` request using the _download URL_.\n2. The server will respond with one of the following:\n    \n    > HTTP `202 Accepted` - Batch request was accepted but is still being processed. Please try again in some time.\n\n    > HTTP `200 OK` - Batch request successfully processed. The response body contains all the batch results.\n\n<br>\n### Batch Response Model\nWhen downloading the results of a batch request, if the batch has finished processing, the response body contains the batch response. This batch response contains a `summary` component that indicates the `totalRequests` that were part of the original batch request and `successfulRequests` i.e. queries which were executed successfully. The batch response also includes a `batchResults` array which contains a response for each and every query in the batch request. Also, the `batchResults` will contain the results in the exact same order the original queries were sent in the batch request. Each entry in `batchResults` is of one of the following types:\n\n  - [`RouteDirectionsResponse`](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections#routedirectionsresponse) - If the query completed successfully.\n\n  - `Error` - If the query failed. The result will contain a `status code` and a `message` in this case.\n\n<br> Here's a sample Batch Response with 1 _successful_ and 1 _failed_ result:\n<br>\n```json            \n{\n    \"summary\": {\n        \"successfulRequests\": 1,\n        \"totalRequests\": 2\n    },\n    \"batchResults\": [\n        {\n            \"routes\": [\n                {\n                    \"summary\": {\n                        \"lengthInMeters\": 1758,\n                        \"travelTimeInSeconds\": 387,\n                        \"trafficDelayInSeconds\": 0,\n                        \"departureTime\": \"2018-07-17T00:49:56+00:00\",\n                        \"arrivalTime\": \"2018-07-17T00:56:22+00:00\"\n                    },\n                    \"legs\": [\n                        {\n                            \"summary\": {\n                                \"lengthInMeters\": 1758,\n                                \"travelTimeInSeconds\": 387,\n                                \"trafficDelayInSeconds\": 0,\n                                \"departureTime\": \"2018-07-17T00:49:56+00:00\",\n                                \"arrivalTime\": \"2018-07-17T00:56:22+00:00\"\n                            },\n                            \"points\": [\n                                {\n                                    \"latitude\": 47.62094,\n                                    \"longitude\": -122.34892\n                                },\n                                {\n                                    \"latitude\": 47.62094,\n                                    \"longitude\": -122.3485\n                                },\n                                {\n                                    \"latitude\": 47.62095,\n                                    \"longitude\": -122.3476\n                                }\n                            ]\n                        }\n                    ],\n                    \"sections\": [\n                        {\n                            \"startPointIndex\": 0,\n                            \"endPointIndex\": 40,\n                            \"sectionType\": \"TRAVEL_MODE\",\n                            \"travelMode\": \"bicycle\"\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            \"statusCode\": 400,\n            \"message\": \"Bad Request\"\n        }\n    ]\n}\n```\n<br>\n### Data Retention Period\nPlease, be aware that batch results are available for download for **14** days, after which the request for results download will return `400 Bad Request` response.\n<br>"
- uid: atlas.microsoft.com.maps.route.postroutematrixpreview
  summary: "**Applies to**: S1 pricing tier. Access from S0 pricing tier will be deprecated after February 4th' 2019.\n\n\nThe Matrix Routing service allows calculation of a matrix of route summaries for a set of routes defined by origin and destination locations. For every given origin, this service calculates the cost of routing from that origin to every given destination. The set of origins and the set of destinations can be thought of as the column and row headers of a table and each cell in the table contains the costs of routing from the origin to the destination for that cell. For each route, the travel times and distances are calculated. You can use the computed costs to determine which routes to calculate using the Routing Directions API. If the computation takes longer than 20 seconds or forceAsync parameter in the request is set to true, this API returns a 202 response code along a redirect URL in the Location field of the response header. This URL should be checked periodically until the response data or error information is available. \n\nThe maximum size of a matrix for this API is 700 (the number of origins  multiplied by the number of destinations). With that constraint in mind,  examples of possible matrix dimensions are: 50x10, 10x10, 28x25. 10x70  (it does not need to be square).\n\nThe asynchronous responses are stored for 14 days. The redirect URL returns a 400 response if used after the expiration period.\n\n### Download Async Results\nWhen a request issues a `202 Accepted` response, the request is being processed using our async pipeline. You will be given a URL to check the progress of your  async request in the location header of the response.\n\nThe URL provided by the location header will return the following responses when a `GET` request is issued.\n\n  > HTTP `202 Accepted` - Matrix request was accepted but is still being processed. Please try again in some time.\n\n  > HTTP `200 OK` - Matrix request successfully processed. The response body contains all of the results."
