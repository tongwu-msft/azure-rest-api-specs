### YamlMime:RESTOperation
uid: atlas.microsoft.com.maps.renderv2.getmaptilepreview
name: Get Map Tile Preview
service: Maps
groupName: Render V2
apiVersion: "2.0"
summary: >-
  **Applies to**: S0 and S1 pricing tiers.


  The Get Map Tiles API allows users to request map tiles in vector or raster formats typically to be integrated  into a map control or SDK. Some example tiles that can be requested are Azure Maps road tiles, real-time  Weather Radar tiles or the map tiles created using [Azure Maps Creator](https://aka.ms/amcreator). By default,  Azure Maps uses vector tiles for its web map control (Web SDK) and Android SDK.
consumes: []
produces:
- application/json
paths:
- content: GET https://atlas.microsoft.com/map/tile?api-version=2.0&tilesetId={tilesetId}&zoom={zoom}&x={x}&y={y}
- content: GET https://atlas.microsoft.com/map/tile?subscription-key={subscription-key}&api-version=2.0&tilesetId={tilesetId}&zoom={zoom}&x={x}&y={y}&timeStamp={timeStamp}&tileSize={tileSize}&language={language}&view={view}
  isOptional: true
uriParameters:
- name: subscription-key
  in: query
  description: One of the Azure Maps keys provided from an Azure Map Account. Please refer to this [article](https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication) for details on how to manage authentication.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API. Current version is 2.0
  types:
  - uid: string
- name: tilesetId
  in: query
  isRequired: true
  description: A tileset is a collection of raster or vector data broken up into a uniform grid of square tiles at preset  zoom levels. Every tileset has a **tilesetId** to use when making requests. The **tilesetId** for tilesets created using [Azure Maps Creator](https://aka.ms/amcreator) are generated through the  [Tileset Create API](https://docs.microsoft.com/en-us/rest/api/maps/tileset). The ready-to-use tilesets supplied  by Azure Maps are listed below. For example, microsoft.base.
  types:
  - uid: TilesetID
- name: zoom
  in: query
  isRequired: true
  description: >-
    Zoom level for the desired tile. Please find TilesetID list below for more details on supported zoom level for each tilesetId.<br>


    Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.
  types:
  - uid: integer
- name: x
  in: query
  isRequired: true
  description: >-
    X coordinate of the tile on zoom grid. Value must be in the range [0, 2<sup>`zoom`</sup> -1].


    Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.
  types:
  - uid: integer
- name: y
  in: query
  isRequired: true
  description: >-
    Y coordinate of the tile on zoom grid. Value must be in the range [0, 2<sup>`zoom`</sup> -1].


    Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.
  types:
  - uid: integer
- name: timeStamp
  in: query
  description: "The desired date and time of the requested tile. This parameter must be specified in the standard date-time format (e.g. 2019-11-14T16:03:00-08:00), as defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601). This parameter is only supported when tilesetId parameter is set to one of the values below.\n  \n* microsoft.weather.infrared.main: We provide tiles up to 3 hours in the past. Tiles are available in 10-minute intervals. We round the timeStamp value to the nearest 10-minute time frame.\n* microsoft.weather.radar.main: We provide tiles up to 1.5 hours in the past and up to 2 hours in the future. Tiles are available in 5-minute intervals. We round the timeStamp value to the nearest 5-minute time frame."
  types:
  - uid: string
- name: tileSize
  in: query
  description: The size of the returned map tile in pixels.
  types:
  - uid: TileSize
- name: language
  in: query
  description: >-
    Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive. When data in specified language is not available for a specific field, default language is used.


    Please refer to [Supported Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages) for details.
  types:
  - uid: string
- name: view
  in: query
  description: >-
    The View parameter specifies which set of geopolitically disputed content is returned via Azure Maps services, including  borders and labels displayed on the map. The View parameter (also referred to as “user region parameter”) will show the  correct maps for that country/region. By default, the View parameter is set to “Unified” even if you haven’t defined it in  the request. It is your responsibility to determine the location of your users, and then set the View parameter correctly  for that location. Alternatively, you have the option to set ‘View=Auto’, which will return the map data based on the IP  address of the request. The View parameter in Azure Maps must be used in compliance with applicable laws, including those  regarding mapping, of the country where maps, images and other data and third party content that you are authorized to  access via Azure Maps is made available. Example: view=IN.


    Please refer to [Supported Views](https://aka.ms/AzureMapsLocalizationViews) for details and to see the available Views.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: string
- name: 400 Bad Request
  description: 'Bad request: one or more parameters were incorrectly specified or are mutually exclusive.'
  types:
  - uid: ODataErrorResponse
- name: 401 Unauthorized
  headers:
  - name: WWW-Authenticate
    value: string
  description: Access denied due to invalid subscription key or invalid Azure Active Directory bearer token.  Make sure to provide a valid key for an active Azure subscription and Maps resource.  Otherwise, verify the [WWW-Authenticate](https://tools.ietf.org/html/rfc6750#section-3.1) header for error code and description of the provided AAD bearer token.
  types:
  - uid: ODataErrorResponse
- name: 403 Forbidden
  description: Permission, capacity, or authentication issues.
  types:
  - uid: ODataErrorResponse
- name: 404 Not Found
  description: 'Not Found: the requested resource could not be found, but it may be available again in the future.'
  types:
  - uid: ODataErrorResponse
- name: 500 Internal Server Error
  description: An error occurred while processing the request. Please try again later.
  types:
  - uid: ODataErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
  types:
  - uid: string
definitions:
- name: TilesetID
  description: A tileset is a collection of raster or vector data broken up into a uniform grid of square tiles at preset  zoom levels. Every tileset has a **tilesetId** to use when making requests. The **tilesetId** for tilesets created using [Azure Maps Creator](https://aka.ms/amcreator) are generated through the  [Tileset Create API](https://docs.microsoft.com/en-us/rest/api/maps/tileset). The ready-to-use tilesets supplied  by Azure Maps are listed below. For example, microsoft.base.
  kind: enum
  properties:
  - name: microsoft.base
    description: >-
      A base map is a standard map that displays roads, natural and artificial features along with the labels for those features in a vector tile.<br>


      Supports zoom levels 0 through 22. Format: vector (pbf).
    types:
    - uid: string
  - name: microsoft.base.labels
    description: >-
      Displays labels for roads, natural and artificial features in a vector tile.<br>


      Supports zoom levels 0 through 22. Format: vector (pbf).
    types:
    - uid: string
  - name: microsoft.base.hybrid
    description: >-
      Displays road, boundary and label data in a vector tile.<br>


      Supports zoom levels 0 through 22. Format: vector (pbf).
    types:
    - uid: string
  - name: microsoft.terra.main
    description: >-
      Shaded relief and terra layers.<br>


      Supports zoom levels 0 through 6. Format: raster (png).
    types:
    - uid: string
  - name: microsoft.base.road
    description: >-
      All layers with our main style.<br>


      Supports zoom levels 0 through 18. Format: raster (png).
    types:
    - uid: string
  - name: microsoft.base.darkgrey
    description: >-
      All layers with our dark grey style.<br>


      Supports zoom levels 0 through 18. Format: raster (png).
    types:
    - uid: string
  - name: microsoft.base.labels.road
    description: >-
      Label data in our main style.<br>


      Supports zoom levels 0 through 18. Format: raster (png).
    types:
    - uid: string
  - name: microsoft.base.hybrid.road
    description: >-
      Road, boundary and label data in our main style.<br>


      Supports zoom levels 0 through 18. Format: raster (png).
    types:
    - uid: string
  - name: microsoft.imagery
    description: >-
      A combination of satellite and aerial imagery. Only available in S1 pricing SKU.<br>


      Supports zoom levels 1 through 19. Format: raster (jpeg).
    types:
    - uid: string
  - name: microsoft.weather.radar.main
    description: >-
      Weather radar tiles. Latest weather radar images including areas of rain, snow, ice and mixed conditions. Please see [coverage information](https://aka.ms/AzureMapsWeatherCoverage) for Azure Maps Weather service.  To learn more about the Radar data, please see [Weather concepts](https://aka.ms/AzureMapsWeatherConcepts).<br>


      Supports zoom levels 0 through 15. Format: raster (png).
    types:
    - uid: string
  - name: microsoft.weather.infrared.main
    description: >-
      Weather infrared tiles. Latest Infrared Satellite images shows clouds by their temperature.  Please see [coverage information](https://aka.ms/AzureMapsWeatherCoverage) for Azure Maps Weather service. To learn more about the returned Satellite data, please see [Weather concepts](https://aka.ms/AzureMapsWeatherConcepts).<br>

      Supports zoom levels 0 through 15. Format: raster (png).
    types:
    - uid: string
- name: TileSize
  description: The size of the returned map tile in pixels.
  kind: enum
  properties:
  - name: "256"
    description: >-
      Return a 256 by 256 pixel tile. Available for all tilesetIds except for

      * microsoft.terra.main
    types:
    - uid: string
  - name: "512"
    description: "Return a 512 by 512 pixel tile.  Available for all tilesetIds except for \n* microsoft.weather.radar.main\n* microsoft.weather.infrared.main\n* microsoft.base.hybrid"
    types:
    - uid: string
- name: ODataErrorResponse
  description: This response object is returned when an error occurs in the Maps API.
  kind: object
  properties:
  - name: error
    description: This object is returned when an error occurs in the Maps API.
    types:
    - uid: ODataError
- name: ODataError
  description: This object is returned when an error occurs in the Maps API.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The ODataError code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: If available, a human readable description of the error.
    types:
    - uid: string
  - name: details
    description: This object is returned when an error occurs in the Maps API.
    types:
    - uid: ODataError
      isArray: true
  - name: target
    isReadyOnly: true
    description: If available, the target causing the error.
    types:
    - uid: string
examples:
- name: GetMapTile
  request:
    uri: GET https://atlas.microsoft.com/map/tile?subscription-key=[subscription-key]&api-version=2.0&tilesetId=microsoft.base&zoom=6&x=10&y=22
  responses:
  - statusCode: "200"
    body: "\"binary string image\""
  - statusCode: "400"
    body: >-
      {
        "error": {
          "code": "400 BadRequest",
          "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
        }
      }
  - statusCode: "401"
    body: >-
      {
        "error": {
          "code": "401 Unauthorized",
          "message": "Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription."
        }
      }
  - statusCode: "403"
    body: >-
      {
        "error": {
          "code": "403 Forbidden",
          "message": "Permission, capacity, or authentication issues."
        }
      }
  - statusCode: "404"
    body: >-
      {
        "error": {
          "code": "404 NotFound",
          "message": "Not Found: the requested resource could not be found, but it may be available again in the future."
        }
      }
  - statusCode: "500"
    body: >-
      {
        "error": {
          "code": "500 InternalServerError",
          "message": "An error occurred while processing the request. Please try again later."
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes: []
- name: subscription-key
  type: apiKey
  description: This is a shared key which is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs. With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.  For publicly exposed applications our recommendation is to use server to server access of Azure Maps REST APIs where this key can be  securely stored.
  in: query
errorCodes: []
