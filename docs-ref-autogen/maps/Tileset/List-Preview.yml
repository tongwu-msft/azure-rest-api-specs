### YamlMime:RESTOperation
uid: maps.tileset.listpreview
name: List Preview
service: Maps Creator
groupName: Tileset
apiVersion: "1.0"
summary: ">[!Important]\n>The Azure Maps Creator services (Preview) version 1.0 will retire on 6 September 2021. Please transition to using version 2.0 by that date.\n>For details, see [Azure Maps Creator Tutorial](https://azure.microsoft.com/en-us/updates/azure-maps-creator-v1-will-be-retired-on-6-september-2021/).\n\n\n**Tileset List API**\n\n**Applies to**: see pricing [tiers](https://azure.microsoft.com/en-us/pricing/details/azure-maps/).\n<br>\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/en-us/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\nThis API allows the caller to fetch a list of all tilesets created.   \n<br>"
consumes: []
produces:
- application/json
paths:
- content: GET https://{geography}.atlas.microsoft.com/tileset?api-version=1.0
- content: GET https://{geography}.atlas.microsoft.com/tileset?subscription-key={subscription-key}&api-version=1.0
  isOptional: true
uriParameters:
- name: geography
  in: path
  isRequired: true
  description: This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu.
  types:
  - uid: string
- name: subscription-key
  in: query
  description: One of the Azure Maps keys provided from an Azure Map Account. Please refer to this [article](https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication) for details on how to manage authentication.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API. Current version is 1.0
  types:
  - uid: string
responses:
- name: 200 OK
  description: List tileset request completed successfully. The response body contains a list of all tilesets.
  types:
  - uid: TilesetListResponse
- name: 400 Bad Request
  description: 'Bad request: one or more parameters were incorrectly specified or are mutually exclusive.'
  types:
  - uid: ODataErrorResponse
- name: 401 Unauthorized
  headers:
  - name: WWW-Authenticate
    value: string
  description: Access denied due to invalid subscription key or invalid Azure Active Directory (Azure AD) bearer token.  Make sure to provide a valid key for an active Azure subscription and Maps resource.  Otherwise, verify the [WWW-Authenticate](https://tools.ietf.org/html/rfc6750#section-3.1) header for error code and description of the provided Azure AD bearer token.
  types:
  - uid: ODataErrorResponse
- name: 403 Forbidden
  description: Permission, capacity, or authentication issues.
  types:
  - uid: ODataErrorResponse
- name: 404 Not Found
  description: 'Not Found: the requested resource could not be found, but it may be available again in the future.'
  types:
  - uid: ODataErrorResponse
- name: 500 Internal Server Error
  description: An error occurred while processing the request. Please try again later.
  types:
  - uid: ODataErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
  types:
  - uid: string
definitions:
- name: TilesetListResponse
  description: The response model for the Tileset List API. Returns a list of all tilesets.
  kind: object
  properties:
  - name: tilesets
    isReadyOnly: true
    description: A list of all tilesets.
    types:
    - uid: TilesetDetailInfo
      isArray: true
- name: ODataErrorResponse
  description: This response object is returned when an error occurs in the Azure Maps API.
  kind: object
  properties:
  - name: error
    description: This object is returned when an error occurs in the Azure Maps API.
    types:
    - uid: ODataError
- name: TilesetDetailInfo
  description: Detail information for the data.
  kind: object
  properties:
  - name: tilesetId
    isReadyOnly: true
    description: The unique tileset id for the tileset.
    types:
    - uid: string
  - name: datasetId
    isReadyOnly: true
    description: The unique dataset Id used to create the tileset.
    types:
    - uid: string
  - name: description
    isReadyOnly: true
    description: The description the caller provided when creating the tileset. Maximum length 1024 characters.
    types:
    - uid: string
  - name: minZoom
    isReadyOnly: true
    description: The lowest tile zoom level tile generated for the tileset.
    types:
    - uid: integer
  - name: maxZoom
    isReadyOnly: true
    description: The highest tile zoom level tile generated for the tileset.
    types:
    - uid: integer
  - name: bbox
    isReadyOnly: true
    description: "Bounding box which all features of the tileset lay within. Projection used - EPSG:3857. Format : 'minLon, minLat, maxLon, maxLat'."
    types:
    - uid: number
      isArray: true
- name: ODataError
  description: This object is returned when an error occurs in the Azure Maps API.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The ODataError code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: If available, a human-readable description of the error.
    types:
    - uid: string
  - name: details
    description: This object is returned when an error occurs in the Azure Maps API.
    types:
    - uid: ODataError
      isArray: true
  - name: target
    isReadyOnly: true
    description: If available, the target causing the error.
    types:
    - uid: string
examples:
- name: Get a list of all tilesets
  request:
    uri: GET https://us.atlas.microsoft.com/tileset?subscription-key=[subscription-key]&api-version=1.0
  responses:
  - statusCode: "200"
    body: >-
      {
        "tilesets": [
          {
            "tilesetId": "d8fa86de-bb0f-4a02-a6ff-62ae7545dd84",
            "datasetId": "63b18a6b-ac35-4b23-a1d9-ffa1003ad50b",
            "description": "My first tileset",
            "minZoom": 16,
            "maxZoom": 18,
            "bbox": [
              -122.13595,
              47.636524,
              -122.1329,
              47.637525
            ]
          },
          {
            "tilesetId": "b8dca8b3-8aad-4afe-abd6-0efe37b5a2e3",
            "datasetId": "c0a01139-662e-4d5a-bf5f-92ea4a292aad",
            "description": "My second tileset",
            "minZoom": 19,
            "maxZoom": 19,
            "bbox": [
              -122.13595,
              47.636524,
              -122.1329,
              47.637525
            ]
          }
        ]
      }
  - statusCode: "400"
    body: >-
      {
        "error": {
          "code": "400 BadRequest",
          "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
        }
      }
  - statusCode: "401"
    body: >-
      {
        "error": {
          "code": "401 Unauthorized",
          "message": "Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription."
        }
      }
  - statusCode: "403"
    body: >-
      {
        "error": {
          "code": "403 Forbidden",
          "message": "Permission, capacity, or authentication issues."
        }
      }
  - statusCode: "404"
    body: >-
      {
        "error": {
          "code": "404 NotFound",
          "message": "Not Found: the requested resource could not be found, but it may be available again in the future."
        }
      }
  - statusCode: "500"
    body: >-
      {
        "error": {
          "code": "500 InternalServerError",
          "message": "An error occurred while processing the request. Please try again later."
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure role-based access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes: []
- name: subscription-key
  type: apiKey
  description: >-
    This is a shared key that is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.

     For publicly exposed applications, our recommendation is to use server-to-server access of Azure Maps REST APIs where this key can be  securely stored.
  in: query
metadata:
  description: >-
    >[!Important]

    >The Azure Maps Creator services (Preview) version 1.0 will retire on 6 September 2021.
errorCodes: []
