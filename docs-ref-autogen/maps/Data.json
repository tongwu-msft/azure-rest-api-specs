{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Azure Maps Data Service",
    "description": "APIs for uploading map data to Azure Maps."
  },
  "host": "atlas.microsoft.com",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported.",
      "scopes": {
        "user_impersonation": "Impersonates a user's Azure Active Directory account."
      }
    },
    "apiKeyQuery": {
      "type": "apiKey",
      "description": "This is a shared key which is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs. With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.  For publicly exposed applications our recommendation is to use server to server access of Azure Maps REST APIs where this key can be  securely stored.",
      "name": "subscription-key",
      "in": "query"
    }
  },
  "security": [
    {
      "azure_auth": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "responses": {
    "400": {
      "description": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "401": {
      "description": "Access denied due to invalid subscription key or invalid Azure Active Directory bearer token.  Make sure to provide a valid key for an active Azure subscription and Maps resource.  Otherwise, verify the [WWW-Authenticate](https://tools.ietf.org/html/rfc6750#section-3.1) header for error code and description of the provided AAD bearer token.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      },
      "headers": {
        "WWW-Authenticate": {
          "type": "string",
          "description": "Bearer realm=\"https://atlas.microsoft.com/\", error=\"invalid_token\", error_description=\"The access token expired\""
        }
      }
    },
    "403": {
      "description": "Permission, capacity, or authentication issues.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "404": {
      "description": "Not Found: the requested resource could not be found, but it may be available again in the future.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "500": {
      "description": "An error occurred while processing the request. Please try again later.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    }
  },
  "parameters": {
    "ClientId": {
      "name": "x-ms-client-id",
      "description": "Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.    ",
      "type": "string",
      "in": "header",
      "required": false,
      "x-ms-parameter-location": "client"
    },
    "SubscriptionKey": {
      "name": "subscription-key",
      "description": "One of the Azure Maps keys provided from an Azure Map Account. Please refer to this [article](https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication) for details on how to manage authentication.",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "client"
    },
    "ApiVersion": {
      "name": "api-version",
      "description": "Version number of Azure Maps API. Current version is 1.0",
      "type": "string",
      "in": "query",
      "required": true,
      "default": "1.0",
      "x-ms-parameter-location": "client"
    },
    "JsonFormat": {
      "name": "format",
      "description": "Desired format of the response. Only `json` format is supported.",
      "type": "string",
      "in": "path",
      "required": true,
      "enum": [
        "json"
      ],
      "x-ms-enum": {
        "name": "JsonFormat",
        "modelAsString": false,
        "values": [
          {
            "value": "json",
            "description": "[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)"
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "UploadDataFormat": {
      "name": "dataFormat",
      "description": "Data format of the content being uploaded. Currently, only `geojson` format is supported.",
      "type": "string",
      "in": "query",
      "required": true,
      "enum": [
        "geojson"
      ],
      "x-ms-enum": {
        "name": "UploadDataFormat",
        "modelAsString": false,
        "values": [
          {
            "value": "geojson",
            "description": "[GeoJSON](https://tools.ietf.org/html/rfc7946) is a JSON based geospatial data interchange format."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "Udid": {
      "name": "udid",
      "description": "The unique data id for the content. The `udid` must have been obtained from a successful [Data Upload API](https://docs.microsoft.com/en-us/rest/api/maps/data/uploadpreview) call.",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    }
  },
  "paths": {},
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "description": "This response object is returned when an error occurs in the Maps API",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "This object is returned when an error occurs in the Maps API",
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "The HTTP status code."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "If available, a human readable description of the error."
        }
      }
    },
    "MapDataUploadResponse": {
      "description": "The response model for the Data Upload API for the case when the content was successfully uploaded. This contains a unique data id `udid` for the uploaded content.",
      "type": "object",
      "properties": {
        "udid": {
          "description": "A unique data id `udid` for the uploaded content.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MapDataUploadRequestAcceptedResponse": {
      "description": "The response model for the Data Upload API for the case when the upload request was accepted, but the content wasn't created yet. This contains the current `status` of the long running upload operation.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Current `status` of the long running upload operation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MapDataUpdateResponse": {
      "description": "The response model for the Data Update API for the case when the content was successfully updated. This contains the `udid` for the updated content.",
      "type": "object",
      "properties": {
        "udid": {
          "description": "The `udid` for the updated content.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MapDataUpdateRequestAcceptedResponse": {
      "description": "The response model for the Data Update API for the case when the update request was accepted, but the content wasn't updated/replaced yet. This contains the current `status` of the long running update operation.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Current `status` of the long running update operation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MapDataDownloadResponse": {
      "description": "The response model for the Data Download API. The response body will contain the content for the passed in `udid`.",
      "type": "object"
    },
    "MapDataDeleteResponse": {
      "description": "The response model for the Data Delete API. The response body will be empty signifying there's no content available for the `udid` anymore.",
      "type": "object"
    },
    "MapDataListResponse": {
      "description": "The response model for the Data List API. Returns a list of all the previously uploaded data.",
      "type": "object",
      "properties": {
        "mapDataList": {
          "description": "A list of all the previously uploaded data.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/MapDataDetailInfo"
          }
        }
      }
    },
    "MapDataDetailInfo": {
      "description": "Detail information for the data.",
      "type": "object",
      "properties": {
        "udid": {
          "description": "The unique data id for the data.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The location of the data. Execute a HTTP `GET` on this location to download the data.",
          "type": "string",
          "readOnly": true
        },
        "sizeInBytes": {
          "description": "The size of the content in bytes.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "uploadStatus": {
          "description": "The current upload status of the content.",
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "x-internal-service-id": "maps",
  "x-internal-service-name": "Maps",
  "x-internal-toc-name": "Data",
  "x-internal-product-uid": null,
  "x-internal-split-members": [
    {
      "displayName": "Delete Preview",
      "relativePath": "Data/DeletePreview"
    },
    {
      "displayName": "Download Preview",
      "relativePath": "Data/DownloadPreview"
    },
    {
      "displayName": "List Preview",
      "relativePath": "Data/ListPreview"
    },
    {
      "displayName": "Update Preview",
      "relativePath": "Data/UpdatePreview"
    },
    {
      "displayName": "Upload Preview",
      "relativePath": "Data/UploadPreview"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}