### YamlMime:RESTOperationGroup
uid: atlas.microsoft.com.maps.render
name: Render
apiVersion: "1.0"
service: Maps
metadata:
  description: Learn more about [Maps Render Operations]. How to [Get Map State Tile Preview,Get Map Tile,Get Copyright For Tile,Get Copyright For World,Get Copyright From Bounding Box,Get Copyright Caption,Get Map Image,Get Map Imagery Tile].
operations:
- uid: atlas.microsoft.com.maps.render.getcopyrightcaption
  summary: "**Applies to**: S0 and S1 pricing tiers.\n\n\n\nCopyrights API is designed to serve copyright information for Render Tile \nservice. In addition to basic copyright for the whole map, API is serving \nspecific groups of copyrights for some countries.\n\nAs an alternative to copyrights for map request, one can receive captions\nfor displaying the map provider information on the map."
- uid: atlas.microsoft.com.maps.render.getcopyrightfortile
  summary: >-
    **Applies to**: S0 and S1 pricing tiers.




    Copyrights API is designed to serve copyright information for Render Tile  service. In addition to basic copyright for the whole map, API is serving  specific groups of copyrights for some countries.

    Returns the copyright information for a given tile. To obtain the copyright information for a particular tile, the request should specify the tile's zoom level and x and y coordinates (see: Zoom Levels and Tile Grid).
- uid: atlas.microsoft.com.maps.render.getcopyrightforworld
  summary: >-
    **Applies to**: S0 and S1 pricing tiers.



    Copyrights API is designed to serve copyright information for Render Tile  service. In addition to basic copyright for the whole map, API is serving  specific groups of copyrights for some countries.

    Returns the copyright information for the world. To obtain the default copyright information for the whole world, do not specify a tile or bounding box.
- uid: atlas.microsoft.com.maps.render.getcopyrightfromboundingbox
  summary: >-
    **Applies to**: S0 and S1 pricing tiers.



    Returns copyright information for a given bounding box. Bounding-box requests should specify the minimum and maximum longitude and latitude (EPSG-3857) coordinates
- uid: atlas.microsoft.com.maps.render.getmapimage
  summary: "**Applies to**: S0 and S1 pricing tiers.\n\n\nThe static image service renders a user-defined, rectangular image containing a map section using a zoom level from 0 to 20. The static image service renders a user-defined, rectangular image containing a map section using a zoom level from 0 to 20. The supported resolution range for the map image is from 1x1 to 8192x8192. If you are deciding when to use the static image service over the map tile service, you may want to consider how you would like to interact with the rendered map. If the map contents will be relatively unchanging, a static map is a good choice. If you want to support a lot of zooming, panning and changing of the map content, the map tile service would be a better choice. \n\nService also provides Image Composition functionality to get a static image back with additional data like; pushpins and geometry overlays with following S0 and S1 capabilities. \n\nIn S0 you can:\n- Render up to 5 pushpins specified in the request\n- Provide one custom image for the pins referenced in the request\n- Add labels to the pushpins\n\nIn S1 you can:\n- Render pushpins through [Azure Maps Data Service](https://aka.ms/AzureMapsMapDataService)\n- Specify multiple pushpin styles\n- Render circle, polyline and polygon geometry types.\n- Render of supported GeoJSON geometry types uploaded through [Azure Maps Data Service](https://aka.ms/AzureMapsMapDataService)\n\nPlease see [How-to-Guide](https://aka.ms/AzureMapsHowToGuideImageCompositor) for detailed examples.\n\n_Note_ : Either **center** or **bbox** parameter must be supplied to the\nAPI.\n<br><br>\nThe supported Lat and Lon ranges when using the **bbox** parameter, are as follows:\n<br><br>\n\n  |Zoom Level | Max Lon Range   | Max Lat Range|\n  |:----------|:----------------|:-------------|\n  |0          | 360.0           | 170.0        | \n  |1          | 360.0           | 170.0        |\n  |2          | 360.0           | 170.0        |\n  |3          | 360.0           | 170.0        |\n  |4          | 360.0           | 170.0        |\n  |5          | 180.0           | 85.0         |\n  |6          | 90.0            | 42.5         |\n  |7          | 45.0            | 21.25        |\n  |8          | 22.5            | 10.625       |\n  |9          | 11.25           | 5.3125       |\n  |10         | 5.625           | 2.62625      |\n  |11         | 2.8125          | 1.328125     |\n  |12         | 1.40625         | 0.6640625    |\n  |13         | 0.703125        | 0.33203125   |\n  |14         | 0.3515625       | 0.166015625  |\n  |15         | 0.17578125      | 0.0830078125 |  \n  |16         | 0.087890625     | 0.0415039063 | \n  |17         | 0.0439453125    | 0.0207519531 |\n  |18         | 0.0219726563    | 0.0103759766 |\n  |19         | 0.0109863281    | 0.0051879883 |\n  |20         | 0.0054931641    | 0.0025939941 |"
- uid: atlas.microsoft.com.maps.render.getmapimagerytile
  summary: >-
    **Applies to:** S1 pricing tier.



    This service returns a map image tile with size 256x256, given the x and y coordinates and zoom

    level. Zoom level ranges from 1 to 19. The current available style value is 'satellite' which provides satellite

    imagery alone.



    **Note**: We recommend to start to use the new [Get Map Tile V2 API](https://aka.ms/GetMapTileV2).
- uid: atlas.microsoft.com.maps.render.getmapstatetilepreview
  summary: >-
    **Applies to**: S0 and S1 pricing tiers.



    Fetches state tiles in vector format typically to be integrated into indoor maps module of map control or SDK. The map control will call this API after user turns on dynamic styling (see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid))
- uid: atlas.microsoft.com.maps.render.getmaptile
  summary: >-
    **Applies to**: S0 and S1 pricing tiers.



    Fetches map tiles in vector or raster format typically to be integrated into a new map control or SDK. By default, Azure uses vector map tiles for its web map control (see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid))


    **Note**: Weather tiles are only available via [Get Map Tile V2 API](https://aka.ms/AzureMapsWeatherTiles). We recommend to start to use the new [Get Map Tile V2 API](https://aka.ms/GetMapTileV2).
