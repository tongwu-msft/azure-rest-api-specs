### YamlMime:RESTOperation
uid: atlas.microsoft.com.maps.weather.getweatheralongroute
name: Get Weather Along Route
service: Maps
groupName: Weather
apiVersion: "1.0"
summary: "**Get Weather along route**\n   \n   \n **Applies to**: S1 pricing tier.\n\n Weather along a route API returns hyper local (one kilometer or less), up-to-the-minute weather nowcasts, weather hazard assessments, and notifications along a route described as a sequence of waypoints. \n This includes a list of weather hazards affecting the waypoint or route, and the aggregated hazard index for each waypoint might be used to paint each portion of a route according to how safe it is for the driver. When submitting the waypoints, it is recommended to stay within, or close to, the distance that can be traveled within 120-mins or shortly after. Data is updated every five minutes. \n \n The service supplements Azure Maps [Route Service](https://docs.microsoft.com/rest/api/maps/route) that allows you to first request a route between an origin and a destination and use that as an input for Weather Along Route endpoint.\n \n In addition, the service supports scenarios to generate weather notifications for waypoints that experience an increase in intensity of a weather hazard. For example, if the vehicle is expected to begin experiencing heavy rain as it reaches a waypoint, a weather notification for heavy rain will be generated for that waypoint allowing the end product to display a heavy rain notification before the driver reaches that waypoint. \n The trigger for when to display the notification for a waypoint could be based, for example, on a [geofence](https://docs.microsoft.com/azure/azure-maps/tutorial-iot-hub-maps), or selectable distance to the waypoint.\n\n The API covers all regions of the planet except latitudes above Greenland and Antarctica."
consumes: []
produces:
- application/json
paths:
- content: GET https://atlas.microsoft.com/weather/route/json?api-version=1.0&query={query}
- content: GET https://atlas.microsoft.com/weather/route/json?api-version=1.0&query={query}&language={language}
  isOptional: true
uriParameters:
- name: format
  in: path
  isRequired: true
  description: Desired format of the response. Only `json` format is supported.
  types:
  - uid: JsonFormat
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API.
  types:
  - uid: string
- name: query
  in: query
  isRequired: true
  description: "Coordinates through which the route is calculated, separated by colon (:) and entered in chronological order. A minimum of two waypoints is required. A single API call may contain up to 60 waypoints. \nA waypoint indicates location, ETA, and optional heading: latitude,longitude,ETA,heading, where\n  * `Latitude` - Latitude coordinate in decimal degrees.\n  * `Longitude` - Longitude coordinate in decimal degrees.\n  * `ETA (estimated time of arrival)` - The number of minutes from the present time that it will take for the vehicle to reach the waypoint. Allowed range is from 0.0 to 120.0 minutes.\n  * `Heading` - An optional value indicating the vehicle heading as it passes the waypoint. Expressed in clockwise degrees relative to true north. This is issued to calculate sun glare as a driving hazard. Allowed range is from 0.0 to 360.0 degrees. If not provided, a heading will automatically be derived based on the position of neighboring waypoints.\n\nIt is recommended to stay within, or close to, the distance that can be traveled within 120-mins or shortly after. This way a more accurate assessment can be provided for the trip and prevent isolated events not being captured between waypoints.  Information can and should be updated along the route (especially for trips greater than 2 hours) to continuously pull new waypoints moving forward, but also to ensure that forecast information for content such as precipitation type and intensity is accurate as storms develop and dissipate over time."
  types:
  - uid: string
- name: language
  in: query
  description: >-
    Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive. When data in specified language is not available for a specific field, default language is used.


    Please refer to [Supported Languages](https://docs.microsoft.com/azure/azure-maps/supported-languages) for details.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: WeatherAlongRouteResponse
- name: Other Status Codes
  description: An unexpected error occurred.
  types:
  - uid: ErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
  types:
  - uid: string
definitions:
- name: JsonFormat
  description: Desired format of the response. Only `json` format is supported.
  kind: enum
  properties:
  - name: json
    description: '[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)'
    types:
    - uid: string
- name: WeatherAlongRouteResponse
  description: This object is returned from a successful Weather Along Route.
  kind: object
  properties:
  - name: summary
    isReadyOnly: true
    description: Short summary of the weather along the route.
    types:
    - uid: WeatherAlongRouteSummary
  - name: waypoints
    isReadyOnly: true
    description: Data for each waypoint returned in the same order as specified in the request.
    types:
    - uid: WeatherWaypoint
      isArray: true
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: WeatherAlongRouteSummary
  description: Short summary of the weather along the route.
  kind: object
  properties:
  - name: iconCode
    description: Numeric value representing an image that displays the `iconPhrase`. Please refer to [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
    types:
    - uid: IconCode
  - name: hazards
    description: Description of the weather hazard affecting the trip.
    types:
    - uid: WeatherHazards
- name: WeatherWaypoint
  kind: object
  properties:
  - name: iconCode
    description: Numeric value representing an image that displays the `iconPhrase`. Please refer to [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
    types:
    - uid: IconCode
  - name: shortPhrase
    description: A displayable short phrase describing the forecasted conditions and precipitation intensity/type.
    types:
    - uid: string
  - name: isDayTime
    description: Indicates the time of the day. True indicates 'day',', false indicates 'night.
    types:
    - uid: boolean
  - name: cloudCover
    description: Percent representing cloud cover.
    types:
    - uid: integer
  - name: temperature
    description: Specific value of a given unit related to weather.
    types:
    - uid: WeatherUnit
  - name: wind
    description: Wind details being returned including speed and direction.
    types:
    - uid: WindDetails
  - name: windGust
    description: Wind details being returned including speed and direction.
    types:
    - uid: WindDetails
  - name: precipitation
    description: Precipitation forecast of the weather along the route.
    types:
    - uid: WeatherAlongRoutePrecipitation
  - name: lightningCount
    description: Estimation of thunderstorm intensity on an open scale. A value of 0 means there is no thunderstorm; values of 1 and higher mean there is a thunderstorm in increasing intensity.
    types:
    - uid: integer
  - name: sunGlare
    description: A rating that indicates how blinding the sun is for the driver.
    types:
    - uid: SunGlare
  - name: hazards
    description: Description of the weather hazard affecting the trip.
    types:
    - uid: WeatherHazards
  - name: notifications
    description: List of weather hazard notifications.
    types:
    - uid: WeatherNotification
      isArray: true
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: IconCode
  description: Numeric value representing an image that displays the `iconPhrase`. Please refer to [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
  kind: enum
  properties:
  - name: "1"
    types:
    - uid: Integer
  - name: "2"
    types:
    - uid: Integer
  - name: "3"
    types:
    - uid: Integer
  - name: "4"
    types:
    - uid: Integer
  - name: "5"
    types:
    - uid: Integer
  - name: "6"
    types:
    - uid: Integer
  - name: "7"
    types:
    - uid: Integer
  - name: "8"
    types:
    - uid: Integer
  - name: "9"
    types:
    - uid: Integer
  - name: "10"
    types:
    - uid: Integer
  - name: "11"
    types:
    - uid: Integer
  - name: "12"
    types:
    - uid: Integer
  - name: "13"
    types:
    - uid: Integer
  - name: "14"
    types:
    - uid: Integer
  - name: "15"
    types:
    - uid: Integer
  - name: "16"
    types:
    - uid: Integer
  - name: "17"
    types:
    - uid: Integer
  - name: "18"
    types:
    - uid: Integer
  - name: "19"
    types:
    - uid: Integer
  - name: "20"
    types:
    - uid: Integer
  - name: "21"
    types:
    - uid: Integer
  - name: "22"
    types:
    - uid: Integer
  - name: "23"
    types:
    - uid: Integer
  - name: "24"
    types:
    - uid: Integer
  - name: "25"
    types:
    - uid: Integer
  - name: "26"
    types:
    - uid: Integer
  - name: "27"
    types:
    - uid: Integer
  - name: "28"
    types:
    - uid: Integer
  - name: "29"
    types:
    - uid: Integer
  - name: "30"
    types:
    - uid: Integer
  - name: "31"
    types:
    - uid: Integer
  - name: "32"
    types:
    - uid: Integer
  - name: "33"
    types:
    - uid: Integer
  - name: "34"
    types:
    - uid: Integer
  - name: "35"
    types:
    - uid: Integer
  - name: "36"
    types:
    - uid: Integer
  - name: "37"
    types:
    - uid: Integer
  - name: "38"
    types:
    - uid: Integer
  - name: "39"
    types:
    - uid: Integer
  - name: "40"
    types:
    - uid: Integer
  - name: "41"
    types:
    - uid: Integer
  - name: "42"
    types:
    - uid: Integer
  - name: "43"
    types:
    - uid: Integer
  - name: "44"
    types:
    - uid: Integer
- name: WeatherHazards
  description: Description of the weather hazard affecting the trip.
  kind: object
  properties:
  - name: maxHazardIndex
    description: >-
      A severity/hazard index.
        * `0` - No hazard.
        * `1` - Be informed, be aware.
        * `2` - Pay attention, be prepared.
        * `3` - Take action.
        * `4` - Life threatening, emergency.
    types:
    - uid: HazardIndex
  - name: hazardDetails
    description: Details of the weather hazards affecting the trip.
    types:
    - uid: HazardDetail
      isArray: true
- name: WeatherUnit
  description: Specific value of a given unit related to weather.
  kind: object
  properties:
  - name: value
    description: Rounded value.
    types:
    - uid: number
  - name: unit
    description: Type of unit for the returned value.
    types:
    - uid: string
  - name: unitType
    description: Numeric ID value associated with the type of unit being displayed. Can be used for unit translation. Please refer to [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
    types:
    - uid: UnitType
- name: WindDetails
  description: Wind details being returned including speed and direction.
  kind: object
  properties:
  - name: direction
    description: Wind direction
    types:
    - uid: WindDirection
  - name: speed
    description: Speed of the wind in specified unit.
    types:
    - uid: WindSpeed
- name: WeatherAlongRoutePrecipitation
  description: Precipitation forecast of the weather along the route.
  kind: object
  properties:
  - name: dbz
    description: The forecasted precipitation intensity in dBZ (decibels relative to Z) from 0.0 to 100.0.
    types:
    - uid: number
  - name: type
    description: 'Precipitation type. If precipitation should occur, the type that it will be: "RAIN," "HAIL," "SNOW," "ICE," or "MIX."'
    types:
    - uid: string
- name: SunGlare
  description: A rating that indicates how blinding the sun is for the driver.
  kind: object
  properties:
  - name: calculatedVehicleHeading
    description: If the vehicle heading value is not provided for a waypoint, then the service will calculate a heading based upon the location of neighboring waypoints if provided.
    types:
    - uid: integer
  - name: glareIndex
    description: An index from 0 to 100 indicating sun glare intensity for a driver. A value of 50 and above can be considered a hazard for some drivers and a value of 100 signifies the driver is driving straight into the sun and atmospheric conditions are clear allowing for the full intensity of the sun to blind the driver.
    types:
    - uid: integer
- name: WeatherNotification
  kind: object
  properties:
  - name: type
    description: A type of notification generated to warn drivers of the onset of a hazard, or increase in intensity of a hazard.
    types:
    - uid: string
  - name: hazardIndex
    description: >-
      A severity/hazard index.
        * `0` - No hazard.
        * `1` - Be informed, be aware.
        * `2` - Pay attention, be prepared.
        * `3` - Take action.
        * `4` - Life threatening, emergency.
    types:
    - uid: HazardIndex
  - name: hazardCode
    description: 'A unique identifier (non-displayable) for each type of hazard: LightRain, ModerateRain, HeavyRain, LightMix, ModerateMix, HeavyMix, LightSnow, ModerateSnow, HeavySnow, LightIce, ModerateIce, HeavyIce, Hail, LargeHail, SunGlare, SunGlareHigh, Lightning, SevereLightning, WindModerate, WindHigh, WindExtreme, FloodWarning, FlashFloodWarning, TornadoWarning, TsunamiWarning, SevereThunderstormWarning.'
    types:
    - uid: string
  - name: shortPhrase
    description: A displayable short phrase describing the forecasted conditions and precipitation intensity/type.
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
- name: HazardIndex
  description: >-
    A severity/hazard index.
      * `0` - No hazard.
      * `1` - Be informed, be aware.
      * `2` - Pay attention, be prepared.
      * `3` - Take action.
      * `4` - Life threatening, emergency.
  kind: enum
  properties:
  - name: "0"
    types:
    - uid: Integer
  - name: "1"
    types:
    - uid: Integer
  - name: "2"
    types:
    - uid: Integer
  - name: "3"
    types:
    - uid: Integer
  - name: "4"
    types:
    - uid: Integer
- name: HazardDetail
  kind: object
  properties:
  - name: hazardIndex
    description: >-
      A severity/hazard index.
        * `0` - No hazard.
        * `1` - Be informed, be aware.
        * `2` - Pay attention, be prepared.
        * `3` - Take action.
        * `4` - Life threatening, emergency.
    types:
    - uid: HazardIndex
  - name: hazardCode
    description: 'A unique identifier (non-displayable) for each type of hazard: LightRain, ModerateRain, HeavyRain, LightMix, ModerateMix, HeavyMix, LightSnow, ModerateSnow, HeavySnow, LightIce, ModerateIce, HeavyIce, Hail, LargeHail, SunGlare, SunGlareHigh, Lightning, SevereLightning, WindModerate, WindHigh, WindExtreme, FloodWarning, FlashFloodWarning, TornadoWarning, TsunamiWarning, SevereThunderstormWarning.'
    types:
    - uid: string
  - name: shortPhrase
    description: A displayable short phrase describing the forecasted conditions and precipitation intensity/type.
    types:
    - uid: string
- name: UnitType
  description: Numeric ID value associated with the type of unit being displayed. Can be used for unit translation. Please refer to [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
  kind: enum
  properties:
  - name: "0"
    types:
    - uid: Integer
  - name: "1"
    types:
    - uid: Integer
  - name: "2"
    types:
    - uid: Integer
  - name: "3"
    types:
    - uid: Integer
  - name: "4"
    types:
    - uid: Integer
  - name: "5"
    types:
    - uid: Integer
  - name: "6"
    types:
    - uid: Integer
  - name: "7"
    types:
    - uid: Integer
  - name: "8"
    types:
    - uid: Integer
  - name: "9"
    types:
    - uid: Integer
  - name: "10"
    types:
    - uid: Integer
  - name: "11"
    types:
    - uid: Integer
  - name: "12"
    types:
    - uid: Integer
  - name: "13"
    types:
    - uid: Integer
  - name: "14"
    types:
    - uid: Integer
  - name: "15"
    types:
    - uid: Integer
  - name: "16"
    types:
    - uid: Integer
  - name: "17"
    types:
    - uid: Integer
  - name: "18"
    types:
    - uid: Integer
  - name: "19"
    types:
    - uid: Integer
  - name: "20"
    types:
    - uid: Integer
  - name: "21"
    types:
    - uid: Integer
  - name: "22"
    types:
    - uid: Integer
  - name: "31"
    types:
    - uid: Integer
- name: WindDirection
  description: Wind direction
  kind: object
  properties:
  - name: degrees
    description: Wind direction in Azimuth degrees,  starting at true North and continuing in clockwise direction. North is 0 degrees, east is 90 degrees, south is 180 degrees, west is 270 degrees. Possible values 0-359.
    types:
    - uid: integer
  - name: localizedDescription
    description: Direction abbreviation in the specified language.
    types:
    - uid: string
- name: WindSpeed
  description: Speed of wind in specified unit.
  kind: object
  properties:
  - name: value
    description: Rounded value of the speed.
    types:
    - uid: number
  - name: unit
    description: Type of unit for the speed value.
    types:
    - uid: string
  - name: unitType
    description: Numeric ID value associated with the type of unit being displayed. Can be used for unit translation. Please refer to [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
    types:
    - uid: UnitType
examples:
- name: Successfully retrieve detailed weather casts along a route described as a sequence of waypoints
  request:
    uri: GET https://atlas.microsoft.com/weather/route/json?api-version=1.0&query=38.907,-77.037,0:38.907,-77.009,10:38.926,-76.928,20:39.033,-76.852,30:39.168,-76.732,40:39.269,-76.634,50:39.287,-76.612,60
  responses:
  - statusCode: "200"
    body: >-
      {
        "summary": {
          "iconCode": 35,
          "hazards": {
            "maxHazardIndex": 0
          }
        },
        "waypoints": [
          {
            "iconCode": 38,
            "shortPhrase": "Mostly cloudy",
            "isDayTime": false,
            "cloudCover": 70,
            "temperature": {
              "value": 3.4,
              "unit": "C",
              "unitType": 17
            },
            "wind": {
              "direction": {
                "degrees": 142
              },
              "speed": {
                "value": 2,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "windGust": {
              "speed": {
                "value": 3,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "precipitation": {
              "dbz": 0,
              "type": "SNOW"
            },
            "lightningCount": 0,
            "sunGlare": {
              "calculatedVehicleHeading": 90,
              "glareIndex": 0
            },
            "hazards": {
              "maxHazardIndex": 0
            },
            "notifications": []
          },
          {
            "iconCode": 38,
            "shortPhrase": "Mostly cloudy",
            "isDayTime": false,
            "cloudCover": 65,
            "temperature": {
              "value": 3.4,
              "unit": "C",
              "unitType": 17
            },
            "wind": {
              "direction": {
                "degrees": 166
              },
              "speed": {
                "value": 1,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "windGust": {
              "speed": {
                "value": 2,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "precipitation": {
              "dbz": 0,
              "type": "SNOW"
            },
            "lightningCount": 0,
            "sunGlare": {
              "calculatedVehicleHeading": 77,
              "glareIndex": 0
            },
            "hazards": {
              "maxHazardIndex": 0
            },
            "notifications": []
          },
          {
            "iconCode": 35,
            "shortPhrase": "Partly cloudy",
            "isDayTime": false,
            "cloudCover": 43,
            "temperature": {
              "value": 3.2,
              "unit": "C",
              "unitType": 17
            },
            "wind": {
              "direction": {
                "degrees": 163
              },
              "speed": {
                "value": 2,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "windGust": {
              "speed": {
                "value": 2,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "precipitation": {
              "dbz": 0,
              "type": "SNOW"
            },
            "lightningCount": 0,
            "sunGlare": {
              "calculatedVehicleHeading": 44,
              "glareIndex": 0
            },
            "hazards": {
              "maxHazardIndex": 0
            },
            "notifications": []
          },
          {
            "iconCode": 35,
            "shortPhrase": "Partly cloudy",
            "isDayTime": false,
            "cloudCover": 34,
            "temperature": {
              "value": 1.6,
              "unit": "C",
              "unitType": 17
            },
            "wind": {
              "direction": {
                "degrees": 189
              },
              "speed": {
                "value": 2,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "windGust": {
              "speed": {
                "value": 4,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "precipitation": {
              "dbz": 0,
              "type": "SNOW"
            },
            "lightningCount": 0,
            "sunGlare": {
              "calculatedVehicleHeading": 32,
              "glareIndex": 0
            },
            "hazards": {
              "maxHazardIndex": 0
            },
            "notifications": []
          },
          {
            "iconCode": 38,
            "shortPhrase": "Mostly cloudy",
            "isDayTime": false,
            "cloudCover": 54,
            "temperature": {
              "value": 0.5,
              "unit": "C",
              "unitType": 17
            },
            "wind": {
              "direction": {
                "degrees": 202
              },
              "speed": {
                "value": 4,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "windGust": {
              "speed": {
                "value": 5,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "precipitation": {
              "dbz": 0,
              "type": "SNOW"
            },
            "lightningCount": 0,
            "sunGlare": {
              "calculatedVehicleHeading": 36,
              "glareIndex": 0
            },
            "hazards": {
              "maxHazardIndex": 0
            },
            "notifications": []
          },
          {
            "iconCode": 35,
            "shortPhrase": "Partly cloudy",
            "isDayTime": false,
            "cloudCover": 46,
            "temperature": {
              "value": 2.4,
              "unit": "C",
              "unitType": 17
            },
            "wind": {
              "direction": {
                "degrees": 222
              },
              "speed": {
                "value": 4,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "windGust": {
              "speed": {
                "value": 5,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "precipitation": {
              "dbz": 0,
              "type": "SNOW"
            },
            "lightningCount": 0,
            "sunGlare": {
              "calculatedVehicleHeading": 38,
              "glareIndex": 0
            },
            "hazards": {
              "maxHazardIndex": 0
            },
            "notifications": []
          },
          {
            "iconCode": 35,
            "shortPhrase": "Partly cloudy",
            "isDayTime": false,
            "cloudCover": 39,
            "temperature": {
              "value": 2.3,
              "unit": "C",
              "unitType": 17
            },
            "wind": {
              "direction": {
                "degrees": 231
              },
              "speed": {
                "value": 4,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "windGust": {
              "speed": {
                "value": 5,
                "unit": "km/h",
                "unitType": 7
              }
            },
            "precipitation": {
              "dbz": 0,
              "type": "SNOW"
            },
            "lightningCount": 0,
            "sunGlare": {
              "calculatedVehicleHeading": 43,
              "glareIndex": 0
            },
            "hazards": {
              "maxHazardIndex": 0
            },
            "notifications": []
          }
        ]
      }
security:
- name: AADToken
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/azure/active-directory/develop/v1-overview) Flows. When paired with [Azure role-based access](https://docs.microsoft.com/azure/role-based-access-control/overview) control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to. This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0 or v2.0](https://docs.microsoft.com/azure/active-directory/develop/azure-ad-endpoint-comparison) supports Work, School, and Guests but does not support Personal accounts."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: https://atlas.microsoft.com/.default
    description: https://atlas.microsoft.com/.default
- name: subscription-key
  type: apiKey
  description: >-
    This is a shared key that is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.

     For publicly exposed applications, our recommendation is to use server-to-server access of Azure Maps REST APIs where this key can be securely stored.
  in: query
- name: SAS Token
  type: apiKey
  description: >-
    This is a shared access signature token is created from the List SAS operation on the [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this token, any application is authorized to access with Azure role-based access controls and fine-grain control to the expiration, rate, and region(s) of use for the particular token. In other words, the SAS Token can be used to allow applications to control access in a more secured way than the shared key.

     For publicly exposed applications, our recommendation is to configure a specific list of allowed origins on the [Map account resource](https://aka.ms/amauth) to limit rendering abuse and regularly renew the SAS Token.
  in: header
metadata:
  description: "**Get Weather along route**\n   \n   \n **Applies to**: S1 pricing tier.\n\n Weather along a route API returns hyper local (one kilometer or less), up-to-the-minute "
errorCodes: []
