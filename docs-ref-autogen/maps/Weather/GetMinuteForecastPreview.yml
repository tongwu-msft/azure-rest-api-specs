### YamlMime:RESTOperation
uid: atlas.microsoft.com.maps.weather.getminuteforecastpreview
name: Get Minute Forecast Preview
service: Maps
groupName: Weather
apiVersion: "1.0"
summary: "**Get Minute Forecast**\n  \n  \n**Applies to**: S1 pricing tier.\n\n\nGet Minute Forecast service returns minute-by-minute forecasts for a given location for the next 120 minutes.  Users can request weather forecasts in the interval of 1, 5 and 15 minutes.  The response will include details such as the type of precipitation (including rain, snow, or a mixture of both), start time, and precipitation intensity value (dBZ)."
consumes: []
produces:
- application/json
paths:
- content: GET https://atlas.microsoft.com/weather/forecast/minute/json?api-version=1.0&query={query}
- content: GET https://atlas.microsoft.com/weather/forecast/minute/json?subscription-key={subscription-key}&api-version=1.0&query={query}&interval={interval}&language={language}
  isOptional: true
uriParameters:
- name: format
  in: path
  isRequired: true
  description: Desired format of the response. Only `json` format is supported.
  types:
  - uid: JsonFormat
- name: subscription-key
  in: query
  description: One of the Azure Maps keys provided from an Azure Map Account. Please refer to this [article](https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication) for details on how to manage authentication.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API. Current version is 1.0
  types:
  - uid: string
- name: query
  in: query
  isRequired: true
  description: Coordinates of the location for which minute forecast information is requested. The applicable query is specified as a comma separated string composed by latitude followed by longitude e.g. "47.641268,-122.125679".
  types:
  - uid: string
- name: interval
  in: query
  description: >-
    Specifies time interval in minutes for the returned weather forecast. Supported values are
      * `1` -  Retrieve forecast for 1-minute intervals. Returned by default.
      * `5` - Retrieve forecasts for 5-minute intervals.
      * `15` - Retrieve forecasts for 15-minute intervals.
  types:
  - uid: integer
- name: language
  in: query
  description: "Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive. When data in specified language is not available for a specific field, default language is used.  Default value is en-us. \n\nPlease refer to [Supported languages](https://docs.microsoft.com/azure/azure-maps/supported-languages) for details."
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: MinuteForecastResponse
- name: 400 Bad Request
  description: 'Bad request: one or more parameters were incorrectly specified or are mutually exclusive.'
  types:
  - uid: ErrorResponse
- name: 401 Unauthorized
  headers:
  - name: WWW-Authenticate
    value: string
  description: Access denied due to invalid subscription key or invalid Azure Active Directory bearer token.  Make sure to provide a valid key for an active Azure subscription and Maps resource.  Otherwise, verify the [WWW-Authenticate](https://tools.ietf.org/html/rfc6750#section-3.1) header for error code and description of the provided AAD bearer token.
  types:
  - uid: ErrorResponse
- name: 403 Forbidden
  description: Permission, capacity, or authentication issues.
  types:
  - uid: ErrorResponse
- name: 404 Not Found
  description: 'Not Found: the requested resource could not be found, but it may be available again in the future.'
  types:
  - uid: ErrorResponse
- name: 500 Internal Server Error
  description: An error occurred while processing the request. Please try again later.
  types:
  - uid: ErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: 'Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.    '
  types:
  - uid: string
definitions:
- name: JsonFormat
  description: Desired format of the response. Only `json` format is supported.
  kind: enum
  properties:
  - name: json
    description: '[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)'
    types:
    - uid: string
- name: MinuteForecastResponse
  kind: object
  properties:
  - name: summary
    description: Phrase summaries for the entire forecast period.
    types:
    - uid: MinuteForecastSummary
  - name: intervalSummaries
    description: Summary information for each interval in the forecast. The Summaries breaks down each potential interval where precipitation starts and stops.
    types:
    - uid: IntervalSummary
      isArray: true
  - name: intervals
    description: Forecast data for each interval in the forecast.
    types:
    - uid: Interval
      isArray: true
- name: ErrorResponse
  description: This response object is returned when an error occurs in the Maps API
  kind: object
  properties:
  - name: error
    description: This object is returned when an error occurs in the Maps API
    types:
    - uid: Error
- name: MinuteForecastSummary
  description: Phrase summaries for the entire forecast period.
  kind: object
  properties:
  - name: briefPhrase60
    description: Summary phrase for the next 60 minutes. Phrase length is approximately 60 characters.
    types:
    - uid: string
  - name: shortPhrase
    description: Short summary phrase for the next 120 minutes. Phrase length is approximately 25 characters.
    types:
    - uid: string
  - name: briefPhrase
    description: Summary phrase for the next 120 minutes. Phrase length is approximately 60 characters.
    types:
    - uid: string
  - name: longPhrase
    description: Long summary phrase for the next 120 minutes. Phrase length is 60+ characters.
    types:
    - uid: string
  - name: iconCode
    description: Numeric value representing an image that displays the `iconPhrase`. Please refer to [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
    types:
    - uid: integer
- name: IntervalSummary
  kind: object
  properties:
  - name: startMinute
    description: The first minute to which the summary applies.
    types:
    - uid: integer
  - name: endMinute
    description: The last minute to which the summary applies.
    types:
    - uid: integer
  - name: totalMinutes
    description: The number of minutes for which the summary applies.
    types:
    - uid: integer
  - name: shortPhrase
    description: Short summary phrase. Phrase length is approximately 25 characters.
    types:
    - uid: string
  - name: briefPhrase
    description: Brief summary phrase. Phrase length is approximately 60 characters.
    types:
    - uid: string
  - name: longPhrase
    description: Long summary phrase. Phrase length is 60+ characters.
    types:
    - uid: string
  - name: iconCode
    description: Numeric value representing an image that displays the `iconPhrase`. Please refer to [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
    types:
    - uid: integer
- name: Interval
  kind: object
  properties:
  - name: startTime
    description: The date and time for the start of the interval in ISO 8601 format, for example, 2019-10-27T19:39:57-08:00.
    types:
    - uid: string
  - name: minute
    description: The first minute for the interval.
    types:
    - uid: integer
  - name: dbz
    description: A unit that represents forecasted precipitation intensity.
    types:
    - uid: number
  - name: shortPhrase
    description: A short phrase describing precipitation condition for the interval.
    types:
    - uid: string
  - name: threshold
    description: Key that specifies the threshold value. Along with precipitationType, can be used to determine the simplifiedColor. If dbz is zero, not present in the response.
    types:
    - uid: string
  - name: color
    description: The full spectrum color that maps to the dBZ (decibel relative to Z). If dbz is zero, color is not present in the response.
    types:
    - uid: Color
  - name: simplifiedColor
    description: The band color that maps to the precipitation type and threshold. If dbz is zero, not present in the response.
    types:
    - uid: Color
  - name: precipitationType
    description: Specifies the type of precipitation ("rain" "snow" "ice" or "mix"). If dbz is zero, precipitationType is not present in the response.
    types:
    - uid: string
  - name: iconCode
    description: Numeric value representing an image that displays the `iconPhrase`. Please refer to [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
    types:
    - uid: integer
  - name: cloudCover
    description: Percent representing cloud cover.
    types:
    - uid: integer
- name: Error
  description: This object is returned when an error occurs in the Maps API
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The HTTP status code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: If available, a human readable description of the error.
    types:
    - uid: string
- name: Color
  kind: object
  properties:
  - name: red
    description: Red component of the RGB value.
    types:
    - uid: integer
  - name: green
    description: Green component of the RGB value.
    types:
    - uid: integer
  - name: blue
    description: Blue component of the RGB value
    types:
    - uid: integer
  - name: hex
    description: Hexadecimal color value.
    types:
    - uid: string
examples:
- name: MinuteForecast
  request:
    uri: GET https://atlas.microsoft.com/weather/forecast/minute/json?api-version=1.0&query=47.632346,-122.138874&interval=15
  responses:
  - statusCode: "200"
    body: >-
      {
        "summary": {
          "briefPhrase60": "Rain ending in 25 min",
          "shortPhrase": "Rain ending in 25 min",
          "briefPhrase": "Rain ending in 25 min",
          "longPhrase": "Rain ending in 25 min",
          "iconCode": 12
        },
        "intervalSummaries": [
          {
            "startMinute": 0,
            "endMinute": 24,
            "totalMinutes": 25,
            "shortPhrase": "Rain ending in %minute_value min",
            "briefPhrase": "Rain ending in %minute_value min",
            "longPhrase": "Rain ending in %minute_value min",
            "iconCode": 12
          },
          {
            "startMinute": 25,
            "endMinute": 119,
            "totalMinutes": 95,
            "shortPhrase": "No precip for %MINUTE_VALUE min",
            "briefPhrase": "No precipitation for at least %MINUTE_VALUE min",
            "longPhrase": "No precipitation for at least %MINUTE_VALUE min",
            "iconCode": 7
          }
        ],
        "intervals": [
          {
            "startTime": "2019-11-14T15:18:00-08:00",
            "minute": 0,
            "dbz": 23,
            "shortPhrase": "Light Rain",
            "threshold": "LIGHT",
            "color": {
              "red": 8,
              "green": 98,
              "blue": 2,
              "hex": "#086202"
            },
            "simplifiedColor": {
              "red": 35,
              "green": 190,
              "blue": 39,
              "hex": "#23BE27"
            },
            "precipitationType": "rain",
            "iconCode": 12,
            "cloudCover": 100
          },
          {
            "startTime": "2019-11-14T15:33:00-08:00",
            "minute": 15,
            "dbz": 18,
            "shortPhrase": "Light Rain",
            "threshold": "LIGHT",
            "color": {
              "red": 32,
              "green": 133,
              "blue": 9,
              "hex": "#208509"
            },
            "simplifiedColor": {
              "red": 35,
              "green": 190,
              "blue": 39,
              "hex": "#23BE27"
            },
            "precipitationType": "rain",
            "iconCode": 12,
            "cloudCover": 100
          },
          {
            "startTime": "2019-11-14T15:48:00-08:00",
            "minute": 30,
            "dbz": 0,
            "shortPhrase": "No Precipitation",
            "iconCode": 7,
            "cloudCover": 100
          },
          {
            "startTime": "2019-11-14T16:03:00-08:00",
            "minute": 45,
            "dbz": 0,
            "shortPhrase": "No Precipitation",
            "iconCode": 7,
            "cloudCover": 100
          },
          {
            "startTime": "2019-11-14T16:18:00-08:00",
            "minute": 60,
            "dbz": 0,
            "shortPhrase": "No Precipitation",
            "iconCode": 7,
            "cloudCover": 100
          },
          {
            "startTime": "2019-11-14T16:33:00-08:00",
            "minute": 75,
            "dbz": 0,
            "shortPhrase": "No Precipitation",
            "iconCode": 7,
            "cloudCover": 100
          },
          {
            "startTime": "2019-11-14T16:48:00-08:00",
            "minute": 90,
            "dbz": 0,
            "shortPhrase": "No Precipitation",
            "iconCode": 7,
            "cloudCover": 100
          },
          {
            "startTime": "2019-11-14T17:03:00-08:00",
            "minute": 105,
            "dbz": 0,
            "shortPhrase": "No Precipitation",
            "iconCode": 7,
            "cloudCover": 100
          }
        ]
      }
  - statusCode: "400"
    body: >-
      {
        "error": {
          "code": "400 BadRequest",
          "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
        }
      }
  - statusCode: "401"
    body: >-
      {
        "error": {
          "code": "401 Unauthorized",
          "message": "Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription."
        }
      }
  - statusCode: "403"
    body: >-
      {
        "error": {
          "code": "403 Forbidden",
          "message": "Permission, capacity, or authentication issues."
        }
      }
  - statusCode: "404"
    body: >-
      {
        "error": {
          "code": "404 NotFound",
          "message": "Not Found: the requested resource could not be found, but it may be available again in the future."
        }
      }
  - statusCode: "500"
    body: >-
      {
        "error": {
          "code": "500 InternalServerError",
          "message": "An error occurred while processing the request. Please try again later."
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes: []
- name: subscription-key
  type: apiKey
  description: This is a shared key which is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs. With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.  For publicly exposed applications our recommendation is to use server to server access of Azure Maps REST APIs where this key can be  securely stored.
  in: query
errorCodes: []
