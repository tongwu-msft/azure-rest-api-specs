### YamlMime:RESTOperation
uid: atlas.microsoft.com.maps.weather.getdailyhistoricalactuals
name: Get Daily Historical Actuals
service: Maps
groupName: Weather
apiVersion: "1.1"
summary: "**Get Daily Historical Actuals**\n  \n  \n**Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\n\nGet Daily Historical Actuals service returns climatology data such as past daily actual observed temperatures, precipitation, snowfall, snow depth and cooling/heating degree day information, for the day at a given coordinate location. The data is requested for a specified date range, up to 31 days in a single API request. Generally, historical data may be available as far back as the last 5 to 40+ years, depending on the location."
consumes: []
produces:
- application/json
paths:
- content: GET https://atlas.microsoft.com/weather/historical/actuals/daily/json?api-version=1.1&query={query}&startDate={startDate}&endDate={endDate}
- content: GET https://atlas.microsoft.com/weather/historical/actuals/daily/json?api-version=1.1&query={query}&startDate={startDate}&endDate={endDate}&unit={unit}
  isOptional: true
uriParameters:
- name: format
  in: path
  isRequired: true
  description: Desired format of the response. Only `json` format is supported.
  types:
  - uid: JsonFormat
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API.
  types:
  - uid: string
- name: query
  in: query
  isRequired: true
  description: The applicable query specified as a comma separated string composed by latitude followed by longitude e.g. "47.641268,-122.125679".
  types:
  - uid: array
- name: startDate
  in: query
  isRequired: true
  description: 'Start date in ISO 8601 format, for example, 2019-10-27. The date range supported is 1 to 31 calendar days, so be sure to specify a startDate and endDate that does not exceed a maximum of 31 days (i.e.: startDate=2012-01-01&endDate=2012-01-31).'
  types:
  - uid: string
  format: date
- name: endDate
  in: query
  isRequired: true
  description: 'End date in ISO 8601 format, for example, 2019-10-28. The date range supported is 1 to 31 calendar days, so be sure to specify a startDate and endDate that does not exceed a maximum of 31 days (i.e.: startDate=2012-01-01&endDate=2012-01-31).'
  types:
  - uid: string
  format: date
- name: unit
  in: query
  description: Specifies to return the data in either metric units or imperial units. Default value is metric.
  types:
  - uid: WeatherDataUnit
responses:
- name: 200 OK
  description: OK
  types:
  - uid: DailyHistoricalActualsResult
- name: Other Status Codes
  description: An unexpected error occurred.
  types:
  - uid: ErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
  types:
  - uid: string
definitions:
- name: JsonFormat
  description: Desired format of the response. Only `json` format is supported.
  kind: enum
  properties:
  - name: json
    description: '[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)'
    types:
    - uid: string
- name: WeatherDataUnit
  description: Specifies to return the data in either metric units or imperial units. Default value is metric.
  kind: enum
  properties:
  - name: metric
    description: Return data in metric units. Some example units of metric system are Celsius and kilometer.
    types:
    - uid: string
  - name: imperial
    description: Return data in imperial units. Some example units of imperial system are Fahrenheit and mile.
    types:
    - uid: string
- name: DailyHistoricalActualsResult
  kind: object
  properties:
  - name: results
    description: Historical actuals for each requested day.
    types:
    - uid: DailyHistoricalActuals
      isArray: true
  - name: nextLink
    description: The is the link to the next page of the features returned. If it's the last page, no this field.
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: DailyHistoricalActuals
  kind: object
  properties:
  - name: date
    description: Date and time of the current observation displayed in ISO 8601 format, for example, 2019-10-27T19:39:57-08:00.
    types:
    - uid: string
  - name: temperature
    description: Temperature values.
    types:
    - uid: WeatherUnitMaxMinAvg
  - name: degreeDaySummary
    description: Summary of heating or cooling degree day information. Degree days are measures of how cold or warm a location is. A degree day compares the mean (the average of the high and low) outdoor temperatures recorded for a location to a standard temperature of 65 degrees F/ 18 degree C.
    types:
    - uid: DegreeDaySummary
  - name: precipitation
    description: The amount of precipitation (liquid equivalent) that has fallen.
    types:
    - uid: WeatherUnit
  - name: snowfall
    description: The amount of snow that has fallen.
    types:
    - uid: WeatherUnit
  - name: snowDepth
    description: Snow depth.
    types:
    - uid: WeatherUnit
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: WeatherUnitMaxMinAvg
  description: Returned temperature values.
  kind: object
  properties:
  - name: maximum
    description: Maximum temperature for the time period.
    types:
    - uid: WeatherUnit
  - name: minimum
    description: Minimum temperature for the time period.
    types:
    - uid: WeatherUnit
  - name: average
    description: Average temperature for the time period.
    types:
    - uid: WeatherUnit
- name: DegreeDaySummary
  kind: object
  properties:
  - name: heating
    description: Number of degrees that the mean temperature is below 65 degrees F/ 18 degree C.
    types:
    - uid: WeatherUnit
  - name: cooling
    description: Number of degrees that the mean temperature is above 65 degrees F/ 18 degree C.
    types:
    - uid: WeatherUnit
- name: WeatherUnit
  description: Specific value of a given unit related to weather.
  kind: object
  properties:
  - name: value
    description: Rounded value.
    types:
    - uid: number
  - name: unit
    description: Type of unit for the returned value.
    types:
    - uid: string
  - name: unitType
    description: Numeric ID value associated with the type of unit being displayed. Can be used for unit translation. Please refer to [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
    types:
    - uid: UnitType
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
- name: UnitType
  description: Numeric ID value associated with the type of unit being displayed. Can be used for unit translation. Please refer to [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
  kind: enum
  properties:
  - name: "0"
    types:
    - uid: Integer
  - name: "1"
    types:
    - uid: Integer
  - name: "2"
    types:
    - uid: Integer
  - name: "3"
    types:
    - uid: Integer
  - name: "4"
    types:
    - uid: Integer
  - name: "5"
    types:
    - uid: Integer
  - name: "6"
    types:
    - uid: Integer
  - name: "7"
    types:
    - uid: Integer
  - name: "8"
    types:
    - uid: Integer
  - name: "9"
    types:
    - uid: Integer
  - name: "10"
    types:
    - uid: Integer
  - name: "11"
    types:
    - uid: Integer
  - name: "12"
    types:
    - uid: Integer
  - name: "13"
    types:
    - uid: Integer
  - name: "14"
    types:
    - uid: Integer
  - name: "15"
    types:
    - uid: Integer
  - name: "16"
    types:
    - uid: Integer
  - name: "17"
    types:
    - uid: Integer
  - name: "18"
    types:
    - uid: Integer
  - name: "19"
    types:
    - uid: Integer
  - name: "20"
    types:
    - uid: Integer
  - name: "21"
    types:
    - uid: Integer
  - name: "22"
    types:
    - uid: Integer
  - name: "31"
    types:
    - uid: Integer
examples:
- name: Successful Daily Historical Actuals Request
  request:
    uri: GET https://atlas.microsoft.com/weather/historical/actuals/daily/json?api-version=1.1&query=40.78,-77.89&startDate=2012-01-20&endDate=2012-01-22
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://atlas.microsoft.com/weather/historical/actuals/daily/json?api-version=1.1&query=40.78,-77.89&startDate=2012-01-20&endDate=2012-01-22
      ```

  responses:
  - statusCode: "200"
    body: >-
      {
        "results": [
          {
            "date": "2012-01-20T00:00:00-04:00",
            "temperature": {
              "maximum": {
                "value": -6.1,
                "unit": "C",
                "unitType": 17
              },
              "minimum": {
                "value": -11.1,
                "unit": "C",
                "unitType": 17
              },
              "average": {
                "value": -8.6,
                "unit": "C",
                "unitType": 17
              }
            },
            "degreeDaySummary": {
              "heating": {
                "value": 27,
                "unit": "C",
                "unitType": 17
              },
              "cooling": {
                "value": 0,
                "unit": "C",
                "unitType": 17
              }
            },
            "precipitation": {
              "value": 10.9,
              "unit": "mm",
              "unitType": 3
            },
            "snowfall": {
              "value": 12.19,
              "unit": "cm",
              "unitType": 4
            },
            "snowDepth": {
              "value": 15.2,
              "unit": "cm",
              "unitType": 4
            }
          },
          {
            "date": "2012-01-21T00:00:00-04:00",
            "temperature": {
              "maximum": {
                "value": -1.7,
                "unit": "C",
                "unitType": 17
              },
              "minimum": {
                "value": -8.9,
                "unit": "C",
                "unitType": 17
              },
              "average": {
                "value": -5.3,
                "unit": "C",
                "unitType": 17
              }
            },
            "degreeDaySummary": {
              "heating": {
                "value": 24,
                "unit": "C",
                "unitType": 17
              },
              "cooling": {
                "value": 0,
                "unit": "C",
                "unitType": 17
              }
            },
            "precipitation": {
              "value": 0,
              "unit": "mm",
              "unitType": 3
            },
            "snowfall": {
              "value": 0.51,
              "unit": "cm",
              "unitType": 4
            },
            "snowDepth": {
              "value": 12.7,
              "unit": "cm",
              "unitType": 4
            }
          },
          {
            "date": "2012-01-22T00:00:00-04:00",
            "temperature": {
              "maximum": {
                "value": 0,
                "unit": "C",
                "unitType": 17
              },
              "minimum": {
                "value": -7.2,
                "unit": "C",
                "unitType": 17
              },
              "average": {
                "value": -3.6,
                "unit": "C",
                "unitType": 17
              }
            },
            "degreeDaySummary": {
              "heating": {
                "value": 22,
                "unit": "C",
                "unitType": 17
              },
              "cooling": {
                "value": 0,
                "unit": "C",
                "unitType": 17
              }
            },
            "precipitation": {
              "value": 0,
              "unit": "mm",
              "unitType": 3
            },
            "snowfall": {
              "value": 0,
              "unit": "cm",
              "unitType": 4
            },
            "snowDepth": {
              "value": 10.2,
              "unit": "cm",
              "unitType": 4
            }
          }
        ]
      }
security:
- name: AADToken
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/azure/active-directory/develop/v1-overview) Flows. When paired with [Azure role-based access](https://docs.microsoft.com/azure/role-based-access-control/overview) control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to. This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0 or v2.0](https://docs.microsoft.com/azure/active-directory/develop/azure-ad-endpoint-comparison) supports Work, School, and Guests but does not support Personal accounts."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: https://atlas.microsoft.com/.default
    description: https://atlas.microsoft.com/.default
- name: subscription-key
  type: apiKey
  description: >-
    This is a shared key that is provisioned when you [Create an Azure Maps account](https://docs.microsoft.com/azure/azure-maps/quick-demo-map-app#create-an-azure-maps-account) in the Azure portal or using PowerShell, CLI, Azure SDKs, or REST API.

     With this key, any application can access all REST API. In other words, this key can be used as a master key in the account that they are issued in.

     For publicly exposed applications, our recommendation is to use the [confidential client applications](https://docs.microsoft.com/azure/azure-maps/authentication-best-practices#confidential-client-applications) approach to access Azure Maps REST APIs so your key can be securely stored.
  in: query
- name: SAS Token
  type: apiKey
  description: >-
    This is a shared access signature token is created from the List SAS operation on the [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this token, any application is authorized to access with Azure role-based access controls and fine-grain control to the expiration, rate, and region(s) of use for the particular token. In other words, the SAS Token can be used to allow applications to control access in a more secured way than the shared key.

     For publicly exposed applications, our recommendation is to configure a specific list of allowed origins on the [Map account resource](https://aka.ms/amauth) to limit rendering abuse and regularly renew the SAS Token.
  in: header
metadata:
  description: >-
    Get Daily Historical Actuals

    Applies to: see pricing tiers.

    Get Daily Historical Actuals service returns climatology data such as past daily actual observed tem
errorCodes: []
