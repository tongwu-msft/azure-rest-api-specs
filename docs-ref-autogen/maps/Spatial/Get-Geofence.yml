### YamlMime:RESTOperation
uid: maps.spatial.getgeofence
name: Get Geofence
service: Maps
groupName: Spatial
apiVersion: 2022-08-01
summary: "**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\nThe Geofence Get API allows you to retrieve the proximity of a coordinate to a \ngeofence that has been uploaded to the Data service. You can use the \n[Data Upload API](https://docs.microsoft.com/rest/api/maps/data/uploadPreview) to upload \na geofence or set of fences. See [Geofencing GeoJSON data](https://docs.microsoft.com/azure/azure-maps/geofence-geojson) \nfor more details on the geofence data format. To query the proximity of a coordinate, you supply the location of the object you are tracking as well\nas the ID for the fence or set of fences, and the response will contain information about\nthe distance from the outer edge of the geofence. A negative value signifies that the \ncoordinate is inside of the fence while a positive value means that it is outside of the\nfence.<br><br>This API can be used for a variety of scenarios that include things like asset \ntracking, fleet management, or setting up alerts for moving objects.\n\nThe API supports [integration with Event Grid](https://docs.microsoft.com/azure/azure-maps/azure-maps-event-grid-integration). The isAsync parameter is used to enable integration with Event Grid (disabled by default).\nTo test this API, you can upload the sample data from Post Geofence API examples(Request Body) via Data Upload API and replace the [udid] from the sample request below with the udid returned by Data Upload API.\n\n\n### Geofencing InnerError code\n\nIn geofencing response error contract, `innererror` is  an object containing service specific information about the error. `code` is a property in `innererror` which can map to a specific geofencing error type. The table belows shows the code mapping between all the known client error type to the corresponding geofencing error `message`.\n\ninnererror.code | error.message\n---------------------------- | -------------------------------------- \nNullDeviceId  | Device Id should not be null.\nNullUdid	  | Udid should not be null.\nUdidWrongFormat| Udid should be acquired from user data ingestion API.\nInvalidUserTime| Usertime is invalid.\nInvalidSearchBuffer| Searchbuffer is invalid.\nInvalidSearchRange| The value range of searchbuffer should be from 0 to 500 meters.\nInvalidLatLon| Lat and/or lon parameters are invalid.\nInvalidIsAsyncValue| The IsAsync parameter is invalid.\nInvalidModeValue| The mode parameter invalid.\nInvalidJson| Geofencing data is not a valid json file.\nNotSupportedGeoJson| Geofencing data can't be read as a Feature or FeatureCollections.\nInvalidGeoJson| Geofencing data is invalid.\nNoUserDataWithAccountOrSubscription| Can't find user geofencing data with provided account-id and/or subscription-id.\nNoUserDataWithUdid|	Can't find user geofencing data with provided udid."
consumes: []
produces:
- application/json
paths:
- content: GET https://{geography}.atlas.microsoft.com/spatial/geofence/json?api-version=2022-08-01&deviceId={deviceId}&udid={udid}&lat={lat}&lon={lon}
- content: GET https://{geography}.atlas.microsoft.com/spatial/geofence/json?api-version=2022-08-01&deviceId={deviceId}&udid={udid}&lat={lat}&lon={lon}&z={z}&userTime={userTime}&searchBuffer={searchBuffer}&isAsync={isAsync}&mode={mode}
  isOptional: true
uriParameters:
- name: geography
  in: path
  isRequired: true
  description: Location of the Azure Maps Account. Valid values are us (East US, West Central US, West US 2) and eu (North Europe, West Europe). This parameter is required when a `udid` is supplied in the request. For example, if the Azure Maps Account is located in East US, only requests to us geography will be accepted.
  types:
  - uid: string
- name: format
  in: path
  isRequired: true
  description: Desired format of the response. Only `json` format is supported.
  types:
  - uid: JsonFormat
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API.
  types:
  - uid: string
- name: deviceId
  in: query
  isRequired: true
  description: ID of the device
  types:
  - uid: string
- name: udid
  in: query
  isRequired: true
  description: The unique id returned from [Data Upload API](https://docs.microsoft.com/rest/api/maps/data/uploadPreview) after uploading a valid GeoJSON FeatureCollection object.  Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.3) for details. All the feature's properties should contain `geometryId`, which is used for identifying the geometry and is case-sensitive.
  types:
  - uid: string
- name: lat
  in: query
  isRequired: true
  description: 'The latitude of the location being passed.  Example: 48.36.'
  types:
  - uid: number
- name: lon
  in: query
  isRequired: true
  description: 'The longitude of the location being passed.  Example: -124.63.'
  types:
  - uid: number
- name: z
  in: query
  description: 'The sea level in meter of the location being passed. If this parameter is presented, 2D extrusion is used. Example: 200.'
  types:
  - uid: number
- name: userTime
  in: query
  description: The user request time. If not presented in the request, the default value is DateTime.Now.
  types:
  - uid: string
  format: date-time
- name: searchBuffer
  in: query
  description: The radius of the buffer around the geofence in meters that defines how far to search inside and outside the border of the fence against the coordinate that was provided when calculating the result.  The minimum value is 0, and the maximum is 500.  The default value is 50.
  types:
  - uid: number
- name: isAsync
  in: query
  description: If true, the request will use async event mechanism; if false, the request will be synchronized and do not trigger any event. The default value is false.
  types:
  - uid: boolean
- name: mode
  in: query
  description: Mode of the geofencing async event mechanism.
  types:
  - uid: GeofenceMode
responses:
- name: 200 OK
  headers:
  - name: X-Correlation-id
    value: string
  description: OK The X-Correlation-id header value is present in an async call's response and the Event Grid event data. It helps correlate the async callâ€™s response with the corresponding Event Grid event.
  types:
  - uid: Geofence
- name: Other Status Codes
  description: An unexpected error occurred.
  types:
  - uid: ErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
  types:
  - uid: string
definitions:
- name: JsonFormat
  description: Desired format of the response. Only `json` format is supported.
  kind: enum
  properties:
  - name: json
    description: '[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)'
    types:
    - uid: string
- name: GeofenceMode
  description: Mode of the geofencing async event mechanism.
  kind: enum
  properties:
  - name: All
    description: Publish all the query results to Azure Maps account event subscription.
    types:
    - uid: string
  - name: EnterAndExit
    description: Only publish result when user location is considered as crossing geofencing boarder.
    types:
    - uid: string
- name: Geofence
  description: This object is returned from a geofence proximity call.
  kind: object
  properties:
  - name: geometries
    isReadyOnly: true
    description: Lists the fence geometries that contain the coordinate position or overlap the searchBuffer around the position.
    types:
    - uid: GeofenceGeometry
      isArray: true
  - name: expiredGeofenceGeometryId
    isReadyOnly: true
    description: Lists of the geometry ID of the geofence which is expired relative to the user time in the request.
    types:
    - uid: string
      isArray: true
  - name: invalidPeriodGeofenceGeometryId
    isReadyOnly: true
    description: Lists of the geometry ID of the geofence which is in invalid period relative to the user time in the request.
    types:
    - uid: string
      isArray: true
  - name: isEventPublished
    isReadyOnly: true
    description: True if at least one event is published to the Azure Maps event subscriber, false if no event is published to the Azure Maps event subscriber. This will only be presented in response when 'isAsync' query parameter is set to true.
    types:
    - uid: boolean
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: GeofenceGeometry
  description: The geofencing geometry.
  kind: object
  properties:
  - name: deviceId
    isReadyOnly: true
    description: ID of the device.
    types:
    - uid: string
  - name: udId
    isReadyOnly: true
    description: The unique id returned from [Data Upload API](https://docs.microsoft.com/rest/api/maps/data/uploadPreview) after uploading a valid GeoJSON FeatureCollection object. Please refer to  [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.3) for details. All the feature's properties should  contain `geometryId`, which is used for identifying the geometry and is case-sensitive.
    types:
    - uid: string
  - name: geometryId
    isReadyOnly: true
    description: The unique id identifies a geometry.
    types:
    - uid: string
  - name: distance
    isReadyOnly: true
    description: Distance from the coordinate to the closest border of the geofence (in meters except when special values -999/999 are used). Positive means the  coordinate is outside of the geofence. If the coordinate is outside of the geofence, but more than the value of searchBuffer away from the closest geofence border, then the value is 999. Negative means the coordinate is inside of the geofence. If the coordinate is inside the polygon, but more than the value of searchBuffer away from the closest geofencing border, then the value is -999. A value of 999 means that there is great confidence the coordinate is well outside the geofence. A value of -999 means that there is great confidence the coordinate is well within the geofence.
    types:
    - uid: number
  - name: nearestLat
    isReadyOnly: true
    description: Latitude of the nearest point of the geometry.
    types:
    - uid: number
  - name: nearestLon
    isReadyOnly: true
    description: Longitude of the nearest point of the geometry.
    types:
    - uid: number
  - name: nearestZ
    isReadyOnly: true
    description: Sea level in meter of the nearest point on the 2D extrusion geometry. This will only be presented in response when value is provided for 'zInMeter' in the request.
    types:
    - uid: number
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: GetGeofence
  request:
    uri: GET https://us.atlas.microsoft.com/spatial/geofence/json?api-version=2022-08-01&deviceId=unique_device_name_under_account&udid=f6495f62-94f8-0ec2-c252-45626f82fcb2&lat=48.36&lon=-124.63&userTime=2022-08-21T17:32:28Z&searchBuffer=50&isAsync=True&mode=EnterAndExit
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://us.atlas.microsoft.com/spatial/geofence/json?api-version=2022-08-01&deviceId=unique_device_name_under_account&udid=f6495f62-94f8-0ec2-c252-45626f82fcb2&lat=48.36&lon=-124.63&userTime=2022-08-21T17:32:28Z&searchBuffer=50&isAsync=True&mode=EnterAndExit
      ```

  responses:
  - statusCode: "200"
    body: >-
      {
        "geometries": [
          {
            "deviceId": "unique_device_name_under_account",
            "udId": "f6495f62-94f8-0ec2-c252-45626f82fcb2",
            "geometryId": "2",
            "distance": 999,
            "nearestLat": 47.621954,
            "nearestLon": -122.131841
          },
          {
            "deviceId": "unique_device_name_under_account",
            "udId": "f6495f62-94f8-0ec2-c252-45626f82fcb2",
            "geometryId": "1",
            "distance": -999,
            "nearestLat": 47.609833,
            "nearestLon": -122.148274
          }
        ],
        "expiredGeofenceGeometryId": [
          "5"
        ],
        "invalidPeriodGeofenceGeometryId": [
          "3",
          "4"
        ],
        "isEventPublished": true
      }
security:
- name: AADToken
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/azure/active-directory/develop/v1-overview) Flows. When paired with [Azure role-based access](https://docs.microsoft.com/azure/role-based-access-control/overview) control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to. This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0 or v2.0](https://docs.microsoft.com/azure/active-directory/develop/azure-ad-endpoint-comparison) supports Work, School, and Guests but does not support Personal accounts."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: https://atlas.microsoft.com/.default
    description: https://atlas.microsoft.com/.default
- name: subscription-key
  type: apiKey
  description: >-
    This is a shared key that is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.

     For publicly exposed applications, our recommendation is to use server-to-server access of Azure Maps REST APIs where this key can be securely stored.
  in: header
- name: SAS Token
  type: apiKey
  description: >-
    This is a shared access signature token is created from the List SAS operation on the [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this token, any application is authorized to access with Azure role-based access controls and fine-grain control to the expiration, rate, and region(s) of use for the particular token. In other words, the SAS Token can be used to allow applications to control access in a more secured way than the shared key.

     For publicly exposed applications, our recommendation is to configure a specific list of allowed origins on the [Map account resource](https://aka.ms/amauth) to limit rendering abuse and regularly renew the SAS Token.
  in: header
metadata:
  description: >-
    Applies to: see pricing tiers.

    The Geofence Get API allows you to retrieve the proximity of a coordinate to a

    geofence that has been uploaded to the Data servic
errorCodes: []
