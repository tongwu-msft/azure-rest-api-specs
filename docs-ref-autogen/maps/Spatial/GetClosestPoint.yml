### YamlMime:RESTOperation
uid: atlas.microsoft.com.maps.spatial.getclosestpoint
name: Get Closest Point
service: Maps
groupName: Spatial
apiVersion: "1.0"
summary: "**Applies to**: S1 pricing tier.\n\nThis API returns the closest point between a base point and a given set of points in the user uploaded data set identified by udid. The set of target points is provided by a GeoJSON file which is uploaded via [Data Upload API](https://docs.microsoft.com/en-us/rest/api/maps/data/uploadPreview) and referenced by a unique udid. The GeoJSON file may only contain a collection of Point geometry. MultiPoint or other geometries will be ignored if provided. The maximum number of points accepted is 100,000. The algorithm does not take into account routing or traffic. Information returned includes closest point latitude, longitude, and distance in meters from the closest point.\n\nTo test this API, you can upload the sample data from [Post Closest Point API](https://docs.microsoft.com/en-us/rest/api/maps/spatial/postclosestpoint#examples) examples(Request Body) via [Data Upload API](https://docs.microsoft.com/en-us/rest/api/maps/data/uploadPreview) and replace the [udid] from the [sample request below](https://docs.microsoft.com/en-us/rest/api/maps/spatial/getclosestpoint#examples) with the udid returned by Data Upload API. "
consumes: []
produces:
- application/json
paths:
- content: GET https://atlas.microsoft.com/spatial/closestPoint/json?api-version=1.0&udid={udid}&lat={lat}&lon={lon}
- content: GET https://atlas.microsoft.com/spatial/closestPoint/json?subscription-key={subscription-key}&api-version=1.0&udid={udid}&lat={lat}&lon={lon}&numberOfClosestPoints={numberOfClosestPoints}
  isOptional: true
uriParameters:
- name: format
  in: path
  isRequired: true
  description: Desired format of the response. Only `json` format is supported.
  types:
  - uid: JsonFormat
- name: subscription-key
  in: query
  description: One of the Azure Maps keys provided from an Azure Map Account. Please refer to this [article](https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication) for details on how to manage authentication.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API. Current version is 1.0
  types:
  - uid: string
- name: udid
  in: query
  isRequired: true
  description: The unique id returned from [Data Upload API](https://docs.microsoft.com/en-us/rest/api/maps/data/uploadPreview) after uploading a valid GeoJSON FeatureCollection object.  Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.3) for details. All the feature's properties should contain `geometryId`, which is used for identifying the geometry and is case-sensitive.
  types:
  - uid: string
- name: lat
  in: query
  isRequired: true
  description: 'The base point latitude of the location being passed.  Example: 47.622942.'
  types:
  - uid: number
- name: lon
  in: query
  isRequired: true
  description: 'The base point longitude of the location being passed.  Example: -122.316456.'
  types:
  - uid: number
- name: numberOfClosestPoints
  in: query
  description: 'The number of closest points expected from response. Default: 1, minimum: 1 and maximum: 50'
  types:
  - uid: integer
responses:
- name: 200 OK
  description: OK
  types:
  - uid: GetClosestPointResponse
- name: 400 Bad Request
  description: 'Bad request: one or more parameters were incorrectly specified or are mutually exclusive.'
  types:
  - uid: ErrorResponse
- name: 401 Unauthorized
  headers:
  - name: WWW-Authenticate
    value: string
  description: Access denied due to invalid subscription key or invalid Azure Active Directory bearer token.  Make sure to provide a valid key for an active Azure subscription and Maps resource.  Otherwise, verify the [WWW-Authenticate](https://tools.ietf.org/html/rfc6750#section-3.1) header for error code and description of the provided AAD bearer token.
  types:
  - uid: ErrorResponse
- name: 403 Forbidden
  description: Permission, capacity, or authentication issues.
  types:
  - uid: ErrorResponse
- name: 404 Not Found
  description: 'Not Found: the requested resource could not be found, but it may be available again in the future.'
  types:
  - uid: ErrorResponse
- name: 500 Internal Server Error
  description: An error occurred while processing the request. Please try again later.
  types:
  - uid: ErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
  types:
  - uid: string
definitions:
- name: JsonFormat
  description: Desired format of the response. Only `json` format is supported.
  kind: enum
  properties:
  - name: json
    description: '[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)'
    types:
    - uid: string
- name: GetClosestPointResponse
  description: This object is returned from a successful Get Spatial Closest Point call
  kind: object
  properties:
  - name: summary
    isReadyOnly: true
    description: Get Closest Point Summary object
    types:
    - uid: GetClosestPointSummary
  - name: result
    description: Closest Point Result Array
    types:
    - uid: ClosestPointResultEntry
      isArray: true
- name: ErrorResponse
  description: This response object is returned when an error occurs in the Maps API
  kind: object
  properties:
  - name: error
    description: This object is returned when an error occurs in the Maps API
    types:
    - uid: Error
- name: GetClosestPointSummary
  description: Get Closest Point Summary object
  kind: object
  properties:
  - name: sourcePoint
    description: A location represented as a latitude and longitude
    types:
    - uid: SpatialCoordinate
  - name: udid
    isReadyOnly: true
    description: A unique data id (udid) for the uploaded content
    types:
    - uid: string
  - name: information
    isReadyOnly: true
    description: Processing information
    types:
    - uid: string
- name: ClosestPointResultEntry
  description: Closest Point Result Entry Object
  kind: object
  properties:
  - name: distanceInMeters
    isReadyOnly: true
    description: The distance in meters from the source point to the closest point
    types:
    - uid: number
  - name: position
    description: A location represented as a latitude and longitude
    types:
    - uid: SpatialCoordinate
  - name: geometryId
    isReadyOnly: true
    description: The unique id identifies a geometry
    types:
    - uid: string
- name: Error
  description: This object is returned when an error occurs in the Maps API
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The HTTP status code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: If available, a human readable description of the error.
    types:
    - uid: string
- name: SpatialCoordinate
  description: A location represented as a latitude and longitude
  kind: object
  properties:
  - name: lat
    isReadyOnly: true
    description: Latitude property
    types:
    - uid: number
  - name: lon
    isReadyOnly: true
    description: Longitude property
    types:
    - uid: number
examples:
- name: GetClosestPoint
  request:
    uri: GET https://atlas.microsoft.com/spatial/closestPoint/json?subscription-key=[subscription-key]&api-version=1.0&udid=[udid]&lat=47.622942&lon=-122.316456
  responses:
  - statusCode: "200"
    body: >-
      {
        "summary": {
          "sourcePoint": {
            "lat": 47.622942,
            "lon": -122.316456
          },
          "udid": "[udid from request]",
          "information": "10 points processed in user data"
        },
        "result": [
          {
            "distanceInMeters": 1587492.66,
            "position": {
              "lat": 40.516153406773952,
              "lon": -105.02860293715861
            },
            "geometryId": "1001"
          }
        ]
      }
  - statusCode: "400"
    body: >-
      {
        "error": {
          "code": "ClientParams",
          "message": "One or more parameters are missing.",
          "innererror": {
            "code": "MissingQueryParameter",
            "message": "Input parameter lon is missing."
          }
        }
      }
  - statusCode: "401"
    body: >-
      {
        "error": {
          "code": "401 Unauthorized",
          "message": "Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription."
        }
      }
  - statusCode: "403"
    body: >-
      {
        "error": {
          "code": "403 Forbidden",
          "message": "Permission, capacity, or authentication issues."
        }
      }
  - statusCode: "404"
    body: >-
      {
        "error": {
          "code": "404 NotFound",
          "message": "Not Found: the requested resource could not be found, but it may be available again in the future."
        }
      }
  - statusCode: "500"
    body: >-
      {
        "error": {
          "code": "500 InternalServerError",
          "message": "An error occurred while processing the request. Please try again later."
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes: []
- name: subscription-key
  type: apiKey
  description: This is a shared key which is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs. With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.  For publicly exposed applications our recommendation is to use server to server access of Azure Maps REST APIs where this key can be  securely stored.
  in: query
errorCodes: []
