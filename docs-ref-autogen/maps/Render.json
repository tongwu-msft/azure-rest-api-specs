{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Azure Maps Render Service",
    "description": "Azure Maps Render REST APIs"
  },
  "host": "atlas.microsoft.com",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported.",
      "scopes": {
        "user_impersonation": "Impersonates a user's Azure Active Directory account."
      }
    },
    "apiKeyQuery": {
      "type": "apiKey",
      "description": "This is a shared key which is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs. With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.  For publicly exposed applications our recommendation is to use server to server access of Azure Maps REST APIs where this key can be  securely stored.",
      "name": "subscription-key",
      "in": "query"
    }
  },
  "security": [
    {
      "azure_auth": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "responses": {
    "400": {
      "description": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "401": {
      "description": "Access denied due to invalid subscription key or invalid Azure Active Directory bearer token.  Make sure to provide a valid key for an active Azure subscription and Maps resource.  Otherwise, verify the [WWW-Authenticate](https://tools.ietf.org/html/rfc6750#section-3.1) header for error code and description of the provided AAD bearer token.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      },
      "headers": {
        "WWW-Authenticate": {
          "type": "string",
          "description": "Bearer realm=\"https://atlas.microsoft.com/\", error=\"invalid_token\", error_description=\"The access token expired\""
        }
      }
    },
    "403": {
      "description": "Permission, capacity, or authentication issues.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "404": {
      "description": "Not Found: the requested resource could not be found, but it may be available again in the future.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "500": {
      "description": "An error occurred while processing the request. Please try again later.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    }
  },
  "parameters": {
    "ClientId": {
      "name": "x-ms-client-id",
      "description": "Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.    ",
      "type": "string",
      "in": "header",
      "required": false,
      "x-ms-parameter-location": "client"
    },
    "SubscriptionKey": {
      "name": "subscription-key",
      "description": "One of the Azure Maps keys provided from an Azure Map Account. Please refer to this [article](https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication) for details on how to manage authentication.",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "client"
    },
    "ApiVersion": {
      "name": "api-version",
      "description": "Version number of Azure Maps API. Current version is 1.0",
      "type": "string",
      "in": "query",
      "required": true,
      "default": "1.0",
      "x-ms-parameter-location": "client"
    },
    "RasterTileFormat": {
      "name": "format",
      "description": "Desired format of the response. Possible value: png.",
      "type": "string",
      "in": "path",
      "required": true,
      "enum": [
        "png"
      ],
      "x-ms-enum": {
        "name": "RasterTileFormat",
        "modelAsString": false,
        "values": [
          {
            "value": "png",
            "description": "An image in the png format. Supports zoom levels 0 through 18."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "Language": {
      "name": "language",
      "in": "query",
      "description": "Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive. When data in specified language is not available for a specific field, default language is used.\n\nPlease refer to [Supported Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages) for details.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "TileFormat": {
      "name": "format",
      "description": "Desired format of the response. Possible values are png & pbf.",
      "type": "string",
      "in": "path",
      "required": true,
      "enum": [
        "png",
        "pbf"
      ],
      "x-ms-enum": {
        "name": "TileFormat",
        "modelAsString": false,
        "values": [
          {
            "value": "png",
            "description": "An image in the png format. Supports zoom levels 0 through 18."
          },
          {
            "value": "pbf",
            "description": "Vector graphic in the pbf format. Supports zoom levels 0 through 22."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "xTileIndex": {
      "name": "x",
      "x-ms-client-name": "xTileIndex",
      "in": "query",
      "description": "X coordinate of the tile on zoom grid. Value must be in the range [0, 2<sup>`zoom`</sup> -1].\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "yTileIndex": {
      "name": "y",
      "x-ms-client-name": "yTileIndex",
      "in": "query",
      "description": "Y coordinate of the tile on zoom grid. Value must be in the range [0, 2<sup>`zoom`</sup> -1].\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "TextFormat": {
      "name": "format",
      "description": "Desired format of the response. Value can be either _json_ or _xml_.",
      "type": "string",
      "in": "path",
      "required": true,
      "enum": [
        "json",
        "xml"
      ],
      "x-ms-enum": {
        "name": "TextFormat",
        "modelAsString": false,
        "values": [
          {
            "value": "json",
            "description": "[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)"
          },
          {
            "value": "xml",
            "description": "[The Extensible Markup Language](https://www.w3.org/TR/xml/)"
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "RasterZoom": {
      "name": "zoom",
      "in": "query",
      "description": "Zoom level for the desired tile. Zoom value must be in the range: 0-18 (inclusive).\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "VectorZoom": {
      "name": "zoom",
      "in": "query",
      "description": "Zoom level for the desired tile. Zoom value must be in the range: 0-20 (inclusive).\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "ImageryRasterZoom": {
      "name": "zoom",
      "in": "query",
      "description": "Zoom level for the desired tile. Zoom value must be in the range: 1-19 (inclusive).\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "RasterVectorZoom": {
      "name": "zoom",
      "in": "query",
      "description": "Zoom level for the desired tile. For _raster_ tiles, value must be in the range: 0-18 (inclusive). For _vector_ tiles, value must be in the range: 0-20 (inclusive).\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "RasterVectorNaturalEarthZoom": {
      "name": "zoom",
      "in": "query",
      "description": "Zoom level for the desired tile. For _raster_ tiles, value must be in the range: 0-18 (inclusive). Terra raster tiles, values must be in the range 0-6 (inclusive). For _vector_ tiles, value must be in the range: 0-22 (inclusive).\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "Text": {
      "name": "text",
      "in": "query",
      "description": "Yes/no value to exclude textual data from response. Only images and country names will be in response.",
      "required": false,
      "type": "string",
      "enum": [
        "yes",
        "no"
      ],
      "default": "yes",
      "x-ms-parameter-location": "method"
    },
    "View": {
      "name": "view",
      "in": "query",
      "description": "The View parameter specifies which set of geopolitically disputed content is returned via Azure Maps services, including  borders and labels displayed on the map. The View parameter (also referred to as “user region parameter”) will show the  correct maps for that country/region. By default, the View parameter is set to “Unified” even if you haven’t defined it in  the request. It is your responsibility to determine the location of your users, and then set the View parameter correctly  for that location. Alternatively, you have the option to set ‘View=Auto’, which will return the map data based on the IP  address of the request. The View parameter in Azure Maps must be used in compliance with applicable laws, including those  regarding mapping, of the country where maps, images and other data and third party content that you are authorized to  access via Azure Maps is made available. Example: view=IN.\n\nPlease refer to [Supported Views](https://aka.ms/AzureMapsLocalizationViews) for details and to see the available Views.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "paths": {},
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "description": "This response object is returned when an error occurs in the Maps API",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "This object is returned when an error occurs in the Maps API",
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "The HTTP status code."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "If available, a human readable description of the error."
        }
      }
    },
    "CopyrightBoundingResult": {
      "description": "This object is returned from a successful Copyright Bounding call",
      "type": "object",
      "properties": {
        "formatVersion": {
          "description": "Format Version property",
          "type": "string",
          "readOnly": true
        },
        "generalCopyrights": {
          "description": "General Copyrights array",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "readOnly": true
          }
        },
        "regions": {
          "description": "Regions array",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      }
    },
    "Region": {
      "type": "object",
      "properties": {
        "copyrights": {
          "description": "Copyrights array",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "readOnly": true
          }
        },
        "country": {
          "description": "Country property",
          "type": "object",
          "readOnly": true,
          "properties": {
            "ISO3": {
              "description": "ISO3 property",
              "type": "string",
              "readOnly": true
            },
            "label": {
              "description": "Label property",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "CopyrightCaptionResult": {
      "description": "This object is returned from a successful Copyright Caption call",
      "type": "object",
      "properties": {
        "formatVersion": {
          "description": "Format Version property",
          "type": "string",
          "readOnly": true
        },
        "copyrightsCaption": {
          "description": "Copyrights Caption property",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CopyrightWorldResult": {
      "description": "This object is returned from a successful Copyright World call",
      "type": "object",
      "properties": {
        "formatVersion": {
          "description": "Format Version property",
          "type": "string",
          "readOnly": true
        },
        "generalCopyrights": {
          "description": "General Copyrights array",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "readOnly": true
          }
        },
        "regions": {
          "description": "Regions array",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      }
    },
    "CopyrightTileResult": {
      "description": "This object is returned from a successful Copyright Tile call",
      "type": "object",
      "properties": {
        "formatVersion": {
          "description": "Format Version property",
          "type": "string",
          "readOnly": true
        },
        "generalCopyrights": {
          "description": "General Copyrights array",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "readOnly": true
          }
        },
        "regions": {
          "description": "Regions array",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      }
    },
    "MapStaticResult": {
      "description": "This image is returned from a successful Map Static call",
      "type": "object",
      "format": "file",
      "readOnly": true
    },
    "MapTileResult": {
      "description": "This image is returned from a successful Map Tile call",
      "type": "object",
      "format": "file",
      "readOnly": true
    },
    "MapStateTileResult": {
      "description": "This tile is returned from a successful Map State Tile call",
      "type": "object",
      "format": "file",
      "readOnly": true
    },
    "MapImageryResult": {
      "description": "This image is returned from a successful Map Imagery call",
      "type": "object",
      "format": "file",
      "readOnly": true
    }
  },
  "x-internal-service-id": "maps",
  "x-internal-service-name": "Maps",
  "x-internal-toc-name": "Render",
  "x-internal-product-uid": null,
  "x-internal-split-members": [
    {
      "displayName": "Get Copyright Caption",
      "relativePath": "Render/GetCopyrightCaption"
    },
    {
      "displayName": "Get Copyright For Tile",
      "relativePath": "Render/GetCopyrightForTile"
    },
    {
      "displayName": "Get Copyright For World",
      "relativePath": "Render/GetCopyrightForWorld"
    },
    {
      "displayName": "Get Copyright From Bounding Box",
      "relativePath": "Render/GetCopyrightFromBoundingBox"
    },
    {
      "displayName": "Get Map Image",
      "relativePath": "Render/GetMapImage"
    },
    {
      "displayName": "Get Map Imagery Tile",
      "relativePath": "Render/GetMapImageryTile"
    },
    {
      "displayName": "Get Map State Tile Preview",
      "relativePath": "Render/GetMapStateTilePreview"
    },
    {
      "displayName": "Get Map Tile",
      "relativePath": "Render/GetMapTile"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}