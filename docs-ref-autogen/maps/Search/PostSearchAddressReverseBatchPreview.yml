### YamlMime:RESTOperation
uid: atlas.microsoft.com.maps.search.postsearchaddressreversebatchpreview
name: Post Search Address Reverse Batch Preview
service: Maps
groupName: Search
apiVersion: "1.0"
summary: "## Search Address Reverse Batch API\n\n**Applies to**: S1 pricing tier. Access from S0 pricing tier will be deprecated after February 4th' 2019.\n\nThe Search Address Reverse Batch API allows the caller to batch up to 10,000 [Search Address Reverse API](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddressreverse) queries/requests using just a single API call.\n### Submit Batch Request\nTo send the _search address reverse_ queries you will use a `POST` request where the request body will contain the `queries` array in `json` format and the `Content-Type` header will be set to `application/json`. Here's a sample request body containing 5 _search address reverse_ queries:\n<br>\n```json\n{\n    \"queries\": [\n        \"?query=48.858561,2.294911\",\n        \"?query=47.639765,-122.127896&radius=5000&limit=2\",\n        \"?query=47.621028,-122.348170\",\n        \"?query=43.722990,10.396695\",\n        \"?query=40.750958,-73.982336\"\n    ]\n}\n```\n<br> A _search address reverse_ query in a batch is just a partial URL _without_ the protocol, base URL, path, api-version and subscription-key. It can accept any of the supported _search address reverse_ [URI parameters](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddressreverse#uri-parameters). The string values in the _search address reverse_ query must be properly escaped (e.g. \" character should be escaped with \\\\ ) and it should also be properly URL-encoded.  \n<br>\nThe maximum number of queries that can be specified in the batch is **10,000** and the batch should contain at least **1** query.   \n<br>\nPlease note that the Search Address Reverse Batch API is a long-running request. Here's a typical sequence of operations:\n1. Client sends a Search Address Reverse Batch `POST` request to Azure Maps\n2. The server will respond with one of the following:\n    \n    > HTTP `202 Accepted` - Batch request has been accepted.\n\n    > HTTP `Error` - There was an error processing your Batch request. This could either be a `400 Bad Request` or any other `Error` status code.\n\n3. If the batch request was accepted successfully, the `Location` header in the response contains the URL to download the results of the batch request.\n4. Client issues a `GET` request on the _download URL_ obtained in Step 3 to download the batch results.\n\n<br>\n### Download Batch Results\nTo download the batch results you will issue a `GET` request to the batch download endpoint. This _download URL_ can be obtained from the `Location` header of a successful `POST` batch request and looks like the following:   \n<br>\n```\nhttps://atlas.microsoft.com/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}\n```\n<br> Here's the typical sequence of operations for downloading the batch results:\n1. Client sends a `GET` request using the _download URL_.\n2. The server will respond with one of the following:\n\n    > HTTP `202 Accepted` - Batch request was accepted but is still being processed. Please try again in some time.\n\n    > HTTP `200 OK` - Batch request successfully processed. The response body contains all the batch results.\n\n<br>\n### Batch Response Model\nWhen downloading the results of a batch request, if the batch has finished processing, the response body contains the batch response. This batch response contains a `summary` component that indicates the `totalRequests` that were part of the original batch request and `successfulRequests` i.e. queries which were executed successfully. The batch response also includes a `batchResults` array which contains a response for each and every query in the batch request. Also, the `batchResults` will contain the results in the exact same order the original queries were sent in the batch request. Each entry in `batchResults` is of one of the following types:\n\n  - [`SearchAddressReverseResponse`](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddressreverse#searchaddressreverseresponse) - If the query completed successfully.\n\n  - `Error` - If the query failed. The result will contain a `status code` and a `message` in this case.\n  \n<br> Here's a sample Batch Response with 2 _successful_ and 1 _failed_ result:\n<br>\n```json\n{\n    \"summary\": {\n        \"successfulRequests\": 2,\n        \"totalRequests\": 3\n    },\n    \"batchResults\": [\n        {\n            \"summary\": {\n                \"queryTime\": 11\n            },\n            \"addresses\": [\n                {\n                    \"address\": {\n                        \"country\": \"France\",\n                        \"freeformAddress\": \"Avenue Anatole France, 75007 Paris\"\n                    },\n                    \"position\": \"48.858490,2.294820\"\n                }\n            ]\n        },\n        {\n            \"summary\": {\n                \"queryTime\": 1\n            },\n            \"addresses\": [\n                {\n                    \"address\": {\n                        \"country\": \"United States of America\",\n                        \"freeformAddress\": \"157th Pl NE, Redmond WA 98052\"\n                    },\n                    \"position\": \"47.640470,-122.129430\"\n                }\n            ]\n        },\n        {\n            \"statusCode\": 400,\n            \"message\": \"Bad Request\"\n        }\n    ]\n}\n```\n<br>\n### Data Retention Period\nPlease, be aware that batch results are available for download for **14** days, after which the request for results download will return `400 Bad Request` response.\n<br>"
consumes: []
produces:
- application/json
- application/xml
paths:
- content: POST https://atlas.microsoft.com/search/address/reverse/batch/json?subscription-key={subscription-key}&api-version=1.0
uriParameters:
- name: format
  in: path
  isRequired: true
  description: Desired format of the response. Only `json` format is supported.
  types:
  - uid: JsonFormat
- name: subscription-key
  in: query
  isRequired: true
  description: Azure Maps subscription key
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API. Current version is 1.0
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: BatchResponse
- name: 202 Accepted
  headers:
  - name: Location
    value: string
  description: 'Request Accepted: The request has been accepted for processing. Please use the URL in the Location Header to retry or access the results.'
  types:
  - uid: object
- name: 400 Bad Request
  description: 'Bad request: one or more parameters were incorrectly specified or are mutually exclusive.'
  types:
  - uid: ErrorResponse
- name: 401 Unauthorized
  description: Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription.
  types:
  - uid: ErrorResponse
- name: 403 Forbidden
  description: Permission, capacity, or authentication issues.
  types:
  - uid: ErrorResponse
- name: 404 Not Found
  description: 'Not Found: the requested resource could not be found, but it may be available again in the future.'
  types:
  - uid: ErrorResponse
- name: 500 Internal Server Error
  description: An error occurred while processing the request. Please try again later.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: queries
    in: body
    description: The list of queries/requests to process
    types:
    - uid: string
      isArray: true
requestHeader: []
definitions:
- name: JsonFormat
  description: Desired format of the response. Only `json` format is supported.
  kind: enum
  properties:
  - name: json
    description: '[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)'
    types:
    - uid: string
- name: BatchResponse
  description: This object is returned from a successful Batch service call
  kind: object
  properties:
  - name: summary
    isReadyOnly: true
    description: Summary for the batch request
    types:
    - uid: Summary
  - name: batchResults
    isReadyOnly: true
    description: Array containing the batch results
    types:
    - uid: object
      isArray: true
- name: ErrorResponse
  description: This response object is returned when an error occurs in the Maps API
  kind: object
  properties:
  - name: error
    description: This object is returned when an error occurs in the Maps API
    types:
    - uid: Error
- name: BatchRequestBody
  description: This type represents the request body for the Batch service.
  kind: object
  properties:
  - name: queries
    description: The list of queries/requests to process
    types:
    - uid: string
      isArray: true
- name: Summary
  description: Summary for the batch request
  kind: object
  properties:
  - name: successfulRequests
    isReadyOnly: true
    description: Number of successful requests in the batch
    types:
    - uid: integer
  - name: totalRequests
    isReadyOnly: true
    description: Total number of requests in the batch
    types:
    - uid: integer
- name: Error
  description: This object is returned when an error occurs in the Maps API
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The HTTP status code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: If available, a human readable description of the error.
    types:
    - uid: string
examples:
- name: A Reverse Geocoding Batch API call containing 5 Reverse Geocoding API queries
  request:
    uri: POST https://atlas.microsoft.com/search/address/reverse/batch/json?subscription-key=[subscription-key]&api-version=1.0
    body: >-
      {
        "queries": [
          "?query=48.858561,2.294911",
          "?query=47.639765,-122.127896&radius=5000&limit=2",
          "?query=47.621028,-122.348170"
        ]
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "summary": {
          "successfulRequests": 3,
          "totalRequests": 3
        },
        "batchResults": [
          {
            "summary": {
              "queryTime": 1,
              "numResults": 1
            },
            "addresses": [
              {
                "address": {
                  "routeNumbers": [],
                  "street": "Avenue Anatole France",
                  "streetName": "Avenue Anatole France",
                  "countryCode": "FR",
                  "municipality": "Paris",
                  "postalCode": "75007",
                  "municipalitySubdivision": "7e Arrondissement",
                  "country": "France",
                  "countryCodeISO3": "FRA",
                  "freeformAddress": "Avenue Anatole France, 75007 Paris",
                  "boundingBox": {
                    "northEast": "48.862990,2.301650",
                    "southWest": "48.853990,2.287990",
                    "entity": "position"
                  }
                },
                "position": "48.858490,2.294820"
              }
            ]
          },
          {
            "summary": {
              "queryTime": 1,
              "numResults": 1
            },
            "addresses": [
              {
                "address": {
                  "routeNumbers": [],
                  "street": "157th Pl NE",
                  "streetName": "157th Pl NE",
                  "countryCode": "US",
                  "countrySubdivision": "WA",
                  "countrySubdivisionName": "Washington",
                  "municipality": "Redmond",
                  "postalCode": "98052",
                  "country": "United States of America",
                  "countryCodeISO3": "USA",
                  "freeformAddress": "157th Pl NE, Redmond WA 98052",
                  "boundingBox": {
                    "northEast": "47.644970,-122.122760",
                    "southWest": "47.635970,-122.136100",
                    "entity": "position"
                  }
                },
                "position": "47.640470,-122.129430"
              }
            ]
          },
          {
            "summary": {
              "queryTime": 1,
              "numResults": 1
            },
            "addresses": [
              {
                "address": {
                  "buildingNumber": "442",
                  "streetNumber": "442",
                  "routeNumbers": [],
                  "street": "Thomas St",
                  "streetName": "Thomas St",
                  "streetNameAndNumber": "442 Thomas St",
                  "countryCode": "US",
                  "countrySubdivision": "WA",
                  "countrySubdivisionName": "Washington",
                  "municipality": "Seattle",
                  "postalCode": "98109",
                  "municipalitySubdivision": "Lower Queen Anne",
                  "country": "United States of America",
                  "countryCodeISO3": "USA",
                  "freeformAddress": "442 Thomas St, Seattle WA 98109",
                  "boundingBox": {
                    "northEast": "47.625440,-122.341470",
                    "southWest": "47.616440,-122.354810",
                    "entity": "position"
                  }
                },
                "position": "47.620940,-122.348140"
              }
            ]
          }
        ]
      }
  - statusCode: "202"
    headers:
    - name: Location
      value: URL to download the results of the long-running batch request.
    body: '{}'
  - statusCode: "400"
    body: >-
      {
        "error": {
          "code": "400 BadRequest",
          "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
        }
      }
  - statusCode: "401"
    body: >-
      {
        "error": {
          "code": "401 Unauthorized",
          "message": "Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription."
        }
      }
  - statusCode: "403"
    body: >-
      {
        "error": {
          "code": "403 Forbidden",
          "message": "Permission, capacity, or authentication issues."
        }
      }
  - statusCode: "404"
    body: >-
      {
        "error": {
          "code": "404 NotFound",
          "message": "Not Found: the requested resource could not be found, but it may be available again in the future."
        }
      }
  - statusCode: "500"
    body: >-
      {
        "error": {
          "code": "500 InternalServerError",
          "message": "An error occurred while processing the request. Please try again later."
        }
      }
security:
- name: Ocp-Apim-Subscription-Key
  type: apiKey
  in: header
- name: subscription-key
  type: apiKey
  in: query
