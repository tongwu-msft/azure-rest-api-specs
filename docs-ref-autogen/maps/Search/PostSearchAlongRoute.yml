### YamlMime:RESTOperation
uid: atlas.microsoft.com.maps.search.postsearchalongroute
name: Post Search Along Route
service: Maps
groupName: Search
apiVersion: "1.0"
summary: >-
  **Applies to**: S0 and S1 pricing tiers.



  The Search Along Route endpoint allows you to perform a fuzzy search for POIs along a specified route. This search is constrained by specifying the `maxDetourTime` limiting measure.<br><br>To send the route-points you will use a `POST` request where the request body will contain the `route` object represented as a `GeoJSON LineString` type and the `Content-Type` header will be set to `application/json`. Each route-point in `route` is represented as a `GeoJSON Position` type i.e. an array where the _longitude_ value is followed by the _latitude_ value and the _altitude_ value is ignored. The `route` should contain at least 2 route-points.<br><br>It is possible that original route will be altered, some of it's points may be skipped. If the route that passes through the found point is faster than the original one, the `detourTime` value in the response is negative.
consumes: []
produces:
- application/json
- application/xml
paths:
- content: POST https://atlas.microsoft.com/search/alongRoute/{format}?api-version=1.0&query={query}&maxDetourTime={maxDetourTime}
- content: POST https://atlas.microsoft.com/search/alongRoute/{format}?subscription-key={subscription-key}&api-version=1.0&query={query}&maxDetourTime={maxDetourTime}&limit={limit}
  isOptional: true
uriParameters:
- name: format
  in: path
  isRequired: true
  description: Desired format of the response. Value can be either _json_ or _xml_.
  types:
  - uid: TextFormat
- name: subscription-key
  in: query
  description: One of the Azure Maps keys provided from an Azure Map Account. Refer to the subscription-key security definition.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API. Current version is 1.0
  types:
  - uid: string
- name: query
  in: query
  isRequired: true
  description: The POI name to search for (e.g., "statue of liberty", "starbucks", "pizza"). Must be properly URL encoded.
  types:
  - uid: string
- name: maxDetourTime
  in: query
  isRequired: true
  description: Maximum detour time of the point of interest in seconds. Max value is 3600 seconds
  types:
  - uid: integer
- name: limit
  in: query
  description: Maximum number of responses that will be returned. Default value is 10. Max value is 20
  types:
  - uid: integer
responses:
- name: 200 OK
  description: OK
  types:
  - uid: SearchAlongRouteResponse
- name: 400 Bad Request
  description: 'Bad request: one or more parameters were incorrectly specified or are mutually exclusive.'
  types:
  - uid: ErrorResponse
- name: 401 Unauthorized
  headers:
  - name: WWW-Authenticate
    value: string
  description: Access denied due to invalid subscription key or invalid Azure Active Directory bearer token.  Make sure to provide a valid key for an active Azure subscription and Maps resource.  Otherwise, verify the [WWW-Authenticate](https://tools.ietf.org/html/rfc6750#section-3.1) header for error code and description of the provided AAD bearer token.
  types:
  - uid: ErrorResponse
- name: 403 Forbidden
  description: Permission, capacity, or authentication issues.
  types:
  - uid: ErrorResponse
- name: 404 Not Found
  description: 'Not Found: the requested resource could not be found, but it may be available again in the future.'
  types:
  - uid: ErrorResponse
- name: 500 Internal Server Error
  description: An error occurred while processing the request. Please try again later.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: route
    in: body
    description: A valid `GeoJSON LineString` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.4) for details.
    types:
    - uid: GeoJSONLineString
requestHeader:
- name: x-ms-client-id
  in: header
  description: 'Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.    '
  types:
  - uid: string
definitions:
- name: TextFormat
  description: Desired format of the response. Value can be either _json_ or _xml_.
  kind: enum
  properties:
  - name: json
    description: '[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)'
    types:
    - uid: string
  - name: xml
    description: '[The Extensible Markup Language](https://www.w3.org/TR/xml/)'
    types:
    - uid: string
- name: GeoJSONLineString
  description: A valid `GeoJSON LineString` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.4) for details.
  kind: object
  properties:
  - name: type
    description: Specifies the `type` for the geometry. Value should always be equal to "LineString".
    types:
    - uid: string
  - name: coordinates
    description: Coordinates for the `LineString` geometry.
    types:
    - uid: array
      isArray: true
- name: SearchAlongRouteResponse
  description: This object is returned from a successful Search Along Route call.
  kind: object
  properties:
  - name: summary
    isReadyOnly: true
    description: Summary object for a Search Along Route response
    types:
    - uid: SearchAlongRouteSummary
  - name: results
    isReadyOnly: true
    description: A list of Search Along Route results.
    types:
    - uid: SearchAlongRouteResult
      isArray: true
- name: ErrorResponse
  description: This response object is returned when an error occurs in the Maps API
  kind: object
  properties:
  - name: error
    description: This object is returned when an error occurs in the Maps API
    types:
    - uid: Error
- name: SearchAlongRouteRequestBody
  description: This type represents the request body for the Search Along Route service.
  kind: object
  properties:
  - name: route
    description: A valid `GeoJSON LineString` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.4) for details.
    types:
    - uid: GeoJSONLineString
- name: SearchAlongRouteSummary
  description: Summary object for a Search Along Route response
  kind: object
  properties:
  - name: query
    isReadyOnly: true
    description: Query property
    types:
    - uid: string
  - name: queryType
    isReadyOnly: true
    description: QueryType property
    types:
    - uid: string
  - name: queryTime
    isReadyOnly: true
    description: QueryTime property
    types:
    - uid: integer
  - name: numResults
    isReadyOnly: true
    description: NumResults property
    types:
    - uid: integer
  - name: offset
    isReadyOnly: true
    description: Offset property
    types:
    - uid: integer
  - name: totalResults
    isReadyOnly: true
    description: TotalResults property
    types:
    - uid: integer
  - name: fuzzyLevel
    isReadyOnly: true
    description: FuzzyLevel property
    types:
    - uid: integer
- name: SearchAlongRouteResult
  description: This type represents the Search Along Route result object.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: Type property
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Id property
    types:
    - uid: string
  - name: score
    isReadyOnly: true
    description: The value within a result set to indicate the relative matching score between results.  You can use this to  determine that result x is twice as likely to be as relevant as result y if the value of x is 2x the value of y.   The values vary between queries and is only meant as a relative value for one result set.
    types:
    - uid: number
  - name: info
    isReadyOnly: true
    description: Info property
    types:
    - uid: string
  - name: entityType
    description: Defines geography entity types.
    types:
    - uid: EntityType
  - name: poi
    description: Details of the poi including the name, phone, url, and categories.
    types:
    - uid: SearchResultPoi
  - name: address
    description: The address of the result
    types:
    - uid: SearchResultAddress
  - name: position
    description: A location represented as a latitude and longitude.
    types:
    - uid: CoordinateAbbreviated
  - name: viewport
    description: The viewport that covers the result represented by the top-left and bottom-right coordinates of the  viewport.
    types:
    - uid: SearchResultViewport
  - name: entryPoints
    description: Entry Points array
    types:
    - uid: SearchResultEntryPoint
      isArray: true
  - name: dist
    isReadyOnly: true
    description: Straight line distance between the result and geobias location in meters.
    types:
    - uid: number
  - name: detourTime
    isReadyOnly: true
    description: Detour time in seconds
    types:
    - uid: number
- name: Error
  description: This object is returned when an error occurs in the Maps API
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The HTTP status code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: If available, a human readable description of the error.
    types:
    - uid: string
- name: EntityType
  description: Defines geography entity types.
  kind: enum
  properties:
  - name: Country
    description: Country name
    types:
    - uid: string
  - name: CountrySubdivision
    description: State or Province
    types:
    - uid: string
  - name: CountrySecondarySubdivision
    description: County
    types:
    - uid: string
  - name: CountryTertiarySubdivision
    description: Named Area
    types:
    - uid: string
  - name: Municipality
    description: City / Town
    types:
    - uid: string
  - name: MunicipalitySubdivision
    description: Sub / Super City
    types:
    - uid: string
  - name: Neighbourhood
    description: Neighbourhood
    types:
    - uid: string
  - name: PostalCodeArea
    description: Postal Code / Zip Code
    types:
    - uid: string
- name: SearchResultPoi
  description: Details of the poi including the name, phone, url, and categories.
  kind: object
  properties:
  - name: name
    isReadyOnly: true
    description: Name property
    types:
    - uid: string
  - name: phone
    isReadyOnly: true
    description: Phone property
    types:
    - uid: string
  - name: url
    isReadyOnly: true
    description: URL property
    types:
    - uid: string
  - name: categories
    isReadyOnly: true
    description: __[Deprecated]__ Use classifications instead. Categories array
    types:
    - uid: string
      isArray: true
  - name: classifications
    isReadyOnly: true
    description: Classification array
    types:
    - uid: SearchResultPoiClassification
      isArray: true
- name: SearchResultAddress
  description: The address of the result
  kind: object
  properties:
  - name: buildingNumber
    isReadyOnly: true
    description: Building Number property
    types:
    - uid: string
  - name: street
    isReadyOnly: true
    description: Street property
    types:
    - uid: string
  - name: crossStreet
    isReadyOnly: true
    description: Cross Street property
    types:
    - uid: string
  - name: streetNumber
    isReadyOnly: true
    description: Street Number property
    types:
    - uid: string
  - name: routeNumbers
    isReadyOnly: true
    description: number of routes
    types:
    - uid: integer
      isArray: true
  - name: streetName
    isReadyOnly: true
    description: Street Name property
    types:
    - uid: string
  - name: streetNameAndNumber
    isReadyOnly: true
    description: Street Name and Number property
    types:
    - uid: string
  - name: municipality
    isReadyOnly: true
    description: Municipality property
    types:
    - uid: string
  - name: municipalitySubdivision
    isReadyOnly: true
    description: Municipality Subdivision property
    types:
    - uid: string
  - name: countryTertiarySubdivision
    isReadyOnly: true
    description: Country Tertiary Subdivision property
    types:
    - uid: string
  - name: countrySecondarySubdivision
    isReadyOnly: true
    description: Country Secondary Subdivision property
    types:
    - uid: string
  - name: countrySubdivision
    isReadyOnly: true
    description: Country Subdivision property
    types:
    - uid: string
  - name: postalCode
    isReadyOnly: true
    description: Postal Code property
    types:
    - uid: string
  - name: extendedPostalCode
    isReadyOnly: true
    description: Extended Postal Code property
    types:
    - uid: string
  - name: countryCode
    isReadyOnly: true
    description: Country Code property
    types:
    - uid: string
  - name: country
    isReadyOnly: true
    description: Country property
    types:
    - uid: string
  - name: countryCodeISO3
    isReadyOnly: true
    description: Country Code ISO3 property
    types:
    - uid: string
  - name: freeformAddress
    isReadyOnly: true
    description: Free form Address property
    types:
    - uid: string
  - name: countrySubdivisionName
    isReadyOnly: true
    description: Country Subdividion Name property
    types:
    - uid: string
- name: CoordinateAbbreviated
  description: A location represented as a latitude and longitude.
  kind: object
  properties:
  - name: lat
    isReadyOnly: true
    description: Latitude property
    types:
    - uid: number
  - name: lon
    isReadyOnly: true
    description: Longitude property
    types:
    - uid: number
- name: SearchResultViewport
  description: The viewport that covers the result represented by the top-left and bottom-right coordinates of the  viewport.
  kind: object
  properties:
  - name: topLeftPoint
    description: A location represented as a latitude and longitude.
    types:
    - uid: CoordinateAbbreviated
  - name: btmRightPoint
    description: A location represented as a latitude and longitude.
    types:
    - uid: CoordinateAbbreviated
- name: SearchResultEntryPoint
  description: The entry point for the POI being returned.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The type of entry point. Value can be either _main_ or _minor_.
    types:
    - uid: main
    - uid: minor
    typesTitle: enum
  - name: position
    description: A location represented as a latitude and longitude.
    types:
    - uid: CoordinateAbbreviated
- name: SearchResultPoiClassification
  description: The classification for the POI being returned
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Code property
    types:
    - uid: string
  - name: names
    isReadyOnly: true
    description: Names array
    types:
    - uid: SearchResultPoiClassificationName
      isArray: true
- name: SearchResultPoiClassificationName
  description: Name for the classification
  kind: object
  properties:
  - name: nameLocale
    isReadyOnly: true
    description: Name Locale property
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Name property
    types:
    - uid: string
examples:
- name: Search for burger joints along a route
  request:
    uri: POST https://atlas.microsoft.com/search/alongRoute/json?subscription-key=[subscription-key]&api-version=1.0&query=burger&maxDetourTime=1000&limit=2
    body: >-
      {
        "route": {
          "type": "LineString",
          "coordinates": [
            [
              -122.143035,
              47.653536
            ],
            [
              -122.187164,
              47.617556
            ],
            [
              -122.114981,
              47.570599
            ],
            [
              -122.132756,
              47.654009
            ]
          ]
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "summary": {
          "query": "burger",
          "queryType": "NON_NEAR",
          "queryTime": 409,
          "numResults": 13,
          "offset": 0,
          "totalResults": 13,
          "fuzzyLevel": 1
        },
        "results": [
          {
            "type": "POI",
            "id": "US/POI/p0/3492825",
            "score": 4.89,
            "dist": 3479.404482853342,
            "info": "search:decarta:ta:840539000647577-US",
            "poi": {
              "name": "Mugshots Burger N' Brew",
              "phone": "+(1)-(425)-7468852",
              "url": "www.mugshotsburgernbrew.com/",
              "categories": [
                "cocktail bar",
                "nightlife"
              ],
              "classifications": [
                {
                  "code": "NIGHTLIFE",
                  "names": [
                    {
                      "nameLocale": "en-US",
                      "name": "nightlife"
                    },
                    {
                      "nameLocale": "en-US",
                      "name": "cocktail bar"
                    }
                  ]
                }
              ]
            },
            "address": {
              "streetNumber": "1428",
              "streetName": "156th Ave NE",
              "municipalitySubdivision": "Bellevue, Crossroads",
              "municipality": "Bellevue, Eastgate",
              "countrySecondarySubdivision": "King",
              "countryTertiarySubdivision": "Seattle East",
              "countrySubdivision": "WA",
              "postalCode": "98007",
              "extendedPostalCode": "980074421",
              "countryCode": "US",
              "country": "United States Of America",
              "countryCodeISO3": "USA",
              "freeformAddress": "1428 156th Ave NE, Bellevue, WA 98007",
              "countrySubdivisionName": "Washington"
            },
            "position": {
              "lat": 47.62272,
              "lon": -122.13239
            },
            "viewport": {
              "topLeftPoint": {
                "lat": 47.62362,
                "lon": -122.13372
              },
              "btmRightPoint": {
                "lat": 47.62182,
                "lon": -122.13106
              }
            },
            "entryPoints": [
              {
                "type": "main",
                "position": {
                  "lat": 47.62303,
                  "lon": -122.13235
                }
              }
            ],
            "detourTime": -549
          },
          {
            "type": "POI",
            "id": "US/POI/p1/205585",
            "score": 4.927,
            "dist": 2296.770006012297,
            "info": "search:decarta:ta:840539000615501-US",
            "poi": {
              "name": "Wendy's Old Fashioned Hamburgers",
              "phone": "+(1)-(425)-8850988",
              "url": "https://wendys.com",
              "categories": [
                "fast food",
                "restaurant"
              ],
              "classifications": [
                {
                  "code": "RESTAURANT",
                  "names": [
                    {
                      "nameLocale": "en-US",
                      "name": "restaurant"
                    },
                    {
                      "nameLocale": "en-US",
                      "name": "fast food"
                    }
                  ]
                }
              ]
            },
            "address": {
              "streetNumber": "15945",
              "streetName": "Redmond Way",
              "municipalitySubdivision": "Redmond",
              "municipality": "Adelaide, Ames Lake, Avondale, Earlmount, Redmond",
              "countrySecondarySubdivision": "King",
              "countryTertiarySubdivision": "Seattle East",
              "countrySubdivision": "WA",
              "postalCode": "98052",
              "extendedPostalCode": "980523836",
              "countryCode": "US",
              "country": "United States Of America",
              "countryCodeISO3": "USA",
              "freeformAddress": "15945 Redmond Way, Redmond, WA 98052",
              "countrySubdivisionName": "Washington"
            },
            "position": {
              "lat": 47.6744,
              "lon": -122.12786
            },
            "viewport": {
              "topLeftPoint": {
                "lat": 47.6753,
                "lon": -122.1292
              },
              "btmRightPoint": {
                "lat": 47.6735,
                "lon": -122.12652
              }
            },
            "entryPoints": [
              {
                "type": "main",
                "position": {
                  "lat": 47.67474,
                  "lon": -122.12798
                }
              }
            ],
            "detourTime": -484
          }
        ]
      }
  - statusCode: "400"
    body: >-
      {
        "error": {
          "code": "400 BadRequest",
          "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
        }
      }
  - statusCode: "401"
    body: >-
      {
        "error": {
          "code": "401 Unauthorized",
          "message": "Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription."
        }
      }
  - statusCode: "403"
    body: >-
      {
        "error": {
          "code": "403 Forbidden",
          "message": "Permission, capacity, or authentication issues."
        }
      }
  - statusCode: "404"
    body: >-
      {
        "error": {
          "code": "404 NotFound",
          "message": "Not Found: the requested resource could not be found, but it may be available again in the future."
        }
      }
  - statusCode: "500"
    body: >-
      {
        "error": {
          "code": "500 InternalServerError",
          "message": "An error occurred while processing the request. Please try again later."
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes: []
- name: subscription-key
  type: apiKey
  description: This is a shared key which is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs. With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.  For publicly exposed applications our recommendation is to use server to server access of Azure Maps REST APIs where this key can be  securely stored.
  in: query
errorCodes: []
