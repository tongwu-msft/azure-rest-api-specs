### YamlMime:RESTOperation
uid: atlas.microsoft.com.maps.search.postsearchaddressbatchpreview
name: Post Search Address Batch Preview
service: Maps
groupName: Search
apiVersion: "1.0"
summary: "**Search Address Batch API**\n\n\n**Applies to**: S1 pricing tier.\n\n\nThe Search Address Batch API allows the caller to batch up to 10,000 [Search Address API](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddress) queries/requests using just a single API call.\n### Submit Batch Request\nTo send the _search address_ queries you will use a `POST` request where the request body will contain the `queries` array in `json` format and the `Content-Type` header will be set to `application/json`. Here's a sample request body containing 5 _search address_ queries:  \n<br>\n```json\n{\n    \"queries\": [\n        \"?query=400 Broad St, Seattle, WA 98109&limit=3\",\n        \"?query=One, Microsoft Way, Redmond, WA 98052&limit=3\",\n        \"?query=350 5th Ave, New York, NY 10118&limit=1\",\n        \"?query=Pike Pl, Seattle, WA 98101&lat=47.610970&lon=-122.342469&radius=1000\",\n        \"?query=Champ de Mars, 5 Avenue Anatole France, 75007 Paris, France&limit=1\"\n    ]\n}\n```\n<br> A _search address_ query in a batch is just a partial URL _without_ the protocol, base URL, path, api-version and subscription-key. It can accept any of the supported _search address_ [URI parameters](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddress#uri-parameters). The string values in the _search address_ query must be properly escaped (e.g. \" character should be escaped with \\\\ ) and it should also be properly URL-encoded.    \n<br>\nThe maximum number of queries that can be specified in the batch is **10,000** and the batch should contain at least **1** query.   \n<br>\nPlease note that the Search Address Batch API is a long-running request. Here's a typical sequence of operations:\n1. Client sends a Search Address Batch `POST` request to Azure Maps\n2. The server will respond with one of the following:\n    \n    > HTTP `202 Accepted` - Batch request has been accepted.\n\n    > HTTP `Error` - There was an error processing your Batch request. This could either be a `400 Bad Request` or any other `Error` status code.\n\n3. If the batch request was accepted successfully, the `Location` header in the response contains the URL to download the results of the batch request.\n4. Client issues a `GET` request on the _download URL_ obtained in Step 3 to download the batch results.\n\n<br>\n### Download Batch Results\nTo download the batch results you will issue a `GET` request to the batch download endpoint. This _download URL_ can be obtained from the `Location` header of a successful `POST` batch request and looks like the following:\n<br>\n```\nhttps://atlas.microsoft.com/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}\n```\n<br> Here's the typical sequence of operations for downloading the batch results:\n1. Client sends a `GET` request using the _download URL_.\n2. The server will respond with one of the following:\n    \n    > HTTP `202 Accepted` - Batch request was accepted but is still being processed. Please try again in some time.\n\n    > HTTP `200 OK` - Batch request successfully processed. The response body contains all the batch results.\n\n<br>\n### Batch Response Model\nWhen downloading the results of a batch request, if the batch has finished processing, the response body contains the batch response. This batch response contains a `summary` component that indicates the `totalRequests` that were part of the original batch request and `successfulRequests` i.e. queries which were executed successfully. The batch response also includes a `batchResults` array which contains a response for each and every query in the batch request. Also, the `batchResults` will contain the results in the exact same order the original queries were sent in the batch request. Each entry in `batchResults` is of one of the following types:\n\n  - [`SearchAddressResponse`](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddress#searchaddressresponse) - If the query completed successfully.\n\n  - `Error` - If the query failed. The result will contain a `status code` and a `message` in this case.\n  \n<br> Here's a sample Batch Response with 2 _successful_ and 1 _failed_ result:\n<br>\n```json\n{\n    \"summary\": {\n        \"successfulRequests\": 2,\n        \"totalRequests\": 3\n    },\n    \"batchResults\": [\n        {\n            \"summary\": {\n                \"query\": \"one microsoft way redmond wa 98052\"\n            },\n            \"results\": [\n                {\n                    \"position\": {\n                        \"lat\": 47.63989,\n                        \"lon\": -122.12509\n                    }\n                }\n            ]\n        },\n        {\n            \"summary\": {\n                \"query\": \"pike pl seattle wa 98101\"\n            },\n            \"results\": [\n                {\n                    \"position\": {\n                        \"lat\": 47.60963,\n                        \"lon\": -122.34215\n                    }\n                }\n            ]\n        },\n        {\n            \"statusCode\": 400,\n            \"message\": \"Bad Request\"\n        }\n    ]\n}\n```\n<br>\n### Data Retention Period\nPlease, be aware that batch results are available for download for **14** days, after which the request for results download will return `400 Bad Request` response.\n<br>"
consumes: []
produces:
- application/json
- application/xml
paths:
- content: POST https://atlas.microsoft.com/search/address/batch/json?api-version=1.0
- content: POST https://atlas.microsoft.com/search/address/batch/json?subscription-key={subscription-key}&api-version=1.0
  isOptional: true
uriParameters:
- name: format
  in: path
  isRequired: true
  description: Desired format of the response. Only `json` format is supported.
  types:
  - uid: JsonFormat
- name: subscription-key
  in: query
  description: One of the Azure Maps keys provided from an Azure Map Account. Refer to the subscription-key security definition.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API. Current version is 1.0
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: BatchResponse
- name: 202 Accepted
  headers:
  - name: Location
    value: string
  description: 'Request Accepted: The request has been accepted for processing. Please use the URL in the Location Header to retry or access the results.'
  types:
  - uid: object
- name: 400 Bad Request
  description: 'Bad request: one or more parameters were incorrectly specified or are mutually exclusive.'
  types:
  - uid: ErrorResponse
- name: 401 Unauthorized
  headers:
  - name: WWW-Authenticate
    value: string
  description: Access denied due to invalid subscription key or invalid Azure Active Directory bearer token.  Make sure to provide a valid key for an active Azure subscription and Maps resource.  Otherwise, verify the [WWW-Authenticate](https://tools.ietf.org/html/rfc6750#section-3.1) header for error code and description of the provided AAD bearer token.
  types:
  - uid: ErrorResponse
- name: 403 Forbidden
  description: Permission, capacity, or authentication issues.
  types:
  - uid: ErrorResponse
- name: 404 Not Found
  description: 'Not Found: the requested resource could not be found, but it may be available again in the future.'
  types:
  - uid: ErrorResponse
- name: 500 Internal Server Error
  description: An error occurred while processing the request. Please try again later.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: queries
    in: body
    description: The list of queries/requests to process
    types:
    - uid: string
      isArray: true
requestHeader:
- name: x-ms-client-id
  in: header
  description: 'Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.    '
  types:
  - uid: string
definitions:
- name: JsonFormat
  description: Desired format of the response. Only `json` format is supported.
  kind: enum
  properties:
  - name: json
    description: '[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)'
    types:
    - uid: string
- name: BatchResponse
  description: This object is returned from a successful Batch service call
  kind: object
  properties:
  - name: summary
    isReadyOnly: true
    description: Summary for the batch request
    types:
    - uid: Summary
  - name: batchResults
    isReadyOnly: true
    description: Array containing the batch results
    types:
    - uid: object
      isArray: true
- name: ErrorResponse
  description: This response object is returned when an error occurs in the Maps API
  kind: object
  properties:
  - name: error
    description: This object is returned when an error occurs in the Maps API
    types:
    - uid: Error
- name: BatchRequestBody
  description: This type represents the request body for the Batch service.
  kind: object
  properties:
  - name: queries
    description: The list of queries/requests to process
    types:
    - uid: string
      isArray: true
- name: Summary
  description: Summary for the batch request
  kind: object
  properties:
  - name: successfulRequests
    isReadyOnly: true
    description: Number of successful requests in the batch
    types:
    - uid: integer
  - name: totalRequests
    isReadyOnly: true
    description: Total number of requests in the batch
    types:
    - uid: integer
- name: Error
  description: This object is returned when an error occurs in the Maps API
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The HTTP status code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: If available, a human readable description of the error.
    types:
    - uid: string
examples:
- name: An Address Geocoding Batch API call containing 5 Address Geocoding API queries
  request:
    uri: POST https://atlas.microsoft.com/search/address/batch/json?subscription-key=[subscription-key]&api-version=1.0
    body: >-
      {
        "queries": [
          "?query=400 Broad St, Seattle, WA 98109&limit=3",
          "?query=One, Microsoft Way, Redmond, WA 98052&limit=3",
          "?query=350 5th Ave, New York, NY 10118&limit=1"
        ]
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "summary": {
          "successfulRequests": 3,
          "totalRequests": 3
        },
        "batchResults": [
          {
            "summary": {
              "query": "400 broad st seattle wa 98109",
              "queryType": "NON_NEAR",
              "queryTime": 30,
              "numResults": 1,
              "offset": 0,
              "totalResults": 1,
              "fuzzyLevel": 1
            },
            "results": [
              {
                "type": "Point Address",
                "id": "US/PAD/p1/3585457",
                "score": 13.4,
                "address": {
                  "streetNumber": "400",
                  "streetName": "Broad St",
                  "municipalitySubdivision": "Seattle, South Lake Union, Lower Queen Anne",
                  "municipality": "Seattle, Queen Anne",
                  "countrySecondarySubdivision": "King",
                  "countryTertiarySubdivision": "Seattle",
                  "countrySubdivision": "WA",
                  "postalCode": "98109",
                  "countryCode": "US",
                  "country": "United States Of America",
                  "countryCodeISO3": "USA",
                  "freeformAddress": "400 Broad St, Seattle, WA 98109",
                  "countrySubdivisionName": "Washington"
                },
                "position": {
                  "lat": 47.62039,
                  "lon": -122.34928
                },
                "viewport": {
                  "topLeftPoint": {
                    "lat": 47.62129,
                    "lon": -122.35061
                  },
                  "btmRightPoint": {
                    "lat": 47.61949,
                    "lon": -122.34795
                  }
                },
                "entryPoints": [
                  {
                    "type": "main",
                    "position": {
                      "lat": 47.61982,
                      "lon": -122.34886
                    }
                  }
                ]
              }
            ]
          },
          {
            "summary": {
              "query": "one microsoft way redmond wa 98052",
              "queryType": "NON_NEAR",
              "queryTime": 9,
              "numResults": 2,
              "offset": 0,
              "totalResults": 1692,
              "fuzzyLevel": 2
            },
            "results": [
              {
                "type": "Street",
                "id": "US/STR/p0/4918633",
                "score": 5.421,
                "address": {
                  "streetName": "Microsoft Way",
                  "municipalitySubdivision": "Redmond",
                  "municipality": "Redmond, Earlmount, Avondale, Ames Lake, Adelaide",
                  "countrySecondarySubdivision": "King",
                  "countryTertiarySubdivision": "Seattle East",
                  "countrySubdivision": "WA",
                  "postalCode": "98052",
                  "extendedPostalCode": "980526399,980528300",
                  "countryCode": "US",
                  "country": "United States Of America",
                  "countryCodeISO3": "USA",
                  "freeformAddress": "Microsoft Way, Redmond, WA 98052",
                  "countrySubdivisionName": "Washington"
                },
                "position": {
                  "lat": 47.63989,
                  "lon": -122.12509
                },
                "viewport": {
                  "topLeftPoint": {
                    "lat": 47.63748,
                    "lon": -122.12309
                  },
                  "btmRightPoint": {
                    "lat": 47.64223,
                    "lon": -122.13061
                  }
                }
              },
              {
                "type": "Cross Street",
                "id": "US/XSTR/p0/2587039",
                "score": 5.421,
                "address": {
                  "streetName": "Microsoft Way & NE 36th Way",
                  "municipalitySubdivision": "Redmond",
                  "municipality": "Redmond, Earlmount, Avondale, Ames Lake, Adelaide",
                  "countrySecondarySubdivision": "King",
                  "countryTertiarySubdivision": "Seattle East",
                  "countrySubdivision": "WA",
                  "postalCode": "98052",
                  "countryCode": "US",
                  "country": "United States Of America",
                  "countryCodeISO3": "USA",
                  "freeformAddress": "Microsoft Way & NE 36th Way, Redmond, WA 98052",
                  "countrySubdivisionName": "Washington"
                },
                "position": {
                  "lat": 47.64223,
                  "lon": -122.12531
                },
                "viewport": {
                  "topLeftPoint": {
                    "lat": 47.64313,
                    "lon": -122.12664
                  },
                  "btmRightPoint": {
                    "lat": 47.64133,
                    "lon": -122.12398
                  }
                }
              }
            ]
          },
          {
            "summary": {
              "query": "350 5th ave new york ny 10118",
              "queryType": "NON_NEAR",
              "queryTime": 8,
              "numResults": 1,
              "offset": 0,
              "totalResults": 1,
              "fuzzyLevel": 1
            },
            "results": [
              {
                "type": "Point Address",
                "id": "US/PAD/p1/23936626",
                "score": 15.1,
                "address": {
                  "streetNumber": "350",
                  "streetName": "5th Ave",
                  "municipalitySubdivision": "New York, New York City, NYC, Midtown South",
                  "municipality": "New York, New York City, NY, NY City, NYC, Manhattan, Macys Finance, Greeley Square, Gpo, Empire State",
                  "countrySecondarySubdivision": "New York",
                  "countryTertiarySubdivision": "Manhattan",
                  "countrySubdivision": "NY",
                  "postalCode": "10118",
                  "extendedPostalCode": "101182212",
                  "countryCode": "US",
                  "country": "United States Of America",
                  "countryCodeISO3": "USA",
                  "freeformAddress": "350 5th Ave, NYC, NY 10118",
                  "countrySubdivisionName": "New York"
                },
                "position": {
                  "lat": 40.74817,
                  "lon": -73.985
                },
                "viewport": {
                  "topLeftPoint": {
                    "lat": 40.74907,
                    "lon": -73.98619
                  },
                  "btmRightPoint": {
                    "lat": 40.74727,
                    "lon": -73.98381
                  }
                },
                "entryPoints": [
                  {
                    "type": "main",
                    "position": {
                      "lat": 40.74808,
                      "lon": -73.98482
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
  - statusCode: "202"
    headers:
    - name: Location
      value: URL to download the results of the long-running batch request.
    body: '{}'
  - statusCode: "400"
    body: >-
      {
        "error": {
          "code": "400 BadRequest",
          "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
        }
      }
  - statusCode: "401"
    body: >-
      {
        "error": {
          "code": "401 Unauthorized",
          "message": "Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription."
        }
      }
  - statusCode: "403"
    body: >-
      {
        "error": {
          "code": "403 Forbidden",
          "message": "Permission, capacity, or authentication issues."
        }
      }
  - statusCode: "404"
    body: >-
      {
        "error": {
          "code": "404 NotFound",
          "message": "Not Found: the requested resource could not be found, but it may be available again in the future."
        }
      }
  - statusCode: "500"
    body: >-
      {
        "error": {
          "code": "500 InternalServerError",
          "message": "An error occurred while processing the request. Please try again later."
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes: []
- name: subscription-key
  type: apiKey
  description: This is a shared key which is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs. With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.  For publicly exposed applications our recommendation is to use server to server access of Azure Maps REST APIs where this key can be  securely stored.
  in: query
errorCodes: []
