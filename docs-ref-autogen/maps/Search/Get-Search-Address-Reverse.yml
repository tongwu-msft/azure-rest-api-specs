### YamlMime:RESTOperation
uid: atlas.microsoft.com.maps.search.getsearchaddressreverse
name: Get Search Address Reverse
service: Maps
groupName: Search
apiVersion: "1.0"
summary: >-
  **Reverse Geocode to an Address**


  **Applies to**: S0 and S1 pricing tiers.



  There may be times when you need to translate a  coordinate (example: 37.786505, -122.3862) into a human understandable street address. Most often  this is needed in tracking applications where you  receive a GPS feed from the device or asset and  wish to know what address where the coordinate is  located. This endpoint will return address  information for a given coordinate.
consumes: []
produces:
- application/json
- application/xml
paths:
- content: GET https://atlas.microsoft.com/search/address/reverse/{format}?api-version=1.0&query={query}
- content: GET https://atlas.microsoft.com/search/address/reverse/{format}?subscription-key={subscription-key}&api-version=1.0&query={query}&language={language}&returnSpeedLimit={returnSpeedLimit}&heading={heading}&radius={radius}&number={number}&returnRoadUse={returnRoadUse}&roadUse={roadUse}&allowFreeformNewline={allowFreeformNewline}&returnMatchType={returnMatchType}&entityType={entityType}&view={view}
  isOptional: true
uriParameters:
- name: format
  in: path
  isRequired: true
  description: Desired format of the response. Value can be either _json_ or _xml_.
  types:
  - uid: TextFormat
- name: subscription-key
  in: query
  description: One of the Azure Maps keys provided from an Azure Map Account. Please refer to this [article](https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication) for details on how to manage authentication.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API. Current version is 1.0
  types:
  - uid: string
- name: query
  in: query
  isRequired: true
  description: The applicable query specified as a comma separated string composed by latitude followed by longitude e.g. "47.641268,-122.125679".
  types:
  - uid: string
- name: language
  in: query
  description: >-
    Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive. When data in specified language is not available for a specific field, default language is used.


    Please refer to [Supported Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages) for details.
  types:
  - uid: string
- name: returnSpeedLimit
  in: query
  description: Boolean. To enable return of the posted speed limit
  types:
  - uid: boolean
- name: heading
  in: query
  description: The directional heading of the vehicle in degrees, for travel along a segment of roadway. 0 is North, 90 is East and so on, values range from -360 to 360. The precision can include upto one decimal place
  types:
  - uid: number
- name: radius
  in: query
  description: The radius in meters to for the results to be constrained to the defined area
  types:
  - uid: number
- name: number
  in: query
  description: If a number is sent in along with the request, the response may include the side of the street (Left/Right) and also an offset position for that number
  types:
  - uid: string
- name: returnRoadUse
  in: query
  description: Boolean. To enable return of the road use array for reverse geocodes at street level
  types:
  - uid: boolean
- name: roadUse
  in: query
  description: To restrict reverse geocodes to a certain type of road use. The road use array for reverse geocodes can be one or more of LimitedAccess, Arterial, Terminal, Ramp, Rotary, LocalStreet
  types:
  - uid: string
- name: allowFreeformNewline
  in: query
  description: >-
    Format of newlines in the formatted address.


    If true, the address will contain newlines.

    If false, newlines will be converted to commas.
  types:
  - uid: boolean
- name: returnMatchType
  in: query
  description: Include information on the type of match the geocoder achieved in the response.
  types:
  - uid: boolean
- name: entityType
  in: query
  description: >-
    Specifies the level of filtering performed on geographies. Narrows the search for specified geography entity types, e.g. return only municipality. The resulting response will contain the geography ID as well as the entity type matched. If you provide more than one entity as a comma separated list, endpoint will return the 'smallest entity available'. Returned Geometry ID can be used to get the geometry of that geography via [Get Search Polygon](https://docs.microsoft.com/rest/api/maps/search/getsearchpolygon) API. The following parameters are ignored when entityType is set:


    * heading

    * number

    * returnRoadUse

    * returnSpeedLimit

    * roadUse

    * returnMatchType
  types:
  - uid: EntityType
- name: view
  in: query
  description: >-
    The View parameter specifies which set of geopolitically disputed content is returned via Azure Maps services, including  borders and labels displayed on the map. The View parameter (also referred to as “user region parameter”) will show the  correct maps for that country/region. By default, the View parameter is set to “Unified” even if you haven’t defined it in  the request. It is your responsibility to determine the location of your users, and then set the View parameter correctly  for that location. Alternatively, you have the option to set ‘View=Auto’, which will return the map data based on the IP  address of the request. The View parameter in Azure Maps must be used in compliance with applicable laws, including those  regarding mapping, of the country where maps, images and other data and third party content that you are authorized to  access via Azure Maps is made available. Example: view=IN.


    Please refer to [Supported Views](https://aka.ms/AzureMapsLocalizationViews) for details and to see the available Views.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: SearchAddressReverseResponse
- name: 400 Bad Request
  description: 'Bad request: one or more parameters were incorrectly specified or are mutually exclusive.'
  types:
  - uid: ODataErrorResponse
- name: 401 Unauthorized
  headers:
  - name: WWW-Authenticate
    value: string
  description: Access denied due to invalid subscription key or invalid Azure Active Directory (Azure AD) bearer token.  Make sure to provide a valid key for an active Azure subscription and Maps resource.  Otherwise, verify the [WWW-Authenticate](https://tools.ietf.org/html/rfc6750#section-3.1) header for error code and description of the provided Azure AD bearer token.
  types:
  - uid: ODataErrorResponse
- name: 403 Forbidden
  description: Permission, capacity, or authentication issues.
  types:
  - uid: ODataErrorResponse
- name: 404 Not Found
  description: 'Not Found: the requested resource could not be found, but it may be available again in the future.'
  types:
  - uid: ODataErrorResponse
- name: 500 Internal Server Error
  description: An error occurred while processing the request. Please try again later.
  types:
  - uid: ODataErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
  types:
  - uid: string
definitions:
- name: TextFormat
  description: Desired format of the response. Value can be either _json_ or _xml_.
  kind: enum
  properties:
  - name: json
    description: '[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)'
    types:
    - uid: string
  - name: xml
    description: '[The Extensible Markup Language](https://www.w3.org/TR/xml/)'
    types:
    - uid: string
- name: EntityType
  description: Geography entity type. Present only when entityType was requested and is available.
  kind: enum
  properties:
  - name: Country
    description: Country name
    types:
    - uid: string
  - name: CountrySubdivision
    description: State or Province
    types:
    - uid: string
  - name: CountrySecondarySubdivision
    description: County
    types:
    - uid: string
  - name: CountryTertiarySubdivision
    description: Named Area
    types:
    - uid: string
  - name: Municipality
    description: City / Town
    types:
    - uid: string
  - name: MunicipalitySubdivision
    description: Sub / Super City
    types:
    - uid: string
  - name: Neighbourhood
    description: Neighbourhood
    types:
    - uid: string
  - name: PostalCodeArea
    description: Postal Code / Zip Code
    types:
    - uid: string
- name: SearchAddressReverseResponse
  description: This object is returned from a successful Search Address Reverse call
  kind: object
  properties:
  - name: summary
    isReadyOnly: true
    description: Summary object for a Search Address Reverse response
    types:
    - uid: SearchAddressReverseSummary
  - name: addresses
    isReadyOnly: true
    description: Addresses array
    types:
    - uid: SearchAddressReverseResult
      isArray: true
- name: ODataErrorResponse
  description: This response object is returned when an error occurs in the Azure Maps API.
  kind: object
  properties:
  - name: error
    description: This object is returned when an error occurs in the Azure Maps API.
    types:
    - uid: ODataError
- name: SearchAddressReverseSummary
  description: Summary object for a Search Address Reverse response
  kind: object
  properties:
  - name: queryTime
    isReadyOnly: true
    description: QueryTime property
    types:
    - uid: integer
  - name: numResults
    isReadyOnly: true
    description: NumResults property
    types:
    - uid: integer
- name: SearchAddressReverseResult
  kind: object
  properties:
  - name: address
    description: The address of the result
    types:
    - uid: SearchResultAddress
  - name: position
    isReadyOnly: true
    description: Position property in the form of "{latitude},{longitude}"
    types:
    - uid: string
  - name: matchType
    isReadyOnly: true
    description: >-
      Information on the type of match.


      One of:
        * AddressPoint
        * HouseNumberRange
        * Street
    types:
    - uid: string
- name: ODataError
  description: This object is returned when an error occurs in the Azure Maps API.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The ODataError code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: If available, a human-readable description of the error.
    types:
    - uid: string
  - name: details
    description: This object is returned when an error occurs in the Azure Maps API.
    types:
    - uid: ODataError
      isArray: true
  - name: target
    isReadyOnly: true
    description: If available, the target causing the error.
    types:
    - uid: string
- name: SearchResultAddress
  description: The address of the result
  kind: object
  properties:
  - name: buildingNumber
    isReadyOnly: true
    description: Building Number property
    types:
    - uid: string
  - name: street
    isReadyOnly: true
    description: Street property
    types:
    - uid: string
  - name: crossStreet
    isReadyOnly: true
    description: Cross Street property
    types:
    - uid: string
  - name: streetNumber
    isReadyOnly: true
    description: Street Number property
    types:
    - uid: string
  - name: routeNumbers
    isReadyOnly: true
    description: number of routes
    types:
    - uid: integer
      isArray: true
  - name: streetName
    isReadyOnly: true
    description: Street Name property
    types:
    - uid: string
  - name: streetNameAndNumber
    isReadyOnly: true
    description: Street Name and Number property
    types:
    - uid: string
  - name: municipality
    isReadyOnly: true
    description: Municipality property
    types:
    - uid: string
  - name: municipalitySubdivision
    isReadyOnly: true
    description: Municipality Subdivision property
    types:
    - uid: string
  - name: countryTertiarySubdivision
    isReadyOnly: true
    description: Country Tertiary Subdivision property
    types:
    - uid: string
  - name: countrySecondarySubdivision
    isReadyOnly: true
    description: Country Secondary Subdivision property
    types:
    - uid: string
  - name: countrySubdivision
    isReadyOnly: true
    description: Country Subdivision property
    types:
    - uid: string
  - name: postalCode
    isReadyOnly: true
    description: Postal Code property
    types:
    - uid: string
  - name: extendedPostalCode
    isReadyOnly: true
    description: Extended Postal Code property
    types:
    - uid: string
  - name: countryCode
    isReadyOnly: true
    description: Country Code property
    types:
    - uid: string
  - name: country
    isReadyOnly: true
    description: Country property
    types:
    - uid: string
  - name: countryCodeISO3
    isReadyOnly: true
    description: Country Code ISO3 property
    types:
    - uid: string
  - name: freeformAddress
    isReadyOnly: true
    description: Free form Address property
    types:
    - uid: string
  - name: countrySubdivisionName
    isReadyOnly: true
    description: Country Subdivision Name property
    types:
    - uid: string
  - name: localName
    isReadyOnly: true
    description: An address component which represents the name of a geographic area or locality that groups a number of addressable objects for addressing purposes, without being an administrative unit. This field is used to build the `freeformAddress` property.
    types:
    - uid: string
examples:
- name: GetSearchAddressReverse
  request:
    uri: GET https://atlas.microsoft.com/search/address/reverse/json?subscription-key=[subscription-key]&api-version=1.0&query=37.337,-121.89
  responses:
  - statusCode: "200"
    body: >-
      {
        "summary": {
          "queryTime": 5,
          "numResults": 1
        },
        "addresses": [
          {
            "address": {
              "buildingNumber": "31",
              "streetNumber": "31",
              "routeNumbers": [],
              "street": "N 2nd St",
              "streetName": "N 2nd St",
              "streetNameAndNumber": "31 N 2nd St",
              "countryCode": "US",
              "countrySubdivision": "CA",
              "countrySubdivisionName": "California",
              "municipality": "San Jose",
              "postalCode": "95113",
              "country": "United States of America",
              "countryCodeISO3": "USA",
              "freeformAddress": "31 N 2nd St, San Jose CA 95113",
              "extendedPostalCode": "951131217"
            },
            "position": "37.337090,-121.889820"
          }
        ]
      }
  - statusCode: "400"
    body: >-
      {
        "error": {
          "code": "400 BadRequest",
          "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
        }
      }
  - statusCode: "401"
    body: >-
      {
        "error": {
          "code": "401 Unauthorized",
          "message": "Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription."
        }
      }
  - statusCode: "403"
    body: >-
      {
        "error": {
          "code": "403 Forbidden",
          "message": "Permission, capacity, or authentication issues."
        }
      }
  - statusCode: "404"
    body: >-
      {
        "error": {
          "code": "404 NotFound",
          "message": "Not Found: the requested resource could not be found, but it may be available again in the future."
        }
      }
  - statusCode: "500"
    body: >-
      {
        "error": {
          "code": "500 InternalServerError",
          "message": "An error occurred while processing the request. Please try again later."
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure role-based access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes: []
- name: subscription-key
  type: apiKey
  description: >-
    This is a shared key that is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.

     For publicly exposed applications, our recommendation is to use server-to-server access of Azure Maps REST APIs where this key can be  securely stored.
  in: query
metadata:
  description: >-
    **Reverse Geocode to an Address**


    **Applies to**: S0 and S1 pricing tiers.



    There may be times when you need to translate a  coordinate (example: 37.
errorCodes: []
