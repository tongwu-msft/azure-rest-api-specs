### YamlMime:RESTOperation
uid: atlas.microsoft.com.maps.search.getsearchaddressreversebatch
name: Get Search Address Reverse Batch
service: Maps
groupName: Search
apiVersion: "1.0"
summary: >-
  **Search Address Reverse Batch API**



  **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).


  The Search Address Batch API sends batches of queries to [Search Address Reverse API](https://docs.microsoft.com/rest/api/maps/search/getsearchaddressreverse) using just a single API call. You can call Search Address Reverse Batch API to run either asynchronously (async) or synchronously (sync). The async API allows caller to batch up to **10,000** queries and sync API up to **100** queries.

  ### Submit Synchronous Batch Request

  The Synchronous API is recommended for lightweight batch requests. When the service receives a request, it will respond as soon as the batch items are calculated and there will be no possibility to retrieve the results later. The Synchronous API will return a timeout error (a 408 response) if the request takes longer than 60 seconds. The number of batch items is limited to **100** for this API.

  ```

  POST https://atlas.microsoft.com/search/address/reverse/batch/sync/json?api-version=1.0&subscription-key={subscription-key}

  ```

  ### Submit Asynchronous Batch Request

  The Asynchronous API is appropriate for processing big volumes of relatively complex search requests

  - It allows the retrieval of results in a separate call (multiple downloads are possible).

  - The asynchronous API is optimized for reliability and is not expected to run into a timeout.

  - The number of batch items is limited to **10,000** for this API.


  When you make a request by using async request, by default the service returns a 202 response code along a redirect URL in the Location field of the response header. This URL should be checked periodically until the response data or error information is available.

  The asynchronous responses are stored for **14** days. The redirect URL returns a 404 response if used after the expiration period.


  Please note that asynchronous batch request is a long-running request. Here's a typical sequence of operations:

  1. Client sends a Search Address Batch `POST` request to Azure Maps

  2. The server will respond with one of the following:

      > HTTP `202 Accepted` - Batch request has been accepted.

      > HTTP `Error` - There was an error processing your Batch request. This could either be a `400 Bad Request` or any other `Error` status code.

  3. If the batch request was accepted successfully, the `Location` header in the response contains the URL to download the results of the batch request.
      This status URI looks like following:

  ```
      GET https://atlas.microsoft.com/search/address/reverse/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}
  ```

  4. Client issues a `GET` request on the _download URL_ obtained in Step 3 to download the batch results.


  ### POST Body for Batch Request

  To send the _search address reverse_ queries you will use a `POST` request where the request body will contain the `batchItems` array in `json` format and the `Content-Type` header will be set to `application/json`. Here's a sample request body containing 5 _search address reverse_ queries:



  ```json

  {
      "batchItems": [
          {"query": "?query=48.858561,2.294911"},
          {"query": "?query=47.639765,-122.127896&radius=5000&limit=2"},
          {"query": "?query=47.621028,-122.348170"},
          {"query": "?query=43.722990,10.396695"},
          {"query": "?query=40.750958,-73.982336"}
      ]
  }

  ```


  A _search address reverse_ query in a batch is just a partial URL _without_ the protocol, base URL, path, api-version and subscription-key. It can accept any of the supported _search address reverse_ [URI parameters](https://docs.microsoft.com/rest/api/maps/search/getsearchaddressreverse#uri-parameters). The string values in the _search address reverse_ query must be properly escaped (e.g. " character should be escaped with \\ ) and it should also be properly URL-encoded.



  The async API allows caller to batch up to **10,000** queries and sync API up to **100** queries, and the batch should contain at least **1** query.



  ### Download Asynchronous Batch Results

  To download the async batch results you will issue a `GET` request to the batch download endpoint. This _download URL_ can be obtained from the `Location` header of a successful `POST` batch request and looks like the following:


  ```

  https://atlas.microsoft.com/search/address/reverse/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}

  ```

  Here's the typical sequence of operations for downloading the batch results:

  1. Client sends a `GET` request using the _download URL_.

  2. The server will respond with one of the following:

      > HTTP `202 Accepted` - Batch request was accepted but is still being processed. Please try again in some time.

      > HTTP `200 OK` - Batch request successfully processed. The response body contains all the batch results.



  ### Batch Response Model

  The returned data content is similar for async and sync requests. When downloading the results of an async batch request, if the batch has finished processing, the response body contains the batch response. This batch response contains a `summary` component that indicates the `totalRequests` that were part of the original batch request and `successfulRequests`i.e. queries which were executed successfully. The batch response also includes a `batchItems` array which contains a response for each and every query in the batch request. The `batchItems` will contain the results in the exact same order the original queries were sent in the batch request. Each item in `batchItems` contains `statusCode` and `response` fields. Each `response` in `batchItems` is of one of the following types:

    - [`SearchAddressReverseResponse`](https://docs.microsoft.com/rest/api/maps/search/getsearchaddressreverse#searchaddressreverseresponse) - If the query completed successfully.

    - `Error` - If the query failed. The response will contain a `code` and a `message` in this case.


  Here's a sample Batch Response with 2 _successful_ and 1 _failed_ result:



  ```json

  {
      "summary": {
          "successfulRequests": 2,
          "totalRequests": 3
      },
      "batchItems": [
          {
              "statusCode": 200,
              "response":
              {
                  "summary": {
                      "queryTime": 11
                  },
                  "addresses": [
                      {
                          "address": {
                              "country": "France",
                              "freeformAddress": "Avenue Anatole France, 75007 Paris"
                          },
                          "position": "48.858490,2.294820"
                      }
                  ]
              }
          },
          {
              "statusCode": 200,
              "response":
              {
                  "summary": {
                      "queryTime": 1
                  },
                  "addresses": [
                      {
                          "address": {
                              "country": "United States of America",
                              "freeformAddress": "157th Pl NE, Redmond WA 98052"
                          },
                          "position": "47.640470,-122.129430"
                      }
                  ]
              }
          },
          {
              "statusCode": 400,
              "response":
              {
                  "error":
                  {
                      "code": "400 BadRequest",
                      "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
                  }
              }
          }
      ]
  }

  ```
consumes: []
produces:
- application/json
paths:
- content: GET https://atlas.microsoft.com/search/address/reverse/batch/{format}?api-version=1.0
uriParameters:
- name: format
  in: path
  isRequired: true
  description: Batch id for querying the operation.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: ReverseSearchAddressBatchProcessResult
- name: 202 Accepted
  headers:
  - name: Location
    value: string
  description: >-
    **Supported only for async request.**

    Request Accepted: The request has been accepted for processing. Please use the URL in the Location Header to retry or access the results.
- name: Other Status Codes
  description: An unexpected error occurred.
  types:
  - uid: ErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
  types:
  - uid: string
definitions:
- name: ReverseSearchAddressBatchProcessResult
  description: This object is returned from a successful Search Address Reverse Batch service call.
  kind: object
  properties:
  - name: batchItems
    isReadyOnly: true
    description: Array containing the batch results.
    types:
    - uid: ReverseSearchAddressBatchItem
      isArray: true
  - name: summary
    isReadyOnly: true
    description: Summary of the results for the batch request
    types:
    - uid: Summary
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: ReverseSearchAddressBatchItem
  description: An item returned from Search Address Reverse Batch service call.
  kind: object
  properties:
  - name: response
    isReadyOnly: true
    description: The result of the query. SearchAddressReverseResponse if the query completed successfully, ErrorResponse otherwise.
    types:
    - uid: Response
  - name: statusCode
    isReadyOnly: true
    description: HTTP request status code.
    types:
    - uid: integer
- name: Summary
  description: Summary of the results for the batch request
  kind: object
  properties:
  - name: successfulRequests
    isReadyOnly: true
    description: Number of successful requests in the batch
    types:
    - uid: integer
  - name: totalRequests
    isReadyOnly: true
    description: Total number of requests in the batch
    types:
    - uid: integer
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: Response
  description: The result of the query. SearchAddressResponse if the query completed successfully, ErrorResponse otherwise.
  kind: object
  properties:
  - name: summary
    isReadyOnly: true
    description: Summary object for a Search API response
    types:
    - uid: SearchSummary
  - name: results
    isReadyOnly: true
    description: A list of Search API results.
    types:
    - uid: SearchAddressResultItem
      isArray: true
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
- name: SearchSummary
  description: Summary object for a Search API response.
  kind: object
  properties:
  - name: query
    isReadyOnly: true
    description: The query parameter that was used to produce these search results.
    types:
    - uid: string
  - name: queryType
    isReadyOnly: true
    description: 'The type of query being returned: NEARBY or NON_NEAR.'
    types:
    - uid: QueryType
  - name: queryTime
    isReadyOnly: true
    description: Time spent resolving the query, in milliseconds.
    types:
    - uid: integer
  - name: numResults
    isReadyOnly: true
    description: Number of results in the response.
    types:
    - uid: integer
  - name: limit
    isReadyOnly: true
    description: Maximum number of responses that will be returned
    types:
    - uid: integer
  - name: offset
    isReadyOnly: true
    description: The starting offset of the returned Results within the full Result set.
    types:
    - uid: integer
  - name: totalResults
    isReadyOnly: true
    description: The total number of Results found.
    types:
    - uid: integer
  - name: fuzzyLevel
    isReadyOnly: true
    description: The maximum fuzzy level required to provide Results.
    types:
    - uid: integer
  - name: geoBias
    isReadyOnly: true
    description: Indication when the internal search engine has applied a geospatial bias to improve the ranking of results.  In  some methods, this can be affected by setting the lat and lon parameters where available.  In other cases it is  purely internal.
    types:
    - uid: LatLongPairAbbreviated
- name: SearchAddressResultItem
  description: Result object for a Search API response.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: >-
      One of:

      * POI

      * Street

      * Geography

      * Point Address

      * Address Range

      * Cross Street
    types:
    - uid: SearchAddressResultType
  - name: id
    isReadyOnly: true
    description: Id property
    types:
    - uid: string
  - name: score
    isReadyOnly: true
    description: The value within a result set to indicate the relative matching score between results.  You can use this to  determine that result x is twice as likely to be as relevant as result y if the value of x is 2x the value of y.   The values vary between queries and is only meant as a relative value for one result set.
    types:
    - uid: number
  - name: dist
    isReadyOnly: true
    description: Straight line distance between the result and geobias location in meters.
    types:
    - uid: number
  - name: info
    isReadyOnly: true
    description: Information about the original data source of the Result. Used for support requests.
    types:
    - uid: string
  - name: entityType
    isReadyOnly: true
    description: Geography entity type. Present only when entityType was requested and is available.
    types:
    - uid: GeographicEntityType
  - name: poi
    isReadyOnly: true
    description: Details of the returned POI including information such as the name, phone, url address, and classifications.
    types:
    - uid: PointOfInterest
  - name: address
    isReadyOnly: true
    description: The address of the result
    types:
    - uid: Address
  - name: position
    description: A location represented as a latitude and longitude using short names 'lat' & 'lon'.
    types:
    - uid: LatLongPairAbbreviated
  - name: viewport
    isReadyOnly: true
    description: The viewport that covers the result represented by the top-left and bottom-right coordinates of the viewport.
    types:
    - uid: BoundingBox
  - name: entryPoints
    isReadyOnly: true
    description: Array of EntryPoints. Those describe the types of entrances available at the location. The type can be "main" for main entrances such as a front door, or a lobby, and "minor", for side and back doors.
    types:
    - uid: EntryPoint
      isArray: true
  - name: addressRanges
    isReadyOnly: true
    description: Describes the address range on both sides of the street for a search result. Coordinates for the start and end locations of the address range are included.
    types:
    - uid: AddressRanges
  - name: dataSources
    isReadyOnly: true
    description: Optional section. Reference geometry id for use with the [Get Search Polygon](https://docs.microsoft.com/rest/api/maps/search/getsearchpolygon) API.
    types:
    - uid: DataSources
  - name: matchType
    isReadyOnly: true
    description: >-
      Information on the type of match.


      One of:
        * AddressPoint
        * HouseNumberRange
        * Street
    types:
    - uid: MatchType
  - name: detourTime
    isReadyOnly: true
    description: Detour time in seconds. Only returned for calls to the Search Along Route API.
    types:
    - uid: integer
- name: QueryType
  description: 'The type of query being returned: NEARBY or NON_NEAR.'
  kind: enum
  properties:
  - name: NEARBY
    description: Search was performed around a certain latitude and longitude with a defined radius
    types:
    - uid: string
  - name: NON_NEAR
    description: Search was performed globally, without biasing to a certain latitude and longitude, and no defined radius
    types:
    - uid: string
- name: LatLongPairAbbreviated
  description: A location represented as a latitude and longitude using short names 'lat' & 'lon'.
  kind: object
  properties:
  - name: lat
    description: Latitude property
    types:
    - uid: number
  - name: lon
    description: Longitude property
    types:
    - uid: number
- name: SearchAddressResultType
  description: >-
    One of:

    * POI

    * Street

    * Geography

    * Point Address

    * Address Range

    * Cross Street
  kind: enum
  properties:
  - name: POI
    types:
    - uid: string
  - name: Street
    types:
    - uid: string
  - name: Geography
    types:
    - uid: string
  - name: Point Address
    types:
    - uid: string
  - name: Address Range
    types:
    - uid: string
  - name: Cross Street
    types:
    - uid: string
- name: GeographicEntityType
  description: Geography entity type. Present only when entityType was requested and is available.
  kind: enum
  properties:
  - name: Country
    description: Country name
    types:
    - uid: string
  - name: CountrySubdivision
    description: State or Province
    types:
    - uid: string
  - name: CountrySecondarySubdivision
    description: County
    types:
    - uid: string
  - name: CountryTertiarySubdivision
    description: Named Area
    types:
    - uid: string
  - name: Municipality
    description: City / Town
    types:
    - uid: string
  - name: MunicipalitySubdivision
    description: Sub / Super City
    types:
    - uid: string
  - name: Neighbourhood
    description: Neighbourhood
    types:
    - uid: string
  - name: PostalCodeArea
    description: Postal Code / Zip Code
    types:
    - uid: string
- name: PointOfInterest
  description: Details of the returned POI including information such as the name, phone, url address, and classifications.
  kind: object
  properties:
  - name: name
    isReadyOnly: true
    description: Name of the POI property
    types:
    - uid: string
  - name: phone
    isReadyOnly: true
    description: Telephone number property
    types:
    - uid: string
  - name: url
    isReadyOnly: true
    description: Website URL property
    types:
    - uid: string
  - name: categorySet
    isReadyOnly: true
    description: The list of the most specific POI categories
    types:
    - uid: PointOfInterestCategorySet
      isArray: true
  - name: categories
    isReadyOnly: true
    description: Categories array
    types:
    - uid: string
      isArray: true
  - name: classifications
    isReadyOnly: true
    description: Classification array
    types:
    - uid: Classification
      isArray: true
  - name: brands
    isReadyOnly: true
    description: Brands array. The name of the brand for the POI being returned.
    types:
    - uid: Brand
      isArray: true
  - name: openingHours
    description: Opening hours for a POI (Points of Interest).
    types:
    - uid: OperatingHours
- name: Address
  description: The address of the result
  kind: object
  properties:
  - name: buildingNumber
    isReadyOnly: true
    description: The building number on the street. DEPRECATED, use streetNumber instead.
    types:
    - uid: string
  - name: street
    isReadyOnly: true
    description: The street name. DEPRECATED, use streetName instead.
    types:
    - uid: string
  - name: crossStreet
    isReadyOnly: true
    description: The name of the street being crossed.
    types:
    - uid: string
  - name: streetNumber
    isReadyOnly: true
    description: The building number on the street.
    types:
    - uid: string
  - name: routeNumbers
    isReadyOnly: true
    description: The codes used to unambiguously identify the street
    types:
    - uid: string
      isArray: true
  - name: streetName
    isReadyOnly: true
    description: The street name.
    types:
    - uid: string
  - name: streetNameAndNumber
    isReadyOnly: true
    description: The street name and number.
    types:
    - uid: string
  - name: municipality
    isReadyOnly: true
    description: City / Town
    types:
    - uid: string
  - name: municipalitySubdivision
    isReadyOnly: true
    description: Sub / Super City
    types:
    - uid: string
  - name: countryTertiarySubdivision
    isReadyOnly: true
    description: Named Area
    types:
    - uid: string
  - name: countrySecondarySubdivision
    isReadyOnly: true
    description: County
    types:
    - uid: string
  - name: countrySubdivision
    isReadyOnly: true
    description: State or Province
    types:
    - uid: string
  - name: postalCode
    isReadyOnly: true
    description: Postal Code / Zip Code
    types:
    - uid: string
  - name: extendedPostalCode
    isReadyOnly: true
    description: Extended postal code (availability is dependent on the region).
    types:
    - uid: string
  - name: countryCode
    isReadyOnly: true
    description: 'Country (Note: This is a two-letter code, not a country name.)'
    types:
    - uid: string
  - name: country
    isReadyOnly: true
    description: Country name
    types:
    - uid: string
  - name: countryCodeISO3
    isReadyOnly: true
    description: ISO alpha-3 country code
    types:
    - uid: string
  - name: freeformAddress
    isReadyOnly: true
    description: An address line formatted according to the formatting rules of a Result's country of origin, or in the case of a country, its full country name.
    types:
    - uid: string
  - name: countrySubdivisionName
    isReadyOnly: true
    description: The full name of a first level of country administrative hierarchy. This field appears only in case countrySubdivision is presented in an abbreviated form. Only supported for USA, Canada, and United Kingdom.
    types:
    - uid: string
  - name: localName
    isReadyOnly: true
    description: An address component which represents the name of a geographic area or locality that groups a number of addressable objects for addressing purposes, without being an administrative unit. This field is used to build the `freeformAddress` property.
    types:
    - uid: string
  - name: boundingBox
    isReadyOnly: true
    description: The bounding box of the location.
    types:
    - uid: BoundingBoxCompassNotation
- name: BoundingBox
  description: The viewport that covers the result represented by the top-left and bottom-right coordinates of the viewport.
  kind: object
  properties:
  - name: topLeftPoint
    description: A location represented as a latitude and longitude using short names 'lat' & 'lon'.
    types:
    - uid: LatLongPairAbbreviated
  - name: btmRightPoint
    description: A location represented as a latitude and longitude using short names 'lat' & 'lon'.
    types:
    - uid: LatLongPairAbbreviated
- name: EntryPoint
  description: The entry point for the POI being returned.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The type of entry point. Value can be either _main_ or _minor_.
    types:
    - uid: EntryPointType
  - name: position
    description: A location represented as a latitude and longitude using short names 'lat' & 'lon'.
    types:
    - uid: LatLongPairAbbreviated
- name: AddressRanges
  description: Describes the address range on both sides of the street for a search result. Coordinates for the start and end locations of the address range are included.
  kind: object
  properties:
  - name: rangeLeft
    description: Address range on the left side of the street.
    types:
    - uid: string
  - name: rangeRight
    description: Address range on the right side of the street.
    types:
    - uid: string
  - name: from
    description: A location represented as a latitude and longitude using short names 'lat' & 'lon'.
    types:
    - uid: LatLongPairAbbreviated
  - name: to
    description: A location represented as a latitude and longitude using short names 'lat' & 'lon'.
    types:
    - uid: LatLongPairAbbreviated
- name: DataSources
  description: Optional section. Reference ids for use with the [Get Search Polygon](https://docs.microsoft.com/rest/api/maps/search/getsearchpolygon) API.
  kind: object
  properties:
  - name: geometry
    description: Information about the geometric shape of the result. Only present if type == Geography.
    types:
    - uid: Geometry
- name: MatchType
  description: Types of match for a reverse address search operation.
  kind: enum
  properties:
  - name: AddressPoint
    types:
    - uid: string
  - name: HouseNumberRange
    types:
    - uid: string
  - name: Street
    types:
    - uid: string
- name: PointOfInterestCategorySet
  description: POI category
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: Category ID
    types:
    - uid: integer
- name: Classification
  description: The classification for the POI being returned
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Code property
    types:
    - uid: string
  - name: names
    isReadyOnly: true
    description: Names array
    types:
    - uid: ClassificationName
      isArray: true
- name: Brand
  description: The brand associated with the POI
  kind: object
  properties:
  - name: name
    isReadyOnly: true
    description: Name of the brand
    types:
    - uid: string
- name: OperatingHours
  description: Opening hours for a POI (Points of Interest).
  kind: object
  properties:
  - name: mode
    isReadyOnly: true
    description: 'Value used in the request: none or "nextSevenDays"'
    types:
    - uid: string
  - name: timeRanges
    isReadyOnly: true
    description: List of time ranges for the next 7 days
    types:
    - uid: OperatingHoursTimeRange
      isArray: true
- name: BoundingBoxCompassNotation
  description: The bounding box of the location.
  kind: object
  properties:
  - name: northEast
    isReadyOnly: true
    description: North-east latitude,longitude coordinate of the bounding box as comma-separated floats
    types:
    - uid: string
  - name: southWest
    isReadyOnly: true
    description: South-west latitude,longitude coordinate of the bounding box as comma-separated floats
    types:
    - uid: string
  - name: entity
    isReadyOnly: true
    description: Entity type source of the bounding box. For reverse-geocoding this is always equal to position.
    types:
    - uid: Entity
- name: EntryPointType
  description: The type of entry point. Value can be either _main_ or _minor_.
  kind: enum
  properties:
  - name: main
    types:
    - uid: string
  - name: minor
    types:
    - uid: string
- name: Geometry
  description: Information about the geometric shape of the result. Only present if type == Geography.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: Pass this as geometryId to the [Get Search Polygon](https://docs.microsoft.com/rest/api/maps/search/getsearchpolygon) API to fetch geometry information for this result.
    types:
    - uid: string
- name: ClassificationName
  description: Name for the classification
  kind: object
  properties:
  - name: nameLocale
    isReadyOnly: true
    description: Name Locale property
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Name property
    types:
    - uid: string
- name: OperatingHoursTimeRange
  description: Open time range for a day
  kind: object
  properties:
  - name: startTime
    description: The point in the next 7 days range when a given POI is being opened, or the beginning of the range if it was opened before the range.
    types:
    - uid: OperatingHoursTime
  - name: endTime
    description: The point in the next 7 days range when a given POI is being closed, or the beginning of the range if it was closed before the range.
    types:
    - uid: OperatingHoursTime
- name: Entity
  description: Entity type source of the bounding box. For reverse-geocoding this is always equal to position.
  kind: enum
  properties:
  - name: position
    description: Position entity
    types:
    - uid: string
- name: OperatingHoursTime
  description: Represents a date and time
  kind: object
  properties:
  - name: date
    isReadyOnly: true
    description: Represents current calendar date in POI time zone, e.g. "2019-02-07".
    types:
    - uid: string
  - name: hour
    isReadyOnly: true
    description: Hours are in the 24 hour format in the local time of a POI; possible values are 0 - 23.
    types:
    - uid: integer
  - name: minute
    isReadyOnly: true
    description: Minutes are in the local time of a POI; possible values are 0 - 59.
    types:
    - uid: integer
examples:
- name: A Reverse Geocoding Batch API GET call containing 5 Reverse Geocoding API queries
  request:
    uri: GET https://atlas.microsoft.com/search/address/reverse/batch/11111111-2222-3333-4444-555555555555?api-version=1.0
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://atlas.microsoft.com/search/address/reverse/batch/11111111-2222-3333-4444-555555555555?api-version=1.0
      ```

  responses:
  - statusCode: "200"
    body: >-
      {
        "summary": {
          "successfulRequests": 3,
          "totalRequests": 3
        },
        "batchItems": [
          {
            "statusCode": 200,
            "response": {
              "summary": {
                "queryTime": 8,
                "numResults": 1
              },
              "addresses": [
                {
                  "address": {
                    "streetNumber": "7",
                    "routeNumbers": [],
                    "streetName": "Avenue Anatole France",
                    "streetNameAndNumber": "7 Avenue Anatole France",
                    "countryCode": "FR",
                    "countrySubdivision": "Île-de-France",
                    "countrySecondarySubdivision": "Paris",
                    "municipality": "Paris",
                    "postalCode": "75007",
                    "municipalitySubdivision": "7ème Arrondissement",
                    "country": "France",
                    "countryCodeISO3": "FRA",
                    "freeformAddress": "7 Avenue Anatole France, Paris, 75007",
                    "boundingBox": {
                      "northEast": "48.858321,2.295167",
                      "southWest": "48.858136,2.295027",
                      "entity": "position"
                    }
                  },
                  "position": "48.858231,2.295089"
                }
              ]
            }
          },
          {
            "statusCode": 200,
            "response": {
              "summary": {
                "queryTime": 8,
                "numResults": 1
              },
              "addresses": [
                {
                  "address": {
                    "routeNumbers": [],
                    "countryCode": "US",
                    "countrySubdivision": "WA",
                    "countrySecondarySubdivision": "King",
                    "countryTertiarySubdivision": "Seattle East",
                    "municipality": "Redmond",
                    "postalCode": "98052",
                    "country": "United States",
                    "countryCodeISO3": "USA",
                    "freeformAddress": "Redmond, WA 98052",
                    "boundingBox": {
                      "northEast": "47.639765,-122.128661",
                      "southWest": "47.639502,-122.129456",
                      "entity": "position"
                    },
                    "countrySubdivisionName": "Washington"
                  },
                  "position": "47.639687,-122.128677"
                }
              ]
            }
          },
          {
            "statusCode": 200,
            "response": {
              "summary": {
                "queryTime": 19,
                "numResults": 1
              },
              "addresses": [
                {
                  "address": {
                    "streetNumber": "410",
                    "routeNumbers": [],
                    "streetName": "Thomas Street",
                    "streetNameAndNumber": "410 Thomas Street",
                    "countryCode": "US",
                    "countrySubdivision": "WA",
                    "countrySecondarySubdivision": "King",
                    "countryTertiarySubdivision": "Seattle",
                    "municipality": "Seattle",
                    "postalCode": "98109",
                    "municipalitySubdivision": "Seattle, Lower Queen Anne",
                    "country": "United States",
                    "countryCodeISO3": "USA",
                    "freeformAddress": "410 Thomas Street, Seattle, WA 98109",
                    "boundingBox": {
                      "northEast": "47.620954,-122.347601",
                      "southWest": "47.620944,-122.348498",
                      "entity": "position"
                    },
                    "extendedPostalCode": "981094621",
                    "countrySubdivisionName": "Washington"
                  },
                  "position": "47.620945,-122.348175"
                }
              ]
            }
          }
        ]
      }
  - statusCode: "202"
security:
- name: AADToken
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/azure/active-directory/develop/v1-overview) Flows. When paired with [Azure role-based access](https://docs.microsoft.com/azure/role-based-access-control/overview) control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to. This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0 or v2.0](https://docs.microsoft.com/azure/active-directory/develop/azure-ad-endpoint-comparison) supports Work, School, and Guests but does not support Personal accounts."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: https://atlas.microsoft.com/.default
    description: https://atlas.microsoft.com/.default
- name: subscription-key
  type: apiKey
  description: >-
    This is a shared key that is provisioned when you [Create an Azure Maps account](https://docs.microsoft.com/azure/azure-maps/quick-demo-map-app#create-an-azure-maps-account) in the Azure portal or using PowerShell, CLI, Azure SDKs, or REST API.

     With this key, any application can access all REST API. In other words, this key can be used as a master key in the account that they are issued in.

     For publicly exposed applications, our recommendation is to use the [confidential client applications](https://docs.microsoft.com/azure/azure-maps/authentication-best-practices#confidential-client-applications) approach to access Azure Maps REST APIs so your key can be securely stored.
  in: query
- name: SAS Token
  type: apiKey
  description: >-
    This is a shared access signature token is created from the List SAS operation on the [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this token, any application is authorized to access with Azure role-based access controls and fine-grain control to the expiration, rate, and region(s) of use for the particular token. In other words, the SAS Token can be used to allow applications to control access in a more secured way than the shared key.

     For publicly exposed applications, our recommendation is to configure a specific list of allowed origins on the [Map account resource](https://aka.ms/amauth) to limit rendering abuse and regularly renew the SAS Token.
  in: header
metadata:
  description: >-
    Search Address Reverse Batch API

    Applies to: see pricing tiers.

    The Search Address Batch API sends batches of queries to Search Address Reverse API using just a
errorCodes: []
