### YamlMime:RESTOperation
uid: maps.v2.tileset.getoperation
name: Get Operation
service: Maps Creator
groupName: Tileset
apiVersion: "2.0"
summary: This path will be obtained from a call to /tilesets/create.  While in progress, an http200 will be returned with no extra headers -  followed by an http200 with Resource-Location header once successfully completed.
consumes: []
produces:
- application/json
paths:
- content: GET https://{geography}.atlas.microsoft.com/tilesets/operations/{operationId}?api-version=2.0
- content: GET https://{geography}.atlas.microsoft.com/tilesets/operations/{operationId}?subscription-key={subscription-key}&api-version=2.0
  isOptional: true
uriParameters:
- name: geography
  in: path
  isRequired: true
  description: This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu.
  types:
  - uid: string
- name: operationId
  in: path
  isRequired: true
  description: The ID to query the status for the dataset create/import request.
  types:
  - uid: string
- name: subscription-key
  in: query
  description: One of the Azure Maps keys provided from an Azure Map Account. Please refer to this [article](https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication) for details on how to manage authentication.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API. Current version is 2.0
  types:
  - uid: string
responses:
- name: 200 OK
  headers:
  - name: Resource-Location
    value: string
  description: The operation is running or complete.  If the operation was successful, use the Resource-Location header to obtain the path to the result.
  types:
  - uid: LongRunningOperationResult
- name: 400 Bad Request
  description: 'Bad request: one or more parameters were incorrectly specified or are mutually exclusive.'
  types:
  - uid: ODataErrorResponse
requestHeader: []
definitions:
- name: LongRunningOperationResult
  description: The response model for a Long-Running Operations API.
  kind: object
  properties:
  - name: operationId
    description: The Id for this long-running operation.
    types:
    - uid: string
  - name: status
    isReadyOnly: true
    description: The status state of the request.
    types:
    - uid: type
  - name: created
    isReadyOnly: true
    description: The created timestamp.
    types:
    - uid: string
  - name: error
    description: This object is returned when an error occurs in the Maps API.
    types:
    - uid: ODataError
  - name: warning
    description: This object is returned when an error occurs in the Maps API.
    types:
    - uid: ODataError
- name: ODataErrorResponse
  description: This response object is returned when an error occurs in the Maps API.
  kind: object
  properties:
  - name: error
    description: This object is returned when an error occurs in the Maps API.
    types:
    - uid: ODataError
- name: type
  description: The status state of the request.
  kind: enum
  properties:
  - name: NotStarted
    description: The request has not started processing yet.
    types:
    - uid: string
  - name: Running
    description: The request has started processing.
    types:
    - uid: string
  - name: Failed
    description: The request has one or more failures.
    types:
    - uid: string
  - name: Succeeded
    description: The request has successfully completed.
    types:
    - uid: string
- name: ODataError
  description: This object is returned when an error occurs in the Maps API.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The ODataError code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: If available, a human readable description of the error.
    types:
    - uid: string
  - name: details
    description: This object is returned when an error occurs in the Maps API.
    types:
    - uid: ODataError
      isArray: true
  - name: target
    isReadyOnly: true
    description: If available, the target causing the error.
    types:
    - uid: string
examples:
- name: Get the status of an operation which is still running
  request:
    uri: GET https://us.atlas.microsoft.com/tilesets/operations/8b1288fa-1958-4a2b-b68e-13a7i5af7d7c?subscription-key=[subscription-key]&api-version=2.0
  responses:
  - statusCode: "200"
    body: >-
      {
        "operationId": "8b1288fa-1958-4a2b-b68e-13a7i5af7d7c",
        "created": "2021-04-23T19:14:03.2452596+00:00",
        "status": "Running"
      }
  - statusCode: "400"
    body: >-
      {
        "error": {
          "code": "400 BadRequest",
          "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
        }
      }
- name: Get the status of an operation which has finished successfully
  request:
    uri: GET https://us.atlas.microsoft.com/tilesets/operations/8b1288fa-1958-4a2b-b68e-13a7i5af7d7c?subscription-key=[subscription-key]&api-version=2.0
  responses:
  - statusCode: "200"
    headers:
    - name: Resource-Location
      value: https://us.atlas.microsoft.com/tilesets/3e36b996-f6d1-b068-0fcb-dd6b014c3447?api-version=2.0
    body: >-
      {
        "operationId": "8b1288fa-1958-4a2b-b68e-13a7i5af7d7c",
        "created": "2021-04-20T22:43:14.9401559+00:00",
        "status": "Succeeded"
      }
  - statusCode: "400"
    body: >-
      {
        "error": {
          "code": "400 BadRequest",
          "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes: []
- name: subscription-key
  type: apiKey
  description: This is a shared key which is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs. With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.  For publicly exposed applications our recommendation is to use server to server access of Azure Maps REST APIs where this key can be  securely stored.
  in: query
metadata:
  description: This path will be obtained from a call to /tilesets/create.  While in progress, an http200 will be returned with no extra headers -  followed by an http200 with Resource-Location header once successfully completed.
errorCodes: []
