### YamlMime:RESTOperation
uid: maps.v2.dataset.create
name: Create
service: Maps Creator
groupName: Dataset
apiVersion: "2.0"
summary: >-
  **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).


  Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.

   This API allows the caller to create a dataset from data that was uploaded to the Azure Maps Data Service and converted using the Azure Maps Conversion Service.

  You can use this API in a scenario like uploading a DWG zip package for a building, converting the zip package using the Azure Maps Conversion Service, and creating a dataset from the converted zip package. The created dataset can be used to create tilesets using the Azure Maps Tileset Service and can be queried via the Azure Maps WFS Service.


  ### Submit Create Request


  To create your dataset, you will use a `POST` request where the `conversionId` query parameter is an ID that represents the converted DWG zip package, the `datasetId` parameter will be the ID of a previously created dataset to append with the current dataset and, optionally, the `description` query parameter will contain a description (if description is not provided a default description will be given).


  The Create API is a [long-running request](https://aka.ms/am-creator-lrt-v2).
consumes: []
produces:
- application/json
paths:
- content: POST https://{geography}.atlas.microsoft.com/datasets?api-version=2.0&conversionId={conversionId}
- content: POST https://{geography}.atlas.microsoft.com/datasets?api-version=2.0&conversionId={conversionId}&datasetId={datasetId}&description={description}
  isOptional: true
uriParameters:
- name: geography
  in: path
  isRequired: true
  description: This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API.
  types:
  - uid: string
- name: conversionId
  in: query
  isRequired: true
  description: The unique ID used to create the dataset. The `conversionId` must have been obtained from a successful call to the Conversion Service [Convert API](https://docs.microsoft.com/en-us/rest/api/maps/v2/conversion/convert) and may be provided with multiple query parameters with same name (if more than one is provided).
  types:
  - uid: string
- name: datasetId
  in: query
  description: The ID for the dataset to append with. The dataset must originate from a previous dataset creation call that matches the datasetId
  types:
  - uid: string
- name: description
  in: query
  description: The description to be given to the dataset.
  types:
  - uid: string
responses:
- name: 200 OK
  headers:
  - name: Resource-Location
    value: string
  description: The operation is running or complete. If the operation was successful, use the Resource-Location header to obtain the path to the result.
  types:
  - uid: LongRunningOperationResult
- name: 202 Accepted
  headers:
  - name: Operation-Location
    value: string
  description: 'Request Accepted: The request has been accepted for processing. Please use the URL in the Operation-Location Header to obtain status.'
- name: Other Status Codes
  description: An unexpected error occurred.
  types:
  - uid: ErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
  types:
  - uid: string
definitions:
- name: LongRunningOperationResult
  description: The response model for a Long-Running Operations API.
  kind: object
  properties:
  - name: operationId
    description: The Id for this long-running operation.
    types:
    - uid: string
  - name: status
    isReadyOnly: true
    description: The status state of the request.
    types:
    - uid: LroStatus
  - name: created
    isReadyOnly: true
    description: The created timestamp.
    types:
    - uid: string
  - name: error
    description: The error detail.
    types:
    - uid: ErrorDetail
  - name: warning
    description: The error detail.
    types:
    - uid: ErrorDetail
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: LroStatus
  description: The status state of the request.
  kind: enum
  properties:
  - name: NotStarted
    description: The request has not started processing yet.
    types:
    - uid: string
  - name: Running
    description: The request has started processing.
    types:
    - uid: string
  - name: Failed
    description: The request has one or more failures.
    types:
    - uid: string
  - name: Succeeded
    description: The request has successfully completed.
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Create dataset from a converted CAD file provided by conversionId
  request:
    uri: POST https://us.atlas.microsoft.com/datasets?api-version=2.0&conversionId=[conversionId]
  responses:
  - statusCode: "200"
    headers:
    - name: Resource-Location
      value: https://us.atlas.microsoft.com/mapData/3e36b996-f6d1-b068-0fcb-dd6b014c3447?api-version=2.0
    body: >-
      {
        "operationId": "8b1288fa-1958-4a2b-b68e-13a7i5af7d7c",
        "created": "2021-04-20T22:43:14.9401559+00:00",
        "status": "Succeeded"
      }
  - statusCode: "202"
    headers:
    - name: Operation-Location
      value: https://us.atlas.microsoft.com/datasets/operations/{operationId}?api-version=2.0
    - name: Access-Control-Expose-Headers
      value: Operation-Location
security:
- name: AADToken
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/azure/active-directory/develop/v1-overview) Flows. When paired with [Azure role-based access](https://docs.microsoft.com/azure/role-based-access-control/overview) control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to. This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0 or v2.0](https://docs.microsoft.com/azure/active-directory/develop/azure-ad-endpoint-comparison) supports Work, School, and Guests but does not support Personal accounts."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: https://atlas.microsoft.com/.default
    description: https://atlas.microsoft.com/.default
- name: subscription-key
  type: apiKey
  description: >-
    This is a shared key that is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.

     For publicly exposed applications, our recommendation is to use server-to-server access of Azure Maps REST APIs where this key can be securely stored.
  in: query
- name: SAS Token
  type: apiKey
  description: >-
    This is a shared access signature token is created from the List SAS operation on the [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this token, any application is authorized to access with Azure role-based access controls and fine-grain control to the expiration, rate, and region(s) of use for the particular token. In other words, the SAS Token can be used to allow applications to control access in a more secured way than the shared key.

     For publicly exposed applications, our recommendation is to configure a specific list of allowed origins on the [Map account resource](https://aka.ms/amauth) to limit rendering abuse and regularly renew the SAS Token.
  in: header
metadata:
  description: >-
    **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).


    Creator makes it possible to develop applications based on your private indoor map da
errorCodes: []
