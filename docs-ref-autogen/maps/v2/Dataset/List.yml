### YamlMime:RESTOperation
uid: maps.v2.dataset.list
name: List
service: Maps Creator
groupName: Dataset
apiVersion: "2.0"
summary: >-
  **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).


  Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.


  This API allows the caller to fetch a list of all previously successfully created datasets.


  ### Submit List Request


  To list all your datasets, you will issue a `GET` request with no additional parameters.



  ### List Data Response


  The List API returns the complete list of all datasets in `json` format. The response contains the following fields (if they are not null or empty):

  > created - The timestamp the dataset was created.

  > datasetId - The id for the dataset.

  > description - The description for the dataset.

  > datasetSources - The source data that was used when the create request was issued.

  > ontology - The source [ontology](https://docs.microsoft.com/en-us/azure/azure-maps/creator-facility-ontology) that was used in the conversion service for the input data.<br/>


  The `datasetSources` describes the source data that was used when the create request was issued and contains the following elements (if they are not null or empty):


  > conversionIds - The list of `conversionId` (null if none were provided).

  > appendDatasetId - The `datasetId` that was used for an append operation (null if none was used).

  >featureCounts - The counts for each feature type in the dataset.<br/>


  Here's a sample response returning the `timestamp`, `datasetId`, `description`, `datasetSources`, and `ontology` of 3 dataset resources:



  ```json

  {
    "datasets": [
      {
        "timestamp": "2020-01-01T22:50:48.123Z",
        "datasetId": "f6495f62-94f8-0ec2-c252-45626f82fcb2",
        "description": "Some description or comment for the dataset.",
        "datasetSources": {
          "conversionIds": [
            "15d21452-c9bb-27b6-5e79-743ca5c3205d"
          ],      },
        "": "facility-2.0",
        "featureCounts": {
          "directoryInfo": 2,
          "category": 10,
          "facility": 1,
          "level": 3,
          "unit": 183,
          "zone": 3,
          "verticalPenetration": 6,
          "opening": 48,
          "areaElement": 108
        }
      },
      {
        "timestamp": "2020-01-01T22:57:53.123Z",
        "datasetId": "8b1288fa-1958-4a2b-b68e-13a7i5af7d7c",
        "description": "Create from upload '0c1288fa-2058-4a1b-b68d-13a5f5af7d7c'.",
        "datasetSources": {
          "conversionIds": [
            "0c1288fa-2058-4a1b-b68d-13a5f5af7d7c"
          ],
          "appendDatasetId": "46d1edb6-d29e-4786-9589-dbd4efd7a977"
        },
        "ontology": "facility-2.0",
        "featureCounts": {
          "directoryInfo": 2,
          "category": 10,
          "facility": 1,
          "level": 3,
          "unit": 183,
          "zone": 3,
          "verticalPenetration": 6,
          "opening": 48,
          "areaElement": 108
        }
      }
    ]
  }

  ```
consumes: []
produces:
- application/json
paths:
- content: GET https://{geography}.atlas.microsoft.com/datasets?api-version=2.0
uriParameters:
- name: geography
  in: path
  isRequired: true
  description: This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The dataset request completed successfully. The response body contains the previously created dataset.
  types:
  - uid: DatasetListResult
- name: Other Status Codes
  description: An unexpected error occurred.
  types:
  - uid: ErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
  types:
  - uid: string
definitions:
- name: DatasetListResult
  description: The response model for the Dataset List API. The response body will contain a list of all the previously created datasets.
  kind: object
  properties:
  - name: datasets
    isReadyOnly: true
    description: A list of all the previously created datasets.
    types:
    - uid: Dataset
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: If present, the location of the next page of data.
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: Dataset
  description: Detail information for the dataset.
  kind: object
  properties:
  - name: created
    isReadyOnly: true
    description: The created timestamp for the dataset.
    types:
    - uid: string
  - name: datasetId
    isReadyOnly: true
    description: The id for the dataset.
    types:
    - uid: string
  - name: ontology
    isReadyOnly: true
    description: The ontology version of this dataset.
    types:
    - uid: string
  - name: description
    isReadyOnly: true
    description: The description for the dataset.
    types:
    - uid: string
  - name: datasetSources
    description: Information about the details of the create request for the dataset.
    types:
    - uid: DatasetSources
  - name: featureCounts
    isReadyOnly: true
    description: The feature counts for the dataset.
    types:
    - uid: object
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: DatasetSources
  description: Information about the details of the create request for the dataset.
  kind: object
  properties:
  - name: conversionIds
    isReadyOnly: true
    description: The list of `conversionId` that were used to create the dataset.
    types:
    - uid: string
      isArray: true
  - name: appendDatasetId
    isReadyOnly: true
    description: The dataset that was appended to to create the current dataset.
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: List all the previously created datasets
  request:
    uri: GET https://us.atlas.microsoft.com/datasets?api-version=2.0
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://us.atlas.microsoft.com/datasets?api-version=2.0
      ```

  responses:
  - statusCode: "200"
    body: >-
      {
        "datasets": [
          {
            "created": "2021-05-21T03:04:05.678Z",
            "datasetId": "f6495f62-94f8-0ec2-c252-45626f82fcb2",
            "description": "Some description or comment for the dataset.",
            "datasetSources": {
              "conversionIds": [
                "db63843c-3c70-4b4e-94ff-dfcf4013c4a9"
              ]
            },
            "featureCounts": {
              "directoryInfo": 1,
              "category": 18,
              "facility": 1,
              "level": 6,
              "unit": 775,
              "opening": 471,
              "areaElement": 496
            },
            "ontology": "facility-2.0"
          },
          {
            "created": "2021-05-21T03:04:05.678Z",
            "datasetId": "7c1288fa-2058-4a1b-b68f-13a6h5af7d7c",
            "description": "Some other description or comment for the dataset.",
            "datasetSources": {
              "conversionIds": [
                "15d21452-c9bb-27b6-5e79-743ca5c3205d"
              ],
              "appendDatasetId": "8b1288fa-1958-4a2b-b68e-13a7i5af7d7c"
            },
            "featureCounts": {
              "directoryInfo": 2,
              "category": 10,
              "facility": 1,
              "level": 3,
              "unit": 183,
              "zone": 3,
              "verticalPenetration": 6,
              "opening": 48,
              "areaElement": 108
            },
            "ontology": "facility-2.0"
          }
        ]
      }
security:
- name: AADToken
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/azure/active-directory/develop/v1-overview) Flows. When paired with [Azure role-based access](https://docs.microsoft.com/azure/role-based-access-control/overview) control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to. This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0 or v2.0](https://docs.microsoft.com/azure/active-directory/develop/azure-ad-endpoint-comparison) supports Work, School, and Guests but does not support Personal accounts."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: https://atlas.microsoft.com/.default
    description: https://atlas.microsoft.com/.default
- name: subscription-key
  type: apiKey
  description: >-
    This is a shared key that is provisioned when you [Create an Azure Maps account](https://docs.microsoft.com/azure/azure-maps/quick-demo-map-app#create-an-azure-maps-account) in the Azure portal or using PowerShell, CLI, Azure SDKs, or REST API.

     With this key, any application can access all REST API. In other words, this key can be used as a master key in the account that they are issued in.

     For publicly exposed applications, our recommendation is to use the [confidential client applications](https://docs.microsoft.com/azure/azure-maps/authentication-best-practices#confidential-client-applications) approach to access Azure Maps REST APIs so your key can be securely stored.
  in: query
- name: SAS Token
  type: apiKey
  description: >-
    This is a shared access signature token is created from the List SAS operation on the [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this token, any application is authorized to access with Azure role-based access controls and fine-grain control to the expiration, rate, and region(s) of use for the particular token. In other words, the SAS Token can be used to allow applications to control access in a more secured way than the shared key.

     For publicly exposed applications, our recommendation is to configure a specific list of allowed origins on the [Map account resource](https://aka.ms/amauth) to limit rendering abuse and regularly renew the SAS Token.
  in: header
metadata:
  description: >-
    Applies to: see pricing tiers.

    Creator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK.
errorCodes: []
