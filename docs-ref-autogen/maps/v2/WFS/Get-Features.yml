### YamlMime:RESTOperation
uid: maps.v2.wfs.getfeatures
name: Get Features
service: Maps Creator
groupName: WFS
apiVersion: "2.0"
summary: "**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\n\n The Web Feature Service (WFS) API is part of  Creator. WFS API follows the [Open Geospatial Consortium API standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/v2/dataset/create). \nA dataset consists of multiple feature collections. A feature collection is a collection of features of a similar type, based on a common schema.\nThe Get Features API returns the list of features in the given collection."
consumes: []
produces:
- application/json
paths:
- content: GET https://{geography}.atlas.microsoft.com/wfs/datasets/{datasetId}/collections/{collectionId}/items?api-version=2.0
- content: GET https://{geography}.atlas.microsoft.com/wfs/datasets/{datasetId}/collections/{collectionId}/items?api-version=2.0&limit={limit}&bbox={bbox}&filter={filter}
  isOptional: true
uriParameters:
- name: geography
  in: path
  isRequired: true
  description: This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu.
  types:
  - uid: string
- name: datasetId
  in: path
  isRequired: true
  description: The identifier for the dataset to query from.
  types:
  - uid: string
- name: collectionId
  in: path
  isRequired: true
  description: Identifier (name) of a specific collection
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API.
  types:
  - uid: string
- name: limit
  in: query
  description: >-
    The optional limit parameter limits the number of features that are presented in the response document.

    Only features that are on the first level of the collection in the response document are counted. Nested objects contained within the explicitly requested features shall not be counted.

    * Minimum = 1 * Maximum = 500 * Default = 10
  types:
  - uid: integer
- name: bbox
  in: query
  description: >-
    Only features that have a geometry that intersects the supplied bounding box are selected.

    * Lower left corner, coordinate axis 1 * Lower left corner, coordinate axis 2 * Upper right corner, coordinate axis 1 * Upper right corner, coordinate axis 2

    The coordinate reference system of the values is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`.

    For WGS84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
  types:
  - uid: array
- name: filter
  in: query
  description: >-
    Filter expression to search for features with specific property values in a given collection. Only feature properties of scalar type and equals operator are supported.

    This is a special parameter where the parameter name is a case sensitive property name. The scheme for this parameter is {property name}={property value}. Unless "filter" is one of the property names in the collection, "filter" should not be used as a parameter name. To search for features with "name" property value "21N13", use "name=21N13".

    Multiple filters are supported and should be represented as multiple query parameters. E.g., <property1>=<value1>&<property2>=<value2> String values are case sensitive.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Ok
  types:
  - uid: ExtendedGeoJsonFeatureCollection
- name: Other Status Codes
  description: An unexpected error occurred.
  types:
  - uid: ErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
  types:
  - uid: string
definitions:
- name: ExtendedGeoJsonFeatureCollection
  description: A valid `GeoJSON FeatureCollection` object type extended with numberReturned and links array. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.3) for details.
  kind: object
  properties:
  - name: type
    description: 'Specifies the `GeoJSON` type: FeatureCollection.'
    types:
    - uid: GeoJsonObjectType
  - name: features
    description: Contains a list of valid `GeoJSON Feature` objects.
    types:
    - uid: GeoJsonFeature
      isArray: true
  - name: ontology
    isReadyOnly: true
    description: The ontology version of this dataset.
    types:
    - uid: string
  - name: numberReturned
    description: Number of returned features.
    types:
    - uid: integer
  - name: links
    description: Links to other WFS endpoints.
    types:
    - uid: WFSEndpointLink
      isArray: true
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: GeoJsonObjectType
  description: 'Specifies the `GeoJSON` type: FeatureCollection.'
  kind: enum
  properties:
  - name: FeatureCollection
    description: '`GeoJSON FeatureCollection` object.'
    types:
    - uid: string
- name: GeoJsonFeature
  description: A valid `GeoJSON Feature` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.2) for details.
  kind: object
  properties:
  - name: type
    description: Specifies the `GeoJSON` type. Must be one of the nine valid GeoJSON object types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon, GeometryCollection, Feature and FeatureCollection.
    types:
    - uid: Feature
    typesTitle: string
  - name: geometry
    description: A valid `GeoJSON` geometry object. The type must be one of the seven valid GeoJSON geometry types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon and GeometryCollection. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1) for details.
    types:
    - uid: GeoJsonPoint
    - uid: GeoJsonMultiPoint
    - uid: GeoJsonLineString
    - uid: GeoJsonMultiLineString
    - uid: GeoJsonPolygon
    - uid: GeoJsonMultiPolygon
    - uid: GeoJsonGeometryCollection
    typesTitle: GeoJsonGeometry
  - name: id
    description: Identifier for the feature.
    types:
    - uid: string
  - name: featureType
    description: The type of the feature. The value depends on the data model the current feature is part of. Some data models may have an empty value.
    types:
    - uid: string
- name: WFSEndpointLink
  description: Links to other WFS endpoints
  kind: object
  properties:
  - name: href
    description: The link target.
    types:
    - uid: string
  - name: rel
    description: The relation type.
    types:
    - uid: string
  - name: type
    description: A hint indicating what the media type of the result of dereferencing the link should be.
    types:
    - uid: string
  - name: hreflang
    description: A hint indicating what the language of the result of dereferencing the link should be.
    types:
    - uid: string
  - name: title
    description: Used to label the destination of a link such that it can be used as a human-readable identifier (e.g., a menu entry) in the language indicated by the Content-Language header field (if present).
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: GeoJsonGeometry
  description: A valid `GeoJSON` geometry object. The type must be one of the seven valid GeoJSON geometry types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon and GeometryCollection. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1) for details.
  kind: object
  properties:
  - name: type
    description: Specifies the `GeoJSON` type. Must be one of the nine valid GeoJSON object types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon, GeometryCollection, Feature and FeatureCollection.
    types:
    - uid: GeoJsonObjectType
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
- name: GeoJsonPoint
  description: A valid `GeoJSON Point` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.2) for details.
  kind: object
  properties:
  - name: type
    description: Specifies the `GeoJSON` type. Must be one of the nine valid GeoJSON object types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon, GeometryCollection, Feature and FeatureCollection.
    types:
    - uid: Point
    typesTitle: string
  - name: coordinates
    description: A `Position` is an array of numbers with two or more elements. The first two elements are _longitude_ and _latitude_, precisely in that order. _Altitude/Elevation_ is an optional third element. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.1) for details.
    types:
    - uid: number
      isArray: true
- name: GeoJsonMultiPoint
  description: A valid `GeoJSON MultiPoint` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.3) for details.
  kind: object
  properties:
  - name: type
    description: Specifies the `GeoJSON` type. Must be one of the nine valid GeoJSON object types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon, GeometryCollection, Feature and FeatureCollection.
    types:
    - uid: MultiPoint
    typesTitle: string
  - name: coordinates
    description: Coordinates for the `GeoJson MultiPoint` geometry.
    types:
    - uid: array
      isArray: true
- name: GeoJsonLineString
  description: A valid `GeoJSON LineString` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.4) for details.
  kind: object
  properties:
  - name: type
    description: Specifies the `GeoJSON` type. Must be one of the nine valid GeoJSON object types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon, GeometryCollection, Feature and FeatureCollection.
    types:
    - uid: LineString
    typesTitle: string
  - name: coordinates
    description: Coordinates for the `GeoJson LineString` geometry.
    types:
    - uid: array
      isArray: true
- name: GeoJsonMultiLineString
  description: A valid `GeoJSON MultiLineString` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.5) for details.
  kind: object
  properties:
  - name: type
    description: Specifies the `GeoJSON` type. Must be one of the nine valid GeoJSON object types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon, GeometryCollection, Feature and FeatureCollection.
    types:
    - uid: MultiLineString
    typesTitle: string
  - name: coordinates
    description: Coordinates for the `GeoJson MultiLineString` geometry.
    types:
    - uid: array
      isArray: true
- name: GeoJsonPolygon
  description: A valid `GeoJSON Polygon` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.6) for details.
  kind: object
  properties:
  - name: type
    description: Specifies the `GeoJSON` type. Must be one of the nine valid GeoJSON object types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon, GeometryCollection, Feature and FeatureCollection.
    types:
    - uid: Polygon
    typesTitle: string
  - name: coordinates
    description: Coordinates for the `GeoJson Polygon` geometry type.
    types:
    - uid: array
      isArray: true
- name: GeoJsonMultiPolygon
  description: A valid `GeoJSON MultiPolygon` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.7) for details.
  kind: object
  properties:
  - name: type
    description: Specifies the `GeoJSON` type. Must be one of the nine valid GeoJSON object types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon, GeometryCollection, Feature and FeatureCollection.
    types:
    - uid: MultiPolygon
    typesTitle: string
  - name: coordinates
    description: Contains a list of valid `GeoJSON Polygon` objects. **Note** that coordinates in GeoJSON are in x, y order (longitude, latitude).
    types:
    - uid: array
      isArray: true
- name: GeoJsonGeometryCollection
  description: A valid `GeoJSON GeometryCollection` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.8) for details.
  kind: object
  properties:
  - name: type
    description: Specifies the `GeoJSON` type. Must be one of the nine valid GeoJSON object types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon, GeometryCollection, Feature and FeatureCollection.
    types:
    - uid: GeometryCollection
    typesTitle: string
  - name: geometries
    description: Contains a list of valid `GeoJSON` geometry objects. **Note** that coordinates in GeoJSON are in x, y order (longitude, latitude).
    types:
    - uid: GeoJsonPoint
      isArray: true
    - uid: GeoJsonMultiPoint
      isArray: true
    - uid: GeoJsonLineString
      isArray: true
    - uid: GeoJsonMultiLineString
      isArray: true
    - uid: GeoJsonPolygon
      isArray: true
    - uid: GeoJsonMultiPolygon
      isArray: true
    - uid: GeoJsonGeometryCollection
      isArray: true
    typesTitle: GeoJsonGeometry[]
examples:
- name: GetFeatures
  request:
    uri: GET https://us.atlas.microsoft.com/wfs/datasets/018fda98-e638-0edf-5ef7-28491ff3bed4/collections/unit/items?api-version=2.0&limit=1&bbox=-122, 47, -120, 46
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://us.atlas.microsoft.com/wfs/datasets/018fda98-e638-0edf-5ef7-28491ff3bed4/collections/unit/items?api-version=2.0&limit=1&bbox=-122, 47, -120, 46
      ```

  responses:
  - statusCode: "200"
    body: >-
      {
        "type": "FeatureCollection",
        "ontology": "Facility-2.0",
        "features": [
          {
            "type": "Feature",
            "geometry": {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    139.6330405782921,
                    35.45768668610856
                  ],
                  [
                    139.63296283234274,
                    35.45778390425868
                  ],
                  [
                    139.63308672404617,
                    35.45785022906202
                  ],
                  [
                    139.6331451691671,
                    35.45777714569986
                  ],
                  [
                    139.6331274703629,
                    35.45776767074717
                  ],
                  [
                    139.63314677109963,
                    35.45774353588138
                  ],
                  [
                    139.6330405782921,
                    35.45768668610856
                  ]
                ]
              ]
            },
            "properties": {
              "originalId": "ddbbb583-4621-4e11-8859-299d1057e843",
              "categoryId": "CTG10",
              "isOpenArea": false,
              "navigableBy": [
                "pedestrian"
              ],
              "isRoutable": false,
              "routeThroughBehavior": "allowed",
              "nonPublic": false,
              "levelId": "LVL18",
              "occupants": [],
              "addressId": "DIR16",
              "addressRoomNumber": "",
              "name": "21N13",
              "nameSubtitle": "",
              "nameAlt": ""
            },
            "id": "UNIT39",
            "featureType": ""
          }
        ],
        "numberReturned": 1,
        "links": [
          {
            "href": "https://us.atlas.microsoft.com/wfs/dataset/218fda98-e638-0edf-5ef7-28491ff3bed4/collections/unit/items?api-version=2.0&limit=1",
            "rel": "self"
          },
          {
            "href": "https://us.atlas.microsoft.com/wfs/dataset/218fda98-e638-0edf-5ef7-28491ff3bed4/collections/unit?api-version=2.0",
            "rel": "data"
          },
          {
            "href": "https://us.atlas.microsoft.com/wfs/dataset/218fda98-e638-0edf-5ef7-28491ff3bed4/collections/unit/items?n=PMRG4ZLYOQRDUMJMEJYHEZLWEI5C2ML5&api-version=2.0&limit=1",
            "rel": "next"
          }
        ]
      }
security:
- name: AADToken
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/azure/active-directory/develop/v1-overview) Flows. When paired with [Azure role-based access](https://docs.microsoft.com/azure/role-based-access-control/overview) control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to. This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0 or v2.0](https://docs.microsoft.com/azure/active-directory/develop/azure-ad-endpoint-comparison) supports Work, School, and Guests but does not support Personal accounts."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: https://atlas.microsoft.com/.default
    description: https://atlas.microsoft.com/.default
- name: subscription-key
  type: apiKey
  description: >-
    This is a shared key that is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.

     For publicly exposed applications, our recommendation is to use server-to-server access of Azure Maps REST APIs where this key can be securely stored.
  in: query
- name: SAS Token
  type: apiKey
  description: >-
    This is a shared access signature token is created from the List SAS operation on the [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this token, any application is authorized to access with Azure role-based access controls and fine-grain control to the expiration, rate, and region(s) of use for the particular token. In other words, the SAS Token can be used to allow applications to control access in a more secured way than the shared key.

     For publicly exposed applications, our recommendation is to configure a specific list of allowed origins on the [Map account resource](https://aka.ms/amauth) to limit rendering abuse and regularly renew the SAS Token.
  in: header
metadata:
  description: >-
    **Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).


    Creator makes it possible to develop applications based on your private indoor map da
errorCodes: []
