### YamlMime:RESTOperation
uid: maps.v2.wfs.collectiondefinition
name: Collection Definition
service: Maps Creator
groupName: WFS
apiVersion: "2.0"
summary: "**Applies to:** see pricing [tiers](https://aka.ms/AzureMapsPricingTier).\n\nCreator makes it possible to develop applications based on your private indoor map data using Azure Maps API and SDK. [This](https://docs.microsoft.com/azure/azure-maps/creator-indoor-maps) article introduces concepts and tools that apply to Azure Maps Creator.\n\n The Web Feature Service (WFS) API is part of Creator. WFS API follows the [Open Geospatial Consortium API standard for Features](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html) to query [Datasets](https://docs.microsoft.com/en-us/rest/api/maps/dataset/createpreview). \nA dataset consists of multiple feature collections. A feature collection is a collection of features of a similar type, based on a common schema.\n \nThe Collection Definition API provides the detailed data model of a given collection."
consumes: []
produces:
- application/json
- application/xml
paths:
- content: GET https://{geography}.atlas.microsoft.com/wfs/datasets/{datasetid}/collections/{collectionId}/definition?api-version=2.0
- content: GET https://{geography}.atlas.microsoft.com/wfs/datasets/{datasetid}/collections/{collectionId}/definition?subscription-key={subscription-key}&api-version=2.0
  isOptional: true
uriParameters:
- name: geography
  in: path
  isRequired: true
  description: This parameter specifies where the Azure Maps Creator resource is located.  Valid values are us and eu.
  types:
  - uid: string
- name: datasetid
  in: path
  isRequired: true
  description: The identifier for the dataset to query from.
  types:
  - uid: string
- name: collectionId
  in: path
  isRequired: true
  description: Identifier (name) of a specific collection
  types:
  - uid: string
- name: subscription-key
  in: query
  description: One of the Azure Maps keys provided from an Azure Map Account. Please refer to this [article](https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication) for details on how to manage authentication.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API. Current version is 2.0
  types:
  - uid: string
responses:
- name: 200 OK
  description: Ok
  types:
  - uid: CollectionDefinition
- name: 400 Bad Request
  description: 'Bad request: one or more parameters were incorrectly specified or are mutually exclusive.'
  types:
  - uid: ODataErrorResponse
- name: 401 Unauthorized
  headers:
  - name: WWW-Authenticate
    value: string
  description: Access denied due to invalid subscription key or invalid Azure Active Directory bearer token.  Make sure to provide a valid key for an active Azure subscription and Maps resource.  Otherwise, verify the [WWW-Authenticate](https://tools.ietf.org/html/rfc6750#section-3.1) header for error code and description of the provided AAD bearer token.
  types:
  - uid: ODataErrorResponse
- name: 403 Forbidden
  description: Permission, capacity, or authentication issues.
  types:
  - uid: ODataErrorResponse
- name: 404 Not Found
  description: 'Not Found: the requested resource could not be found, but it may be available again in the future.'
  types:
  - uid: ODataErrorResponse
- name: 500 Internal Server Error
  description: An error occurred while processing the request. Please try again later.
  types:
  - uid: ODataErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
  types:
  - uid: string
definitions:
- name: CollectionDefinition
  description: collection of GeoJSON features
  kind: object
  properties:
  - name: description
    description: describes the collection
    types:
    - uid: string
  - name: idPrefix
    description: prefix of the collection used
    types:
    - uid: string
  - name: name
    description: identifier of the collection used, for example, in URIs
    types:
    - uid: string
  - name: title
    description: title of collection
    types:
    - uid: string
  - name: ontology
    isReadyOnly: true
    description: The ontology version of this dataset. Please refer to this [article](https://docs.microsoft.com/en-us/azure/azure-maps/creator-facility-ontology) for more information about Azure Maps Creator ontologies.
    types:
    - uid: string
  - name: geometryType
    description: type of geometry returned
    types:
    - uid: Point
    - uid: MultiPoint
    - uid: LineString
    - uid: MultiLineString
    - uid: Polygon
    - uid: MultiPolygon
    - uid: GeometryCollection
    typesTitle: enum
  - name: featureTypes
    description: type of features returned
    types:
    - uid: string
      isArray: true
  - name: properties
    description: attributes of the collection used
    types:
    - uid: DefinitionProperties
      isArray: true
  - name: links
    description: Links to other WFS endpoints
    types:
    - uid: Link
      isArray: true
- name: ODataErrorResponse
  description: This response object is returned when an error occurs in the Maps API.
  kind: object
  properties:
  - name: error
    description: This object is returned when an error occurs in the Maps API.
    types:
    - uid: ODataError
- name: DefinitionProperties
  kind: object
  properties:
  - name: name
    description: name of attribute
    types:
    - uid: string
  - name: required
    description: is attribute required
    types:
    - uid: boolean
  - name: type
    description: type of attribute
    types:
    - uid: object
- name: Link
  description: Links to other WFS endpoints
  kind: object
  properties:
  - name: href
    description: ''
    types:
    - uid: string
  - name: rel
    description: ''
    types:
    - uid: string
  - name: type
    description: ''
    types:
    - uid: string
  - name: hreflang
    description: ''
    types:
    - uid: string
  - name: title
    description: ''
    types:
    - uid: string
- name: ODataError
  description: This object is returned when an error occurs in the Maps API.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The ODataError code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: If available, a human readable description of the error.
    types:
    - uid: string
  - name: details
    description: This object is returned when an error occurs in the Maps API.
    types:
    - uid: ODataError
      isArray: true
  - name: target
    isReadyOnly: true
    description: If available, the target causing the error.
    types:
    - uid: string
examples:
- name: GetCollectionDefinition
  request:
    uri: GET https://us.atlas.microsoft.com/wfs/datasets/018fda98-e638-0edf-5ef7-28491ff3bed4/collections/unit/definition?subscription-key=[subscription-key]&api-version=2.0
  responses:
  - statusCode: "200"
    body: >-
      {
        "idPrefix": "UNIT",
        "name": "unit",
        "description": "A physical and non-overlapping area which might be occupied and traversed by a navigating agent. Can be a hallway, a room, a courtyard, etc. It is surrounded by physical obstruction (wall), unless the isOpenArea attribute is equal to true, and one must add openings where the obstruction shouldn't be there. If isOpenArea attribute is equal to true, all the sides are assumed open to the surroundings and walls are to be added where needed. Walls for open areas are represented as a lineElement or areaElement with isObstruction equal to true.",
        "ontology": "Facility-2.0",
        "geometryType": "Polygon",
        "featureTypes": [],
        "properties": [
          {
            "name": "externalId",
            "required": false,
            "type": "text"
          },
          {
            "name": "originalId",
            "required": false,
            "type": "text"
          },
          {
            "name": "categoryId",
            "required": true,
            "type": {
              "featureId": "category"
            }
          },
          {
            "name": "isOpenArea",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigableBy",
            "required": false,
            "type": {
              "array": {
                "enum": [
                  "pedestrian",
                  "wheelchair",
                  "machine",
                  "bicycle",
                  "automobile",
                  "hiredAuto",
                  "bus",
                  "railcar",
                  "emergency",
                  "ferry",
                  "boat"
                ]
              }
            }
          },
          {
            "name": "isRoutable",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "routeThroughBehavior",
            "required": false,
            "type": {
              "enum": [
                "disallowed",
                "allowed",
                "preferred"
              ]
            }
          },
          {
            "name": "nonPublic",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "levelId",
            "required": true,
            "type": {
              "featureId": "level"
            }
          },
          {
            "name": "occupants",
            "required": false,
            "type": {
              "array": {
                "featureId": "directoryInfo"
              }
            }
          },
          {
            "name": "addressId",
            "required": false,
            "type": {
              "featureId": "directoryInfo"
            }
          },
          {
            "name": "addressRoomNumber",
            "required": false,
            "type": "text"
          },
          {
            "name": "name",
            "required": false,
            "type": "text"
          },
          {
            "name": "nameSubtitle",
            "required": false,
            "type": "text"
          },
          {
            "name": "nameAlt",
            "required": false,
            "type": "text"
          },
          {
            "name": "anchorPoint",
            "required": false,
            "type": {
              "geometry": [
                "Point"
              ],
              "isFragmented": false,
              "srid": 4326
            }
          }
        ],
        "links": [
          {
            "href": "https://us.atlas.microsoft.com/wfs/dataset/4a25a249-8bd4-3f78-8cd8-eff11751d35b/collections/unit/definition?api-version=1.0",
            "rel": "self",
            "title": "Metadata catalogue for unit"
          },
          {
            "href": "https://us.atlas.microsoft.com/wfs/dataset/4a25a249-8bd4-3f78-8cd8-eff11751d35b/collections/unit/items?api-version=1.0",
            "rel": "data",
            "title": "unit"
          }
        ]
      }
  - statusCode: "400"
    body: >-
      {
        "error": {
          "code": "400 BadRequest",
          "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
        }
      }
  - statusCode: "401"
    body: >-
      {
        "error": {
          "code": "401 Unauthorized",
          "message": "Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription."
        }
      }
  - statusCode: "403"
    body: >-
      {
        "error": {
          "code": "403 Forbidden",
          "message": "Permission, capacity, or authentication issues."
        }
      }
  - statusCode: "404"
    body: >-
      {
        "error": {
          "code": "404 NotFound",
          "message": "Not Found: the requested resource could not be found, but it may be available again in the future."
        }
      }
  - statusCode: "500"
    body: >-
      {
        "error": {
          "code": "500 InternalServerError",
          "message": "An error occurred while processing the request. Please try again later."
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes: []
- name: subscription-key
  type: apiKey
  description: This is a shared key which is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs. With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.  For publicly exposed applications our recommendation is to use server to server access of Azure Maps REST APIs where this key can be  securely stored.
  in: query
errorCodes: []
