### YamlMime:RESTOperation
uid: atlas.microsoft.com.maps.route.getroutematrix
name: Get Route Matrix
service: Maps
groupName: Route
apiVersion: "1.0"
summary: >-
  **Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).


  If the Matrix Route request was accepted successfully, the Location header in the response contains the URL to download the results of the request. This status URI looks like the following:

    ```
      GET https://atlas.microsoft.com/route/matrix/{matrixId}?api-version=1.0?subscription-key={subscription-key}
    ```


  4. Client issues a GET request on the download URL obtained in Step 3 to download the results


  ### Download Sync Results

  When you make a POST request for Route Matrix Sync API, the service returns 200 response code for successful request and a response array. The response body will contain the data and there will be no possibility to retrieve the results later.


  ### Download Async Results

  When a request issues a `202 Accepted` response, the request is being processed using our async pipeline. You will be given a URL to check the progress of your  async request in the location header of the response. This status URI looks like the following:

  ```
    GET https://atlas.microsoft.com/route/matrix/{matrixId}?api-version=1.0?subscription-key={subscription-key}
  ```


  The URL provided by the location header will return the following responses when a `GET` request is issued.

    > HTTP `202 Accepted` - Matrix request was accepted but is still being processed. Please try again in some time.

    > HTTP `200 OK` - Matrix request successfully processed. The response body contains all of the results.
consumes: []
produces:
- application/json
paths:
- content: GET https://atlas.microsoft.com/route/matrix/{format}?api-version=1.0
uriParameters:
- name: format
  in: path
  isRequired: true
  description: Matrix id received after the Matrix Route request was accepted successfully.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Matrix request successfully processed. The response body contains all of the results.
  types:
  - uid: RouteMatrixResult
- name: 202 Accepted
  headers:
  - name: Location
    value: string
  description: >-
    **Supported only for async request.**

    Request Accepted: The request has been accepted for processing. Please use the URL in the Location Header to retry or access the results.
- name: Other Status Codes
  description: An unexpected error occurred.
  types:
  - uid: ErrorResponse
requestHeader:
- name: x-ms-client-id
  in: header
  description: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.
  types:
  - uid: string
definitions:
- name: RouteMatrixResult
  description: This object is returned from a successful Route Matrix call. For ex, if 2 origins and 3 destinations are provided, there are going to 2 arrays with 3 elements in each. Each element's content depends on the options provided in the query.
  kind: object
  properties:
  - name: formatVersion
    isReadyOnly: true
    description: Format Version property
    types:
    - uid: string
  - name: matrix
    isReadyOnly: true
    description: Results as a 2 dimensional array of route summaries.
    types:
    - uid: array
      isArray: true
  - name: summary
    isReadyOnly: true
    description: Summary object
    types:
    - uid: RouteMatrixSummary
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: RouteMatrixSummary
  description: Summary object
  kind: object
  properties:
  - name: successfulRoutes
    isReadyOnly: true
    description: Number of successful routes in the response.
    types:
    - uid: integer
  - name: totalRoutes
    isReadyOnly: true
    description: Total number of routes requested. Number of cells in the input matrix.
    types:
    - uid: integer
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Successfully retrieve the status for a route matrix request
  request:
    uri: GET https://atlas.microsoft.com/route/matrix/11111111-2222-3333-4444-555555555555?api-version=1.0
  responses:
  - statusCode: "200"
    body: >-
      {
        "formatVersion": "0.0.1",
        "matrix": [
          [
            {
              "statusCode": 200,
              "response": {
                "routeSummary": {
                  "lengthInMeters": 495,
                  "travelTimeInSeconds": 134,
                  "trafficDelayInSeconds": 0,
                  "departureTime": "2018-07-27T22:55:29+00:00",
                  "arrivalTime": "2018-07-27T22:57:43+00:00"
                }
              }
            },
            {
              "statusCode": 200,
              "response": {
                "routeSummary": {
                  "lengthInMeters": 647651,
                  "travelTimeInSeconds": 26835,
                  "trafficDelayInSeconds": 489,
                  "departureTime": "2018-07-27T22:55:29+00:00",
                  "arrivalTime": "2018-07-28T06:22:44+00:00"
                }
              }
            }
          ],
          [
            {
              "statusCode": 200,
              "response": {
                "routeSummary": {
                  "lengthInMeters": 338,
                  "travelTimeInSeconds": 104,
                  "trafficDelayInSeconds": 0,
                  "departureTime": "2018-07-27T22:55:29+00:00",
                  "arrivalTime": "2018-07-27T22:57:13+00:00"
                }
              }
            },
            {
              "statusCode": 200,
              "response": {
                "routeSummary": {
                  "lengthInMeters": 647494,
                  "travelTimeInSeconds": 26763,
                  "trafficDelayInSeconds": 469,
                  "departureTime": "2018-07-27T22:55:29+00:00",
                  "arrivalTime": "2018-07-28T06:21:32+00:00"
                }
              }
            }
          ]
        ],
        "summary": {
          "successfulRoutes": 4,
          "totalRoutes": 4
        }
      }
  - statusCode: "202"
security:
- name: AADToken
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/azure/active-directory/develop/v1-overview) Flows. When paired with [Azure role-based access](https://docs.microsoft.com/azure/role-based-access-control/overview) control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to. This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0 or v2.0](https://docs.microsoft.com/azure/active-directory/develop/azure-ad-endpoint-comparison) supports Work, School, and Guests but does not support Personal accounts."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: https://atlas.microsoft.com/.default
    description: https://atlas.microsoft.com/.default
- name: subscription-key
  type: apiKey
  description: >-
    This is a shared key that is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.

     For publicly exposed applications, our recommendation is to use server-to-server access of Azure Maps REST APIs where this key can be securely stored.
  in: query
- name: SAS Token
  type: apiKey
  description: >-
    This is a shared access signature token is created from the List SAS operation on the [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.

     With this token, any application is authorized to access with Azure role-based access controls and fine-grain control to the expiration, rate, and region(s) of use for the particular token. In other words, the SAS Token can be used to allow applications to control access in a more secured way than the shared key.

     For publicly exposed applications, our recommendation is to configure a specific list of allowed origins on the [Map account resource](https://aka.ms/amauth) to limit rendering abuse and regularly renew the SAS Token.
  in: header
metadata:
  description: >-
    **Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).


    If the Matrix Route request was accepted successfully, the Location header in the res
errorCodes: []
