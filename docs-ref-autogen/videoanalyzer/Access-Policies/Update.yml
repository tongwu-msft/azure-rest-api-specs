### YamlMime:RESTOperation
uid: management.azure.com.videoanalyzer.accesspolicies.update
name: Update
service: Azure Video Analyzer
groupName: Access Policies
apiVersion: 2021-11-01-preview
summary: Updates individual properties of an existing access policy resource with the given name.
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/accessPolicies/{accessPolicyName}?api-version=2021-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: accountName
  in: path
  isRequired: true
  description: The Azure Video Analyzer account name.
  types:
  - uid: string
- name: accessPolicyName
  in: path
  isRequired: true
  description: The Access Policy name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: AccessPolicyEntity
- name: Other Status Codes
  description: Detailed error information.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.role
    in: body
    description: Defines the access level granted by this policy.
    types:
    - uid: AccessPolicyRole
  - name: properties.authentication
    in: body
    description: Authentication method to be used when validating client API access.
    types:
    - uid: JwtAuthentication
    typesTitle: AuthenticationBase
requestHeader: []
definitions:
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: AccessPolicyEntity
  description: Access policies help define the authentication rules, and control access to specific video resources.
  kind: object
  properties:
  - name: properties.role
    description: Defines the access level granted by this policy.
    types:
    - uid: AccessPolicyRole
  - name: properties.authentication
    description: Authentication method to be used when validating client API access.
    types:
    - uid: JwtAuthentication
    typesTitle: AuthenticationBase
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
  - name: systemData
    isReadyOnly: true
    description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
    types:
    - uid: systemData
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: JwtAuthentication
  description: Properties for access validation based on JSON Web Tokens (JWT).
  kind: object
  properties:
  - name: issuers
    description: List of expected token issuers. Token issuer is valid if it matches at least one of the given values.
    types:
    - uid: string
      isArray: true
  - name: audiences
    description: List of expected token audiences. Token audience is valid if it matches at least one of the given values.
    types:
    - uid: string
      isArray: true
  - name: claims
    description: List of additional token claims to be validated. Token must contains all claims and respective values for it to be valid.
    types:
    - uid: TokenClaim
      isArray: true
  - name: keys
    description: List of keys which can be used to validate access tokens. Having multiple keys allow for seamless key rotation of the token signing key. Token signature must match exactly one key.
    types:
    - uid: RsaTokenKey
      isArray: true
    - uid: EccTokenKey
      isArray: true
    typesTitle: TokenKey[]
  - name: '@type'
    description: The discriminator for derived types.
    types:
    - uid: '#Microsoft.VideoAnalyzer.JwtAuthentication'
    typesTitle: string
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: AccessPolicyRole
  description: Defines the access level granted by this policy.
  kind: enum
  properties:
  - name: Reader
    description: Reader role allows for read-only operations to be performed through the client APIs.
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: TokenClaim
  description: Properties for expected token claims.
  kind: object
  properties:
  - name: name
    description: Name of the claim which must be present on the token.
    types:
    - uid: string
  - name: value
    description: Expected value of the claim to be present on the token.
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
- name: RsaTokenKey
  description: Required validation properties for tokens generated with RSA algorithm.
  kind: object
  properties:
  - name: alg
    description: 'RSA algorithm to be used: RS256, RS384 or RS512.'
    types:
    - uid: AccessPolicyRsaAlgo
  - name: n
    description: RSA public key modulus.
    types:
    - uid: string
  - name: e
    description: RSA public key exponent.
    types:
    - uid: string
  - name: '@type'
    description: The discriminator for derived types.
    types:
    - uid: '#Microsoft.VideoAnalyzer.RsaTokenKey'
    typesTitle: string
  - name: kid
    description: JWT token key id. Validation keys are looked up based on the key id present on the JWT token header.
    types:
    - uid: string
- name: EccTokenKey
  description: Required validation properties for tokens generated with Elliptical Curve algorithm.
  kind: object
  properties:
  - name: alg
    description: 'Elliptical curve algorithm to be used: ES256, ES384 or ES512.'
    types:
    - uid: AccessPolicyEccAlgo
  - name: x
    description: X coordinate.
    types:
    - uid: string
  - name: y
    description: Y coordinate.
    types:
    - uid: string
  - name: '@type'
    description: The discriminator for derived types.
    types:
    - uid: '#Microsoft.VideoAnalyzer.EccTokenKey'
    typesTitle: string
  - name: kid
    description: JWT token key id. Validation keys are looked up based on the key id present on the JWT token header.
    types:
    - uid: string
- name: AccessPolicyRsaAlgo
  description: 'RSA algorithm to be used: RS256, RS384 or RS512.'
  kind: enum
  properties:
  - name: RS256
    description: RS256
    types:
    - uid: string
  - name: RS384
    description: RS384
    types:
    - uid: string
  - name: RS512
    description: RS512
    types:
    - uid: string
- name: AccessPolicyEccAlgo
  description: 'Elliptical curve algorithm to be used: ES256, ES384 or ES512.'
  kind: enum
  properties:
  - name: ES256
    description: ES265
    types:
    - uid: string
  - name: ES384
    description: ES384
    types:
    - uid: string
  - name: ES512
    description: ES512
    types:
    - uid: string
examples:
- name: Update access policy entity.
  request:
    uri: PATCH https://management.azure.com/subscriptions/591e76c3-3e97-44db-879c-3e2b12961b62/resourceGroups/testrg/providers/Microsoft.Media/videoAnalyzers/testaccount2/accessPolicies/accessPolicyName1?api-version=2021-11-01-preview
    body: >-
      {
        "properties": {
          "authentication": {
            "@type": "#Microsoft.VideoAnalyzer.JwtAuthentication",
            "issuers": [
              "issuer1",
              "issuer2"
            ],
            "audiences": [
              "audience1"
            ],
            "claims": [
              {
                "name": "claimname1",
                "value": "claimvalue1"
              },
              {
                "name": "claimname2",
                "value": "claimvalue2"
              }
            ],
            "keys": [
              {
                "@type": "#Microsoft.VideoAnalyzer.RsaTokenKey",
                "alg": "RS256",
                "kid": "123",
                "n": "YmFzZTY0IQ==",
                "e": "ZLFzZTY0IQ=="
              },
              {
                "@type": "#Microsoft.VideoAnalyzer.EccTokenKey",
                "alg": "ES256",
                "kid": "124",
                "x": "XX==",
                "y": "YY=="
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/591e76c3-3e97-44db-879c-3e2b12961b62/resourceGroups/testrg/providers/Microsoft.Media/videoAnalyzers/testaccount2/accessPolicies/accessPolicyName1?api-version=2021-11-01-preview

      {
        "properties": {
          "authentication": {
            "@type": "#Microsoft.VideoAnalyzer.JwtAuthentication",
            "issuers": [
              "issuer1",
              "issuer2"
            ],
            "audiences": [
              "audience1"
            ],
            "claims": [
              {
                "name": "claimname1",
                "value": "claimvalue1"
              },
              {
                "name": "claimname2",
                "value": "claimvalue2"
              }
            ],
            "keys": [
              {
                "@type": "#Microsoft.VideoAnalyzer.RsaTokenKey",
                "alg": "RS256",
                "kid": "123",
                "n": "YmFzZTY0IQ==",
                "e": "ZLFzZTY0IQ=="
              },
              {
                "@type": "#Microsoft.VideoAnalyzer.EccTokenKey",
                "alg": "ES256",
                "kid": "124",
                "x": "XX==",
                "y": "YY=="
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEccAlgo;
      import com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEntity;
      import com.azure.resourcemanager.videoanalyzer.models.AccessPolicyRsaAlgo;
      import com.azure.resourcemanager.videoanalyzer.models.EccTokenKey;
      import com.azure.resourcemanager.videoanalyzer.models.JwtAuthentication;
      import com.azure.resourcemanager.videoanalyzer.models.RsaTokenKey;
      import com.azure.resourcemanager.videoanalyzer.models.TokenClaim;
      import java.util.Arrays;

      /** Samples for AccessPolicies Update. */
      public final class Main {
          /*
           * x-ms-original-file: specification/videoanalyzer/resource-manager/Microsoft.Media/preview/2021-11-01-preview/examples/access-policy-patch.json
           */
          /**
           * Sample code: Update access policy entity.
           *
           * @param manager Entry point to VideoAnalyzerManager.
           */
          public static void updateAccessPolicyEntity(com.azure.resourcemanager.videoanalyzer.VideoAnalyzerManager manager) {
              AccessPolicyEntity resource =
                  manager
                      .accessPolicies()
                      .getWithResponse("testrg", "testaccount2", "accessPolicyName1", Context.NONE)
                      .getValue();
              resource
                  .update()
                  .withAuthentication(
                      new JwtAuthentication()
                          .withIssuers(Arrays.asList("issuer1", "issuer2"))
                          .withAudiences(Arrays.asList("audience1"))
                          .withClaims(
                              Arrays
                                  .asList(
                                      new TokenClaim().withName("claimname1").withValue("claimvalue1"),
                                      new TokenClaim().withName("claimname2").withValue("claimvalue2")))
                          .withKeys(
                              Arrays
                                  .asList(
                                      new RsaTokenKey()
                                          .withKid("123")
                                          .withAlg(AccessPolicyRsaAlgo.RS256)
                                          .withN("YmFzZTY0IQ==")
                                          .withE("ZLFzZTY0IQ=="),
                                      new EccTokenKey()
                                          .withKid("124")
                                          .withAlg(AccessPolicyEccAlgo.ES256)
                                          .withX("XX==")
                                          .withY("YY=="))))
                  .apply();
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-videoanalyzer_1.0.0-beta.5/sdk/videoanalyzer/azure-resourcemanager-videoanalyzer/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armvideoanalyzer_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/videoanalyzer/armvideoanalyzer"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/videoanalyzer/resource-manager/Microsoft.Media/preview/2021-11-01-preview/examples/access-policy-patch.json
      func ExampleAccessPoliciesClient_Update() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armvideoanalyzer.NewAccessPoliciesClient("<subscription-id>", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Update(ctx,
      		"<resource-group-name>",
      		"<account-name>",
      		"<access-policy-name>",
      		armvideoanalyzer.AccessPolicyEntity{
      			Properties: &armvideoanalyzer.AccessPolicyProperties{
      				Authentication: &armvideoanalyzer.JwtAuthentication{
      					Type: to.Ptr("<type>"),
      					Audiences: []*string{
      						to.Ptr("audience1")},
      					Claims: []*armvideoanalyzer.TokenClaim{
      						{
      							Name:  to.Ptr("<name>"),
      							Value: to.Ptr("<value>"),
      						},
      						{
      							Name:  to.Ptr("<name>"),
      							Value: to.Ptr("<value>"),
      						}},
      					Issuers: []*string{
      						to.Ptr("issuer1"),
      						to.Ptr("issuer2")},
      					Keys: []armvideoanalyzer.TokenKeyClassification{
      						&armvideoanalyzer.RsaTokenKey{
      							Type: to.Ptr("<type>"),
      							Kid:  to.Ptr("<kid>"),
      							Alg:  to.Ptr(armvideoanalyzer.AccessPolicyRsaAlgoRS256),
      							E:    to.Ptr("<e>"),
      							N:    to.Ptr("<n>"),
      						},
      						&armvideoanalyzer.EccTokenKey{
      							Type: to.Ptr("<type>"),
      							Kid:  to.Ptr("<kid>"),
      							Alg:  to.Ptr(armvideoanalyzer.AccessPolicyEccAlgoES256),
      							X:    to.Ptr("<x>"),
      							Y:    to.Ptr("<y>"),
      						}},
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fvideoanalyzer%2Farmvideoanalyzer%2Fv0.4.2/sdk/resourcemanager/videoanalyzer/armvideoanalyzer/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "accessPolicyName1",
        "id": "/subscriptions/591e76c3-3e97-44db-879c-3e2b12961b62/resourceGroups/testrg/providers/Microsoft.Media/videoAnalyzers/testaccount2/accesspolicies/accessPolicyName1",
        "type": "Microsoft.Media/videoAnalyzers/accesspolicies",
        "properties": {
          "role": "Reader",
          "authentication": {
            "@type": "#Microsoft.VideoAnalyzer.JwtAuthentication",
            "issuers": [
              "issuer1",
              "issuer2"
            ],
            "audiences": [
              "audience1"
            ],
            "claims": [
              {
                "name": "claimname1",
                "value": "claimvalue1"
              },
              {
                "name": "claimname2",
                "value": "claimvalue2"
              }
            ],
            "keys": [
              {
                "@type": "#Microsoft.VideoAnalyzer.RsaTokenKey",
                "kid": "123",
                "alg": "RS256",
                "n": "YmFzZTY0IQ==",
                "e": "ZLFzZTY0IQ=="
              },
              {
                "@type": "#Microsoft.VideoAnalyzer.EccTokenKey",
                "kid": "124",
                "alg": "ES256",
                "x": "XX==",
                "y": "YY=="
              }
            ]
          }
        },
        "systemData": {
          "createdBy": "user@microsoft.com",
          "createdByType": "User",
          "createdAt": "0001-01-01T00:00:00Z",
          "lastModifiedBy": "user@microsoft.com",
          "lastModifiedByType": "User",
          "lastModifiedAt": "0001-01-01T00:00:00Z"
        }
      }
security: []
metadata:
  description: Learn more about Azure Video Analyzer service - Updates individual properties of an existing access policy resource with the given name.
errorCodes: []
