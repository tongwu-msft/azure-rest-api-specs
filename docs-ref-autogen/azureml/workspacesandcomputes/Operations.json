{
  "swagger": "2.0",
  "info": {
    "version": "2019-05-01",
    "title": "Azure Machine Learning Workspaces",
    "description": "These APIs allow end users to operate on Azure Machine Learning Workspace resources."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {},
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "description": "Azure subscription identifier.",
      "in": "path",
      "type": "string",
      "required": true
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "description": "Name of the resource group in which workspace is located.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "WorkspaceNameParameter": {
      "name": "workspaceName",
      "description": "Name of Azure Machine Learning workspace.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "ComputeNameParameter": {
      "name": "computeName",
      "description": "Name of the Azure Machine Learning compute.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "AsyncOperationIdParameter": {
      "name": "asyncOperationId",
      "description": "Identifier of an asynchronous Azure Machine Learning compute operation.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "description": "The name of the Azure location/region.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "APIVersionParameter": {
      "in": "query",
      "name": "api-version",
      "type": "string",
      "description": "Version of Azure Machine Learning resource provider API.",
      "required": true
    },
    "ExpandChildrenParameter": {
      "in": "query",
      "name": "expandChildren",
      "type": "string",
      "description": "Specifies if detailed usages of child resources are required.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "PaginationParameter": {
      "in": "query",
      "name": "$skiptoken",
      "type": "string",
      "description": "Continuation token for pagination.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "ComputeDefinitionParameter": {
      "in": "body",
      "name": "parameters",
      "description": "Payload with Machine Learning compute definition.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ComputeResource"
      },
      "x-ms-parameter-location": "method"
    },
    "ComputeTypeParameter": {
      "in": "query",
      "name": "compute-type",
      "type": "string",
      "description": "Type of compute to filter by.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "UnderlyingResourceActionParameter": {
      "in": "query",
      "name": "underlyingResourceAction",
      "type": "string",
      "description": "Delete the underlying compute if 'Delete', or detach the underlying compute from workspace if 'Detach'.",
      "required": true,
      "enum": [
        "Delete",
        "Detach"
      ],
      "x-ms-enum": {
        "name": "UnderlyingResourceAction",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "Operation": {
      "description": "Azure Machine Learning workspace REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "Display name of operation",
          "properties": {
            "provider": {
              "description": "The resource provider name: Microsoft.MachineLearningExperimentation",
              "type": "string"
            },
            "resource": {
              "description": "The resource on which the operation is performed.",
              "type": "string"
            },
            "operation": {
              "description": "The operation that users can perform.",
              "type": "string"
            },
            "description": {
              "description": "The description for the operation.",
              "type": "string"
            }
          }
        }
      }
    },
    "OperationListResult": {
      "description": "An array of operations supported by the resource provider.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of AML workspace operations supported by the AML workspace resource provider."
        }
      }
    },
    "Workspace": {
      "type": "object",
      "description": "An object that represents a machine learning workspace.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "The properties of the machine learning workspace.",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkspaceProperties": {
      "type": "object",
      "description": "The properties of a machine learning workspace.",
      "properties": {
        "workspaceId": {
          "description": "The immutable id associated with this workspace.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The description of this workspace.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The friendly name for this workspace. This name in mutable",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "description": "The creation time of the machine learning workspace in ISO8601 format.",
          "type": "string",
          "readOnly": true
        },
        "keyVault": {
          "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "applicationInsights": {
          "description": "ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "containerRegistry": {
          "description": "ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "storageAccount": {
          "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "discoveryUrl": {
          "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Unknown",
            "Updating",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning."
        }
      }
    },
    "WorkspaceUpdateParameters": {
      "description": "The parameters for updating a machine learning workspace.",
      "properties": {
        "tags": {
          "description": "The resource tags for the machine learning workspace.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/WorkspacePropertiesUpdateParameters",
          "description": "The properties that the machine learning workspace will be updated with.",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkspacePropertiesUpdateParameters": {
      "description": "The parameters for updating the properties of a machine learning workspace.",
      "properties": {
        "description": {
          "description": "The description of this workspace.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The friendly name for this workspace.",
          "type": "string"
        }
      }
    },
    "UsageName": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource."
        },
        "localizedValue": {
          "readOnly": true,
          "type": "string",
          "description": "The localized name of the resource."
        }
      },
      "description": "The Usage Names."
    },
    "Usage": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource ID."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource type."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "An enum describing the unit of usage measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "UsageUnit",
            "modelAsString": true
          }
        },
        "currentValue": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The current usage of the resource."
        },
        "limit": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The maximum permitted usage of the resource."
        },
        "name": {
          "readOnly": true,
          "$ref": "#/definitions/UsageName",
          "description": "The name of the type of usage."
        }
      },
      "description": "Describes AML Resource Usage."
    },
    "ListUsagesResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "description": "The list of AML resource usages."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page of AML resource usage information. Call ListNext() with this to fetch the next page of AML resource usage information."
        }
      },
      "description": "The List Usages operation response."
    },
    "VirtualMachineSize": {
      "properties": {
        "name": {
          "type": "string",
          "title": "Virtual Machine size name",
          "description": "The name of the virtual machine size.",
          "readOnly": true
        },
        "family": {
          "type": "string",
          "title": "Virtual Machine family name",
          "description": "The family name of the virtual machine size.",
          "readOnly": true
        },
        "vCPUs": {
          "type": "integer",
          "format": "int32",
          "title": "Number of vPUs",
          "description": "The number of vCPUs supported by the virtual machine size.",
          "readOnly": true
        },
        "osVhdSizeMB": {
          "type": "integer",
          "format": "int32",
          "title": "OS VHD Disk size",
          "description": "The OS VHD disk size, in MB, allowed by the virtual machine size.",
          "readOnly": true
        },
        "maxResourceVolumeMB": {
          "type": "integer",
          "format": "int32",
          "title": "Resource volume size",
          "description": "The resource volume size, in MB, allowed by the virtual machine size.",
          "readOnly": true
        },
        "memoryGB": {
          "type": "number",
          "format": "double",
          "title": "Memory size",
          "description": "The amount of memory, in GB, supported by the virtual machine size.",
          "readOnly": true
        },
        "lowPriorityCapable": {
          "type": "boolean",
          "title": "Low priority capable",
          "description": "Specifies if the virtual machine size supports low priority VMs.",
          "readOnly": true
        },
        "premiumIO": {
          "type": "boolean",
          "title": "Premium IO supported",
          "description": "Specifies if the virtual machine size supports premium IO.",
          "readOnly": true
        }
      },
      "description": "Describes the properties of a VM size."
    },
    "VirtualMachineSizeListResult": {
      "properties": {
        "amlCompute": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachineSize"
          },
          "description": "The list of virtual machine sizes supported by AmlCompute."
        }
      },
      "description": "The List Virtual Machine size operation response."
    },
    "WorkspaceListResult": {
      "description": "The result of a request to list machine learning workspaces.",
      "properties": {
        "value": {
          "description": "The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next list of machine learning workspaces.",
          "type": "string"
        }
      }
    },
    "Identity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      },
      "description": "Identity for the resource."
    },
    "Resource": {
      "description": "Azure Resource Manager resource envelope.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "description": "Specifies the resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Specifies the name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "readOnly": true,
          "description": "The identity of the resource."
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Specifies the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ResourceId": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the resource"
        }
      },
      "required": [
        "id"
      ],
      "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
      "x-ms-azure-resource": true
    },
    "ListWorkspaceKeysResult": {
      "type": "object",
      "properties": {
        "userStorageKey": {
          "readOnly": true,
          "type": "string"
        },
        "userStorageResourceId": {
          "readOnly": true,
          "type": "string"
        },
        "appInsightsInstrumentationKey": {
          "readOnly": true,
          "type": "string"
        },
        "containerRegistryCredentials": {
          "readOnly": true,
          "$ref": "#/definitions/RegistryListCredentialsResult"
        }
      }
    },
    "RegistryListCredentialsResult": {
      "type": "object",
      "properties": {
        "location": {
          "readOnly": true,
          "type": "string"
        },
        "username": {
          "readOnly": true,
          "type": "string"
        },
        "passwords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Password"
          }
        }
      }
    },
    "Password": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "PaginatedComputeResourcesList": {
      "type": "object",
      "description": "Paginated list of Machine Learning compute objects wrapped in ARM resource envelope.",
      "properties": {
        "value": {
          "type": "array",
          "description": "An array of Machine Learning compute objects wrapped in ARM resource envelope.",
          "items": {
            "$ref": "#/definitions/ComputeResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "A continuation link (absolute URI) to the next page of results in the list."
        }
      }
    },
    "ComputeResource": {
      "type": "object",
      "description": "Machine Learning compute object wrapped into ARM resource envelope.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "description": "Compute properties",
              "$ref": "#/definitions/Compute"
            }
          }
        }
      ]
    },
    "Compute": {
      "type": "object",
      "description": "Machine Learning compute object.",
      "discriminator": "computeType",
      "properties": {
        "computeType": {
          "description": "The type of compute",
          "$ref": "#/definitions/ComputeType"
        },
        "computeLocation": {
          "description": "Location for the underlying compute",
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "description": "The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.",
          "enum": [
            "Unknown",
            "Updating",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the Machine Learning compute."
        },
        "createdOn": {
          "type": "string",
          "description": "The date and time when the compute was created.",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedOn": {
          "type": "string",
          "description": "The date and time when the compute was last modified.",
          "format": "date-time",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "ARM resource id of the underlying compute"
        },
        "provisioningErrors": {
          "type": "array",
          "description": "Errors during provisioning",
          "items": {
            "$ref": "#/definitions/MachineLearningServiceError"
          },
          "readOnly": true
        },
        "isAttachedCompute": {
          "type": "boolean",
          "description": "Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.",
          "readOnly": true
        }
      },
      "required": [
        "computeType"
      ]
    },
    "AKS": {
      "description": "A Machine Learning compute based on AKS.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "description": "AKS properties",
              "properties": {
                "clusterFqdn": {
                  "description": "Cluster full qualified domain name",
                  "type": "string"
                },
                "systemServices": {
                  "type": "array",
                  "description": "System services",
                  "items": {
                    "$ref": "#/definitions/SystemService"
                  },
                  "readOnly": true
                },
                "agentCount": {
                  "description": "Number of agents",
                  "type": "integer",
                  "minimum": 1
                },
                "agentVMSize": {
                  "description": "Agent virtual machine size",
                  "type": "string"
                },
                "sslConfiguration": {
                  "description": "SSL configuration",
                  "$ref": "#/definitions/SslConfiguration"
                },
                "aksNetworkingConfiguration": {
                  "description": "AKS networking configuration for vnet",
                  "$ref": "#/definitions/AksNetworkingConfiguration"
                }
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AKS"
    },
    "AmlCompute": {
      "description": "An Azure Machine Learning compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "description": "AML Compute properties",
              "type": "object",
              "properties": {
                "vmSize": {
                  "description": "Virtual Machine Size",
                  "type": "string"
                },
                "vmPriority": {
                  "description": "Virtual Machine priority",
                  "type": "string",
                  "enum": [
                    "Dedicated",
                    "LowPriority"
                  ],
                  "x-ms-enum": {
                    "name": "VmPriority",
                    "modelAsString": true
                  }
                },
                "scaleSettings": {
                  "description": "Scale settings for AML Compute",
                  "$ref": "#/definitions/ScaleSettings"
                },
                "userAccountCredentials": {
                  "title": "User account credentials.",
                  "description": "Credentials for an administrator user account that will be created on each compute node.",
                  "$ref": "#/definitions/UserAccountCredentials"
                },
                "subnet": {
                  "title": "Subnet.",
                  "description": "Virtual network subnet resource ID the compute nodes belong to.",
                  "$ref": "#/definitions/ResourceId"
                },
                "allocationState": {
                  "type": "string",
                  "readOnly": true,
                  "title": "Allocation state.",
                  "description": "Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.",
                  "enum": [
                    "Steady",
                    "Resizing"
                  ],
                  "x-ms-enum": {
                    "name": "AllocationState",
                    "modelAsString": true
                  }
                },
                "allocationStateTransitionTime": {
                  "type": "string",
                  "readOnly": true,
                  "format": "date-time",
                  "title": "Allocation state transition time.",
                  "description": "The time at which the compute entered its current allocation state."
                },
                "errors": {
                  "readOnly": true,
                  "title": "Errors.",
                  "description": "Collection of errors encountered by various compute nodes during node setup.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MachineLearningServiceError"
                  }
                },
                "currentNodeCount": {
                  "type": "integer",
                  "readOnly": true,
                  "format": "int32",
                  "title": "Current node count.",
                  "description": "The number of compute nodes currently assigned to the compute."
                },
                "targetNodeCount": {
                  "type": "integer",
                  "readOnly": true,
                  "format": "int32",
                  "title": "Target node count.",
                  "description": "The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation."
                },
                "nodeStateCounts": {
                  "title": "Node state counts.",
                  "description": "Counts of various node states on the compute.",
                  "readOnly": true,
                  "$ref": "#/definitions/NodeStateCounts"
                }
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AmlCompute"
    },
    "VirtualMachine": {
      "description": "A Machine Learning compute based on Azure Virtual Machines.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "properties": {
                "virtualMachineSize": {
                  "description": "Virtual Machine size",
                  "type": "string"
                },
                "sshPort": {
                  "description": "Port open for ssh connections.",
                  "type": "integer"
                },
                "address": {
                  "description": "Public IP address of the virtual machine.",
                  "type": "string"
                },
                "administratorAccount": {
                  "description": "Admin credentials for virtual machine",
                  "$ref": "#/definitions/VirtualMachineSshCredentials"
                }
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "VirtualMachine"
    },
    "HDInsight": {
      "description": "A HDInsight compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "properties": {
                "sshPort": {
                  "description": "Port open for ssh connections on the master node of the cluster.",
                  "type": "integer"
                },
                "address": {
                  "description": "Public IP address of the master node of the cluster.",
                  "type": "string"
                },
                "administratorAccount": {
                  "description": "Admin credentials for master node of the cluster",
                  "$ref": "#/definitions/VirtualMachineSshCredentials"
                }
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "HDInsight"
    },
    "DataFactory": {
      "description": "A DataFactory compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        }
      ],
      "x-ms-discriminator-value": "DataFactory"
    },
    "Databricks": {
      "description": "A DataFactory compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "properties": {
                "databricksAccessToken": {
                  "description": "Databricks access token",
                  "type": "string"
                }
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Databricks"
    },
    "DataLakeAnalytics": {
      "description": "A DataLakeAnalytics compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "properties": {
                "dataLakeStoreAccountName": {
                  "description": "DataLake Store Account Name",
                  "type": "string"
                }
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "DataLakeAnalytics"
    },
    "ServicePrincipalCredentials": {
      "type": "object",
      "description": "Service principal credentials.",
      "properties": {
        "clientId": {
          "description": "Client Id",
          "type": "string"
        },
        "clientSecret": {
          "description": "Client secret",
          "type": "string"
        }
      },
      "required": [
        "clientId",
        "clientSecret"
      ]
    },
    "SystemService": {
      "type": "object",
      "description": "A system service running on a compute.",
      "properties": {
        "systemServiceType": {
          "description": "The type of this system service.",
          "readOnly": true,
          "type": "string"
        },
        "publicIpAddress": {
          "type": "string",
          "description": "Public IP address",
          "readOnly": true
        },
        "version": {
          "description": "The version for this type.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "SslConfiguration": {
      "type": "object",
      "description": "The ssl configuration for scoring",
      "properties": {
        "status": {
          "description": "Enable or disable ssl for scoring",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ]
        },
        "cert": {
          "description": "Cert data",
          "type": "string"
        },
        "key": {
          "description": "Key data",
          "type": "string"
        },
        "cname": {
          "description": "CNAME of the cert",
          "type": "string"
        }
      }
    },
    "AksNetworkingConfiguration": {
      "type": "object",
      "description": "Advance configuration for AKS networking",
      "properties": {
        "subnetId": {
          "description": "Virtual network subnet resource ID the compute nodes belong to",
          "type": "string"
        },
        "serviceCidr": {
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.",
          "type": "string"
        },
        "dnsServiceIP": {
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
          "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.",
          "type": "string"
        },
        "dockerBridgeCidr": {
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "description": "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.",
          "type": "string"
        }
      }
    },
    "UserAccountCredentials": {
      "properties": {
        "adminUserName": {
          "type": "string",
          "title": "User name.",
          "description": "Name of the administrator user account which can be used to SSH to nodes."
        },
        "adminUserSshPublicKey": {
          "type": "string",
          "title": "SSH public key.",
          "description": "SSH public key of the administrator user account."
        },
        "adminUserPassword": {
          "type": "string",
          "title": "Password.",
          "description": "Password of the administrator user account."
        }
      },
      "required": [
        "adminUserName"
      ],
      "description": "Settings for user account that gets created on each on the nodes of a compute."
    },
    "ScaleSettings": {
      "type": "object",
      "description": "scale settings for AML Compute",
      "properties": {
        "maxNodeCount": {
          "description": "Max number of nodes to use",
          "type": "integer"
        },
        "minNodeCount": {
          "description": "Min number of nodes to use",
          "type": "integer",
          "default": 0
        },
        "nodeIdleTimeBeforeScaleDown": {
          "type": "string",
          "format": "duration",
          "description": "Node Idle Time before scaling down amlCompute"
        }
      },
      "required": [
        "maxNodeCount"
      ]
    },
    "NodeStateCounts": {
      "properties": {
        "idleNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Idle node count.",
          "description": "Number of compute nodes in idle state."
        },
        "runningNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Running node count.",
          "description": "Number of compute nodes which are running jobs."
        },
        "preparingNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Preparing node count.",
          "description": "Number of compute nodes which are being prepared."
        },
        "unusableNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Unusable node count.",
          "description": "Number of compute nodes which are in unusable state."
        },
        "leavingNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Leaving node count.",
          "description": "Number of compute nodes which are leaving the amlCompute."
        },
        "preemptedNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Preempted node count.",
          "description": "Number of compute nodes which are in preempted state."
        }
      },
      "description": "Counts of various compute node states on the amlCompute."
    },
    "ClusterUpdateProperties": {
      "properties": {
        "scaleSettings": {
          "$ref": "#/definitions/ScaleSettings",
          "title": "Scale settings.",
          "description": "Desired scale settings for the amlCompute."
        }
      },
      "description": "The properties of a amlCompute that need to be updated."
    },
    "ClusterUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ClusterUpdateProperties",
          "description": "The properties of the amlCompute."
        }
      },
      "description": "AmlCompute update parameters."
    },
    "ComputeNodesInformation": {
      "type": "object",
      "description": "Compute nodes information related to a Machine Learning compute. Might differ for every type of compute.",
      "discriminator": "computeType",
      "properties": {
        "computeType": {
          "description": "The type of compute",
          "$ref": "#/definitions/ComputeType"
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The continuation token."
        }
      },
      "required": [
        "computeType"
      ]
    },
    "AmlComputeNodesInformation": {
      "description": "Compute node information related to a AmlCompute.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeNodesInformation"
        },
        {
          "type": "object",
          "properties": {
            "nodes": {
              "readOnly": true,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AmlComputeNodeInformation"
              },
              "description": "The collection of returned AmlCompute nodes details."
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AmlCompute"
    },
    "AmlComputeNodeInformation": {
      "description": "Compute node information related to a AmlCompute.",
      "properties": {
        "nodeId": {
          "readOnly": true,
          "type": "string",
          "title": "Node ID.",
          "description": "ID of the compute node."
        },
        "ipAddress": {
          "readOnly": true,
          "type": "string",
          "title": "IP address.",
          "description": "Public IP address of the compute node."
        },
        "port": {
          "readOnly": true,
          "type": "number",
          "format": "int32",
          "title": "Port.",
          "description": "SSH port number of the node."
        }
      },
      "x-ms-discriminator-value": "AmlCompute"
    },
    "VirtualMachineSshCredentials": {
      "type": "object",
      "description": "Admin credentials for virtual machine",
      "properties": {
        "username": {
          "description": "Username of admin account",
          "type": "string"
        },
        "password": {
          "description": "Password of admin account",
          "type": "string"
        },
        "publicKeyData": {
          "description": "Public key data",
          "type": "string"
        },
        "privateKeyData": {
          "description": "Private key data",
          "type": "string"
        }
      }
    },
    "ComputeSecrets": {
      "type": "object",
      "description": "Secrets related to a Machine Learning compute. Might differ for every type of compute.",
      "discriminator": "computeType",
      "properties": {
        "computeType": {
          "description": "The type of compute",
          "$ref": "#/definitions/ComputeType"
        }
      },
      "required": [
        "computeType"
      ]
    },
    "AksComputeSecrets": {
      "description": "Secrets related to a Machine Learning compute based on AKS.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "type": "object",
          "properties": {
            "userKubeConfig": {
              "type": "string",
              "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster."
            },
            "adminKubeConfig": {
              "type": "string",
              "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster."
            },
            "imagePullSecretName": {
              "type": "string",
              "description": "Image registry pull secret."
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AKS"
    },
    "VirtualMachineSecrets": {
      "description": "Secrets related to a Machine Learning compute based on AKS.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "type": "object",
          "properties": {
            "administratorAccount": {
              "description": "Admin credentials for virtual machine.",
              "$ref": "#/definitions/VirtualMachineSshCredentials"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "VirtualMachine"
    },
    "DatabricksComputeSecrets": {
      "description": "Secrets related to a Machine Learning compute based on Databricks.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "type": "object",
          "properties": {
            "databricksAccessToken": {
              "description": "access token for databricks account.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Databricks"
    },
    "ComputeType": {
      "type": "string",
      "description": "The type of compute",
      "enum": [
        "AKS",
        "AmlCompute",
        "DataFactory",
        "VirtualMachine",
        "HDInsight",
        "Databricks",
        "DataLakeAnalytics"
      ],
      "x-ms-enum": {
        "name": "ComputeType",
        "modelAsString": true
      }
    },
    "MachineLearningServiceError": {
      "type": "object",
      "description": "Wrapper for error response to follow ARM guidelines.",
      "properties": {
        "error": {
          "description": "The error response.",
          "$ref": "#/definitions/ErrorResponse",
          "readOnly": true
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response information.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Error message.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "An array of error detail objects.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "Error detail information.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        }
      },
      "required": [
        "code",
        "message"
      ]
    }
  },
  "x-internal-service-id": "azureml",
  "x-internal-service-name": "Machine Learning",
  "x-internal-toc-name": "Operations",
  "x-internal-product-uid": null,
  "x-internal-split-members": [
    {
      "displayName": "List",
      "relativePath": "Operations/List"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}