### YamlMime:RESTOperation
uid: management.azure.com.azureml.machinelearningservices.createorupdate
name: Create Or Update
service: Machine Learning
groupName: Machine Learning Services
apiVersion: 2021-03-01-preview
summary: Creates or updates service. This call will update a service if it exists. This is a nonrecoverable operation. If your intent is to create a new service, do a GET first to verify that it does not exist yet.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/services/{serviceName}?api-version=2021-03-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: workspaceName
  in: path
  isRequired: true
  description: Name of Azure Machine Learning workspace.
  types:
  - uid: string
- name: serviceName
  in: path
  isRequired: true
  description: Name of the Azure Machine Learning service.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Service creation or update initiated.
  types:
  - uid: ServiceResource
- name: 201 Created
  headers:
  - name: Azure-AsyncOperation
    value: string
  description: Service creation or update initiated.
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: ACIServiceCreateRequest
  parameters:
  - name: description
    in: body
    description: The description of the service.
    types:
    - uid: string
  - name: kvTags
    in: body
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    in: body
    description: The service properties dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: keys
    in: body
    description: The authentication keys.
    types:
    - uid: Keys
  - name: computeType
    in: body
    isRequired: true
    description: The compute environment type for the service.
    types:
    - uid: ACI
    typesTitle: string
  - name: environmentImageRequest
    in: body
    description: The Environment, models and assets needed for inferencing.
    types:
    - uid: CreateServiceRequest.EnvironmentImageRequest
  - name: location
    in: body
    description: The name of the Azure location/region.
    types:
    - uid: string
  - name: containerResourceRequirements
    in: body
    description: The container resource requirements.
    types:
    - uid: ContainerResourceRequirements
  - name: authEnabled
    in: body
    description: Whether or not authentication is enabled on the service.
    types:
    - uid: boolean
  - name: sslEnabled
    in: body
    description: Whether or not SSL is enabled.
    types:
    - uid: boolean
  - name: appInsightsEnabled
    in: body
    description: Whether or not Application Insights is enabled.
    types:
    - uid: boolean
  - name: dataCollection
    in: body
    description: Details of the data collection options specified.
    types:
    - uid: DataCollection
  - name: sslCertificate
    in: body
    description: The public SSL certificate in PEM format to use if SSL is enabled.
    types:
    - uid: string
  - name: sslKey
    in: body
    description: The public SSL key in PEM format for the certificate.
    types:
    - uid: string
  - name: cname
    in: body
    description: The CName for the service.
    types:
    - uid: string
  - name: dnsNameLabel
    in: body
    description: The Dns label for the service.
    types:
    - uid: string
  - name: vnetConfiguration
    in: body
    description: The virtual network configuration.
    types:
    - uid: VnetConfiguration
  - name: encryptionProperties
    in: body
    description: The encryption properties.
    types:
    - uid: EncryptionProperties
- name: CreateEndpointVariantRequest
  description: The Variant properties.
  parameters:
  - name: description
    in: body
    description: The description of the service.
    types:
    - uid: string
  - name: kvTags
    in: body
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    in: body
    description: The service properties dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: keys
    in: body
    description: The authentication keys.
    types:
    - uid: Keys
  - name: computeType
    in: body
    isRequired: true
    description: The compute environment type for the service.
    types:
    - uid: Custom
    typesTitle: string
  - name: environmentImageRequest
    in: body
    description: The Environment, models and assets needed for inferencing.
    types:
    - uid: CreateServiceRequest.EnvironmentImageRequest
  - name: location
    in: body
    description: The name of the Azure location/region.
    types:
    - uid: string
  - name: isDefault
    in: body
    description: Is this the default variant.
    types:
    - uid: boolean
  - name: trafficPercentile
    in: body
    description: The amount of traffic variant receives.
    types:
    - uid: number
  - name: type
    in: body
    description: The type of the variant.
    types:
    - uid: VariantType
- name: AKSServiceCreateRequest
  description: The request to create an AKS service.
  parameters:
  - name: description
    in: body
    description: The description of the service.
    types:
    - uid: string
  - name: kvTags
    in: body
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    in: body
    description: The service properties dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: keys
    in: body
    description: The authentication keys.
    types:
    - uid: Keys
  - name: computeType
    in: body
    isRequired: true
    description: The compute environment type for the service.
    types:
    - uid: AKS
    typesTitle: string
  - name: environmentImageRequest
    in: body
    description: The Environment, models and assets needed for inferencing.
    types:
    - uid: CreateServiceRequest.EnvironmentImageRequest
  - name: location
    in: body
    description: The name of the Azure location/region.
    types:
    - uid: string
  - name: isDefault
    in: body
    description: Is this the default variant.
    types:
    - uid: boolean
  - name: trafficPercentile
    in: body
    description: The amount of traffic variant receives.
    types:
    - uid: number
  - name: type
    in: body
    description: The type of the variant.
    types:
    - uid: VariantType
  - name: numReplicas
    in: body
    description: The number of replicas on the cluster.
    types:
    - uid: integer
  - name: dataCollection
    in: body
    description: Details of the data collection options specified.
    types:
    - uid: DataCollection
  - name: computeName
    in: body
    description: The name of the compute resource.
    types:
    - uid: string
  - name: appInsightsEnabled
    in: body
    description: Whether or not Application Insights is enabled.
    types:
    - uid: boolean
  - name: autoScaler
    in: body
    description: The auto scaler properties.
    types:
    - uid: AutoScaler
  - name: containerResourceRequirements
    in: body
    description: The container resource requirements.
    types:
    - uid: ContainerResourceRequirements
  - name: maxConcurrentRequestsPerContainer
    in: body
    description: The maximum number of concurrent requests per container.
    types:
    - uid: integer
  - name: maxQueueWaitMs
    in: body
    description: Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
    types:
    - uid: integer
  - name: namespace
    in: body
    description: Kubernetes namespace for the service.
    types:
    - uid: string
  - name: scoringTimeoutMs
    in: body
    description: The scoring timeout in milliseconds.
    types:
    - uid: integer
  - name: authEnabled
    in: body
    description: Whether or not authentication is enabled.
    types:
    - uid: boolean
  - name: livenessProbeRequirements
    in: body
    description: The liveness probe requirements.
    types:
    - uid: LivenessProbeRequirements
  - name: aadAuthEnabled
    in: body
    description: Whether or not AAD authentication is enabled.
    types:
    - uid: boolean
requestHeader: []
definitions:
- name: ACIServiceCreateRequest
  kind: object
  properties:
  - name: description
    description: The description of the service.
    types:
    - uid: string
  - name: kvTags
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    description: The service properties dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: keys
    description: The authentication keys.
    types:
    - uid: Keys
  - name: computeType
    description: The compute environment type for the service.
    types:
    - uid: ACI
    typesTitle: string
  - name: environmentImageRequest
    description: The Environment, models and assets needed for inferencing.
    types:
    - uid: CreateServiceRequest.EnvironmentImageRequest
  - name: location
    description: The name of the Azure location/region.
    types:
    - uid: string
  - name: containerResourceRequirements
    description: The container resource requirements.
    types:
    - uid: ContainerResourceRequirements
  - name: authEnabled
    description: Whether or not authentication is enabled on the service.
    types:
    - uid: boolean
  - name: sslEnabled
    description: Whether or not SSL is enabled.
    types:
    - uid: boolean
  - name: appInsightsEnabled
    description: Whether or not Application Insights is enabled.
    types:
    - uid: boolean
  - name: dataCollection
    description: Details of the data collection options specified.
    types:
    - uid: DataCollection
  - name: sslCertificate
    description: The public SSL certificate in PEM format to use if SSL is enabled.
    types:
    - uid: string
  - name: sslKey
    description: The public SSL key in PEM format for the certificate.
    types:
    - uid: string
  - name: cname
    description: The CName for the service.
    types:
    - uid: string
  - name: dnsNameLabel
    description: The Dns label for the service.
    types:
    - uid: string
  - name: vnetConfiguration
    description: The virtual network configuration.
    types:
    - uid: VnetConfiguration
  - name: encryptionProperties
    description: The encryption properties.
    types:
    - uid: EncryptionProperties
- name: CreateEndpointVariantRequest
  description: The Variant properties.
  kind: object
  properties:
  - name: description
    description: The description of the service.
    types:
    - uid: string
  - name: kvTags
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    description: The service properties dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: keys
    description: The authentication keys.
    types:
    - uid: Keys
  - name: computeType
    description: The compute environment type for the service.
    types:
    - uid: Custom
    typesTitle: string
  - name: environmentImageRequest
    description: The Environment, models and assets needed for inferencing.
    types:
    - uid: CreateServiceRequest.EnvironmentImageRequest
  - name: location
    description: The name of the Azure location/region.
    types:
    - uid: string
  - name: isDefault
    description: Is this the default variant.
    types:
    - uid: boolean
  - name: trafficPercentile
    description: The amount of traffic variant receives.
    types:
    - uid: number
  - name: type
    description: The type of the variant.
    types:
    - uid: VariantType
- name: AKSServiceCreateRequest
  description: The request to create an AKS service.
  kind: object
  properties:
  - name: description
    description: The description of the service.
    types:
    - uid: string
  - name: kvTags
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    description: The service properties dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: keys
    description: The authentication keys.
    types:
    - uid: Keys
  - name: computeType
    description: The compute environment type for the service.
    types:
    - uid: AKS
    typesTitle: string
  - name: environmentImageRequest
    description: The Environment, models and assets needed for inferencing.
    types:
    - uid: CreateServiceRequest.EnvironmentImageRequest
  - name: location
    description: The name of the Azure location/region.
    types:
    - uid: string
  - name: isDefault
    description: Is this the default variant.
    types:
    - uid: boolean
  - name: trafficPercentile
    description: The amount of traffic variant receives.
    types:
    - uid: number
  - name: type
    description: The type of the variant.
    types:
    - uid: VariantType
  - name: numReplicas
    description: The number of replicas on the cluster.
    types:
    - uid: integer
  - name: dataCollection
    description: Details of the data collection options specified.
    types:
    - uid: DataCollection
  - name: computeName
    description: The name of the compute resource.
    types:
    - uid: string
  - name: appInsightsEnabled
    description: Whether or not Application Insights is enabled.
    types:
    - uid: boolean
  - name: autoScaler
    description: The auto scaler properties.
    types:
    - uid: AutoScaler
  - name: containerResourceRequirements
    description: The container resource requirements.
    types:
    - uid: ContainerResourceRequirements
  - name: maxConcurrentRequestsPerContainer
    description: The maximum number of concurrent requests per container.
    types:
    - uid: integer
  - name: maxQueueWaitMs
    description: Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
    types:
    - uid: integer
  - name: namespace
    description: Kubernetes namespace for the service.
    types:
    - uid: string
  - name: scoringTimeoutMs
    description: The scoring timeout in milliseconds.
    types:
    - uid: integer
  - name: authEnabled
    description: Whether or not authentication is enabled.
    types:
    - uid: boolean
  - name: livenessProbeRequirements
    description: The liveness probe requirements.
    types:
    - uid: LivenessProbeRequirements
  - name: aadAuthEnabled
    description: Whether or not AAD authentication is enabled.
    types:
    - uid: boolean
- name: Keys
  description: The authentication keys.
  kind: object
  properties:
  - name: primaryKey
    description: The primary key.
    types:
    - uid: string
  - name: secondaryKey
    description: The secondary key.
    types:
    - uid: string
- name: EnvironmentImageRequest
  description: Request to create a Docker image based on Environment.
  kind: object
  properties:
  - name: driverProgram
    description: The name of the driver file.
    types:
    - uid: string
  - name: assets
    description: The list of assets.
    types:
    - uid: ImageAsset
      isArray: true
  - name: modelIds
    description: The list of model Ids.
    types:
    - uid: string
      isArray: true
  - name: models
    description: The list of models.
    types:
    - uid: Model
      isArray: true
  - name: environment
    description: The details of the AZURE ML environment.
    types:
    - uid: Environment
  - name: environmentReference
    description: The unique identifying details of the AZURE ML environment.
    types:
    - uid: EnvironmentReference
- name: CreateServiceRequest.EnvironmentImageRequest
  description: The Environment, models and assets needed for inferencing.
  kind: object
  properties:
  - name: driverProgram
    description: The name of the driver file.
    types:
    - uid: string
  - name: assets
    description: The list of assets.
    types:
    - uid: ImageAsset
      isArray: true
  - name: modelIds
    description: The list of model Ids.
    types:
    - uid: string
      isArray: true
  - name: models
    description: The list of models.
    types:
    - uid: Model
      isArray: true
  - name: environment
    description: The details of the AZURE ML environment.
    types:
    - uid: Environment
  - name: environmentReference
    description: The unique identifying details of the AZURE ML environment.
    types:
    - uid: EnvironmentImageRequest.EnvironmentReference
- name: ServiceResource
  description: Machine Learning service object wrapped into ARM resource envelope.
  kind: object
  properties:
  - name: identity
    description: The identity of the resource.
    types:
    - uid: Identity
  - name: location
    description: Specifies the location of the resource.
    types:
    - uid: string
  - name: tags
    description: Contains resource tags defined as key/value pairs.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: sku
    description: The sku of the workspace.
    types:
    - uid: Sku
  - name: systemData
    isReadyOnly: true
    description: Metadata pertaining to creation and last modification of the resource.
    types:
    - uid: systemData
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
  - name: properties
    description: Service properties
    types:
    - uid: ACIServiceResponse
    - uid: AKSVariantResponse
    - uid: AKSServiceResponse
    typesTitle: ServiceResponseBase
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: ContainerResourceRequirements
  description: The resource requirements for the container (cpu and memory).
  kind: object
  properties:
  - name: cpu
    description: >-
      The minimum amount of CPU cores to be used by the container. More info:

      https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    types:
    - uid: number
  - name: cpuLimit
    description: >-
      The maximum amount of CPU cores allowed to be used by the container. More info:

      https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    types:
    - uid: number
  - name: memoryInGB
    description: >-
      The minimum amount of memory (in GB) to be used by the container. More info:

      https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    types:
    - uid: number
  - name: memoryInGBLimit
    description: >-
      The maximum amount of memory (in GB) allowed to be used by the container. More info:

      https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    types:
    - uid: number
  - name: gpu
    description: The number of GPU cores in the container.
    types:
    - uid: integer
  - name: fpga
    description: The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
    types:
    - uid: integer
- name: DataCollection
  description: Details of the data collection options specified.
  kind: object
  properties:
  - name: eventHubEnabled
    description: Option for enabling/disabling Event Hub.
    types:
    - uid: boolean
  - name: storageEnabled
    description: Option for enabling/disabling storage.
    types:
    - uid: boolean
- name: VnetConfiguration
  kind: object
  properties:
  - name: vnetName
    description: The name of the virtual network.
    types:
    - uid: string
  - name: subnetName
    description: The name of the virtual network subnet.
    types:
    - uid: string
- name: EncryptionProperties
  kind: object
  properties:
  - name: vaultBaseUrl
    description: vault base Url
    types:
    - uid: string
  - name: keyName
    description: Encryption Key name
    types:
    - uid: string
  - name: keyVersion
    description: Encryption Key Version
    types:
    - uid: string
- name: VariantType
  description: The type of the variant.
  kind: enum
  properties:
  - name: Control
    types:
    - uid: string
  - name: Treatment
    types:
    - uid: string
- name: AutoScaler
  description: The Auto Scaler properties.
  kind: object
  properties:
  - name: autoscaleEnabled
    description: Option to enable/disable auto scaling.
    types:
    - uid: boolean
  - name: minReplicas
    description: The minimum number of replicas to scale down to.
    types:
    - uid: integer
  - name: maxReplicas
    description: The maximum number of replicas in the cluster.
    types:
    - uid: integer
  - name: targetUtilization
    description: The target utilization percentage to use for determining whether to scale the cluster.
    types:
    - uid: integer
  - name: refreshPeriodInSeconds
    description: The amount of seconds to wait between auto scale updates.
    types:
    - uid: integer
- name: LivenessProbeRequirements
  description: The liveness probe requirements.
  kind: object
  properties:
  - name: failureThreshold
    description: The number of failures to allow before returning an unhealthy status.
    types:
    - uid: integer
  - name: successThreshold
    description: The number of successful probes before returning a healthy status.
    types:
    - uid: integer
  - name: timeoutSeconds
    description: The probe timeout in seconds.
    types:
    - uid: integer
  - name: periodSeconds
    description: The length of time between probes in seconds.
    types:
    - uid: integer
  - name: initialDelaySeconds
    description: The delay before the first probe in seconds.
    types:
    - uid: integer
- name: ImageAsset
  description: An Image asset.
  kind: object
  properties:
  - name: id
    description: The Asset Id.
    types:
    - uid: string
  - name: mimeType
    description: The mime type.
    types:
    - uid: string
  - name: url
    description: The Url of the Asset.
    types:
    - uid: string
  - name: unpack
    description: Whether the Asset is unpacked.
    types:
    - uid: boolean
- name: Model
  description: An Azure Machine Learning Model.
  kind: object
  properties:
  - name: id
    description: The Model Id.
    types:
    - uid: string
  - name: name
    description: The Model name.
    types:
    - uid: string
  - name: framework
    description: The Model framework.
    types:
    - uid: string
  - name: frameworkVersion
    description: The Model framework version.
    types:
    - uid: string
  - name: version
    description: The Model version assigned by Model Management Service.
    types:
    - uid: integer
  - name: datasets
    description: The list of datasets associated with the model.
    types:
    - uid: DatasetReference
      isArray: true
  - name: url
    description: The URL of the Model. Usually a SAS URL.
    types:
    - uid: string
  - name: mimeType
    description: The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml
    types:
    - uid: string
  - name: description
    description: The Model description text.
    types:
    - uid: string
  - name: createdTime
    description: The Model creation time (UTC).
    types:
    - uid: string
  - name: modifiedTime
    description: The Model last modified time (UTC).
    types:
    - uid: string
  - name: unpack
    description: Indicates whether we need to unpack the Model during docker Image creation.
    types:
    - uid: boolean
  - name: parentModelId
    description: The Parent Model Id.
    types:
    - uid: string
  - name: runId
    description: The RunId that created this model.
    types:
    - uid: string
  - name: experimentName
    description: The name of the experiment where this model was created.
    types:
    - uid: string
  - name: kvTags
    description: The Model tag dictionary. Items are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    description: The Model property dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: derivedModelIds
    description: Models derived from this model
    types:
    - uid: string
      isArray: true
  - name: sampleInputData
    description: Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
    types:
    - uid: string
  - name: sampleOutputData
    description: Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}
    types:
    - uid: string
  - name: resourceRequirements
    description: Resource requirements for the model
    types:
    - uid: ContainerResourceRequirements
- name: Environment
  description: The details of the AZURE ML environment.
  kind: object
  properties:
  - name: name
    description: The name of the environment.
    types:
    - uid: string
  - name: version
    description: The environment version.
    types:
    - uid: string
  - name: python
    description: Settings for a Python environment.
    types:
    - uid: Python
  - name: environmentVariables
    description: Definition of environment variables to be defined in the environment.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: docker
    description: The definition of a Docker container.
    types:
    - uid: Docker
  - name: spark
    description: The configuration for a Spark environment.
    types:
    - uid: Spark
  - name: r
    description: Settings for a R environment.
    types:
    - uid: R
  - name: inferencingStackVersion
    description: 'The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: "latest".'
    types:
    - uid: string
- name: EnvironmentReference
  kind: object
  properties:
  - name: name
    description: Name of the environment.
    types:
    - uid: string
  - name: version
    description: Version of the environment.
    types:
    - uid: string
- name: EnvironmentImageRequest.EnvironmentReference
  description: The unique identifying details of the AZURE ML environment.
  kind: object
  properties:
  - name: name
    description: Name of the environment.
    types:
    - uid: string
  - name: version
    description: Version of the environment.
    types:
    - uid: string
- name: Identity
  description: Identity for the resource.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal ID of resource identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant ID of resource.
    types:
    - uid: string
  - name: type
    description: The identity type.
    types:
    - uid: ResourceIdentityType
  - name: userAssignedIdentities
    description: The user assigned identities associated with the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: UserAssignedIdentity
- name: Sku
  description: Sku of the resource
  kind: object
  properties:
  - name: name
    description: Name of the sku
    types:
    - uid: string
  - name: tier
    description: Tier of the sku like Basic or Enterprise
    types:
    - uid: string
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: DatasetReference
  description: The dataset reference object.
  kind: object
  properties:
  - name: name
    description: The name of the dataset reference.
    types:
    - uid: string
  - name: id
    description: The id of the dataset reference.
    types:
    - uid: string
- name: Python
  description: Settings for a Python environment.
  kind: object
  properties:
  - name: interpreterPath
    description: The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script.
    types:
    - uid: string
  - name: userManagedDependencies
    description: True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.
    types:
    - uid: boolean
  - name: condaDependencies
    description: A JObject containing Conda dependencies.
    types:
    - uid: object
  - name: baseCondaEnvironment
    description: ''
    types:
    - uid: string
- name: Docker
  description: The definition of a Docker container.
  kind: object
  properties:
  - name: baseImage
    description: Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
    types:
    - uid: string
  - name: baseDockerfile
    description: Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
    types:
    - uid: string
  - name: baseImageRegistry
    description: Image registry that contains the base image.
    types:
    - uid: BaseImageRegistry
- name: Spark
  description: The configuration for a Spark environment.
  kind: object
  properties:
  - name: repositories
    description: The list of spark repositories.
    types:
    - uid: string
      isArray: true
  - name: packages
    description: The Spark packages to use.
    types:
    - uid: SparkMavenPackage
      isArray: true
  - name: precachePackages
    description: Whether to precache the packages.
    types:
    - uid: boolean
- name: R
  description: Settings for a R environment.
  kind: object
  properties:
  - name: rVersion
    description: The version of R to be installed
    types:
    - uid: string
  - name: userManaged
    description: Indicates whether the environment is managed by user or by AzureML.
    types:
    - uid: boolean
  - name: rscriptPath
    description: >-
      The Rscript path to use if an environment build is not required.

      The path specified gets used to call the user script.
    types:
    - uid: string
  - name: snapshotDate
    description: Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
    types:
    - uid: string
  - name: cranPackages
    description: The CRAN packages to use.
    types:
    - uid: RCranPackage
      isArray: true
  - name: gitHubPackages
    description: The packages directly from GitHub.
    types:
    - uid: RGitHubPackage
      isArray: true
  - name: customUrlPackages
    description: The packages from custom urls.
    types:
    - uid: string
      isArray: true
  - name: bioConductorPackages
    description: The packages from Bioconductor.
    types:
    - uid: string
      isArray: true
- name: ResourceIdentityType
  description: The identity type.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
  - name: SystemAssigned,UserAssigned
    types:
    - uid: string
  - name: UserAssigned
    types:
    - uid: string
  - name: None
    types:
    - uid: string
- name: UserAssignedIdentity
  description: User Assigned Identity
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal ID of the user assigned identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant ID of the user assigned identity.
    types:
    - uid: string
  - name: clientId
    isReadyOnly: true
    description: The clientId(aka appId) of the user assigned identity.
    types:
    - uid: string
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: ACIServiceResponse
  description: The response for an ACI service.
  kind: object
  properties:
  - name: description
    description: The service description.
    types:
    - uid: string
  - name: kvTags
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    description: The service property dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: state
    isReadyOnly: true
    description: The current state of the service.
    types:
    - uid: WebServiceState
  - name: error
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ServiceResponseBase.Error
  - name: computeType
    description: The compute environment type for the service.
    types:
    - uid: ACI
    typesTitle: string
  - name: deploymentType
    description: The deployment type for the service.
    types:
    - uid: DeploymentType
  - name: containerResourceRequirements
    description: The container resource requirements.
    types:
    - uid: ContainerResourceRequirements
  - name: scoringUri
    isReadyOnly: true
    description: The Uri for sending scoring requests.
    types:
    - uid: string
  - name: location
    description: The name of the Azure location/region.
    types:
    - uid: string
  - name: authEnabled
    description: Whether or not authentication is enabled on the service.
    types:
    - uid: boolean
  - name: sslEnabled
    description: Whether or not SSL is enabled.
    types:
    - uid: boolean
  - name: appInsightsEnabled
    description: Whether or not Application Insights is enabled.
    types:
    - uid: boolean
  - name: dataCollection
    description: Details of the data collection options specified.
    types:
    - uid: DataCollection
  - name: sslCertificate
    description: The public SSL certificate in PEM format to use if SSL is enabled.
    types:
    - uid: string
  - name: sslKey
    description: The public SSL key in PEM format for the certificate.
    types:
    - uid: string
  - name: cname
    description: The CName for the service.
    types:
    - uid: string
  - name: publicIp
    description: The public IP address for the service.
    types:
    - uid: string
  - name: publicFqdn
    description: The public Fqdn for the service.
    types:
    - uid: string
  - name: swaggerUri
    isReadyOnly: true
    description: The Uri for sending swagger requests.
    types:
    - uid: string
  - name: modelConfigMap
    isReadyOnly: true
    description: Details on the models and configurations.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: object
  - name: models
    description: The list of models.
    types:
    - uid: Model
      isArray: true
  - name: environmentImageRequest
    description: The Environment, models and assets used for inferencing.
    types:
    - uid: EnvironmentImageRequest
  - name: vnetConfiguration
    description: The virtual network configuration.
    types:
    - uid: VnetConfiguration
  - name: encryptionProperties
    description: The encryption properties.
    types:
    - uid: EncryptionProperties
- name: AKSVariantResponse
  description: The response for an AKS variant.
  kind: object
  properties:
  - name: description
    description: The service description.
    types:
    - uid: string
  - name: kvTags
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    description: The service property dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: state
    isReadyOnly: true
    description: The current state of the service.
    types:
    - uid: WebServiceState
  - name: error
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ServiceResponseBase.Error
  - name: computeType
    description: The compute environment type for the service.
    types:
    - uid: Custom
    typesTitle: string
  - name: deploymentType
    description: The deployment type for the service.
    types:
    - uid: DeploymentType
  - name: isDefault
    description: Is this the default variant.
    types:
    - uid: boolean
  - name: trafficPercentile
    description: The amount of traffic variant receives.
    types:
    - uid: number
  - name: type
    description: The type of the variant.
    types:
    - uid: VariantType
- name: AKSServiceResponse
  description: The response for an AKS service.
  kind: object
  properties:
  - name: description
    description: The service description.
    types:
    - uid: string
  - name: kvTags
    description: The service tag dictionary. Tags are mutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    description: The service property dictionary. Properties are immutable.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: state
    isReadyOnly: true
    description: The current state of the service.
    types:
    - uid: WebServiceState
  - name: error
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ServiceResponseBase.Error
  - name: computeType
    description: The compute environment type for the service.
    types:
    - uid: AKS
    typesTitle: string
  - name: deploymentType
    description: The deployment type for the service.
    types:
    - uid: DeploymentType
  - name: isDefault
    description: Is this the default variant.
    types:
    - uid: boolean
  - name: trafficPercentile
    description: The amount of traffic variant receives.
    types:
    - uid: number
  - name: type
    description: The type of the variant.
    types:
    - uid: VariantType
  - name: models
    description: The list of models.
    types:
    - uid: Model
      isArray: true
  - name: containerResourceRequirements
    description: The container resource requirements.
    types:
    - uid: ContainerResourceRequirements
  - name: maxConcurrentRequestsPerContainer
    description: The maximum number of concurrent requests per container.
    types:
    - uid: integer
  - name: maxQueueWaitMs
    description: Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
    types:
    - uid: integer
  - name: computeName
    description: The name of the compute resource.
    types:
    - uid: string
  - name: namespace
    description: The Kubernetes namespace of the deployment.
    types:
    - uid: string
  - name: numReplicas
    description: The number of replicas on the cluster.
    types:
    - uid: integer
  - name: dataCollection
    description: Details of the data collection options specified.
    types:
    - uid: DataCollection
  - name: appInsightsEnabled
    description: Whether or not Application Insights is enabled.
    types:
    - uid: boolean
  - name: autoScaler
    description: The auto scaler properties.
    types:
    - uid: AutoScaler
  - name: scoringUri
    isReadyOnly: true
    description: The Uri for sending scoring requests.
    types:
    - uid: string
  - name: deploymentStatus
    isReadyOnly: true
    description: The deployment status.
    types:
    - uid: DeploymentStatus
  - name: scoringTimeoutMs
    description: The scoring timeout in milliseconds.
    types:
    - uid: integer
  - name: livenessProbeRequirements
    description: The liveness probe requirements.
    types:
    - uid: LivenessProbeRequirements
  - name: authEnabled
    description: Whether or not authentication is enabled.
    types:
    - uid: boolean
  - name: aadAuthEnabled
    description: Whether or not AAD authentication is enabled.
    types:
    - uid: boolean
  - name: swaggerUri
    isReadyOnly: true
    description: The Uri for sending swagger requests.
    types:
    - uid: string
  - name: modelConfigMap
    isReadyOnly: true
    description: Details on the models and configurations.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: object
  - name: environmentImageRequest
    description: The Environment, models and assets used for inferencing.
    types:
    - uid: EnvironmentImageRequest
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
- name: BaseImageRegistry
  description: Image registry that contains the base image.
  kind: object
  properties:
  - name: address
    description: ''
    types:
    - uid: string
  - name: username
    description: ''
    types:
    - uid: string
  - name: password
    description: ''
    types:
    - uid: string
- name: SparkMavenPackage
  kind: object
  properties:
  - name: group
    description: ''
    types:
    - uid: string
  - name: artifact
    description: ''
    types:
    - uid: string
  - name: version
    description: ''
    types:
    - uid: string
- name: RCranPackage
  kind: object
  properties:
  - name: name
    description: The package name.
    types:
    - uid: string
  - name: repository
    description: The repository name.
    types:
    - uid: string
- name: RGitHubPackage
  kind: object
  properties:
  - name: repository
    description: Repository address in the format username/repo[/subdir][@ref|#pull].
    types:
    - uid: string
  - name: authToken
    description: Personal access token to install from a private repo
    types:
    - uid: string
- name: WebServiceState
  description: The current state of the service.
  kind: enum
  properties:
  - name: Transitioning
    types:
    - uid: string
  - name: Healthy
    types:
    - uid: string
  - name: Unhealthy
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Unschedulable
    types:
    - uid: string
- name: Error
  description: The error details.
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: ServiceResponseBase.Error
  description: The error details.
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: DeploymentType
  description: The deployment type for the service.
  kind: enum
  properties:
  - name: GRPCRealtimeEndpoint
    types:
    - uid: string
  - name: HttpRealtimeEndpoint
    types:
    - uid: string
  - name: Batch
    types:
    - uid: string
- name: DeploymentStatus
  description: The deployment status.
  kind: object
  properties:
  - name: desiredReplicas
    description: The desired number of replicas.
    types:
    - uid: integer
  - name: updatedReplicas
    description: The number of updated replicas.
    types:
    - uid: integer
  - name: availableReplicas
    description: The number of available replicas.
    types:
    - uid: integer
  - name: error
    description: The error details.
    types:
    - uid: Error
examples:
- name: Create Or Update service
  request:
    uri: PUT https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/workspaces123/services/service456?api-version=2021-03-01-preview
    body: >-
      {
        "computeType": "ACI",
        "environmentImageRequest": {
          "driverProgram": "score.py",
          "assets": [
            {
              "id": null,
              "mimeType": "application/x-python",
              "url": "aml://storage/azureml/score.py",
              "unpack": false
            }
          ],
          "models": [
            {
              "name": "sklearn_regression_model.pkl",
              "url": "aml://storage/azureml/sklearn_regression_model.pkl",
              "mimeType": "application/x-python"
            }
          ],
          "environment": {
            "name": "AzureML-Scikit-learn-0.20.3",
            "version": "3",
            "python": {
              "interpreterPath": "python",
              "userManagedDependencies": false,
              "condaDependencies": {
                "channels": [
                  "conda-forge"
                ],
                "dependencies": [
                  "python=3.6.2",
                  {
                    "pip": [
                      "azureml-core==1.0.69",
                      "azureml-defaults==1.0.69",
                      "azureml-telemetry==1.0.69",
                      "azureml-train-restclients-hyperdrive==1.0.69",
                      "azureml-train-core==1.0.69",
                      "scikit-learn==0.20.3",
                      "scipy==1.2.1",
                      "numpy==1.16.2",
                      "joblib==0.13.2"
                    ]
                  }
                ],
                "name": "azureml_ae1acbe6e1e6aabbad900b53c491a17c"
              },
              "baseCondaEnvironment": null
            },
            "environmentVariables": {
              "EXAMPLE_ENV_VAR": "EXAMPLE_VALUE"
            },
            "docker": {
              "baseImage": "mcr.microsoft.com/azureml/base:openmpi3.1.2-ubuntu16.04",
              "baseDockerfile": null,
              "baseImageRegistry": {
                "address": null,
                "username": null,
                "password": null
              }
            },
            "spark": {
              "repositories": [],
              "packages": [],
              "precachePackages": true
            },
            "inferencingStackVersion": null
          }
        },
        "containerResourceRequirements": {
          "cpu": 1,
          "memoryInGB": 1
        },
        "location": "eastus2",
        "authEnabled": true,
        "appInsightsEnabled": true
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/workspaces123/services/service456",
        "type": "Microsoft.MachineLearningServices/workspaces/services",
        "name": "service456",
        "systemData": {
          "createdBy": "string",
          "createdByType": "Application",
          "createdAt": "2020-02-03T01:01:01.1075056Z",
          "lastModifiedBy": "string",
          "lastModifiedByType": "Application",
          "lastModifiedAt": "2020-02-04T02:03:01.1974346Z"
        },
        "properties": {
          "computeType": "ACI",
          "containerResourceRequirements": {
            "cpu": 0.1,
            "memoryInGB": 0.5,
            "gpu": null,
            "fpga": null
          },
          "scoringUri": "http://ddde8e29-3e3a-42d2-980d-8fb7e005ab81.eastus2.azurecontainer.io/score",
          "location": "eastus2",
          "authEnabled": true,
          "sslEnabled": false,
          "appInsightsEnabled": true,
          "dataCollection": {
            "eventHubEnabled": false,
            "storageEnabled": false
          },
          "sslCertificate": "",
          "sslKey": "",
          "cname": null,
          "publicIp": "52.177.232.98",
          "publicFqdn": "ddde8e29-3e3a-42d2-980d-8fb7e005ab81.eastus2.azurecontainer.io",
          "modelConfigMap": {
            "accountContext": {
              "subscriptionId": "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345",
              "resourceGroupName": "testrg123",
              "accountName": "workspaces123",
              "workspaceId": "57b243e8-3d24-4427-90e0-8dc47f41c387"
            },
            "models": {
              "sklearn_regression_model1.pkl": {
                "version": 2,
                "id": "sklearn_regression_model1.pkl:2",
                "internalId": "3ab27a5b0d0e48d99f18a5195cc258bc"
              }
            },
            "modelsInfo": {
              "sklearn_regression_model1.pkl": {
                "2": {
                  "version": 2,
                  "id": "sklearn_regression_model1.pkl:2",
                  "internalId": "3ab27a5b0d0e48d99f18a5195cc258bc",
                  "dataCollectorStoragePath": "/modeldata/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/testrg123/workspaces123/service123/sklearn_regression_model1.pkl/2/"
                }
              }
            }
          },
          "environmentImageRequest": {
            "driverProgram": "score.py",
            "assets": [
              {
                "id": null,
                "mimeType": "application/x-python",
                "url": "aml://artifact/LocalUpload/200518T200218a1a8c0af/score.py",
                "unpack": false
              }
            ],
            "modelIds": [
              "sklearn_regression_model1.pkl:2"
            ],
            "environment": {
              "name": "AzureML-Scikit-learn-0.20.3",
              "version": "3",
              "python": {
                "interpreterPath": "python",
                "userManagedDependencies": false,
                "condaDependencies": {
                  "channels": [
                    "conda-forge"
                  ],
                  "dependencies": [
                    "python=3.6.2",
                    {
                      "pip": [
                        "azureml-core==1.0.69",
                        "azureml-defaults==1.0.69",
                        "azureml-telemetry==1.0.69",
                        "azureml-train-restclients-hyperdrive==1.0.69",
                        "azureml-train-core==1.0.69",
                        "scikit-learn==0.20.3",
                        "scipy==1.2.1",
                        "numpy==1.16.2",
                        "joblib==0.13.2"
                      ]
                    }
                  ],
                  "name": "azureml_ae1acbe6e1e6aabbad900b53c491a17c"
                },
                "baseCondaEnvironment": null
              },
              "environmentVariables": {
                "EXAMPLE_ENV_VAR": "EXAMPLE_VALUE"
              },
              "docker": {
                "baseImage": "mcr.microsoft.com/azureml/base:openmpi3.1.2-ubuntu16.04",
                "baseDockerfile": null,
                "baseImageRegistry": {
                  "address": null
                }
              },
              "spark": {
                "repositories": [],
                "packages": [],
                "precachePackages": true
              },
              "inferencingStackVersion": null
            }
          },
          "description": null,
          "kvTags": {},
          "properties": {
            "hasInferenceSchema": "False",
            "hasHttps": "False"
          },
          "state": "Transitioning"
        }
      }
  - statusCode: "201"
    headers:
    - name: Azure-AsyncOperation
      value: https://management.azure.com/subscriptions/...pathToOperationStatus...
security: []
errorCodes: []
