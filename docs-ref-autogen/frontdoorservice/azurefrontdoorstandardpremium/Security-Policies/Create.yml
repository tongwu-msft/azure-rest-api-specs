### YamlMime:RESTOperation
uid: management.azure.com.frontdoorservice.azurefrontdoorstandardpremium.securitypolicies.create
name: Create
service: Front Door Service
groupName: Security Policies
apiVersion: 2021-06-01
summary: Creates a new security policy within the specified profile.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/securityPolicies/{securityPolicyName}?api-version=2021-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Azure Subscription ID.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the Resource group within the Azure subscription.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: profileName
  in: path
  isRequired: true
  description: Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group.
  types:
  - uid: string
- name: securityPolicyName
  in: path
  isRequired: true
  description: Name of the security policy under the profile.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request. Current version is 2021-06-01.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: SecurityPolicy
- name: 201 Created
  description: Created. The request has been fulfilled and a new delivery rule has been created.
  types:
  - uid: SecurityPolicy
- name: 202 Accepted
  description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
  types:
  - uid: SecurityPolicy
- name: Other Status Codes
  description: CDN error response describing why the operation failed.
  types:
  - uid: AfdErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.parameters
    in: body
    description: object which contains security policy parameters
    types:
    - uid: SecurityPolicyWebApplicationFirewallParameters
    typesTitle: SecurityPolicyPropertiesParameters
requestHeader: []
definitions:
- name: SystemData
  description: Read only system data
  kind: object
  properties:
  - name: createdBy
    description: An identifier for the identity that created the resource
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource
    types:
    - uid: IdentityType
  - name: createdAt
    description: The timestamp of resource creation (UTC)
    types:
    - uid: string
  - name: lastModifiedBy
    description: An identifier for the identity that last modified the resource
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource
    types:
    - uid: IdentityType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: SecurityPolicy
  description: SecurityPolicy association for AzureFrontDoor profile
  kind: object
  properties:
  - name: properties.profileName
    isReadyOnly: true
    description: The name of the profile which holds the security policy.
    types:
    - uid: string
  - name: properties.parameters
    description: object which contains security policy parameters
    types:
    - uid: SecurityPolicyWebApplicationFirewallParameters
    typesTitle: SecurityPolicyPropertiesParameters
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: systemData
    isReadyOnly: true
    description: Read only system data
    types:
    - uid: SystemData
  - name: properties.provisioningState
    isReadyOnly: true
    description: Provisioning status
    types:
    - uid: AfdProvisioningState
  - name: properties.deploymentStatus
    isReadyOnly: true
    description: ''
    types:
    - uid: DeploymentStatus
- name: AfdErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: SecurityPolicyWebApplicationFirewallParameters
  description: The json object containing security policy waf parameters
  kind: object
  properties:
  - name: wafPolicy
    description: Resource ID.
    types:
    - uid: ResourceReference
  - name: associations
    description: Waf associations
    types:
    - uid: SecurityPolicyWebApplicationFirewallAssociation
      isArray: true
  - name: type
    description: The type of the Security policy to create.
    types:
    - uid: WebApplicationFirewall
    typesTitle: string
- name: IdentityType
  description: The type of identity that creates/modifies resources
  kind: enum
  properties:
  - name: user
    types:
    - uid: string
  - name: application
    types:
    - uid: string
  - name: managedIdentity
    types:
    - uid: string
  - name: key
    types:
    - uid: string
- name: AfdProvisioningState
  description: Provisioning status
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
- name: DeploymentStatus
  kind: enum
  properties:
  - name: NotStarted
    types:
    - uid: string
  - name: InProgress
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ResourceReference
  description: Reference to another resource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: SecurityPolicyWebApplicationFirewallAssociation
  description: settings for security policy patterns to match
  kind: object
  properties:
  - name: domains
    description: List of domains.
    types:
    - uid: ActivatedResourceReference
      isArray: true
  - name: patternsToMatch
    description: List of paths
    types:
    - uid: string
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
- name: ActivatedResourceReference
  description: Reference to another resource along with its state.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
  - name: isActive
    isReadyOnly: true
    description: Whether the resource is active or inactive
    types:
    - uid: boolean
examples:
- name: SecurityPolicies_Create
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/securityPolicies/securityPolicy1?api-version=2021-06-01
    body: >-
      {
        "properties": {
          "parameters": {
            "type": "WebApplicationFirewall",
            "wafPolicy": {
              "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Network/frontdoorwebapplicationfirewallpolicies/wafTest"
            },
            "associations": [
              {
                "domains": [
                  {
                    "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain1"
                  },
                  {
                    "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain2"
                  }
                ],
                "patternsToMatch": [
                  "/*"
                ]
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/securityPolicies/securityPolicy1?api-version=2021-06-01

      {
        "properties": {
          "parameters": {
            "type": "WebApplicationFirewall",
            "wafPolicy": {
              "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Network/frontdoorwebapplicationfirewallpolicies/wafTest"
            },
            "associations": [
              {
                "domains": [
                  {
                    "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain1"
                  },
                  {
                    "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain2"
                  }
                ],
                "patternsToMatch": [
                  "/*"
                ]
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.cdn.fluent.models.SecurityPolicyInner;
      import com.azure.resourcemanager.cdn.models.ActivatedResourceReference;
      import com.azure.resourcemanager.cdn.models.ResourceReference;
      import com.azure.resourcemanager.cdn.models.SecurityPolicyWebApplicationFirewallAssociation;
      import com.azure.resourcemanager.cdn.models.SecurityPolicyWebApplicationFirewallParameters;
      import java.util.Arrays;

      /** Samples for SecurityPolicies Create. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cdn/resource-manager/Microsoft.Cdn/stable/2021-06-01/examples/SecurityPolicies_Create.json
           */
          /**
           * Sample code: SecurityPolicies_Create.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void securityPoliciesCreate(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .cdnProfiles()
                  .manager()
                  .serviceClient()
                  .getSecurityPolicies()
                  .create(
                      "RG",
                      "profile1",
                      "securityPolicy1",
                      new SecurityPolicyInner()
                          .withParameters(
                              new SecurityPolicyWebApplicationFirewallParameters()
                                  .withWafPolicy(
                                      new ResourceReference()
                                          .withId(
                                              "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Network/frontdoorwebapplicationfirewallpolicies/wafTest"))
                                  .withAssociations(
                                      Arrays
                                          .asList(
                                              new SecurityPolicyWebApplicationFirewallAssociation()
                                                  .withDomains(
                                                      Arrays
                                                          .asList(
                                                              new ActivatedResourceReference()
                                                                  .withId(
                                                                      "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/afddomains/testdomain1"),
                                                              new ActivatedResourceReference()
                                                                  .withId(
                                                                      "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/afddomains/testdomain2")))
                                                  .withPatternsToMatch(Arrays.asList("/*"))))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcdn_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/cdn/armcdn"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cdn/resource-manager/Microsoft.Cdn/stable/2021-06-01/examples/SecurityPolicies_Create.json
      func ExampleSecurityPoliciesClient_BeginCreate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcdn.NewSecurityPoliciesClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreate(ctx,
      		"RG",
      		"profile1",
      		"securityPolicy1",
      		armcdn.SecurityPolicy{
      			Properties: &armcdn.SecurityPolicyProperties{
      				Parameters: &armcdn.SecurityPolicyWebApplicationFirewallParameters{
      					Type: to.Ptr(armcdn.SecurityPolicyTypeWebApplicationFirewall),
      					Associations: []*armcdn.SecurityPolicyWebApplicationFirewallAssociation{
      						{
      							Domains: []*armcdn.ActivatedResourceReference{
      								{
      									ID: to.Ptr("/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain1"),
      								},
      								{
      									ID: to.Ptr("/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain2"),
      								}},
      							PatternsToMatch: []*string{
      								to.Ptr("/*")},
      						}},
      					WafPolicy: &armcdn.ResourceReference{
      						ID: to.Ptr("/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Network/frontdoorwebapplicationfirewallpolicies/wafTest"),
      					},
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcdn%2Farmcdn%2Fv1.0.0/sdk/resourcemanager/cdn/armcdn/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { CdnManagementClient } = require("@azure/arm-cdn");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates a new security policy within the specified profile.
       *
       * @summary Creates a new security policy within the specified profile.
       * x-ms-original-file: specification/cdn/resource-manager/Microsoft.Cdn/stable/2021-06-01/examples/SecurityPolicies_Create.json
       */
      async function securityPoliciesCreate() {
        const subscriptionId = "subid";
        const resourceGroupName = "RG";
        const profileName = "profile1";
        const securityPolicyName = "securityPolicy1";
        const securityPolicy = {
          parameters: {
            type: "WebApplicationFirewall",
            associations: [
              {
                domains: [
                  {
                    id: "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/afddomains/testdomain1",
                  },
                  {
                    id: "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/afddomains/testdomain2",
                  },
                ],
                patternsToMatch: ["/*"],
              },
            ],
            wafPolicy: {
              id: "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Network/frontdoorwebapplicationfirewallpolicies/wafTest",
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new CdnManagementClient(credential, subscriptionId);
        const result = await client.securityPolicies.beginCreateAndWait(
          resourceGroupName,
          profileName,
          securityPolicyName,
          securityPolicy
        );
        console.log(result);
      }

      securityPoliciesCreate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-cdn_7.0.0/sdk/cdn/arm-cdn/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "securityPolicy1",
        "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/securitypolicies/securityPolicy1",
        "type": "Microsoft.Cdn/profiles/securitypolicies",
        "properties": {
          "parameters": {
            "type": "WebApplicationFirewall",
            "wafPolicy": {
              "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Network/frontdoorwebapplicationfirewallpolicies/wafTest"
            },
            "associations": [
              {
                "domains": [
                  {
                    "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain1"
                  },
                  {
                    "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain2"
                  }
                ],
                "patternsToMatch": [
                  "/*"
                ]
              }
            ]
          },
          "deploymentStatus": "NotStarted",
          "provisioningState": "Succeeded"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "securityPolicy1",
        "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/securitypolicies/securityPolicy1",
        "type": "Microsoft.Cdn/profiles/securitypolicies",
        "properties": {
          "parameters": {
            "type": "WebApplicationFirewall",
            "wafPolicy": {
              "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Network/frontdoorwebapplicationfirewallpolicies/wafTest"
            },
            "associations": [
              {
                "domains": [
                  {
                    "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain1"
                  },
                  {
                    "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain2"
                  }
                ],
                "patternsToMatch": [
                  "/*"
                ]
              }
            ]
          },
          "deploymentStatus": "NotStarted",
          "provisioningState": "Succeeded"
        }
      }
  - statusCode: "202"
    body: >-
      {
        "name": "securityPolicy1",
        "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/securitypolicies/securityPolicy1",
        "type": "Microsoft.Cdn/profiles/securitypolicies",
        "properties": {
          "parameters": {
            "type": "WebApplicationFirewall",
            "wafPolicy": {
              "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Network/frontdoorwebapplicationfirewallpolicies/wafTest"
            },
            "associations": [
              {
                "domains": [
                  {
                    "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain1"
                  },
                  {
                    "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/customdomains/testdomain2"
                  }
                ],
                "patternsToMatch": [
                  "/*"
                ]
              }
            ]
          },
          "deploymentStatus": "NotStarted",
          "provisioningState": "Creating"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Front Door Service service - Creates a new security policy within the specified profile.
errorCodes: []
