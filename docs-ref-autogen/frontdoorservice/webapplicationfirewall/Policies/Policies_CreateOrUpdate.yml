### YamlMime:RESTOperation
uid: management.azure.com.frontdoorservice.policies.policies_createorupdate
name: Create Or Update
service: Front Door Service
groupName: Policies
apiVersion: 2018-08-01
summary: Creates or update policy with specified ruleset name within a resource group.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/{policyName}?api-version=2018-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: policyName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK. The request has succeeded.
  types:
  - uid: WebApplicationFirewallPolicy
- name: 201 Created
  description: Created. The request has been fulfilled and a new protection policy has been created.
  types:
  - uid: WebApplicationFirewallPolicy
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: etag
    in: body
    description: Gets a unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.policySettings
    in: body
    description: Describes  policySettings for policy
    types:
    - uid: policySettings
  - name: properties.customRules
    in: body
    description: Describes custom rules inside the policy
    types:
    - uid: CustomRules
  - name: properties.managedRules
    in: body
    description: Describes managed rules inside the policy
    types:
    - uid: ManagedRuleSets
  - name: location
    in: body
    description: Resource location.
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: policySettings
  description: Defines contents of a web application firewall global configuration
  kind: object
  properties:
  - name: enabledState
    description: describes if the policy is in enabled state or disabled state
    types:
    - uid: enabledState
  - name: mode
    description: Describes if it is in detection mode  or prevention mode at policy level
    types:
    - uid: mode
- name: CustomRules
  description: Defines contents of custom rules
  kind: object
  properties:
  - name: rules
    description: List of rules
    types:
    - uid: CustomRule
      isArray: true
- name: ManagedRuleSets
  description: Defines ManagedRuleSets - array of managedRuleSet
  kind: object
  properties:
  - name: ruleSets
    description: List of rules
    types:
    - uid: AzureManagedRuleSet
      isArray: true
    typesTitle: ManagedRuleSet[]
- name: WebApplicationFirewallPolicy
  description: Defines web application firewall policy.
  kind: object
  properties:
  - name: etag
    description: Gets a unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.policySettings
    description: Describes  policySettings for policy
    types:
    - uid: policySettings
  - name: properties.customRules
    description: Describes custom rules inside the policy
    types:
    - uid: CustomRules
  - name: properties.managedRules
    description: Describes managed rules inside the policy
    types:
    - uid: ManagedRuleSets
  - name: properties.provisioningState
    isReadyOnly: true
    description: Provisioning state of the WebApplicationFirewallPolicy.
    types:
    - uid: string
  - name: properties.resourceState
    isReadyOnly: true
    description: Resource status of the policy.
    types:
    - uid: WebApplicationFirewallPolicy
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: ErrorResponse
  description: Error reponse indicates Front Door service is not able to process the incoming request. The reason is provided in the error message.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Error message indicating why the operation failed.
    types:
    - uid: string
- name: enabledState
  description: describes if the policy is in enabled state or disabled state
  kind: enum
  properties:
  - name: Disabled
    types:
    - uid: string
  - name: Enabled
    types:
    - uid: string
- name: mode
  description: Describes if it is in detection mode  or prevention mode at policy level
  kind: enum
  properties:
  - name: Prevention
    types:
    - uid: string
  - name: Detection
    types:
    - uid: string
- name: CustomRule
  description: Defines contents of a web application rule
  kind: object
  properties:
  - name: name
    description: Gets name of the resource that is unique within a policy. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: Gets a unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: priority
    description: Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value
    types:
    - uid: integer
  - name: ruleType
    description: Describes type of rule
    types:
    - uid: ruleType
  - name: rateLimitDurationInMinutes
    description: Defines rate limit duration. Default - 1 minute
    types:
    - uid: integer
  - name: rateLimitThreshold
    description: Defines rate limit thresold
    types:
    - uid: integer
  - name: matchConditions
    description: List of match conditions
    types:
    - uid: MatchCondition
      isArray: true
  - name: action
    description: Type of Actions
    types:
    - uid: action
  - name: transforms
    description: List of transforms
    types:
    - uid: string
      isArray: true
- name: ruleType
  description: Describes type of rule
  kind: enum
  properties:
  - name: MatchRule
    types:
    - uid: string
  - name: RateLimitRule
    types:
    - uid: string
- name: MatchCondition
  description: Define match conditions
  kind: object
  properties:
  - name: matchVariable
    description: Match Variable
    types:
    - uid: MatchCondition
  - name: selector
    description: Name of selector in RequestHeader or RequestBody to be matched
    types:
    - uid: string
  - name: operator
    description: Describes operator to be matched
    types:
    - uid: operator
  - name: negateCondition
    description: Describes if this is negate condition or not
    types:
    - uid: boolean
  - name: matchValue
    description: Match value
    types:
    - uid: string
      isArray: true
- name: action
  description: Type of Actions
  kind: enum
  properties:
  - name: Allow
    types:
    - uid: string
  - name: Block
    types:
    - uid: string
  - name: Log
    types:
    - uid: string
- name: AzureManagedRuleSet
  description: Describes azure managed provider.
  kind: object
  properties:
  - name: ruleGroupOverrides
    description: List of azure managed provider override configuration (optional)
    types:
    - uid: AzureManagedOverrideRuleGroup
      isArray: true
  - name: priority
    description: Describes priority of the rule
    types:
    - uid: integer
  - name: version
    description: defines version of the ruleset
    types:
    - uid: integer
  - name: ruleSetType
    description: RuleSetType - AzureManagedRuleSet or OWASP RuleSets.
    types:
    - uid: Unknown
    typesTitle: string
- name: operator
  description: Describes operator to be matched
  kind: enum
  properties:
  - name: Any
    types:
    - uid: string
  - name: IPMatch
    types:
    - uid: string
  - name: GeoMatch
    types:
    - uid: string
  - name: Equal
    types:
    - uid: string
  - name: Contains
    types:
    - uid: string
  - name: LessThan
    types:
    - uid: string
  - name: GreaterThan
    types:
    - uid: string
  - name: LessThanOrEqual
    types:
    - uid: string
  - name: GreaterThanOrEqual
    types:
    - uid: string
  - name: BeginsWith
    types:
    - uid: string
  - name: EndsWith
    types:
    - uid: string
- name: AzureManagedOverrideRuleGroup
  description: Defines contents of a web application rule
  kind: object
  properties:
  - name: ruleGroupOverride
    description: Describes overrideruleGroup
    types:
    - uid: ruleGroupOverride
  - name: action
    description: Type of Actions
    types:
    - uid: action
- name: ruleGroupOverride
  description: Describes overrideruleGroup
  kind: enum
  properties:
  - name: SqlInjection
    types:
    - uid: string
  - name: XSS
    types:
    - uid: string
examples:
- name: Creates specific policy
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/Policy1?api-version=2018-08-01
    body: >-
      {
        "properties": {
          "customRules": {
            "rules": [
              {
                "name": "Rule1",
                "priority": 1,
                "ruleType": "RateLimitRule",
                "rateLimitThreshold": 1000,
                "matchConditions": [
                  {
                    "matchVariable": "RemoteAddr",
                    "operator": "IPMatch",
                    "matchValue": [
                      "192.168.1.0/24",
                      "10.0.0.0/24"
                    ]
                  }
                ],
                "action": "Block"
              },
              {
                "name": "Rule2",
                "priority": 2,
                "ruleType": "MatchRule",
                "matchConditions": [
                  {
                    "matchVariable": "RemoteAddr",
                    "operator": "GeoMatch",
                    "matchValue": [
                      "CH"
                    ]
                  },
                  {
                    "matchVariable": "RequestHeader",
                    "operator": "Contains",
                    "selector": "UserAgent",
                    "matchValue": [
                      "Windows"
                    ]
                  }
                ],
                "action": "Block"
              }
            ]
          },
          "managedRules": {
            "ruleSets": [
              {
                "ruleSetType": "AzureManagedRuleSet",
                "priority": 1,
                "ruleGroupOverrides": [
                  {
                    "ruleGroupOverride": "SqlInjection",
                    "action": "Block"
                  },
                  {
                    "ruleGroupOverride": "XSS",
                    "action": "Log"
                  }
                ]
              }
            ]
          }
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "Policy1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/Policy1",
        "type": "Microsoft.Network/frontdoorwebapplicationfirewallpolicies",
        "tags": {
          "key1": "value1",
          "key2": "value2"
        },
        "location": "WestUs",
        "properties": {
          "resourceState": "Enabled",
          "provisioningState": "Succeeded",
          "policySettings": {
            "enabledState": "Enabled",
            "mode": "Prevention"
          },
          "customRules": {
            "rules": [
              {
                "name": "Rule1",
                "priority": 1,
                "ruleType": "RateLimitRule",
                "rateLimitDurationInMinutes": 0,
                "rateLimitThreshold": 1000,
                "matchConditions": [
                  {
                    "matchVariable": "RemoteAddr",
                    "selector": null,
                    "operator": "IPMatch",
                    "negateCondition": false,
                    "matchValue": [
                      "192.168.1.0/24",
                      "10.0.0.0/24"
                    ]
                  }
                ],
                "action": "Block",
                "transforms": []
              },
              {
                "name": "Rule2",
                "priority": 2,
                "ruleType": "MatchRule",
                "rateLimitDurationInMinutes": 0,
                "rateLimitThreshold": 0,
                "matchConditions": [
                  {
                    "matchVariable": "RemoteAddr",
                    "selector": null,
                    "operator": "GeoMatch",
                    "negateCondition": false,
                    "matchValue": [
                      "CH"
                    ]
                  },
                  {
                    "matchVariable": "RequestHeader",
                    "selector": "UserAgent",
                    "operator": "Contains",
                    "negateCondition": false,
                    "matchValue": [
                      "Windows"
                    ]
                  }
                ],
                "action": "Block",
                "transforms": []
              }
            ]
          },
          "managedRules": {
            "ruleSets": [
              {
                "priority": 1,
                "version": 0,
                "ruleSetType": "AzureManagedRuleSet",
                "ruleGroupOverrides": [
                  {
                    "ruleGroupOverride": "SqlInjection",
                    "action": "Block"
                  },
                  {
                    "ruleGroupOverride": "XSS",
                    "action": "Log"
                  }
                ]
              }
            ]
          }
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "Policy1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/Policy1",
        "type": "Microsoft.Network/frontdoorwebapplicationfirewallpolicies",
        "tags": {
          "key1": "value1",
          "key2": "value2"
        },
        "location": "WestUs",
        "properties": {
          "resourceState": "Enabled",
          "provisioningState": "Succeeded",
          "policySettings": {
            "enabledState": "Enabled",
            "mode": "Prevention"
          },
          "customRules": {
            "rules": [
              {
                "name": "Rule1",
                "priority": 1,
                "ruleType": "RateLimitRule",
                "rateLimitDurationInMinutes": 0,
                "rateLimitThreshold": 1000,
                "matchConditions": [
                  {
                    "matchVariable": "RemoteAddr",
                    "selector": null,
                    "operator": "IPMatch",
                    "negateCondition": false,
                    "matchValue": [
                      "192.168.1.0/24",
                      "10.0.0.0/24"
                    ]
                  }
                ],
                "action": "Block",
                "transforms": []
              },
              {
                "name": "Rule2",
                "priority": 2,
                "ruleType": "MatchRule",
                "rateLimitDurationInMinutes": 0,
                "rateLimitThreshold": 0,
                "matchConditions": [
                  {
                    "matchVariable": "RemoteAddr",
                    "selector": null,
                    "operator": "GeoMatch",
                    "negateCondition": false,
                    "matchValue": [
                      "CH"
                    ]
                  },
                  {
                    "matchVariable": "RequestHeader",
                    "selector": "UserAgent",
                    "operator": "Contains",
                    "negateCondition": false,
                    "matchValue": [
                      "Windows"
                    ]
                  }
                ],
                "action": "Block",
                "transforms": []
              }
            ]
          },
          "managedRules": {
            "ruleSets": [
              {
                "priority": 1,
                "version": 0,
                "ruleSetType": "AzureManagedRuleSet",
                "ruleGroupOverrides": [
                  {
                    "ruleGroupOverride": "SqlInjection",
                    "action": "Block"
                  },
                  {
                    "ruleGroupOverride": "XSS",
                    "action": "Log"
                  }
                ]
              }
            ]
          }
        }
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
