### YamlMime:RESTOperation
uid: management.azure.com.storagecache.storagetarget.invalidate
name: Invalidate
service: Storagecache
groupName: Storage Target
apiVersion: 2022-05-01
summary: Invalidate all cached data for a storage target. Cached files are discarded and fetched from the back end on the next request.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}/invalidate?api-version=2022-05-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Target resource group.
  types:
  - uid: string
- name: cacheName
  in: path
  isRequired: true
  description: Name of Cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class.
  types:
  - uid: string
  pattern: ^[-0-9a-zA-Z_]{1,80}$
- name: storageTargetName
  in: path
  isRequired: true
  description: Name of Storage Target.
  types:
  - uid: string
  pattern: ^[-0-9a-zA-Z_]{1,80}$
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: All cached data for the storage target was invalidated
- name: 202 Accepted
  description: Storage target invalidation has started. Poll the storage target's state field to monitor progress.
- name: 204 No Content
  description: The storage target already has been invalidated, or invalidate is in progress.
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: CloudError
  description: An error response.
  kind: object
  properties:
  - name: error
    description: The body of the error.
    types:
    - uid: CloudErrorBody
- name: CloudErrorBody
  description: An error response.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
examples:
- name: StorageTargets_Invalidate
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/scgroup/providers/Microsoft.StorageCache/caches/sc/storageTargets/st1/invalidate?api-version=2022-01-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/scgroup/providers/Microsoft.StorageCache/caches/sc/storageTargets/st1/invalidate?api-version=2022-01-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for StorageTargetOperation Invalidate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/storagecache/resource-manager/Microsoft.StorageCache/stable/2022-01-01/examples/StorageTargets_Invalidate.json
           */
          /**
           * Sample code: StorageTargets_Invalidate.
           *
           * @param manager Entry point to StorageCacheManager.
           */
          public static void storageTargetsInvalidate(com.azure.resourcemanager.storagecache.StorageCacheManager manager) {
              manager.storageTargetOperations().invalidate("scgroup", "sc", "st1", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-storagecache_1.0.0-beta.5/sdk/storagecache/azure-resourcemanager-storagecache/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armstoragecache_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storagecache/armstoragecache"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storagecache/resource-manager/Microsoft.StorageCache/stable/2022-01-01/examples/StorageTargets_Invalidate.json
      func ExampleStorageTargetClient_BeginInvalidate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstoragecache.NewStorageTargetClient("00000000-0000-0000-0000-000000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginInvalidate(ctx,
      		"scgroup",
      		"sc",
      		"st1",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	_, err = poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstoragecache%2Farmstoragecache%2Fv1.0.0/sdk/resourcemanager/storagecache/armstoragecache/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { StorageCacheManagementClient } = require("@azure/arm-storagecache");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Invalidate all cached data for a storage target. Cached files are discarded and fetched from the back end on the next request.
       *
       * @summary Invalidate all cached data for a storage target. Cached files are discarded and fetched from the back end on the next request.
       * x-ms-original-file: specification/storagecache/resource-manager/Microsoft.StorageCache/stable/2022-01-01/examples/StorageTargets_Invalidate.json
       */
      async function storageTargetsInvalidate() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "scgroup";
        const cacheName = "sc";
        const storageTargetName = "st1";
        const credential = new DefaultAzureCredential();
        const client = new StorageCacheManagementClient(credential, subscriptionId);
        const result = await client.storageTargetOperations.beginInvalidateAndWait(
          resourceGroupName,
          cacheName,
          storageTargetName
        );
        console.log(result);
      }

      storageTargetsInvalidate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storagecache_5.1.0/sdk/storagecache/arm-storagecache/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
  - statusCode: "202"
  - statusCode: "204"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Invalidate all cached data for a storage target. Cached files are discarded and fetched from the back end on the next request.
errorCodes: []
