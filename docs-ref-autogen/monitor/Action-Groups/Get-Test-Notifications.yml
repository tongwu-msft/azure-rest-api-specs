### YamlMime:RESTOperation
uid: management.azure.com.monitor.actiongroups.gettestnotifications
name: Get Test Notifications
service: Monitor
groupName: Action Groups
apiVersion: 2021-09-01
summary: Get the test notifications by the notification id
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Insights/notificationStatus/{notificationId}?api-version=2021-09-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: notificationId
  in: path
  isRequired: true
  description: The notification id
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The notification details
  types:
  - uid: TestNotificationDetailsResponse
- name: Other Status Codes
  description: An error occurred while sending the test notifications
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: TestNotificationDetailsResponse
  description: The details of the test notification results.
  kind: object
  properties:
  - name: context
    description: The context info
    types:
    - uid: Context
  - name: state
    description: The overall state
    types:
    - uid: string
  - name: completedTime
    description: The completed time
    types:
    - uid: string
  - name: createdTime
    description: The created time
    types:
    - uid: string
  - name: actionDetails
    description: The list of action detail
    types:
    - uid: ActionDetail
      isArray: true
- name: ErrorResponse
  description: Describes the format of Error response.
  kind: object
  properties:
  - name: code
    description: Error code
    types:
    - uid: string
  - name: message
    description: Error message indicating why the operation failed.
    types:
    - uid: string
- name: Context
  description: The context info
  kind: object
  properties:
  - name: notificationSource
    description: The source of the notification request
    types:
    - uid: string
  - name: contextType
    description: The context id type
    types:
    - uid: string
- name: ActionDetail
  description: The action detail
  kind: object
  properties:
  - name: MechanismType
    description: The mechanism type
    types:
    - uid: string
  - name: Name
    description: The name of the action
    types:
    - uid: string
  - name: Status
    description: The status of the action
    types:
    - uid: string
  - name: SubState
    description: The substatus of the action
    types:
    - uid: string
  - name: SendTime
    description: The send time
    types:
    - uid: string
  - name: Detail
    description: The detail of the friendly error message
    types:
    - uid: string
examples:
- name: Get notification details at subscription level
  request:
    uri: GET https://management.azure.com/subscriptions/187f412d-1758-44d9-b052-169e2564721d/providers/Microsoft.Insights/notificationStatus/11000222191287?api-version=2021-09-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/187f412d-1758-44d9-b052-169e2564721d/providers/Microsoft.Insights/notificationStatus/11000222191287?api-version=2021-09-01
      ```

      # [Go](#tab/Go)
      ``` go
      package armmonitor_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/monitor/armmonitor"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/monitor/resource-manager/Microsoft.Insights/stable/2021-09-01/examples/getTestNotifications.json
      func ExampleActionGroupsClient_GetTestNotifications() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      		return
      	}
      	ctx := context.Background()
      	client, err := armmonitor.NewActionGroupsClient("<subscription-id>", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      		return
      	}
      	res, err := client.GetTestNotifications(ctx,
      		"<notification-id>",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      		return
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fmonitor%2Farmmonitor%2Fv0.6.0/sdk/resourcemanager/monitor/armmonitor/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "context": {
          "notificationSource": "Microsoft.Insights/TestNotification",
          "contextType": "Microsoft.Insights/Budget"
        },
        "state": "Completed",
        "completedTime": "0001-01-01T00:00:00+00:00",
        "createdTime": "2021-09-21T04:52:29.5091168+00:00",
        "actionDetails": [
          {
            "MechanismType": "AzureAppPush",
            "Name": "AzureAppPush-name",
            "Status": "Completed",
            "SubState": "Default",
            "SendTime": "2021-09-21T04:52:42.8620629+00:00",
            "Detail": null
          },
          {
            "MechanismType": "AzureFunction",
            "Name": "AzureFunction-name",
            "Status": "Completed",
            "SubState": "Default",
            "SendTime": "2021-09-21T04:52:42.0623319+00:00",
            "Detail": null
          },
          {
            "MechanismType": "Email",
            "Name": "Email-name",
            "Status": "Completed",
            "SubState": "Default",
            "SendTime": "2021-09-21T04:52:40.7480368+00:00",
            "Detail": null
          },
          {
            "MechanismType": "LogicApp",
            "Name": "LogicApp-Name",
            "Status": "Completed",
            "SubState": "Default",
            "SendTime": "2021-09-21T04:52:42.2473419+00:00",
            "Detail": null
          },
          {
            "MechanismType": "Webhook",
            "Name": "Webhook-name",
            "Status": "Completed",
            "SubState": "Default",
            "SendTime": "2021-09-21T04:52:42.0723479+00:00",
            "Detail": null
          },
          {
            "MechanismType": "SecureWebhook",
            "Name": "SecureWebhook-name",
            "Status": "Completed",
            "SubState": "Default",
            "SendTime": "2021-09-21T04:52:42.0723479+00:00",
            "Detail": null
          },
          {
            "MechanismType": "Sms",
            "Name": "Sms-name",
            "Status": "Completed",
            "SubState": "Default",
            "SendTime": "2021-09-21T04:52:41.353015+00:00",
            "Detail": null
          },
          {
            "MechanismType": "Voice",
            "Name": "Voice-name",
            "Status": "Completed",
            "SubState": "Default",
            "SendTime": "2021-09-21T04:52:41.6330734+00:00",
            "Detail": null
          },
          {
            "MechanismType": "EventHub",
            "Name": "EventHub-name",
            "Status": "Completed",
            "SubState": "Default",
            "SendTime": "2021-09-21T04:52:42.0723479+00:00",
            "Detail": null
          },
          {
            "MechanismType": "AutomationRunbook",
            "Name": "AutomationRunbook-name",
            "Status": "Completed",
            "SubState": "Default",
            "SendTime": "2021-09-21T04:52:42.0723479+00:00",
            "Detail": null
          },
          {
            "MechanismType": "Itsm",
            "Name": "Itsm-name",
            "Status": "Completed",
            "SubState": "Default",
            "SendTime": "2021-09-21T04:52:42.0723479+00:00",
            "Detail": null
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Monitor service - Get the test notifications by the notification id
errorCodes: []
