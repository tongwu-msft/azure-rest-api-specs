{
  "swagger": "2.0",
  "info": {
    "version": "2019-09-01",
    "title": "PolicyClient",
    "description": "To manage and control access to your resources, you can define customized policies and assign them at a scope."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.Authorization/policySetDefinitions": {
      "get": {
        "tags": [
          "PolicySetDefinitions"
        ],
        "operationId": "PolicySetDefinitions_ListBuiltIn",
        "summary": "Retrieves built-in policy set definitions.",
        "description": "This operation retrieves a list of all the built-in policy set definitions.",
        "x-ms-examples": {
          "List built-in policy set definitions": {
            "parameters": {
              "api-version": "2019-09-01"
            },
            "responses": {
              "200": {
                "headers": {},
                "body": {
                  "value": [
                    {
                      "properties": {
                        "displayName": "[Preview]: Enable Monitoring in Azure Security Center",
                        "policyType": "BuiltIn",
                        "description": "Monitor all the available security recommendations in Azure Security Center. This is the default policy for Azure Security Center.",
                        "metadata": {
                          "category": "Security Center"
                        },
                        "parameters": {},
                        "policyDefinitions": [
                          {
                            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a8bef009-a5c9-4d0f-90d7-6018734e8a16",
                            "policyDefinitionReferenceId": "RefId1"
                          },
                          {
                            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af8051bf-258b-44e2-a2bf-165330459f9d",
                            "policyDefinitionReferenceId": "RefId2"
                          },
                          {
                            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86b3d65f-7626-441e-b690-81a8b71cff60",
                            "policyDefinitionReferenceId": "RefId3"
                          },
                          {
                            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/655cb504-bcee-4362-bd4c-402e6aa38759",
                            "policyDefinitionReferenceId": "RefId4"
                          },
                          {
                            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b0f33259-77d7-4c9e-aac6-3aabcfae693c",
                            "policyDefinitionReferenceId": "RefId5"
                          },
                          {
                            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a6b606-51aa-4496-8bb7-64b11cf66adc",
                            "policyDefinitionReferenceId": "RefId6"
                          },
                          {
                            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/44452482-524f-4bf4-b852-0bff7cc4a3ed",
                            "policyDefinitionReferenceId": "RefId7"
                          },
                          {
                            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15",
                            "policyDefinitionReferenceId": "RefId8"
                          },
                          {
                            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af6cd1bd-1635-48cb-bde7-5b15693900b9",
                            "policyDefinitionReferenceId": "RefId9"
                          },
                          {
                            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d",
                            "policyDefinitionReferenceId": "RefId10"
                          }
                        ]
                      },
                      "id": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
                      "type": "Microsoft.Authorization/policySetDefinitions",
                      "name": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of built in policy set definitions.",
            "schema": {
              "$ref": "#/definitions/PolicySetDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "List Built In"
      }
    }
  },
  "definitions": {
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorResponse"
        }
      },
      "description": "An error response from a policy operation."
    },
    "PolicySetDefinitionProperties": {
      "properties": {
        "policyType": {
          "type": "string",
          "description": "The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.",
          "enum": [
            "NotSpecified",
            "BuiltIn",
            "Custom",
            "Static"
          ],
          "x-ms-enum": {
            "name": "policyType",
            "modelAsString": true
          }
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the policy set definition."
        },
        "description": {
          "type": "string",
          "description": "The policy set definition description."
        },
        "metadata": {
          "type": "object",
          "description": "The policy set definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs."
        },
        "parameters": {
          "description": "The policy set definition parameters that can be used in policy definition references.",
          "$ref": "#/definitions/ParameterDefinitions"
        },
        "policyDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDefinitionReference"
          },
          "description": "An array of policy definition references."
        },
        "policyDefinitionGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDefinitionGroup"
          },
          "description": "The metadata describing groups of policy definition references within the policy set definition."
        }
      },
      "required": [
        "policyDefinitions"
      ],
      "description": "The policy set definition properties."
    },
    "PolicyDefinitionReference": {
      "properties": {
        "policyDefinitionId": {
          "type": "string",
          "description": "The ID of the policy definition or policy set definition."
        },
        "parameters": {
          "description": "The parameter values for the referenced policy rule. The keys are the parameter names.",
          "$ref": "#/definitions/ParameterValues"
        },
        "policyDefinitionReferenceId": {
          "type": "string",
          "description": "A unique id (within the policy set definition) for this policy definition reference."
        },
        "groupNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The name of the groups that this policy definition reference belongs to."
        }
      },
      "required": [
        "policyDefinitionId"
      ],
      "description": "The policy definition reference."
    },
    "PolicyDefinitionGroup": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the group."
        },
        "displayName": {
          "type": "string",
          "description": "The group's display name."
        },
        "category": {
          "type": "string",
          "description": "The group's category."
        },
        "description": {
          "type": "string",
          "description": "The group's description."
        },
        "additionalMetadataId": {
          "type": "string",
          "description": "A resource ID of a resource that contains additional metadata about the group."
        }
      },
      "required": [
        "name"
      ],
      "description": "The policy definition group."
    },
    "PolicySetDefinition": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PolicySetDefinitionProperties",
          "description": "The policy definition properties."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ID of the policy set definition."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the policy set definition."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource (Microsoft.Authorization/policySetDefinitions)."
        }
      },
      "description": "The policy set definition.",
      "x-ms-azure-resource": true
    },
    "PolicySetDefinitionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicySetDefinition"
          },
          "description": "An array of policy set definitions."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of policy set definitions."
    },
    "ParameterValuesValue": {
      "properties": {
        "value": {
          "description": "The value of the parameter.",
          "type": "object"
        }
      },
      "description": "The value of a parameter."
    },
    "ParameterValues": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ParameterValuesValue"
      },
      "description": "The parameter values for the policy rule. The keys are the parameter names."
    },
    "ParameterDefinitionsValue": {
      "properties": {
        "type": {
          "description": "The data type of the parameter.",
          "type": "string",
          "enum": [
            "String",
            "Array",
            "Object",
            "Boolean",
            "Integer",
            "Float",
            "DateTime"
          ],
          "x-ms-enum": {
            "name": "parameterType",
            "modelAsString": true
          }
        },
        "allowedValues": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "The allowed values for the parameter."
        },
        "defaultValue": {
          "type": "object",
          "description": "The default value for the parameter if no value is provided."
        },
        "metadata": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "The display name for the parameter."
            },
            "description": {
              "type": "string",
              "description": "The description of the parameter."
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "description": "General metadata for the parameter."
        }
      },
      "description": "The definition of a parameter that can be provided to the policy."
    },
    "ParameterDefinitions": {
      "description": "The parameter definitions for parameters used in the policy. The keys are the parameter names.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ParameterDefinitionsValue"
      }
    },
    "ErrorAdditionalInfo": {
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The additional info type."
        },
        "info": {
          "readOnly": true,
          "type": "object",
          "description": "The additional info."
        }
      },
      "description": "The resource management error additional info."
    },
    "ErrorResponse": {
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "The error target."
        },
        "details": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorResponse"
          },
          "description": "The error details."
        },
        "additionalInfo": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "description": "The error additional info."
        }
      },
      "description": "The resource management error response."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription."
    },
    "ManagementGroupIdParameter": {
      "name": "managementGroupId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the management group.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for the operation."
    }
  },
  "x-internal-service-id": "resources",
  "x-internal-service-name": "Resource Management",
  "x-internal-toc-name": "Policy Set Definitions",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "ListBuiltIn",
  "x-internal-operation-name": "List Built In"
}