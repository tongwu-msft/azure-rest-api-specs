### YamlMime:RESTOperation
uid: management.azure.com.resources.policydefinitions.list
name: List
service: Resource Management
groupName: Policy Definitions
apiVersion: 2020-09-01
summary: "Retrieves policy definitions in a subscription  \nThis operation retrieves a list of all the policy definitions in a given subscription that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If $filter is not provided, the unfiltered list includes all policy definitions associated with the subscription, including those that apply directly or from management groups that contain the given subscription. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given subscription. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy definitions whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions whose category match the {value}."
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions?api-version=2020-09-01
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions?api-version=2020-09-01&$filter={$filter}&$top={$top}
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the operation.
  types:
  - uid: string
- name: $filter
  in: query
  description: "The filter to apply on the operation. Valid values for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If $filter is not provided, no filtering is performed. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given scope. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy definitions whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions whose category match the {value}."
  types:
  - uid: string
- name: $top
  in: query
  description: Maximum number of records to return. When the $top filter is not provided, it will return 500 records.
  types:
  - uid: integer
  format: int32
responses:
- name: 200 OK
  description: OK - Returns an array of policy definitions.
  types:
  - uid: PolicyDefinitionListResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: PolicyDefinitionListResult
  description: List of policy definitions.
  kind: object
  properties:
  - name: value
    description: An array of policy definitions.
    types:
    - uid: PolicyDefinition
      isArray: true
  - name: nextLink
    description: The URL to use for getting the next set of results.
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: PolicyDefinition
  description: The policy definition.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The ID of the policy definition.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the policy definition.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource (Microsoft.Authorization/policyDefinitions).
    types:
    - uid: string
  - name: properties.policyType
    description: The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
    types:
    - uid: policyType
  - name: properties.mode
    description: The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
    types:
    - uid: string
  - name: properties.displayName
    description: The display name of the policy definition.
    types:
    - uid: string
  - name: properties.description
    description: The policy definition description.
    types:
    - uid: string
  - name: properties.policyRule
    description: The policy rule.
    types:
    - uid: object
  - name: properties.metadata
    description: The policy definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
    types:
    - uid: object
  - name: properties.parameters
    description: The parameter definitions for parameters used in the policy rule. The keys are the parameter names.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: ParameterDefinitionsValue
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: policyType
  description: The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
  kind: enum
  properties:
  - name: NotSpecified
    types:
    - uid: string
  - name: BuiltIn
    types:
    - uid: string
  - name: Custom
    types:
    - uid: string
  - name: Static
    types:
    - uid: string
- name: ParameterDefinitionsValue
  description: The definition of a parameter that can be provided to the policy.
  kind: object
  properties:
  - name: type
    description: The data type of the parameter.
    types:
    - uid: parameterType
  - name: allowedValues
    description: The allowed values for the parameter.
    types:
    - uid: object
      isArray: true
  - name: defaultValue
    description: The default value for the parameter if no value is provided.
    types:
    - uid: object
  - name: metadata
    description: General metadata for the parameter.
    types:
    - uid: Metadata
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
- name: parameterType
  description: The data type of the parameter.
  kind: enum
  properties:
  - name: String
    types:
    - uid: string
  - name: Array
    types:
    - uid: string
  - name: Object
    types:
    - uid: string
  - name: Boolean
    types:
    - uid: string
  - name: Integer
    types:
    - uid: string
  - name: Float
    types:
    - uid: string
  - name: DateTime
    types:
    - uid: string
- name: Metadata
  description: General metadata for the parameter.
  kind: object
  properties:
  - name: displayName
    description: The display name for the parameter.
    types:
    - uid: string
  - name: description
    description: The description of the parameter.
    types:
    - uid: string
  - name: strongType
    description: Used when assigning the policy definition through the portal. Provides a context aware list of values for the user to choose from.
    types:
    - uid: string
  - name: assignPermissions
    description: Set to true to have Azure portal create role assignments on the resource ID or resource scope value of this parameter during policy assignment. This property is useful in case you wish to assign permissions outside the assignment scope.
    types:
    - uid: boolean
examples:
- name: List policy definitions by subscription
  request:
    uri: GET https://management.azure.com/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions?api-version=2020-09-01
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "properties": {
              "mode": "All",
              "displayName": "Allowed storage account SKUs",
              "policyType": "BuiltIn",
              "description": "This policy enables you to specify a set of storage account SKUs that your organization can deploy.",
              "parameters": {
                "listOfAllowedSKUs": {
                  "type": "Array",
                  "metadata": {
                    "description": "The list of SKUs that can be specified for storage accounts.",
                    "displayName": "Allowed SKUs",
                    "strongType": "StorageSKUs"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Storage/storageAccounts"
                    },
                    {
                      "not": {
                        "field": "Microsoft.Storage/storageAccounts/sku.name",
                        "in": "[parameters('listOfAllowedSKUs')]"
                      }
                    }
                  ]
                },
                "then": {
                  "effect": "Deny"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "7433c107-6db4-4ad1-b57a-a76dce0154a1"
          },
          {
            "properties": {
              "mode": "All",
              "displayName": "Naming Convention",
              "description": "Force resource names to begin with 'prefix' and end with 'suffix'",
              "metadata": {
                "category": "Naming"
              },
              "parameters": {
                "prefix": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Prefix",
                    "description": "Resource name prefix"
                  }
                },
                "suffix": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Suffix",
                    "description": "Resource name suffix"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "not": {
                    "field": "name",
                    "like": "[concat(parameters('prefix'), '*', parameters('suffix'))]"
                  }
                },
                "then": {
                  "effect": "deny"
                }
              },
              "policyType": "Custom"
            },
            "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "ResourceNaming"
          },
          {
            "properties": {
              "mode": "Microsoft.KeyVault.Data",
              "displayName": "Audit KeyVault certificates that expire within specified number of days",
              "description": "Audit certificates that are stored in Azure Key Vault, that expire within 'X' number of days.",
              "metadata": {
                "category": "KeyVault DataPlane"
              },
              "parameters": {
                "daysToExpire": {
                  "type": "Integer",
                  "metadata": {
                    "displayName": "Days to expire",
                    "description": "The number of days for a certificate to expire."
                  }
                }
              },
              "policyRule": {
                "if": {
                  "field": "Microsoft.KeyVault.Data/vaults/certificates/attributes/expiresOn",
                  "lessOrEquals": "[addDays(utcNow(), parameters('daysToExpire'))]"
                },
                "then": {
                  "effect": "audit"
                }
              },
              "policyType": "Custom"
            },
            "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/AuditSoonToExpireCerts",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "AuditSoonToExpireCerts"
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
errorCodes: []
