{
  "swagger": "2.0",
  "info": {
    "version": "2019-09-01",
    "title": "PolicyClient",
    "description": "To manage and control access to your resources, you can define customized policies and assign them at a scope."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/policyAssignments": {
      "get": {
        "tags": [
          "PolicyAssignments"
        ],
        "operationId": "PolicyAssignments_ListForResource",
        "summary": "Retrieves all policy assignments that apply to a resource.",
        "description": "This operation retrieves the list of all policy assignments associated with the specified resource in the given resource group and subscription that match the optional given $filter. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, the unfiltered list includes all policy assignments associated with the resource, including those that apply directly or from all containing scopes, as well as any applied to resources contained within the resource. If $filter=atScope() is provided, the returned list includes all policy assignments that apply to the resource, which is everything in the unfiltered list except those applied to resources contained within the resource. If $filter=policyDefinitionId eq '{value}' is provided, the returned list includes all policy assignments of the policy definition whose id is {value} that apply to the resource. Three parameters plus the resource name are used to identify a specific resource. If the resource is not part of a parent resource (the more common case), the parent resource path should not be provided (or provided as ''). For example a web app could be specified as ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} == 'MyWebApp'). If the resource is part of a parent resource, then all parameters should be provided. For example a virtual machine DNS name could be specified as ({resourceProviderNamespace} == 'Microsoft.Compute', {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType} == 'domainNames', {resourceName} == 'MyComputerName'). A convenient alternative to providing the namespace and type name separately is to provide both in the {resourceType} parameter, format: ({resourceProviderNamespace} == '', {parentResourcePath} == '', {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').",
        "deprecated": false,
        "x-ms-examples": {
          "List all policy assignments that apply to a resource": {
            "parameters": {
              "resourceGroupName": "TestResourceGroup",
              "resourceProviderNamespace": "Microsoft.Compute",
              "parentResourcePath": "virtualMachines/MyTestVm",
              "resourceType": "domainNames",
              "resourceName": "MyTestComputer.cloudapp.net",
              "subscriptionId": "ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
              "api-version": "2019-09-01"
            },
            "responses": {
              "200": {
                "headers": {},
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup/providers/Microsoft.Authorization/policyAssignments/TestCostManagement",
                      "type": "Microsoft.Authorization/policyAssignments",
                      "name": "TestCostManagement",
                      "location": "eastus",
                      "identity": {
                        "type": "SystemAssigned",
                        "principalId": "e6d23f8d-af97-4fbc-bda6-00604e4e3d0a",
                        "tenantId": "4bee2b8a-1bee-47c2-90e9-404241551135"
                      },
                      "properties": {
                        "displayName": "VM Cost Management",
                        "description": "Minimize the risk of accidental cost overruns",
                        "metadata": {
                          "category": "Cost Management"
                        },
                        "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/vmSkus",
                        "parameters": {
                          "allowedSkus": {
                            "value": "Standard_A1"
                          }
                        },
                        "scope": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup",
                        "notScopes": []
                      },
                      "sku": {
                        "name": "A0",
                        "tier": "Free"
                      }
                    },
                    {
                      "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup/providers/Microsoft.Authorization/policyAssignments/TestTagEnforcement",
                      "type": "Microsoft.Authorization/policyAssignments",
                      "name": "TestTagEnforcement",
                      "properties": {
                        "displayName": "Enforces a tag key and value",
                        "description": "Ensure a given tag key and value are present on all resources",
                        "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/TagKeyValue",
                        "scope": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup",
                        "notScopes": []
                      },
                      "sku": {
                        "name": "A0",
                        "tier": "Free"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing the resource.",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "resourceProviderNamespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace of the resource provider. For example, the namespace of a virtual machine is Microsoft.Compute (from Microsoft.Compute/virtualMachines)"
          },
          {
            "name": "parentResourcePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The parent resource path. Use empty string if there is none.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource type name. For example the type name of a web app is 'sites' (from Microsoft.Web/sites).",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, no filtering is performed."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of policy assignments.",
            "schema": {
              "$ref": "#/definitions/PolicyAssignmentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/PolicyAssignment",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "List For Resource"
      }
    }
  },
  "definitions": {
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorResponse"
        }
      },
      "description": "An error response from a policy operation."
    },
    "PolicyAssignmentProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name of the policy assignment."
        },
        "policyDefinitionId": {
          "type": "string",
          "description": "The ID of the policy definition or policy set definition being assigned."
        },
        "scope": {
          "type": "string",
          "description": "The scope for the policy assignment."
        },
        "notScopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The policy's excluded scopes."
        },
        "parameters": {
          "description": "The parameter values for the assigned policy rule. The keys are the parameter names.",
          "$ref": "#/definitions/ParameterValues"
        },
        "description": {
          "type": "string",
          "description": "This message will be part of response in case of policy violation."
        },
        "metadata": {
          "type": "object",
          "description": "The policy assignment metadata. Metadata is an open ended object and is typically a collection of key value pairs."
        },
        "enforcementMode": {
          "type": "string",
          "description": "The policy assignment enforcement mode. Possible values are Default and DoNotEnforce.",
          "enum": [
            "Default",
            "DoNotEnforce"
          ],
          "x-ms-enum": {
            "name": "enforcementMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Default",
                "description": "The policy effect is enforced during resource creation or update."
              },
              {
                "value": "DoNotEnforce",
                "description": "The policy effect is not enforced during resource creation or update."
              }
            ]
          }
        }
      },
      "description": "The policy assignment properties."
    },
    "ParameterValues": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ParameterValuesValue"
      },
      "description": "The parameter values for the policy rule. The keys are the parameter names."
    },
    "ParameterValuesValue": {
      "properties": {
        "value": {
          "description": "The value of the parameter.",
          "type": "object"
        }
      },
      "description": "The value of a parameter."
    },
    "PolicySku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the policy sku. Possible values are A0 and A1."
        },
        "tier": {
          "type": "string",
          "description": "The policy sku tier. Possible values are Free and Standard."
        }
      },
      "required": [
        "name"
      ],
      "description": "The policy sku. This property is optional, obsolete, and will be ignored."
    },
    "PolicyAssignment": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PolicyAssignmentProperties",
          "description": "Properties for the policy assignment."
        },
        "id": {
          "type": "string",
          "description": "The ID of the policy assignment.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the policy assignment.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the policy assignment.",
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/PolicySku",
          "description": "The policy sku. This property is optional, obsolete, and will be ignored."
        },
        "location": {
          "type": "string",
          "description": "The location of the policy assignment. Only required when utilizing managed identity."
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The managed identity associated with the policy assignment."
        }
      },
      "description": "The policy assignment.",
      "x-ms-azure-resource": true
    },
    "PolicyAssignmentListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignment"
          },
          "description": "An array of policy assignments."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of policy assignments."
    },
    "Identity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of the resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of the resource identity."
        },
        "type": {
          "type": "string",
          "description": "The identity type. This is the only required field when adding a system assigned identity to a resource.",
          "enum": [
            "SystemAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false,
            "values": [
              {
                "value": "SystemAssigned",
                "description": "Indicates that a system assigned identity is associated with the resource."
              },
              {
                "value": "None",
                "description": "Indicates that no identity is associated with the resource or that the existing identity should be removed."
              }
            ]
          }
        }
      },
      "description": "Identity for the resource."
    },
    "ErrorAdditionalInfo": {
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The additional info type."
        },
        "info": {
          "readOnly": true,
          "type": "object",
          "description": "The additional info."
        }
      },
      "description": "The resource management error additional info."
    },
    "ErrorResponse": {
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "The error target."
        },
        "details": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorResponse"
          },
          "description": "The error details."
        },
        "additionalInfo": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "description": "The error additional info."
        }
      },
      "description": "The resource management error response."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for the operation."
    },
    "ManagementGroupIdParameter": {
      "name": "managementGroupId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the management group.",
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-id": "resources",
  "x-internal-service-name": "Resource Management",
  "x-internal-toc-name": "Policy Assignments",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "ListForResource",
  "x-internal-operation-name": "List For Resource"
}