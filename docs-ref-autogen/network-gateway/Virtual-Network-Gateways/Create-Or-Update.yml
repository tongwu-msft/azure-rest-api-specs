### YamlMime:RESTOperation
uid: management.azure.com.network-gateway.virtualnetworkgateways.createorupdate
name: Create Or Update
service: Network Gateway
groupName: Virtual Network Gateways
apiVersion: 2021-08-01
summary: Creates or updates a virtual network gateway in the specified resource group.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}?api-version=2021-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: virtualNetworkGatewayName
  in: path
  isRequired: true
  description: The name of the virtual network gateway.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Update successful. The operation returns the resulting VirtualNetworkGateway resource.
  types:
  - uid: VirtualNetworkGateway
- name: 201 Created
  description: Create successful. The operation returns the resulting VirtualNetworkGateway resource.
  types:
  - uid: VirtualNetworkGateway
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: extendedLocation
    in: body
    description: The extended location of type local virtual network gateway.
    types:
    - uid: ExtendedLocation
  - name: properties.ipConfigurations
    in: body
    description: IP configurations for virtual network gateway.
    types:
    - uid: VirtualNetworkGatewayIPConfiguration
      isArray: true
  - name: properties.gatewayType
    in: body
    description: The type of this virtual network gateway.
    types:
    - uid: VirtualNetworkGatewayType
  - name: properties.vpnType
    in: body
    description: The type of this virtual network gateway.
    types:
    - uid: VpnType
  - name: properties.vpnGatewayGeneration
    in: body
    description: The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
    types:
    - uid: VpnGatewayGeneration
  - name: properties.enableBgp
    in: body
    description: Whether BGP is enabled for this virtual network gateway or not.
    types:
    - uid: boolean
  - name: properties.enablePrivateIpAddress
    in: body
    description: Whether private IP needs to be enabled on this gateway for connections or not.
    types:
    - uid: boolean
  - name: properties.activeActive
    in: body
    description: ActiveActive flag.
    types:
    - uid: boolean
  - name: properties.disableIPSecReplayProtection
    in: body
    description: disableIPSecReplayProtection flag.
    types:
    - uid: boolean
  - name: properties.gatewayDefaultSite
    in: body
    description: The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
    types:
    - uid: SubResource
  - name: properties.sku
    in: body
    description: The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
    types:
    - uid: VirtualNetworkGatewaySku
  - name: properties.vpnClientConfiguration
    in: body
    description: The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
    types:
    - uid: VpnClientConfiguration
  - name: properties.bgpSettings
    in: body
    description: Virtual network gateway's BGP speaker settings.
    types:
    - uid: BgpSettings
  - name: properties.customRoutes
    in: body
    description: The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
    types:
    - uid: AddressSpace
  - name: properties.enableDnsForwarding
    in: body
    description: Whether dns forwarding is enabled or not.
    types:
    - uid: boolean
  - name: properties.vNetExtendedLocationResourceId
    in: body
    description: Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
    types:
    - uid: string
  - name: properties.natRules
    in: body
    description: NatRules for virtual network gateway.
    types:
    - uid: VirtualNetworkGatewayNatRule
      isArray: true
  - name: properties.enableBgpRouteTranslationForNat
    in: body
    description: EnableBgpRouteTranslationForNat flag.
    types:
    - uid: boolean
  - name: id
    in: body
    description: Resource ID.
    types:
    - uid: string
  - name: location
    in: body
    description: Resource location.
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: ExtendedLocation
  description: ExtendedLocation complex type.
  kind: object
  properties:
  - name: name
    description: The name of the extended location.
    types:
    - uid: string
  - name: type
    description: The type of the extended location.
    types:
    - uid: ExtendedLocationTypes
- name: VirtualNetworkGatewayIPConfiguration
  description: IP configuration for virtual network gateway.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.privateIPAllocationMethod
    description: The private IP address allocation method.
    types:
    - uid: IPAllocationMethod
  - name: properties.subnet
    description: The reference to the subnet resource.
    types:
    - uid: SubResource
  - name: properties.publicIPAddress
    description: The reference to the public IP resource.
    types:
    - uid: SubResource
  - name: properties.privateIPAddress
    isReadyOnly: true
    description: Private IP Address for this gateway.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the virtual network gateway IP configuration resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: VirtualNetworkGatewaySku
  description: VirtualNetworkGatewaySku details.
  kind: object
  properties:
  - name: name
    description: Gateway SKU name.
    types:
    - uid: VirtualNetworkGatewaySkuName
  - name: tier
    description: Gateway SKU tier.
    types:
    - uid: VirtualNetworkGatewaySkuTier
  - name: capacity
    isReadyOnly: true
    description: The capacity.
    types:
    - uid: integer
- name: VpnClientConfiguration
  description: VpnClientConfiguration for P2S client.
  kind: object
  properties:
  - name: vpnClientAddressPool
    description: The reference to the address space resource which represents Address space for P2S VpnClient.
    types:
    - uid: AddressSpace
  - name: vpnClientRootCertificates
    description: VpnClientRootCertificate for virtual network gateway.
    types:
    - uid: VpnClientRootCertificate
      isArray: true
  - name: vpnClientRevokedCertificates
    description: VpnClientRevokedCertificate for Virtual network gateway.
    types:
    - uid: VpnClientRevokedCertificate
      isArray: true
  - name: vpnClientProtocols
    description: VpnClientProtocols for Virtual network gateway.
    types:
    - uid: string
      isArray: true
  - name: vpnAuthenticationTypes
    description: VPN authentication types for the virtual network gateway..
    types:
    - uid: string
      isArray: true
  - name: vpnClientIpsecPolicies
    description: VpnClientIpsecPolicies for virtual network gateway P2S client.
    types:
    - uid: IpsecPolicy
      isArray: true
  - name: radiusServerAddress
    description: The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
    types:
    - uid: string
  - name: radiusServerSecret
    description: The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
    types:
    - uid: string
  - name: radiusServers
    description: The radiusServers property for multiple radius server configuration.
    types:
    - uid: RadiusServer
      isArray: true
  - name: aadTenant
    description: The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
    types:
    - uid: string
  - name: aadAudience
    description: The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
    types:
    - uid: string
  - name: aadIssuer
    description: The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
    types:
    - uid: string
- name: BgpSettings
  description: BGP settings details.
  kind: object
  properties:
  - name: asn
    description: The BGP speaker's ASN.
    types:
    - uid: integer
  - name: bgpPeeringAddress
    description: The BGP peering address and BGP identifier of this BGP speaker.
    types:
    - uid: string
  - name: peerWeight
    description: The weight added to routes learned from this BGP speaker.
    types:
    - uid: integer
  - name: bgpPeeringAddresses
    description: BGP peering address with IP configuration ID for virtual network gateway.
    types:
    - uid: IPConfigurationBgpPeeringAddress
      isArray: true
- name: AddressSpace
  description: AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
  kind: object
  properties:
  - name: addressPrefixes
    description: A list of address blocks reserved for this virtual network in CIDR notation.
    types:
    - uid: string
      isArray: true
- name: VirtualNetworkGatewayNatRule
  description: VirtualNetworkGatewayNatRule Resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the NAT Rule resource.
    types:
    - uid: ProvisioningState
  - name: properties.type
    description: The type of NAT rule for VPN NAT.
    types:
    - uid: VpnNatRuleType
  - name: properties.mode
    description: The Source NAT direction of a VPN NAT.
    types:
    - uid: VpnNatRuleMode
  - name: properties.internalMappings
    description: The private IP address internal mapping for NAT.
    types:
    - uid: VpnNatRuleMapping
      isArray: true
  - name: properties.externalMappings
    description: The private IP address external mapping for NAT.
    types:
    - uid: VpnNatRuleMapping
      isArray: true
  - name: properties.ipConfigurationId
    description: The IP Configuration ID this NAT rule applies to.
    types:
    - uid: string
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: VirtualNetworkGateway
  description: A common class for general resource information.
  kind: object
  properties:
  - name: extendedLocation
    description: The extended location of type local virtual network gateway.
    types:
    - uid: ExtendedLocation
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.ipConfigurations
    description: IP configurations for virtual network gateway.
    types:
    - uid: VirtualNetworkGatewayIPConfiguration
      isArray: true
  - name: properties.gatewayType
    description: The type of this virtual network gateway.
    types:
    - uid: VirtualNetworkGatewayType
  - name: properties.vpnType
    description: The type of this virtual network gateway.
    types:
    - uid: VpnType
  - name: properties.vpnGatewayGeneration
    description: The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
    types:
    - uid: VpnGatewayGeneration
  - name: properties.enableBgp
    description: Whether BGP is enabled for this virtual network gateway or not.
    types:
    - uid: boolean
  - name: properties.enablePrivateIpAddress
    description: Whether private IP needs to be enabled on this gateway for connections or not.
    types:
    - uid: boolean
  - name: properties.activeActive
    description: ActiveActive flag.
    types:
    - uid: boolean
  - name: properties.disableIPSecReplayProtection
    description: disableIPSecReplayProtection flag.
    types:
    - uid: boolean
  - name: properties.gatewayDefaultSite
    description: The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
    types:
    - uid: SubResource
  - name: properties.sku
    description: The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
    types:
    - uid: VirtualNetworkGatewaySku
  - name: properties.vpnClientConfiguration
    description: The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
    types:
    - uid: VpnClientConfiguration
  - name: properties.bgpSettings
    description: Virtual network gateway's BGP speaker settings.
    types:
    - uid: BgpSettings
  - name: properties.customRoutes
    description: The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
    types:
    - uid: AddressSpace
  - name: properties.resourceGuid
    isReadyOnly: true
    description: The resource GUID property of the virtual network gateway resource.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the virtual network gateway resource.
    types:
    - uid: ProvisioningState
  - name: properties.enableDnsForwarding
    description: Whether dns forwarding is enabled or not.
    types:
    - uid: boolean
  - name: properties.inboundDnsForwardingEndpoint
    isReadyOnly: true
    description: The IP address allocated by the gateway to which dns requests can be sent.
    types:
    - uid: string
  - name: properties.vNetExtendedLocationResourceId
    description: Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
    types:
    - uid: string
  - name: properties.natRules
    description: NatRules for virtual network gateway.
    types:
    - uid: VirtualNetworkGatewayNatRule
      isArray: true
  - name: properties.enableBgpRouteTranslationForNat
    description: EnableBgpRouteTranslationForNat flag.
    types:
    - uid: boolean
  - name: id
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: ExtendedLocationTypes
  description: The type of the extended location.
  kind: enum
  properties:
  - name: EdgeZone
    types:
    - uid: string
- name: IPAllocationMethod
  description: IP address allocation method.
  kind: enum
  properties:
  - name: Static
    types:
    - uid: string
  - name: Dynamic
    types:
    - uid: string
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: VirtualNetworkGatewaySkuName
  description: Gateway SKU name.
  kind: enum
  properties:
  - name: Basic
    types:
    - uid: string
  - name: HighPerformance
    types:
    - uid: string
  - name: Standard
    types:
    - uid: string
  - name: UltraPerformance
    types:
    - uid: string
  - name: VpnGw1
    types:
    - uid: string
  - name: VpnGw2
    types:
    - uid: string
  - name: VpnGw3
    types:
    - uid: string
  - name: VpnGw4
    types:
    - uid: string
  - name: VpnGw5
    types:
    - uid: string
  - name: VpnGw1AZ
    types:
    - uid: string
  - name: VpnGw2AZ
    types:
    - uid: string
  - name: VpnGw3AZ
    types:
    - uid: string
  - name: VpnGw4AZ
    types:
    - uid: string
  - name: VpnGw5AZ
    types:
    - uid: string
  - name: ErGw1AZ
    types:
    - uid: string
  - name: ErGw2AZ
    types:
    - uid: string
  - name: ErGw3AZ
    types:
    - uid: string
- name: VirtualNetworkGatewaySkuTier
  description: Gateway SKU tier.
  kind: enum
  properties:
  - name: Basic
    types:
    - uid: string
  - name: HighPerformance
    types:
    - uid: string
  - name: Standard
    types:
    - uid: string
  - name: UltraPerformance
    types:
    - uid: string
  - name: VpnGw1
    types:
    - uid: string
  - name: VpnGw2
    types:
    - uid: string
  - name: VpnGw3
    types:
    - uid: string
  - name: VpnGw4
    types:
    - uid: string
  - name: VpnGw5
    types:
    - uid: string
  - name: VpnGw1AZ
    types:
    - uid: string
  - name: VpnGw2AZ
    types:
    - uid: string
  - name: VpnGw3AZ
    types:
    - uid: string
  - name: VpnGw4AZ
    types:
    - uid: string
  - name: VpnGw5AZ
    types:
    - uid: string
  - name: ErGw1AZ
    types:
    - uid: string
  - name: ErGw2AZ
    types:
    - uid: string
  - name: ErGw3AZ
    types:
    - uid: string
- name: VpnClientRootCertificate
  description: VPN client root certificate of virtual network gateway.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.publicCertData
    description: The certificate public data.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the VPN client root certificate resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: VpnClientRevokedCertificate
  description: VPN client revoked certificate of virtual network gateway.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.thumbprint
    description: The revoked VPN client certificate thumbprint.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the VPN client revoked certificate resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: IpsecPolicy
  description: An IPSec Policy configuration for a virtual network gateway connection.
  kind: object
  properties:
  - name: saLifeTimeSeconds
    description: The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
    types:
    - uid: integer
  - name: saDataSizeKilobytes
    description: The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
    types:
    - uid: integer
  - name: ipsecEncryption
    description: The IPSec encryption algorithm (IKE phase 1).
    types:
    - uid: IpsecEncryption
  - name: ipsecIntegrity
    description: The IPSec integrity algorithm (IKE phase 1).
    types:
    - uid: IpsecIntegrity
  - name: ikeEncryption
    description: The IKE encryption algorithm (IKE phase 2).
    types:
    - uid: IkeEncryption
  - name: ikeIntegrity
    description: The IKE integrity algorithm (IKE phase 2).
    types:
    - uid: IkeIntegrity
  - name: dhGroup
    description: The DH Group used in IKE Phase 1 for initial SA.
    types:
    - uid: DhGroup
  - name: pfsGroup
    description: The Pfs Group used in IKE Phase 2 for new child SA.
    types:
    - uid: PfsGroup
- name: RadiusServer
  description: Radius Server Settings.
  kind: object
  properties:
  - name: radiusServerAddress
    description: The address of this radius server.
    types:
    - uid: string
  - name: radiusServerScore
    description: The initial score assigned to this radius server.
    types:
    - uid: integer
  - name: radiusServerSecret
    description: The secret used for this radius server.
    types:
    - uid: string
- name: IPConfigurationBgpPeeringAddress
  description: Properties of IPConfigurationBgpPeeringAddress.
  kind: object
  properties:
  - name: ipconfigurationId
    description: The ID of IP configuration which belongs to gateway.
    types:
    - uid: string
  - name: defaultBgpIpAddresses
    isReadyOnly: true
    description: The list of default BGP peering addresses which belong to IP configuration.
    types:
    - uid: string
      isArray: true
  - name: customBgpIpAddresses
    description: The list of custom BGP peering addresses which belong to IP configuration.
    types:
    - uid: string
      isArray: true
  - name: tunnelIpAddresses
    isReadyOnly: true
    description: The list of tunnel public IP addresses which belong to IP configuration.
    types:
    - uid: string
      isArray: true
- name: VpnNatRuleType
  description: The type of NAT rule for VPN NAT.
  kind: enum
  properties:
  - name: Static
    types:
    - uid: string
  - name: Dynamic
    types:
    - uid: string
- name: VpnNatRuleMode
  description: The Source NAT direction of a VPN NAT.
  kind: enum
  properties:
  - name: EgressSnat
    types:
    - uid: string
  - name: IngressSnat
    types:
    - uid: string
- name: VpnNatRuleMapping
  description: Vpn NatRule mapping.
  kind: object
  properties:
  - name: addressSpace
    description: Address space for Vpn NatRule mapping.
    types:
    - uid: string
  - name: portRange
    description: Port range for Vpn NatRule mapping.
    types:
    - uid: string
- name: VirtualNetworkGatewayType
  description: The type of this virtual network gateway.
  kind: enum
  properties:
  - name: Vpn
    types:
    - uid: string
  - name: ExpressRoute
    types:
    - uid: string
  - name: LocalGateway
    types:
    - uid: string
- name: VpnType
  description: The type of this virtual network gateway.
  kind: enum
  properties:
  - name: PolicyBased
    types:
    - uid: string
  - name: RouteBased
    types:
    - uid: string
- name: VpnGatewayGeneration
  description: The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: Generation1
    types:
    - uid: string
  - name: Generation2
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: IpsecEncryption
  description: The IPSec encryption algorithm (IKE phase 1).
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: DES
    types:
    - uid: string
  - name: DES3
    types:
    - uid: string
  - name: AES128
    types:
    - uid: string
  - name: AES192
    types:
    - uid: string
  - name: AES256
    types:
    - uid: string
  - name: GCMAES128
    types:
    - uid: string
  - name: GCMAES192
    types:
    - uid: string
  - name: GCMAES256
    types:
    - uid: string
- name: IpsecIntegrity
  description: The IPSec integrity algorithm (IKE phase 1).
  kind: enum
  properties:
  - name: MD5
    types:
    - uid: string
  - name: SHA1
    types:
    - uid: string
  - name: SHA256
    types:
    - uid: string
  - name: GCMAES128
    types:
    - uid: string
  - name: GCMAES192
    types:
    - uid: string
  - name: GCMAES256
    types:
    - uid: string
- name: IkeEncryption
  description: The IKE encryption algorithm (IKE phase 2).
  kind: enum
  properties:
  - name: DES
    types:
    - uid: string
  - name: DES3
    types:
    - uid: string
  - name: AES128
    types:
    - uid: string
  - name: AES192
    types:
    - uid: string
  - name: AES256
    types:
    - uid: string
  - name: GCMAES256
    types:
    - uid: string
  - name: GCMAES128
    types:
    - uid: string
- name: IkeIntegrity
  description: The IKE integrity algorithm (IKE phase 2).
  kind: enum
  properties:
  - name: MD5
    types:
    - uid: string
  - name: SHA1
    types:
    - uid: string
  - name: SHA256
    types:
    - uid: string
  - name: SHA384
    types:
    - uid: string
  - name: GCMAES256
    types:
    - uid: string
  - name: GCMAES128
    types:
    - uid: string
- name: DhGroup
  description: The DH Groups used in IKE Phase 1 for initial SA.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: DHGroup1
    types:
    - uid: string
  - name: DHGroup2
    types:
    - uid: string
  - name: DHGroup14
    types:
    - uid: string
  - name: DHGroup2048
    types:
    - uid: string
  - name: ECP256
    types:
    - uid: string
  - name: ECP384
    types:
    - uid: string
  - name: DHGroup24
    types:
    - uid: string
- name: PfsGroup
  description: The Pfs Groups used in IKE Phase 2 for new child SA.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: PFS1
    types:
    - uid: string
  - name: PFS2
    types:
    - uid: string
  - name: PFS2048
    types:
    - uid: string
  - name: ECP256
    types:
    - uid: string
  - name: ECP384
    types:
    - uid: string
  - name: PFS24
    types:
    - uid: string
  - name: PFS14
    types:
    - uid: string
  - name: PFSMM
    types:
    - uid: string
examples:
- name: UpdateVirtualNetworkGateway
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw?api-version=2021-08-01
    body: >-
      {
        "properties": {
          "ipConfigurations": [
            {
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/GatewaySubnet"
                },
                "publicIPAddress": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/gwpip"
                }
              },
              "name": "gwipconfig1"
            }
          ],
          "gatewayType": "Vpn",
          "vpnType": "RouteBased",
          "enableBgp": false,
          "activeActive": false,
          "disableIPSecReplayProtection": false,
          "enableDnsForwarding": true,
          "natRules": [
            {
              "name": "natRule1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule1",
              "properties": {
                "type": "Static",
                "mode": "EgressSnat",
                "ipConfigurationId": "",
                "internalMappings": [
                  {
                    "addressSpace": "10.10.0.0/24"
                  }
                ],
                "externalMappings": [
                  {
                    "addressSpace": "50.0.0.0/24"
                  }
                ]
              }
            },
            {
              "name": "natRule2",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule2",
              "properties": {
                "type": "Static",
                "mode": "IngressSnat",
                "ipConfigurationId": "",
                "internalMappings": [
                  {
                    "addressSpace": "20.10.0.0/24"
                  }
                ],
                "externalMappings": [
                  {
                    "addressSpace": "30.0.0.0/24"
                  }
                ]
              }
            }
          ],
          "enableBgpRouteTranslationForNat": false,
          "sku": {
            "name": "VpnGw1",
            "tier": "VpnGw1"
          },
          "vpnClientConfiguration": {
            "vpnClientProtocols": [
              "OpenVPN"
            ],
            "vpnClientRootCertificates": [],
            "vpnClientRevokedCertificates": [],
            "radiusServers": [
              {
                "radiusServerAddress": "10.2.0.0",
                "radiusServerScore": 20,
                "radiusServerSecret": "radiusServerSecret"
              }
            ]
          },
          "bgpSettings": {
            "asn": 65515,
            "bgpPeeringAddress": "10.0.1.30",
            "peerWeight": 0
          },
          "customRoutes": {
            "addressPrefixes": [
              "101.168.0.6/32"
            ]
          }
        },
        "location": "centralus"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw?api-version=2021-08-01

      {
        "properties": {
          "ipConfigurations": [
            {
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/GatewaySubnet"
                },
                "publicIPAddress": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/gwpip"
                }
              },
              "name": "gwipconfig1"
            }
          ],
          "gatewayType": "Vpn",
          "vpnType": "RouteBased",
          "enableBgp": false,
          "activeActive": false,
          "disableIPSecReplayProtection": false,
          "enableDnsForwarding": true,
          "natRules": [
            {
              "name": "natRule1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule1",
              "properties": {
                "type": "Static",
                "mode": "EgressSnat",
                "ipConfigurationId": "",
                "internalMappings": [
                  {
                    "addressSpace": "10.10.0.0/24"
                  }
                ],
                "externalMappings": [
                  {
                    "addressSpace": "50.0.0.0/24"
                  }
                ]
              }
            },
            {
              "name": "natRule2",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule2",
              "properties": {
                "type": "Static",
                "mode": "IngressSnat",
                "ipConfigurationId": "",
                "internalMappings": [
                  {
                    "addressSpace": "20.10.0.0/24"
                  }
                ],
                "externalMappings": [
                  {
                    "addressSpace": "30.0.0.0/24"
                  }
                ]
              }
            }
          ],
          "enableBgpRouteTranslationForNat": false,
          "sku": {
            "name": "VpnGw1",
            "tier": "VpnGw1"
          },
          "vpnClientConfiguration": {
            "vpnClientProtocols": [
              "OpenVPN"
            ],
            "vpnClientRootCertificates": [],
            "vpnClientRevokedCertificates": [],
            "radiusServers": [
              {
                "radiusServerAddress": "10.2.0.0",
                "radiusServerScore": 20,
                "radiusServerSecret": "radiusServerSecret"
              }
            ]
          },
          "bgpSettings": {
            "asn": 65515,
            "bgpPeeringAddress": "10.0.1.30",
            "peerWeight": 0
          },
          "customRoutes": {
            "addressPrefixes": [
              "101.168.0.6/32"
            ]
          }
        },
        "location": "centralus"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.fluent.models.VirtualNetworkGatewayInner;
      import com.azure.resourcemanager.network.fluent.models.VirtualNetworkGatewayIpConfigurationInner;
      import com.azure.resourcemanager.network.fluent.models.VirtualNetworkGatewayNatRuleInner;
      import com.azure.resourcemanager.network.models.AddressSpace;
      import com.azure.resourcemanager.network.models.BgpSettings;
      import com.azure.resourcemanager.network.models.IpAllocationMethod;
      import com.azure.resourcemanager.network.models.RadiusServer;
      import com.azure.resourcemanager.network.models.VirtualNetworkGatewaySku;
      import com.azure.resourcemanager.network.models.VirtualNetworkGatewaySkuName;
      import com.azure.resourcemanager.network.models.VirtualNetworkGatewaySkuTier;
      import com.azure.resourcemanager.network.models.VirtualNetworkGatewayType;
      import com.azure.resourcemanager.network.models.VpnClientConfiguration;
      import com.azure.resourcemanager.network.models.VpnClientProtocol;
      import com.azure.resourcemanager.network.models.VpnNatRuleMapping;
      import com.azure.resourcemanager.network.models.VpnNatRuleMode;
      import com.azure.resourcemanager.network.models.VpnNatRuleType;
      import com.azure.resourcemanager.network.models.VpnType;
      import java.util.Arrays;

      /** Samples for VirtualNetworkGateways CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualNetworkGatewayUpdate.json
           */
          /**
           * Sample code: UpdateVirtualNetworkGateway.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void updateVirtualNetworkGateway(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getVirtualNetworkGateways()
                  .createOrUpdate(
                      "rg1",
                      "vpngw",
                      new VirtualNetworkGatewayInner()
                          .withLocation("centralus")
                          .withIpConfigurations(
                              Arrays
                                  .asList(
                                      new VirtualNetworkGatewayIpConfigurationInner()
                                          .withName("gwipconfig1")
                                          .withPrivateIpAllocationMethod(IpAllocationMethod.DYNAMIC)
                                          .withSubnet(
                                              new SubResource()
                                                  .withId(
                                                      "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/GatewaySubnet"))
                                          .withPublicIpAddress(
                                              new SubResource()
                                                  .withId(
                                                      "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/gwpip"))))
                          .withGatewayType(VirtualNetworkGatewayType.VPN)
                          .withVpnType(VpnType.ROUTE_BASED)
                          .withEnableBgp(false)
                          .withActive(false)
                          .withDisableIpSecReplayProtection(false)
                          .withSku(
                              new VirtualNetworkGatewaySku()
                                  .withName(VirtualNetworkGatewaySkuName.VPN_GW1)
                                  .withTier(VirtualNetworkGatewaySkuTier.VPN_GW1))
                          .withVpnClientConfiguration(
                              new VpnClientConfiguration()
                                  .withVpnClientRootCertificates(Arrays.asList())
                                  .withVpnClientRevokedCertificates(Arrays.asList())
                                  .withVpnClientProtocols(Arrays.asList(VpnClientProtocol.OPEN_VPN))
                                  .withRadiusServers(
                                      Arrays
                                          .asList(
                                              new RadiusServer()
                                                  .withRadiusServerAddress("10.2.0.0")
                                                  .withRadiusServerScore(20L)
                                                  .withRadiusServerSecret("radiusServerSecret"))))
                          .withBgpSettings(
                              new BgpSettings().withAsn(65515L).withBgpPeeringAddress("10.0.1.30").withPeerWeight(0))
                          .withCustomRoutes(new AddressSpace().withAddressPrefixes(Arrays.asList("101.168.0.6/32")))
                          .withEnableDnsForwarding(true)
                          .withNatRules(
                              Arrays
                                  .asList(
                                      new VirtualNetworkGatewayNatRuleInner()
                                          .withId(
                                              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule1")
                                          .withName("natRule1")
                                          .withTypePropertiesType(VpnNatRuleType.STATIC)
                                          .withMode(VpnNatRuleMode.EGRESS_SNAT)
                                          .withInternalMappings(
                                              Arrays.asList(new VpnNatRuleMapping().withAddressSpace("10.10.0.0/24")))
                                          .withExternalMappings(
                                              Arrays.asList(new VpnNatRuleMapping().withAddressSpace("50.0.0.0/24")))
                                          .withIpConfigurationId(""),
                                      new VirtualNetworkGatewayNatRuleInner()
                                          .withId(
                                              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule2")
                                          .withName("natRule2")
                                          .withTypePropertiesType(VpnNatRuleType.STATIC)
                                          .withMode(VpnNatRuleMode.INGRESS_SNAT)
                                          .withInternalMappings(
                                              Arrays.asList(new VpnNatRuleMapping().withAddressSpace("20.10.0.0/24")))
                                          .withExternalMappings(
                                              Arrays.asList(new VpnNatRuleMapping().withAddressSpace("30.0.0.0/24")))
                                          .withIpConfigurationId("")))
                          .withEnableBgpRouteTranslationForNat(false),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualNetworkGatewayUpdate.json
      func ExampleVirtualNetworkGatewaysClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewVirtualNetworkGatewaysClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"rg1",
      		"vpngw",
      		armnetwork.VirtualNetworkGateway{
      			Location: to.Ptr("centralus"),
      			Properties: &armnetwork.VirtualNetworkGatewayPropertiesFormat{
      				Active: to.Ptr(false),
      				BgpSettings: &armnetwork.BgpSettings{
      					Asn:               to.Ptr[int64](65515),
      					BgpPeeringAddress: to.Ptr("10.0.1.30"),
      					PeerWeight:        to.Ptr[int32](0),
      				},
      				CustomRoutes: &armnetwork.AddressSpace{
      					AddressPrefixes: []*string{
      						to.Ptr("101.168.0.6/32")},
      				},
      				DisableIPSecReplayProtection:    to.Ptr(false),
      				EnableBgp:                       to.Ptr(false),
      				EnableBgpRouteTranslationForNat: to.Ptr(false),
      				EnableDNSForwarding:             to.Ptr(true),
      				GatewayType:                     to.Ptr(armnetwork.VirtualNetworkGatewayTypeVPN),
      				IPConfigurations: []*armnetwork.VirtualNetworkGatewayIPConfiguration{
      					{
      						Name: to.Ptr("gwipconfig1"),
      						Properties: &armnetwork.VirtualNetworkGatewayIPConfigurationPropertiesFormat{
      							PrivateIPAllocationMethod: to.Ptr(armnetwork.IPAllocationMethodDynamic),
      							PublicIPAddress: &armnetwork.SubResource{
      								ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/gwpip"),
      							},
      							Subnet: &armnetwork.SubResource{
      								ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/GatewaySubnet"),
      							},
      						},
      					}},
      				NatRules: []*armnetwork.VirtualNetworkGatewayNatRule{
      					{
      						ID:   to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule1"),
      						Name: to.Ptr("natRule1"),
      						Properties: &armnetwork.VirtualNetworkGatewayNatRuleProperties{
      							Type: to.Ptr(armnetwork.VPNNatRuleTypeStatic),
      							ExternalMappings: []*armnetwork.VPNNatRuleMapping{
      								{
      									AddressSpace: to.Ptr("50.0.0.0/24"),
      								}},
      							InternalMappings: []*armnetwork.VPNNatRuleMapping{
      								{
      									AddressSpace: to.Ptr("10.10.0.0/24"),
      								}},
      							IPConfigurationID: to.Ptr(""),
      							Mode:              to.Ptr(armnetwork.VPNNatRuleModeEgressSnat),
      						},
      					},
      					{
      						ID:   to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule2"),
      						Name: to.Ptr("natRule2"),
      						Properties: &armnetwork.VirtualNetworkGatewayNatRuleProperties{
      							Type: to.Ptr(armnetwork.VPNNatRuleTypeStatic),
      							ExternalMappings: []*armnetwork.VPNNatRuleMapping{
      								{
      									AddressSpace: to.Ptr("30.0.0.0/24"),
      								}},
      							InternalMappings: []*armnetwork.VPNNatRuleMapping{
      								{
      									AddressSpace: to.Ptr("20.10.0.0/24"),
      								}},
      							IPConfigurationID: to.Ptr(""),
      							Mode:              to.Ptr(armnetwork.VPNNatRuleModeIngressSnat),
      						},
      					}},
      				SKU: &armnetwork.VirtualNetworkGatewaySKU{
      					Name: to.Ptr(armnetwork.VirtualNetworkGatewaySKUNameVPNGw1),
      					Tier: to.Ptr(armnetwork.VirtualNetworkGatewaySKUTierVPNGw1),
      				},
      				VPNClientConfiguration: &armnetwork.VPNClientConfiguration{
      					RadiusServers: []*armnetwork.RadiusServer{
      						{
      							RadiusServerAddress: to.Ptr("10.2.0.0"),
      							RadiusServerScore:   to.Ptr[int64](20),
      							RadiusServerSecret:  to.Ptr("radiusServerSecret"),
      						}},
      					VPNClientProtocols: []*armnetwork.VPNClientProtocol{
      						to.Ptr(armnetwork.VPNClientProtocolOpenVPN)},
      					VPNClientRevokedCertificates: []*armnetwork.VPNClientRevokedCertificate{},
      					VPNClientRootCertificates:    []*armnetwork.VPNClientRootCertificate{},
      				},
      				VPNType: to.Ptr(armnetwork.VPNTypeRouteBased),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.0.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a virtual network gateway in the specified resource group.
       *
       * @summary Creates or updates a virtual network gateway in the specified resource group.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualNetworkGatewayUpdate.json
       */
      async function updateVirtualNetworkGateway() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const virtualNetworkGatewayName = "vpngw";
        const parameters = {
          active: false,
          bgpSettings: { asn: 65515, bgpPeeringAddress: "10.0.1.30", peerWeight: 0 },
          customRoutes: { addressPrefixes: ["101.168.0.6/32"] },
          disableIPSecReplayProtection: false,
          enableBgp: false,
          enableBgpRouteTranslationForNat: false,
          enableDnsForwarding: true,
          gatewayType: "Vpn",
          ipConfigurations: [
            {
              name: "gwipconfig1",
              privateIPAllocationMethod: "Dynamic",
              publicIPAddress: {
                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/gwpip",
              },
              subnet: {
                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/GatewaySubnet",
              },
            },
          ],
          location: "centralus",
          natRules: [
            {
              name: "natRule1",
              typePropertiesType: "Static",
              externalMappings: [{ addressSpace: "50.0.0.0/24" }],
              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule1",
              internalMappings: [{ addressSpace: "10.10.0.0/24" }],
              ipConfigurationId: "",
              mode: "EgressSnat",
            },
            {
              name: "natRule2",
              typePropertiesType: "Static",
              externalMappings: [{ addressSpace: "30.0.0.0/24" }],
              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule2",
              internalMappings: [{ addressSpace: "20.10.0.0/24" }],
              ipConfigurationId: "",
              mode: "IngressSnat",
            },
          ],
          sku: { name: "VpnGw1", tier: "VpnGw1" },
          vpnClientConfiguration: {
            radiusServers: [
              {
                radiusServerAddress: "10.2.0.0",
                radiusServerScore: 20,
                radiusServerSecret: "radiusServerSecret",
              },
            ],
            vpnClientProtocols: ["OpenVPN"],
            vpnClientRevokedCertificates: [],
            vpnClientRootCertificates: [],
          },
          vpnType: "RouteBased",
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.virtualNetworkGateways.beginCreateOrUpdateAndWait(
          resourceGroupName,
          virtualNetworkGatewayName,
          parameters
        );
        console.log(result);
      }

      updateVirtualNetworkGateway().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_28.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "vpngw",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw",
        "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
        "type": "Microsoft.Network/virtualNetworkGateways",
        "location": "centralus",
        "properties": {
          "provisioningState": "Succeeded",
          "resourceGuid": "00000000-0000-0000-0000-000000000000",
          "ipConfigurations": [
            {
              "name": "gwipconfig1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/ipConfigurations/gwipconfig1",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "properties": {
                "provisioningState": "Succeeded",
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/gwpip"
                },
                "subnet": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/GatewaySubnet"
                }
              }
            }
          ],
          "natRules": [
            {
              "name": "natRule1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule1",
              "properties": {
                "type": "Static",
                "mode": "EgressSnat",
                "ipConfigurationId": "",
                "internalMappings": [
                  {
                    "addressSpace": "10.10.0.0/24"
                  }
                ],
                "externalMappings": [
                  {
                    "addressSpace": "50.0.0.0/24"
                  }
                ]
              }
            },
            {
              "name": "natRule2",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule2",
              "properties": {
                "type": "Static",
                "mode": "IngressSnat",
                "ipConfigurationId": "",
                "internalMappings": [
                  {
                    "addressSpace": "20.10.0.0/24"
                  }
                ],
                "externalMappings": [
                  {
                    "addressSpace": "30.0.0.0/24"
                  }
                ]
              }
            }
          ],
          "enableBgpRouteTranslationForNat": false,
          "sku": {
            "name": "VpnGw1",
            "tier": "VpnGw1",
            "capacity": 0
          },
          "gatewayType": "Vpn",
          "vpnType": "RouteBased",
          "vpnGatewayGeneration": "None",
          "enableBgp": false,
          "activeActive": false,
          "disableIPSecReplayProtection": false,
          "enableDnsForwarding": true,
          "inboundDnsForwardingEndpoint": "10.0.1.14",
          "vpnClientConfiguration": {
            "vpnClientProtocols": [
              "OpenVPN"
            ],
            "vpnClientRootCertificates": [],
            "vpnClientRevokedCertificates": [],
            "radiusServers": [
              {
                "radiusServerAddress": "10.2.0.0",
                "radiusServerScore": 20
              }
            ]
          },
          "bgpSettings": {
            "asn": 65515,
            "bgpPeeringAddress": "10.0.1.30",
            "peerWeight": 0,
            "bgpPeeringAddresses": [
              {
                "ipconfigurationId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/ipConfigurations/gwipconfig1",
                "defaultBgpIpAddresses": [
                  "10.3.1.254"
                ],
                "customBgpIpAddresses": [
                  "169.254.21.10"
                ],
                "tunnelIpAddresses": [
                  "52.161.10.135"
                ]
              }
            ]
          },
          "customRoutes": {
            "addressPrefixes": [
              "101.168.0.6/32"
            ]
          }
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "vpngw",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw",
        "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
        "type": "Microsoft.Network/virtualNetworkGateways",
        "location": "centralus",
        "properties": {
          "provisioningState": "Succeeded",
          "resourceGuid": "00000000-0000-0000-0000-000000000000",
          "ipConfigurations": [
            {
              "name": "gwipconfig1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/ipConfigurations/gwipconfig1",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "properties": {
                "provisioningState": "Succeeded",
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/gwpip"
                },
                "subnet": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/GatewaySubnet"
                }
              }
            }
          ],
          "natRules": [
            {
              "name": "natRule1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule1",
              "properties": {
                "type": "Static",
                "mode": "EgressSnat",
                "ipConfigurationId": "",
                "internalMappings": [
                  {
                    "addressSpace": "10.10.0.0/24"
                  }
                ],
                "externalMappings": [
                  {
                    "addressSpace": "50.0.0.0/24"
                  }
                ]
              }
            },
            {
              "name": "natRule2",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule2",
              "properties": {
                "type": "Static",
                "mode": "IngressSnat",
                "ipConfigurationId": "",
                "internalMappings": [
                  {
                    "addressSpace": "20.10.0.0/24"
                  }
                ],
                "externalMappings": [
                  {
                    "addressSpace": "30.0.0.0/24"
                  }
                ]
              }
            }
          ],
          "enableBgpRouteTranslationForNat": false,
          "sku": {
            "name": "VpnGw1",
            "tier": "VpnGw1",
            "capacity": 0
          },
          "gatewayType": "Vpn",
          "vpnType": "RouteBased",
          "enableBgp": false,
          "activeActive": false,
          "disableIPSecReplayProtection": false,
          "enableDnsForwarding": true,
          "enablePrivateIpAddress": false,
          "inboundDnsForwardingEndpoint": "10.0.1.14",
          "vpnClientConfiguration": {
            "vpnClientProtocols": [
              "OpenVPN"
            ],
            "vpnClientRootCertificates": [],
            "vpnClientRevokedCertificates": [],
            "radiusServers": [
              {
                "radiusServerAddress": "10.2.0.0",
                "radiusServerScore": 20
              }
            ]
          },
          "bgpSettings": {
            "asn": 65515,
            "bgpPeeringAddress": "10.0.1.30",
            "peerWeight": 0,
            "bgpPeeringAddresses": [
              {
                "ipconfigurationId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/ipConfigurations/gwipconfig1",
                "defaultBgpIpAddresses": [
                  "10.3.1.254"
                ],
                "customBgpIpAddresses": [
                  "169.254.21.10"
                ],
                "tunnelIpAddresses": [
                  "52.161.10.135"
                ]
              }
            ]
          },
          "customRoutes": {
            "addressPrefixes": [
              "101.168.0.6/32"
            ]
          }
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Network Gateway service - Creates or updates a virtual network gateway in the specified resource group.
errorCodes: []
