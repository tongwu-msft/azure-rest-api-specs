### YamlMime:RESTOperation
uid: management.azure.com.network-gateway.virtualnetworkgatewaynatrules.createorupdate
name: Create Or Update
service: Network Gateway
groupName: Virtual Network Gateway Nat Rules
apiVersion: 2022-01-01
summary: Creates a nat rule to a scalable virtual network gateway if it doesn't exist else updates the existing nat rules.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules/{natRuleName}?api-version=2022-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The resource group name of the Virtual Network Gateway.
  types:
  - uid: string
- name: virtualNetworkGatewayName
  in: path
  isRequired: true
  description: The name of the gateway.
  types:
  - uid: string
- name: natRuleName
  in: path
  isRequired: true
  description: The name of the nat rule.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Request successful. Returns the details of the nat rule created or updated.
  types:
  - uid: VirtualNetworkGatewayNatRule
- name: 201 Created
  description: Request successful. Returns the details of the nat rule created or updated.
  types:
  - uid: VirtualNetworkGatewayNatRule
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: properties.type
    in: body
    description: The type of NAT rule for VPN NAT.
    types:
    - uid: VpnNatRuleType
  - name: properties.mode
    in: body
    description: The Source NAT direction of a VPN NAT.
    types:
    - uid: VpnNatRuleMode
  - name: properties.internalMappings
    in: body
    description: The private IP address internal mapping for NAT.
    types:
    - uid: VpnNatRuleMapping
      isArray: true
  - name: properties.externalMappings
    in: body
    description: The private IP address external mapping for NAT.
    types:
    - uid: VpnNatRuleMapping
      isArray: true
  - name: properties.ipConfigurationId
    in: body
    description: The IP Configuration ID this NAT rule applies to.
    types:
    - uid: string
  - name: id
    in: body
    description: Resource ID.
    types:
    - uid: string
requestHeader: []
definitions:
- name: VpnNatRuleMapping
  description: Vpn NatRule mapping.
  kind: object
  properties:
  - name: addressSpace
    description: Address space for Vpn NatRule mapping.
    types:
    - uid: string
  - name: portRange
    description: Port range for Vpn NatRule mapping.
    types:
    - uid: string
- name: VirtualNetworkGatewayNatRule
  description: VirtualNetworkGatewayNatRule Resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the NAT Rule resource.
    types:
    - uid: ProvisioningState
  - name: properties.type
    description: The type of NAT rule for VPN NAT.
    types:
    - uid: VpnNatRuleType
  - name: properties.mode
    description: The Source NAT direction of a VPN NAT.
    types:
    - uid: VpnNatRuleMode
  - name: properties.internalMappings
    description: The private IP address internal mapping for NAT.
    types:
    - uid: VpnNatRuleMapping
      isArray: true
  - name: properties.externalMappings
    description: The private IP address external mapping for NAT.
    types:
    - uid: VpnNatRuleMapping
      isArray: true
  - name: properties.ipConfigurationId
    description: The IP Configuration ID this NAT rule applies to.
    types:
    - uid: string
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: VpnNatRuleType
  description: The type of NAT rule for VPN NAT.
  kind: enum
  properties:
  - name: Static
    types:
    - uid: string
  - name: Dynamic
    types:
    - uid: string
- name: VpnNatRuleMode
  description: The Source NAT direction of a VPN NAT.
  kind: enum
  properties:
  - name: EgressSnat
    types:
    - uid: string
  - name: IngressSnat
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: VirtualNetworkGatewayNatRulePut
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/gateway1/natRules/natRule1?api-version=2022-01-01
    body: >-
      {
        "properties": {
          "type": "Static",
          "mode": "EgressSnat",
          "ipConfigurationId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/gateway1/ipConfigurations/default",
          "internalMappings": [
            {
              "addressSpace": "10.4.0.0/24",
              "portRange": "200-300"
            }
          ],
          "externalMappings": [
            {
              "addressSpace": "192.168.21.0/24",
              "portRange": "300-400"
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/gateway1/natRules/natRule1?api-version=2022-01-01

      {
        "properties": {
          "type": "Static",
          "mode": "EgressSnat",
          "ipConfigurationId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/gateway1/ipConfigurations/default",
          "internalMappings": [
            {
              "addressSpace": "10.4.0.0/24",
              "portRange": "200-300"
            }
          ],
          "externalMappings": [
            {
              "addressSpace": "192.168.21.0/24",
              "portRange": "300-400"
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.fluent.models.VirtualNetworkGatewayNatRuleInner;
      import com.azure.resourcemanager.network.models.VpnNatRuleMapping;
      import com.azure.resourcemanager.network.models.VpnNatRuleMode;
      import com.azure.resourcemanager.network.models.VpnNatRuleType;
      import java.util.Arrays;

      /** Samples for VirtualNetworkGatewayNatRules CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/VirtualNetworkGatewayNatRulePut.json
           */
          /**
           * Sample code: VirtualNetworkGatewayNatRulePut.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void virtualNetworkGatewayNatRulePut(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getVirtualNetworkGatewayNatRules()
                  .createOrUpdate(
                      "rg1",
                      "gateway1",
                      "natRule1",
                      new VirtualNetworkGatewayNatRuleInner()
                          .withTypePropertiesType(VpnNatRuleType.STATIC)
                          .withMode(VpnNatRuleMode.EGRESS_SNAT)
                          .withInternalMappings(
                              Arrays.asList(new VpnNatRuleMapping().withAddressSpace("10.4.0.0/24").withPortRange("200-300")))
                          .withExternalMappings(
                              Arrays
                                  .asList(
                                      new VpnNatRuleMapping().withAddressSpace("192.168.21.0/24").withPortRange("300-400")))
                          .withIpConfigurationId(
                              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/gateway1/ipConfigurations/default"),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/VirtualNetworkGatewayNatRulePut.json
      func ExampleVirtualNetworkGatewayNatRulesClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewVirtualNetworkGatewayNatRulesClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx, "rg1", "gateway1", "natRule1", armnetwork.VirtualNetworkGatewayNatRule{
      		Properties: &armnetwork.VirtualNetworkGatewayNatRuleProperties{
      			Type: to.Ptr(armnetwork.VPNNatRuleTypeStatic),
      			ExternalMappings: []*armnetwork.VPNNatRuleMapping{
      				{
      					AddressSpace: to.Ptr("192.168.21.0/24"),
      					PortRange:    to.Ptr("300-400"),
      				}},
      			InternalMappings: []*armnetwork.VPNNatRuleMapping{
      				{
      					AddressSpace: to.Ptr("10.4.0.0/24"),
      					PortRange:    to.Ptr("200-300"),
      				}},
      			IPConfigurationID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/gateway1/ipConfigurations/default"),
      			Mode:              to.Ptr(armnetwork.VPNNatRuleModeEgressSnat),
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.1.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates a nat rule to a scalable virtual network gateway if it doesn't exist else updates the existing nat rules.
       *
       * @summary Creates a nat rule to a scalable virtual network gateway if it doesn't exist else updates the existing nat rules.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/VirtualNetworkGatewayNatRulePut.json
       */
      async function virtualNetworkGatewayNatRulePut() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const virtualNetworkGatewayName = "gateway1";
        const natRuleName = "natRule1";
        const natRuleParameters = {
          typePropertiesType: "Static",
          externalMappings: [{ addressSpace: "192.168.21.0/24", portRange: "300-400" }],
          internalMappings: [{ addressSpace: "10.4.0.0/24", portRange: "200-300" }],
          ipConfigurationId:
            "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/gateway1/ipConfigurations/default",
          mode: "EgressSnat",
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.virtualNetworkGatewayNatRules.beginCreateOrUpdateAndWait(
          resourceGroupName,
          virtualNetworkGatewayName,
          natRuleName,
          natRuleParameters
        );
        console.log(result);
      }

      virtualNetworkGatewayNatRulePut().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_29.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "natRule1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/gateway1/natRules/natRule1",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "properties": {
          "provisioningState": "Succeeded",
          "type": "Static",
          "mode": "EgressSnat",
          "ipConfigurationId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/gateway1/ipConfigurations/default",
          "internalMappings": [
            {
              "addressSpace": "10.4.0.0/24",
              "portRange": "200-300"
            }
          ],
          "externalMappings": [
            {
              "addressSpace": "192.168.21.0/24",
              "portRange": "300-400"
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "natRule1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/gateway1/natRules/natRule1",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "properties": {
          "provisioningState": "Succeeded",
          "type": "Static",
          "mode": "EgressSnat",
          "ipConfigurationId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/gateway1/ipConfigurations/default",
          "internalMappings": [
            {
              "addressSpace": "10.4.0.0/24",
              "portRange": "200-300"
            }
          ],
          "externalMappings": [
            {
              "addressSpace": "192.168.21.0/24",
              "portRange": "300-400"
            }
          ]
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Creates a nat rule to a scalable virtual network gateway if it doesn't exist else updates the existing nat rules.
errorCodes: []
