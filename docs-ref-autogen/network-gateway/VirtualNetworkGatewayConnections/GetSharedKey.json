{
  "swagger": "2.0",
  "info": {
    "version": "2019-09-01",
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey": {
      "get": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_GetSharedKey",
        "description": "The Get VirtualNetworkGatewayConnectionSharedKey operation retrieves information about the specified virtual network gateway connection shared key through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual network gateway connection shared key name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of VirtualNetworkGatewayConnection resources.",
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKey"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetVirtualNetworkGatewayConnectionSharedKey": {
            "parameters": {
              "api-version": "2019-09-01",
              "subscriptionId": "subid",
              "resourceGroupName": "rg1",
              "virtualNetworkGatewayConnectionName": "connS2S"
            },
            "responses": {
              "200": {
                "body": {
                  "value": "AzureAbc123"
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Get Shared Key"
      }
    }
  },
  "definitions": {
    "VirtualNetworkGatewayIPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAllocationMethod": {
          "$ref": "#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method."
        },
        "subnet": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of the public IP resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual network gateway IP configuration resource."
        }
      },
      "description": "Properties of VirtualNetworkGatewayIPConfiguration."
    },
    "VirtualNetworkGatewayIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayIPConfigurationPropertiesFormat",
          "description": "Properties of the virtual network gateway ip configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IP configuration for virtual network gateway."
    },
    "VirtualNetworkGatewayPropertiesFormat": {
      "properties": {
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayIPConfiguration"
          },
          "description": "IP configurations for virtual network gateway."
        },
        "gatewayType": {
          "type": "string",
          "description": "The type of this virtual network gateway.",
          "enum": [
            "Vpn",
            "ExpressRoute"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewayType",
            "modelAsString": true
          }
        },
        "vpnType": {
          "type": "string",
          "description": "The type of this virtual network gateway.",
          "enum": [
            "PolicyBased",
            "RouteBased"
          ],
          "x-ms-enum": {
            "name": "VpnType",
            "modelAsString": true
          }
        },
        "vpnGatewayGeneration": {
          "type": "string",
          "description": "The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.",
          "enum": [
            "None",
            "Generation1",
            "Generation2"
          ],
          "x-ms-enum": {
            "name": "VpnGatewayGeneration",
            "modelAsString": true
          }
        },
        "enableBgp": {
          "type": "boolean",
          "description": "Whether BGP is enabled for this virtual network gateway or not."
        },
        "activeActive": {
          "type": "boolean",
          "description": "ActiveActive flag."
        },
        "gatewayDefaultSite": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting."
        },
        "sku": {
          "$ref": "#/definitions/VirtualNetworkGatewaySku",
          "description": "The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway."
        },
        "vpnClientConfiguration": {
          "$ref": "#/definitions/VpnClientConfiguration",
          "description": "The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations."
        },
        "bgpSettings": {
          "$ref": "#/definitions/BgpSettings",
          "description": "Virtual network gateway's BGP speaker settings."
        },
        "customRoutes": {
          "$ref": "#/definitions/AddressSpace",
          "description": "The reference of the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the virtual network gateway resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual network gateway resource."
        },
        "enableDnsForwarding": {
          "type": "boolean",
          "description": "Whether dns forwarding is enabled or not."
        },
        "inboundDnsForwardingEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "The IP address allocated by the gateway to which dns requests can be sent."
        }
      },
      "description": "VirtualNetworkGateway properties."
    },
    "VpnClientRootCertificatePropertiesFormat": {
      "properties": {
        "publicCertData": {
          "type": "string",
          "description": "The certificate public data."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN client root certificate resource."
        }
      },
      "required": [
        "publicCertData"
      ],
      "description": "Properties of SSL certificates of application gateway."
    },
    "VpnClientRootCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnClientRootCertificatePropertiesFormat",
          "description": "Properties of the vpn client root certificate."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "VPN client root certificate of virtual network gateway."
    },
    "VpnClientRevokedCertificatePropertiesFormat": {
      "properties": {
        "thumbprint": {
          "type": "string",
          "description": "The revoked VPN client certificate thumbprint."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN client revoked certificate resource."
        }
      },
      "description": "Properties of the revoked VPN client certificate of virtual network gateway."
    },
    "VpnClientRevokedCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnClientRevokedCertificatePropertiesFormat",
          "description": "Properties of the vpn client revoked certificate."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "VPN client revoked certificate of virtual network gateway."
    },
    "VpnClientConfiguration": {
      "properties": {
        "vpnClientAddressPool": {
          "$ref": "#/definitions/AddressSpace",
          "description": "The reference of the address space resource which represents Address space for P2S VpnClient."
        },
        "vpnClientRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnClientRootCertificate"
          },
          "description": "VpnClientRootCertificate for virtual network gateway."
        },
        "vpnClientRevokedCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnClientRevokedCertificate"
          },
          "description": "VpnClientRevokedCertificate for Virtual network gateway."
        },
        "vpnClientProtocols": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "VPN client protocol enabled for the virtual network gateway.",
            "enum": [
              "IkeV2",
              "SSTP",
              "OpenVPN"
            ],
            "x-ms-enum": {
              "name": "VpnClientProtocol",
              "modelAsString": true
            }
          },
          "description": "VpnClientProtocols for Virtual network gateway."
        },
        "vpnClientIpsecPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpsecPolicy"
          },
          "description": "VpnClientIpsecPolicies for virtual network gateway P2S client."
        },
        "radiusServerAddress": {
          "type": "string",
          "description": "The radius server address property of the VirtualNetworkGateway resource for vpn client connection."
        },
        "radiusServerSecret": {
          "type": "string",
          "description": "The radius secret property of the VirtualNetworkGateway resource for vpn client connection."
        },
        "aadTenant": {
          "type": "string",
          "description": "The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication."
        },
        "aadAudience": {
          "type": "string",
          "description": "The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication."
        },
        "aadIssuer": {
          "type": "string",
          "description": "The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication."
        }
      },
      "description": "VpnClientConfiguration for P2S client."
    },
    "VirtualNetworkGatewaySku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gateway SKU name.",
          "enum": [
            "Basic",
            "HighPerformance",
            "Standard",
            "UltraPerformance",
            "VpnGw1",
            "VpnGw2",
            "VpnGw3",
            "VpnGw4",
            "VpnGw5",
            "VpnGw1AZ",
            "VpnGw2AZ",
            "VpnGw3AZ",
            "VpnGw4AZ",
            "VpnGw5AZ",
            "ErGw1AZ",
            "ErGw2AZ",
            "ErGw3AZ"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewaySkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Gateway SKU tier.",
          "enum": [
            "Basic",
            "HighPerformance",
            "Standard",
            "UltraPerformance",
            "VpnGw1",
            "VpnGw2",
            "VpnGw3",
            "VpnGw4",
            "VpnGw5",
            "VpnGw1AZ",
            "VpnGw2AZ",
            "VpnGw3AZ",
            "VpnGw4AZ",
            "VpnGw5AZ",
            "ErGw1AZ",
            "ErGw2AZ",
            "ErGw3AZ"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewaySkuTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The capacity."
        }
      },
      "description": "VirtualNetworkGatewaySku details."
    },
    "BgpSettings": {
      "properties": {
        "asn": {
          "type": "integer",
          "format": "int64",
          "description": "The BGP speaker's ASN."
        },
        "bgpPeeringAddress": {
          "type": "string",
          "description": "The BGP peering address and BGP identifier of this BGP speaker."
        },
        "peerWeight": {
          "type": "integer",
          "format": "int32",
          "description": "The weight added to routes learned from this BGP speaker."
        }
      },
      "description": "BGP settings details."
    },
    "BgpPeerStatus": {
      "properties": {
        "localAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The virtual network gateway's local address."
        },
        "neighbor": {
          "type": "string",
          "readOnly": true,
          "description": "The remote BGP peer."
        },
        "asn": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The autonomous system number of the remote BGP peer."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The BGP peer state.",
          "enum": [
            "Unknown",
            "Stopped",
            "Idle",
            "Connecting",
            "Connected"
          ],
          "x-ms-enum": {
            "name": "BgpPeerState",
            "modelAsString": true
          }
        },
        "connectedDuration": {
          "type": "string",
          "readOnly": true,
          "description": "For how long the peering has been up."
        },
        "routesReceived": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The number of routes learned from this peer."
        },
        "messagesSent": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The number of BGP messages sent."
        },
        "messagesReceived": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The number of BGP messages received."
        }
      },
      "description": "BGP peer status details."
    },
    "GatewayRoute": {
      "properties": {
        "localAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The gateway's local address."
        },
        "network": {
          "type": "string",
          "readOnly": true,
          "description": "The route's network prefix."
        },
        "nextHop": {
          "type": "string",
          "readOnly": true,
          "description": "The route's next hop."
        },
        "sourcePeer": {
          "type": "string",
          "readOnly": true,
          "description": "The peer this route was learned from."
        },
        "origin": {
          "type": "string",
          "readOnly": true,
          "description": "The source this route was learned from."
        },
        "asPath": {
          "type": "string",
          "readOnly": true,
          "description": "The route's AS path sequence."
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The route's weight."
        }
      },
      "description": "Gateway routing details."
    },
    "VirtualNetworkGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayPropertiesFormat",
          "description": "Properties of the virtual network gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "A common class for general resource information."
    },
    "VpnClientParameters": {
      "properties": {
        "processorArchitecture": {
          "type": "string",
          "description": "VPN client Processor Architecture.",
          "enum": [
            "Amd64",
            "X86"
          ],
          "x-ms-enum": {
            "name": "ProcessorArchitecture",
            "modelAsString": true
          }
        },
        "authenticationMethod": {
          "$ref": "#/definitions/AuthenticationMethod",
          "description": "VPN client authentication method."
        },
        "radiusServerAuthCertificate": {
          "type": "string",
          "description": "The public certificate data for the radius server authentication certificate as a Base-64 encoded string. Required only if external radius authentication has been configured with EAPTLS authentication."
        },
        "clientRootCertificates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of client root certificates public certificate data encoded as Base-64 strings. Optional parameter for external radius based authentication with EAPTLS."
        }
      },
      "description": "Vpn Client Parameters for package generation."
    },
    "VirtualNetworkGatewayListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGateway"
          },
          "description": "A list of VirtualNetworkGateway resources that exists in a resource group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListVirtualNetworkGateways API service call."
    },
    "BgpPeerStatusListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BgpPeerStatus"
          },
          "description": "List of BGP peers."
        }
      },
      "description": "Response for list BGP peer status API service call."
    },
    "GatewayRouteListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayRoute"
          },
          "description": "List of gateway routes."
        }
      },
      "description": "List of virtual network gateway routes."
    },
    "TunnelConnectionHealth": {
      "properties": {
        "tunnel": {
          "readOnly": true,
          "type": "string",
          "description": "Tunnel name."
        },
        "connectionStatus": {
          "readOnly": true,
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionStatus",
          "description": "Virtual Network Gateway connection status."
        },
        "ingressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The Ingress Bytes Transferred in this connection."
        },
        "egressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The Egress Bytes Transferred in this connection."
        },
        "lastConnectionEstablishedUtcTime": {
          "readOnly": true,
          "type": "string",
          "description": "The time at which connection was established in Utc format."
        }
      },
      "description": "VirtualNetworkGatewayConnection properties."
    },
    "VirtualNetworkGatewayConnectionPropertiesFormat": {
      "properties": {
        "authorizationKey": {
          "type": "string",
          "description": "The authorizationKey."
        },
        "virtualNetworkGateway1": {
          "$ref": "#/definitions/VirtualNetworkGateway",
          "description": "The reference to virtual network gateway resource."
        },
        "virtualNetworkGateway2": {
          "$ref": "#/definitions/VirtualNetworkGateway",
          "description": "The reference to virtual network gateway resource."
        },
        "localNetworkGateway2": {
          "$ref": "#/definitions/LocalNetworkGateway",
          "description": "The reference to local network gateway resource."
        },
        "connectionType": {
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionType",
          "description": "Gateway connection type."
        },
        "connectionProtocol": {
          "$ref": "#/definitions/ConnectionProtocol",
          "description": "Connection protocol used for this connection."
        },
        "routingWeight": {
          "type": "integer",
          "format": "int32",
          "description": "The routing weight."
        },
        "sharedKey": {
          "type": "string",
          "description": "The IPSec shared key."
        },
        "connectionStatus": {
          "readOnly": true,
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionStatus",
          "description": "Virtual Network Gateway connection status."
        },
        "tunnelConnectionStatus": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TunnelConnectionHealth"
          },
          "description": "Collection of all tunnels' connection health status."
        },
        "egressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The egress bytes transferred in this connection."
        },
        "ingressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The ingress bytes transferred in this connection."
        },
        "peer": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference to peerings resource."
        },
        "enableBgp": {
          "type": "boolean",
          "description": "EnableBgp flag."
        },
        "usePolicyBasedTrafficSelectors": {
          "type": "boolean",
          "description": "Enable policy-based traffic selectors."
        },
        "ipsecPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpsecPolicy"
          },
          "description": "The IPSec Policies to be considered by this connection."
        },
        "trafficSelectorPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrafficSelectorPolicy"
          },
          "description": "The Traffic Selector Policies to be considered by this connection."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the virtual network gateway connection resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual network gateway connection resource."
        },
        "expressRouteGatewayBypass": {
          "type": "boolean",
          "description": "Bypass ExpressRoute Gateway for data forwarding."
        }
      },
      "required": [
        "virtualNetworkGateway1",
        "connectionType"
      ],
      "description": "VirtualNetworkGatewayConnection properties."
    },
    "VirtualNetworkGatewayConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionPropertiesFormat",
          "description": "Properties of the virtual network gateway connection."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "A common class for general resource information."
    },
    "VirtualNetworkGatewayConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayConnection"
          },
          "description": "A list of VirtualNetworkGatewayConnection resources that exists in a resource group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListVirtualNetworkGatewayConnections API service call."
    },
    "ConnectionResetSharedKey": {
      "properties": {
        "keyLength": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 128,
          "description": "The virtual network connection reset shared key length, should between 1 and 128."
        }
      },
      "required": [
        "keyLength"
      ],
      "description": "The virtual network connection reset shared key."
    },
    "ConnectionSharedKey": {
      "properties": {
        "value": {
          "type": "string",
          "description": "The virtual network connection shared key value."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "required": [
        "value"
      ],
      "description": "Response for GetConnectionSharedKey API service call."
    },
    "IpsecPolicy": {
      "properties": {
        "saLifeTimeSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel."
        },
        "saDataSizeKilobytes": {
          "type": "integer",
          "format": "int32",
          "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel."
        },
        "ipsecEncryption": {
          "$ref": "#/definitions/IpsecEncryption",
          "description": "The IPSec encryption algorithm (IKE phase 1)."
        },
        "ipsecIntegrity": {
          "$ref": "#/definitions/IpsecIntegrity",
          "description": "The IPSec integrity algorithm (IKE phase 1)."
        },
        "ikeEncryption": {
          "$ref": "#/definitions/IkeEncryption",
          "description": "The IKE encryption algorithm (IKE phase 2)."
        },
        "ikeIntegrity": {
          "$ref": "#/definitions/IkeIntegrity",
          "description": "The IKE integrity algorithm (IKE phase 2)."
        },
        "dhGroup": {
          "$ref": "#/definitions/DhGroup",
          "description": "The DH Group used in IKE Phase 1 for initial SA."
        },
        "pfsGroup": {
          "$ref": "#/definitions/PfsGroup",
          "description": "The Pfs Group used in IKE Phase 2 for new child SA."
        }
      },
      "required": [
        "saLifeTimeSeconds",
        "saDataSizeKilobytes",
        "ipsecEncryption",
        "ipsecIntegrity",
        "ikeEncryption",
        "ikeIntegrity",
        "dhGroup",
        "pfsGroup"
      ],
      "description": "An IPSec Policy configuration for a virtual network gateway connection."
    },
    "TrafficSelectorPolicy": {
      "properties": {
        "localAddressRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of local address spaces in CIDR format."
        },
        "remoteAddressRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of remote address spaces in CIDR format."
        }
      },
      "required": [
        "localAddressRanges",
        "remoteAddressRanges"
      ],
      "description": "An traffic selector policy for a virtual network gateway connection."
    },
    "ConnectionProtocol": {
      "type": "string",
      "description": "Gateway connection protocol.",
      "enum": [
        "IKEv2",
        "IKEv1"
      ],
      "x-ms-enum": {
        "name": "VirtualNetworkGatewayConnectionProtocol",
        "modelAsString": true
      }
    },
    "VpnClientIPsecParameters": {
      "properties": {
        "saLifeTimeSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for P2S client."
        },
        "saDataSizeKilobytes": {
          "type": "integer",
          "format": "int32",
          "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for P2S client.."
        },
        "ipsecEncryption": {
          "$ref": "#/definitions/IpsecEncryption",
          "description": "The IPSec encryption algorithm (IKE phase 1)."
        },
        "ipsecIntegrity": {
          "$ref": "#/definitions/IpsecIntegrity",
          "description": "The IPSec integrity algorithm (IKE phase 1)."
        },
        "ikeEncryption": {
          "$ref": "#/definitions/IkeEncryption",
          "description": "The IKE encryption algorithm (IKE phase 2)."
        },
        "ikeIntegrity": {
          "$ref": "#/definitions/IkeIntegrity",
          "description": "The IKE integrity algorithm (IKE phase 2)."
        },
        "dhGroup": {
          "$ref": "#/definitions/DhGroup",
          "description": "The DH Group used in IKE Phase 1 for initial SA."
        },
        "pfsGroup": {
          "$ref": "#/definitions/PfsGroup",
          "description": "The Pfs Group used in IKE Phase 2 for new child SA."
        }
      },
      "required": [
        "saLifeTimeSeconds",
        "saDataSizeKilobytes",
        "ipsecEncryption",
        "ipsecIntegrity",
        "ikeEncryption",
        "ikeIntegrity",
        "dhGroup",
        "pfsGroup"
      ],
      "description": "An IPSec parameters for a virtual network gateway P2S connection."
    },
    "LocalNetworkGatewayPropertiesFormat": {
      "properties": {
        "localNetworkAddressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "Local network site address space."
        },
        "gatewayIpAddress": {
          "type": "string",
          "description": "IP address of local network gateway."
        },
        "bgpSettings": {
          "$ref": "#/definitions/BgpSettings",
          "description": "Local network gateway's BGP speaker settings."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the local network gateway resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the local network gateway resource."
        }
      },
      "description": "LocalNetworkGateway properties."
    },
    "LocalNetworkGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LocalNetworkGatewayPropertiesFormat",
          "description": "Properties of the local network gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "A common class for general resource information."
    },
    "LocalNetworkGatewayListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalNetworkGateway"
          },
          "description": "A list of local network gateways that exists in a resource group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListLocalNetworkGateways API service call."
    },
    "VirtualNetworkConnectionGatewayReference": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of VirtualNetworkGateway or LocalNetworkGateway resource."
        }
      },
      "required": [
        "id"
      ],
      "description": "A reference to VirtualNetworkGateway or LocalNetworkGateway resource."
    },
    "VirtualNetworkGatewayConnectionListEntityPropertiesFormat": {
      "properties": {
        "authorizationKey": {
          "type": "string",
          "description": "The authorizationKey."
        },
        "virtualNetworkGateway1": {
          "$ref": "#/definitions/VirtualNetworkConnectionGatewayReference",
          "description": "The reference to virtual network gateway resource."
        },
        "virtualNetworkGateway2": {
          "$ref": "#/definitions/VirtualNetworkConnectionGatewayReference",
          "description": "The reference to virtual network gateway resource."
        },
        "localNetworkGateway2": {
          "$ref": "#/definitions/VirtualNetworkConnectionGatewayReference",
          "description": "The reference to local network gateway resource."
        },
        "connectionType": {
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionType",
          "description": "Gateway connection type."
        },
        "connectionProtocol": {
          "$ref": "#/definitions/ConnectionProtocol",
          "description": "Connection protocol used for this connection."
        },
        "routingWeight": {
          "type": "integer",
          "format": "int32",
          "description": "The routing weight."
        },
        "sharedKey": {
          "type": "string",
          "description": "The IPSec shared key."
        },
        "connectionStatus": {
          "readOnly": true,
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionStatus",
          "description": "Virtual Network Gateway connection status."
        },
        "tunnelConnectionStatus": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TunnelConnectionHealth"
          },
          "description": "Collection of all tunnels' connection health status."
        },
        "egressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The egress bytes transferred in this connection."
        },
        "ingressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The ingress bytes transferred in this connection."
        },
        "peer": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference to peerings resource."
        },
        "enableBgp": {
          "type": "boolean",
          "description": "EnableBgp flag."
        },
        "usePolicyBasedTrafficSelectors": {
          "type": "boolean",
          "description": "Enable policy-based traffic selectors."
        },
        "ipsecPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpsecPolicy"
          },
          "description": "The IPSec Policies to be considered by this connection."
        },
        "trafficSelectorPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrafficSelectorPolicy"
          },
          "description": "The Traffic Selector Policies to be considered by this connection."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the virtual network gateway connection resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual network gateway connection resource."
        },
        "expressRouteGatewayBypass": {
          "type": "boolean",
          "description": "Bypass ExpressRoute Gateway for data forwarding."
        }
      },
      "required": [
        "virtualNetworkGateway1",
        "connectionType"
      ],
      "description": "VirtualNetworkGatewayConnection properties."
    },
    "VirtualNetworkGatewayConnectionListEntity": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionListEntityPropertiesFormat",
          "description": "Properties of the virtual network gateway connection."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "A common class for general resource information."
    },
    "VirtualNetworkGatewayListConnectionsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayConnectionListEntity"
          },
          "description": "A list of VirtualNetworkGatewayConnection resources that exists in a resource group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the VirtualNetworkGatewayListConnections API service call."
    },
    "VpnDeviceScriptParameters": {
      "properties": {
        "vendor": {
          "type": "string",
          "description": "The vendor for the vpn device."
        },
        "deviceFamily": {
          "type": "string",
          "description": "The device family for the vpn device."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "The firmware version for the vpn device."
        }
      },
      "description": "Vpn device configuration script generation parameters."
    },
    "DhGroup": {
      "type": "string",
      "description": "The DH Groups used in IKE Phase 1 for initial SA.",
      "enum": [
        "None",
        "DHGroup1",
        "DHGroup2",
        "DHGroup14",
        "DHGroup2048",
        "ECP256",
        "ECP384",
        "DHGroup24"
      ],
      "x-ms-enum": {
        "name": "DhGroup",
        "modelAsString": true
      }
    },
    "IkeEncryption": {
      "type": "string",
      "description": "The IKE encryption algorithm (IKE phase 2).",
      "enum": [
        "DES",
        "DES3",
        "AES128",
        "AES192",
        "AES256",
        "GCMAES256",
        "GCMAES128"
      ],
      "x-ms-enum": {
        "name": "IkeEncryption",
        "modelAsString": true
      }
    },
    "IkeIntegrity": {
      "type": "string",
      "description": "The IKE integrity algorithm (IKE phase 2).",
      "enum": [
        "MD5",
        "SHA1",
        "SHA256",
        "SHA384",
        "GCMAES256",
        "GCMAES128"
      ],
      "x-ms-enum": {
        "name": "IkeIntegrity",
        "modelAsString": true
      }
    },
    "IpsecEncryption": {
      "type": "string",
      "description": "The IPSec encryption algorithm (IKE phase 1).",
      "enum": [
        "None",
        "DES",
        "DES3",
        "AES128",
        "AES192",
        "AES256",
        "GCMAES128",
        "GCMAES192",
        "GCMAES256"
      ],
      "x-ms-enum": {
        "name": "IpsecEncryption",
        "modelAsString": true
      }
    },
    "IpsecIntegrity": {
      "type": "string",
      "description": "The IPSec integrity algorithm (IKE phase 1).",
      "enum": [
        "MD5",
        "SHA1",
        "SHA256",
        "GCMAES128",
        "GCMAES192",
        "GCMAES256"
      ],
      "x-ms-enum": {
        "name": "IpsecIntegrity",
        "modelAsString": true
      }
    },
    "PfsGroup": {
      "type": "string",
      "description": "The Pfs Groups used in IKE Phase 2 for new child SA.",
      "enum": [
        "None",
        "PFS1",
        "PFS2",
        "PFS2048",
        "ECP256",
        "ECP384",
        "PFS24",
        "PFS14",
        "PFSMM"
      ],
      "x-ms-enum": {
        "name": "PfsGroup",
        "modelAsString": true
      }
    },
    "VirtualNetworkGatewayConnectionStatus": {
      "type": "string",
      "description": "Virtual Network Gateway connection status.",
      "enum": [
        "Unknown",
        "Connecting",
        "Connected",
        "NotConnected"
      ],
      "x-ms-enum": {
        "name": "VirtualNetworkGatewayConnectionStatus",
        "modelAsString": true
      }
    },
    "VirtualNetworkGatewayConnectionType": {
      "type": "string",
      "description": "Gateway connection type.",
      "enum": [
        "IPsec",
        "Vnet2Vnet",
        "ExpressRoute",
        "VPNClient"
      ],
      "x-ms-enum": {
        "name": "VirtualNetworkGatewayConnectionType",
        "modelAsString": true
      }
    },
    "VpnClientConnectionHealthDetailListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnClientConnectionHealthDetail"
          },
          "description": "List of vpn client connection health."
        }
      },
      "description": "List of virtual network gateway vpn client connection health."
    },
    "VpnClientConnectionHealthDetail": {
      "properties": {
        "vpnConnectionId": {
          "type": "string",
          "readOnly": true,
          "description": "The vpn client Id."
        },
        "vpnConnectionDuration": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The duration time of a connected vpn client."
        },
        "vpnConnectionTime": {
          "type": "string",
          "readOnly": true,
          "description": "The start time of a connected vpn client."
        },
        "publicIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The public Ip of a connected vpn client."
        },
        "privateIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The assigned private Ip of a connected vpn client."
        },
        "vpnUserName": {
          "type": "string",
          "readOnly": true,
          "description": "The user name of a connected vpn client."
        },
        "maxBandwidth": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The max band width."
        },
        "egressPacketsTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The egress packets per second."
        },
        "egressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The egress bytes per second."
        },
        "ingressPacketsTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The ingress packets per second."
        },
        "ingressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The ingress bytes per second."
        },
        "maxPacketsPerSecond": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The max packets transferred per second."
        }
      },
      "description": "VPN client connection health detail."
    },
    "VpnPacketCaptureStopParameters": {
      "properties": {
        "sasUrl": {
          "type": "string",
          "description": "SAS url for packet capture on virtual network gateway."
        }
      },
      "description": "Stop packet capture parameters."
    },
    "VpnPacketCaptureStartParameters": {
      "properties": {
        "filterData": {
          "type": "string",
          "description": "Start Packet capture parameters."
        }
      },
      "description": "Start packet capture parameters on virtual network gateway."
    },
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Common resource representation.",
      "x-ms-azure-resource": true
    },
    "ProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Updating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "description": "Reference to another subresource.",
      "x-ms-azure-resource": true
    },
    "AddressSpace": {
      "properties": {
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
        }
      },
      "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network."
    },
    "AuthenticationMethod": {
      "type": "string",
      "description": "VPN client authentication method.",
      "enum": [
        "EAPTLS",
        "EAPMSCHAPv2"
      ],
      "x-ms-enum": {
        "name": "AuthenticationMethod",
        "modelAsString": true
      }
    },
    "IPAllocationMethod": {
      "type": "string",
      "description": "IP address allocation method.",
      "enum": [
        "Static",
        "Dynamic"
      ],
      "x-ms-enum": {
        "name": "IPAllocationMethod",
        "modelAsString": true
      }
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from the service."
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Cloud error body."
        }
      },
      "description": "An error response from the service."
    },
    "TagsObject": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Tags object for patch operations."
    },
    "ErrorDetails": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        }
      },
      "description": "Common error details representation."
    },
    "Error": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "description": "Error details."
        },
        "innerError": {
          "type": "string",
          "description": "Inner error message."
        }
      },
      "description": "Common error representation."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  },
  "x-internal-service-id": "network-gateway",
  "x-internal-service-name": "Network Gateway",
  "x-internal-toc-name": "Virtual Network Gateway Connections",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "GetSharedKey",
  "x-internal-operation-name": "Get Shared Key"
}