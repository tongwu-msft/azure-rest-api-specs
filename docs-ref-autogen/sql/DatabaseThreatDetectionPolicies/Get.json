{
  "swagger": "2.0",
  "info": {
    "version": "2014-04-01",
    "title": "Database Threat Detection Policy APIs",
    "description": "Provides create, read and update functionality for database Threat Detection policies."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/securityAlertPolicies/{securityAlertPolicyName}": {
      "get": {
        "tags": [
          "SecurityAlert"
        ],
        "description": "Gets a database's threat detection policy.",
        "operationId": "DatabaseThreatDetectionPolicies_Get",
        "x-ms-examples": {
          "Get database security alert policy": {
            "parameters": {
              "subscriptionId": "00000000-1111-2222-3333-444444444444",
              "resourceGroupName": "securityalert-6852",
              "serverName": "securityalert-2080",
              "databaseName": "testdb",
              "securityAlertPolicyName": "default",
              "api-version": "2014-04-01"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-6852/providers/Microsoft.Sql/servers/securityalert-2080/databases/testdb",
                  "name": "default",
                  "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
                  "location": "Japan East",
                  "kind": "V12",
                  "properties": {
                    "state": "Enabled",
                    "emailAccountAdmins": "Enabled",
                    "emailAddresses": "test@microsoft.com;user@microsoft.com",
                    "disabledAlerts": "Usage_Anomaly",
                    "retentionDays": 0,
                    "storageAccountAccessKey": "",
                    "storageEndpoint": "",
                    "useServerDefault": "Enabled"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database for which database Threat Detection policy is defined.",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityAlertPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "description": "The name of the security alert policy.",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SecurityAlertPolicyName"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the database Threat Detection policy.",
            "schema": {
              "$ref": "#/definitions/DatabaseSecurityAlertPolicy"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 500 GetDatabaseSecurityAlertPolicyFailed - Failed to get database Threat Detection security alert policies. * 500 DatabaseIsUnavailable - Your settings are currently unavailable, please try again later"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Get"
      }
    }
  },
  "definitions": {
    "Resource": {
      "description": "ARM resource.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "x-ms-azure-resource": true
    },
    "TrackedResource": {
      "description": "ARM tracked top level resource.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Resource location."
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ProxyResource": {
      "description": "ARM proxy resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "DatabaseSecurityAlertPolicy": {
      "description": "Contains information about a database Threat Detection policy.",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "kind": {
          "readOnly": true,
          "type": "string",
          "description": "Resource kind."
        },
        "properties": {
          "$ref": "#/definitions/DatabaseSecurityAlertPolicyProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of the security alert policy."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ]
    },
    "DatabaseSecurityAlertPolicyProperties": {
      "description": "Properties for a database Threat Detection policy.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.",
          "type": "string",
          "enum": [
            "New",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SecurityAlertPolicyState"
          }
        },
        "disabledAlerts": {
          "description": "Specifies the semicolon-separated list of alerts that are disabled, or empty string to disable no alerts. Possible values: Sql_Injection; Sql_Injection_Vulnerability; Access_Anomaly; Usage_Anomaly.",
          "type": "string"
        },
        "emailAddresses": {
          "description": "Specifies the semicolon-separated list of e-mail addresses to which the alert is sent.",
          "type": "string"
        },
        "emailAccountAdmins": {
          "description": "Specifies that the alert is sent to the account administrators.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SecurityAlertPolicyEmailAccountAdmins"
          }
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. If state is Enabled, storageEndpoint is required.",
          "type": "string"
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the Threat Detection audit storage account. If state is Enabled, storageAccountAccessKey is required.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "retentionDays": {
          "format": "int32",
          "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
          "type": "integer"
        },
        "useServerDefault": {
          "description": "Specifies whether to use the default server policy.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SecurityAlertPolicyUseServerDefault"
          }
        }
      },
      "required": [
        "state"
      ]
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription ID that identifies an Azure subscription.",
      "required": true,
      "type": "string"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for the request."
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server.",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "x-internal-service-name": "SQL Database",
  "x-internal-toc-name": "Database Threat Detection Policies",
  "x-internal-split-type": "Operation"
}