{
  "swagger": "2.0",
  "info": {
    "version": "2014-04-01",
    "title": "Azure SQL Database",
    "description": "Provides create, read, update and delete functionality for Azure SQL Database resources including servers, databases, elastic pools, recommendations, and operations."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools/{recommendedElasticPoolName}/metrics": {
      "get": {
        "tags": [
          "RecommendedElasticPools"
        ],
        "operationId": "RecommendedElasticPools_ListMetrics",
        "description": "Returns recommented elastic pool metrics.",
        "x-ms-examples": {
          "Get recommended elastic pool metrics": {
            "parameters": {
              "subscriptionId": "00000000-1111-2222-3333-444444444444",
              "resourceGroupName": "sqlcrudtest-6852",
              "serverName": "sqlcrudtest-2080",
              "recommendedElasticPoolName": "sqlcrudtest-2080_pool1",
              "api-version": "2014-04-01"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "dateTime": "2017-07-24T12:00:00Z",
                      "dtu": 0.017588245576265669,
                      "sizeGB": 0.921875
                    },
                    {
                      "dateTime": "2017-07-25T12:00:00Z",
                      "dtu": 0.018937532104510685,
                      "sizeGB": 0.921875
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "recommendedElasticPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the recommended elastic pool to be retrieved."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecommendedElasticPoolListMetricsResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "List Metrics"
      }
    }
  },
  "definitions": {
    "Resource": {
      "description": "ARM resource.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "x-ms-azure-resource": true
    },
    "TrackedResource": {
      "description": "ARM tracked top level resource.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Resource location."
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ProxyResource": {
      "description": "ARM proxy resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "CheckNameAvailabilityRequest": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name whose availability is to be checked."
        },
        "type": {
          "type": "string",
          "description": "The type of resource that is used as the scope of the availability check.",
          "enum": [
            "Microsoft.Sql/servers"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityResourceType",
            "modelAsString": false
          }
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "A request to check whether the specified name for a resource is available."
    },
    "CheckNameAvailabilityResponse": {
      "properties": {
        "available": {
          "type": "boolean",
          "description": "True if the name is available, otherwise false.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A message explaining why the name is unavailable. Will be null if the name is available.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name whose availability was checked.",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "description": "The reason code explaining why the name is unavailable. Will be null if the name is available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": false
          },
          "readOnly": true
        }
      },
      "description": "A response indicating whether the specified name for a resource is available."
    },
    "RecommendedElasticPoolMetric": {
      "properties": {
        "dateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time of metric (ISO8601 format)."
        },
        "dtu": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the DTUs (Database Transaction Units). See https://azure.microsoft.com/documentation/articles/sql-database-what-is-a-dtu/"
        },
        "sizeGB": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets size in gigabytes."
        }
      },
      "description": "Represents recommended elastic pool metric."
    },
    "RecommendedElasticPoolProperties": {
      "properties": {
        "databaseEdition": {
          "readOnly": true,
          "type": "string",
          "description": "The edition of the recommended elastic pool. The ElasticPoolEdition enumeration contains all the valid editions.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "ElasticPoolEdition",
            "modelAsString": true
          }
        },
        "dtu": {
          "type": "number",
          "format": "double",
          "description": "The DTU for the recommended elastic pool."
        },
        "databaseDtuMin": {
          "type": "number",
          "format": "double",
          "description": "The minimum DTU for the database."
        },
        "databaseDtuMax": {
          "type": "number",
          "format": "double",
          "description": "The maximum DTU for the database."
        },
        "storageMB": {
          "type": "number",
          "format": "double",
          "description": "Gets storage size in megabytes."
        },
        "observationPeriodStart": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The observation period start (ISO8601 format)."
        },
        "observationPeriodEnd": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The observation period start (ISO8601 format)."
        },
        "maxObservedDtu": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets maximum observed DTU."
        },
        "maxObservedStorageMB": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets maximum observed storage in megabytes."
        },
        "databases": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "description": "The list of databases in this pool. Expanded property"
        },
        "metrics": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendedElasticPoolMetric"
          },
          "description": "The list of databases housed in the server. Expanded property"
        }
      },
      "description": "Represents the properties of a recommented elastic pool."
    },
    "RecommendedElasticPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RecommendedElasticPoolProperties",
          "description": "The properites representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a recommented elastic pool."
    },
    "RecommendedElasticPoolListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendedElasticPool"
          },
          "description": "The list of recommended elastic pools hosted in the server."
        }
      },
      "required": [
        "value"
      ],
      "description": "Represents the response to a list recommended elastic pool request."
    },
    "RecommendedElasticPoolListMetricsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendedElasticPoolMetric"
          },
          "description": "The list of recommended elastic pools metrics."
        }
      },
      "required": [
        "value"
      ],
      "description": "Represents the response to a list recommended elastic pool metrics request."
    },
    "ElasticPoolProperties": {
      "properties": {
        "creationDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the elastic pool (ISO8601 format)."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Creating",
            "Ready",
            "Disabled"
          ],
          "description": "The state of the elastic pool.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ElasticPoolState"
          }
        },
        "edition": {
          "type": "string",
          "description": "The edition of the elastic pool.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "ElasticPoolEdition",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dtu": {
          "type": "integer",
          "format": "int32",
          "description": "The total shared DTU for the database elastic pool."
        },
        "databaseDtuMax": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum DTU any one database can consume."
        },
        "databaseDtuMin": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum DTU all databases are guaranteed."
        },
        "storageMB": {
          "type": "integer",
          "format": "int32",
          "description": "Gets storage limit for the database elastic pool in MB."
        }
      },
      "description": "Represents the properties of an elastic pool."
    },
    "ElasticPool": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ElasticPoolProperties",
          "description": "The properties representing the resource.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "readOnly": true,
          "type": "string",
          "description": "Kind of elastic pool.  This is metadata used for the Azure portal experience."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Represents a database elastic pool."
    },
    "ElasticPoolUpdate": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ElasticPoolProperties",
          "description": "The properties representing the resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an elastic pool update."
    },
    "ElasticPoolListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElasticPool"
          },
          "description": "The list of elastic pools hosted in the server."
        }
      },
      "required": [
        "value"
      ],
      "description": "Represents the response to a list elastic pool request."
    },
    "ElasticPoolActivityProperties": {
      "properties": {
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time the operation finished (ISO8601 format)."
        },
        "errorCode": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The error code if available."
        },
        "errorMessage": {
          "readOnly": true,
          "type": "string",
          "description": "The error message if available."
        },
        "errorSeverity": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The error severity if available."
        },
        "operation": {
          "readOnly": true,
          "type": "string",
          "description": "The operation name."
        },
        "operationId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "The unique operation ID.",
          "x-nullable": false
        },
        "percentComplete": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The percentage complete if available."
        },
        "requestedDatabaseDtuMax": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The requested max DTU per database if available."
        },
        "requestedDatabaseDtuMin": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The requested min DTU per database if available."
        },
        "requestedDtu": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The requested DTU for the pool if available."
        },
        "requestedElasticPoolName": {
          "readOnly": true,
          "type": "string",
          "description": "The requested name for the elastic pool if available."
        },
        "requestedStorageLimitInGB": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The requested storage limit for the pool in GB if available."
        },
        "elasticPoolName": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the elastic pool."
        },
        "serverName": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the server the elastic pool is in."
        },
        "startTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time the operation started (ISO8601 format)."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "The current state of the operation."
        },
        "requestedStorageLimitInMB": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The requested storage limit in MB."
        },
        "requestedDatabaseDtuGuarantee": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The requested per database DTU guarantee."
        },
        "requestedDatabaseDtuCap": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The requested per database DTU cap."
        },
        "requestedDtuGuarantee": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The requested DTU guarantee."
        }
      },
      "description": "Represents the properties of an elastic pool."
    },
    "ElasticPoolActivity": {
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "$ref": "#/definitions/ElasticPoolActivityProperties",
          "description": "The properties representing the resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents the activity on an elastic pool."
    },
    "ElasticPoolActivityListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElasticPoolActivity"
          },
          "description": "The list of elastic pool activities."
        }
      },
      "required": [
        "value"
      ],
      "description": "Represents the response to a list elastic pool activity request."
    },
    "ElasticPoolDatabaseActivityProperties": {
      "properties": {
        "databaseName": {
          "readOnly": true,
          "type": "string",
          "description": "The database name."
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time the operation finished (ISO8601 format)."
        },
        "errorCode": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The error code if available."
        },
        "errorMessage": {
          "readOnly": true,
          "type": "string",
          "description": "The error message if available."
        },
        "errorSeverity": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The error severity if available."
        },
        "operation": {
          "readOnly": true,
          "type": "string",
          "description": "The operation name."
        },
        "operationId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "The unique operation ID.",
          "x-nullable": false
        },
        "percentComplete": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The percentage complete if available."
        },
        "requestedElasticPoolName": {
          "readOnly": true,
          "type": "string",
          "description": "The name for the elastic pool the database is moving into if available."
        },
        "currentElasticPoolName": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the current elastic pool the database is in if available."
        },
        "currentServiceObjective": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the current service objective if available."
        },
        "requestedServiceObjective": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the requested service objective if available."
        },
        "serverName": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the server the elastic pool is in."
        },
        "startTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time the operation started (ISO8601 format)."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "The current state of the operation."
        }
      },
      "description": "Represents the properties of an elastic pool database activity."
    },
    "ElasticPoolDatabaseActivity": {
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "$ref": "#/definitions/ElasticPoolDatabaseActivityProperties",
          "description": "The properties representing the resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents the activity on an elastic pool."
    },
    "ElasticPoolDatabaseActivityListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElasticPoolDatabaseActivity"
          },
          "description": "The list of elastic pool database activities."
        }
      },
      "required": [
        "value"
      ],
      "description": "Represents the response to a list elastic pool database activity request."
    },
    "RecommendedIndexProperties": {
      "properties": {
        "action": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Create",
            "Drop",
            "Rebuild"
          ],
          "description": "The proposed index action. You can create a missing index, drop an unused index, or rebuild an existing index to improve its performance.",
          "x-ms-enum": {
            "name": "RecommendedIndexAction"
          }
        },
        "state": {
          "readOnly": true,
          "enum": [
            "Active",
            "Pending",
            "Executing",
            "Verifying",
            "Pending Revert",
            "Reverting",
            "Reverted",
            "Ignored",
            "Expired",
            "Blocked",
            "Success"
          ],
          "type": "string",
          "description": "The current recommendation state.",
          "x-ms-enum": {
            "name": "RecommendedIndexState"
          }
        },
        "created": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The UTC datetime showing when this resource was created (ISO8601 format)."
        },
        "lastModified": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The UTC datetime of when was this resource last changed (ISO8601 format)."
        },
        "indexType": {
          "readOnly": true,
          "enum": [
            "CLUSTERED",
            "NONCLUSTERED",
            "COLUMNSTORE",
            "CLUSTERED COLUMNSTORE"
          ],
          "type": "string",
          "description": "The type of index (CLUSTERED, NONCLUSTERED, COLUMNSTORE, CLUSTERED COLUMNSTORE)",
          "x-ms-enum": {
            "name": "RecommendedIndexType"
          }
        },
        "schema": {
          "readOnly": true,
          "type": "string",
          "description": "The schema where table to build index over resides"
        },
        "table": {
          "readOnly": true,
          "type": "string",
          "description": "The table on which to build index."
        },
        "columns": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Columns over which to build index"
        },
        "includedColumns": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of column names to be included in the index"
        },
        "indexScript": {
          "readOnly": true,
          "type": "string",
          "description": "The full build index script"
        },
        "estimatedImpact": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationImpact"
          },
          "description": "The estimated impact of doing recommended index action."
        },
        "reportedImpact": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationImpact"
          },
          "description": "The values reported after index action is complete."
        }
      },
      "description": "Represents the properties of a database recommended index."
    },
    "RecommendedIndex": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecommendedIndexProperties",
          "readOnly": true,
          "x-ms-client-flatten": true,
          "description": "The properties representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a database recommended index."
    },
    "TransparentDataEncryptionProperties": {
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the database transparent data encryption.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "TransparentDataEncryptionStatus"
          }
        }
      },
      "description": "Represents the properties of a database transparent data encryption."
    },
    "TransparentDataEncryption": {
      "properties": {
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "Resource location."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TransparentDataEncryptionProperties",
          "description": "Represents the properties of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a database transparent data encryption configuration."
    },
    "DatabaseProperties": {
      "properties": {
        "collation": {
          "type": "string",
          "description": "The collation of the database. If createMode is not Default, this value is ignored.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "creationDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the database (ISO8601 format)."
        },
        "containmentState": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The containment state of the database."
        },
        "currentServiceObjectiveId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "The current service level objective ID of the database. This is the ID of the service level objective that is currently active."
        },
        "databaseId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "The ID of the database."
        },
        "earliestRestoreDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "This records the earliest start date and time that restore is available for this database (ISO8601 format)."
        },
        "createMode": {
          "type": "string",
          "description": "Specifies the mode of database creation.\n\nDefault: regular database creation.\n\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\n\nOnlineSecondary/NonReadableSecondary: creates a database as a (readable or nonreadable) secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\n\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\n\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\n\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\n\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\n\nCopy, NonReadableSecondary, OnlineSecondary and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
          "enum": [
            "Copy",
            "Default",
            "NonReadableSecondary",
            "OnlineSecondary",
            "PointInTimeRestore",
            "Recovery",
            "Restore",
            "RestoreLongTermRetentionBackup"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "sourceDatabaseId": {
          "type": "string",
          "description": "Conditional. If createMode is Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery, or Restore, then this value is required. Specifies the resource ID of the source database. If createMode is NonReadableSecondary or OnlineSecondary, the name of the source database must be the same as the new database being created.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "sourceDatabaseDeletionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Conditional. If createMode is Restore and sourceDatabaseId is the deleted database's original resource id when it existed (as opposed to its current restorable dropped database id), then this value is required. Specifies the time that the database was deleted.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "restorePointInTime": {
          "type": "string",
          "format": "date-time",
          "description": "Conditional. If createMode is PointInTimeRestore, this value is required. If createMode is Restore, this value is optional. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. Must be greater than or equal to the source database's earliestRestoreDate value.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "recoveryServicesRecoveryPointResourceId": {
          "type": "string",
          "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "edition": {
          "type": "string",
          "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: \"Capabilities_ListByLocation.\"",
          "enum": [
            "Web",
            "Business",
            "Basic",
            "Standard",
            "Premium",
            "Free",
            "Stretch",
            "DataWarehouse",
            "System",
            "System2"
          ],
          "x-ms-enum": {
            "name": "DatabaseEdition",
            "modelAsString": true
          }
        },
        "maxSizeBytes": {
          "type": "string",
          "description": "The max size of the database expressed in bytes. If createMode is not Default, this value is ignored. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: \"Capabilities_ListByLocation.\""
        },
        "requestedServiceObjectiveId": {
          "type": "string",
          "format": "uuid",
          "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: \"Capabilities_ListByLocation.\""
        },
        "requestedServiceObjectiveName": {
          "type": "string",
          "enum": [
            "Basic",
            "S0",
            "S1",
            "S2",
            "S3",
            "P1",
            "P2",
            "P3",
            "P4",
            "P6",
            "P11",
            "P15",
            "System",
            "System2",
            "ElasticPool"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceObjectiveName"
          },
          "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: \"Capabilities_ListByLocation.\""
        },
        "serviceLevelObjective": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Basic",
            "S0",
            "S1",
            "S2",
            "S3",
            "P1",
            "P2",
            "P3",
            "P4",
            "P6",
            "P11",
            "P15",
            "System",
            "System2",
            "ElasticPool"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceObjectiveName"
          },
          "description": "The current service level objective of the database."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "The status of the database."
        },
        "elasticPoolName": {
          "type": "string",
          "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition."
        },
        "defaultSecondaryLocation": {
          "readOnly": true,
          "type": "string",
          "description": "The default secondary region for this database."
        },
        "serviceTierAdvisors": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTierAdvisor"
          },
          "description": "The list of service tier advisors for this database. Expanded property"
        },
        "transparentDataEncryption": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransparentDataEncryption"
          },
          "description": "The transparent data encryption info for this database."
        },
        "recommendedIndex": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendedIndex"
          },
          "description": "The recommended indices for this database."
        },
        "failoverGroupId": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier of the failover group containing this database."
        },
        "readScale": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "description": "Conditional. If the database is a geo-secondary, readScale indicates whether read-only connections are allowed to this database or not. Not supported for DataWarehouse edition.",
          "x-ms-enum": {
            "name": "ReadScale"
          }
        },
        "sampleName": {
          "type": "string",
          "enum": [
            "AdventureWorksLT"
          ],
          "description": "Indicates the name of the sample schema to apply when creating this database. If createMode is not Default, this value is ignored. Not supported for DataWarehouse edition.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SampleName"
          },
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "description": "Represents the properties of a database."
    },
    "Database": {
      "properties": {
        "kind": {
          "readOnly": true,
          "type": "string",
          "description": "Kind of database.  This is metadata used for the Azure portal experience."
        },
        "properties": {
          "$ref": "#/definitions/DatabaseProperties",
          "description": "The properties representing the resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Represents a database."
    },
    "DatabaseUpdate": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/DatabaseProperties",
          "description": "The properties representing the resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents a database update."
    },
    "DatabaseListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "description": "The list of databases housed in the server."
        }
      },
      "required": [
        "value"
      ],
      "description": "Represents the response to a list database request."
    },
    "ServiceTierAdvisorProperties": {
      "properties": {
        "observationPeriodStart": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The observation period start (ISO8601 format)."
        },
        "observationPeriodEnd": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The observation period start (ISO8601 format)."
        },
        "activeTimeRatio": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The activeTimeRatio for service tier advisor."
        },
        "minDtu": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets or sets minDtu for service tier advisor."
        },
        "avgDtu": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets or sets avgDtu for service tier advisor."
        },
        "maxDtu": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets or sets maxDtu for service tier advisor."
        },
        "maxSizeInGB": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets or sets maxSizeInGB for service tier advisor."
        },
        "serviceLevelObjectiveUsageMetrics": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SloUsageMetric"
          },
          "description": "Gets or sets serviceLevelObjectiveUsageMetrics for the service tier advisor."
        },
        "currentServiceLevelObjective": {
          "readOnly": true,
          "type": "string",
          "description": "Gets or sets currentServiceLevelObjective for service tier advisor."
        },
        "currentServiceLevelObjectiveId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "Gets or sets currentServiceLevelObjectiveId for service tier advisor."
        },
        "usageBasedRecommendationServiceLevelObjective": {
          "readOnly": true,
          "type": "string",
          "description": "Gets or sets usageBasedRecommendationServiceLevelObjective for service tier advisor."
        },
        "usageBasedRecommendationServiceLevelObjectiveId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "Gets or sets usageBasedRecommendationServiceLevelObjectiveId for service tier advisor."
        },
        "databaseSizeBasedRecommendationServiceLevelObjective": {
          "readOnly": true,
          "type": "string",
          "description": "Gets or sets databaseSizeBasedRecommendationServiceLevelObjective for service tier advisor."
        },
        "databaseSizeBasedRecommendationServiceLevelObjectiveId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "Gets or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for service tier advisor."
        },
        "disasterPlanBasedRecommendationServiceLevelObjective": {
          "readOnly": true,
          "type": "string",
          "description": "Gets or sets disasterPlanBasedRecommendationServiceLevelObjective for service tier advisor."
        },
        "disasterPlanBasedRecommendationServiceLevelObjectiveId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "Gets or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for service tier advisor."
        },
        "overallRecommendationServiceLevelObjective": {
          "readOnly": true,
          "type": "string",
          "description": "Gets or sets overallRecommendationServiceLevelObjective for service tier advisor."
        },
        "overallRecommendationServiceLevelObjectiveId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "Gets or sets overallRecommendationServiceLevelObjectiveId for service tier advisor."
        },
        "confidence": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets or sets confidence for service tier advisor.",
          "x-nullable": false
        }
      },
      "description": "Represents the properties of a Service Tier Advisor."
    },
    "ServiceTierAdvisor": {
      "properties": {
        "properties": {
          "readOnly": true,
          "$ref": "#/definitions/ServiceTierAdvisorProperties",
          "description": "The properites representing the resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a Service Tier Advisor."
    },
    "SloUsageMetric": {
      "properties": {
        "serviceLevelObjective": {
          "type": "string",
          "description": "The serviceLevelObjective for SLO usage metric.",
          "enum": [
            "Basic",
            "S0",
            "S1",
            "S2",
            "S3",
            "P1",
            "P2",
            "P3",
            "P4",
            "P6",
            "P11",
            "P15",
            "System",
            "System2",
            "ElasticPool"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceObjectiveName"
          },
          "readOnly": true
        },
        "serviceLevelObjectiveId": {
          "type": "string",
          "format": "uuid",
          "description": "The serviceLevelObjectiveId for SLO usage metric.",
          "readOnly": true,
          "x-nullable": false
        },
        "inRangeTimeRatio": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets inRangeTimeRatio for SLO usage metric.",
          "readOnly": true,
          "x-nullable": false
        }
      },
      "description": "A Slo Usage Metric."
    },
    "OperationImpact": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the impact dimension."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "The unit in which estimated impact to dimension is measured."
        },
        "changeValueAbsolute": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The absolute impact to dimension."
        },
        "changeValueRelative": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The relative impact to dimension (null if not applicable)"
        }
      },
      "description": "The impact of an operation, both in absolute and relative terms."
    },
    "ServiceTierAdvisorListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTierAdvisor"
          },
          "description": "The list of service tier advisors for specified database."
        }
      },
      "required": [
        "value"
      ],
      "description": "Represents the response to a list service tier advisor request."
    },
    "TransparentDataEncryptionActivityProperties": {
      "properties": {
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "The status of the database.",
          "enum": [
            "Encrypting",
            "Decrypting"
          ],
          "x-ms-enum": {
            "name": "TransparentDataEncryptionActivityStatus",
            "modelAsString": true
          }
        },
        "percentComplete": {
          "readOnly": true,
          "type": "number",
          "format": "float",
          "description": "The percent complete of the transparent data encryption scan for a database."
        }
      },
      "description": "Represents the properties of a database transparent data encryption Scan."
    },
    "TransparentDataEncryptionActivity": {
      "properties": {
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "Resource location."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TransparentDataEncryptionActivityProperties",
          "description": "Represents the properties of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a database transparent data encryption Scan."
    },
    "TransparentDataEncryptionActivityListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransparentDataEncryptionActivity"
          },
          "description": "The list of database transparent data encryption activities."
        }
      },
      "required": [
        "value"
      ],
      "description": "Represents the response to a list database transparent data encryption activity request."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription ID that identifies an Azure subscription."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for the request."
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
      "x-ms-parameter-location": "method"
    },
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server.",
      "x-ms-parameter-location": "method"
    },
    "DatabaseExpandParameter": {
      "name": "$expand",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "A comma separated list of child objects to expand in the response. Possible properties: serviceTierAdvisors, transparentDataEncryption.",
      "x-ms-parameter-location": "method"
    },
    "TransparentDataEncryptionNameParameter": {
      "name": "transparentDataEncryptionName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "current"
      ],
      "description": "The name of the transparent data encryption configuration.",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "TransparentDataEncryptionName"
      },
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "x-internal-service-name": "SQL Database",
  "x-internal-operation-group-name": "Servers - Sql",
  "x-internal-toc-name": "Recommended Elastic Pools",
  "x-internal-split-type": "Operation"
}