### YamlMime:RESTOperation
uid: management.azure.com.sql.managedinstanceencryptionprotectors.createorupdate
name: Create Or Update
service: SQL Database
groupName: Managed Instance Encryption Protectors
apiVersion: 2017-10-01-preview
summary: Updates an existing encryption protector.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector/current?api-version=2017-10-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: managedInstanceName
  in: path
  isRequired: true
  description: The name of the managed instance.
  types:
  - uid: string
- name: encryptionProtectorName
  in: path
  isRequired: true
  description: The name of the encryption protector to be created or updated.
  types:
  - uid: EncryptionProtectorName
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully updated the encryption protector.
  types:
  - uid: ManagedInstanceEncryptionProtector
- name: Other Status Codes
  description: "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidUpsertKeyType - Service Managed type keys are managed by Azure SQL. This key type does not support create or update by the user.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 400 InvalidEncryptionProtectorName - The encryption protector key name is not supported.\n\n * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.\n\n * 400 SecurityAzureKeyVaultUrlNullOrEmpty - The operation could not be completed because the Azure Key Vault Uri is null or empty.\n\n * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.\n\n * 400 SecurityAzureKeyVaultInvalidKeyName - The operation could not be completed because of an invalid Server Key name.\n\n * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.\n\n * 400 SecurityAdalPrincipalCertExpiredError - The operation could not be completed because the Azure Key Vault principal certificate has expired.\n\n * 400 SecurityInvalidAzureKeyVaultRecoveryLevel - The provided Key Vault uri is not valid.\n\n * 400 KeyMaterialNotFoundOnRemoteServer - Remote server does not have access to key material used as a TDE protector.\n\n * 400 AzureKeyVaultMismatchError - Unexpected Key Vault region found in the http response.\n\n * 400 AzureKeyVaultRsaKeyNotSupported - The provided key vault uses unsupported RSA Key Size or Key Type. The supported RSA key size is 2048 and Key Type is RSA.\n\n * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.\n\n * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured.\n\n * 401 AzureKeyVaultMissingPermissions - The server is mising required permissions on the Azure Key Vault. \n\n * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.\n\n * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Serivce Principal not found error was encountered.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 ServerKeyNotFound - The requested server key was not found on the current subscription.\n\n * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.\n\n * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.\n\n * 409 ServerKeyDoesNotExists - The server key does not exist.\n\n * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.\n\n * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.\n\n * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed\n\n * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information ."
- name: 202 Accepted
  description: Accepted
requestBody:
- name: default
  parameters:
  - name: properties.serverKeyName
    in: body
    description: The name of the managed instance key.
    types:
    - uid: string
  - name: properties.serverKeyType
    in: body
    isRequired: true
    description: The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.
    types:
    - uid: ServerKeyType
requestHeader: []
definitions:
- name: EncryptionProtectorName
  description: The name of the encryption protector to be created or updated.
  kind: enum
  properties:
  - name: current
    types:
    - uid: string
- name: ManagedInstanceEncryptionProtector
  description: The managed instance encryption protector.
  kind: object
  properties:
  - name: kind
    isReadyOnly: true
    description: Kind of encryption protector. This is metadata used for the Azure portal experience.
    types:
    - uid: string
  - name: properties.serverKeyName
    description: The name of the managed instance key.
    types:
    - uid: string
  - name: properties.serverKeyType
    description: The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.
    types:
    - uid: ServerKeyType
  - name: properties.uri
    isReadyOnly: true
    description: The URI of the server key.
    types:
    - uid: string
  - name: properties.thumbprint
    isReadyOnly: true
    description: Thumbprint of the server key.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
- name: ServerKeyType
  description: The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.
  kind: enum
  properties:
  - name: ServiceManaged
    types:
    - uid: string
  - name: AzureKeyVault
    types:
    - uid: string
examples:
- name: Update the encryption protector to key vault
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645/encryptionProtector/current?api-version=2017-10-01-preview
    body: >-
      {
        "properties": {
          "serverKeyType": "AzureKeyVault",
          "serverKeyName": "someVault_someKey_01234567890123456789012345678901"
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645/encryptionProtector/current",
        "name": "current",
        "type": "Microsoft.Sql/managedInstances/encryptionProtector",
        "kind": "azurekeyvault",
        "properties": {
          "serverKeyName": "someVault_someKey_01234567890123456789012345678901",
          "serverKeyType": "AzureKeyVault"
        }
      }
  - statusCode: "202"
- name: Update the encryption protector to service managed
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645/encryptionProtector/current?api-version=2017-10-01-preview
    body: >-
      {
        "properties": {
          "serverKeyType": "ServiceManaged",
          "serverKeyName": "ServiceManaged"
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645/encryptionProtector/current",
        "name": "current",
        "type": "Microsoft.Sql/managedInstances/encryptionProtector",
        "kind": "servicemanaged",
        "properties": {
          "serverKeyName": "ServiceManaged",
          "serverKeyType": "ServiceManaged"
        }
      }
  - statusCode: "202"
security: []
