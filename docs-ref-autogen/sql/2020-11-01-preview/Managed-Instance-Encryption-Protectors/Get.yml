### YamlMime:RESTOperation
uid: management.azure.com.sql.2020-11-01-preview.managedinstanceencryptionprotectors.get
name: Get
service: SQL Database
groupName: Managed Instance Encryption Protectors
apiVersion: 2020-11-01-preview
summary: Gets a managed instance encryption protector.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector/current?api-version=2020-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: managedInstanceName
  in: path
  isRequired: true
  description: The name of the managed instance.
  types:
  - uid: string
- name: encryptionProtectorName
  in: path
  isRequired: true
  description: The name of the encryption protector to be retrieved.
  types:
  - uid: EncryptionProtectorName
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved the specified managed instance encryption protector.
  types:
  - uid: ManagedInstanceEncryptionProtector
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 InvalidKeyName - An invalid value was given for the server key name.

     * 400 InvalidKeyType - The create server key type is not supported.

     * 400 InvalidUpsertKeyType - Service-managed TDE keys are managed by the service. Service-managed TDE keys don't support Create or Update by the user.

     * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.

     * 400 InvalidEncryptionProtectorName - The encryption protector key name is not supported.

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.

     * 404 ResourceNotFound - The requested resource was not found.
requestHeader: []
definitions:
- name: EncryptionProtectorName
  description: The name of the encryption protector to be retrieved.
  kind: enum
  properties:
  - name: current
    types:
    - uid: string
- name: ManagedInstanceEncryptionProtector
  description: The managed instance encryption protector.
  kind: object
  properties:
  - name: kind
    isReadyOnly: true
    description: Kind of encryption protector. This is metadata used for the Azure portal experience.
    types:
    - uid: string
  - name: properties.serverKeyName
    description: The name of the managed instance key.
    types:
    - uid: string
  - name: properties.serverKeyType
    description: The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.
    types:
    - uid: ServerKeyType
  - name: properties.uri
    isReadyOnly: true
    description: The URI of the server key.
    types:
    - uid: string
  - name: properties.thumbprint
    isReadyOnly: true
    description: Thumbprint of the server key.
    types:
    - uid: string
  - name: properties.autoRotationEnabled
    description: Key auto rotation opt-in flag. Either true or false.
    types:
    - uid: boolean
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
- name: ServerKeyType
  description: The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.
  kind: enum
  properties:
  - name: ServiceManaged
    types:
    - uid: string
  - name: AzureKeyVault
    types:
    - uid: string
examples:
- name: Get the encryption protector
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645/encryptionProtector/current?api-version=2020-11-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645/encryptionProtector/current?api-version=2020-11-01-preview
      ```

      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedInstanceEncryptionProtectorGet.json
      func ExampleManagedInstanceEncryptionProtectorsClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewManagedInstanceEncryptionProtectorsClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"sqlcrudtest-7398",
      		"sqlcrudtest-4645",
      		armsql.EncryptionProtectorNameCurrent,
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a managed instance encryption protector.
       *
       * @summary Gets a managed instance encryption protector.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedInstanceEncryptionProtectorGet.json
       */
      async function getTheEncryptionProtector() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "sqlcrudtest-7398";
        const managedInstanceName = "sqlcrudtest-4645";
        const encryptionProtectorName = "current";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = await client.managedInstanceEncryptionProtectors.get(
          resourceGroupName,
          managedInstanceName,
          encryptionProtectorName
        );
        console.log(result);
      }

      getTheEncryptionProtector().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645/encryptionProtector/current",
        "name": "current",
        "type": "Microsoft.Sql/managedInstances/encryptionProtector",
        "kind": "azurekeyvault",
        "properties": {
          "serverKeyName": "someVault_someKey_01234567890123456789012345678901",
          "serverKeyType": "AzureKeyVault",
          "uri": "https://someVault.vault.azure.net/keys/someKey/01234567890123456789012345678901"
        }
      }
security: []
metadata:
  description: Learn more about SQL Database service - Gets a managed instance encryption protector.
errorCodes: []
