### YamlMime:RESTOperation
uid: management.azure.com.sql.2020-11-01-preview.managedinstancelongtermretentionpolicies.get
name: Get
service: SQL Database
groupName: Managed Instance Long Term Retention Policies
apiVersion: 2020-11-01-preview
summary: Gets a managed database's long term retention policy.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/backupLongTermRetentionPolicies/default?api-version=2020-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: managedInstanceName
  in: path
  isRequired: true
  description: The name of the managed instance.
  types:
  - uid: string
- name: databaseName
  in: path
  isRequired: true
  description: The name of the database.
  types:
  - uid: string
- name: policyName
  in: path
  isRequired: true
  description: The policy name. Should always be Default.
  types:
  - uid: ManagedInstanceLongTermRetentionPolicyName
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully got LTR policy for managed database.
  types:
  - uid: ManagedInstanceLongTermRetentionPolicy
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 LongTermRetentionPolicyNotSupported - Long Term Retention is not supported on this database.

     * 400 LongTermRetentionPolicyInvalid - Long Term Retention policy is invalid.

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.

     * 404 ResourceNotFound - The requested resource was not found.
requestHeader: []
definitions:
- name: ManagedInstanceLongTermRetentionPolicyName
  description: The policy name. Should always be Default.
  kind: enum
  properties:
  - name: default
    types:
    - uid: string
- name: ManagedInstanceLongTermRetentionPolicy
  description: A long term retention policy.
  kind: object
  properties:
  - name: properties.weeklyRetention
    description: The weekly retention policy for an LTR backup in an ISO 8601 format.
    types:
    - uid: string
  - name: properties.monthlyRetention
    description: The monthly retention policy for an LTR backup in an ISO 8601 format.
    types:
    - uid: string
  - name: properties.yearlyRetention
    description: The yearly retention policy for an LTR backup in an ISO 8601 format.
    types:
    - uid: string
  - name: properties.weekOfYear
    description: The week of year to take the yearly backup in an ISO 8601 format.
    types:
    - uid: integer
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
examples:
- name: Get the long term retention policy for the managed database.
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testResourceGroup/providers/Microsoft.Sql/managedInstances/testInstance/databases/testDatabase/backupLongTermRetentionPolicies/default?api-version=2020-11-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testResourceGroup/providers/Microsoft.Sql/managedInstances/testInstance/databases/testDatabase/backupLongTermRetentionPolicies/default?api-version=2020-11-01-preview
      ```

      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedInstanceLongTermRetentionPolicyGet.json
      func ExampleManagedInstanceLongTermRetentionPoliciesClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewManagedInstanceLongTermRetentionPoliciesClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"testResourceGroup",
      		"testInstance",
      		"testDatabase",
      		armsql.ManagedInstanceLongTermRetentionPolicyNameDefault,
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a managed database's long term retention policy.
       *
       * @summary Gets a managed database's long term retention policy.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedInstanceLongTermRetentionPolicyGet.json
       */
      async function getTheLongTermRetentionPolicyForTheManagedDatabase() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "testResourceGroup";
        const managedInstanceName = "testInstance";
        const databaseName = "testDatabase";
        const policyName = "default";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = await client.managedInstanceLongTermRetentionPolicies.get(
          resourceGroupName,
          managedInstanceName,
          databaseName,
          policyName
        );
        console.log(result);
      }

      getTheLongTermRetentionPolicyForTheManagedDatabase().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Sql/resourceGroups/testResourceGroup/managedInstances/testInstance/databases/testDatabase/backupLongTermRetentionPolicies/default",
        "name": "default",
        "type": "Microsoft.Sql/resourceGroups/managedInstances/databases/backupLongTermRetentionPolicies",
        "properties": {
          "weeklyRetention": "P1M",
          "monthlyRetention": "P1Y",
          "yearlyRetention": "P5Y",
          "weekOfYear": 5
        }
      }
security: []
metadata:
  description: Learn more about SQL Database service - Gets a managed database's long term retention policy.
errorCodes: []
