### YamlMime:RESTOperation
uid: management.azure.com.sql.2020-11-01-preview.restorepoints.listbydatabase
name: List By Database
service: SQL Database
groupName: Restore Points
apiVersion: 2020-11-01-preview
summary: Gets a list of database restore points.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/restorePoints?api-version=2020-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: databaseName
  in: path
  isRequired: true
  description: The name of the database.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully returned restore points.
  types:
  - uid: RestorePointListResult
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 BackupNotAllowedOnDeactivatedDatabase - Cannot create restore point on a deactivated database.

     * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.

     * 400 RestorePointLimitReached - A restore point cannot be created because database would exceed the allowed quota of restore points.

     * 400 RestorePointAttemptToDeleteSystemBackup - Cannot delete system restore point.

     * 404 DatabaseRestorePointNotFound - Can not find database restore point.

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

     * 408 DatabaseRestorePointTimedOut - Create database restore point failed.
requestHeader: []
definitions:
- name: RestorePointListResult
  description: A list of long term retention backups.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: Array of results.
    types:
    - uid: RestorePoint
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: Link to retrieve next page of results.
    types:
    - uid: string
- name: RestorePoint
  description: Database restore points.
  kind: object
  properties:
  - name: location
    isReadyOnly: true
    description: Resource location.
    types:
    - uid: string
  - name: properties.restorePointType
    isReadyOnly: true
    description: The type of restore point
    types:
    - uid: RestorePointType
  - name: properties.earliestRestoreDate
    isReadyOnly: true
    description: The earliest time to which this database can be restored
    types:
    - uid: string
  - name: properties.restorePointCreationDate
    isReadyOnly: true
    description: The time the backup was taken
    types:
    - uid: string
  - name: properties.restorePointLabel
    isReadyOnly: true
    description: The label of restore point for backup request by user
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
- name: RestorePointType
  description: The type of restore point
  kind: enum
  properties:
  - name: CONTINUOUS
    types:
    - uid: string
  - name: DISCRETE
    types:
    - uid: string
examples:
- name: List database restore points.
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6730/providers/Microsoft.Sql/servers/sqlcrudtest-9007/databases/3481/restorePoints?api-version=2020-11-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6730/providers/Microsoft.Sql/servers/sqlcrudtest-9007/databases/3481/restorePoints?api-version=2020-11-01-preview
      ```

      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/DatabaseRestorePointsListByDatabase.json
      func ExampleRestorePointsClient_NewListByDatabasePager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewRestorePointsClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListByDatabasePager("sqlcrudtest-6730",
      		"sqlcrudtest-9007",
      		"3481",
      		nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a list of database restore points.
       *
       * @summary Gets a list of database restore points.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/DatabaseRestorePointsListByDatabase.json
       */
      async function listDatabaseRestorePoints() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "sqlcrudtest-6730";
        const serverName = "sqlcrudtest-9007";
        const databaseName = "3481";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.restorePoints.listByDatabase(
          resourceGroupName,
          serverName,
          databaseName
        )) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      listDatabaseRestorePoints().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6730/providers/Microsoft.Sql/servers/sqlcrudtest-9007/databases/3481/restorepoints/ContinuousRestorePoint",
            "name": "ContinuousRestorePoint",
            "location": "West US",
            "type": "Microsoft.Sql/servers/databases/restorePoints",
            "properties": {
              "restorePointType": "CONTINUOUS",
              "earliestRestoreDate": "2017-06-12T00:00:00Z"
            }
          }
        ]
      }
- name: List datawarehouse database restore points.
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/servers/testserver/databases/testDatabase/restorePoints?api-version=2020-11-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/servers/testserver/databases/testDatabase/restorePoints?api-version=2020-11-01-preview
      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a list of database restore points.
       *
       * @summary Gets a list of database restore points.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/DataWarehouseRestorePointsListByDatabase.json
       */
      async function listDatawarehouseDatabaseRestorePoints() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "Default-SQL-SouthEastAsia";
        const serverName = "testserver";
        const databaseName = "testDatabase";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.restorePoints.listByDatabase(
          resourceGroupName,
          serverName,
          databaseName
        )) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      listDatawarehouseDatabaseRestorePoints().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Sql/servers/testserver/databases/testDatabase/restorePoints/131546477590000000",
            "name": "131546477590000000",
            "type": "Microsoft.Sql/servers/databases/restorePoints",
            "location": "japaneast",
            "properties": {
              "restorePointType": "DISCRETE",
              "restorePointCreationDate": "2017-03-10T08:00:00Z",
              "restorePointLabel": "mylabel1"
            }
          },
          {
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Sql/servers/testserver/databases/testDatabase/restorePoints/131553636140000000",
            "name": "131553636140000000",
            "type": "Microsoft.Sql/servers/databases/restorePoints",
            "location": "japaneast",
            "properties": {
              "restorePointType": "DISCRETE",
              "restorePointCreationDate": "2017-11-17T03:40:14Z",
              "restorePointLabel": "mylabel2"
            }
          },
          {
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Sql/servers/testserver/databases/testDatabase/restorePoints/131553619750000000",
            "name": "131553619750000000",
            "type": "Microsoft.Sql/servers/databases/restorePoints",
            "location": "japaneast",
            "properties": {
              "restorePointType": "DISCRETE",
              "restorePointCreationDate": "2017-11-17T03:12:55Z"
            }
          }
        ]
      }
security: []
metadata:
  description: >
    Learn more about SQL Database service - Gets a list of database restore points.
errorCodes: []
