### YamlMime:RESTOperation
uid: management.azure.com.sql.2020-11-01-preview.managedinstanceprivateendpointconnections.delete
name: Delete
service: SQL Database
groupName: Managed Instance Private Endpoint Connections
apiVersion: 2020-11-01-preview
summary: Deletes a private endpoint connection with a given name.
consumes:
- application/json
produces:
- application/json
paths:
- content: DELETE https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2020-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: managedInstanceName
  in: path
  isRequired: true
  description: The name of the managed instance.
  types:
  - uid: string
- name: privateEndpointConnectionName
  in: path
  isRequired: true
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully deleted private endpoint connection.
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 PrivateEndpointConnectionDoesNotExist - Private Endpoint Connection does not exist

     * 400 PrivateEndpointConnectionStatusNotPending - Private Endpoint Connection Status is not Pending

     * 400 NullRemotePrivateLinkServiceConnectionState - Remote Private Link Service Connection State is Null

     * 400 NullPrivateEndpointConnectionProperties - Private Endpoint Connection Properties is Null

     * 400 NullRemotePrivateLinkServiceConnectionStateStatus - Remote Private Link Service Connection State Status is Null

     * 400 IncorrectPrivateLinkServiceConnectionStateStatus - Private Link Service Connection State Status must be "Approved" or "Rejected"

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.

     * 404 OperationIdNotFound - The operation with Id does not exist.

     * 409 OperationCancelled - The operation has been cancelled by user.

     * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.

     * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.
- name: 202 Accepted
  description: Accepted
- name: 204 No Content
  description: Private endpoint connection does not exist.
requestHeader: []
definitions: []
examples:
- name: Deletes a private endpoint connection with a given name.
  request:
    uri: DELETE https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/managedInstances/test-cl/privateEndpointConnections/private-endpoint-connection-name?api-version=2020-11-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      DELETE https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/managedInstances/test-cl/privateEndpointConnections/private-endpoint-connection-name?api-version=2020-11-01-preview
      ```

      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedInstancePrivateEndpointConnectionDelete.json
      func ExampleManagedInstancePrivateEndpointConnectionsClient_BeginDelete() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewManagedInstancePrivateEndpointConnectionsClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginDelete(ctx,
      		"Default",
      		"test-cl",
      		"private-endpoint-connection-name",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	_, err = poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Deletes a private endpoint connection with a given name.
       *
       * @summary Deletes a private endpoint connection with a given name.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedInstancePrivateEndpointConnectionDelete.json
       */
      async function deletesAPrivateEndpointConnectionWithAGivenName() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "Default";
        const managedInstanceName = "test-cl";
        const privateEndpointConnectionName = "private-endpoint-connection-name";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = await client.managedInstancePrivateEndpointConnections.beginDeleteAndWait(
          resourceGroupName,
          managedInstanceName,
          privateEndpointConnectionName
        );
        console.log(result);
      }

      deletesAPrivateEndpointConnectionWithAGivenName().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
  - statusCode: "202"
  - statusCode: "204"
security: []
metadata:
  description: Learn more about SQL Database service - Deletes a private endpoint connection with a given name.
errorCodes: []
