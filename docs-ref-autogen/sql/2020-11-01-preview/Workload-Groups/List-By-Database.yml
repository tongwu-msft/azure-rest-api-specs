### YamlMime:RESTOperation
uid: management.azure.com.sql.2020-11-01-preview.workloadgroups.listbydatabase
name: List By Database
service: SQL Database
groupName: Workload Groups
apiVersion: 2020-11-01-preview
summary: Gets the list of workload groups
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/workloadGroups?api-version=2020-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: databaseName
  in: path
  isRequired: true
  description: The name of the database.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved the list of workload groups.
  types:
  - uid: WorkloadGroupListResult
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 OperationNotAllowedOnPausedDatabase - Operation is not allowed on a paused database.

     * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.

     * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

     * 404 ResourceNotFound - The requested resource was not found.

     * 409 ConflictingDatabaseOperation - There is already some operation on the database and the current operation should wait till it is done.

     * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.

     * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.

     * 503 DatabaseUnavailable - The operation failed because the database is unavailable.

     * 504 RequestTimeout - Service request exceeded the allowed timeout.
requestHeader: []
definitions:
- name: WorkloadGroupListResult
  description: A list of workload groups.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: Array of results.
    types:
    - uid: WorkloadGroup
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: Link to retrieve next page of results.
    types:
    - uid: string
- name: WorkloadGroup
  description: Workload group operations for a data warehouse
  kind: object
  properties:
  - name: properties.minResourcePercent
    description: The workload group minimum percentage resource.
    types:
    - uid: integer
  - name: properties.maxResourcePercent
    description: The workload group cap percentage resource.
    types:
    - uid: integer
  - name: properties.minResourcePercentPerRequest
    description: The workload group request minimum grant percentage.
    types:
    - uid: number
  - name: properties.maxResourcePercentPerRequest
    description: The workload group request maximum grant percentage.
    types:
    - uid: number
  - name: properties.importance
    description: The workload group importance level.
    types:
    - uid: string
  - name: properties.queryExecutionTimeout
    description: The workload group query execution timeout.
    types:
    - uid: integer
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
examples:
- name: Get the list of workload groups for a data warehouse
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/servers/testsvr/databases/testdb/workloadGroups?api-version=2020-11-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/servers/testsvr/databases/testdb/workloadGroups?api-version=2020-11-01-preview
      ```

      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/GetWorkloadGroupList.json
      func ExampleWorkloadGroupsClient_NewListByDatabasePager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewWorkloadGroupsClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListByDatabasePager("Default-SQL-SouthEastAsia",
      		"testsvr",
      		"testdb",
      		nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets the list of workload groups
       *
       * @summary Gets the list of workload groups
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/GetWorkloadGroupList.json
       */
      async function getTheListOfWorkloadGroupsForADataWarehouse() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "Default-SQL-SouthEastAsia";
        const serverName = "testsvr";
        const databaseName = "testdb";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.workloadGroups.listByDatabase(
          resourceGroupName,
          serverName,
          databaseName
        )) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      getTheListOfWorkloadGroupsForADataWarehouse().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "properties": {
              "minResourcePercent": 0,
              "maxResourcePercent": 100,
              "minResourcePercentPerRequest": 5,
              "maxResourcePercentPerRequest": 5,
              "importance": "normal",
              "queryExecutionTimeout": 0
            },
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/servers/testsvr/databases/testdb/workloadGroups/smallrc",
            "name": "smallrc",
            "type": "Microsoft.Sql/servers/databases/workloadGroups"
          },
          {
            "properties": {
              "minResourcePercent": 0,
              "maxResourcePercent": 100,
              "minResourcePercentPerRequest": 10,
              "maxResourcePercentPerRequest": 10,
              "importance": "normal",
              "queryExecutionTimeout": 0
            },
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/servers/testsvr/databases/testdb/workloadGroups/mediumrc",
            "name": "mediumrc",
            "type": "Microsoft.Sql/servers/databases/workloadGroups"
          },
          {
            "properties": {
              "minResourcePercent": 0,
              "maxResourcePercent": 100,
              "minResourcePercentPerRequest": 20,
              "maxResourcePercentPerRequest": 20,
              "importance": "high",
              "queryExecutionTimeout": 0
            },
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/servers/testsvr/databases/testdb/workloadGroups/largerc",
            "name": "largerc",
            "type": "Microsoft.Sql/servers/databases/workloadGroups"
          }
        ]
      }
security: []
metadata:
  description: >
    Learn more about SQL Database service - Gets the list of workload groups
errorCodes: []
