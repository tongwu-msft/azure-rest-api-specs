### YamlMime:RESTOperation
uid: management.azure.com.sql.2020-11-01-preview.syncgroups.listsyncdatabaseids
name: List Sync Database Ids
service: SQL Database
groupName: Sync Groups
apiVersion: 2020-11-01-preview
summary: Gets a collection of sync database ids.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/syncDatabaseIds?api-version=2020-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: locationName
  in: path
  isRequired: true
  description: The name of the region where the resource is located.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved collection of sync database ids.
  types:
  - uid: SyncDatabaseIdListResult
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.

     * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.

     * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.

     * 400 InvalidDatabaseResourceId - Invalid database resource identifier.

     * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.

     * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.

     * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.

     * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.

     * 400 InvalidParameterValue - An invalid value was given to a parameter.

     * 400 SyncOperation_GenericFailure - Failed to perform data sync operation.

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.
requestHeader: []
definitions:
- name: SyncDatabaseIdListResult
  description: A list of sync database ID properties.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: Array of results.
    types:
    - uid: SyncDatabaseIdProperties
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: Link to retrieve next page of results.
    types:
    - uid: string
- name: SyncDatabaseIdProperties
  description: Properties of the sync database id.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: ARM resource id of sync database.
    types:
    - uid: string
examples:
- name: Get a sync database ID
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Sql/locations/westus/syncDatabaseIds?api-version=2020-11-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Sql/locations/westus/syncDatabaseIds?api-version=2020-11-01-preview
      ```

      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a collection of sync database ids.
       *
       * @summary Gets a collection of sync database ids.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/SyncGroupGetSyncDatabaseId.json
       */
      async function getASyncDatabaseId() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const locationName = "westus";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.syncGroups.listSyncDatabaseIds(locationName)) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      getASyncDatabaseId().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/syncgroupcrud-3521/providers/Microsoft.Sql/servers/syncgroupcrud-8475/databases/syncgroupcrud-4328"
          }
        ]
      }
security: []
metadata:
  description: Learn more about SQL Database service - Gets a collection of sync database ids.
errorCodes: []
