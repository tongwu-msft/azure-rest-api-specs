### YamlMime:RESTOperation
uid: management.azure.com.sql.2020-11-01-preview.timezones.get
name: Get
service: SQL Database
groupName: Time Zones
apiVersion: 2020-11-01-preview
summary: Gets a managed instance time zone.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/timeZones/{timeZoneId}?api-version=2020-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: locationName
  in: path
  isRequired: true
  types:
  - uid: string
- name: timeZoneId
  in: path
  isRequired: true
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved the specified time zone.
  types:
  - uid: TimeZone
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 HkCannotSwitchToInactive - The database cannot proceed with pricing-tier update as it has memory-optimized objects. Please drop such objects and try again.

     * 400 ManagedInstanceInvalidStorageSizeLessThenCurrentSizeUsed - Invalid storage size: Storage size limit ({0} GB) is less that current storage used ({1} GB). Please specify higher storage size limit.

     * 400 InstanceTimezoneUpdateNotSupported - Instance timezone update not supported.

     * 400 CreateManagedInstanceWithNonDefaultTimezoneNotSupported - Create Managed Instance with non-default timezone not supported.

     * 400 ManagedInstanceIpAddressRangeLimit - Cannot perform creation/scaling of the managed instance as there are not enough available IP addresses in the subnet for performing the operation.

     * 400 VnetDelegationNotAllowed - User tried to inject Managed Server to subnet which is delegated.

     * 400 SubnetHasResourcesOfDifferentType - User tried to create MI in subnet that has resources of different type.

     * 400 UpdateManagedServerWithMaintenanceWindowNotAllowed - Update of Managed Instance with maintenance window settings is not allowed.

     * 400 VnetPrepareNIPFailed - User tried to prepare subnet that has a conflict with NetworkIntentPolicy.

     * 400 InvalidUsername - Supplied user name contains invalid characters.

     * 400 ManagedInstanceDeprecatedHardwareFamily - Changing the hardware generation to deprecated {0} generation is not possible.

     * 400 ManagedInstanceBackupStorageTypeNotSupported - Backup storage type parameter is not allowed in the instance update operation.

     * 400 InvalidParameterValue - An invalid value was given to a parameter.

     * 400 InstancePoolNotEnoughCapacity - An instance pool does not have enough capacity

     * 400 ServerNotFound - The requested server was not found.

     * 400 ManagedInstanceZoneRedudantFeatureNotSupported - ZoneRedundant feature is not supported for the selected service tier. For more details visit aka.ms/sqlmi-service-tier-characteristics.

     * 400 ManagedInstanceZoneRedudantFeatureCantBeEnabled - Enabling zoneRedundant feature is not possible once managed instance is created. For more details visit aka.ms/sqlmi-high-availability.

     * 400 ManagedInstanceZoneRedudantFeatureCantBeDisabled - Disabling zoneRedundant feature is not possible once managed instance is created. For more details visit aka.ms/sqlmi-high-availability.

     * 400 TokenTooLong - The provided token is too long.

     * 400 ManagedInstanceSloUpdateFailed - SLO '{0}' operation cannot succeed as the memory usage of '{1}' exceeds the quota.

     * 400 ManagedInstanceLocalStorageUpdateSloDisabled - Update SLO for managed instances with local storage is not supported yet.

     * 400 InvalidLoginName - The provided login name is invalid.

     * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.

     * 400 PasswordTooShort - The provided password is too short

     * 400 PasswordTooLong - The provided password is too long.

     * 400 PasswordNotComplex - The provided password is not complex enough.

     * 400 GatewayInvalidEdition - '{0}' is not a valid database edition in this version of SQL Server.

     * 400 InvalidSubnetResourceId - The provided subnet resource ID for the managed instance create or update is invalid.

     * 400 SubscriptionNotFound - The requested subscription was not found.

     * 400 InvalidLocation - An invalid location was specified.

     * 400 VnetInWrongRegion - Virtual network is in wrong region.

     * 400 InvalidServerName - Invalid server name specified.

     * 400 VnetAddressRangeError - Virtual network address range is invalid.

     * 400 VnetConfigIsNotAllowed - Virtual network configuration is not allowed.

     * 400 InvalidCollation - Invalid collation.

     * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.

     * 400 ManagedInstanceClassicVnetNotSupported - Managed Instance cannot be joined to a classic virtual network.

     * 400 AlterDbDeactivatedNotSupported - Database Operation failed for Server '{0}', Database '{1}' due to unexpected delay. Please try again.

     * 400 RegionDoesNotAllowProvisioning - The selected location is not accepting new Windows Azure SQL Database servers. This may change at a later time.

     * 400 VnetConfigHasNsg - User tried to inject Managed Server subnet with Network Security Groups.

     * 400 VnetConfigHasNoUdr - User tried to inject Managed Server subnet without default User Defined Route Table.

     * 400 VnetConfigHasInvalidUdr - User tried to inject Managed Server subnet with invalid User Defined Route Table.

     * 400 VnetConfigHasInvalidDns - User tried to inject Managed Server subnet with invalid custom DNS.

     * 400 VnetConfigHasServiceEndpoints - User tried to inject Managed Server subnet with service endpoints.

     * 400 VnetSubnetIsInUse - User tried to inject Managed Server subnet that is not empty.

     * 400 VnetSubnetIsLocked - User tried to inject Managed Server subnet that is in locked scope.

     * 400 VnetSubnetIsGateway - User tried to inject Managed Server subnet that is Gateway subnet.

     * 400 VnetSubnetIsUnknown - User tried to inject Managed Server subnet that does not exist.

     * 400 VnetSubnetConflictWithIntendedPolicy - User tried to inject Managed Server subnet that has a conflict with IntendedPolicy.

     * 400 NameAlreadyExists - The provided name already exists.

     * 400 ManagedInstanceInvalidEditionForSku - The specified edition {0} is not consistent with the specified SKU {1}.

     * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes

     * 400 ManagedInstanceInvalidLicenseType - The specified license type {0} is not valid.

     * 400 ManagedInstanceUpdateSloInProgress - "The operation could not be completed because a service tier change is in progress for managed instance '{0}.' Please wait for the operation in progress to complete and try again."

     * 400 VnetResourceNotFound - Resource not found: '{0}'.

     * 400 InvalidTimezone - Invalid timezone.

     * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.

     * 400 InstanceCollationUpdateNotSupported - User cannot change instance collation on Managed Instance.

     * 400 CreateManagedInstanceWithNonDefaultCollationNotSupported - User can create a Managed Instance only with collation 'SQL_Latin1_General_CP1_CI_AS'.

     * 400 ManagedInstanceOperationInProgress - The operation could not be completed because {0} operation is in progress. Please wait for the operation in progress to complete and try again.

     * 400 ManagedInstanceExceedMaxAzureStorage - The operation could not be completed because total allocated storage size for General Purpose instance would exceed {0}. Please reduce the number of database files and retry operation.

     * 400 ManagedInstanceHasGeoReplica - The operation could not be completed because instance has configured geo replicated secondary instance.

     * 404 ResourceNotFound - The requested resource was not found.

     * 404 ResourceDoesNotExist - Resource with the name '{0}' does not exist. To continue, specify a valid resource name.

     * 405 InvalidVcoreValue - vCore value {0} is not valid. Please specify a valid vCore value.

     * 405 InvalidHardwareGenerationValue - HardwareGeneration {0} is not valid. Please specify a valid HardwareGeneration value.

     * 405 InvalidStorageSizeValue - "Invalid storage size: {0} GB. Storage size must be specified between {1} and {2} gigabytes, in increments of {3} GB.

     * 409 ConflictingServerOperation - An operation is currently in progress for the server.

     * 409 SubscriptionDisabled - Subscription is disabled.

     * 409 ServerAlreadyExists - Duplicate server name.

     * 409 ServerOverridePreconditionFailed - Failed to apply server override on category '{0}', because physical db or instance '{1}' in server '{2}' is currently not in 'Ready' or 'Deactivated' state.

     * 409 ServerDisabled - Server is disabled.

     * 409 ManagedInstanceIsBusy - The server '{0}' is currently busy.  Please wait a few minutes before trying again.

     * 409 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.

     * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription.

     * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.

     * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.

     * 500 GatewayInternalServerError - The server encountered an unexpected exception.

     * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.

     * 504 RequestTimeout - Service request exceeded the allowed timeout.
requestHeader: []
definitions:
- name: TimeZone
  description: Time Zone.
  kind: object
  properties:
  - name: properties.timeZoneId
    isReadyOnly: true
    description: The time zone id
    types:
    - uid: string
  - name: properties.displayName
    isReadyOnly: true
    description: The time zone display name
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
examples:
- name: Get managed instance time zone
  request:
    uri: GET https://management.azure.com/subscriptions/37d5e605-6142-4d79-b564-28b6dbfeec0f/providers/Microsoft.Sql/locations/canadaeast/timeZones/Haiti Standard Time?api-version=2020-11-01-preview
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "timeZoneId": "Haiti Standard Time",
          "displayName": "(UTC-05:00) Haiti"
        },
        "id": "/subscriptions/37d5e605-6142-4d79-b564-28b6dbfeec0f/providers/Microsoft.Sql/locations/onebox/timeZones/Haiti Standard Time",
        "name": "Haiti Standard Time",
        "type": "Microsoft.Sql/locations/timeZones"
      }
security: []
metadata:
  description: Learn more about SQL Database service - Gets a managed instance time zone.
errorCodes: []
