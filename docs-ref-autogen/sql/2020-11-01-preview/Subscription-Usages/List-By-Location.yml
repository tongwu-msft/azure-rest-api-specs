### YamlMime:RESTOperation
uid: management.azure.com.sql.2020-11-01-preview.subscriptionusages.listbylocation
name: List By Location
service: SQL Database
groupName: Subscription Usages
apiVersion: 2020-11-01-preview
summary: Gets all subscription usage metrics in a given location.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/usages?api-version=2020-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: locationName
  in: path
  isRequired: true
  description: The name of the region where the resource is located.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved the subscription location usages.
  types:
  - uid: SubscriptionUsageListResult
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 InvalidLocation - An invalid location was specified.

     * 400 SubscriptionNotFound - The requested subscription was not found.
requestHeader: []
definitions:
- name: SubscriptionUsageListResult
  description: A list of subscription usage metrics in a location.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: Array of results.
    types:
    - uid: SubscriptionUsage
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: Link to retrieve next page of results.
    types:
    - uid: string
- name: SubscriptionUsage
  description: Usage Metric of a Subscription in a Location.
  kind: object
  properties:
  - name: properties.displayName
    isReadyOnly: true
    description: User-readable name of the metric.
    types:
    - uid: string
  - name: properties.currentValue
    isReadyOnly: true
    description: Current value of the metric.
    types:
    - uid: number
  - name: properties.limit
    isReadyOnly: true
    description: Boundary value of the metric.
    types:
    - uid: number
  - name: properties.unit
    isReadyOnly: true
    description: Unit of the metric.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
examples:
- name: List subscription usages in the given location.
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Sql/locations/WestUS/usages?api-version=2020-11-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Sql/locations/WestUS/usages?api-version=2020-11-01-preview
      ```

      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/SubscriptionUsageListByLocation.json
      func ExampleSubscriptionUsagesClient_NewListByLocationPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewSubscriptionUsagesClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListByLocationPager("WestUS",
      		nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets all subscription usage metrics in a given location.
       *
       * @summary Gets all subscription usage metrics in a given location.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/SubscriptionUsageListByLocation.json
       */
      async function listSubscriptionUsagesInTheGivenLocation() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const locationName = "WestUS";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.subscriptionUsages.listByLocation(locationName)) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      listSubscriptionUsagesInTheGivenLocation().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "properties": {
              "displayName": "Regional Server Quota for West US",
              "currentValue": 1,
              "limit": 20,
              "unit": "Count"
            },
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Sql/locations/Onebox/usages/ServerQuota",
            "name": "ServerQuota",
            "type": "Microsoft.Sql/locations/usages"
          },
          {
            "properties": {
              "displayName": "Free Database Count per Subscription for West US",
              "currentValue": 0,
              "limit": 1,
              "unit": "Count"
            },
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Sql/locations/Onebox/usages/SubscriptionFreeDatabaseCount",
            "name": "SubscriptionFreeDatabaseCount",
            "type": "Microsoft.Sql/locations/usages"
          },
          {
            "properties": {
              "displayName": "Free to Basic Database Upgrade count-down in West US",
              "currentValue": 365,
              "limit": 365,
              "unit": "Count"
            },
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Sql/locations/Onebox/usages/SubscriptionFreeDatabaseDaysLeft",
            "name": "SubscriptionFreeDatabaseDaysLeft",
            "type": "Microsoft.Sql/locations/usages"
          }
        ]
      }
security: []
metadata:
  description: Learn more about SQL Database service - Gets all subscription usage metrics in a given location.
errorCodes: []
