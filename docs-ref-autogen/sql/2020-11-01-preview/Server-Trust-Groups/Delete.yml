### YamlMime:RESTOperation
uid: management.azure.com.sql.2020-11-01-preview.servertrustgroups.delete
name: Delete
service: SQL Database
groupName: Server Trust Groups
apiVersion: 2020-11-01-preview
summary: Deletes a server trust group.
consumes:
- application/json
produces:
- application/json
paths:
- content: DELETE https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/serverTrustGroups/{serverTrustGroupName}?api-version=2020-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: locationName
  in: path
  isRequired: true
  description: The name of the region where the resource is located.
  types:
  - uid: string
- name: serverTrustGroupName
  in: path
  isRequired: true
  description: The name of the server trust group.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully deleted the server trust group.
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 ServerTrustGroupCreateRequestInvalid - The resource or resource properties in the request body is empty or invalid

     * 400 ServerTrustGroupCreateRequestInvalidGroupMembers - The group members property in the request body is empty or invalid

     * 400 ServerTrustGroupCreateRequestInvalidGroupMembersCount - The group members property has an invalid number of servers

     * 400 ServerTrustGroupCreateRequestInvalidServer - The given serverId field in create server trust group request body is empty or invalid

     * 400 ServerTrustGroupCreateRequestDuplicateServer - One or more of the provided servers are duplicates.

     * 400 ServerTrustGroupCreateRequestInvalidTrustScopes - The trust scope property in the request body is empty or invalid.

     * 400 ServerTrustGroupCreateRequestInvalidTrustScopesValue - The trust scope property in the request body has an invalid value.

     * 404 OperationIdNotFound - The operation with Id does not exist.

     * 404 ResourceNotFound - The requested resource was not found.

     * 404 OperationIdNotFound - The operation with Id does not exist.

     * 409 OperationCancelled - The operation has been cancelled by user.

     * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.

     * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.
- name: 202 Accepted
  description: Accepted
- name: 204 No Content
  description: The specified server trust group does not exist.
requestHeader: []
definitions: []
examples:
- name: Drop server trust group
  request:
    uri: DELETE https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/locations/Japan East/serverTrustGroups/server-trust-group-test?api-version=2020-11-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      DELETE https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/locations/Japan East/serverTrustGroups/server-trust-group-test?api-version=2020-11-01-preview
      ```

      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ServerTrustGroupDelete.json
      func ExampleServerTrustGroupsClient_BeginDelete() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewServerTrustGroupsClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginDelete(ctx,
      		"Default",
      		"Japan East",
      		"server-trust-group-test",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	_, err = poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Deletes a server trust group.
       *
       * @summary Deletes a server trust group.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ServerTrustGroupDelete.json
       */
      async function dropServerTrustGroup() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "Default";
        const locationName = "Japan East";
        const serverTrustGroupName = "server-trust-group-test";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = await client.serverTrustGroups.beginDeleteAndWait(
          resourceGroupName,
          locationName,
          serverTrustGroupName
        );
        console.log(result);
      }

      dropServerTrustGroup().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
  - statusCode: "202"
  - statusCode: "204"
security: []
metadata:
  description: Learn more about SQL Database service - Deletes a server trust group.
errorCodes: []
