### YamlMime:RESTOperation
uid: management.azure.com.sql.2020-11-01-preview.managedinstanceazureadonlyauthentications.get
name: Get
service: SQL Database
groupName: Managed Instance Azure AD Only Authentications
apiVersion: 2020-11-01-preview
summary: Gets a specific Azure Active Directory only authentication property.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/azureADOnlyAuthentications/Default?api-version=2020-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: managedInstanceName
  in: path
  isRequired: true
  description: The name of the managed instance.
  types:
  - uid: string
- name: authenticationName
  in: path
  isRequired: true
  description: The name of server azure active directory only authentication.
  types:
  - uid: AuthenticationName
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved a specified Azure Active Directory only authentication properties.
  types:
  - uid: ManagedInstanceAzureADOnlyAuthentication
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 InvalidServerAzureADOnlyAuthenticationParameter - User tried to set AzureADOnlyAuthentication parameter to false which is not allowed, please use azureADOnlyAuthentications API instead.

     * 400 InvalidManagedServerAADOnlyAuthTypePropertyName - Managed Server Azure Active Directory only authentication type should be Default

     * 400 InvalidManagedServerAADOnlyAuthNoAADAdminPropertyName - AAD Admin is not configured, AAD Admin must be set before enabling/disabling AAD Only Authentication.

     * 400 SubscriptionNotFound - The requested subscription was not found.

     * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.

     * 404 ManagedInstanceNotInSubscriptionResourceGroup - Specified managed instance does not exist in the specified resource group and subscription.

     * 404 ResourceNotFound - The requested resource was not found.

     * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.

     * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.

     * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.

     * 504 RequestTimeout - Service request exceeded the allowed timeout.
requestHeader: []
definitions:
- name: AuthenticationName
  description: The name of server azure active directory only authentication.
  kind: enum
  properties:
  - name: Default
    types:
    - uid: string
- name: ManagedInstanceAzureADOnlyAuthentication
  description: Azure Active Directory only authentication.
  kind: object
  properties:
  - name: properties.azureADOnlyAuthentication
    description: Azure Active Directory only Authentication enabled.
    types:
    - uid: boolean
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
examples:
- name: Gets a Azure Active Directory only authentication property.
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/managedInstances/managedInstance/azureADOnlyAuthentications/Default?api-version=2020-11-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/managedInstances/managedInstance/azureADOnlyAuthentications/Default?api-version=2020-11-01-preview
      ```

      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedInstanceAzureADOnlyAuthGet.json
      func ExampleManagedInstanceAzureADOnlyAuthenticationsClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewManagedInstanceAzureADOnlyAuthenticationsClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"Default-SQL-SouthEastAsia",
      		"managedInstance",
      		armsql.AuthenticationNameDefault,
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a specific Azure Active Directory only authentication property.
       *
       * @summary Gets a specific Azure Active Directory only authentication property.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedInstanceAzureADOnlyAuthGet.json
       */
      async function getsAAzureActiveDirectoryOnlyAuthenticationProperty() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "Default-SQL-SouthEastAsia";
        const managedInstanceName = "managedInstance";
        const authenticationName = "Default";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = await client.managedInstanceAzureADOnlyAuthentications.get(
          resourceGroupName,
          managedInstanceName,
          authenticationName
        );
        console.log(result);
      }

      getsAAzureActiveDirectoryOnlyAuthenticationProperty().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/azureADOnlyAuthentications/providers/Microsoft.Sql/managedInstances/managedInstance/azureadonlyauthentications/default",
        "name": "Default",
        "type": "Microsoft.Sql/managedInstances/azureadonlyauthentications",
        "properties": {
          "azureADOnlyAuthentication": true
        }
      }
security: []
metadata:
  description: Learn more about SQL Database service - Gets a specific Azure Active Directory only authentication property.
errorCodes: []
