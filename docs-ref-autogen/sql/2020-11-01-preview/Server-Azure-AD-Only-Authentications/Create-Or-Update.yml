### YamlMime:RESTOperation
uid: management.azure.com.sql.2020-11-01-preview.serverazureadonlyauthentications.createorupdate
name: Create Or Update
service: SQL Database
groupName: Server Azure AD Only Authentications
apiVersion: 2020-11-01-preview
summary: Sets Server Active Directory only authentication property or updates an existing server Active Directory only authentication property.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/azureADOnlyAuthentications/Default?api-version=2020-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: authenticationName
  in: path
  isRequired: true
  description: The name of server azure active directory only authentication.
  types:
  - uid: AuthenticationName
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully updated a Azure Active Directory only authentication property.
  types:
  - uid: ServerAzureADOnlyAuthentication
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 InvalidServerAzureADOnlyAuthenticationParameter - User tried to set AzureADOnlyAuthentication parameter to false which is not allowed, please use azureADOnlyAuthentications API instead.

     * 400 InvalidServerAADOnlyAuthTypePropertyName - Server Azure Active Directory only authentication type should be Default

     * 400 InvalidServerAADOnlyAuthNoAADAdminPropertyName - AAD Admin is not configured, AAD Admin must be set before enabling/disabling AAD Only Authentication.

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.

     * 404 OperationIdNotFound - The operation with Id does not exist.

     * 409 OperationCancelled - The operation has been cancelled by user.

     * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.

     * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.
- name: 202 Accepted
  description: Accepted
- name: 201 Created
  description: Successfully updated Azure Active Directory only authentication property.
  types:
  - uid: ServerAzureADOnlyAuthentication
requestBody:
- name: default
  parameters:
  - name: properties.azureADOnlyAuthentication
    in: body
    isRequired: true
    description: Azure Active Directory only Authentication enabled.
    types:
    - uid: boolean
requestHeader: []
definitions:
- name: AuthenticationName
  description: The name of server azure active directory only authentication.
  kind: enum
  properties:
  - name: Default
    types:
    - uid: string
- name: ServerAzureADOnlyAuthentication
  description: Azure Active Directory only authentication.
  kind: object
  properties:
  - name: properties.azureADOnlyAuthentication
    description: Azure Active Directory only Authentication enabled.
    types:
    - uid: boolean
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
examples:
- name: Creates or updates Azure Active Directory only authentication object.
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-6440/azureADOnlyAuthentications/Default?api-version=2020-11-01-preview
    body: >-
      {
        "properties": {
          "azureADOnlyAuthentication": false
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-6440/azureADOnlyAuthentications/Default?api-version=2020-11-01-preview

      {
        "properties": {
          "azureADOnlyAuthentication": false
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/AzureADOnlyAuthCreateOrUpdate.json
      func ExampleServerAzureADOnlyAuthenticationsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewServerAzureADOnlyAuthenticationsClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"sqlcrudtest-4799",
      		"sqlcrudtest-6440",
      		armsql.AuthenticationNameDefault,
      		armsql.ServerAzureADOnlyAuthentication{
      			Properties: &armsql.AzureADOnlyAuthProperties{
      				AzureADOnlyAuthentication: to.Ptr(false),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Sets Server Active Directory only authentication property or updates an existing server Active Directory only authentication property.
       *
       * @summary Sets Server Active Directory only authentication property or updates an existing server Active Directory only authentication property.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/AzureADOnlyAuthCreateOrUpdate.json
       */
      async function createsOrUpdatesAzureActiveDirectoryOnlyAuthenticationObject() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "sqlcrudtest-4799";
        const serverName = "sqlcrudtest-6440";
        const authenticationName = "Default";
        const parameters = {
          azureADOnlyAuthentication: false,
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = await client.serverAzureADOnlyAuthentications.beginCreateOrUpdateAndWait(
          resourceGroupName,
          serverName,
          authenticationName,
          parameters
        );
        console.log(result);
      }

      createsOrUpdatesAzureActiveDirectoryOnlyAuthenticationObject().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-6440/azureadonlyauthentications/default",
        "name": "Default",
        "type": "Microsoft.Sql/servers/azureadonlyauthentications",
        "properties": {
          "azureADOnlyAuthentication": false
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-6440/azureadonlyauthentications/default",
        "name": "Default",
        "type": "Microsoft.Sql/servers/azureadonlyauthentications",
        "properties": {
          "azureADOnlyAuthentication": false
        }
      }
  - statusCode: "202"
security: []
metadata:
  description: Sets Server Active Directory only authentication property or updates an existing server Active Directory only authentication property.
errorCodes: []
