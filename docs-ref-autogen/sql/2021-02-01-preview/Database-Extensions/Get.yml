### YamlMime:RESTOperation
uid: management.azure.com.sql.2021-02-01-preview.databaseextensions.get
name: Get
service: SQL Database
groupName: Database Extensions
apiVersion: 2021-02-01-preview
summary: Gets a database extension. This will return resource not found as it is not supported.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extensions/{extensionName}?api-version=2021-02-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: databaseName
  in: path
  isRequired: true
  description: The name of the database.
  types:
  - uid: string
- name: extensionName
  in: path
  isRequired: true
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Get extensions import/export operation. This will return resource not found as it is not supported.
- name: Other Status Codes
  description: '*** Error Responses: ***'
requestHeader: []
definitions: []
examples:
- name: Get database extensions.
  request:
    uri: GET https://management.azure.com/subscriptions/a3473687-7581-41e1-ac24-6bcca5843f07/resourceGroups/rg_a1f9d6f8-30d5-4228-9504-8a364361bca3/providers/Microsoft.Sql/servers/srv_65858e0f-b1d1-4bdc-8351-a7da86ca4939/databases/11aa6c5e-58ed-4693-b303-3b8e3131deaa/extensions/polybaseimport?api-version=2021-02-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/a3473687-7581-41e1-ac24-6bcca5843f07/resourceGroups/rg_a1f9d6f8-30d5-4228-9504-8a364361bca3/providers/Microsoft.Sql/servers/srv_65858e0f-b1d1-4bdc-8351-a7da86ca4939/databases/11aa6c5e-58ed-4693-b303-3b8e3131deaa/extensions/polybaseimport?api-version=2021-02-01-preview
      ```

      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/preview/2021-02-01-preview/examples/GetDatabaseExtensions.json
      func ExampleDatabaseExtensionsClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewDatabaseExtensionsClient("a3473687-7581-41e1-ac24-6bcca5843f07", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	_, err = client.Get(ctx,
      		"rg_a1f9d6f8-30d5-4228-9504-8a364361bca3",
      		"srv_65858e0f-b1d1-4bdc-8351-a7da86ca4939",
      		"11aa6c5e-58ed-4693-b303-3b8e3131deaa",
      		"polybaseimport",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a database extension. This will return resource not found as it is not supported.
       *
       * @summary Gets a database extension. This will return resource not found as it is not supported.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2021-02-01-preview/examples/GetDatabaseExtensions.json
       */
      async function getDatabaseExtensions() {
        const subscriptionId = "a3473687-7581-41e1-ac24-6bcca5843f07";
        const resourceGroupName = "rg_a1f9d6f8-30d5-4228-9504-8a364361bca3";
        const serverName = "srv_65858e0f-b1d1-4bdc-8351-a7da86ca4939";
        const databaseName = "11aa6c5e-58ed-4693-b303-3b8e3131deaa";
        const extensionName = "polybaseimport";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = await client.databaseExtensionsOperations.get(
          resourceGroupName,
          serverName,
          databaseName,
          extensionName
        );
        console.log(result);
      }

      getDatabaseExtensions().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
security: []
metadata:
  description: Learn more about SQL Database service - Gets a database extension. This will return resource not found as it is not supported.
errorCodes: []
