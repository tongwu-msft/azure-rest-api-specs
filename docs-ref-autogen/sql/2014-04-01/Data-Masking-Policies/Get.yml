### YamlMime:RESTOperation
uid: management.azure.com.sql.2014-04-01.datamaskingpolicies.get
name: Get
service: SQL Database
groupName: Data Masking Policies
apiVersion: 2014-04-01
summary: Gets a database data masking policy.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataMaskingPolicies/Default?api-version=2014-04-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: databaseName
  in: path
  isRequired: true
  description: The name of the database.
  types:
  - uid: string
- name: dataMaskingPolicyName
  in: path
  isRequired: true
  description: The name of the database for which the data masking rule applies.
  types:
  - uid: DataMaskingPolicyName
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: DataMaskingPolicy
requestHeader: []
definitions:
- name: DataMaskingPolicyName
  description: The name of the database for which the data masking rule applies.
  kind: enum
  properties:
  - name: Default
    types:
    - uid: string
- name: DataMaskingPolicy
  description: Represents a database data masking policy.
  kind: object
  properties:
  - name: location
    isReadyOnly: true
    description: The location of the data masking policy.
    types:
    - uid: string
  - name: kind
    isReadyOnly: true
    description: The kind of data masking policy. Metadata, used for Azure portal.
    types:
    - uid: string
  - name: properties.dataMaskingState
    description: The state of the data masking policy.
    types:
    - uid: DataMaskingState
  - name: properties.exemptPrincipals
    description: The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries.
    types:
    - uid: string
  - name: properties.applicationPrincipals
    isReadyOnly: true
    description: The list of the application principals. This is a legacy parameter and is no longer used.
    types:
    - uid: string
  - name: properties.maskingLevel
    isReadyOnly: true
    description: The masking level. This is a legacy parameter and is no longer used.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
- name: DataMaskingState
  description: The state of the data masking policy.
  kind: enum
  properties:
  - name: Disabled
    types:
    - uid: string
  - name: Enabled
    types:
    - uid: string
examples:
- name: Get data masking policy
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6852/providers/Microsoft.Sql/servers/sqlcrudtest-2080/databases/sqlcrudtest-331/dataMaskingPolicies/Default?api-version=2014-04-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6852/providers/Microsoft.Sql/servers/sqlcrudtest-2080/databases/sqlcrudtest-331/dataMaskingPolicies/Default?api-version=2014-04-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for DataMaskingPolicies Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/examples/DataMaskingPolicyGet.json
           */
          /**
           * Sample code: Get data masking policy.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void getDataMaskingPolicy(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .sqlServers()
                  .manager()
                  .serviceClient()
                  .getDataMaskingPolicies()
                  .getWithResponse("sqlcrudtest-6852", "sqlcrudtest-2080", "sqlcrudtest-331", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/examples/DataMaskingPolicyGet.json
      func ExampleDataMaskingPoliciesClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewDataMaskingPoliciesClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"sqlcrudtest-6852",
      		"sqlcrudtest-2080",
      		"sqlcrudtest-331",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a database data masking policy.
       *
       * @summary Gets a database data masking policy.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/examples/DataMaskingPolicyGet.json
       */
      async function getDataMaskingPolicy() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "sqlcrudtest-6852";
        const serverName = "sqlcrudtest-2080";
        const databaseName = "sqlcrudtest-331";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = await client.dataMaskingPolicies.get(resourceGroupName, serverName, databaseName);
        console.log(result);
      }

      getDataMaskingPolicy().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6852/providers/Microsoft.Sql/servers/sqlcrudtest-2080/databases/sqlcrudtest-331/dataMaskingPolicies/Default",
        "name": "Default",
        "type": "Microsoft.Sql/servers/databases/dataMaskingPolicies",
        "location": "Central US",
        "kind": null,
        "properties": {
          "dataMaskingState": "Enabled",
          "applicationPrincipals": "",
          "exemptPrincipals": "",
          "maskingLevel": ""
        }
      }
security: []
metadata:
  description: >
    Learn more about SQL Database service - Gets a database data masking policy.
errorCodes: []
