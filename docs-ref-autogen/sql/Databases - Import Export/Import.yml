### YamlMime:RESTOperation
uid: management.azure.com.sql.databases-importexport.import
name: Import
service: SQL Database
groupName: Databases - Import Export
apiVersion: 2014-04-01
summary: 'Imports a bacpac into a new database. '
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/import?api-version=2014-04-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: ImportExportResponse
- name: 202 Accepted
  description: Accepted
requestBody:
- name: default
  parameters:
  - name: databaseName
    in: body
    isRequired: true
    description: The name of the database to import.
    types:
    - uid: string
  - name: edition
    in: body
    isRequired: true
    description: The edition for the database being created.
    types:
    - uid: DatabaseEdition
  - name: serviceObjectiveName
    in: body
    isRequired: true
    description: The name of the service objective to assign to the database.
    types:
    - uid: ServiceObjectiveName
  - name: maxSizeBytes
    in: body
    isRequired: true
    description: The maximum size for the newly imported database.
    types:
    - uid: string
  - name: storageKeyType
    in: body
    isRequired: true
    description: The type of the storage key to use.
    types:
    - uid: StorageKeyType
  - name: storageKey
    in: body
    isRequired: true
    description: The storage key to use.  If storage key type is SharedAccessKey, it must be preceded with a "?."
    types:
    - uid: string
  - name: storageUri
    in: body
    isRequired: true
    description: The storage uri to use.
    types:
    - uid: string
  - name: administratorLogin
    in: body
    isRequired: true
    description: The name of the SQL administrator.
    types:
    - uid: string
  - name: administratorLoginPassword
    in: body
    isRequired: true
    description: The password of the SQL administrator.
    types:
    - uid: string
  - name: authenticationType
    in: body
    description: The authentication type.
    types:
    - uid: AuthenticationType
requestHeader: []
definitions:
- name: ImportExportResponse
  description: Response for Import/Export Get operation.
  kind: object
  properties:
  - name: properties.requestType
    isReadyOnly: true
    description: The request type of the operation.
    types:
    - uid: string
  - name: properties.requestId
    isReadyOnly: true
    description: The request type of the operation.
    types:
    - uid: string
  - name: properties.serverName
    isReadyOnly: true
    description: The name of the server.
    types:
    - uid: string
  - name: properties.databaseName
    isReadyOnly: true
    description: The name of the database.
    types:
    - uid: string
  - name: properties.status
    isReadyOnly: true
    description: The status message returned from the server.
    types:
    - uid: string
  - name: properties.lastModifiedTime
    isReadyOnly: true
    description: The operation status last modified time.
    types:
    - uid: string
  - name: properties.queuedTime
    isReadyOnly: true
    description: The operation queued time.
    types:
    - uid: string
  - name: properties.blobUri
    isReadyOnly: true
    description: The blob uri.
    types:
    - uid: string
  - name: properties.errorMessage
    isReadyOnly: true
    description: The error message returned from the server.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
- name: ImportRequest
  description: Import database parameters.
  kind: object
  properties:
  - name: databaseName
    description: The name of the database to import.
    types:
    - uid: string
  - name: edition
    description: The edition for the database being created.
    types:
    - uid: DatabaseEdition
  - name: serviceObjectiveName
    description: The name of the service objective to assign to the database.
    types:
    - uid: ServiceObjectiveName
  - name: maxSizeBytes
    description: The maximum size for the newly imported database.
    types:
    - uid: string
  - name: storageKeyType
    description: The type of the storage key to use.
    types:
    - uid: StorageKeyType
  - name: storageKey
    description: The storage key to use.  If storage key type is SharedAccessKey, it must be preceded with a "?."
    types:
    - uid: string
  - name: storageUri
    description: The storage uri to use.
    types:
    - uid: string
  - name: administratorLogin
    description: The name of the SQL administrator.
    types:
    - uid: string
  - name: administratorLoginPassword
    description: The password of the SQL administrator.
    types:
    - uid: string
  - name: authenticationType
    description: The authentication type.
    types:
    - uid: AuthenticationType
- name: DatabaseEdition
  description: The edition for the database being created.
  kind: enum
  properties:
  - name: Web
    types:
    - uid: string
  - name: Business
    types:
    - uid: string
  - name: Basic
    types:
    - uid: string
  - name: Standard
    types:
    - uid: string
  - name: Premium
    types:
    - uid: string
  - name: PremiumRS
    types:
    - uid: string
  - name: Free
    types:
    - uid: string
  - name: Stretch
    types:
    - uid: string
  - name: DataWarehouse
    types:
    - uid: string
  - name: System
    types:
    - uid: string
  - name: System2
    types:
    - uid: string
- name: ServiceObjectiveName
  description: The name of the service objective to assign to the database.
  kind: enum
  properties:
  - name: System
    types:
    - uid: string
  - name: System0
    types:
    - uid: string
  - name: System1
    types:
    - uid: string
  - name: System2
    types:
    - uid: string
  - name: System3
    types:
    - uid: string
  - name: System4
    types:
    - uid: string
  - name: System2L
    types:
    - uid: string
  - name: System3L
    types:
    - uid: string
  - name: System4L
    types:
    - uid: string
  - name: Free
    types:
    - uid: string
  - name: Basic
    types:
    - uid: string
  - name: S0
    types:
    - uid: string
  - name: S1
    types:
    - uid: string
  - name: S2
    types:
    - uid: string
  - name: S3
    types:
    - uid: string
  - name: S4
    types:
    - uid: string
  - name: S6
    types:
    - uid: string
  - name: S7
    types:
    - uid: string
  - name: S9
    types:
    - uid: string
  - name: S12
    types:
    - uid: string
  - name: P1
    types:
    - uid: string
  - name: P2
    types:
    - uid: string
  - name: P3
    types:
    - uid: string
  - name: P4
    types:
    - uid: string
  - name: P6
    types:
    - uid: string
  - name: P11
    types:
    - uid: string
  - name: P15
    types:
    - uid: string
  - name: PRS1
    types:
    - uid: string
  - name: PRS2
    types:
    - uid: string
  - name: PRS4
    types:
    - uid: string
  - name: PRS6
    types:
    - uid: string
  - name: DW100
    types:
    - uid: string
  - name: DW200
    types:
    - uid: string
  - name: DW300
    types:
    - uid: string
  - name: DW400
    types:
    - uid: string
  - name: DW500
    types:
    - uid: string
  - name: DW600
    types:
    - uid: string
  - name: DW1000
    types:
    - uid: string
  - name: DW1200
    types:
    - uid: string
  - name: DW1000c
    types:
    - uid: string
  - name: DW1500
    types:
    - uid: string
  - name: DW1500c
    types:
    - uid: string
  - name: DW2000
    types:
    - uid: string
  - name: DW2000c
    types:
    - uid: string
  - name: DW3000
    types:
    - uid: string
  - name: DW2500c
    types:
    - uid: string
  - name: DW3000c
    types:
    - uid: string
  - name: DW6000
    types:
    - uid: string
  - name: DW5000c
    types:
    - uid: string
  - name: DW6000c
    types:
    - uid: string
  - name: DW7500c
    types:
    - uid: string
  - name: DW10000c
    types:
    - uid: string
  - name: DW15000c
    types:
    - uid: string
  - name: DW30000c
    types:
    - uid: string
  - name: DS100
    types:
    - uid: string
  - name: DS200
    types:
    - uid: string
  - name: DS300
    types:
    - uid: string
  - name: DS400
    types:
    - uid: string
  - name: DS500
    types:
    - uid: string
  - name: DS600
    types:
    - uid: string
  - name: DS1000
    types:
    - uid: string
  - name: DS1200
    types:
    - uid: string
  - name: DS1500
    types:
    - uid: string
  - name: DS2000
    types:
    - uid: string
  - name: ElasticPool
    types:
    - uid: string
- name: StorageKeyType
  description: The type of the storage key to use.
  kind: enum
  properties:
  - name: StorageAccessKey
    types:
    - uid: string
  - name: SharedAccessKey
    types:
    - uid: string
- name: AuthenticationType
  description: The authentication type.
  kind: enum
  properties:
  - name: SQL
    types:
    - uid: string
  - name: ADPassword
    types:
    - uid: string
examples:
- name: Import bacpac into new database Max with storage key
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/import?api-version=2014-04-01
    body: >-
      {
        "databaseName": "TestDbImport",
        "edition": "Basic",
        "serviceObjectiveName": "Basic",
        "maxSizeBytes": "2147483648",
        "storageKeyType": "StorageAccessKey",
        "storageKey": "sdlfkjdsf+sdlfkjsdlkfsjdfLDKFJSDLKFDFKLjsdfksjdflsdkfD2342309432849328479324/3RSD==",
        "storageUri": "https://test.blob.core.windows.net/bacpacs/testbacpac.bacpac",
        "administratorLogin": "dummyLogin",
        "administratorLoginPassword": "Un53cuRE!",
        "authenticationType": "SQL"
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/importExportOperationResult/f01d7bfe-7162-44e7-9350-f1c85ce83e4c",
        "name": "f01d7bfe-7162-44e7-9350-f1c85ce83e4c",
        "type": "Microsoft.Sql/servers/importExportOperationResults",
        "properties": {
          "requestId": "f01d7bfe-7162-44e7-9350-f1c85ce83e4c",
          "requestType": "Import",
          "queuedTime": "3/1/2017 12:14:25 AM",
          "lastModifiedTime": "3/1/2017 12:16:33 AM",
          "blobUri": "https://test.blob.core.windows.net/bacpacs/test.bacpac",
          "serverName": "test",
          "databaseName": "testdb",
          "status": "Completed",
          "errorMessage": null
        }
      }
  - statusCode: "202"
- name: Import bacpac into new database Min with storage key
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/import?api-version=2014-04-01
    body: >-
      {
        "databaseName": "TestDbImport",
        "edition": "Basic",
        "serviceObjectiveName": "Basic",
        "maxSizeBytes": "2147483648",
        "storageKeyType": "StorageAccessKey",
        "storageKey": "sdlfkjdsf+sdlfkjsdlkfsjdfLDKFJSDLKFDFKLjsdfksjdflsdkfD2342309432849328479324/3RSD==",
        "storageUri": "https://test.blob.core.windows.net/bacpacs/testbacpac.bacpac",
        "administratorLogin": "dummyLogin",
        "administratorLoginPassword": "Un53cuRE!"
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/importExportOperationResult/f01d7bfe-7162-44e7-9350-f1c85ce83e4c",
        "name": "f01d7bfe-7162-44e7-9350-f1c85ce83e4c",
        "type": "Microsoft.Sql/servers/importExportOperationResults",
        "properties": {
          "requestId": "f01d7bfe-7162-44e7-9350-f1c85ce83e4c",
          "requestType": "Import",
          "queuedTime": "3/1/2017 12:14:25 AM",
          "lastModifiedTime": "3/1/2017 12:16:33 AM",
          "blobUri": "https://test.blob.core.windows.net/bacpacs/test.bacpac",
          "serverName": "test",
          "databaseName": "testdb",
          "status": "Completed",
          "errorMessage": null
        }
      }
  - statusCode: "202"
- name: Import bacpac into new database Max with SAS key
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/import?api-version=2014-04-01
    body: >-
      {
        "databaseName": "TestDbImport",
        "edition": "Basic",
        "serviceObjectiveName": "Basic",
        "maxSizeBytes": "2147483648",
        "storageKeyType": "SharedAccessKey",
        "storageKey": "?sr=b&sp=rw&se=2018-01-01T00%3A00%3A00Z&sig=sdfsdfklsdjflSLIFJLSIEJFLKSDJFDd/%2wdfskdjf3%3D&sv=2015-07-08",
        "storageUri": "https://test.blob.core.windows.net/bacpacs/testbacpac.bacpac",
        "administratorLogin": "dummyLogin",
        "administratorLoginPassword": "Un53cuRE!",
        "authenticationType": "SQL"
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/importExportOperationResult/f01d7bfe-7162-44e7-9350-f1c85ce83e4c",
        "name": "f01d7bfe-7162-44e7-9350-f1c85ce83e4c",
        "type": "Microsoft.Sql/servers/importExportOperationResults",
        "properties": {
          "requestId": "f01d7bfe-7162-44e7-9350-f1c85ce83e4c",
          "requestType": "Import",
          "queuedTime": "3/1/2017 12:14:25 AM",
          "lastModifiedTime": "3/1/2017 12:16:33 AM",
          "blobUri": "https://test.blob.core.windows.net/bacpacs/test.bacpac",
          "serverName": "test",
          "databaseName": "testdb",
          "status": "Completed",
          "errorMessage": null
        }
      }
  - statusCode: "202"
- name: Import bacpac into new database Min with SAS key
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/import?api-version=2014-04-01
    body: >-
      {
        "databaseName": "TestDbImport",
        "edition": "Basic",
        "serviceObjectiveName": "Basic",
        "maxSizeBytes": "2147483648",
        "storageKeyType": "SharedAccessKey",
        "storageKey": "?sr=b&sp=rw&se=2018-01-01T00%3A00%3A00Z&sig=sdfsdfklsdjflSLIFJLSIEJFLKSDJFDd/%2wdfskdjf3%3D&sv=2015-07-08",
        "storageUri": "https://test.blob.core.windows.net/bacpacs/testbacpac.bacpac",
        "administratorLogin": "dummyLogin",
        "administratorLoginPassword": "Un53cuRE!"
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/importExportOperationResult/f01d7bfe-7162-44e7-9350-f1c85ce83e4c",
        "name": "f01d7bfe-7162-44e7-9350-f1c85ce83e4c",
        "type": "Microsoft.Sql/servers/importExportOperationResults",
        "properties": {
          "requestId": "f01d7bfe-7162-44e7-9350-f1c85ce83e4c",
          "requestType": "Import",
          "queuedTime": "3/1/2017 12:14:25 AM",
          "lastModifiedTime": "3/1/2017 12:16:33 AM",
          "blobUri": "https://test.blob.core.windows.net/bacpacs/test.bacpac",
          "serverName": "test",
          "databaseName": "testdb",
          "status": "Completed",
          "errorMessage": null
        }
      }
  - statusCode: "202"
security: []
