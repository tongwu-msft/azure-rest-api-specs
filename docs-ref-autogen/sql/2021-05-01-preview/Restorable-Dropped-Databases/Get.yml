### YamlMime:RESTOperation
uid: management.azure.com.sql.2021-05-01-preview.restorabledroppeddatabases.get
name: Get
service: SQL Database
groupName: Restorable Dropped Databases
apiVersion: 2021-05-01-preview
summary: Gets a restorable dropped database.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/restorableDroppedDatabases/{restorableDroppedDatabaseId}?api-version=2021-05-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: restorableDroppedDatabaseId
  in: path
  isRequired: true
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved the specified restorable dropped database.
  types:
  - uid: RestorableDroppedDatabase
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 InvalidRestorableDroppedDatabaseDeletionDate - The restorable dropped database deletion date given is invalid

     * 400 InvalidRestorableDroppedDatabaseId - Invalid restorable dropped database identifier

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.

     * 404 ResourceNotFound - The requested resource was not found.
requestHeader: []
definitions:
- name: RestorableDroppedDatabase
  description: A restorable dropped database resource.
  kind: object
  properties:
  - name: sku
    description: The name and tier of the SKU.
    types:
    - uid: Sku
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.databaseName
    isReadyOnly: true
    description: The name of the database.
    types:
    - uid: string
  - name: properties.maxSizeBytes
    isReadyOnly: true
    description: The max size of the database expressed in bytes.
    types:
    - uid: integer
  - name: properties.creationDate
    isReadyOnly: true
    description: The creation date of the database (ISO8601 format).
    types:
    - uid: string
  - name: properties.deletionDate
    isReadyOnly: true
    description: The deletion date of the database (ISO8601 format).
    types:
    - uid: string
  - name: properties.earliestRestoreDate
    isReadyOnly: true
    description: The earliest restore date of the database (ISO8601 format).
    types:
    - uid: string
  - name: properties.backupStorageRedundancy
    isReadyOnly: true
    description: The storage account type used to store backups for this database.
    types:
    - uid: BackupStorageRedundancy
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
- name: Sku
  description: An ARM Resource SKU.
  kind: object
  properties:
  - name: name
    description: The name of the SKU, typically, a letter + Number code, e.g. P3.
    types:
    - uid: string
  - name: tier
    description: The tier or edition of the particular SKU, e.g. Basic, Premium.
    types:
    - uid: string
  - name: size
    description: Size of the particular SKU
    types:
    - uid: string
  - name: family
    description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
    types:
    - uid: string
  - name: capacity
    description: Capacity of the particular SKU.
    types:
    - uid: integer
- name: BackupStorageRedundancy
  description: The storage account type used to store backups for this database.
  kind: enum
  properties:
  - name: Geo
    types:
    - uid: string
  - name: Local
    types:
    - uid: string
  - name: Zone
    types:
    - uid: string
  - name: GeoZone
    types:
    - uid: string
examples:
- name: Gets a restorable dropped database.
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/servers/testsvr/restorableDroppedDatabases/testdb,131403269876900000?api-version=2021-05-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/servers/testsvr/restorableDroppedDatabases/testdb,131403269876900000?api-version=2021-05-01-preview
      ```

      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/preview/2021-05-01-preview/examples/GetRestorableDroppedDatabase.json
      func ExampleRestorableDroppedDatabasesClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewRestorableDroppedDatabasesClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"Default-SQL-SouthEastAsia",
      		"testsvr",
      		"testdb,131403269876900000",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a restorable dropped database.
       *
       * @summary Gets a restorable dropped database.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2021-05-01-preview/examples/GetRestorableDroppedDatabase.json
       */
      async function getsARestorableDroppedDatabase() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "Default-SQL-SouthEastAsia";
        const serverName = "testsvr";
        const restorableDroppedDatabaseId = "testdb,131403269876900000";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = await client.restorableDroppedDatabases.get(
          resourceGroupName,
          serverName,
          restorableDroppedDatabaseId
        );
        console.log(result);
      }

      getsARestorableDroppedDatabase().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "sku": {
          "name": "BC_Gen4_2",
          "tier": "BusinessCritical"
        },
        "properties": {
          "databaseName": "testdb",
          "maxSizeBytes": 268435456000,
          "creationDate": "2017-05-07T04:41:33.937Z",
          "deletionDate": "2017-05-27T02:49:47.69Z",
          "backupStorageRedundancy": "Geo"
        },
        "location": "southeastasia",
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/servers/testsvr/restorableDroppedDatabases/testdb",
        "name": "testdb,131403269876900000",
        "type": "Microsoft.Sql/servers/restorableDroppedDatabases"
      }
security: []
metadata:
  description: Learn more about SQL Database service - Gets a restorable dropped database.
errorCodes: []
