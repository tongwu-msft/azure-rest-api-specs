### YamlMime:RESTOperation
uid: management.azure.com.sql.2021-05-01-preview.longtermretentionmanagedinstancebackups.listbyresourcegroupdatabase
name: List By Resource Group Database
service: SQL Database
groupName: Long Term Retention Managed Instance Backups
apiVersion: 2021-05-01-preview
summary: Lists all long term retention backups for a managed database.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionDatabases/{databaseName}/longTermRetentionManagedInstanceBackups?api-version=2021-05-01-preview
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionDatabases/{databaseName}/longTermRetentionManagedInstanceBackups?onlyLatestPerDatabase={onlyLatestPerDatabase}&databaseState={databaseState}&api-version=2021-05-01-preview
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: locationName
  in: path
  isRequired: true
  description: The location of the database
  types:
  - uid: string
- name: managedInstanceName
  in: path
  isRequired: true
  description: The name of the managed instance.
  types:
  - uid: string
- name: databaseName
  in: path
  isRequired: true
  description: The name of the managed database.
  types:
  - uid: string
- name: onlyLatestPerDatabase
  in: query
  description: Whether or not to only get the latest backup for each database.
  types:
  - uid: boolean
- name: databaseState
  in: query
  description: Whether to query against just live databases, just deleted databases, or all databases.
  types:
  - uid: databaseState
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved the list of backups.
  types:
  - uid: ManagedInstanceLongTermRetentionBackupListResult
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.
requestHeader: []
definitions:
- name: databaseState
  description: Whether to query against just live databases, just deleted databases, or all databases.
  kind: enum
  properties:
  - name: All
    types:
    - uid: string
  - name: Live
    types:
    - uid: string
  - name: Deleted
    types:
    - uid: string
- name: ManagedInstanceLongTermRetentionBackupListResult
  description: A list of long term retention backups for managed database(s).
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: Array of results.
    types:
    - uid: ManagedInstanceLongTermRetentionBackup
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: Link to retrieve next page of results.
    types:
    - uid: string
- name: ManagedInstanceLongTermRetentionBackup
  description: A long term retention backup for a managed database.
  kind: object
  properties:
  - name: properties.managedInstanceName
    isReadyOnly: true
    description: The managed instance that the backup database belongs to.
    types:
    - uid: string
  - name: properties.managedInstanceCreateTime
    isReadyOnly: true
    description: The create time of the instance.
    types:
    - uid: string
  - name: properties.databaseName
    isReadyOnly: true
    description: The name of the database the backup belong to
    types:
    - uid: string
  - name: properties.databaseDeletionTime
    isReadyOnly: true
    description: The delete time of the database
    types:
    - uid: string
  - name: properties.backupTime
    isReadyOnly: true
    description: The time the backup was taken
    types:
    - uid: string
  - name: properties.backupExpirationTime
    isReadyOnly: true
    description: The time the long term retention backup will expire.
    types:
    - uid: string
  - name: properties.backupStorageRedundancy
    isReadyOnly: true
    description: The storage redundancy type of the backup
    types:
    - uid: BackupStorageRedundancy
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
- name: BackupStorageRedundancy
  description: The storage redundancy type of the backup
  kind: enum
  properties:
  - name: Geo
    types:
    - uid: string
  - name: Local
    types:
    - uid: string
  - name: Zone
    types:
    - uid: string
  - name: GeoZone
    types:
    - uid: string
examples:
- name: Get all long term retention backups under the database.
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testResourceGroup/providers/Microsoft.Sql/locations/japaneast/longTermRetentionManagedInstances/testInstance/longTermRetentionDatabases/testDatabase/longTermRetentionManagedInstanceBackups?api-version=2021-05-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testResourceGroup/providers/Microsoft.Sql/locations/japaneast/longTermRetentionManagedInstances/testInstance/longTermRetentionDatabases/testDatabase/longTermRetentionManagedInstanceBackups?api-version=2021-05-01-preview
      ```

      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/preview/2021-05-01-preview/examples/ResourceGroupBasedManagedInstanceLongTermRetentionBackupListByDatabase.json
      func ExampleLongTermRetentionManagedInstanceBackupsClient_NewListByResourceGroupDatabasePager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewLongTermRetentionManagedInstanceBackupsClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListByResourceGroupDatabasePager("testResourceGroup",
      		"japaneast",
      		"testInstance",
      		"testDatabase",
      		&armsql.LongTermRetentionManagedInstanceBackupsClientListByResourceGroupDatabaseOptions{OnlyLatestPerDatabase: nil,
      			DatabaseState: nil,
      		})
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Lists all long term retention backups for a managed database.
       *
       * @summary Lists all long term retention backups for a managed database.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2021-05-01-preview/examples/ResourceGroupBasedManagedInstanceLongTermRetentionBackupListByDatabase.json
       */
      async function getAllLongTermRetentionBackupsUnderTheDatabase() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "testResourceGroup";
        const locationName = "japaneast";
        const managedInstanceName = "testInstance";
        const databaseName = "testDatabase";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.longTermRetentionManagedInstanceBackups.listByResourceGroupDatabase(
          resourceGroupName,
          locationName,
          managedInstanceName,
          databaseName
        )) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      getAllLongTermRetentionBackupsUnderTheDatabase().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testResourceGroup/providers/Microsoft.Sql/Locations/japaneast/longTermRetentionManagedInstances/testInstance/longTermRetentionDatabases/testDatabase/longTermRetentionManagedInstanceBackups/2018-06-01T08:00:00.000Z;55555555-6666-7777-8888-999999999999;2018-08-23T08:00:00.000Z",
            "name": "2018-06-01T08:00:00.000Z;55555555-6666-7777-8888-999999999999;2018-08-23T08:00:00.000Z",
            "type": "Microsoft.Sql/locations/longTermRetentionManagedInstances/longTermRetentionDatabases/longTermRetentionManagedInstanceBackups",
            "properties": {
              "managedInstanceName": "testInstance",
              "managedInstanceCreateTime": "2017-03-10T08:00:00Z",
              "databaseName": "testDatabase",
              "databaseDeletionTime": null,
              "backupTime": "2018-08-23T08:00:00Z",
              "backupStorageRedundancy": "Geo"
            }
          },
          {
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testResourceGroup/providers/Microsoft.Sql/Locations/japaneast/longTermRetentionManagedInstances/testInstance/longTermRetentionDatabases/testDatabase/longTermRetentionManagedInstanceBackups/2018-06-01T08:00:00.000Z;55555555-6666-7777-8888-999999999999;2018-08-30T08:00:00.000Z",
            "name": "2018-06-01T08:00:00.000Z;55555555-6666-7777-8888-999999999999;2018-08-30T08:00:00.000Z",
            "type": "Microsoft.Sql/locations/longTermRetentionManagedInstances/longTermRetentionDatabases/longTermRetentionManagedInstanceBackups",
            "properties": {
              "managedInstanceName": "testInstance",
              "managedInstanceCreateTime": "2017-03-10T08:00:00Z",
              "databaseName": "testDatabase",
              "databaseDeletionTime": null,
              "backupTime": "2018-08-30T08:00:00Z",
              "backupStorageRedundancy": "Geo"
            }
          },
          {
            "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testResourceGroup/providers/Microsoft.Sql/Locations/japaneast/longTermRetentionManagedInstances/testInstance/longTermRetentionDatabases/testDatabase/longTermRetentionManagedInstanceBackups/2018-06-01T08:00:00.000Z;55555555-6666-7777-8888-999999999999;2018-09-06T08:00:00.000Z",
            "name": "2018-06-01T08:00:00.000Z;55555555-6666-7777-8888-999999999999;2018-09-06T08:00:00.000Z",
            "type": "Microsoft.Sql/locations/longTermRetentionManagedInstances/longTermRetentionDatabases/longTermRetentionManagedInstanceBackups",
            "properties": {
              "managedInstanceName": "testInstance",
              "managedInstanceCreateTime": "2018-03-10T08:00:00Z",
              "databaseName": "testDatabase",
              "databaseDeletionTime": "2018-09-07T08:00:00Z",
              "backupTime": "2018-09-06T08:00:00Z",
              "backupStorageRedundancy": "Geo"
            }
          }
        ]
      }
security: []
metadata:
  description: Learn more about SQL Database service - Lists all long term retention backups for a managed database.
errorCodes: []
