### YamlMime:RESTOperation
uid: management.azure.com.sql.2021-05-01-preview.longtermretentionbackups.deletebyresourcegroup
name: Delete By Resource Group
service: SQL Database
groupName: Long Term Retention Backups
apiVersion: 2021-05-01-preview
summary: Deletes a long term retention backup.
consumes:
- application/json
produces:
- application/json
paths:
- content: DELETE https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}?api-version=2021-05-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: locationName
  in: path
  isRequired: true
  description: The location of the database
  types:
  - uid: string
- name: longTermRetentionServerName
  in: path
  isRequired: true
  description: The name of the server
  types:
  - uid: string
- name: longTermRetentionDatabaseName
  in: path
  isRequired: true
  description: The name of the database
  types:
  - uid: string
- name: backupName
  in: path
  isRequired: true
  description: The backup name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully deleted the backup.
- name: Other Status Codes
  description: >-
    *** Error Responses: ***

     * 400 InvalidLongTermRetentionBackupId - Invalid long term retention backup identifier for SQL DBs.

     * 400 InvalidParameterValue - An invalid value was given to a parameter.

     * 400 LongTermRetentionMismatchingSubscriptionId - The provided subscription id did not match the id in the other input

     * 400 LongTermRetentionMismatchingResourceGroupName - The provided resource group name did not match the name in the other input

     * 400 LongTermRetentionMismatchingServerName - The provided server name did not match the name in the other input

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.

     * 404 SubscriptionDoesNotHaveServer - The requested server was not found

     * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.
- name: 202 Accepted
  description: Accepted
requestHeader: []
definitions: []
examples:
- name: Delete the long term retention backup.
  request:
    uri: DELETE https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testResourceGroup/providers/Microsoft.Sql/locations/japaneast/longTermRetentionServers/testserver/longTermRetentionDatabases/testDatabase/longTermRetentionBackups/55555555-6666-7777-8888-999999999999;131637960820000000?api-version=2021-05-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      DELETE https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testResourceGroup/providers/Microsoft.Sql/locations/japaneast/longTermRetentionServers/testserver/longTermRetentionDatabases/testDatabase/longTermRetentionBackups/55555555-6666-7777-8888-999999999999;131637960820000000?api-version=2021-05-01-preview
      ```

      # [Go](#tab/Go)
      ``` go
      package armsql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/sql/armsql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/sql/resource-manager/Microsoft.Sql/preview/2021-05-01-preview/examples/ResourceGroupBasedLongTermRetentionBackupDelete.json
      func ExampleLongTermRetentionBackupsClient_BeginDeleteByResourceGroup() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armsql.NewLongTermRetentionBackupsClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginDeleteByResourceGroup(ctx,
      		"testResourceGroup",
      		"japaneast",
      		"testserver",
      		"testDatabase",
      		"55555555-6666-7777-8888-999999999999;131637960820000000",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	_, err = poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fsql%2Farmsql%2Fv1.0.0/sdk/resourcemanager/sql/armsql/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { SqlManagementClient } = require("@azure/arm-sql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Deletes a long term retention backup.
       *
       * @summary Deletes a long term retention backup.
       * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2021-05-01-preview/examples/ResourceGroupBasedLongTermRetentionBackupDelete.json
       */
      async function deleteTheLongTermRetentionBackup() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "testResourceGroup";
        const locationName = "japaneast";
        const longTermRetentionServerName = "testserver";
        const longTermRetentionDatabaseName = "testDatabase";
        const backupName = "55555555-6666-7777-8888-999999999999;131637960820000000";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = await client.longTermRetentionBackups.beginDeleteByResourceGroupAndWait(
          resourceGroupName,
          locationName,
          longTermRetentionServerName,
          longTermRetentionDatabaseName,
          backupName
        );
        console.log(result);
      }

      deleteTheLongTermRetentionBackup().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-sql_9.0.1/sdk/sql/arm-sql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
  - statusCode: "202"
security: []
metadata:
  description: Learn more about SQL Database service - Deletes a long term retention backup.
errorCodes: []
