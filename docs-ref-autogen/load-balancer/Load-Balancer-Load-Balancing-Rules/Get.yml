### YamlMime:RESTOperation
uid: management.azure.com.load-balancer.loadbalancerloadbalancingrules.get
name: Get
service: Load balancer
groupName: Load Balancer Load Balancing Rules
apiVersion: 2022-01-01
summary: Gets the specified load balancer load balancing rule.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/loadBalancingRules/{loadBalancingRuleName}?api-version=2022-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: loadBalancerName
  in: path
  isRequired: true
  description: The name of the load balancer.
  types:
  - uid: string
- name: loadBalancingRuleName
  in: path
  isRequired: true
  description: The name of the load balancing rule.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Request successful. The operation returns the resulting LoadBalancingRule resource.
  types:
  - uid: LoadBalancingRule
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: LoadBalancingRule
  description: A load balancing rule for a load balancer.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Type of the resource.
    types:
    - uid: string
  - name: properties.frontendIPConfiguration
    description: A reference to frontend IP addresses.
    types:
    - uid: SubResource
  - name: properties.backendAddressPool
    description: A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
    types:
    - uid: SubResource
  - name: properties.backendAddressPools
    description: An array of references to pool of DIPs.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.probe
    description: The reference to the load balancer probe used by the load balancing rule.
    types:
    - uid: SubResource
  - name: properties.protocol
    description: The reference to the transport protocol used by the load balancing rule.
    types:
    - uid: TransportProtocol
  - name: properties.loadDistribution
    description: The load distribution policy for this rule.
    types:
    - uid: LoadDistribution
  - name: properties.frontendPort
    description: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
    types:
    - uid: integer
  - name: properties.backendPort
    description: The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
    types:
    - uid: integer
  - name: properties.idleTimeoutInMinutes
    description: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
    types:
    - uid: integer
  - name: properties.enableFloatingIP
    description: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
    types:
    - uid: boolean
  - name: properties.enableTcpReset
    description: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
    types:
    - uid: boolean
  - name: properties.disableOutboundSnat
    description: Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
    types:
    - uid: boolean
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the load balancing rule resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: TransportProtocol
  description: The transport protocol for the endpoint.
  kind: enum
  properties:
  - name: Udp
    types:
    - uid: string
  - name: Tcp
    types:
    - uid: string
  - name: All
    types:
    - uid: string
- name: LoadDistribution
  description: The load distribution policy for this rule.
  kind: enum
  properties:
  - name: Default
    types:
    - uid: string
  - name: SourceIP
    types:
    - uid: string
  - name: SourceIPProtocol
    types:
    - uid: string
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: LoadBalancerLoadBalancingRuleGet
  request:
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/loadBalancingRules/rule1?api-version=2022-01-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/loadBalancingRules/rule1?api-version=2022-01-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for LoadBalancerLoadBalancingRules Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/LoadBalancerLoadBalancingRuleGet.json
           */
          /**
           * Sample code: LoadBalancerLoadBalancingRuleGet.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void loadBalancerLoadBalancingRuleGet(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getLoadBalancerLoadBalancingRules()
                  .getWithResponse("testrg", "lb1", "rule1", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/LoadBalancerLoadBalancingRuleGet.json
      func ExampleLoadBalancerLoadBalancingRulesClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewLoadBalancerLoadBalancingRulesClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx, "testrg", "lb1", "rule1", nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.1.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets the specified load balancer load balancing rule.
       *
       * @summary Gets the specified load balancer load balancing rule.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/LoadBalancerLoadBalancingRuleGet.json
       */
      async function loadBalancerLoadBalancingRuleGet() {
        const subscriptionId = "subid";
        const resourceGroupName = "testrg";
        const loadBalancerName = "lb1";
        const loadBalancingRuleName = "rule1";
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.loadBalancerLoadBalancingRules.get(
          resourceGroupName,
          loadBalancerName,
          loadBalancingRuleName
        );
        console.log(result);
      }

      loadBalancerLoadBalancingRuleGet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_29.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "rule1",
        "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/loadBalancingRules/rule1",
        "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
        "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
        "properties": {
          "provisioningState": "Succeeded",
          "frontendIPConfiguration": {
            "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/lbfrontend"
          },
          "frontendPort": 80,
          "backendPort": 80,
          "enableFloatingIP": false,
          "idleTimeoutInMinutes": 15,
          "protocol": "Tcp",
          "enableTcpReset": true,
          "loadDistribution": "Default",
          "backendAddressPool": {
            "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/backendAddressPools/bepool1"
          },
          "probe": {
            "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/probes/probe1"
          }
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Load balancer service - Gets the specified load balancer load balancing rule.
errorCodes: []
