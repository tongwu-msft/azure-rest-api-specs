### YamlMime:RESTOperation
uid: management.azure.com.load-balancer.loadbalancers.swappublicipaddresses
name: Swap Public Ip Addresses
service: Load balancer
groupName: Load Balancers
apiVersion: 2021-08-01
summary: Swaps VIPs between two load balancers.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/setLoadBalancerFrontendPublicIpAddresses?api-version=2021-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: location
  in: path
  isRequired: true
  description: The region where load balancers are located at.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Request successful.
- name: 202 Accepted
  description: Accepted and the operation will complete asynchronously.
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: frontendIPConfigurations
    in: body
    description: A list of frontend IP configuration resources that should swap VIPs.
    types:
    - uid: LoadBalancerVipSwapRequestFrontendIPConfiguration
      isArray: true
requestHeader: []
definitions:
- name: LoadBalancerVipSwapRequestFrontendIPConfiguration
  description: VIP swap request's frontend IP configuration object.
  kind: object
  properties:
  - name: id
    description: The ID of frontend IP configuration resource.
    types:
    - uid: string
  - name: properties.publicIPAddress
    description: A reference to public IP address resource.
    types:
    - uid: SubResource
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: LoadBalancerVipSwapRequest
  description: The request for a VIP swap.
  kind: object
  properties:
  - name: frontendIPConfigurations
    description: A list of frontend IP configuration resources that should swap VIPs.
    types:
    - uid: LoadBalancerVipSwapRequestFrontendIPConfiguration
      isArray: true
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: Swap VIPs between two load balancers.
  request:
    uri: POST https://management.azure.com/subscriptions/subid/providers/Microsoft.Network/locations/westus/setLoadBalancerFrontendPublicIpAddresses?api-version=2021-08-01
    body: >-
      {
        "frontendIPConfigurations": [
          {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/lbfe1",
            "properties": {
              "publicIPAddress": {
                "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/publicIPAddresses/pip2"
              }
            }
          },
          {
            "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/loadBalancers/lb2/frontendIPConfigurations/lbfe2",
            "properties": {
              "publicIPAddress": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/pip1"
              }
            }
          }
        ]
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/providers/Microsoft.Network/locations/westus/setLoadBalancerFrontendPublicIpAddresses?api-version=2021-08-01

      {
        "frontendIPConfigurations": [
          {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/lbfe1",
            "properties": {
              "publicIPAddress": {
                "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/publicIPAddresses/pip2"
              }
            }
          },
          {
            "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/loadBalancers/lb2/frontendIPConfigurations/lbfe2",
            "properties": {
              "publicIPAddress": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/pip1"
              }
            }
          }
        ]
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.models.LoadBalancerVipSwapRequest;
      import com.azure.resourcemanager.network.models.LoadBalancerVipSwapRequestFrontendIpConfiguration;
      import java.util.Arrays;

      /** Samples for LoadBalancers SwapPublicIpAddresses. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/LoadBalancersSwapPublicIpAddresses.json
           */
          /**
           * Sample code: Swap VIPs between two load balancers.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void swapVIPsBetweenTwoLoadBalancers(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getLoadBalancers()
                  .swapPublicIpAddresses(
                      "westus",
                      new LoadBalancerVipSwapRequest()
                          .withFrontendIpConfigurations(
                              Arrays
                                  .asList(
                                      new LoadBalancerVipSwapRequestFrontendIpConfiguration()
                                          .withId(
                                              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/lbfe1")
                                          .withPublicIpAddress(
                                              new SubResource()
                                                  .withId(
                                                      "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/publicIPAddresses/pip2")),
                                      new LoadBalancerVipSwapRequestFrontendIpConfiguration()
                                          .withId(
                                              "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/loadBalancers/lb2/frontendIPConfigurations/lbfe2")
                                          .withPublicIpAddress(
                                              new SubResource()
                                                  .withId(
                                                      "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/pip1")))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Swaps VIPs between two load balancers.
       *
       * @summary Swaps VIPs between two load balancers.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/LoadBalancersSwapPublicIpAddresses.json
       */
      async function swapViPsBetweenTwoLoadBalancers() {
        const subscriptionId = "subid";
        const location = "westus";
        const parameters = {
          frontendIPConfigurations: [
            {
              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/lbfe1",
              publicIPAddress: {
                id: "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/publicIPAddresses/pip2",
              },
            },
            {
              id: "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/loadBalancers/lb2/frontendIPConfigurations/lbfe2",
              publicIPAddress: {
                id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/pip1",
              },
            },
          ],
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.loadBalancers.beginSwapPublicIpAddressesAndWait(location, parameters);
        console.log(result);
      }

      swapViPsBetweenTwoLoadBalancers().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_28.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Load balancer service - Swaps VIPs between two load balancers.
errorCodes: []
