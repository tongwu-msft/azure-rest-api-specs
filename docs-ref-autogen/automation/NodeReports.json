{
  "swagger": "2.0",
  "info": {
    "version": "2015-10-31",
    "title": "AutomationManagement"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {},
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      },
      "description": "Error response of an operation failure"
    },
    "DscMetaConfiguration": {
      "properties": {
        "configurationModeFrequencyMins": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the ConfigurationModeFrequencyMins value of the meta configuration."
        },
        "rebootNodeIfNeeded": {
          "type": "boolean",
          "description": "Gets or sets the RebootNodeIfNeeded value of the meta configuration."
        },
        "configurationMode": {
          "type": "string",
          "description": "Gets or sets the ConfigurationMode value of the meta configuration."
        },
        "actionAfterReboot": {
          "type": "string",
          "description": "Gets or sets the ActionAfterReboot value of the meta configuration."
        },
        "certificateId": {
          "type": "string",
          "description": "Gets or sets the CertificateId value of the meta configuration."
        },
        "refreshFrequencyMins": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the RefreshFrequencyMins value of the meta configuration."
        },
        "allowModuleOverwrite": {
          "type": "boolean",
          "description": "Gets or sets the AllowModuleOverwrite value of the meta configuration."
        }
      },
      "description": "Definition of the DSC Meta Configuration."
    },
    "DscReportResourceNavigation": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Gets or sets the ID of the resource to navigate to."
        }
      },
      "description": "Navigation for DSC Report Resource."
    },
    "DscReportResource": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Gets or sets the ID of the resource."
        },
        "sourceInfo": {
          "type": "string",
          "description": "Gets or sets the source info of the resource."
        },
        "dependsOn": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DscReportResourceNavigation"
          },
          "description": "Gets or sets the Resource Navigation values for resources the resource depends on."
        },
        "moduleName": {
          "type": "string",
          "description": "Gets or sets the module name of the resource."
        },
        "moduleVersion": {
          "type": "string",
          "description": "Gets or sets the module version of the resource."
        },
        "resourceName": {
          "type": "string",
          "description": "Gets or sets the name of the resource."
        },
        "error": {
          "type": "string",
          "description": "Gets or sets the error of the resource."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the status of the resource."
        },
        "durationInSeconds": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the duration in seconds for the resource."
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the start date of the resource."
        }
      },
      "description": "Definition of the DSC Report Resource."
    },
    "DscReportError": {
      "properties": {
        "errorSource": {
          "type": "string",
          "description": "Gets or sets the source of the error."
        },
        "resourceId": {
          "type": "string",
          "description": "Gets or sets the resource ID which generated the error."
        },
        "errorCode": {
          "type": "string",
          "description": "Gets or sets the error code."
        },
        "errorMessage": {
          "type": "string",
          "description": "Gets or sets the error message."
        },
        "locale": {
          "type": "string",
          "description": "Gets or sets the locale of the error."
        },
        "errorDetails": {
          "type": "string",
          "description": "Gets or sets the error details."
        }
      },
      "description": "Definition of the dsc node report error type."
    },
    "DscNodeReport": {
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the end time of the node report."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the lastModifiedTime of the node report."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the start time of the node report."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the node report."
        },
        "reportId": {
          "type": "string",
          "description": "Gets or sets the id of the node report."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the status of the node report."
        },
        "refreshMode": {
          "type": "string",
          "description": "Gets or sets the refreshMode of the node report."
        },
        "rebootRequested": {
          "type": "string",
          "description": "Gets or sets the rebootRequested of the node report."
        },
        "reportFormatVersion": {
          "type": "string",
          "description": "Gets or sets the reportFormatVersion of the node report."
        },
        "configurationVersion": {
          "type": "string",
          "description": "Gets or sets the configurationVersion of the node report."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the id."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DscReportError"
          },
          "description": "Gets or sets the errors for the node report."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DscReportResource"
          },
          "description": "Gets or sets the resource for the node report."
        },
        "metaConfiguration": {
          "$ref": "#/definitions/DscMetaConfiguration",
          "description": "Gets or sets the metaConfiguration of the node at the time of the report."
        },
        "hostName": {
          "type": "string",
          "description": "Gets or sets the hostname of the node that sent the report."
        },
        "iPV4Addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the IPv4 address of the node that sent the report."
        },
        "iPV6Addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the IPv6 address of the node that sent the report."
        },
        "numberOfResources": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of resource in the node report."
        },
        "rawErrors": {
          "type": "string",
          "description": "Gets or sets the unparsed errors for the node report."
        }
      },
      "description": "Definition of the dsc node report type."
    },
    "DscNodeReportListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DscNodeReport"
          },
          "description": "Gets or sets a list of dsc node reports."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the next link."
        }
      },
      "description": "The response model for the list dsc nodes operation."
    },
    "RunbookParameter": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the parameter."
        },
        "isMandatory": {
          "type": "boolean",
          "description": "Gets or sets a Boolean value to indicate whether the parameter is madatory or not."
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "Get or sets the position of the parameter."
        },
        "defaultValue": {
          "type": "string",
          "description": "Gets or sets the default value of parameter."
        }
      },
      "description": "Definition of the runbook parameter type."
    },
    "ContentHash": {
      "properties": {
        "algorithm": {
          "type": "string",
          "description": "Gets or sets the content hash algorithm used to hash the content."
        },
        "value": {
          "type": "string",
          "description": "Gets or sets expected hash value of the content."
        }
      },
      "required": [
        "algorithm",
        "value"
      ],
      "description": "Definition of the runbook property type."
    },
    "ContentLink": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "Gets or sets the uri of the runbook content."
        },
        "contentHash": {
          "$ref": "#/definitions/ContentHash",
          "description": "Gets or sets the hash."
        },
        "version": {
          "type": "string",
          "description": "Gets or sets the version of the content."
        }
      },
      "description": "Definition of the content link."
    },
    "RunbookDraft": {
      "properties": {
        "inEdit": {
          "type": "boolean",
          "description": "Gets or sets whether runbook is in edit mode."
        },
        "draftContentLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets or sets the draft runbook content link."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the creation time of the runbook draft."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last modified time of the runbook draft."
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/RunbookParameter"
          },
          "description": "Gets or sets the runbook draft parameters."
        },
        "outputTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the runbook output types."
        }
      },
      "description": "Definition of the runbook type."
    },
    "RunbookProperties": {
      "properties": {
        "runbookType": {
          "type": "string",
          "description": "Gets or sets the type of the runbook.",
          "enum": [
            "Script",
            "Graph",
            "PowerShellWorkflow",
            "PowerShell",
            "GraphPowerShellWorkflow",
            "GraphPowerShell"
          ],
          "x-ms-enum": {
            "name": "RunbookTypeEnum",
            "modelAsString": true
          }
        },
        "publishContentLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets or sets the published runbook content link."
        },
        "state": {
          "type": "string",
          "description": "Gets or sets the state of the runbook.",
          "enum": [
            "New",
            "Edit",
            "Published"
          ],
          "x-ms-enum": {
            "name": "RunbookState",
            "modelAsString": true
          }
        },
        "logVerbose": {
          "type": "boolean",
          "description": "Gets or sets verbose log option."
        },
        "logProgress": {
          "type": "boolean",
          "description": "Gets or sets progress log option."
        },
        "logActivityTrace": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the option to log activity trace of the runbook."
        },
        "jobCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the job count of the runbook."
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/RunbookParameter"
          },
          "description": "Gets or sets the runbook parameters."
        },
        "outputTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the runbook output types."
        },
        "draft": {
          "$ref": "#/definitions/RunbookDraft",
          "description": "Gets or sets the draft runbook properties."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets or sets the provisioning state of the runbook.",
          "enum": [
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "RunbookProvisioningState",
            "modelAsString": false
          }
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "Gets or sets the last modified by."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the creation time."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last modified time."
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the description."
        }
      },
      "description": "Definition of the runbook property type."
    },
    "Runbook": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/RunbookProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the runbook properties."
        },
        "etag": {
          "type": "string",
          "description": "Gets or sets the etag of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Definition of the runbook type."
    },
    "ModuleErrorInfo": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets or sets the error code."
        },
        "message": {
          "type": "string",
          "description": "Gets or sets the error message."
        }
      },
      "description": "Definition of the module error info type."
    },
    "ModuleProperties": {
      "properties": {
        "isGlobal": {
          "type": "boolean",
          "description": "Gets or sets the isGlobal flag of the module."
        },
        "version": {
          "type": "string",
          "description": "Gets or sets the version of the module."
        },
        "sizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the size in bytes of the module."
        },
        "activityCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the activity count of the module."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets or sets the provisioning state of the module.",
          "enum": [
            "Created",
            "Creating",
            "StartingImportModuleRunbook",
            "RunningImportModuleRunbook",
            "ContentRetrieved",
            "ContentDownloaded",
            "ContentValidated",
            "ConnectionTypeImported",
            "ContentStored",
            "ModuleDataStored",
            "ActivitiesStored",
            "ModuleImportRunbookComplete",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ModuleProvisioningState",
            "modelAsString": false
          }
        },
        "contentLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets or sets the contentLink of the module."
        },
        "error": {
          "$ref": "#/definitions/ModuleErrorInfo",
          "description": "Gets or sets the error info of the module."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the creation time."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last modified time."
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the description."
        }
      },
      "description": "Definition of the module property type."
    },
    "Module": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ModuleProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the module properties."
        },
        "etag": {
          "type": "string",
          "description": "Gets or sets the etag of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Definition of the module type."
    },
    "DscNodeConfigurationAssociationProperty": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the dsc nodeconfiguration."
        }
      },
      "description": "The dsc nodeconfiguration property associated with the entity."
    },
    "DscNode": {
      "properties": {
        "lastSeen": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last seen time of the node."
        },
        "registrationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the registration time of the node."
        },
        "ip": {
          "type": "string",
          "description": "Gets or sets the ip of the node."
        },
        "accountId": {
          "type": "string",
          "description": "Gets or sets the account id of the node."
        },
        "nodeConfiguration": {
          "$ref": "#/definitions/DscNodeConfigurationAssociationProperty",
          "description": "Gets or sets the configuration of the node."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the status of the node."
        },
        "nodeId": {
          "type": "string",
          "description": "Gets or sets the node id."
        },
        "etag": {
          "type": "string",
          "description": "Gets or sets the etag of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Definition of the dsc node type."
    },
    "ContentSource": {
      "properties": {
        "hash": {
          "$ref": "#/definitions/ContentHash",
          "description": "Gets or sets the hash."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the content source type.",
          "enum": [
            "embeddedContent",
            "uri"
          ],
          "x-ms-enum": {
            "name": "ContentSourceType",
            "modelAsString": true
          }
        },
        "value": {
          "type": "string",
          "description": "Gets or sets the value of the content. This is based on the content source type."
        },
        "version": {
          "type": "string",
          "description": "Gets or sets the version of the content."
        }
      },
      "description": "Definition of the content source."
    },
    "DscConfigurationParameter": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the parameter."
        },
        "isMandatory": {
          "type": "boolean",
          "description": "Gets or sets a Boolean value to indicate whether the parameter is madatory or not."
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "Get or sets the position of the parameter."
        },
        "defaultValue": {
          "type": "string",
          "description": "Gets or sets the default value of parameter."
        }
      },
      "description": "Definition of the configuration parameter type."
    },
    "DscConfigurationProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Gets or sets the provisioning state of the configuration.",
          "enum": [
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "DscConfigurationProvisioningState",
            "modelAsString": false
          }
        },
        "jobCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the job count of the configuration."
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DscConfigurationParameter"
          },
          "description": "Gets or sets the configuration parameters."
        },
        "source": {
          "$ref": "#/definitions/ContentSource",
          "description": "Gets or sets the source."
        },
        "state": {
          "type": "string",
          "description": "Gets or sets the state of the configuration.",
          "enum": [
            "New",
            "Edit",
            "Published"
          ],
          "x-ms-enum": {
            "name": "DscConfigurationState",
            "modelAsString": true
          }
        },
        "logVerbose": {
          "type": "boolean",
          "description": "Gets or sets verbose log option."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the creation time."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last modified time."
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the description."
        }
      },
      "description": "Definition of the configuration property type."
    },
    "DscConfiguration": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DscConfigurationProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the configuration properties."
        },
        "etag": {
          "type": "string",
          "description": "Gets or sets the etag of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Definition of the configuration type."
    },
    "Sku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the SKU name of the account.",
          "enum": [
            "Free",
            "Basic"
          ],
          "x-ms-enum": {
            "name": "SkuNameEnum",
            "modelAsString": true
          }
        },
        "family": {
          "type": "string",
          "description": "Gets or sets the SKU family."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the SKU capacity."
        }
      },
      "required": [
        "name"
      ],
      "description": "The account SKU."
    },
    "AutomationAccountProperties": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Gets or sets the SKU of account."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "Gets or sets the last modified by."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "Gets status of account.",
          "enum": [
            "Ok",
            "Unavailable",
            "Suspended"
          ],
          "x-ms-enum": {
            "name": "AutomationAccountState",
            "modelAsString": true
          }
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the creation time."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the last modified time."
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the description."
        }
      },
      "description": "Definition of the account property."
    },
    "AutomationAccount": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/AutomationAccountProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the automation account properties."
        },
        "etag": {
          "type": "string",
          "description": "Gets or sets the etag of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Definition of the automation account type."
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "description": "The Resource definition.",
      "x-ms-azure-resource": true
    },
    "DscNodeListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DscNode"
          },
          "description": "Gets or sets a list of dsc nodes."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the next link."
        }
      },
      "description": "The response model for the list dsc nodes operation."
    },
    "DscNodeUpdateParameters": {
      "properties": {
        "nodeId": {
          "type": "string",
          "description": "Gets or sets the id of the dsc node."
        },
        "nodeConfiguration": {
          "$ref": "#/definitions/DscNodeConfigurationAssociationProperty",
          "description": "Gets or sets the configuration of the node."
        }
      },
      "description": "The parameters supplied to the update dsc node operation."
    },
    "AgentRegistrationKeys": {
      "properties": {
        "primary": {
          "type": "string",
          "description": "Gets or sets the primary key."
        },
        "secondary": {
          "type": "string",
          "description": "Gets or sets the secondary key."
        }
      },
      "description": "Definition of the agent registration keys."
    },
    "AgentRegistration": {
      "properties": {
        "dscMetaConfiguration": {
          "type": "string",
          "description": "Gets or sets the dsc meta configuration."
        },
        "endpoint": {
          "type": "string",
          "description": "Gets or sets the dsc server endpoint."
        },
        "keys": {
          "$ref": "#/definitions/AgentRegistrationKeys",
          "description": "Gets or sets the agent registration keys."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the id."
        }
      },
      "description": "Definition of the agent registration infomration type."
    },
    "AgentRegistrationRegenerateKeyParameter": {
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Gets or sets the agent registration key name - Primary or Secondary.",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "x-ms-enum": {
            "name": "AgentRegistrationKeyName",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the resource."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the location of the resource."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets the tags attached to the resource."
        }
      },
      "required": [
        "keyName"
      ],
      "description": "The parameters supplied to the regenerate keys operation."
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "description": "The resource group name.",
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-name": "Automation",
  "x-internal-toc-name": "Node Reports",
  "x-internal-split-members": [
    {
      "displayName": "Get",
      "relativePath": "NodeReports/Get"
    },
    {
      "displayName": "Get Content",
      "relativePath": "NodeReports/GetContent"
    },
    {
      "displayName": "List By Node",
      "relativePath": "NodeReports/ListByNode"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}