### YamlMime:RESTOperation
uid: management.azure.com.automation.dscconfiguration.createorupdate
name: Create Or Update
service: Automation
groupName: Dsc Configuration
apiVersion: 2015-10-31
summary: Create the configuration identified by configuration name.
consumes:
- application/json
- text/plain; charset=utf-8
produces:
- application/json
- text/plain; charset=utf-8
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/configurations/{configurationName}?api-version=2015-10-31
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of an Azure Resource group.
  types:
  - uid: string
  pattern: ^[-\w\._]+$
- name: automationAccountName
  in: path
  isRequired: true
  description: The name of the automation account.
  types:
  - uid: string
- name: configurationName
  in: path
  isRequired: true
  description: The create or update parameters for configuration.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: DscConfiguration
- name: 201 Created
  description: Created
  types:
  - uid: DscConfiguration
- name: Other Status Codes
  description: Automation error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    description: Gets or sets name of the resource.
    types:
    - uid: string
  - name: location
    in: body
    description: Gets or sets the location of the resource.
    types:
    - uid: string
  - name: tags
    in: body
    description: Gets or sets the tags attached to the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.logVerbose
    in: body
    description: Gets or sets verbose log option.
    types:
    - uid: boolean
  - name: properties.logProgress
    in: body
    description: Gets or sets progress log option.
    types:
    - uid: boolean
  - name: properties.source
    in: body
    isRequired: true
    description: Gets or sets the source.
    types:
    - uid: ContentSource
  - name: properties.parameters
    in: body
    description: Gets or sets the configuration parameters.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: DscConfigurationParameter
  - name: properties.description
    in: body
    description: Gets or sets the description of the configuration.
    types:
    - uid: string
requestHeader: []
definitions:
- name: ContentSource
  description: Definition of the content source.
  kind: object
  properties:
  - name: hash
    description: Gets or sets the hash.
    types:
    - uid: ContentHash
  - name: type
    description: Gets or sets the content source type.
    types:
    - uid: ContentSourceType
  - name: value
    description: Gets or sets the value of the content. This is based on the content source type.
    types:
    - uid: string
  - name: version
    description: Gets or sets the version of the content.
    types:
    - uid: string
- name: DscConfigurationParameter
  description: Definition of the configuration parameter type.
  kind: object
  properties:
  - name: type
    description: Gets or sets the type of the parameter.
    types:
    - uid: string
  - name: isMandatory
    description: Gets or sets a Boolean value to indicate whether the parameter is madatory or not.
    types:
    - uid: boolean
  - name: position
    description: Get or sets the position of the parameter.
    types:
    - uid: integer
  - name: defaultValue
    description: Gets or sets the default value of parameter.
    types:
    - uid: string
- name: DscConfiguration
  description: Definition of the configuration type.
  kind: object
  properties:
  - name: etag
    description: Gets or sets the etag of the resource.
    types:
    - uid: string
  - name: properties.provisioningState
    description: Gets or sets the provisioning state of the configuration.
    types:
    - uid: DscConfigurationProvisioningState
  - name: properties.jobCount
    description: Gets or sets the job count of the configuration.
    types:
    - uid: integer
  - name: properties.parameters
    description: Gets or sets the configuration parameters.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: DscConfigurationParameter
  - name: properties.source
    description: Gets or sets the source.
    types:
    - uid: ContentSource
  - name: properties.state
    description: Gets or sets the state of the configuration.
    types:
    - uid: DscConfigurationState
  - name: properties.logVerbose
    description: Gets or sets verbose log option.
    types:
    - uid: boolean
  - name: properties.creationTime
    description: Gets or sets the creation time.
    types:
    - uid: string
  - name: properties.lastModifiedTime
    description: Gets or sets the last modified time.
    types:
    - uid: string
  - name: properties.nodeConfigurationCount
    description: Gets the number of compiled node configurations.
    types:
    - uid: integer
  - name: properties.description
    description: Gets or sets the description.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    description: The Azure Region where the resource lives
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource Id for the resource
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
- name: ErrorResponse
  description: Error response of an operation failure
  kind: object
  properties:
  - name: code
    description: Error code
    types:
    - uid: string
  - name: message
    description: Error message indicating why the operation failed.
    types:
    - uid: string
- name: DscConfigurationCreateOrUpdateParameters
  description: The parameters supplied to the create or update configuration operation.
  kind: object
  properties:
  - name: name
    description: Gets or sets name of the resource.
    types:
    - uid: string
  - name: location
    description: Gets or sets the location of the resource.
    types:
    - uid: string
  - name: tags
    description: Gets or sets the tags attached to the resource.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.logVerbose
    description: Gets or sets verbose log option.
    types:
    - uid: boolean
  - name: properties.logProgress
    description: Gets or sets progress log option.
    types:
    - uid: boolean
  - name: properties.source
    description: Gets or sets the source.
    types:
    - uid: ContentSource
  - name: properties.parameters
    description: Gets or sets the configuration parameters.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: DscConfigurationParameter
  - name: properties.description
    description: Gets or sets the description of the configuration.
    types:
    - uid: string
- name: ContentHash
  description: Definition of the runbook property type.
  kind: object
  properties:
  - name: algorithm
    description: Gets or sets the content hash algorithm used to hash the content.
    types:
    - uid: string
  - name: value
    description: Gets or sets expected hash value of the content.
    types:
    - uid: string
- name: ContentSourceType
  description: Gets or sets the content source type.
  kind: enum
  properties:
  - name: embeddedContent
    types:
    - uid: string
  - name: uri
    types:
    - uid: string
- name: DscConfigurationProvisioningState
  description: Gets or sets the provisioning state of the configuration.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
- name: DscConfigurationState
  description: Gets or sets the state of the configuration.
  kind: enum
  properties:
  - name: New
    types:
    - uid: string
  - name: Edit
    types:
    - uid: string
  - name: Published
    types:
    - uid: string
examples:
- name: Create or Update Configuration
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Automation/automationAccounts/myAutomationAccount18/configurations/SetupServer?api-version=2015-10-31
    body: >-
      {
        "properties": {
          "source": {
            "hash": {
              "algorithm": "sha256",
              "value": "A9E5DB56BA21513F61E0B3868816FDC6D4DF5131F5617D7FF0D769674BD5072F"
            },
            "type": "embeddedContent",
            "value": "Configuration SetupServer {\r\n    Node localhost {\r\n                               WindowsFeature IIS {\r\n                               Name = \"Web-Server\";\r\n            Ensure = \"Present\"\r\n        }\r\n    }\r\n}"
          },
          "description": "sample configuration"
        },
        "name": "SetupServer",
        "location": "East US 2"
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Automation/automationAccounts/myAutomationAccount33/configurations/SetupServer",
        "name": "SetupServer",
        "type": "Microsoft.Automation/AutomationAccounts/Configurations",
        "location": "East US 2",
        "tags": {},
        "etag": null,
        "properties": {
          "provisioningState": "Succeeded",
          "jobCount": 0,
          "parameters": {},
          "description": "sample configuration",
          "state": null,
          "creationTime": "0001-01-01T00:00:00+00:00",
          "lastModifiedTime": "0001-01-01T00:00:00+00:00",
          "logVerbose": false
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Automation/automationAccounts/myAutomationAccount33/configurations/SetupServer",
        "name": "SetupServer",
        "type": "Microsoft.Automation/AutomationAccounts/Configurations",
        "location": "East US 2",
        "tags": {},
        "etag": "\"636263396635600000\"",
        "properties": {
          "provisioningState": "Succeeded",
          "jobCount": 0,
          "parameters": {},
          "description": "sample configuration",
          "state": "Published",
          "creationTime": "2017-03-28T23:14:23.56+00:00",
          "lastModifiedTime": "2017-03-28T23:14:23.56+00:00",
          "logVerbose": false
        }
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
