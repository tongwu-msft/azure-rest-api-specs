### YamlMime:RESTOperation
uid: management.azure.com.automation.keys.listbyautomationaccount
name: List By Automation Account
service: Automation
groupName: Keys
apiVersion: 2021-06-22
summary: Retrieve the automation keys for an account.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/listKeys?api-version=2021-06-22
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of an Azure Resource group.
  types:
  - uid: string
  pattern: ^[-\w\._]+$
- name: automationAccountName
  in: path
  isRequired: true
  description: The name of the automation account.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: KeyListResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: KeyListResult
  kind: object
  properties:
  - name: keys
    description: Lists the automation keys.
    types:
    - uid: Key
      isArray: true
- name: ErrorResponse
  description: Error response of an operation failure
  kind: object
  properties:
  - name: code
    description: Error code
    types:
    - uid: string
  - name: message
    description: Error message indicating why the operation failed.
    types:
    - uid: string
- name: Key
  description: Automation key which is used to register a DSC Node
  kind: object
  properties:
  - name: KeyName
    isReadyOnly: true
    description: Automation key name.
    types:
    - uid: AutomationKeyName
  - name: Permissions
    isReadyOnly: true
    description: Automation key permissions.
    types:
    - uid: AutomationKeyPermissions
  - name: Value
    isReadyOnly: true
    description: Value of the Automation Key used for registration.
    types:
    - uid: string
- name: AutomationKeyName
  description: Automation key name.
  kind: enum
  properties:
  - name: Primary
    types:
    - uid: string
  - name: Secondary
    types:
    - uid: string
- name: AutomationKeyPermissions
  description: Automation key permissions.
  kind: enum
  properties:
  - name: Read
    types:
    - uid: string
  - name: Full
    types:
    - uid: string
examples:
- name: Get lists of an automation account
  request:
    uri: POST https://management.azure.com/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Automation/automationAccounts/MyAutomationAccount/listKeys?api-version=2021-06-22
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Automation/automationAccounts/MyAutomationAccount/listKeys?api-version=2021-06-22
      ```

      # [Go](#tab/Go)
      ``` go
      package armautomation_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/automation/armautomation"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/automation/resource-manager/Microsoft.Automation/stable/2021-06-22/examples/listAutomationAccountKeys.json
      func ExampleKeysClient_ListByAutomationAccount() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armautomation.NewKeysClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.ListByAutomationAccount(ctx,
      		"rg",
      		"MyAutomationAccount",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fautomation%2Farmautomation%2Fv0.7.0/sdk/resourcemanager/automation/armautomation/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "keys": [
          {
            "KeyName": "Primary",
            "Permissions": "Full",
            "Value": "**************************************************************"
          },
          {
            "KeyName": "Secondary",
            "Permissions": "Full",
            "Value": "**************************************************************"
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Automation service - Retrieve the automation keys for an account.
errorCodes: []
