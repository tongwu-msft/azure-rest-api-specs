{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "contact": {
      "name": "HDInsight"
    },
    "title": "Kafka Restproxy APIs",
    "description": "This is a Kafka Restproxy Api lists."
  },
  "host": "clustername-kafkarest.azurehdinsight.net",
  "basePath": "/",
  "tags": [
    {
      "name": "v1consumer",
      "description": "Consume records"
    },
    {
      "name": "v1metadata",
      "description": "Get the metadata of topic and partition"
    },
    {
      "name": "v1producer",
      "description": "Produce records"
    },
    {
      "name": "v1status",
      "description": "Get Kafka Restproxy status"
    },
    {
      "name": "v1topics",
      "description": "Manage Kafka topics"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/consumer/topics/{topic}/partitions/{partition}/offsets/{offset}": {
      "get": {
        "tags": [
          "v1consumer"
        ],
        "summary": "Consume records using a simple consumer",
        "description": "Consume records from one partition of a topic beginning with a specific offset. By default count is 1. It can read maximum of 6 megabytes of data at once",
        "operationId": "consumeTopicInPartitionWithOffset",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "topic",
            "in": "path",
            "description": "Topic to consume the records from",
            "required": true,
            "type": "string"
          },
          {
            "name": "partition",
            "in": "path",
            "description": "Partition ID to consume the records from",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "path",
            "description": "Offset to start from",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records to consume (optional). By default count is 1. It returns either count of records or 6 megabytes of data, which is smaller.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConsumeRecord"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "x-internal-toc-name": "consume Topic In Partition With Offset"
      }
    }
  },
  "definitions": {
    "ConsumeRecord": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key for consumer record",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "Value for consumer record",
          "readOnly": true
        },
        "partition": {
          "type": "integer",
          "format": "int32",
          "description": "Partition ID for consumer record",
          "readOnly": true
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Offset for consumer record",
          "readOnly": true
        }
      },
      "description": "List of consumer records"
    },
    "ProducerRecords": {
      "type": "object",
      "properties": {
        "records": {
          "type": "array",
          "description": "List of producer records",
          "items": {
            "$ref": "#/definitions/ProducerRecord"
          }
        }
      },
      "description": "List of producer records to produce in one request"
    },
    "ProducerRecord": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "object",
          "description": "Value for producer record"
        },
        "key": {
          "type": "object",
          "description": "Key for producer record"
        },
        "partition": {
          "type": "integer",
          "format": "int32",
          "description": "Partition ID for producer record"
        }
      },
      "description": "A producer record"
    },
    "BrokerResponse": {
      "type": "object",
      "properties": {
        "brokers": {
          "type": "array",
          "description": "List of Kafka broker endpoints",
          "items": {
            "$ref": "#/definitions/BrokerEndpoint"
          }
        }
      },
      "description": "List of Kafka broker endpoints"
    },
    "PartitionMetadataResponse": {
      "type": "object",
      "properties": {
        "partition_id": {
          "type": "integer",
          "format": "int32",
          "description": "Partition ID"
        },
        "earliest_offset": {
          "type": "integer",
          "format": "int64",
          "description": "Earliest offset for the topic-partition"
        },
        "latest_offset": {
          "type": "integer",
          "format": "int64",
          "description": "Latest offset for the topic-partition"
        },
        "leader": {
          "description": "Leader broker endpoint for the topic-partition",
          "$ref": "#/definitions/BrokerEndpoint"
        },
        "replicas": {
          "type": "array",
          "description": "List of replica broker endpoints for the topic-partition",
          "items": {
            "$ref": "#/definitions/BrokerEndpoint"
          }
        },
        "isr": {
          "type": "array",
          "description": "List of broker endpoints of in-sync replicas for the topic-partition",
          "items": {
            "$ref": "#/definitions/BrokerEndpoint"
          }
        }
      },
      "description": "Metadata information about a topic-partition"
    },
    "TopicListResponse": {
      "type": "object",
      "properties": {
        "topics": {
          "type": "array",
          "description": "List of topic names",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      },
      "description": "List of topics"
    },
    "TopicMetadaResponse": {
      "type": "object",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Name of the topic"
        },
        "partitions": {
          "type": "array",
          "description": "List of partition metadata",
          "items": {
            "$ref": "#/definitions/PartitionMetadataResponse"
          }
        }
      },
      "description": "Metadata about a specific topic"
    },
    "BrokerEndpoint": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "HostName for Kafka broker endpoint"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port for Kafka broker endpoint"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Broker ID for Kafka broker endpoint"
        },
        "rack": {
          "type": "string",
          "description": "Rack ID for Kafka broker endpoint"
        }
      },
      "description": "Kafka broker endpoint"
    },
    "TopicCreationRecord": {
      "type": "object",
      "properties": {
        "partition_count": {
          "type": "integer",
          "format": "int32",
          "description": "Partition count for the topic"
        },
        "replication_factor": {
          "type": "integer",
          "format": "int32",
          "description": "Replication factor for the topic"
        },
        "topic_properties": {
          "type": "object",
          "description": "Topic level configuration override for the topic",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "description": "A description for a topic to be created"
    }
  },
  "x-internal-service-id": "hdinsight-kafka-rest-proxy",
  "x-internal-service-name": "HDInsight Kafka REST Proxy",
  "x-internal-toc-name": "consume Topic In Partition With Offset",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "consumeTopicInPartitionWithOffset",
  "x-internal-operation-name": "consume Topic In Partition With Offset"
}