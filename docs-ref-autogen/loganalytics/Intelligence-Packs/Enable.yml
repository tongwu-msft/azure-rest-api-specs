### YamlMime:RESTOperation
uid: management.azure.com.loganalytics.intelligencepacks.enable
name: Enable
service: Log Analytics
groupName: Intelligence Packs
apiVersion: 2020-08-01
summary: Enables an intelligence pack for a given workspace.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/intelligencePacks/{intelligencePackName}/Enable?api-version=2020-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: workspaceName
  in: path
  isRequired: true
  description: The name of the workspace.
  types:
  - uid: string
  pattern: ^[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9]$
- name: intelligencePackName
  in: path
  isRequired: true
  description: The name of the intelligence pack to be enabled.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK response definition.
requestHeader: []
definitions: []
examples:
- name: IntelligencePacksEnable
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-00000000000/resourcegroups/rg1/providers/Microsoft.OperationalInsights/workspaces/TestLinkWS/intelligencePacks/ChangeTracking/Enable?api-version=2020-08-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-00000000000/resourcegroups/rg1/providers/Microsoft.OperationalInsights/workspaces/TestLinkWS/intelligencePacks/ChangeTracking/Enable?api-version=2020-08-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for IntelligencePacks Enable. */
      public final class Main {
          /*
           * x-ms-original-file: specification/operationalinsights/resource-manager/Microsoft.OperationalInsights/stable/2020-08-01/examples/WorkspacesEnableIntelligencePack.json
           */
          /**
           * Sample code: IntelligencePacksEnable.
           *
           * @param manager Entry point to LogAnalyticsManager.
           */
          public static void intelligencePacksEnable(com.azure.resourcemanager.loganalytics.LogAnalyticsManager manager) {
              manager.intelligencePacks().enableWithResponse("rg1", "TestLinkWS", "ChangeTracking", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-loganalytics_1.0.0-beta.3/sdk/loganalytics/azure-resourcemanager-loganalytics/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armoperationalinsights_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/operationalinsights/armoperationalinsights/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/operationalinsights/resource-manager/Microsoft.OperationalInsights/stable/2020-08-01/examples/WorkspacesEnableIntelligencePack.json
      func ExampleIntelligencePacksClient_Enable() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armoperationalinsights.NewIntelligencePacksClient("00000000-0000-0000-0000-00000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	_, err = client.Enable(ctx,
      		"rg1",
      		"TestLinkWS",
      		"ChangeTracking",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Foperationalinsights%2Farmoperationalinsights%2Fv2.0.0-beta.2/sdk/resourcemanager/operationalinsights/armoperationalinsights/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { OperationalInsightsManagementClient } = require("@azure/arm-operationalinsights");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Enables an intelligence pack for a given workspace.
       *
       * @summary Enables an intelligence pack for a given workspace.
       * x-ms-original-file: specification/operationalinsights/resource-manager/Microsoft.OperationalInsights/stable/2020-08-01/examples/WorkspacesEnableIntelligencePack.json
       */
      async function intelligencePacksEnable() {
        const subscriptionId = "00000000-0000-0000-0000-00000000000";
        const resourceGroupName = "rg1";
        const workspaceName = "TestLinkWS";
        const intelligencePackName = "ChangeTracking";
        const credential = new DefaultAzureCredential();
        const client = new OperationalInsightsManagementClient(credential, subscriptionId);
        const result = await client.intelligencePacks.enable(
          resourceGroupName,
          workspaceName,
          intelligencePackName
        );
        console.log(result);
      }

      intelligencePacksEnable().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-operationalinsights_8.0.1/sdk/operationalinsights/arm-operationalinsights/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Log Analytics service - Enables an intelligence pack for a given workspace.
errorCodes: []
