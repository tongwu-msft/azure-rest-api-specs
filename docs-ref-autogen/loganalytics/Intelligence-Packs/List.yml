### YamlMime:RESTOperation
uid: management.azure.com.loganalytics.intelligencepacks.list
name: List
service: Log Analytics
groupName: Intelligence Packs
apiVersion: 2020-08-01
summary: Lists all the intelligence packs possible and whether they are enabled or disabled for a given workspace.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/intelligencePacks?api-version=2020-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: workspaceName
  in: path
  isRequired: true
  description: The name of the workspace.
  types:
  - uid: string
  pattern: ^[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9]$
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK response definition.
  types:
  - uid: IntelligencePack
    isArray: true
requestHeader: []
definitions:
- name: IntelligencePack
  description: Intelligence Pack containing a string name and boolean indicating if it's enabled.
  kind: object
  properties:
  - name: name
    description: The name of the intelligence pack.
    types:
    - uid: string
  - name: enabled
    description: The enabled boolean for the intelligence pack.
    types:
    - uid: boolean
  - name: displayName
    description: The display name of the intelligence pack.
    types:
    - uid: string
examples:
- name: IntelligencePacksList
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-0000-0000-0000-00000000000/resourcegroups/rg1/providers/Microsoft.OperationalInsights/workspaces/TestLinkWS/intelligencePacks?api-version=2020-08-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-0000-0000-0000-00000000000/resourcegroups/rg1/providers/Microsoft.OperationalInsights/workspaces/TestLinkWS/intelligencePacks?api-version=2020-08-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for IntelligencePacks List. */
      public final class Main {
          /*
           * x-ms-original-file: specification/operationalinsights/resource-manager/Microsoft.OperationalInsights/stable/2020-08-01/examples/WorkspacesListIntelligencePacks.json
           */
          /**
           * Sample code: IntelligencePacksList.
           *
           * @param manager Entry point to LogAnalyticsManager.
           */
          public static void intelligencePacksList(com.azure.resourcemanager.loganalytics.LogAnalyticsManager manager) {
              manager.intelligencePacks().listWithResponse("rg1", "TestLinkWS", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-loganalytics_1.0.0-beta.3/sdk/loganalytics/azure-resourcemanager-loganalytics/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armoperationalinsights_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/operationalinsights/armoperationalinsights/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/operationalinsights/resource-manager/Microsoft.OperationalInsights/stable/2020-08-01/examples/WorkspacesListIntelligencePacks.json
      func ExampleIntelligencePacksClient_List() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armoperationalinsights.NewIntelligencePacksClient("00000000-0000-0000-0000-00000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.List(ctx,
      		"rg1",
      		"TestLinkWS",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Foperationalinsights%2Farmoperationalinsights%2Fv2.0.0-beta.2/sdk/resourcemanager/operationalinsights/armoperationalinsights/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { OperationalInsightsManagementClient } = require("@azure/arm-operationalinsights");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Lists all the intelligence packs possible and whether they are enabled or disabled for a given workspace.
       *
       * @summary Lists all the intelligence packs possible and whether they are enabled or disabled for a given workspace.
       * x-ms-original-file: specification/operationalinsights/resource-manager/Microsoft.OperationalInsights/stable/2020-08-01/examples/WorkspacesListIntelligencePacks.json
       */
      async function intelligencePacksList() {
        const subscriptionId = "00000000-0000-0000-0000-00000000000";
        const resourceGroupName = "rg1";
        const workspaceName = "TestLinkWS";
        const credential = new DefaultAzureCredential();
        const client = new OperationalInsightsManagementClient(credential, subscriptionId);
        const result = await client.intelligencePacks.list(resourceGroupName, workspaceName);
        console.log(result);
      }

      intelligencePacksList().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-operationalinsights_8.0.1/sdk/operationalinsights/arm-operationalinsights/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      [
        {
          "name": "CapacityPerformance",
          "enabled": false,
          "displayName": "Capacity and Performance"
        },
        {
          "name": "AzureWebAppsAnalytics",
          "enabled": false,
          "displayName": "Azure Web Apps Analytics (Preview)"
        },
        {
          "name": "Security",
          "enabled": false,
          "displayName": "Security and Audit"
        },
        {
          "name": "Updates",
          "enabled": false,
          "displayName": "Update Management"
        },
        {
          "name": "AntiMalware",
          "enabled": false,
          "displayName": "Antimalware Assessment"
        },
        {
          "name": "LogManagement",
          "enabled": true,
          "displayName": "Log Management"
        },
        {
          "name": "ChangeTracking",
          "enabled": true,
          "displayName": "Change Tracking"
        },
        {
          "name": "SQLAssessment",
          "enabled": false,
          "displayName": "SQL Assessment"
        },
        {
          "name": "SCOMAssessment",
          "enabled": false,
          "displayName": "System Center Operations Manager Assessment (Preview)"
        },
        {
          "name": "ServiceDesk",
          "enabled": false,
          "displayName": "IT Service Management Connector(Preview)"
        },
        {
          "name": "ADAssessment",
          "enabled": false,
          "displayName": "AD Assessment"
        },
        {
          "name": "AlertManagement",
          "enabled": false,
          "displayName": "Alert Management"
        },
        {
          "name": "AzureAutomation",
          "enabled": false,
          "displayName": "Azure Automation"
        },
        {
          "name": "WireData",
          "enabled": false,
          "displayName": "Wire Data"
        },
        {
          "name": "SiteRecovery",
          "enabled": true,
          "displayName": "Azure Site Recovery"
        },
        {
          "name": "Backup",
          "enabled": false,
          "displayName": "Backup"
        },
        {
          "name": "SurfaceHub",
          "enabled": false,
          "displayName": "Surface Hub"
        },
        {
          "name": "NetworkMonitoring",
          "enabled": false,
          "displayName": "Network Performance Monitor"
        },
        {
          "name": "Containers",
          "enabled": false,
          "displayName": "Container Monitoring Solution"
        },
        {
          "name": "ServiceMap",
          "enabled": false,
          "displayName": "Service Map"
        },
        {
          "name": "AzureNetworking",
          "enabled": false,
          "displayName": "Azure Networking Analytics (Deprecated)"
        },
        {
          "name": "ADReplication",
          "enabled": false,
          "displayName": "AD Replication Status"
        },
        {
          "name": "Office365",
          "enabled": false,
          "displayName": "Office 365 (Preview)"
        },
        {
          "name": "CompatibilityAssessment",
          "enabled": false,
          "displayName": "Upgrade Readiness"
        },
        {
          "name": "KeyVault",
          "enabled": false,
          "displayName": "Key Vault (Deprecated)"
        },
        {
          "name": "ServiceFabric",
          "enabled": false,
          "displayName": "Service Fabric"
        },
        {
          "name": "DnsAnalytics",
          "enabled": false,
          "displayName": "DNS Analytics (Preview)"
        },
        {
          "name": "ApplicationInsights",
          "enabled": false,
          "displayName": "Application Insights (Preview)"
        },
        {
          "name": "WireData2",
          "enabled": false,
          "displayName": "Wire Data 2.0"
        },
        {
          "name": "WaaSUpdateInsights",
          "enabled": false,
          "displayName": "Update Compliance (Preview)"
        },
        {
          "name": "AgentHealthAssessment",
          "enabled": false,
          "displayName": "Agent Health "
        },
        {
          "name": "AzureActivity",
          "enabled": false,
          "displayName": "Activity Log Analytics"
        },
        {
          "name": "HDInsight",
          "enabled": false,
          "displayName": "HDInsight HBase Monitoring (Preview)"
        },
        {
          "name": "HDInsightKafka",
          "enabled": false,
          "displayName": "HDInsight Kafka Monitoring"
        },
        {
          "name": "HDInsightSpark",
          "enabled": false,
          "displayName": "HDInsight Spark Monitoring"
        },
        {
          "name": "VMware",
          "enabled": false,
          "displayName": "VMware (Preview)"
        },
        {
          "name": "SecurityCenterFree",
          "enabled": false,
          "displayName": "Security Center Free � for Azure Resources only"
        },
        {
          "name": "LogicAppsManagement",
          "enabled": false,
          "displayName": "Logic Apps Management"
        },
        {
          "name": "LogicAppB2B",
          "enabled": false,
          "displayName": "Logic Apps B2B"
        },
        {
          "name": "AzureSQLAnalytics",
          "enabled": false,
          "displayName": "Azure SQL Analytics (Preview)"
        },
        {
          "name": "KeyVaultAnalytics",
          "enabled": false,
          "displayName": "Key Vault Analytics"
        },
        {
          "name": "AzureNSGAnalytics",
          "enabled": false,
          "displayName": "Azure Network Security Group Analytics"
        },
        {
          "name": "AzureAppGatewayAnalytics",
          "enabled": false,
          "displayName": "Azure Application Gateway Analytics"
        },
        {
          "name": "DeviceHealthProd",
          "enabled": false,
          "displayName": "Device Health (Preview)"
        },
        {
          "name": "WindowsDefenderATP",
          "enabled": false,
          "displayName": "Windows Defender ATP"
        },
        {
          "name": "ProcessInvestigator",
          "enabled": false,
          "displayName": "ProcessInvestigator"
        }
      ]
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Lists all the intelligence packs possible and whether they are enabled or disabled for a given workspace.
errorCodes: []
