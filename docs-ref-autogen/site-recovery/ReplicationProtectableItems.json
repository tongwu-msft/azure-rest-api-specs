{
  "swagger": "2.0",
  "info": {
    "version": "2018-07-10",
    "x-ms-code-generation-settings": {
      "header": "MICROSOFT_MIT_NO_VERSION"
    },
    "title": "SiteRecoveryManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {},
  "definitions": {
    "A2AAddDisksInput": {
      "description": "A2A add disk(s) input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AddDisksProviderSpecificInput"
        }
      ],
      "properties": {
        "vmDisks": {
          "description": "The list of vm disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AVmDiskInputDetails"
          }
        },
        "vmManagedDisks": {
          "description": "The list of vm managed disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AVmManagedDiskInputDetails"
          }
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2AApplyRecoveryPointInput": {
      "description": "ApplyRecoveryPoint input specific to A2A provider.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApplyRecoveryPointProviderSpecificInput"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "A2A"
    },
    "A2AContainerCreationInput": {
      "description": "A2A cloud creation input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificContainerCreationInput"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "A2A"
    },
    "A2AContainerMappingInput": {
      "description": "A2A container mapping input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificContainerMappingInput"
        }
      ],
      "properties": {
        "agentAutoUpdateStatus": {
          "description": "A value indicating whether the auto update is enabled.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AgentAutoUpdateStatus",
            "modelAsString": true
          }
        },
        "automationAccountArmId": {
          "description": "The automation account arm id.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2AEnableProtectionInput": {
      "description": "A2A enable protection input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "properties": {
        "fabricObjectId": {
          "description": "The fabric specific object Id of the virtual machine.",
          "type": "string"
        },
        "recoveryContainerId": {
          "description": "The recovery container Id.",
          "type": "string"
        },
        "recoveryResourceGroupId": {
          "description": "The recovery resource group Id. Valid for V2 scenarios.",
          "type": "string"
        },
        "recoveryCloudServiceId": {
          "description": "The recovery cloud service Id. Valid for V1 scenarios.",
          "type": "string"
        },
        "recoveryAvailabilitySetId": {
          "description": "The recovery availability set Id.",
          "type": "string"
        },
        "vmDisks": {
          "description": "The list of vm disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AVmDiskInputDetails"
          }
        },
        "vmManagedDisks": {
          "description": "The list of vm managed disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AVmManagedDiskInputDetails"
          }
        },
        "multiVmGroupName": {
          "description": "The multi vm group name.",
          "type": "string"
        },
        "recoveryBootDiagStorageAccountId": {
          "description": "The boot diagnostic storage account.",
          "type": "string"
        },
        "diskEncryptionInfo": {
          "$ref": "#/definitions/DiskEncryptionInfo",
          "description": "The recovery disk encryption information."
        },
        "recoveryAvailabilityZone": {
          "description": "The recovery availability zone.",
          "type": "string"
        },
        "recoveryAzureNetworkId": {
          "description": "The recovery Azure virtual network ARM id.",
          "type": "string"
        },
        "recoverySubnetName": {
          "description": "The recovery subnet name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2AEventDetails": {
      "description": "Model class for event details of a A2A event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "properties": {
        "protectedItemName": {
          "description": "The protected item arm name.",
          "type": "string"
        },
        "fabricObjectId": {
          "description": "The azure vm arm id.",
          "type": "string"
        },
        "fabricName": {
          "description": "Fabric arm name.",
          "type": "string"
        },
        "fabricLocation": {
          "description": "The fabric location.",
          "type": "string"
        },
        "remoteFabricName": {
          "description": "Remote fabric arm name.",
          "type": "string"
        },
        "remoteFabricLocation": {
          "description": "Remote fabric location.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2AFailoverProviderInput": {
      "description": "A2A provider specific input for failover.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "recoveryPointId": {
          "description": "The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed.",
          "type": "string"
        },
        "cloudServiceCreationOption": {
          "description": "A value indicating whether to use recovery cloud service for TFO or not.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2APolicyCreationInput": {
      "description": "A2A Policy creation input.",
      "required": [
        "multiVmSyncStatus"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryPointHistory": {
          "format": "int32",
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "type": "integer"
        },
        "crashConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The crash consistent snapshot frequency (in minutes).",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The app consistent snapshot frequency (in minutes).",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.",
          "enum": [
            "Enable",
            "Disable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SetMultiVmSyncStatus",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2APolicyDetails": {
      "description": "A2A specific policy details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPointThresholdInMinutes": {
          "format": "int32",
          "description": "The recovery point threshold in minutes.",
          "type": "integer"
        },
        "recoveryPointHistory": {
          "format": "int32",
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The app consistent snapshot frequency in minutes.",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled.",
          "type": "string"
        },
        "crashConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The crash consistent snapshot frequency in minutes.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2AProtectedDiskDetails": {
      "description": "A2A protected disk details.",
      "type": "object",
      "properties": {
        "diskUri": {
          "description": "The disk uri.",
          "type": "string"
        },
        "recoveryAzureStorageAccountId": {
          "description": "The recovery disk storage account.",
          "type": "string"
        },
        "primaryDiskAzureStorageAccountId": {
          "description": "The primary disk storage account.",
          "type": "string"
        },
        "recoveryDiskUri": {
          "description": "Recovery disk uri.",
          "type": "string"
        },
        "diskName": {
          "description": "The disk name.",
          "type": "string"
        },
        "diskCapacityInBytes": {
          "format": "int64",
          "description": "The disk capacity in bytes.",
          "type": "integer"
        },
        "primaryStagingAzureStorageAccountId": {
          "description": "The primary staging storage account.",
          "type": "string"
        },
        "diskType": {
          "description": "The type of disk.",
          "type": "string"
        },
        "resyncRequired": {
          "description": "A value indicating whether resync is required for this disk.",
          "type": "boolean"
        },
        "monitoringPercentageCompletion": {
          "format": "int32",
          "description": "The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.",
          "type": "integer"
        },
        "monitoringJobType": {
          "description": "The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.",
          "type": "string"
        },
        "dataPendingInStagingStorageAccountInMB": {
          "format": "double",
          "description": "The data pending for replication in MB at staging account.",
          "type": "number"
        },
        "dataPendingAtSourceAgentInMB": {
          "format": "double",
          "description": "The data pending at source virtual machine in MB.",
          "type": "number"
        },
        "diskState": {
          "description": "The disk state.",
          "type": "string"
        },
        "allowedDiskLevelOperation": {
          "description": "The disk level operations list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isDiskEncrypted": {
          "description": "A value indicating whether vm has encrypted os disk or not.",
          "type": "boolean"
        },
        "secretIdentifier": {
          "description": "The secret URL / identifier (BEK).",
          "type": "string"
        },
        "dekKeyVaultArmId": {
          "description": "The KeyVault resource id for secret (BEK).",
          "type": "string"
        },
        "isDiskKeyEncrypted": {
          "description": "A value indicating whether disk key got encrypted or not.",
          "type": "boolean"
        },
        "keyIdentifier": {
          "description": "The key URL / identifier (KEK).",
          "type": "string"
        },
        "kekKeyVaultArmId": {
          "description": "The KeyVault resource id for key (KEK).",
          "type": "string"
        }
      }
    },
    "A2AProtectedManagedDiskDetails": {
      "description": "A2A protected managed disk details.",
      "type": "object",
      "properties": {
        "diskId": {
          "description": "The managed disk Arm id.",
          "type": "string"
        },
        "recoveryResourceGroupId": {
          "description": "The recovery disk resource group Arm Id.",
          "type": "string"
        },
        "recoveryTargetDiskId": {
          "description": "Recovery target disk Arm Id.",
          "type": "string"
        },
        "recoveryReplicaDiskId": {
          "description": "Recovery replica disk Arm Id.",
          "type": "string"
        },
        "recoveryReplicaDiskAccountType": {
          "description": "The replica disk type. Its an optional value and will be same as source disk type if not user provided.",
          "type": "string"
        },
        "recoveryTargetDiskAccountType": {
          "description": "The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.",
          "type": "string"
        },
        "recoveryDiskEncryptionSetId": {
          "description": "The recovery disk encryption set Id.",
          "type": "string"
        },
        "diskName": {
          "description": "The disk name.",
          "type": "string"
        },
        "diskCapacityInBytes": {
          "format": "int64",
          "description": "The disk capacity in bytes.",
          "type": "integer"
        },
        "primaryStagingAzureStorageAccountId": {
          "description": "The primary staging storage account.",
          "type": "string"
        },
        "diskType": {
          "description": "The type of disk.",
          "type": "string"
        },
        "resyncRequired": {
          "description": "A value indicating whether resync is required for this disk.",
          "type": "boolean"
        },
        "monitoringPercentageCompletion": {
          "format": "int32",
          "description": "The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.",
          "type": "integer"
        },
        "monitoringJobType": {
          "description": "The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.",
          "type": "string"
        },
        "dataPendingInStagingStorageAccountInMB": {
          "format": "double",
          "description": "The data pending for replication in MB at staging account.",
          "type": "number"
        },
        "dataPendingAtSourceAgentInMB": {
          "format": "double",
          "description": "The data pending at source virtual machine in MB.",
          "type": "number"
        },
        "diskState": {
          "description": "The disk state.",
          "type": "string"
        },
        "allowedDiskLevelOperation": {
          "description": "The disk level operations list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isDiskEncrypted": {
          "description": "A value indicating whether vm has encrypted os disk or not.",
          "type": "boolean"
        },
        "secretIdentifier": {
          "description": "The secret URL / identifier (BEK).",
          "type": "string"
        },
        "dekKeyVaultArmId": {
          "description": "The KeyVault resource id for secret (BEK).",
          "type": "string"
        },
        "isDiskKeyEncrypted": {
          "description": "A value indicating whether disk key got encrypted or not.",
          "type": "boolean"
        },
        "keyIdentifier": {
          "description": "The key URL / identifier (KEK).",
          "type": "string"
        },
        "kekKeyVaultArmId": {
          "description": "The KeyVault resource id for key (KEK).",
          "type": "string"
        },
        "failoverDiskName": {
          "description": "The failover name for the managed disk.",
          "type": "string"
        },
        "tfoDiskName": {
          "description": "The test failover name for the managed disk.",
          "type": "string"
        }
      }
    },
    "A2AProtectionContainerMappingDetails": {
      "description": "A2A provider specific settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainerMappingProviderSpecificDetails"
        }
      ],
      "properties": {
        "agentAutoUpdateStatus": {
          "description": "A value indicating whether the auto update is enabled.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AgentAutoUpdateStatus",
            "modelAsString": true
          }
        },
        "automationAccountArmId": {
          "description": "The automation account arm id.",
          "type": "string"
        },
        "scheduleName": {
          "description": "The schedule arm name.",
          "type": "string"
        },
        "jobScheduleName": {
          "description": "The job schedule arm name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2ARecoveryPointDetails": {
      "description": "A2A provider specific recovery point details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificRecoveryPointDetails"
        }
      ],
      "properties": {
        "recoveryPointSyncType": {
          "description": "A value indicating whether the recovery point is multi VM consistent.",
          "enum": [
            "MultiVmSyncRecoveryPoint",
            "PerVmRecoveryPoint"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RecoveryPointSyncType",
            "modelAsString": true
          }
        },
        "disks": {
          "description": "List of disk ids representing a recovery point.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2ARemoveDisksInput": {
      "description": "A2A remove disk(s) input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RemoveDisksProviderSpecificInput"
        }
      ],
      "properties": {
        "vmDisksUris": {
          "description": "The list of vm disk vhd URIs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vmManagedDisksIds": {
          "description": "The list of vm managed disk Ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2AReplicationDetails": {
      "description": "A2A provider specific settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "fabricObjectId": {
          "description": "The fabric specific object Id of the virtual machine.",
          "type": "string"
        },
        "initialPrimaryFabricLocation": {
          "description": "The initial primary fabric location.",
          "type": "string",
          "readOnly": true
        },
        "initialRecoveryFabricLocation": {
          "description": "The initial recovery fabric location.",
          "type": "string",
          "readOnly": true
        },
        "multiVmGroupId": {
          "description": "The multi vm group Id.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "The multi vm group name.",
          "type": "string"
        },
        "multiVmGroupCreateOption": {
          "description": "Whether Multi VM group is auto created or specified by user.",
          "enum": [
            "AutoCreated",
            "UserSpecified"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MultiVmGroupCreateOption",
            "modelAsString": true
          }
        },
        "managementId": {
          "description": "The management Id.",
          "type": "string"
        },
        "protectedDisks": {
          "description": "The list of protected disks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AProtectedDiskDetails"
          }
        },
        "unprotectedDisks": {
          "description": "The list of unprotected disks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AUnprotectedDiskDetails"
          }
        },
        "protectedManagedDisks": {
          "description": "The list of protected managed disks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AProtectedManagedDiskDetails"
          }
        },
        "recoveryBootDiagStorageAccountId": {
          "description": "The recovery boot diagnostic storage account Arm Id.",
          "type": "string"
        },
        "primaryFabricLocation": {
          "description": "Primary fabric location.",
          "type": "string"
        },
        "recoveryFabricLocation": {
          "description": "The recovery fabric location.",
          "type": "string"
        },
        "osType": {
          "description": "The type of operating system.",
          "type": "string"
        },
        "recoveryAzureVMSize": {
          "description": "The size of recovery virtual machine.",
          "type": "string"
        },
        "recoveryAzureVMName": {
          "description": "The name of recovery virtual machine.",
          "type": "string"
        },
        "recoveryAzureResourceGroupId": {
          "description": "The recovery resource group.",
          "type": "string"
        },
        "recoveryCloudService": {
          "description": "The recovery cloud service.",
          "type": "string"
        },
        "recoveryAvailabilitySet": {
          "description": "The recovery availability set.",
          "type": "string"
        },
        "selectedRecoveryAzureNetworkId": {
          "description": "The recovery virtual network.",
          "type": "string"
        },
        "selectedTfoAzureNetworkId": {
          "description": "The test failover virtual network.",
          "type": "string"
        },
        "vmNics": {
          "description": "The virtual machine nic details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          }
        },
        "vmSyncedConfigDetails": {
          "$ref": "#/definitions/AzureToAzureVmSyncedConfigDetails",
          "description": "The synced configuration details."
        },
        "monitoringPercentageCompletion": {
          "format": "int32",
          "description": "The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.",
          "type": "integer"
        },
        "monitoringJobType": {
          "description": "The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.",
          "type": "string"
        },
        "lastHeartbeat": {
          "format": "date-time",
          "description": "The last heartbeat received from the source server.",
          "type": "string"
        },
        "agentVersion": {
          "description": "The agent version.",
          "type": "string"
        },
        "isReplicationAgentUpdateRequired": {
          "description": "A value indicating whether replication agent update is required.",
          "type": "boolean"
        },
        "recoveryFabricObjectId": {
          "description": "The recovery fabric object Id.",
          "type": "string"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        },
        "lifecycleId": {
          "description": "An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the \"same\" protected item even though other internal Ids/ARM Id might be changing.",
          "type": "string"
        },
        "testFailoverRecoveryFabricObjectId": {
          "description": "The test failover fabric object Id.",
          "type": "string"
        },
        "rpoInSeconds": {
          "format": "int64",
          "description": "The last RPO value in seconds.",
          "type": "integer"
        },
        "lastRpoCalculatedTime": {
          "format": "date-time",
          "description": "The time (in UTC) when the last RPO value was calculated by Protection Service.",
          "type": "string"
        },
        "recoveryAvailabilityZone": {
          "description": "The recovery availability zone.",
          "type": "string"
        },
        "vmEncryptionType": {
          "description": "The encryption type of the VM.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "NotEncrypted",
            "OnePassEncrypted",
            "TwoPassEncrypted"
          ],
          "x-ms-enum": {
            "name": "VmEncryptionType",
            "modelAsString": true
          }
        },
        "tfoAzureVMName": {
          "description": "The test failover VM name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2AReprotectInput": {
      "description": "Azure specific reprotect input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryContainerId": {
          "description": "The recovery container Id.",
          "type": "string"
        },
        "vmDisks": {
          "description": "The list of vm disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AVmDiskInputDetails"
          }
        },
        "recoveryResourceGroupId": {
          "description": "The recovery resource group Id. Valid for V2 scenarios.",
          "type": "string"
        },
        "recoveryCloudServiceId": {
          "description": "The recovery cloud service Id. Valid for V1 scenarios.",
          "type": "string"
        },
        "recoveryAvailabilitySetId": {
          "description": "The recovery availability set.",
          "type": "string"
        },
        "policyId": {
          "description": "The Policy Id.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2ASwitchProtectionInput": {
      "description": "A2A specific switch protection input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SwitchProtectionProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryContainerId": {
          "description": "The recovery container Id.",
          "type": "string"
        },
        "vmDisks": {
          "description": "The list of vm disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AVmDiskInputDetails"
          }
        },
        "vmManagedDisks": {
          "description": "The list of vm managed disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AVmManagedDiskInputDetails"
          }
        },
        "recoveryResourceGroupId": {
          "description": "The recovery resource group Id. Valid for V2 scenarios.",
          "type": "string"
        },
        "recoveryCloudServiceId": {
          "description": "The recovery cloud service Id. Valid for V1 scenarios.",
          "type": "string"
        },
        "recoveryAvailabilitySetId": {
          "description": "The recovery availability set.",
          "type": "string"
        },
        "policyId": {
          "description": "The Policy Id.",
          "type": "string"
        },
        "recoveryBootDiagStorageAccountId": {
          "description": "The boot diagnostic storage account.",
          "type": "string"
        },
        "diskEncryptionInfo": {
          "$ref": "#/definitions/DiskEncryptionInfo",
          "description": "The recovery disk encryption information."
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2AUnprotectedDiskDetails": {
      "description": "A2A unprotected disk details.",
      "type": "object",
      "properties": {
        "diskLunId": {
          "format": "int32",
          "description": "The source lun Id for the data disk.",
          "type": "integer"
        }
      }
    },
    "A2AUpdateContainerMappingInput": {
      "description": "A2A update protection container mapping.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificUpdateContainerMappingInput"
        }
      ],
      "properties": {
        "agentAutoUpdateStatus": {
          "description": "A value indicating whether the auto update is enabled.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AgentAutoUpdateStatus",
            "modelAsString": true
          }
        },
        "automationAccountArmId": {
          "description": "The automation account arm id.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2AUpdateReplicationProtectedItemInput": {
      "description": "InMage Azure V2 input to update replication protected item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateReplicationProtectedItemProviderInput"
        }
      ],
      "properties": {
        "recoveryCloudServiceId": {
          "description": "The target cloud service ARM Id (for V1).",
          "type": "string"
        },
        "recoveryResourceGroupId": {
          "description": "The target resource group ARM Id (for V2).",
          "type": "string"
        },
        "managedDiskUpdateDetails": {
          "description": "Managed disk update details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AVmManagedDiskUpdateDetails"
          }
        },
        "recoveryBootDiagStorageAccountId": {
          "description": "The boot diagnostic storage account.",
          "type": "string"
        },
        "diskEncryptionInfo": {
          "$ref": "#/definitions/DiskEncryptionInfo",
          "description": "The recovery os disk encryption information."
        },
        "tfoAzureVMName": {
          "description": "The user given name for test failover VM.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "A2AVmDiskInputDetails": {
      "description": "Azure VM disk input details.",
      "type": "object",
      "properties": {
        "diskUri": {
          "description": "The disk Uri.",
          "type": "string"
        },
        "recoveryAzureStorageAccountId": {
          "description": "The recovery VHD storage account Id.",
          "type": "string"
        },
        "primaryStagingAzureStorageAccountId": {
          "description": "The primary staging storage account Id.",
          "type": "string"
        }
      }
    },
    "A2AVmManagedDiskInputDetails": {
      "description": "Azure VM managed disk input details.",
      "type": "object",
      "properties": {
        "diskId": {
          "description": "The disk Id.",
          "type": "string"
        },
        "primaryStagingAzureStorageAccountId": {
          "description": "The primary staging storage account Arm Id.",
          "type": "string"
        },
        "recoveryResourceGroupId": {
          "description": "The target resource group Arm Id.",
          "type": "string"
        },
        "recoveryReplicaDiskAccountType": {
          "description": "The replica disk type. Its an optional value and will be same as source disk type if not user provided.",
          "type": "string"
        },
        "recoveryTargetDiskAccountType": {
          "description": "The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.",
          "type": "string"
        },
        "recoveryDiskEncryptionSetId": {
          "description": "The recovery disk encryption set Id.",
          "type": "string"
        },
        "diskEncryptionInfo": {
          "$ref": "#/definitions/DiskEncryptionInfo",
          "description": "The recovery disk encryption information (for one / single pass flows)."
        }
      }
    },
    "A2AVmManagedDiskUpdateDetails": {
      "description": "Azure VM managed disk update input details.",
      "type": "object",
      "properties": {
        "diskId": {
          "description": "The disk Id.",
          "type": "string"
        },
        "recoveryTargetDiskAccountType": {
          "description": "The target disk type before failover.",
          "type": "string"
        },
        "recoveryReplicaDiskAccountType": {
          "description": "The replica disk type before failover.",
          "type": "string"
        },
        "diskEncryptionInfo": {
          "$ref": "#/definitions/DiskEncryptionInfo",
          "description": "The recovery disk encryption information (for one / single pass flows)."
        },
        "failoverDiskName": {
          "description": "The target disk name for unplanned failover operation.",
          "type": "string"
        },
        "tfoDiskName": {
          "description": "The target disk name for test failover operation.",
          "type": "string"
        }
      }
    },
    "AddDisksInput": {
      "description": "Input for add disk(s) operation.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AddDisksInputProperties",
          "description": "Add disks input properties."
        }
      }
    },
    "AddDisksInputProperties": {
      "description": "Add Disks input properties.",
      "type": "object",
      "properties": {
        "providerSpecificDetails": {
          "$ref": "#/definitions/AddDisksProviderSpecificInput",
          "description": "The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null."
        }
      }
    },
    "AddDisksProviderSpecificInput": {
      "description": "Add Disks provider specific input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "AddRecoveryServicesProviderInput": {
      "description": "Input required to add a provider.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AddRecoveryServicesProviderInputProperties",
          "description": "The properties of an add provider request."
        }
      }
    },
    "AddRecoveryServicesProviderInputProperties": {
      "description": "The properties of an add provider request.",
      "required": [
        "machineName",
        "authenticationIdentityInput",
        "resourceAccessIdentityInput"
      ],
      "type": "object",
      "properties": {
        "machineName": {
          "description": "The name of the machine where the provider is getting added.",
          "type": "string"
        },
        "authenticationIdentityInput": {
          "$ref": "#/definitions/IdentityProviderInput",
          "description": "The identity provider input for DRA authentication."
        },
        "resourceAccessIdentityInput": {
          "$ref": "#/definitions/IdentityProviderInput",
          "description": "The identity provider input for resource access."
        }
      }
    },
    "AddVCenterRequest": {
      "description": "Input required to add vCenter.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AddVCenterRequestProperties",
          "description": "The properties of an add vCenter request."
        }
      }
    },
    "AddVCenterRequestProperties": {
      "description": "The properties of an add vCenter request.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "The friendly name of the vCenter.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address of the vCenter to be discovered.",
          "type": "string"
        },
        "processServerId": {
          "description": "The process server Id from where the discovery is orchestrated.",
          "type": "string"
        },
        "port": {
          "description": "The port number for discovery.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The account Id which has privileges to discover the vCenter.",
          "type": "string"
        }
      }
    },
    "Alert": {
      "description": "Implements the Alert class.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertProperties",
          "description": "Alert related data."
        }
      }
    },
    "AlertCollection": {
      "description": "Collection of alerts.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of alerts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "AlertProperties": {
      "description": "The properties of an alert.",
      "type": "object",
      "properties": {
        "sendToOwners": {
          "description": "A value indicating whether to send email to subscription administrator.",
          "type": "string"
        },
        "customEmailAddresses": {
          "description": "The custom email address for sending emails.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locale": {
          "description": "The locale for the email notification.",
          "type": "string"
        }
      }
    },
    "ApplyRecoveryPointInput": {
      "description": "Input to apply recovery point.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplyRecoveryPointInputProperties",
          "description": "The input properties to apply recovery point."
        }
      }
    },
    "ApplyRecoveryPointInputProperties": {
      "description": "Input properties to apply recovery point.",
      "type": "object",
      "properties": {
        "recoveryPointId": {
          "description": "The recovery point Id.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ApplyRecoveryPointProviderSpecificInput",
          "description": "Provider specific input for applying recovery point."
        }
      }
    },
    "ApplyRecoveryPointProviderSpecificInput": {
      "description": "Provider specific input for apply recovery point.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "AsrJobDetails": {
      "description": "This class represents job details based on specific job type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "AsrJobDetails"
    },
    "ASRTask": {
      "description": "Task of the Job.",
      "type": "object",
      "properties": {
        "taskId": {
          "description": "The Id.",
          "type": "string"
        },
        "name": {
          "description": "The unique Task name.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "The start time.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The end time.",
          "type": "string"
        },
        "allowedActions": {
          "description": "The state/actions applicable on this task.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "friendlyName": {
          "description": "The name.",
          "type": "string"
        },
        "state": {
          "description": "The State. It is one of these values - NotStarted, InProgress, Succeeded, Failed, Cancelled, Suspended or Other.",
          "type": "string"
        },
        "stateDescription": {
          "description": "The description of the task state. For example - For Succeeded state, description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped.",
          "type": "string"
        },
        "taskType": {
          "description": "The type of task. Details in CustomDetails property depend on this type.",
          "type": "string"
        },
        "customDetails": {
          "$ref": "#/definitions/TaskTypeDetails",
          "description": "The custom task details based on the task type."
        },
        "groupTaskCustomDetails": {
          "$ref": "#/definitions/GroupTaskDetails",
          "description": "The custom task details based on the task type, if the task type is GroupTaskDetails or one of the types derived from it."
        },
        "errors": {
          "description": "The task error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobErrorDetails"
          }
        }
      }
    },
    "AutomationRunbookTaskDetails": {
      "description": "This class represents the task details for an automation runbook.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "name": {
          "description": "The recovery plan task name.",
          "type": "string"
        },
        "cloudServiceName": {
          "description": "The cloud service of the automation runbook account.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "The subscription Id of the automation runbook account.",
          "type": "string"
        },
        "accountName": {
          "description": "The automation account name of the runbook.",
          "type": "string"
        },
        "runbookId": {
          "description": "The runbook Id.",
          "type": "string"
        },
        "runbookName": {
          "description": "The runbook name.",
          "type": "string"
        },
        "jobId": {
          "description": "The job Id of the runbook execution.",
          "type": "string"
        },
        "jobOutput": {
          "description": "The execution output of the runbook.",
          "type": "string"
        },
        "isPrimarySideScript": {
          "description": "A value indicating whether it is a primary side script or not.",
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "AutomationRunbookTaskDetails"
    },
    "AzureFabricCreationInput": {
      "description": "Fabric provider specific settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificCreationInput"
        }
      ],
      "properties": {
        "location": {
          "description": "The Location.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Azure"
    },
    "AzureFabricSpecificDetails": {
      "description": "Azure Fabric Specific Details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificDetails"
        }
      ],
      "properties": {
        "location": {
          "description": "The Location for the Azure fabric.",
          "type": "string"
        },
        "containerIds": {
          "description": "The container Ids for the Azure fabric.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "Azure"
    },
    "AzureToAzureCreateNetworkMappingInput": {
      "description": "Create network mappings input properties/behavior specific to Azure to Azure Network mapping.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificCreateNetworkMappingInput"
        }
      ],
      "properties": {
        "primaryNetworkId": {
          "description": "The primary azure vnet Id.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "AzureToAzure"
    },
    "AzureToAzureNetworkMappingSettings": {
      "description": "A2A Network Mapping fabric specific settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NetworkMappingFabricSpecificSettings"
        }
      ],
      "properties": {
        "primaryFabricLocation": {
          "description": "The primary fabric location.",
          "type": "string"
        },
        "recoveryFabricLocation": {
          "description": "The recovery fabric location.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "AzureToAzure"
    },
    "AzureToAzureUpdateNetworkMappingInput": {
      "description": "Updates network mappings input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificUpdateNetworkMappingInput"
        }
      ],
      "properties": {
        "primaryNetworkId": {
          "description": "The primary azure vnet Id.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "AzureToAzure"
    },
    "AzureToAzureVmSyncedConfigDetails": {
      "description": "Azure to Azure VM synced configuration details.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "The Azure VM tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "inputEndpoints": {
          "description": "The Azure VM input endpoints.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputEndpoint"
          }
        }
      }
    },
    "AzureVmDiskDetails": {
      "description": "Disk details for E2A provider.",
      "type": "object",
      "properties": {
        "vhdType": {
          "description": "VHD type.",
          "type": "string"
        },
        "vhdId": {
          "description": "The VHD id.",
          "type": "string"
        },
        "diskId": {
          "description": "The disk resource id.",
          "type": "string"
        },
        "vhdName": {
          "description": "VHD name.",
          "type": "string"
        },
        "maxSizeMB": {
          "description": "Max side in MB.",
          "type": "string"
        },
        "targetDiskLocation": {
          "description": "Blob uri of the Azure disk.",
          "type": "string"
        },
        "targetDiskName": {
          "description": "The target Azure disk name.",
          "type": "string"
        },
        "lunId": {
          "description": "Ordinal\\LunId of the disk for the Azure VM.",
          "type": "string"
        },
        "diskEncryptionSetId": {
          "description": "The DiskEncryptionSet ARM ID.",
          "type": "string"
        }
      }
    },
    "ComputeSizeErrorDetails": {
      "description": "Represents the error used to indicate why the target compute size is not applicable.",
      "type": "object",
      "properties": {
        "message": {
          "description": "The error message.",
          "type": "string"
        },
        "severity": {
          "description": "The severity of the error.",
          "type": "string"
        }
      }
    },
    "ConfigurationSettings": {
      "description": "Replication provider specific settings.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overridden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "ConfigureAlertRequest": {
      "description": "Request to configure alerts for the system.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigureAlertRequestProperties",
          "description": "The properties of a configure alert request."
        }
      }
    },
    "ConfigureAlertRequestProperties": {
      "description": "Properties of a configure alert request.",
      "type": "object",
      "properties": {
        "sendToOwners": {
          "description": "A value indicating whether to send email to subscription administrator.",
          "type": "string"
        },
        "customEmailAddresses": {
          "description": "The custom email address for sending emails.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locale": {
          "description": "The locale for the email notification.",
          "type": "string"
        }
      }
    },
    "ConsistencyCheckTaskDetails": {
      "description": "This class contains monitoring details of all the inconsistent Protected Entities in Vmm.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "vmDetails": {
          "description": "The list of inconsistent Vm details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InconsistentVmDetails"
          }
        }
      },
      "x-ms-discriminator-value": "ConsistencyCheckTaskDetails"
    },
    "CreateNetworkMappingInput": {
      "description": "Create network mappings input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreateNetworkMappingInputProperties",
          "description": "Input properties for creating network mapping."
        }
      }
    },
    "CreateNetworkMappingInputProperties": {
      "description": "Common input details for network mapping operation.",
      "type": "object",
      "properties": {
        "recoveryFabricName": {
          "description": "Recovery fabric Name.",
          "type": "string"
        },
        "recoveryNetworkId": {
          "description": "Recovery network Id.",
          "type": "string"
        },
        "fabricSpecificDetails": {
          "$ref": "#/definitions/FabricSpecificCreateNetworkMappingInput",
          "description": "Fabric specific input properties."
        }
      }
    },
    "CreatePolicyInput": {
      "description": "Protection Policy input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreatePolicyInputProperties",
          "description": "Policy creation properties."
        }
      }
    },
    "CreatePolicyInputProperties": {
      "description": "Policy creation properties.",
      "type": "object",
      "properties": {
        "providerSpecificInput": {
          "$ref": "#/definitions/PolicyProviderSpecificInput",
          "description": "The ReplicationProviderSettings."
        }
      }
    },
    "CreateProtectionContainerInput": {
      "description": "Create protection container input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreateProtectionContainerInputProperties",
          "description": "Create protection container input properties."
        }
      }
    },
    "CreateProtectionContainerInputProperties": {
      "description": "Create protection container input properties.",
      "type": "object",
      "properties": {
        "providerSpecificInput": {
          "description": "Provider specific inputs for container creation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReplicationProviderSpecificContainerCreationInput"
          }
        }
      }
    },
    "CreateProtectionContainerMappingInput": {
      "description": "Configure pairing input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreateProtectionContainerMappingInputProperties",
          "description": "Configure protection input properties."
        }
      }
    },
    "CreateProtectionContainerMappingInputProperties": {
      "description": "Configure pairing input properties.",
      "type": "object",
      "properties": {
        "targetProtectionContainerId": {
          "description": "The target unique protection container name.",
          "type": "string"
        },
        "policyId": {
          "description": "Applicable policy.",
          "type": "string"
        },
        "providerSpecificInput": {
          "$ref": "#/definitions/ReplicationProviderSpecificContainerMappingInput",
          "description": "Provider specific input for pairing."
        }
      }
    },
    "CreateRecoveryPlanInput": {
      "description": "Create recovery plan input class.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreateRecoveryPlanInputProperties",
          "description": "Recovery plan creation properties."
        }
      }
    },
    "CreateRecoveryPlanInputProperties": {
      "description": "Recovery plan creation properties.",
      "required": [
        "primaryFabricId",
        "recoveryFabricId",
        "groups"
      ],
      "type": "object",
      "properties": {
        "primaryFabricId": {
          "description": "The primary fabric Id.",
          "type": "string"
        },
        "recoveryFabricId": {
          "description": "The recovery fabric Id.",
          "type": "string"
        },
        "failoverDeploymentModel": {
          "description": "The failover deployment model.",
          "enum": [
            "NotApplicable",
            "Classic",
            "ResourceManager"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FailoverDeploymentModel",
            "modelAsString": true
          }
        },
        "groups": {
          "description": "The recovery plan groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanGroup"
          }
        },
        "providerSpecificInput": {
          "description": "The provider specific input.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProviderSpecificInput"
          }
        }
      }
    },
    "CurrentJobDetails": {
      "description": "Current job details of the migration item.",
      "type": "object",
      "properties": {
        "jobName": {
          "description": "The job name.",
          "type": "string"
        },
        "jobId": {
          "description": "The ARM Id of the job being executed.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "The start time of the job.",
          "type": "string"
        }
      }
    },
    "CurrentScenarioDetails": {
      "description": "Current scenario details of the protected entity.",
      "type": "object",
      "properties": {
        "scenarioName": {
          "description": "Scenario name.",
          "type": "string"
        },
        "jobId": {
          "description": "ARM Id of the job being executed.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of the workflow.",
          "type": "string"
        }
      }
    },
    "DataStore": {
      "description": "The data store details of the MT.",
      "type": "object",
      "properties": {
        "symbolicName": {
          "description": "The symbolic name of data store.",
          "type": "string"
        },
        "uuid": {
          "description": "The uuid of data store.",
          "type": "string"
        },
        "capacity": {
          "description": "The capacity of data store in GBs.",
          "type": "string"
        },
        "freeSpace": {
          "description": "The free space of data store in GBs.",
          "type": "string"
        },
        "type": {
          "description": "The type of data store.",
          "type": "string"
        }
      }
    },
    "DisableProtectionInput": {
      "description": "Disable protection input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DisableProtectionInputProperties",
          "description": "Disable protection input properties."
        }
      }
    },
    "DisableProtectionInputProperties": {
      "description": "Disable protection input properties.",
      "type": "object",
      "properties": {
        "disableProtectionReason": {
          "description": "Disable protection reason. It can have values NotSpecified/MigrationComplete.",
          "enum": [
            "NotSpecified",
            "MigrationComplete"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DisableProtectionReason",
            "modelAsString": true
          }
        },
        "replicationProviderInput": {
          "$ref": "#/definitions/DisableProtectionProviderSpecificInput",
          "description": "Replication provider specific input."
        }
      }
    },
    "DisableProtectionProviderSpecificInput": {
      "description": "Disable protection provider specific input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "DiscoverProtectableItemRequest": {
      "description": "Request to add a physical machine as a protectable item in a container.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiscoverProtectableItemRequestProperties",
          "description": "The properties of a discover protectable item request."
        }
      }
    },
    "DiscoverProtectableItemRequestProperties": {
      "description": "Discover protectable item properties.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "The friendly name of the physical machine.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address of the physical machine to be discovered.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type on the physical machine.",
          "type": "string"
        }
      }
    },
    "DiskDetails": {
      "description": "On-prem disk details data.",
      "type": "object",
      "properties": {
        "maxSizeMB": {
          "format": "int64",
          "description": "The hard disk max size in MB.",
          "type": "integer"
        },
        "vhdType": {
          "description": "The type of the volume.",
          "type": "string"
        },
        "vhdId": {
          "description": "The VHD Id.",
          "type": "string"
        },
        "vhdName": {
          "description": "The VHD name.",
          "type": "string"
        }
      }
    },
    "DiskEncryptionInfo": {
      "description": "Recovery disk encryption info (BEK and KEK).",
      "type": "object",
      "properties": {
        "diskEncryptionKeyInfo": {
          "$ref": "#/definitions/DiskEncryptionKeyInfo",
          "description": "The recovery KeyVault reference for secret."
        },
        "keyEncryptionKeyInfo": {
          "$ref": "#/definitions/KeyEncryptionKeyInfo",
          "description": "The recovery KeyVault reference for key."
        }
      }
    },
    "DiskEncryptionKeyInfo": {
      "description": "Disk Encryption Key Information (BitLocker Encryption Key (BEK) on Windows).",
      "type": "object",
      "properties": {
        "secretIdentifier": {
          "description": "The secret url / identifier.",
          "type": "string"
        },
        "keyVaultResourceArmId": {
          "description": "The KeyVault resource ARM id for secret.",
          "type": "string"
        }
      }
    },
    "DiskVolumeDetails": {
      "description": "Volume details.",
      "type": "object",
      "properties": {
        "label": {
          "description": "The volume label.",
          "type": "string"
        },
        "name": {
          "description": "The volume name.",
          "type": "string"
        }
      }
    },
    "Display": {
      "description": "Contains the localized display information for this particular operation / action. These value will be used by several clients for (1) custom role definitions for RBAC; (2) complex query filters for the event service; and (3) audit history / records for management operations.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "The provider. The localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. It should use Title Casing and begin with \"Microsoft\" for 1st party services. e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute.\"",
          "type": "string"
        },
        "resource": {
          "description": "The resource. The localized friendly form of the resource related to this action/operation – it should match the public documentation for the resource provider. It should use Title Casing. This value should be unique for a particular URL type (e.g. nested types should *not* reuse their parent’s display.resource field). e.g. \"Virtual Machines\" or \"Scheduler Job Collections\", or \"Virtual Machine VM Sizes\" or \"Scheduler Jobs\"",
          "type": "string"
        },
        "operation": {
          "description": "The operation. The localized friendly name for the operation, as it should be shown to the user. It should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing. Prescriptive guidance: Read Create or Update Delete 'ActionName'",
          "type": "string"
        },
        "description": {
          "description": "The description. The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise – it will be used in tool tips and detailed views. Prescriptive guidance for namespaces: Read any 'display.provider' resource Create or Update any 'display.provider' resource Delete any 'display.provider' resource Perform any other action on any 'display.provider' resource Prescriptive guidance for namespaces: Read any 'display.resource' Create or Update any 'display.resource' Delete any 'display.resource' 'ActionName' any 'display.resources'",
          "type": "string"
        }
      }
    },
    "EnableMigrationInput": {
      "description": "Enable migration input.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnableMigrationInputProperties",
          "description": "Enable migration input properties."
        }
      }
    },
    "EnableMigrationInputProperties": {
      "description": "Enable migration input properties.",
      "required": [
        "policyId",
        "providerSpecificDetails"
      ],
      "type": "object",
      "properties": {
        "policyId": {
          "description": "The policy Id.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/EnableMigrationProviderSpecificInput",
          "description": "The provider specific details."
        }
      }
    },
    "EnableMigrationProviderSpecificInput": {
      "description": "Enable migration provider specific input.",
      "required": [
        "instanceType"
      ],
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "EnableProtectionInput": {
      "description": "Enable protection input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnableProtectionInputProperties",
          "description": "Enable protection input properties."
        }
      }
    },
    "EnableProtectionInputProperties": {
      "description": "Enable protection input properties.",
      "type": "object",
      "properties": {
        "policyId": {
          "description": "The Policy Id.",
          "type": "string"
        },
        "protectableItemId": {
          "description": "The protectable item Id.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput",
          "description": "The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null."
        }
      }
    },
    "EnableProtectionProviderSpecificInput": {
      "description": "Enable protection provider specific input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "EncryptionDetails": {
      "description": "Encryption details for the fabric.",
      "type": "object",
      "properties": {
        "kekState": {
          "description": "The key encryption key state for the Vmm.",
          "type": "string"
        },
        "kekCertThumbprint": {
          "description": "The key encryption key certificate thumbprint.",
          "type": "string"
        },
        "kekCertExpiryDate": {
          "format": "date-time",
          "description": "The key encryption key certificate expiry date.",
          "type": "string"
        }
      }
    },
    "Event": {
      "description": "Implements the Event class.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventProperties",
          "description": "Event related data."
        }
      }
    },
    "EventCollection": {
      "description": "Collection of fabric details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of events.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "EventProperties": {
      "description": "The properties of a monitoring event.",
      "type": "object",
      "properties": {
        "eventCode": {
          "description": "The Id of the monitoring event.",
          "type": "string"
        },
        "description": {
          "description": "The event name.",
          "type": "string"
        },
        "eventType": {
          "description": "The type of the event. for example: VM Health, Server Health, Job Failure etc.",
          "type": "string"
        },
        "affectedObjectFriendlyName": {
          "description": "The friendly name of the source of the event on which it is raised (for example, VM, VMM etc).",
          "type": "string"
        },
        "severity": {
          "description": "The severity of the event.",
          "type": "string"
        },
        "timeOfOccurrence": {
          "format": "date-time",
          "description": "The time of occurrence of the event.",
          "type": "string"
        },
        "fabricId": {
          "description": "The ARM ID of the fabric.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/EventProviderSpecificDetails",
          "description": "The provider specific settings."
        },
        "eventSpecificDetails": {
          "$ref": "#/definitions/EventSpecificDetails",
          "description": "The event specific settings."
        },
        "healthErrors": {
          "description": "The list of errors / warnings capturing details associated with the issue(s).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        }
      }
    },
    "EventProviderSpecificDetails": {
      "description": "Model class for provider specific details for an event.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overridden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "EventQueryParameter": {
      "description": "Implements the event query parameter.",
      "type": "object",
      "properties": {
        "eventCode": {
          "description": "The source id of the events to be queried.",
          "type": "string"
        },
        "severity": {
          "description": "The severity of the events to be queried.",
          "type": "string"
        },
        "eventType": {
          "description": "The type of the events to be queried.",
          "type": "string"
        },
        "fabricName": {
          "description": "The affected object server id of the events to be queried.",
          "type": "string"
        },
        "affectedObjectFriendlyName": {
          "description": "The affected object name of the events to be queried.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "The start time of the time range within which the events are to be queried.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The end time of the time range within which the events are to be queried.",
          "type": "string"
        }
      }
    },
    "EventSpecificDetails": {
      "description": "Model class for event specific details for an event.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overridden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "ExportJobDetails": {
      "description": "This class represents details for export jobs workflow.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "properties": {
        "blobUri": {
          "description": "BlobUri of the exported jobs.",
          "type": "string"
        },
        "sasToken": {
          "description": "The sas token to access blob.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "ExportJobDetails"
    },
    "Fabric": {
      "description": "Fabric definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FabricProperties",
          "description": "Fabric related data."
        }
      }
    },
    "FabricCollection": {
      "description": "Collection of fabric details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The fabric details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fabric"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "FabricCreationInput": {
      "description": "Site details provided during the time of site creation",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FabricCreationInputProperties",
          "description": "Fabric creation input."
        }
      }
    },
    "FabricCreationInputProperties": {
      "description": "Properties of site details provided during the time of site creation",
      "type": "object",
      "properties": {
        "customDetails": {
          "$ref": "#/definitions/FabricSpecificCreationInput",
          "description": "Fabric provider specific creation input."
        }
      }
    },
    "FabricProperties": {
      "description": "Fabric properties.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the fabric.",
          "type": "string"
        },
        "encryptionDetails": {
          "$ref": "#/definitions/EncryptionDetails",
          "description": "Encryption details for the fabric."
        },
        "rolloverEncryptionDetails": {
          "$ref": "#/definitions/EncryptionDetails",
          "description": "Rollover encryption details for the fabric."
        },
        "internalIdentifier": {
          "description": "Dra Registration Id.",
          "type": "string"
        },
        "bcdrState": {
          "description": "BCDR state of the fabric.",
          "type": "string"
        },
        "customDetails": {
          "$ref": "#/definitions/FabricSpecificDetails",
          "description": "Fabric specific settings."
        },
        "healthErrorDetails": {
          "description": "Fabric health error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        },
        "health": {
          "description": "Health of fabric.",
          "type": "string"
        }
      }
    },
    "FabricReplicationGroupTaskDetails": {
      "description": "This class represents the fabric replication group task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "skippedReason": {
          "description": "The skipped reason.",
          "type": "string"
        },
        "skippedReasonString": {
          "description": "The skipped reason string.",
          "type": "string"
        },
        "jobTask": {
          "$ref": "#/definitions/JobEntity",
          "description": "The job entity."
        }
      },
      "x-ms-discriminator-value": "FabricReplicationGroupTaskDetails"
    },
    "FabricSpecificCreateNetworkMappingInput": {
      "description": "Input details specific to fabrics during Network Mapping.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The instance type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "FabricSpecificCreationInput": {
      "description": "Fabric provider specific settings.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "FabricSpecificDetails": {
      "description": "Fabric specific details.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overridden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "FabricSpecificUpdateNetworkMappingInput": {
      "description": "Input details specific to fabrics during Network Mapping.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The instance type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "FailoverJobDetails": {
      "description": "This class represents the details for a failover job.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "properties": {
        "protectedItemDetails": {
          "description": "The test VM details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailoverReplicationProtectedItemDetails"
          }
        }
      },
      "x-ms-discriminator-value": "FailoverJobDetails"
    },
    "FailoverProcessServerRequest": {
      "description": "Request to failover a process server.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FailoverProcessServerRequestProperties",
          "description": "The properties of the PS Failover request."
        }
      }
    },
    "FailoverProcessServerRequestProperties": {
      "description": "The properties of the Failover Process Server request.",
      "type": "object",
      "properties": {
        "containerName": {
          "description": "The container identifier.",
          "type": "string"
        },
        "sourceProcessServerId": {
          "description": "The source process server.",
          "type": "string"
        },
        "targetProcessServerId": {
          "description": "The new process server.",
          "type": "string"
        },
        "vmsToMigrate": {
          "description": "The VMS to migrate.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateType": {
          "description": "A value for failover type. It can be systemlevel/serverlevel",
          "type": "string"
        }
      }
    },
    "FailoverReplicationProtectedItemDetails": {
      "description": "Failover details for a replication protected item.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The friendly name.",
          "type": "string"
        },
        "testVmName": {
          "description": "The test Vm name.",
          "type": "string"
        },
        "testVmFriendlyName": {
          "description": "The test Vm friendly name.",
          "type": "string"
        },
        "networkConnectionStatus": {
          "description": "The network connection status.",
          "type": "string"
        },
        "networkFriendlyName": {
          "description": "The network friendly name.",
          "type": "string"
        },
        "subnet": {
          "description": "The network subnet.",
          "type": "string"
        },
        "recoveryPointId": {
          "description": "The recovery point Id.",
          "type": "string"
        },
        "recoveryPointTime": {
          "format": "date-time",
          "description": "The recovery point time.",
          "type": "string"
        }
      }
    },
    "GroupTaskDetails": {
      "description": "This class represents the group task details when parent child relationship exists in the drill down.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The type of task details.",
          "type": "string"
        },
        "childTasks": {
          "description": "The child tasks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ASRTask"
          }
        }
      },
      "discriminator": "instanceType"
    },
    "HealthError": {
      "description": "Health Error",
      "type": "object",
      "properties": {
        "innerHealthErrors": {
          "description": "The inner health errors. HealthError having a list of HealthError as child errors is problematic. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InnerHealthError"
          }
        },
        "errorSource": {
          "description": "Source of error.",
          "type": "string"
        },
        "errorType": {
          "description": "Type of error.",
          "type": "string"
        },
        "errorLevel": {
          "description": "Level of error.",
          "type": "string"
        },
        "errorCategory": {
          "description": "Category of error.",
          "type": "string"
        },
        "errorCode": {
          "description": "Error code.",
          "type": "string"
        },
        "summaryMessage": {
          "description": "Summary message of the entity.",
          "type": "string"
        },
        "errorMessage": {
          "description": "Error message.",
          "type": "string"
        },
        "possibleCauses": {
          "description": "Possible causes of error.",
          "type": "string"
        },
        "recommendedAction": {
          "description": "Recommended action to resolve error.",
          "type": "string"
        },
        "creationTimeUtc": {
          "format": "date-time",
          "description": "Error creation time (UTC)",
          "type": "string"
        },
        "recoveryProviderErrorMessage": {
          "description": "DRA error message.",
          "type": "string"
        },
        "entityId": {
          "description": "ID of the entity.",
          "type": "string"
        },
        "errorId": {
          "description": "The health error unique id.",
          "type": "string"
        },
        "customerResolvability": {
          "description": "Value indicating whether the health error is customer resolvable.",
          "enum": [
            "Allowed",
            "NotAllowed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HealthErrorCustomerResolvability",
            "modelAsString": true
          }
        }
      }
    },
    "HealthErrorSummary": {
      "description": "class to define the summary of the health error details.",
      "type": "object",
      "properties": {
        "summaryCode": {
          "description": "The code of the health error.",
          "type": "string"
        },
        "category": {
          "description": "The category of the health error.",
          "enum": [
            "None",
            "Replication",
            "TestFailover",
            "Configuration",
            "FabricInfrastructure",
            "VersionExpiry",
            "AgentAutoUpdate"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HealthErrorCategory",
            "modelAsString": true
          }
        },
        "severity": {
          "description": "Severity of error.",
          "enum": [
            "NONE",
            "Warning",
            "Error",
            "Info"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Severity",
            "modelAsString": true
          }
        },
        "summaryMessage": {
          "description": "The summary message of the health error.",
          "type": "string"
        },
        "affectedResourceType": {
          "description": "The type of affected ARM resource.",
          "type": "string"
        },
        "affectedResourceSubtype": {
          "description": "The sub type of any subcomponent within the ARM resource that this might be applicable. Value remains null if not applicable.",
          "type": "string"
        },
        "affectedResourceCorrelationIds": {
          "description": "The list of affected resource correlation Ids. This can be used to uniquely identify the count of items affected by a specific category and severity as well as count of item affected by an specific issue.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "HyperVReplica2012EventDetails": {
      "description": "Model class for event details of a HyperVReplica E2E event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "properties": {
        "containerName": {
          "description": "The container friendly name.",
          "type": "string"
        },
        "fabricName": {
          "description": "The fabric friendly name.",
          "type": "string"
        },
        "remoteContainerName": {
          "description": "The remote container name.",
          "type": "string"
        },
        "remoteFabricName": {
          "description": "The remote fabric name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplica2012"
    },
    "HyperVReplica2012R2EventDetails": {
      "description": "Model class for event details of a HyperVReplica blue E2E event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "properties": {
        "containerName": {
          "description": "The container friendly name.",
          "type": "string"
        },
        "fabricName": {
          "description": "The fabric friendly name.",
          "type": "string"
        },
        "remoteContainerName": {
          "description": "The remote container name.",
          "type": "string"
        },
        "remoteFabricName": {
          "description": "The remote fabric name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplica2012R2"
    },
    "HyperVReplicaAzureApplyRecoveryPointInput": {
      "description": "ApplyRecoveryPoint input specific to HyperVReplicaAzure provider.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApplyRecoveryPointProviderSpecificInput"
        }
      ],
      "properties": {
        "vaultLocation": {
          "description": "The vault location where the recovery Vm resides.",
          "type": "string"
        },
        "primaryKekCertificatePfx": {
          "description": "The primary kek certificate pfx.",
          "type": "string"
        },
        "secondaryKekCertificatePfx": {
          "description": "The secondary kek certificate pfx.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzure"
    },
    "HyperVReplicaAzureEnableProtectionInput": {
      "description": "Azure specific enable protection input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "properties": {
        "hvHostVmId": {
          "description": "The Hyper-V host Vm Id.",
          "type": "string"
        },
        "vmName": {
          "description": "The Vm Name.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type associated with vm.",
          "type": "string"
        },
        "vhdId": {
          "description": "The OS disk VHD id associated with vm.",
          "type": "string"
        },
        "targetStorageAccountId": {
          "description": "The storage account name.",
          "type": "string"
        },
        "targetAzureNetworkId": {
          "description": "The selected target Azure network Id.",
          "type": "string"
        },
        "targetAzureSubnetId": {
          "description": "The selected target Azure subnet Id.",
          "type": "string"
        },
        "enableRdpOnTargetOption": {
          "description": "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "targetAzureVmName": {
          "description": "The target azure Vm Name.",
          "type": "string"
        },
        "logStorageAccountId": {
          "description": "The storage account to be used for logging during replication.",
          "type": "string"
        },
        "disksToInclude": {
          "description": "The list of VHD IDs of disks to be protected.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetAzureV1ResourceGroupId": {
          "description": "The Id of the target resource group (for classic deployment) in which the failover VM is to be created.",
          "type": "string"
        },
        "targetAzureV2ResourceGroupId": {
          "description": "The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.",
          "type": "string"
        },
        "useManagedDisks": {
          "description": "A value indicating whether managed disks should be used during failover.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzure"
    },
    "HyperVReplicaAzureEventDetails": {
      "description": "Model class for event details of a HyperVReplica E2A event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "properties": {
        "containerName": {
          "description": "The container friendly name.",
          "type": "string"
        },
        "fabricName": {
          "description": "The fabric friendly name.",
          "type": "string"
        },
        "remoteContainerName": {
          "description": "The remote container name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzure"
    },
    "HyperVReplicaAzureFailbackProviderInput": {
      "description": "HvrA provider specific input for failback.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "dataSyncOption": {
          "description": "Data sync option.",
          "type": "string"
        },
        "recoveryVmCreationOption": {
          "description": "ALR options to create alternate recovery.",
          "type": "string"
        },
        "providerIdForAlternateRecovery": {
          "description": "Provider ID for alternate location",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzureFailback"
    },
    "HyperVReplicaAzureFailoverProviderInput": {
      "description": "HvrA provider specific input for failover.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "vaultLocation": {
          "description": "Location of the vault.",
          "type": "string"
        },
        "primaryKekCertificatePfx": {
          "description": "Primary kek certificate pfx.",
          "type": "string"
        },
        "secondaryKekCertificatePfx": {
          "description": "Secondary kek certificate pfx.",
          "type": "string"
        },
        "recoveryPointId": {
          "description": "The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzure"
    },
    "HyperVReplicaAzurePolicyDetails": {
      "description": "Hyper-V Replica Azure specific protection profile details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPointHistoryDurationInHours": {
          "format": "int32",
          "description": "The duration (in hours) to which point the recovery history needs to be maintained.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.",
          "type": "integer"
        },
        "replicationInterval": {
          "format": "int32",
          "description": "The replication interval.",
          "type": "integer"
        },
        "onlineReplicationStartTime": {
          "description": "The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.",
          "type": "string"
        },
        "encryption": {
          "description": "A value indicating whether encryption is enabled for virtual machines in this cloud.",
          "type": "string"
        },
        "activeStorageAccountId": {
          "description": "The active storage account Id.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzure"
    },
    "HyperVReplicaAzurePolicyInput": {
      "description": "Hyper-V Replica Azure specific input for creating a protection profile.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryPointHistoryDuration": {
          "format": "int32",
          "description": "The duration (in hours) to which point the recovery history needs to be maintained.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.",
          "type": "integer"
        },
        "replicationInterval": {
          "format": "int32",
          "description": "The replication interval.",
          "type": "integer"
        },
        "onlineReplicationStartTime": {
          "description": "The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.",
          "type": "string"
        },
        "storageAccounts": {
          "description": "The list of storage accounts to which the VMs in the primary cloud can replicate to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzure"
    },
    "HyperVReplicaAzureReplicationDetails": {
      "description": "Hyper V Replica Azure provider specific settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "azureVmDiskDetails": {
          "description": "Azure VM Disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureVmDiskDetails"
          }
        },
        "recoveryAzureVmName": {
          "description": "Recovery Azure given name.",
          "type": "string"
        },
        "recoveryAzureVMSize": {
          "description": "The Recovery Azure VM size.",
          "type": "string"
        },
        "recoveryAzureStorageAccount": {
          "description": "The recovery Azure storage account.",
          "type": "string"
        },
        "recoveryAzureLogStorageAccountId": {
          "description": "The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.",
          "type": "string"
        },
        "lastReplicatedTime": {
          "format": "date-time",
          "description": "The Last replication time.",
          "type": "string"
        },
        "rpoInSeconds": {
          "format": "int64",
          "description": "Last RPO value.",
          "type": "integer"
        },
        "lastRpoCalculatedTime": {
          "format": "date-time",
          "description": "The last RPO calculated time.",
          "type": "string"
        },
        "vmId": {
          "description": "The virtual machine Id.",
          "type": "string"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        },
        "initialReplicationDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "Initial replication details."
        },
        "vmNics": {
          "description": "The PE Network details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          }
        },
        "selectedRecoveryAzureNetworkId": {
          "description": "The selected recovery azure network Id.",
          "type": "string"
        },
        "selectedSourceNicId": {
          "description": "The selected source nic Id which will be used as the primary nic during failover.",
          "type": "string"
        },
        "encryption": {
          "description": "The encryption info.",
          "type": "string"
        },
        "oSDetails": {
          "$ref": "#/definitions/OSDetails",
          "description": "The operating system info."
        },
        "sourceVmRamSizeInMB": {
          "format": "int32",
          "description": "The RAM size of the VM on the primary side.",
          "type": "integer"
        },
        "sourceVmCpuCount": {
          "format": "int32",
          "description": "The CPU count of the VM on the primary side.",
          "type": "integer"
        },
        "enableRdpOnTargetOption": {
          "description": "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "recoveryAzureResourceGroupId": {
          "description": "The target resource group Id.",
          "type": "string"
        },
        "recoveryAvailabilitySetId": {
          "description": "The recovery availability set Id.",
          "type": "string"
        },
        "useManagedDisks": {
          "description": "A value indicating whether managed disks should be used during failover.",
          "type": "string"
        },
        "licenseType": {
          "description": "License Type of the VM to be used.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzure"
    },
    "HyperVReplicaAzureReprotectInput": {
      "description": "Azure specific reprotect input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput"
        }
      ],
      "properties": {
        "hvHostVmId": {
          "description": "The Hyper-V host Vm Id.",
          "type": "string"
        },
        "vmName": {
          "description": "The Vm Name.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type associated with vm.",
          "type": "string"
        },
        "vHDId": {
          "description": "The OS disk VHD id associated with vm.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "The storage account name.",
          "type": "string"
        },
        "logStorageAccountId": {
          "description": "The storage account to be used for logging during replication.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzure"
    },
    "HyperVReplicaAzureUpdateReplicationProtectedItemInput": {
      "description": "HyperV replica Azure input to update replication protected item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateReplicationProtectedItemProviderInput"
        }
      ],
      "properties": {
        "recoveryAzureV1ResourceGroupId": {
          "description": "The recovery Azure resource group Id for classic deployment.",
          "type": "string"
        },
        "recoveryAzureV2ResourceGroupId": {
          "description": "The recovery Azure resource group Id for resource manager deployment.",
          "type": "string"
        },
        "useManagedDisks": {
          "description": "A value indicating whether managed disks should be used during failover.",
          "type": "string"
        },
        "diskIdToDiskEncryptionMap": {
          "description": "The dictionary of disk resource Id to disk encryption set ARM Id.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzure"
    },
    "HyperVReplicaBaseEventDetails": {
      "description": "Abstract model class for event details of a HyperVReplica E2E event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "properties": {
        "containerName": {
          "description": "The container friendly name.",
          "type": "string"
        },
        "fabricName": {
          "description": "The fabric friendly name.",
          "type": "string"
        },
        "remoteContainerName": {
          "description": "The remote container name.",
          "type": "string"
        },
        "remoteFabricName": {
          "description": "The remote fabric name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaBaseEventDetails"
    },
    "HyperVReplicaBasePolicyDetails": {
      "description": "Base class for HyperVReplica policy details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPoints": {
          "format": "int32",
          "description": "A value indicating the number of recovery points.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "A value indicating the application consistent frequency.",
          "type": "integer"
        },
        "compression": {
          "description": "A value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "A value indicating whether IR is online.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "A value indicating the online IR start time.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "A value indicating the offline IR import path.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "A value indicating the offline IR export path.",
          "type": "string"
        },
        "replicationPort": {
          "format": "int32",
          "description": "A value indicating the recovery HTTPS port.",
          "type": "integer"
        },
        "allowedAuthenticationType": {
          "format": "int32",
          "description": "A value indicating the authentication type.",
          "type": "integer"
        },
        "replicaDeletionOption": {
          "description": "A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaBasePolicyDetails"
    },
    "HyperVReplicaBaseReplicationDetails": {
      "description": "Hyper V replica provider specific settings base class.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "lastReplicatedTime": {
          "format": "date-time",
          "description": "The Last replication time.",
          "type": "string"
        },
        "vmNics": {
          "description": "The PE Network details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          }
        },
        "vmId": {
          "description": "The virtual machine Id.",
          "type": "string"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        },
        "initialReplicationDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "Initial replication details."
        },
        "vMDiskDetails": {
          "description": "VM disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskDetails"
          }
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaBaseReplicationDetails"
    },
    "HyperVReplicaBluePolicyDetails": {
      "description": "Hyper-V Replica Blue specific protection profile details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "replicationFrequencyInSeconds": {
          "format": "int32",
          "description": "A value indicating the replication interval.",
          "type": "integer"
        },
        "recoveryPoints": {
          "format": "int32",
          "description": "A value indicating the number of recovery points.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "A value indicating the application consistent frequency.",
          "type": "integer"
        },
        "compression": {
          "description": "A value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "A value indicating whether IR is online.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "A value indicating the online IR start time.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "A value indicating the offline IR import path.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "A value indicating the offline IR export path.",
          "type": "string"
        },
        "replicationPort": {
          "format": "int32",
          "description": "A value indicating the recovery HTTPS port.",
          "type": "integer"
        },
        "allowedAuthenticationType": {
          "format": "int32",
          "description": "A value indicating the authentication type.",
          "type": "integer"
        },
        "replicaDeletionOption": {
          "description": "A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplica2012R2"
    },
    "HyperVReplicaBluePolicyInput": {
      "description": "HyperV Replica Blue policy input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "properties": {
        "replicationFrequencyInSeconds": {
          "format": "int32",
          "description": "A value indicating the replication interval.",
          "type": "integer"
        },
        "recoveryPoints": {
          "format": "int32",
          "description": "A value indicating the number of recovery points.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "A value indicating the application consistent frequency.",
          "type": "integer"
        },
        "compression": {
          "description": "A value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "A value indicating whether IR is online.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "A value indicating the online IR start time.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "A value indicating the offline IR import path.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "A value indicating the offline IR export path.",
          "type": "string"
        },
        "replicationPort": {
          "format": "int32",
          "description": "A value indicating the recovery HTTPS port.",
          "type": "integer"
        },
        "allowedAuthenticationType": {
          "format": "int32",
          "description": "A value indicating the authentication type.",
          "type": "integer"
        },
        "replicaDeletion": {
          "description": "A value indicating whether the VM has to be auto deleted.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplica2012R2"
    },
    "HyperVReplicaBlueReplicationDetails": {
      "description": "HyperV replica 2012 R2 (Blue) replication details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "lastReplicatedTime": {
          "format": "date-time",
          "description": "The Last replication time.",
          "type": "string"
        },
        "vmNics": {
          "description": "The PE Network details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          }
        },
        "vmId": {
          "description": "The virtual machine Id.",
          "type": "string"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        },
        "initialReplicationDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "Initial replication details."
        },
        "vMDiskDetails": {
          "description": "VM disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskDetails"
          }
        }
      },
      "x-ms-discriminator-value": "HyperVReplica2012R2"
    },
    "HyperVReplicaPolicyDetails": {
      "description": "Hyper-V Replica Blue specific protection profile details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPoints": {
          "format": "int32",
          "description": "A value indicating the number of recovery points.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "A value indicating the application consistent frequency.",
          "type": "integer"
        },
        "compression": {
          "description": "A value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "A value indicating whether IR is online.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "A value indicating the online IR start time.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "A value indicating the offline IR import path.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "A value indicating the offline IR export path.",
          "type": "string"
        },
        "replicationPort": {
          "format": "int32",
          "description": "A value indicating the recovery HTTPS port.",
          "type": "integer"
        },
        "allowedAuthenticationType": {
          "format": "int32",
          "description": "A value indicating the authentication type.",
          "type": "integer"
        },
        "replicaDeletionOption": {
          "description": "A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplica2012"
    },
    "HyperVReplicaPolicyInput": {
      "description": "Hyper-V Replica specific policy Input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryPoints": {
          "format": "int32",
          "description": "A value indicating the number of recovery points.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "A value indicating the application consistent frequency.",
          "type": "integer"
        },
        "compression": {
          "description": "A value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "A value indicating whether IR is online.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "A value indicating the online IR start time.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "A value indicating the offline IR import path.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "A value indicating the offline IR export path.",
          "type": "string"
        },
        "replicationPort": {
          "format": "int32",
          "description": "A value indicating the recovery HTTPS port.",
          "type": "integer"
        },
        "allowedAuthenticationType": {
          "format": "int32",
          "description": "A value indicating the authentication type.",
          "type": "integer"
        },
        "replicaDeletion": {
          "description": "A value indicating whether the VM has to be auto deleted.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplica2012"
    },
    "HyperVReplicaReplicationDetails": {
      "description": "HyperV replica 2012 replication details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "lastReplicatedTime": {
          "format": "date-time",
          "description": "The Last replication time.",
          "type": "string"
        },
        "vmNics": {
          "description": "The PE Network details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          }
        },
        "vmId": {
          "description": "The virtual machine Id.",
          "type": "string"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        },
        "initialReplicationDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "Initial replication details."
        },
        "vMDiskDetails": {
          "description": "VM disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskDetails"
          }
        }
      },
      "x-ms-discriminator-value": "HyperVReplica2012"
    },
    "HyperVSiteDetails": {
      "description": "HyperVSite fabric specific details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificDetails"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "HyperVSite"
    },
    "HyperVVirtualMachineDetails": {
      "description": "Single Host fabric provider specific VM settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ConfigurationSettings"
        }
      ],
      "properties": {
        "sourceItemId": {
          "description": "The source id of the object.",
          "type": "string"
        },
        "generation": {
          "description": "The id of the object in fabric.",
          "type": "string"
        },
        "osDetails": {
          "$ref": "#/definitions/OSDetails",
          "description": "The Last replication time."
        },
        "diskDetails": {
          "description": "The Last successful failover time.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskDetails"
          }
        },
        "hasPhysicalDisk": {
          "description": "A value indicating whether the VM has a physical disk attached. String value of {SrsDataContract.PresenceStatus} enum.",
          "enum": [
            "Unknown",
            "Present",
            "NotPresent"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PresenceStatus",
            "modelAsString": true
          }
        },
        "hasFibreChannelAdapter": {
          "description": "A value indicating whether the VM has a fibre channel adapter attached. String value of {SrsDataContract.PresenceStatus} enum.",
          "enum": [
            "Unknown",
            "Present",
            "NotPresent"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PresenceStatus",
            "modelAsString": true
          }
        },
        "hasSharedVhd": {
          "description": "A value indicating whether the VM has a shared VHD attached. String value of {SrsDataContract.PresenceStatus} enum.",
          "enum": [
            "Unknown",
            "Present",
            "NotPresent"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PresenceStatus",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "HyperVVirtualMachine"
    },
    "IdentityProviderDetails": {
      "description": "Identity provider details.",
      "type": "object",
      "properties": {
        "tenantId": {
          "description": "The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.",
          "type": "string"
        },
        "applicationId": {
          "description": "The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.",
          "type": "string"
        },
        "objectId": {
          "description": "The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.",
          "type": "string"
        },
        "audience": {
          "description": "The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.",
          "type": "string"
        },
        "aadAuthority": {
          "description": "The base authority for Azure Active Directory authentication.",
          "type": "string"
        }
      }
    },
    "IdentityProviderInput": {
      "description": "Identity provider input.",
      "required": [
        "tenantId",
        "applicationId",
        "objectId",
        "audience",
        "aadAuthority"
      ],
      "type": "object",
      "properties": {
        "tenantId": {
          "description": "The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.",
          "type": "string"
        },
        "applicationId": {
          "description": "The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.",
          "type": "string"
        },
        "objectId": {
          "description": "The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.",
          "type": "string"
        },
        "audience": {
          "description": "The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.",
          "type": "string"
        },
        "aadAuthority": {
          "description": "The base authority for Azure Active Directory authentication.",
          "type": "string"
        }
      }
    },
    "InconsistentVmDetails": {
      "description": "This class stores the monitoring details for consistency check of inconsistent Protected Entity.",
      "type": "object",
      "properties": {
        "vmName": {
          "description": "The Vm name.",
          "type": "string"
        },
        "cloudName": {
          "description": "The Cloud name.",
          "type": "string"
        },
        "details": {
          "description": "The list of details regarding state of the Protected Entity in SRS and On prem.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errorIds": {
          "description": "The list of error ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InitialReplicationDetails": {
      "description": "Initial replication details.",
      "type": "object",
      "properties": {
        "initialReplicationType": {
          "description": "Initial replication type.",
          "type": "string"
        },
        "initialReplicationProgressPercentage": {
          "description": "The initial replication progress percentage.",
          "type": "string"
        }
      }
    },
    "InlineWorkflowTaskDetails": {
      "description": "This class represents the inline workflow task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GroupTaskDetails"
        }
      ],
      "properties": {
        "workflowIds": {
          "description": "The list of child workflow ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "InlineWorkflowTaskDetails"
    },
    "InMageAgentDetails": {
      "description": "The details of the InMage agent.",
      "type": "object",
      "properties": {
        "agentVersion": {
          "description": "The agent version.",
          "type": "string"
        },
        "agentUpdateStatus": {
          "description": "A value indicating whether installed agent needs to be updated.",
          "type": "string"
        },
        "postUpdateRebootStatus": {
          "description": "A value indicating whether reboot is required after update is applied.",
          "type": "string"
        },
        "agentExpiryDate": {
          "format": "date-time",
          "description": "Agent expiry date.",
          "type": "string"
        }
      }
    },
    "InMageAgentVersionDetails": {
      "description": "InMage agent version details.",
      "type": "object",
      "properties": {
        "postUpdateRebootStatus": {
          "description": "A value indicating whether reboot is required after update is applied.",
          "type": "string"
        },
        "version": {
          "description": "The agent version.",
          "type": "string"
        },
        "expiryDate": {
          "format": "date-time",
          "description": "Version expiry date.",
          "type": "string"
        },
        "status": {
          "description": "A value indicating whether security update required.",
          "enum": [
            "Supported",
            "NotSupported",
            "Deprecated",
            "UpdateRequired",
            "SecurityUpdateRequired"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AgentVersionStatus",
            "modelAsString": true
          }
        }
      }
    },
    "InMageAzureV2ApplyRecoveryPointInput": {
      "description": "ApplyRecoveryPoint input specific to InMageAzureV2 provider.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApplyRecoveryPointProviderSpecificInput"
        }
      ],
      "properties": {
        "vaultLocation": {
          "description": "The vault location where the recovery Vm resides.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2"
    },
    "InMageAzureV2DiskInputDetails": {
      "description": "Disk input details.",
      "type": "object",
      "properties": {
        "diskId": {
          "description": "The DiskId.",
          "type": "string"
        },
        "logStorageAccountId": {
          "description": "The LogStorageAccountId.",
          "type": "string"
        },
        "diskType": {
          "description": "The DiskType.",
          "enum": [
            "Standard_LRS",
            "Premium_LRS",
            "StandardSSD_LRS"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DiskAccountType",
            "modelAsString": true
          }
        },
        "diskEncryptionSetId": {
          "description": "The DiskEncryptionSet ARM ID.",
          "type": "string"
        }
      }
    },
    "InMageAzureV2EnableProtectionInput": {
      "description": "VMware Azure specific enable protection input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "properties": {
        "masterTargetId": {
          "description": "The Master target Id.",
          "type": "string"
        },
        "processServerId": {
          "description": "The Process Server Id.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "The storage account name.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The CS account Id.",
          "type": "string"
        },
        "multiVmGroupId": {
          "description": "The multi vm group Id.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "The multi vm group name.",
          "type": "string"
        },
        "disksToInclude": {
          "description": "The disks to include list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InMageAzureV2DiskInputDetails"
          }
        },
        "targetAzureNetworkId": {
          "description": "The selected target Azure network Id.",
          "type": "string"
        },
        "targetAzureSubnetId": {
          "description": "The selected target Azure subnet Id.",
          "type": "string"
        },
        "enableRdpOnTargetOption": {
          "description": "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "targetAzureVmName": {
          "description": "The target azure Vm Name.",
          "type": "string"
        },
        "logStorageAccountId": {
          "description": "The storage account to be used for logging during replication.",
          "type": "string"
        },
        "targetAzureV1ResourceGroupId": {
          "description": "The Id of the target resource group (for classic deployment) in which the failover VM is to be created.",
          "type": "string"
        },
        "targetAzureV2ResourceGroupId": {
          "description": "The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.",
          "type": "string"
        },
        "diskType": {
          "description": "The DiskType.",
          "enum": [
            "Standard_LRS",
            "Premium_LRS",
            "StandardSSD_LRS"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DiskAccountType",
            "modelAsString": true
          }
        },
        "diskEncryptionSetId": {
          "description": "The DiskEncryptionSet ARM ID.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2"
    },
    "InMageAzureV2EventDetails": {
      "description": "Model class for event details of a VMwareAzureV2 event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "properties": {
        "eventType": {
          "description": "InMage Event type. Takes one of the values of {InMageDataContract.InMageMonitoringEventType}.",
          "type": "string"
        },
        "category": {
          "description": "InMage Event Category.",
          "type": "string"
        },
        "component": {
          "description": "InMage Event Component.",
          "type": "string"
        },
        "correctiveAction": {
          "description": "Corrective Action string for the event.",
          "type": "string"
        },
        "details": {
          "description": "InMage Event Details.",
          "type": "string"
        },
        "summary": {
          "description": "InMage Event Summary.",
          "type": "string"
        },
        "siteName": {
          "description": "VMware Site name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2"
    },
    "InMageAzureV2FailoverProviderInput": {
      "description": "InMageAzureV2 provider specific input for failover.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "vaultLocation": {
          "description": "Location of the vault.",
          "type": "string"
        },
        "recoveryPointId": {
          "description": "The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2"
    },
    "InMageAzureV2ManagedDiskDetails": {
      "description": "InMageAzureV2 Managed disk details.",
      "type": "object",
      "properties": {
        "diskId": {
          "description": "The disk id.",
          "type": "string"
        },
        "seedManagedDiskId": {
          "description": "Seed managed disk Id.",
          "type": "string"
        },
        "replicaDiskType": {
          "description": "The replica disk type.",
          "type": "string"
        }
      }
    },
    "InMageAzureV2PolicyDetails": {
      "description": "InMage Azure v2 specific protection profile details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "crashConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The crash consistent snapshot frequency in minutes.",
          "type": "integer"
        },
        "recoveryPointThresholdInMinutes": {
          "format": "int32",
          "description": "The recovery point threshold in minutes.",
          "type": "integer"
        },
        "recoveryPointHistory": {
          "format": "int32",
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The app consistent snapshot frequency in minutes.",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2"
    },
    "InMageAzureV2PolicyInput": {
      "description": "VMWare Azure specific policy Input.",
      "required": [
        "multiVmSyncStatus"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryPointThresholdInMinutes": {
          "format": "int32",
          "description": "The recovery point threshold in minutes.",
          "type": "integer"
        },
        "recoveryPointHistory": {
          "format": "int32",
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "type": "integer"
        },
        "crashConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The crash consistent snapshot frequency (in minutes).",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The app consistent snapshot frequency (in minutes).",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.",
          "enum": [
            "Enable",
            "Disable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SetMultiVmSyncStatus",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2"
    },
    "InMageAzureV2ProtectedDiskDetails": {
      "description": "InMageAzureV2 protected disk details.",
      "type": "object",
      "properties": {
        "diskId": {
          "description": "The disk id.",
          "type": "string"
        },
        "diskName": {
          "description": "The disk name.",
          "type": "string"
        },
        "protectionStage": {
          "description": "The protection stage.",
          "type": "string"
        },
        "healthErrorCode": {
          "description": "The health error code for the disk.",
          "type": "string"
        },
        "rpoInSeconds": {
          "format": "int64",
          "description": "The RPO in seconds.",
          "type": "integer"
        },
        "resyncRequired": {
          "description": "A value indicating whether resync is required for this disk.",
          "type": "string"
        },
        "resyncProgressPercentage": {
          "format": "int32",
          "description": "The resync progress percentage.",
          "type": "integer"
        },
        "resyncDurationInSeconds": {
          "format": "int64",
          "description": "The resync duration in seconds.",
          "type": "integer"
        },
        "diskCapacityInBytes": {
          "format": "int64",
          "description": "The disk capacity in bytes.",
          "type": "integer"
        },
        "fileSystemCapacityInBytes": {
          "format": "int64",
          "description": "The disk file system capacity in bytes.",
          "type": "integer"
        },
        "sourceDataInMegaBytes": {
          "format": "double",
          "description": "The source data transit in MB.",
          "type": "number"
        },
        "psDataInMegaBytes": {
          "format": "double",
          "description": "The PS data transit in MB.",
          "type": "number"
        },
        "targetDataInMegaBytes": {
          "format": "double",
          "description": "The target data transit in MB.",
          "type": "number"
        },
        "diskResized": {
          "description": "A value indicating whether disk is resized.",
          "type": "string"
        },
        "lastRpoCalculatedTime": {
          "format": "date-time",
          "description": "The last RPO calculated time.",
          "type": "string"
        }
      }
    },
    "InMageAzureV2RecoveryPointDetails": {
      "description": "InMage Azure V2 provider specific recovery point details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificRecoveryPointDetails"
        }
      ],
      "properties": {
        "isMultiVmSyncPoint": {
          "description": "A value indicating whether the recovery point is multi VM consistent.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2"
    },
    "InMageAzureV2ReplicationDetails": {
      "description": "InMageAzureV2 provider specific settings",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "infrastructureVmId": {
          "description": "The infrastructure VM Id.",
          "type": "string"
        },
        "vCenterInfrastructureId": {
          "description": "The vCenter infrastructure Id.",
          "type": "string"
        },
        "protectionStage": {
          "description": "The protection stage.",
          "type": "string"
        },
        "vmId": {
          "description": "The virtual machine Id.",
          "type": "string"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        },
        "resyncProgressPercentage": {
          "format": "int32",
          "description": "The resync progress percentage.",
          "type": "integer"
        },
        "rpoInSeconds": {
          "format": "int64",
          "description": "The RPO in seconds.",
          "type": "integer"
        },
        "compressedDataRateInMB": {
          "format": "double",
          "description": "The compressed data change rate in MB.",
          "type": "number"
        },
        "uncompressedDataRateInMB": {
          "format": "double",
          "description": "The uncompressed data change rate in MB.",
          "type": "number"
        },
        "ipAddress": {
          "description": "The source IP address.",
          "type": "string"
        },
        "agentVersion": {
          "description": "The agent version.",
          "type": "string"
        },
        "agentExpiryDate": {
          "format": "date-time",
          "description": "Agent expiry date.",
          "type": "string"
        },
        "isAgentUpdateRequired": {
          "description": "A value indicating whether installed agent needs to be updated.",
          "type": "string"
        },
        "isRebootAfterUpdateRequired": {
          "description": "A value indicating whether the source server requires a restart after update.",
          "type": "string"
        },
        "lastHeartbeat": {
          "format": "date-time",
          "description": "The last heartbeat received from the source server.",
          "type": "string"
        },
        "processServerId": {
          "description": "The process server Id.",
          "type": "string"
        },
        "multiVmGroupId": {
          "description": "The multi vm group Id.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "The multi vm group name.",
          "type": "string"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi vm sync is enabled or disabled.",
          "type": "string"
        },
        "protectedDisks": {
          "description": "The list of protected disks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InMageAzureV2ProtectedDiskDetails"
          }
        },
        "diskResized": {
          "description": "A value indicating whether any disk is resized for this VM.",
          "type": "string"
        },
        "masterTargetId": {
          "description": "The master target Id.",
          "type": "string"
        },
        "sourceVmCpuCount": {
          "format": "int32",
          "description": "The CPU count of the VM on the primary side.",
          "type": "integer"
        },
        "sourceVmRamSizeInMB": {
          "format": "int32",
          "description": "The RAM size of the VM on the primary side.",
          "type": "integer"
        },
        "osType": {
          "description": "The type of the OS on the VM.",
          "type": "string"
        },
        "vhdName": {
          "description": "The OS disk VHD name.",
          "type": "string"
        },
        "osDiskId": {
          "description": "The id of the disk containing the OS.",
          "type": "string"
        },
        "azureVMDiskDetails": {
          "description": "Azure VM Disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureVmDiskDetails"
          }
        },
        "recoveryAzureVMName": {
          "description": "Recovery Azure given name.",
          "type": "string"
        },
        "recoveryAzureVMSize": {
          "description": "The Recovery Azure VM size.",
          "type": "string"
        },
        "recoveryAzureStorageAccount": {
          "description": "The recovery Azure storage account.",
          "type": "string"
        },
        "recoveryAzureLogStorageAccountId": {
          "description": "The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.",
          "type": "string"
        },
        "vmNics": {
          "description": "The PE Network details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          }
        },
        "selectedRecoveryAzureNetworkId": {
          "description": "The selected recovery azure network Id.",
          "type": "string"
        },
        "selectedSourceNicId": {
          "description": "The selected source nic Id which will be used as the primary nic during failover.",
          "type": "string"
        },
        "discoveryType": {
          "description": "A value indicating the discovery type of the machine. Value can be vCenter or physical.",
          "type": "string"
        },
        "enableRdpOnTargetOption": {
          "description": "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "datastores": {
          "description": "The data stores of the on-premise machine. Value can be list of strings that contain data store names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetVmId": {
          "description": "The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.",
          "type": "string"
        },
        "recoveryAzureResourceGroupId": {
          "description": "The target resource group Id.",
          "type": "string"
        },
        "recoveryAvailabilitySetId": {
          "description": "The recovery availability set Id.",
          "type": "string"
        },
        "useManagedDisks": {
          "description": "A value indicating whether managed disks should be used during failover.",
          "type": "string"
        },
        "licenseType": {
          "description": "License Type of the VM to be used.",
          "type": "string"
        },
        "validationErrors": {
          "description": "The validation errors of the on-premise machine Value can be list of validation errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        },
        "lastRpoCalculatedTime": {
          "format": "date-time",
          "description": "The last RPO calculated time.",
          "type": "string"
        },
        "lastUpdateReceivedTime": {
          "format": "date-time",
          "description": "The last update time received from on-prem components.",
          "type": "string"
        },
        "replicaId": {
          "description": "The replica id of the protected item.",
          "type": "string"
        },
        "osVersion": {
          "description": "The OS Version of the protected item.",
          "type": "string"
        },
        "protectedManagedDisks": {
          "description": "The list of protected managed disks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InMageAzureV2ManagedDiskDetails"
          }
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2"
    },
    "InMageAzureV2ReprotectInput": {
      "description": "InMageAzureV2 specific provider input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput"
        }
      ],
      "properties": {
        "masterTargetId": {
          "description": "The Master target Id.",
          "type": "string"
        },
        "processServerId": {
          "description": "The Process Server Id.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "The storage account id.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The CS account Id.",
          "type": "string"
        },
        "policyId": {
          "description": "The Policy Id.",
          "type": "string"
        },
        "logStorageAccountId": {
          "description": "The storage account to be used for logging during replication.",
          "type": "string"
        },
        "disksToInclude": {
          "description": "The disks to include list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2"
    },
    "InMageAzureV2UpdateReplicationProtectedItemInput": {
      "description": "InMage Azure V2 input to update replication protected item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateReplicationProtectedItemProviderInput"
        }
      ],
      "properties": {
        "recoveryAzureV1ResourceGroupId": {
          "description": "The recovery Azure resource group Id for classic deployment.",
          "type": "string"
        },
        "recoveryAzureV2ResourceGroupId": {
          "description": "The recovery Azure resource group Id for resource manager deployment.",
          "type": "string"
        },
        "useManagedDisks": {
          "description": "A value indicating whether managed disks should be used during failover.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2"
    },
    "InMageBasePolicyDetails": {
      "description": "Base class for the policies of providers using InMage replication.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPointThresholdInMinutes": {
          "format": "int32",
          "description": "The recovery point threshold in minutes.",
          "type": "integer"
        },
        "recoveryPointHistory": {
          "format": "int32",
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The app consistent snapshot frequency in minutes.",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageBasePolicyDetails"
    },
    "InMageDisableProtectionProviderSpecificInput": {
      "description": "InMage disable protection provider specific input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DisableProtectionProviderSpecificInput"
        }
      ],
      "properties": {
        "replicaVmDeletionStatus": {
          "description": "A value indicating whether the replica VM should be destroyed or retained. Values from Delete and Retain.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMage"
    },
    "InMageDiskDetails": {
      "description": "VMware/Physical specific Disk Details",
      "type": "object",
      "properties": {
        "diskId": {
          "description": "The disk Id.",
          "type": "string"
        },
        "diskName": {
          "description": "The disk name.",
          "type": "string"
        },
        "diskSizeInMB": {
          "description": "The disk size in MB.",
          "type": "string"
        },
        "diskType": {
          "description": "Whether disk is system disk or data disk.",
          "type": "string"
        },
        "diskConfiguration": {
          "description": "Whether disk is dynamic disk or basic disk.",
          "type": "string"
        },
        "volumeList": {
          "description": "Volumes of the disk.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskVolumeDetails"
          }
        }
      }
    },
    "InMageDiskExclusionInput": {
      "description": "DiskExclusionInput when doing enable protection of virtual machine in InMage provider.",
      "type": "object",
      "properties": {
        "volumeOptions": {
          "description": "The volume label based option for disk exclusion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InMageVolumeExclusionOptions"
          }
        },
        "diskSignatureOptions": {
          "description": "The guest disk signature based option for disk exclusion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InMageDiskSignatureExclusionOptions"
          }
        }
      }
    },
    "InMageDiskSignatureExclusionOptions": {
      "description": "Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.",
      "type": "object",
      "properties": {
        "diskSignature": {
          "description": "The guest signature of disk to be excluded from replication.",
          "type": "string"
        }
      }
    },
    "InMageEnableProtectionInput": {
      "description": "VMware Azure specific enable protection input.",
      "required": [
        "masterTargetId",
        "processServerId",
        "retentionDrive",
        "multiVmGroupId",
        "multiVmGroupName"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "properties": {
        "vmFriendlyName": {
          "description": "The Vm Name.",
          "type": "string"
        },
        "masterTargetId": {
          "description": "The Master Target Id.",
          "type": "string"
        },
        "processServerId": {
          "description": "The Process Server Id.",
          "type": "string"
        },
        "retentionDrive": {
          "description": "The retention drive to use on the MT.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The CS account Id.",
          "type": "string"
        },
        "multiVmGroupId": {
          "description": "The multi vm group Id.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "The multi vm group name.",
          "type": "string"
        },
        "datastoreName": {
          "description": "The target data store name.",
          "type": "string"
        },
        "diskExclusionInput": {
          "$ref": "#/definitions/InMageDiskExclusionInput",
          "description": "The enable disk exclusion input."
        },
        "disksToInclude": {
          "description": "The disks to include list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "InMage"
    },
    "InMageFailoverProviderInput": {
      "description": "Provider specific input for InMage failover.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "recoveryPointType": {
          "description": "The recovery point type. Values from LatestTime, LatestTag or Custom. In the case of custom, the recovery point provided by RecoveryPointId will be used. In the other two cases, recovery point id will be ignored.",
          "enum": [
            "LatestTime",
            "LatestTag",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RecoveryPointType",
            "modelAsString": true
          }
        },
        "recoveryPointId": {
          "description": "The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMage"
    },
    "InMagePolicyDetails": {
      "description": "InMage specific protection profile details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPointThresholdInMinutes": {
          "format": "int32",
          "description": "The recovery point threshold in minutes.",
          "type": "integer"
        },
        "recoveryPointHistory": {
          "format": "int32",
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The app consistent snapshot frequency in minutes.",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMage"
    },
    "InMagePolicyInput": {
      "description": "VMWare Azure specific protection profile Input.",
      "required": [
        "multiVmSyncStatus"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryPointThresholdInMinutes": {
          "format": "int32",
          "description": "The recovery point threshold in minutes.",
          "type": "integer"
        },
        "recoveryPointHistory": {
          "format": "int32",
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The app consistent snapshot frequency (in minutes).",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.",
          "enum": [
            "Enable",
            "Disable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SetMultiVmSyncStatus",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "InMage"
    },
    "InMageProtectedDiskDetails": {
      "description": "InMage protected disk details.",
      "type": "object",
      "properties": {
        "diskId": {
          "description": "The disk id.",
          "type": "string"
        },
        "diskName": {
          "description": "The disk name.",
          "type": "string"
        },
        "protectionStage": {
          "description": "The protection stage.",
          "type": "string"
        },
        "healthErrorCode": {
          "description": "The health error code for the disk.",
          "type": "string"
        },
        "rpoInSeconds": {
          "format": "int64",
          "description": "The RPO in seconds.",
          "type": "integer"
        },
        "resyncRequired": {
          "description": "A value indicating whether resync is required for this disk.",
          "type": "string"
        },
        "resyncProgressPercentage": {
          "format": "int32",
          "description": "The resync progress percentage.",
          "type": "integer"
        },
        "resyncDurationInSeconds": {
          "format": "int64",
          "description": "The resync duration in seconds.",
          "type": "integer"
        },
        "diskCapacityInBytes": {
          "format": "int64",
          "description": "The disk capacity in bytes.",
          "type": "integer"
        },
        "fileSystemCapacityInBytes": {
          "format": "int64",
          "description": "The file system capacity in bytes.",
          "type": "integer"
        },
        "sourceDataInMB": {
          "format": "double",
          "description": "The source data transit in MB.",
          "type": "number"
        },
        "psDataInMB": {
          "format": "double",
          "description": "The PS data transit in MB.",
          "type": "number"
        },
        "targetDataInMB": {
          "format": "double",
          "description": "The target data transit in MB.",
          "type": "number"
        },
        "diskResized": {
          "description": "A value indicating whether disk is resized.",
          "type": "string"
        },
        "lastRpoCalculatedTime": {
          "format": "date-time",
          "description": "The last RPO calculated time.",
          "type": "string"
        }
      }
    },
    "InMageReplicationDetails": {
      "description": "InMage provider specific settings",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "activeSiteType": {
          "description": "The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.",
          "type": "string"
        },
        "sourceVmCpuCount": {
          "format": "int32",
          "description": "The CPU count of the VM on the primary side.",
          "type": "integer"
        },
        "sourceVmRamSizeInMB": {
          "format": "int32",
          "description": "The RAM size of the VM on the primary side.",
          "type": "integer"
        },
        "osDetails": {
          "$ref": "#/definitions/OSDiskDetails",
          "description": "The OS details."
        },
        "protectionStage": {
          "description": "The protection stage.",
          "type": "string"
        },
        "vmId": {
          "description": "The virtual machine Id.",
          "type": "string"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        },
        "resyncDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "The resync details of the machine"
        },
        "retentionWindowStart": {
          "format": "date-time",
          "description": "The retention window start time.",
          "type": "string"
        },
        "retentionWindowEnd": {
          "format": "date-time",
          "description": "The retention window end time.",
          "type": "string"
        },
        "compressedDataRateInMB": {
          "format": "double",
          "description": "The compressed data change rate in MB.",
          "type": "number"
        },
        "uncompressedDataRateInMB": {
          "format": "double",
          "description": "The uncompressed data change rate in MB.",
          "type": "number"
        },
        "rpoInSeconds": {
          "format": "int64",
          "description": "The RPO in seconds.",
          "type": "integer"
        },
        "protectedDisks": {
          "description": "The list of protected disks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InMageProtectedDiskDetails"
          }
        },
        "ipAddress": {
          "description": "The source IP address.",
          "type": "string"
        },
        "lastHeartbeat": {
          "format": "date-time",
          "description": "The last heartbeat received from the source server.",
          "type": "string"
        },
        "processServerId": {
          "description": "The process server Id.",
          "type": "string"
        },
        "masterTargetId": {
          "description": "The master target Id.",
          "type": "string"
        },
        "consistencyPoints": {
          "description": "The collection of Consistency points.",
          "type": "object",
          "additionalProperties": {
            "format": "date-time",
            "type": "string"
          }
        },
        "diskResized": {
          "description": "A value indicating whether any disk is resized for this VM.",
          "type": "string"
        },
        "rebootAfterUpdateStatus": {
          "description": "A value indicating whether the source server requires a restart after update.",
          "type": "string"
        },
        "multiVmGroupId": {
          "description": "The multi vm group Id, if any.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "The multi vm group name, if any.",
          "type": "string"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether the multi vm sync is enabled or disabled.",
          "type": "string"
        },
        "agentDetails": {
          "$ref": "#/definitions/InMageAgentDetails",
          "description": "The agent details."
        },
        "vCenterInfrastructureId": {
          "description": "The vCenter infrastructure Id.",
          "type": "string"
        },
        "infrastructureVmId": {
          "description": "The infrastructure VM Id.",
          "type": "string"
        },
        "vmNics": {
          "description": "The PE Network details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          }
        },
        "discoveryType": {
          "description": "A value indicating the discovery type of the machine.",
          "type": "string"
        },
        "azureStorageAccountId": {
          "description": "A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.",
          "type": "string"
        },
        "datastores": {
          "description": "The data stores of the on-premise machine Value can be list of strings that contain data store names",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "validationErrors": {
          "description": "The validation errors of the on-premise machine Value can be list of validation errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        },
        "lastRpoCalculatedTime": {
          "format": "date-time",
          "description": "The last RPO calculated time.",
          "type": "string"
        },
        "lastUpdateReceivedTime": {
          "format": "date-time",
          "description": "The last update time received from on-prem components.",
          "type": "string"
        },
        "replicaId": {
          "description": "The replica id of the protected item.",
          "type": "string"
        },
        "osVersion": {
          "description": "The OS Version of the protected item.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMage"
    },
    "InMageReprotectInput": {
      "description": "InMageAzureV2 specific provider input.",
      "required": [
        "masterTargetId",
        "processServerId",
        "retentionDrive",
        "profileId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput"
        }
      ],
      "properties": {
        "masterTargetId": {
          "description": "The Master Target Id.",
          "type": "string"
        },
        "processServerId": {
          "description": "The Process Server Id.",
          "type": "string"
        },
        "retentionDrive": {
          "description": "The retention drive to use on the MT.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The CS account Id.",
          "type": "string"
        },
        "datastoreName": {
          "description": "The target data store name.",
          "type": "string"
        },
        "diskExclusionInput": {
          "$ref": "#/definitions/InMageDiskExclusionInput",
          "description": "The enable disk exclusion input."
        },
        "profileId": {
          "description": "The Policy Id.",
          "type": "string"
        },
        "disksToInclude": {
          "description": "The disks to include list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "InMage"
    },
    "InMageVolumeExclusionOptions": {
      "description": "Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.",
      "type": "object",
      "properties": {
        "volumeLabel": {
          "description": "The volume label. The disk having any volume with this label will be excluded from replication.",
          "type": "string"
        },
        "onlyExcludeIfSingleVolume": {
          "description": "The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false.",
          "type": "string"
        }
      }
    },
    "InnerHealthError": {
      "description": "Implements InnerHealthError class. HealthError object has a list of InnerHealthErrors as child errors. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.",
      "type": "object",
      "properties": {
        "errorSource": {
          "description": "Source of error.",
          "type": "string"
        },
        "errorType": {
          "description": "Type of error.",
          "type": "string"
        },
        "errorLevel": {
          "description": "Level of error.",
          "type": "string"
        },
        "errorCategory": {
          "description": "Category of error.",
          "type": "string"
        },
        "errorCode": {
          "description": "Error code.",
          "type": "string"
        },
        "summaryMessage": {
          "description": "Summary message of the entity.",
          "type": "string"
        },
        "errorMessage": {
          "description": "Error message.",
          "type": "string"
        },
        "possibleCauses": {
          "description": "Possible causes of error.",
          "type": "string"
        },
        "recommendedAction": {
          "description": "Recommended action to resolve error.",
          "type": "string"
        },
        "creationTimeUtc": {
          "format": "date-time",
          "description": "Error creation time (UTC)",
          "type": "string"
        },
        "recoveryProviderErrorMessage": {
          "description": "DRA error message.",
          "type": "string"
        },
        "entityId": {
          "description": "ID of the entity.",
          "type": "string"
        }
      }
    },
    "InputEndpoint": {
      "description": "Azure VM input endpoint details.",
      "type": "object",
      "properties": {
        "endpointName": {
          "description": "The input endpoint name.",
          "type": "string"
        },
        "privatePort": {
          "format": "int32",
          "description": "The input endpoint private port.",
          "type": "integer"
        },
        "publicPort": {
          "format": "int32",
          "description": "The input endpoint public port.",
          "type": "integer"
        },
        "protocol": {
          "description": "The input endpoint protocol.",
          "type": "string"
        }
      }
    },
    "IPConfig": {
      "description": "IP configuration details.",
      "type": "object",
      "properties": {
        "staticIPAddress": {
          "description": "The static IP address of the IP configuration.",
          "type": "string"
        },
        "publicIpAddressId": {
          "description": "The Id of the public IP address associated with the IP configuration.",
          "type": "string"
        },
        "lBBackendAddressPoolIds": {
          "description": "The backend address pools associated with the IP configuration.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Job": {
      "description": "Job details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The custom data."
        }
      }
    },
    "JobCollection": {
      "description": "Collection of jobs.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of jobs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "JobDetails": {
      "description": "Job details based on specific job type.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the type of job details (see JobDetailsTypes enum for possible values).",
          "type": "string",
          "readOnly": true
        },
        "affectedObjectDetails": {
          "description": "The affected object properties like source server, source cloud, target server, target cloud etc. based on the workflow object details.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "discriminator": "instanceType"
    },
    "JobEntity": {
      "description": "This class contains the minimal job details required to navigate to the desired drill down.",
      "type": "object",
      "properties": {
        "jobId": {
          "description": "The job id.",
          "type": "string"
        },
        "jobFriendlyName": {
          "description": "The job display name.",
          "type": "string"
        },
        "targetObjectId": {
          "description": "The object id.",
          "type": "string"
        },
        "targetObjectName": {
          "description": "The object name.",
          "type": "string"
        },
        "targetInstanceType": {
          "description": "The workflow affected object type.",
          "type": "string"
        },
        "jobScenarioName": {
          "description": "The job name. Enum type ScenarioName.",
          "type": "string"
        }
      }
    },
    "JobErrorDetails": {
      "description": "This class contains the error details per object.",
      "type": "object",
      "properties": {
        "serviceErrorDetails": {
          "$ref": "#/definitions/ServiceError",
          "description": "The Service error details."
        },
        "providerErrorDetails": {
          "$ref": "#/definitions/ProviderError",
          "description": "The Provider error details."
        },
        "errorLevel": {
          "description": "Error level of error.",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "description": "The creation time of job error.",
          "type": "string"
        },
        "taskId": {
          "description": "The Id of the task.",
          "type": "string"
        }
      }
    },
    "JobProperties": {
      "description": "Job custom data details.",
      "type": "object",
      "properties": {
        "activityId": {
          "description": "The activity id.",
          "type": "string"
        },
        "scenarioName": {
          "description": "The ScenarioName.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The DisplayName.",
          "type": "string"
        },
        "state": {
          "description": "The status of the Job. It is one of these values - NotStarted, InProgress, Succeeded, Failed, Cancelled, Suspended or Other.",
          "type": "string"
        },
        "stateDescription": {
          "description": "The description of the state of the Job. For e.g. - For Succeeded state, description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped.",
          "type": "string"
        },
        "tasks": {
          "description": "The tasks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ASRTask"
          }
        },
        "errors": {
          "description": "The errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobErrorDetails"
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "The start time.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The end time.",
          "type": "string"
        },
        "allowedActions": {
          "description": "The Allowed action the job.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetObjectId": {
          "description": "The affected Object Id.",
          "type": "string"
        },
        "targetObjectName": {
          "description": "The name of the affected object.",
          "type": "string"
        },
        "targetInstanceType": {
          "description": "The type of the affected object which is of {Microsoft.Azure.SiteRecovery.V2015_11_10.AffectedObjectType} class.",
          "type": "string"
        },
        "customDetails": {
          "$ref": "#/definitions/JobDetails",
          "description": "The custom job details like test failover job details."
        }
      }
    },
    "JobQueryParameter": {
      "description": "Query parameter to enumerate jobs.",
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Date time to get jobs from.",
          "type": "string"
        },
        "endTime": {
          "description": "Date time to get jobs up to.",
          "type": "string"
        },
        "fabricId": {
          "description": "The Id of the fabric to search jobs under.",
          "type": "string"
        },
        "affectedObjectTypes": {
          "description": "The type of objects.",
          "type": "string"
        },
        "jobStatus": {
          "description": "The states of the job to be filtered can be in.",
          "type": "string"
        }
      }
    },
    "JobStatusEventDetails": {
      "description": "Model class for event details of a job status event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventSpecificDetails"
        }
      ],
      "properties": {
        "jobId": {
          "description": "Job arm id for the event.",
          "type": "string"
        },
        "jobFriendlyName": {
          "description": "JobName for the Event.",
          "type": "string"
        },
        "jobStatus": {
          "description": "JobStatus for the Event.",
          "type": "string"
        },
        "affectedObjectType": {
          "description": "AffectedObjectType for the event.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "JobStatus"
    },
    "JobTaskDetails": {
      "description": "This class represents a task which is actually a workflow so that one can navigate to its individual drill down.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "jobTask": {
          "$ref": "#/definitions/JobEntity",
          "description": "The job entity."
        }
      },
      "x-ms-discriminator-value": "JobTaskDetails"
    },
    "KeyEncryptionKeyInfo": {
      "description": "Key Encryption Key (KEK) information.",
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "description": "The key url / identifier.",
          "type": "string"
        },
        "keyVaultResourceArmId": {
          "description": "The KeyVault resource ARM id for key.",
          "type": "string"
        }
      }
    },
    "LogicalNetwork": {
      "description": "Logical network data model.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/LogicalNetworkProperties",
          "description": "The Logical Network Properties."
        }
      }
    },
    "LogicalNetworkCollection": {
      "description": "List of logical networks.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The Logical Networks list details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalNetwork"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "LogicalNetworkProperties": {
      "description": "Logical Network Properties.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "The Friendly Name.",
          "type": "string"
        },
        "networkVirtualizationStatus": {
          "description": "A value indicating whether Network Virtualization is enabled for the logical network.",
          "type": "string"
        },
        "logicalNetworkUsage": {
          "description": "A value indicating whether logical network is used as private test network by test failover.",
          "type": "string"
        },
        "logicalNetworkDefinitionsStatus": {
          "description": "A value indicating whether logical network definitions are isolated.",
          "type": "string"
        }
      }
    },
    "ManualActionTaskDetails": {
      "description": "This class represents the manual action task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "instructions": {
          "description": "The instructions.",
          "type": "string"
        },
        "observation": {
          "description": "The observation.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "ManualActionTaskDetails"
    },
    "MasterTargetServer": {
      "description": "Details of a Master Target Server.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The server Id.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address of the server.",
          "type": "string"
        },
        "name": {
          "description": "The server name.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type of the server.",
          "type": "string"
        },
        "agentVersion": {
          "description": "The version of the scout component on the server.",
          "type": "string"
        },
        "lastHeartbeat": {
          "format": "date-time",
          "description": "The last heartbeat received from the server.",
          "type": "string"
        },
        "versionStatus": {
          "description": "Version status",
          "type": "string"
        },
        "retentionVolumes": {
          "description": "The retention volumes of Master target Server.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RetentionVolume"
          }
        },
        "dataStores": {
          "description": "The list of data stores in the fabric.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataStore"
          }
        },
        "validationErrors": {
          "description": "Validation errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        },
        "healthErrors": {
          "description": "Health errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        },
        "diskCount": {
          "format": "int32",
          "description": "Disk count of the master target.",
          "type": "integer"
        },
        "osVersion": {
          "description": "OS Version of the master target.",
          "type": "string"
        },
        "agentExpiryDate": {
          "format": "date-time",
          "description": "Agent expiry date.",
          "type": "string"
        },
        "marsAgentVersion": {
          "description": "MARS agent version.",
          "type": "string"
        },
        "marsAgentExpiryDate": {
          "format": "date-time",
          "description": "MARS agent expiry date.",
          "type": "string"
        },
        "agentVersionDetails": {
          "$ref": "#/definitions/VersionDetails",
          "description": "Agent version details."
        },
        "marsAgentVersionDetails": {
          "$ref": "#/definitions/VersionDetails",
          "description": "Mars agent version details."
        }
      }
    },
    "MigrateInput": {
      "description": "Input for migrate.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MigrateInputProperties",
          "description": "Migrate input properties."
        }
      }
    },
    "MigrateInputProperties": {
      "description": "Migrate input properties.",
      "required": [
        "providerSpecificDetails"
      ],
      "type": "object",
      "properties": {
        "providerSpecificDetails": {
          "$ref": "#/definitions/MigrateProviderSpecificInput",
          "description": "The provider specific details."
        }
      }
    },
    "MigrateProviderSpecificInput": {
      "description": "Migrate provider specific input.",
      "required": [
        "instanceType"
      ],
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "MigrationItem": {
      "description": "Migration item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MigrationItemProperties",
          "description": "The migration item properties."
        }
      }
    },
    "MigrationItemCollection": {
      "description": "Migration item collection.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of migration items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MigrationItem"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "MigrationItemProperties": {
      "description": "Migration item properties.",
      "type": "object",
      "properties": {
        "machineName": {
          "description": "The on-premise virtual machine name.",
          "type": "string",
          "readOnly": true
        },
        "policyId": {
          "description": "The ARM Id of policy governing this item.",
          "type": "string",
          "readOnly": true
        },
        "policyFriendlyName": {
          "description": "The name of policy governing this item.",
          "type": "string",
          "readOnly": true
        },
        "recoveryServicesProviderId": {
          "description": "The recovery services provider ARM Id.",
          "type": "string",
          "readOnly": true
        },
        "migrationState": {
          "description": "The migration status.",
          "enum": [
            "None",
            "EnableMigrationInProgress",
            "EnableMigrationFailed",
            "DisableMigrationInProgress",
            "DisableMigrationFailed",
            "InitialSeedingInProgress",
            "InitialSeedingFailed",
            "Replicating",
            "MigrationInProgress",
            "MigrationSucceeded",
            "MigrationFailed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "MigrationState",
            "modelAsString": true
          }
        },
        "migrationStateDescription": {
          "description": "The migration state description.",
          "type": "string",
          "readOnly": true
        },
        "testMigrateState": {
          "description": "The test migrate state.",
          "enum": [
            "None",
            "TestMigrationInProgress",
            "TestMigrationSucceeded",
            "TestMigrationFailed",
            "TestMigrationCleanupInProgress"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "TestMigrationState",
            "modelAsString": true
          }
        },
        "testMigrateStateDescription": {
          "description": "The test migrate state description.",
          "type": "string",
          "readOnly": true
        },
        "health": {
          "description": "The consolidated health.",
          "type": "string",
          "readOnly": true
        },
        "healthErrors": {
          "description": "The list of health errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          },
          "readOnly": true
        },
        "allowedOperations": {
          "description": "The allowed operations on the migration item, based on the current migration state of the item.",
          "type": "array",
          "items": {
            "enum": [
              "DisableMigration",
              "TestMigrate",
              "TestMigrateCleanup",
              "Migrate"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "MigrationItemOperation",
              "modelAsString": true
            }
          },
          "readOnly": true
        },
        "currentJob": {
          "$ref": "#/definitions/CurrentJobDetails",
          "description": "The current job details.",
          "readOnly": true
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/MigrationProviderSpecificSettings",
          "description": "The migration provider custom settings."
        }
      }
    },
    "MigrationItemsQueryParameter": {
      "description": "Query parameter to enumerate migration items.",
      "type": "object",
      "properties": {
        "sourceFabricName": {
          "description": "The source fabric name filter.",
          "type": "string"
        },
        "instanceType": {
          "description": "The replication provider type.",
          "type": "string"
        }
      }
    },
    "MigrationProviderSpecificSettings": {
      "description": "Migration provider specific settings.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the instance type.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "MigrationRecoveryPoint": {
      "description": "Recovery point for a migration item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MigrationRecoveryPointProperties",
          "description": "Recovery point properties."
        }
      }
    },
    "MigrationRecoveryPointCollection": {
      "description": "Collection of migration recovery points.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The migration recovery point details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MigrationRecoveryPoint"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "MigrationRecoveryPointProperties": {
      "description": "Migration item recovery point properties.",
      "type": "object",
      "properties": {
        "recoveryPointTime": {
          "format": "date-time",
          "description": "The recovery point time.",
          "type": "string",
          "readOnly": true
        },
        "recoveryPointType": {
          "description": "The recovery point type.",
          "enum": [
            "NotSpecified",
            "ApplicationConsistent",
            "CrashConsistent"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "MigrationRecoveryPointType",
            "modelAsString": true
          }
        }
      }
    },
    "MobilityServiceUpdate": {
      "description": "The Mobility Service update details.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The version of the latest update.",
          "type": "string"
        },
        "rebootStatus": {
          "description": "The reboot status of the update - whether it is required or not.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type.",
          "type": "string"
        }
      }
    },
    "Network": {
      "description": "Network model.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkProperties",
          "description": "The Network Properties."
        }
      }
    },
    "NetworkCollection": {
      "description": "List of networks.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The Networks list details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Network"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "NetworkMapping": {
      "description": "Network Mapping model. Ideally it should have been possible to inherit this class from prev version in InheritedModels as long as there is no difference in structure or method signature. Since there were no base Models for certain fields and methods viz NetworkMappingProperties and Load with required return type, the class has been introduced in its entirety with references to base models to facilitate extensions in subsequent versions.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkMappingProperties",
          "description": "The Network Mapping Properties."
        }
      }
    },
    "NetworkMappingCollection": {
      "description": "List of network mappings. As with NetworkMapping, it should be possible to reuse a prev version of this class. It doesn't seem likely this class could be anything more than a slightly bespoke collection of NetworkMapping. Hence it makes sense to override Load with Base.NetworkMapping instead of existing CurrentVersion.NetworkMapping.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The Network Mappings list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkMapping"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "NetworkMappingFabricSpecificSettings": {
      "description": "Network Mapping fabric specific settings.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the Instance type.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "NetworkMappingProperties": {
      "description": "Network Mapping Properties.",
      "type": "object",
      "properties": {
        "state": {
          "description": "The pairing state for network mapping.",
          "type": "string"
        },
        "primaryNetworkFriendlyName": {
          "description": "The primary network friendly name.",
          "type": "string"
        },
        "primaryNetworkId": {
          "description": "The primary network id for network mapping.",
          "type": "string"
        },
        "primaryFabricFriendlyName": {
          "description": "The primary fabric friendly name.",
          "type": "string"
        },
        "recoveryNetworkFriendlyName": {
          "description": "The recovery network friendly name.",
          "type": "string"
        },
        "recoveryNetworkId": {
          "description": "The recovery network id for network mapping.",
          "type": "string"
        },
        "recoveryFabricArmId": {
          "description": "The recovery fabric ARM id.",
          "type": "string"
        },
        "recoveryFabricFriendlyName": {
          "description": "The recovery fabric friendly name.",
          "type": "string"
        },
        "fabricSpecificSettings": {
          "$ref": "#/definitions/NetworkMappingFabricSpecificSettings",
          "description": "The fabric specific settings."
        }
      }
    },
    "NetworkProperties": {
      "description": "Network Properties",
      "type": "object",
      "properties": {
        "fabricType": {
          "description": "The Fabric Type.",
          "type": "string"
        },
        "subnets": {
          "description": "The List of subnets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          }
        },
        "friendlyName": {
          "description": "The Friendly Name.",
          "type": "string"
        },
        "networkType": {
          "description": "The Network Type.",
          "type": "string"
        }
      }
    },
    "Object": {
      "description": "Base of all objects.",
      "type": "object",
      "properties": {}
    },
    "OperationsDiscovery": {
      "description": "Operations discovery class.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the API. The name of the operation being performed on this particular object. It should match the action name that appears in RBAC / the event service. Examples of operations include: * Microsoft.Compute/virtualMachine/capture/action * Microsoft.Compute/virtualMachine/restart/action * Microsoft.Compute/virtualMachine/write * Microsoft.Compute/virtualMachine/read * Microsoft.Compute/virtualMachine/delete Each action should include, in order: (1) Resource Provider Namespace (2) Type hierarchy for which the action applies (e.g. server/databases for a SQL Azure database) (3) Read, Write, Action or Delete indicating which type applies. If it is a PUT/PATCH on a collection or named value, Write should be used. If it is a GET, Read should be used. If it is a DELETE, Delete should be used. If it is a POST, Action should be used. As a note: all resource providers would need to include the \"{Resource Provider Namespace}/register/action\" operation in their response. This API is used to register for their service, and should include details about the operation (e.g. a localized name for the resource provider + any special considerations like PII release)",
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/Display",
          "description": "Object type"
        },
        "origin": {
          "description": "Origin. The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX. Default value is \"user,system\"",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/OperationsDiscoveryProperties",
          "description": "Properties. Reserved for future use."
        }
      }
    },
    "OperationsDiscoveryCollection": {
      "description": "Collection of ClientDiscovery details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The ClientDiscovery details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationsDiscovery"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "OperationsDiscoveryProperties": {
      "description": "ClientDiscovery properties.",
      "type": "object",
      "properties": {}
    },
    "OSDetails": {
      "description": "Disk Details.",
      "type": "object",
      "properties": {
        "osType": {
          "description": "VM Disk details.",
          "type": "string"
        },
        "productType": {
          "description": "Product type.",
          "type": "string"
        },
        "osEdition": {
          "description": "The OSEdition.",
          "type": "string"
        },
        "oSVersion": {
          "description": "The OS Version.",
          "type": "string"
        },
        "oSMajorVersion": {
          "description": "The OS Major Version.",
          "type": "string"
        },
        "oSMinorVersion": {
          "description": "The OS Minor Version.",
          "type": "string"
        }
      }
    },
    "OSDiskDetails": {
      "description": "Details of the OS Disk.",
      "type": "object",
      "properties": {
        "osVhdId": {
          "description": "The id of the disk containing the OS.",
          "type": "string"
        },
        "osType": {
          "description": "The type of the OS on the VM.",
          "type": "string"
        },
        "vhdName": {
          "description": "The OS disk VHD name.",
          "type": "string"
        }
      }
    },
    "OSVersionWrapper": {
      "description": "Wrapper model for OSVersion to include version and service pack info.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The version.",
          "type": "string"
        },
        "servicePack": {
          "description": "Service pack.",
          "type": "string"
        }
      }
    },
    "PlannedFailoverInput": {
      "description": "Input definition for planned failover.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlannedFailoverInputProperties",
          "description": "Planned failover input properties"
        }
      }
    },
    "PlannedFailoverInputProperties": {
      "description": "Input definition for planned failover input properties.",
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "Failover direction.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ProviderSpecificFailoverInput",
          "description": "Provider specific settings"
        }
      }
    },
    "Policy": {
      "description": "Protection profile details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyProperties",
          "description": "The custom data."
        }
      }
    },
    "PolicyCollection": {
      "description": "Protection Profile Collection details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The policy details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Policy"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "PolicyProperties": {
      "description": "Protection profile custom data details.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "The FriendlyName.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/PolicyProviderSpecificDetails",
          "description": "The ReplicationChannelSetting."
        }
      }
    },
    "PolicyProviderSpecificDetails": {
      "description": "Base class for Provider specific details for policies.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overridden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "PolicyProviderSpecificInput": {
      "description": "Base class for provider specific input",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "ProcessServer": {
      "description": "Details of the Process Server.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "The Process Server's friendly name.",
          "type": "string"
        },
        "id": {
          "description": "The Process Server Id.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address of the server.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type of the server.",
          "type": "string"
        },
        "agentVersion": {
          "description": "The version of the scout component on the server.",
          "type": "string"
        },
        "lastHeartbeat": {
          "format": "date-time",
          "description": "The last heartbeat received from the server.",
          "type": "string"
        },
        "versionStatus": {
          "description": "Version status",
          "type": "string"
        },
        "mobilityServiceUpdates": {
          "description": "The list of the mobility service updates available on the Process Server.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MobilityServiceUpdate"
          }
        },
        "hostId": {
          "description": "The agent generated Id.",
          "type": "string"
        },
        "machineCount": {
          "description": "The servers configured with this PS.",
          "type": "string"
        },
        "replicationPairCount": {
          "description": "The number of replication pairs configured in this PS.",
          "type": "string"
        },
        "systemLoad": {
          "description": "The percentage of the system load.",
          "type": "string"
        },
        "systemLoadStatus": {
          "description": "The system load status.",
          "type": "string"
        },
        "cpuLoad": {
          "description": "The percentage of the CPU load.",
          "type": "string"
        },
        "cpuLoadStatus": {
          "description": "The CPU load status.",
          "type": "string"
        },
        "totalMemoryInBytes": {
          "format": "int64",
          "description": "The total memory.",
          "type": "integer"
        },
        "availableMemoryInBytes": {
          "format": "int64",
          "description": "The available memory.",
          "type": "integer"
        },
        "memoryUsageStatus": {
          "description": "The memory usage status.",
          "type": "string"
        },
        "totalSpaceInBytes": {
          "format": "int64",
          "description": "The total space.",
          "type": "integer"
        },
        "availableSpaceInBytes": {
          "format": "int64",
          "description": "The available space.",
          "type": "integer"
        },
        "spaceUsageStatus": {
          "description": "The space usage status.",
          "type": "string"
        },
        "psServiceStatus": {
          "description": "The PS service status.",
          "type": "string"
        },
        "sslCertExpiryDate": {
          "format": "date-time",
          "description": "The PS SSL cert expiry date.",
          "type": "string"
        },
        "sslCertExpiryRemainingDays": {
          "format": "int32",
          "description": "CS SSL cert expiry date.",
          "type": "integer"
        },
        "osVersion": {
          "description": "OS Version of the process server. Note: This will get populated if user has CS version greater than 9.12.0.0.",
          "type": "string"
        },
        "healthErrors": {
          "description": "Health errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        },
        "agentExpiryDate": {
          "format": "date-time",
          "description": "Agent expiry date.",
          "type": "string"
        },
        "agentVersionDetails": {
          "$ref": "#/definitions/VersionDetails",
          "description": "The agent version details."
        }
      }
    },
    "ProtectableItem": {
      "description": "Replication protected item",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectableItemProperties",
          "description": "The custom data."
        }
      }
    },
    "ProtectableItemCollection": {
      "description": "Protectable item collection.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The Protectable item details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectableItem"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "ProtectableItemProperties": {
      "description": "Replication protected item custom data details.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "The name.",
          "type": "string"
        },
        "protectionStatus": {
          "description": "The protection status.",
          "type": "string"
        },
        "replicationProtectedItemId": {
          "description": "The ARM resource of protected items.",
          "type": "string"
        },
        "recoveryServicesProviderId": {
          "description": "The recovery provider ARM Id.",
          "type": "string"
        },
        "protectionReadinessErrors": {
          "description": "The Current protection readiness errors.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedReplicationProviders": {
          "description": "The list of replication providers supported for the protectable item.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customDetails": {
          "$ref": "#/definitions/ConfigurationSettings",
          "description": "The Replication provider custom settings."
        }
      }
    },
    "ProtectableItemQueryParameter": {
      "description": "Query parameter to enumerate Protectable items.",
      "type": "object",
      "properties": {
        "state": {
          "description": "State of the Protectable item query filter.",
          "type": "string"
        }
      }
    },
    "ProtectedItemsQueryParameter": {
      "description": "Query parameter to enumerate protected items.",
      "type": "object",
      "properties": {
        "sourceFabricName": {
          "description": "The source fabric name filter.",
          "type": "string"
        },
        "recoveryPlanName": {
          "description": "The recovery plan filter.",
          "type": "string"
        },
        "vCenterName": {
          "description": "The vCenter name filter.",
          "type": "string"
        },
        "instanceType": {
          "description": "The replication provider type.",
          "type": "string"
        },
        "multiVmGroupCreateOption": {
          "description": "Whether Multi VM group is auto created or specified by user.",
          "enum": [
            "AutoCreated",
            "UserSpecified"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MultiVmGroupCreateOption",
            "modelAsString": true
          }
        }
      }
    },
    "ProtectionContainer": {
      "description": "Protection container details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectionContainerProperties",
          "description": "The custom data."
        }
      }
    },
    "ProtectionContainerCollection": {
      "description": "Protection Container collection.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The Protection Container details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectionContainer"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "ProtectionContainerFabricSpecificDetails": {
      "description": "Base class for fabric specific details of container.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overridden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProtectionContainerMapping": {
      "description": "Protection container mapping object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectionContainerMappingProperties",
          "description": "The custom data."
        }
      }
    },
    "ProtectionContainerMappingCollection": {
      "description": "Protection container mapping collection class.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of container mappings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectionContainerMapping"
          }
        },
        "nextLink": {
          "description": "Link to fetch rest of the data.",
          "type": "string"
        }
      }
    },
    "ProtectionContainerMappingProperties": {
      "description": "Protection container mapping properties.",
      "type": "object",
      "properties": {
        "targetProtectionContainerId": {
          "description": "Paired protection container ARM ID.",
          "type": "string"
        },
        "targetProtectionContainerFriendlyName": {
          "description": "Friendly name of paired container.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ProtectionContainerMappingProviderSpecificDetails",
          "description": "Provider specific provider details."
        },
        "health": {
          "description": "Health of pairing.",
          "type": "string"
        },
        "healthErrorDetails": {
          "description": "Health error.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        },
        "policyId": {
          "description": "Policy ARM Id.",
          "type": "string"
        },
        "state": {
          "description": "Association Status",
          "type": "string"
        },
        "sourceProtectionContainerFriendlyName": {
          "description": "Friendly name of source protection container.",
          "type": "string"
        },
        "sourceFabricFriendlyName": {
          "description": "Friendly name of source fabric.",
          "type": "string"
        },
        "targetFabricFriendlyName": {
          "description": "Friendly name of target fabric.",
          "type": "string"
        },
        "policyFriendlyName": {
          "description": "Friendly name of replication policy.",
          "type": "string"
        }
      }
    },
    "ProtectionContainerMappingProviderSpecificDetails": {
      "description": "Container mapping provider specific details.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overridden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "ProtectionContainerProperties": {
      "description": "Protection profile custom data details.",
      "type": "object",
      "properties": {
        "fabricFriendlyName": {
          "description": "Fabric friendly name.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The name.",
          "type": "string"
        },
        "fabricType": {
          "description": "The fabric type.",
          "type": "string"
        },
        "protectedItemCount": {
          "format": "int32",
          "description": "Number of protected PEs",
          "type": "integer"
        },
        "pairingStatus": {
          "description": "The pairing status of this cloud.",
          "type": "string"
        },
        "role": {
          "description": "The role of this cloud.",
          "type": "string"
        },
        "fabricSpecificDetails": {
          "$ref": "#/definitions/ProtectionContainerFabricSpecificDetails",
          "description": "Fabric specific details."
        }
      }
    },
    "ProviderError": {
      "description": "This class contains the error details per object.",
      "type": "object",
      "properties": {
        "errorCode": {
          "format": "int32",
          "description": "The Error code.",
          "type": "integer"
        },
        "errorMessage": {
          "description": "The Error message.",
          "type": "string"
        },
        "errorId": {
          "description": "The Provider error Id.",
          "type": "string"
        },
        "possibleCauses": {
          "description": "The possible causes for the error.",
          "type": "string"
        },
        "recommendedAction": {
          "description": "The recommended action to resolve the error.",
          "type": "string"
        }
      }
    },
    "ProviderSpecificFailoverInput": {
      "description": "Provider specific failover input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "ProviderSpecificRecoveryPointDetails": {
      "description": "Replication provider specific recovery point details.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the provider type.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "RcmAzureMigrationPolicyDetails": {
      "description": "RCM based Azure migration specific policy details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPointThresholdInMinutes": {
          "format": "int32",
          "description": "The recovery point threshold in minutes.",
          "type": "integer"
        },
        "recoveryPointHistory": {
          "format": "int32",
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The app consistent snapshot frequency in minutes.",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MultiVmSyncStatus",
            "modelAsString": true
          }
        },
        "crashConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The crash consistent snapshot frequency in minutes.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "RcmAzureMigration"
    },
    "RecoveryPlan": {
      "description": "Recovery plan details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanProperties",
          "description": "The custom details."
        }
      }
    },
    "RecoveryPlanA2AFailoverInput": {
      "description": "Recovery plan A2A failover input.",
      "required": [
        "recoveryPointType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "recoveryPointType": {
          "description": "The recovery point type.",
          "enum": [
            "Latest",
            "LatestApplicationConsistent",
            "LatestCrashConsistent",
            "LatestProcessed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "A2ARpRecoveryPointType",
            "modelAsString": true
          }
        },
        "cloudServiceCreationOption": {
          "description": "A value indicating whether to use recovery cloud service for TFO or not.",
          "type": "string"
        },
        "multiVmSyncPointOption": {
          "description": "A value indicating whether multi VM sync enabled VMs should use multi VM sync points for failover.",
          "enum": [
            "UseMultiVmSyncRecoveryPoint",
            "UsePerVmRecoveryPoint"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MultiVmSyncPointOption",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "RecoveryPlanA2ADetails": {
      "description": "Recovery plan A2A specific details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificDetails"
        }
      ],
      "properties": {
        "primaryZone": {
          "description": "The primary zone.",
          "type": "string"
        },
        "recoveryZone": {
          "description": "The recovery zone.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "RecoveryPlanA2ADetails"
    },
    "RecoveryPlanA2AInput": {
      "description": "Recovery plan A2A input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificInput"
        }
      ],
      "properties": {
        "primaryZone": {
          "description": "The primary zone.",
          "type": "string"
        },
        "recoveryZone": {
          "description": "The recovery zone.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2A"
    },
    "RecoveryPlanAction": {
      "description": "Recovery plan action details.",
      "required": [
        "actionName",
        "failoverTypes",
        "failoverDirections",
        "customDetails"
      ],
      "type": "object",
      "properties": {
        "actionName": {
          "description": "The action name.",
          "type": "string"
        },
        "failoverTypes": {
          "description": "The list of failover types.",
          "type": "array",
          "items": {
            "enum": [
              "ReverseReplicate",
              "Commit",
              "PlannedFailover",
              "UnplannedFailover",
              "DisableProtection",
              "TestFailover",
              "TestFailoverCleanup",
              "Failback",
              "FinalizeFailback",
              "ChangePit",
              "RepairReplication",
              "SwitchProtection",
              "CompleteMigration"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "ReplicationProtectedItemOperation",
              "modelAsString": true
            }
          }
        },
        "failoverDirections": {
          "description": "The list of failover directions.",
          "type": "array",
          "items": {
            "enum": [
              "PrimaryToRecovery",
              "RecoveryToPrimary"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "PossibleOperationsDirections",
              "modelAsString": true
            }
          }
        },
        "customDetails": {
          "$ref": "#/definitions/RecoveryPlanActionDetails",
          "description": "The custom details."
        }
      }
    },
    "RecoveryPlanActionDetails": {
      "description": "Recovery plan action custom details.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "RecoveryPlanAutomationRunbookActionDetails": {
      "description": "Recovery plan Automation runbook action details.",
      "required": [
        "fabricLocation"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanActionDetails"
        }
      ],
      "properties": {
        "runbookId": {
          "description": "The runbook ARM Id.",
          "type": "string"
        },
        "timeout": {
          "description": "The runbook timeout.",
          "type": "string"
        },
        "fabricLocation": {
          "description": "The fabric location.",
          "enum": [
            "Primary",
            "Recovery"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RecoveryPlanActionLocation",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "AutomationRunbookActionDetails"
    },
    "RecoveryPlanCollection": {
      "description": "Recovery plan collection details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of recovery plans.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlan"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "RecoveryPlanGroup": {
      "description": "Recovery plan group details.",
      "required": [
        "groupType"
      ],
      "type": "object",
      "properties": {
        "groupType": {
          "description": "The group type.",
          "enum": [
            "Shutdown",
            "Boot",
            "Failover"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RecoveryPlanGroupType",
            "modelAsString": true
          }
        },
        "replicationProtectedItems": {
          "description": "The list of protected items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProtectedItem"
          }
        },
        "startGroupActions": {
          "description": "The start group actions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanAction"
          }
        },
        "endGroupActions": {
          "description": "The end group actions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanAction"
          }
        }
      }
    },
    "RecoveryPlanGroupTaskDetails": {
      "description": "This class represents the recovery plan group task.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GroupTaskDetails"
        }
      ],
      "properties": {
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "groupId": {
          "description": "The group identifier.",
          "type": "string"
        },
        "rpGroupType": {
          "description": "The group type.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "RecoveryPlanGroupTaskDetails"
    },
    "RecoveryPlanHyperVReplicaAzureFailbackInput": {
      "description": "Recovery plan HVR Azure failback input.",
      "required": [
        "dataSyncOption",
        "recoveryVmCreationOption"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "dataSyncOption": {
          "description": "The data sync option.",
          "enum": [
            "ForDownTime",
            "ForSynchronization"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataSyncStatus",
            "modelAsString": true
          }
        },
        "recoveryVmCreationOption": {
          "description": "The ALR option.",
          "enum": [
            "CreateVmIfNotFound",
            "NoAction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlternateLocationRecoveryOption",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzureFailback"
    },
    "RecoveryPlanHyperVReplicaAzureFailoverInput": {
      "description": "Recovery plan HVR Azure failover input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "vaultLocation": {
          "description": "The vault location.",
          "type": "string"
        },
        "primaryKekCertificatePfx": {
          "description": "The primary KEK certificate PFX.",
          "type": "string"
        },
        "secondaryKekCertificatePfx": {
          "description": "The secondary KEK certificate PFX.",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "The recovery point type.",
          "enum": [
            "Latest",
            "LatestApplicationConsistent",
            "LatestProcessed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HyperVReplicaAzureRpRecoveryPointType",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzure"
    },
    "RecoveryPlanInMageAzureV2FailoverInput": {
      "description": "Recovery plan InMageAzureV2 failover input.",
      "required": [
        "vaultLocation",
        "recoveryPointType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "vaultLocation": {
          "description": "The vault location.",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "The recovery point type.",
          "enum": [
            "Latest",
            "LatestApplicationConsistent",
            "LatestCrashConsistent",
            "LatestProcessed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InMageV2RpRecoveryPointType",
            "modelAsString": true
          }
        },
        "useMultiVmSyncPoint": {
          "description": "A value indicating whether multi VM sync enabled VMs should use multi VM sync points for failover.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2"
    },
    "RecoveryPlanInMageFailoverInput": {
      "description": "Recovery plan InMage failover input.",
      "required": [
        "recoveryPointType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "recoveryPointType": {
          "description": "The recovery point type.",
          "enum": [
            "LatestTime",
            "LatestTag",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RpInMageRecoveryPointType",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "InMage"
    },
    "RecoveryPlanManualActionDetails": {
      "description": "Recovery plan manual action details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanActionDetails"
        }
      ],
      "properties": {
        "description": {
          "description": "The manual action description.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "ManualActionDetails"
    },
    "RecoveryPlanPlannedFailoverInput": {
      "description": "Recovery plan planned failover input.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanPlannedFailoverInputProperties",
          "description": "The recovery plan planned failover input properties."
        }
      }
    },
    "RecoveryPlanPlannedFailoverInputProperties": {
      "description": "Recovery plan planned failover input properties.",
      "required": [
        "failoverDirection"
      ],
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "The failover direction.",
          "enum": [
            "PrimaryToRecovery",
            "RecoveryToPrimary"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PossibleOperationsDirections",
            "modelAsString": true
          }
        },
        "providerSpecificDetails": {
          "description": "The provider specific properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
          }
        }
      }
    },
    "RecoveryPlanProperties": {
      "description": "Recovery plan custom details.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "The friendly name.",
          "type": "string"
        },
        "primaryFabricId": {
          "description": "The primary fabric Id.",
          "type": "string"
        },
        "primaryFabricFriendlyName": {
          "description": "The primary fabric friendly name.",
          "type": "string"
        },
        "recoveryFabricId": {
          "description": "The recovery fabric Id.",
          "type": "string"
        },
        "recoveryFabricFriendlyName": {
          "description": "The recovery fabric friendly name.",
          "type": "string"
        },
        "failoverDeploymentModel": {
          "description": "The failover deployment model.",
          "type": "string"
        },
        "replicationProviders": {
          "description": "The list of replication providers.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedOperations": {
          "description": "The list of allowed operations.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastPlannedFailoverTime": {
          "format": "date-time",
          "description": "The start time of the last planned failover.",
          "type": "string"
        },
        "lastUnplannedFailoverTime": {
          "format": "date-time",
          "description": "The start time of the last unplanned failover.",
          "type": "string"
        },
        "lastTestFailoverTime": {
          "format": "date-time",
          "description": "The start time of the last test failover.",
          "type": "string"
        },
        "currentScenario": {
          "$ref": "#/definitions/CurrentScenarioDetails",
          "description": "The current scenario details."
        },
        "currentScenarioStatus": {
          "description": "The recovery plan status.",
          "type": "string"
        },
        "currentScenarioStatusDescription": {
          "description": "The recovery plan status description.",
          "type": "string"
        },
        "groups": {
          "description": "The recovery plan groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanGroup"
          }
        },
        "providerSpecificDetails": {
          "description": "The provider id and provider specific details.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProviderSpecificDetails"
          },
          "readOnly": true
        }
      }
    },
    "RecoveryPlanProtectedItem": {
      "description": "Recovery plan protected item.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ARM Id of the recovery plan protected item.",
          "type": "string"
        },
        "virtualMachineId": {
          "description": "The virtual machine Id.",
          "type": "string"
        }
      }
    },
    "RecoveryPlanProviderSpecificDetails": {
      "description": "Recovery plan provider specific details.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the Instance type.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "RecoveryPlanProviderSpecificInput": {
      "description": "Recovery plan provider specific input base class.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the Instance type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "RecoveryPlanProviderSpecificFailoverInput": {
      "description": "Recovery plan provider specific failover input base class.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "RecoveryPlanScriptActionDetails": {
      "description": "Recovery plan script action details.",
      "required": [
        "path",
        "fabricLocation"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanActionDetails"
        }
      ],
      "properties": {
        "path": {
          "description": "The script path.",
          "type": "string"
        },
        "timeout": {
          "description": "The script timeout.",
          "type": "string"
        },
        "fabricLocation": {
          "description": "The fabric location.",
          "enum": [
            "Primary",
            "Recovery"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RecoveryPlanActionLocation",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "ScriptActionDetails"
    },
    "RecoveryPlanShutdownGroupTaskDetails": {
      "description": "This class represents the recovery plan shutdown group task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GroupTaskDetails"
        }
      ],
      "properties": {
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "groupId": {
          "description": "The group identifier.",
          "type": "string"
        },
        "rpGroupType": {
          "description": "The group type.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "RecoveryPlanShutdownGroupTaskDetails"
    },
    "RecoveryPlanTestFailoverCleanupInput": {
      "description": "Recovery plan test failover cleanup input.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanTestFailoverCleanupInputProperties",
          "description": "The recovery plan test failover cleanup input properties."
        }
      }
    },
    "RecoveryPlanTestFailoverCleanupInputProperties": {
      "description": "Recovery plan test failover cleanup input properties.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "The test failover cleanup comments.",
          "type": "string"
        }
      }
    },
    "RecoveryPlanTestFailoverInput": {
      "description": "Recovery plan test failover input.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanTestFailoverInputProperties",
          "description": "The recovery plan test failover input properties."
        }
      }
    },
    "RecoveryPlanTestFailoverInputProperties": {
      "description": "Recovery plan test failover input properties.",
      "required": [
        "failoverDirection",
        "networkType"
      ],
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "The failover direction.",
          "enum": [
            "PrimaryToRecovery",
            "RecoveryToPrimary"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PossibleOperationsDirections",
            "modelAsString": true
          }
        },
        "networkType": {
          "description": "The network type to be used for test failover.",
          "type": "string"
        },
        "networkId": {
          "description": "The Id of the network to be used for test failover.",
          "type": "string"
        },
        "skipTestFailoverCleanup": {
          "description": "A value indicating whether the test failover cleanup is to be skipped.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "description": "The provider specific properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
          }
        }
      }
    },
    "RecoveryPlanUnplannedFailoverInput": {
      "description": "Recovery plan unplanned failover input.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanUnplannedFailoverInputProperties",
          "description": "The recovery plan unplanned failover input properties."
        }
      }
    },
    "RecoveryPlanUnplannedFailoverInputProperties": {
      "description": "Recovery plan unplanned failover input properties.",
      "required": [
        "failoverDirection",
        "sourceSiteOperations"
      ],
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "The failover direction.",
          "enum": [
            "PrimaryToRecovery",
            "RecoveryToPrimary"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PossibleOperationsDirections",
            "modelAsString": true
          }
        },
        "sourceSiteOperations": {
          "description": "A value indicating whether source site operations are required.",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SourceSiteOperations",
            "modelAsString": true
          }
        },
        "providerSpecificDetails": {
          "description": "The provider specific properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
          }
        }
      }
    },
    "RecoveryPoint": {
      "description": "Base class representing a recovery point.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPointProperties",
          "description": "Recovery point related data."
        }
      }
    },
    "RecoveryPointCollection": {
      "description": "Collection of recovery point details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The recovery point details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPoint"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "RecoveryPointProperties": {
      "description": "Recovery point properties.",
      "type": "object",
      "properties": {
        "recoveryPointTime": {
          "format": "date-time",
          "description": "The recovery point time.",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "The recovery point type: ApplicationConsistent, CrashConsistent.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ProviderSpecificRecoveryPointDetails",
          "description": "The provider specific details for the recovery point."
        }
      }
    },
    "RecoveryServicesProvider": {
      "description": "Provider details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryServicesProviderProperties",
          "description": "Provider properties."
        }
      }
    },
    "RecoveryServicesProviderCollection": {
      "description": "Collection of providers.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The Servers details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryServicesProvider"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "RecoveryServicesProviderProperties": {
      "description": "Recovery services provider properties.",
      "type": "object",
      "properties": {
        "fabricType": {
          "description": "Type of the site.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of the DRA.",
          "type": "string"
        },
        "providerVersion": {
          "description": "The provider version.",
          "type": "string"
        },
        "serverVersion": {
          "description": "The fabric provider.",
          "type": "string"
        },
        "providerVersionState": {
          "description": "DRA version status.",
          "type": "string"
        },
        "providerVersionExpiryDate": {
          "format": "date-time",
          "description": "Expiry date of the version.",
          "type": "string"
        },
        "fabricFriendlyName": {
          "description": "The fabric friendly name.",
          "type": "string"
        },
        "lastHeartBeat": {
          "format": "date-time",
          "description": "Time when last heartbeat was sent by the DRA.",
          "type": "string"
        },
        "connectionStatus": {
          "description": "A value indicating whether DRA is responsive.",
          "type": "string"
        },
        "protectedItemCount": {
          "format": "int32",
          "description": "Number of protected VMs currently managed by the DRA.",
          "type": "integer"
        },
        "allowedScenarios": {
          "description": "The scenarios allowed on this provider.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "healthErrorDetails": {
          "description": "The recovery services provider health error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        },
        "draIdentifier": {
          "description": "The DRA Id.",
          "type": "string"
        },
        "authenticationIdentityDetails": {
          "$ref": "#/definitions/IdentityProviderDetails",
          "description": "The authentication identity details."
        },
        "resourceAccessIdentityDetails": {
          "$ref": "#/definitions/IdentityProviderDetails",
          "description": "The resource access identity details."
        },
        "providerVersionDetails": {
          "$ref": "#/definitions/VersionDetails",
          "description": "The provider version details."
        }
      }
    },
    "RemoveDisksInput": {
      "description": "Input for remove disk(s) operation.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RemoveDisksInputProperties",
          "description": "Remove disk input properties."
        }
      }
    },
    "RemoveDisksInputProperties": {
      "description": "Remove Disk input properties.",
      "type": "object",
      "properties": {
        "providerSpecificDetails": {
          "$ref": "#/definitions/RemoveDisksProviderSpecificInput",
          "description": "The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null."
        }
      }
    },
    "RemoveDisksProviderSpecificInput": {
      "description": "Remove Disk provider specific input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "RemoveProtectionContainerMappingInput": {
      "description": "Container unpairing input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RemoveProtectionContainerMappingInputProperties",
          "description": "Configure protection input properties."
        }
      }
    },
    "RemoveProtectionContainerMappingInputProperties": {
      "description": "Unpairing input properties.",
      "type": "object",
      "properties": {
        "providerSpecificInput": {
          "$ref": "#/definitions/ReplicationProviderContainerUnmappingInput",
          "description": "Provider specific input for unpairing."
        }
      }
    },
    "RenewCertificateInput": {
      "description": "Certificate renewal input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RenewCertificateInputProperties",
          "description": "Renew certificate input properties."
        }
      }
    },
    "RenewCertificateInputProperties": {
      "description": "Renew Certificate input properties.",
      "type": "object",
      "properties": {
        "renewCertificateType": {
          "description": "Renew certificate type.",
          "type": "string"
        }
      }
    },
    "ReplicationEligibilityResults": {
      "description": "Replication eligibility results response model.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets the name of this object.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets the object type.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Gets Unique ARM identifier for this object.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ReplicationEligibilityResultsProperties",
          "description": "Gets properties model for replication eligibility results API.",
          "readOnly": true
        }
      }
    },
    "ReplicationEligibilityResultsCollection": {
      "description": "Replication eligibility results collection response model.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The replication eligibility results details.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReplicationEligibilityResults"
          }
        }
      }
    },
    "ReplicationEligibilityResultsErrorInfo": {
      "description": "Error model that can be exposed to the user.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The error message.",
          "type": "string",
          "readOnly": true
        },
        "possibleCauses": {
          "description": "The possible causes.",
          "type": "string",
          "readOnly": true
        },
        "recommendedAction": {
          "description": "The recommended action.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The error status.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ReplicationEligibilityResultsProperties": {
      "description": "Properties model for replication eligibility results API.",
      "type": "object",
      "properties": {
        "clientRequestId": {
          "description": "The client request Id.",
          "type": "string",
          "readOnly": true
        },
        "errors": {
          "description": "The error details.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReplicationEligibilityResultsErrorInfo"
          }
        }
      }
    },
    "ReplicationGroupDetails": {
      "description": "Replication group details. This will be used in case of San and Wvr.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ConfigurationSettings"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "ReplicationGroupDetails"
    },
    "ReplicationProtectedItem": {
      "description": "Replication protected item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReplicationProtectedItemProperties",
          "description": "The custom data."
        }
      }
    },
    "ReplicationProtectedItemCollection": {
      "description": "Replication protected item collection.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The Replication protected item details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReplicationProtectedItem"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "ReplicationProtectedItemProperties": {
      "description": "Replication protected item custom data details.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "The name.",
          "type": "string"
        },
        "protectedItemType": {
          "description": "The type of protected item type.",
          "type": "string"
        },
        "protectableItemId": {
          "description": "The protected item ARM Id.",
          "type": "string"
        },
        "recoveryServicesProviderId": {
          "description": "The recovery provider ARM Id.",
          "type": "string"
        },
        "primaryFabricFriendlyName": {
          "description": "The friendly name of the primary fabric.",
          "type": "string"
        },
        "primaryFabricProvider": {
          "description": "The fabric provider of the primary fabric.",
          "type": "string"
        },
        "recoveryFabricFriendlyName": {
          "description": "The friendly name of recovery fabric.",
          "type": "string"
        },
        "recoveryFabricId": {
          "description": "The Arm Id of recovery fabric.",
          "type": "string"
        },
        "primaryProtectionContainerFriendlyName": {
          "description": "The name of primary protection container friendly name.",
          "type": "string"
        },
        "recoveryProtectionContainerFriendlyName": {
          "description": "The name of recovery container friendly name.",
          "type": "string"
        },
        "protectionState": {
          "description": "The protection status.",
          "type": "string"
        },
        "protectionStateDescription": {
          "description": "The protection state description.",
          "type": "string"
        },
        "activeLocation": {
          "description": "The Current active location of the PE.",
          "type": "string"
        },
        "testFailoverState": {
          "description": "The Test failover state.",
          "type": "string"
        },
        "testFailoverStateDescription": {
          "description": "The Test failover state description.",
          "type": "string"
        },
        "allowedOperations": {
          "description": "The allowed operations on the Replication protected item.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "replicationHealth": {
          "description": "The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.",
          "type": "string"
        },
        "failoverHealth": {
          "description": "The consolidated failover health for the VM.",
          "type": "string"
        },
        "healthErrors": {
          "description": "List of health errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        },
        "policyId": {
          "description": "The ID of Policy governing this PE.",
          "type": "string"
        },
        "policyFriendlyName": {
          "description": "The name of Policy governing this PE.",
          "type": "string"
        },
        "lastSuccessfulFailoverTime": {
          "format": "date-time",
          "description": "The Last successful failover time.",
          "type": "string"
        },
        "lastSuccessfulTestFailoverTime": {
          "format": "date-time",
          "description": "The Last successful test failover time.",
          "type": "string"
        },
        "currentScenario": {
          "$ref": "#/definitions/CurrentScenarioDetails",
          "description": "The current scenario."
        },
        "failoverRecoveryPointId": {
          "description": "The recovery point ARM Id to which the Vm was failed over.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings",
          "description": "The Replication provider custom settings."
        },
        "recoveryContainerId": {
          "description": "The recovery container Id.",
          "type": "string"
        }
      }
    },
    "ReplicationProviderContainerUnmappingInput": {
      "description": "Provider specific input for unpairing operations.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      }
    },
    "ReplicationProviderSpecificContainerCreationInput": {
      "description": "Provider specific input for container creation operation.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "ReplicationProviderSpecificContainerMappingInput": {
      "description": "Provider specific input for pairing operations.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "ReplicationProviderSpecificSettings": {
      "description": "Replication provider specific settings.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the Instance type.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "ReplicationProviderSpecificUpdateContainerMappingInput": {
      "description": "Provider specific input for update pairing operations.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "ResolveHealthError": {
      "description": "Resolve health errors input properties.",
      "type": "object",
      "properties": {
        "healthErrorId": {
          "description": "Health error id.",
          "type": "string"
        }
      }
    },
    "ResolveHealthInput": {
      "description": "Resolve health input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResolveHealthInputProperties",
          "description": "Disable resolve health input properties."
        }
      }
    },
    "ResolveHealthInputProperties": {
      "description": "Resolve health input properties.",
      "type": "object",
      "properties": {
        "healthErrors": {
          "description": "Health errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResolveHealthError"
          }
        }
      }
    },
    "Resource": {
      "description": "Azure resource.",
      "properties": {
        "id": {
          "description": "Resource Id",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource Type",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Resource Location",
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceHealthSummary": {
      "description": "Base class to define the health summary of the resources contained under an Arm resource.",
      "type": "object",
      "properties": {
        "resourceCount": {
          "format": "int32",
          "description": "The count of total resources under the container.",
          "type": "integer"
        },
        "issues": {
          "description": "The list of summary of health errors across the resources under the container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorSummary"
          }
        }
      }
    },
    "ResumeJobParams": {
      "description": "Resume job params.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResumeJobParamsProperties",
          "description": "Resume job properties."
        }
      }
    },
    "ResumeJobParamsProperties": {
      "description": "Resume job properties.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Resume job comments.",
          "type": "string"
        }
      }
    },
    "RetentionVolume": {
      "description": "The retention details of the MT.",
      "type": "object",
      "properties": {
        "volumeName": {
          "description": "The volume name.",
          "type": "string"
        },
        "capacityInBytes": {
          "format": "int64",
          "description": "The volume capacity.",
          "type": "integer"
        },
        "freeSpaceInBytes": {
          "format": "int64",
          "description": "The free space available in this volume.",
          "type": "integer"
        },
        "thresholdPercentage": {
          "format": "int32",
          "description": "The threshold percentage.",
          "type": "integer"
        }
      }
    },
    "ReverseReplicationInput": {
      "description": "Reverse replication input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReverseReplicationInputProperties",
          "description": "Reverse replication properties"
        }
      }
    },
    "ReverseReplicationInputProperties": {
      "description": "Reverse replication input properties.",
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "Failover direction.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput",
          "description": "Provider specific reverse replication input."
        }
      }
    },
    "ReverseReplicationProviderSpecificInput": {
      "description": "Provider specific reverse replication input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "RoleAssignment": {
      "description": "Azure role assignment details.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ARM Id of the role assignment.",
          "type": "string"
        },
        "name": {
          "description": "The name of the role assignment.",
          "type": "string"
        },
        "scope": {
          "description": "Role assignment scope.",
          "type": "string"
        },
        "principalId": {
          "description": "Principal Id.",
          "type": "string"
        },
        "roleDefinitionId": {
          "description": "Role definition id.",
          "type": "string"
        }
      }
    },
    "RunAsAccount": {
      "description": "CS Accounts Details.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The CS RunAs account Id.",
          "type": "string"
        },
        "accountName": {
          "description": "The CS RunAs account name.",
          "type": "string"
        }
      }
    },
    "SanEnableProtectionInput": {
      "description": "San enable protection provider specific input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "San"
    },
    "ScriptActionTaskDetails": {
      "description": "This class represents the script action task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "path": {
          "description": "The path.",
          "type": "string"
        },
        "output": {
          "description": "The output.",
          "type": "string"
        },
        "isPrimarySideScript": {
          "description": "A value indicating whether it is a primary side script or not.",
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "ScriptActionTaskDetails"
    },
    "ServiceError": {
      "description": "ASR error model",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message.",
          "type": "string"
        },
        "possibleCauses": {
          "description": "Possible causes of error.",
          "type": "string"
        },
        "recommendedAction": {
          "description": "Recommended action to resolve error.",
          "type": "string"
        },
        "activityId": {
          "description": "Activity Id.",
          "type": "string"
        }
      }
    },
    "StorageClassification": {
      "description": "Storage object definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageClassificationProperties",
          "description": "Properties of the storage object."
        }
      }
    },
    "StorageClassificationCollection": {
      "description": "Collection of storage details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The storage details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageClassification"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "StorageClassificationMapping": {
      "description": "Storage mapping object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageClassificationMappingProperties",
          "description": "Properties of the storage mapping object."
        }
      }
    },
    "StorageClassificationMappingCollection": {
      "description": "Collection of storage mapping details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The storage details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageClassificationMapping"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "StorageClassificationMappingInput": {
      "description": "Storage mapping input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageMappingInputProperties",
          "description": "Storage mapping input properties."
        }
      }
    },
    "StorageClassificationMappingProperties": {
      "description": "Storage mapping properties.",
      "type": "object",
      "properties": {
        "targetStorageClassificationId": {
          "description": "Target storage object Id.",
          "type": "string"
        }
      }
    },
    "StorageClassificationProperties": {
      "description": "Storage object properties.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the Storage classification.",
          "type": "string"
        }
      }
    },
    "StorageMappingInputProperties": {
      "description": "Storage mapping input properties.",
      "type": "object",
      "properties": {
        "targetStorageClassificationId": {
          "description": "The ID of the storage object.",
          "type": "string"
        }
      }
    },
    "Subnet": {
      "description": "Subnets of the network.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The subnet name.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The subnet friendly name.",
          "type": "string"
        },
        "addressList": {
          "description": "The list of addresses for the subnet.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SupportedOperatingSystems": {
      "description": "Response object for supported operating systems API.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SupportedOSProperties",
          "description": "Properties model for supported OS API."
        }
      }
    },
    "SupportedOSDetails": {
      "description": "Supported Operating system details.",
      "type": "object",
      "properties": {
        "osName": {
          "description": "The name.",
          "type": "string"
        },
        "osType": {
          "description": "The type.",
          "type": "string"
        },
        "osVersions": {
          "description": "List of version for OS.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OSVersionWrapper"
          }
        }
      }
    },
    "SupportedOSProperties": {
      "description": "Properties model for supported OS API.",
      "type": "object",
      "properties": {
        "supportedOsList": {
          "description": "The supported OS List.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportedOSProperty"
          }
        }
      }
    },
    "SupportedOSProperty": {
      "description": "Property object for supported OS api.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the replication provider type.",
          "type": "string",
          "readOnly": true
        },
        "supportedOs": {
          "description": "List of supported OS.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportedOSDetails"
          }
        }
      }
    },
    "SwitchProtectionInput": {
      "description": "Switch protection input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SwitchProtectionInputProperties",
          "description": "Switch protection properties"
        }
      }
    },
    "SwitchProtectionInputProperties": {
      "description": "Switch protection input properties.",
      "type": "object",
      "properties": {
        "replicationProtectedItemName": {
          "description": "The unique replication protected item name.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/SwitchProtectionProviderSpecificInput",
          "description": "Provider specific switch protection input."
        }
      }
    },
    "SwitchProtectionJobDetails": {
      "description": "This class represents details for switch protection job.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "properties": {
        "newReplicationProtectedItemId": {
          "description": "ARM Id of the new replication protected item.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "SwitchProtectionJobDetails"
    },
    "SwitchProtectionProviderSpecificInput": {
      "description": "Provider specific switch protection input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the Instance type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "TargetComputeSize": {
      "description": "Represents applicable recovery vm sizes.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The Id.",
          "type": "string"
        },
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "type": {
          "description": "The Type of the object.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/TargetComputeSizeProperties",
          "description": "The custom data."
        }
      }
    },
    "TargetComputeSizeCollection": {
      "description": "Target compute size collection.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of target compute sizes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetComputeSize"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "TargetComputeSizeProperties": {
      "description": "Represents applicable recovery vm sizes properties.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Target compute size name.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Target compute size display name.",
          "type": "string"
        },
        "cpuCoresCount": {
          "format": "int32",
          "description": "The maximum cpu cores count supported by target compute size.",
          "type": "integer"
        },
        "memoryInGB": {
          "format": "double",
          "description": "The maximum memory in GB supported by target compute size.",
          "type": "number"
        },
        "maxDataDiskCount": {
          "format": "int32",
          "description": "The maximum data disks count supported by target compute size.",
          "type": "integer"
        },
        "maxNicsCount": {
          "format": "int32",
          "description": "The maximum Nics count supported by target compute size.",
          "type": "integer"
        },
        "errors": {
          "description": "The reasons why the target compute size is not applicable for the protected item.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputeSizeErrorDetails"
          }
        },
        "highIopsSupported": {
          "description": "The value indicating whether the target compute size supports high Iops.",
          "type": "string"
        }
      }
    },
    "TaskTypeDetails": {
      "description": "Task details based on specific task type.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The type of task details.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "TestFailoverCleanupInput": {
      "description": "Input definition for test failover cleanup.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TestFailoverCleanupInputProperties",
          "description": "Test failover cleanup input properties."
        }
      }
    },
    "TestFailoverCleanupInputProperties": {
      "description": "Input definition for test failover cleanup input properties.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Test failover cleanup comments.",
          "type": "string"
        }
      }
    },
    "TestFailoverInput": {
      "description": "Input definition for planned failover.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TestFailoverInputProperties",
          "description": "Planned failover input properties"
        }
      }
    },
    "TestFailoverInputProperties": {
      "description": "Input definition for planned failover input properties.",
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "Failover direction.",
          "type": "string"
        },
        "networkType": {
          "description": "Network type to be used for test failover.",
          "type": "string"
        },
        "networkId": {
          "description": "The id of the network to be used for test failover",
          "type": "string"
        },
        "skipTestFailoverCleanup": {
          "description": "A value indicating whether the test failover cleanup is to be skipped.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ProviderSpecificFailoverInput",
          "description": "Provider specific settings"
        }
      }
    },
    "TestFailoverJobDetails": {
      "description": "This class represents the details for a test failover job.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "properties": {
        "testFailoverStatus": {
          "description": "The test failover status.",
          "type": "string"
        },
        "comments": {
          "description": "The test failover comments.",
          "type": "string"
        },
        "networkName": {
          "description": "The test network name.",
          "type": "string"
        },
        "networkFriendlyName": {
          "description": "The test network friendly name.",
          "type": "string"
        },
        "networkType": {
          "description": "The test network type (see TestFailoverInput enum for possible values).",
          "type": "string"
        },
        "protectedItemDetails": {
          "description": "The test VM details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailoverReplicationProtectedItemDetails"
          }
        }
      },
      "x-ms-discriminator-value": "TestFailoverJobDetails"
    },
    "TestMigrateCleanupInput": {
      "description": "Input for test migrate cleanup.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TestMigrateCleanupInputProperties",
          "description": "Test migrate cleanup input properties."
        }
      }
    },
    "TestMigrateCleanupInputProperties": {
      "description": "Test migrate cleanup input properties.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Test migrate cleanup comments.",
          "type": "string"
        }
      }
    },
    "TestMigrateInput": {
      "description": "Input for test migrate.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TestMigrateInputProperties",
          "description": "Test migrate input properties."
        }
      }
    },
    "TestMigrateInputProperties": {
      "description": "Test migrate input properties.",
      "required": [
        "providerSpecificDetails"
      ],
      "type": "object",
      "properties": {
        "providerSpecificDetails": {
          "$ref": "#/definitions/TestMigrateProviderSpecificInput",
          "description": "The provider specific details."
        }
      }
    },
    "TestMigrateProviderSpecificInput": {
      "description": "Test migrate provider specific input.",
      "required": [
        "instanceType"
      ],
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "UnplannedFailoverInput": {
      "description": "Input definition for planned failover.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UnplannedFailoverInputProperties",
          "description": "Planned failover input properties"
        }
      }
    },
    "UnplannedFailoverInputProperties": {
      "description": "Input definition for planned failover input properties.",
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "Failover direction.",
          "type": "string"
        },
        "sourceSiteOperations": {
          "description": "Source site operations status",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ProviderSpecificFailoverInput",
          "description": "Provider specific settings"
        }
      }
    },
    "UpdateMigrationItemInput": {
      "description": "Update migration item input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateMigrationItemInputProperties",
          "description": "Update migration item input properties."
        }
      }
    },
    "UpdateMigrationItemInputProperties": {
      "description": "Update migration item input properties.",
      "required": [
        "providerSpecificDetails"
      ],
      "type": "object",
      "properties": {
        "providerSpecificDetails": {
          "$ref": "#/definitions/UpdateMigrationItemProviderSpecificInput",
          "description": "The provider specific input to update migration item."
        }
      }
    },
    "UpdateMigrationItemProviderSpecificInput": {
      "description": "Update migration item provider specific input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "UpdateMobilityServiceRequest": {
      "description": "Request to update the mobility service on a protected item.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateMobilityServiceRequestProperties",
          "description": "The properties of the update mobility service request."
        }
      }
    },
    "UpdateMobilityServiceRequestProperties": {
      "description": "The properties of an update mobility service request.",
      "type": "object",
      "properties": {
        "runAsAccountId": {
          "description": "The CS run as account Id.",
          "type": "string"
        }
      }
    },
    "UpdateNetworkMappingInput": {
      "description": "Update network mapping input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateNetworkMappingInputProperties",
          "description": "The input properties needed to update network mapping."
        }
      }
    },
    "UpdateNetworkMappingInputProperties": {
      "description": "Common input details for network mapping operation.",
      "type": "object",
      "properties": {
        "recoveryFabricName": {
          "description": "Recovery fabric name.",
          "type": "string"
        },
        "recoveryNetworkId": {
          "description": "Recovery network Id.",
          "type": "string"
        },
        "fabricSpecificDetails": {
          "$ref": "#/definitions/FabricSpecificUpdateNetworkMappingInput",
          "description": "Fabrics specific input network Id."
        }
      }
    },
    "UpdatePolicyInput": {
      "description": "Update policy input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdatePolicyInputProperties",
          "description": "The ReplicationProviderSettings."
        }
      }
    },
    "UpdatePolicyInputProperties": {
      "description": "Policy update properties.",
      "type": "object",
      "properties": {
        "replicationProviderSettings": {
          "$ref": "#/definitions/PolicyProviderSpecificInput",
          "description": "The ReplicationProviderSettings."
        }
      }
    },
    "UpdateProtectionContainerMappingInput": {
      "description": "Container pairing update input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateProtectionContainerMappingInputProperties",
          "description": "Update protection container mapping input properties."
        }
      }
    },
    "UpdateProtectionContainerMappingInputProperties": {
      "description": "Container pairing update input.",
      "type": "object",
      "properties": {
        "providerSpecificInput": {
          "$ref": "#/definitions/ReplicationProviderSpecificUpdateContainerMappingInput",
          "description": "Provider specific input for updating protection container mapping."
        }
      }
    },
    "UpdateRecoveryPlanInput": {
      "description": "Update recovery plan input class.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateRecoveryPlanInputProperties",
          "description": "Recovery plan update properties."
        }
      }
    },
    "UpdateRecoveryPlanInputProperties": {
      "description": "Recovery plan update properties.",
      "type": "object",
      "properties": {
        "groups": {
          "description": "The recovery plan groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanGroup"
          }
        }
      }
    },
    "UpdateReplicationProtectedItemInput": {
      "description": "Update replication protected item input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateReplicationProtectedItemInputProperties",
          "description": "Update replication protected item properties."
        }
      }
    },
    "UpdateReplicationProtectedItemInputProperties": {
      "description": "Update protected item input properties.",
      "type": "object",
      "properties": {
        "recoveryAzureVMName": {
          "description": "Target azure VM name given by the user.",
          "type": "string"
        },
        "recoveryAzureVMSize": {
          "description": "Target Azure Vm size.",
          "type": "string"
        },
        "selectedRecoveryAzureNetworkId": {
          "description": "Target Azure Network Id.",
          "type": "string"
        },
        "selectedTfoAzureNetworkId": {
          "description": "The Azure Network Id for test failover.",
          "type": "string"
        },
        "selectedSourceNicId": {
          "description": "The selected source nic Id which will be used as the primary nic during failover.",
          "type": "string"
        },
        "enableRdpOnTargetOption": {
          "description": "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "vmNics": {
          "description": "The list of vm nic details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicInputDetails"
          }
        },
        "licenseType": {
          "description": "License type.",
          "enum": [
            "NotSpecified",
            "NoLicenseType",
            "WindowsServer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LicenseType",
            "modelAsString": true
          }
        },
        "recoveryAvailabilitySetId": {
          "description": "The target availability set id.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/UpdateReplicationProtectedItemProviderInput",
          "description": "The provider specific input to update replication protected item."
        }
      }
    },
    "UpdateReplicationProtectedItemProviderInput": {
      "description": "Update replication protected item provider specific input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "UpdateVCenterRequest": {
      "description": "Input required to update vCenter.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateVCenterRequestProperties",
          "description": "The update VCenter Request Properties."
        }
      }
    },
    "UpdateVCenterRequestProperties": {
      "description": "The properties of an update vCenter request.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "The friendly name of the vCenter.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address of the vCenter to be discovered.",
          "type": "string"
        },
        "processServerId": {
          "description": "The process server Id from where the update can be orchestrated.",
          "type": "string"
        },
        "port": {
          "description": "The port number for discovery.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The CS account Id which has privileges to update the vCenter.",
          "type": "string"
        }
      }
    },
    "VaultHealthDetails": {
      "description": "Vault health details definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/VaultHealthProperties",
          "description": "The vault health related data."
        }
      }
    },
    "VaultHealthProperties": {
      "description": "class to define the health summary of the Vault.",
      "type": "object",
      "properties": {
        "vaultErrors": {
          "description": "The list of errors on the vault.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        },
        "protectedItemsHealth": {
          "$ref": "#/definitions/ResourceHealthSummary",
          "description": "The list of the health detail of the protected items in the vault."
        },
        "fabricsHealth": {
          "$ref": "#/definitions/ResourceHealthSummary",
          "description": "The list of the health detail of the fabrics in the vault."
        },
        "containersHealth": {
          "$ref": "#/definitions/ResourceHealthSummary",
          "description": "The list of the health detail of the containers in the vault."
        }
      }
    },
    "VaultSetting": {
      "description": "Vault setting.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/VaultSettingProperties",
          "description": "The vault setting properties."
        }
      }
    },
    "VaultSettingCollection": {
      "description": "Vault setting collection.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of vault setting.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VaultSetting"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "VaultSettingCreationInput": {
      "description": "Input to create vault setting.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VaultSettingCreationInputProperties",
          "description": "Vault setting creation input properties."
        }
      }
    },
    "VaultSettingCreationInputProperties": {
      "description": "Input to create vault setting.",
      "required": [
        "migrationSolutionId"
      ],
      "type": "object",
      "properties": {
        "migrationSolutionId": {
          "description": "The migration solution Id.",
          "type": "string"
        }
      }
    },
    "VaultSettingProperties": {
      "description": "Vault setting properties.",
      "type": "object",
      "properties": {
        "migrationSolutionId": {
          "description": "The migration solution ARM Id.",
          "type": "string"
        }
      }
    },
    "VCenter": {
      "description": "vCenter definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/VCenterProperties",
          "description": "VCenter related data."
        }
      }
    },
    "VCenterCollection": {
      "description": "Collection of vCenter details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The vCenter details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VCenter"
          }
        },
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        }
      }
    },
    "VCenterProperties": {
      "description": "vCenter properties.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the vCenter.",
          "type": "string"
        },
        "internalId": {
          "description": "VCenter internal ID.",
          "type": "string"
        },
        "lastHeartbeat": {
          "format": "date-time",
          "description": "The time when the last heartbeat was received by vCenter.",
          "type": "string"
        },
        "discoveryStatus": {
          "description": "The VCenter discovery status.",
          "type": "string"
        },
        "processServerId": {
          "description": "The process server Id.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address of the vCenter.",
          "type": "string"
        },
        "infrastructureId": {
          "description": "The infrastructure Id of vCenter.",
          "type": "string"
        },
        "port": {
          "description": "The port number for discovery.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The account Id which has privileges to discover the vCenter.",
          "type": "string"
        },
        "fabricArmResourceName": {
          "description": "The ARM resource name of the fabric containing this VCenter.",
          "type": "string"
        },
        "healthErrors": {
          "description": "The health errors for this VCenter.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        }
      }
    },
    "VersionDetails": {
      "description": "Version related details.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The agent version.",
          "type": "string"
        },
        "expiryDate": {
          "format": "date-time",
          "description": "Version expiry date.",
          "type": "string"
        },
        "status": {
          "description": "A value indicating whether security update required.",
          "enum": [
            "Supported",
            "NotSupported",
            "Deprecated",
            "UpdateRequired",
            "SecurityUpdateRequired"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AgentVersionStatus",
            "modelAsString": true
          }
        }
      }
    },
    "VirtualMachineTaskDetails": {
      "description": "This class represents the virtual machine task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "skippedReason": {
          "description": "The skipped reason.",
          "type": "string"
        },
        "skippedReasonString": {
          "description": "The skipped reason string.",
          "type": "string"
        },
        "jobTask": {
          "$ref": "#/definitions/JobEntity",
          "description": "The job entity."
        }
      },
      "x-ms-discriminator-value": "VirtualMachineTaskDetails"
    },
    "VmmDetails": {
      "description": "VMM fabric specific details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificDetails"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "VMM"
    },
    "VmmToAzureCreateNetworkMappingInput": {
      "description": "Create network mappings input properties/behavior specific to Vmm to Azure Network mapping.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificCreateNetworkMappingInput"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "VmmToAzure"
    },
    "VmmToAzureNetworkMappingSettings": {
      "description": "E2A Network Mapping fabric specific settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NetworkMappingFabricSpecificSettings"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "VmmToAzure"
    },
    "VmmToAzureUpdateNetworkMappingInput": {
      "description": "Update network mappings input properties/behavior specific to vmm to azure.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificUpdateNetworkMappingInput"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "VmmToAzure"
    },
    "VmmToVmmCreateNetworkMappingInput": {
      "description": "Create network mappings input properties/behavior specific to vmm to vmm Network mapping.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificCreateNetworkMappingInput"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "VmmToVmm"
    },
    "VmmToVmmNetworkMappingSettings": {
      "description": "E2E Network Mapping fabric specific settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NetworkMappingFabricSpecificSettings"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "VmmToVmm"
    },
    "VmmToVmmUpdateNetworkMappingInput": {
      "description": "Update network mappings input properties/behavior specific to vmm to vmm.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificUpdateNetworkMappingInput"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "VmmToVmm"
    },
    "VmmVirtualMachineDetails": {
      "description": "VMM fabric provider specific VM settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ConfigurationSettings"
        }
      ],
      "properties": {
        "sourceItemId": {
          "description": "The source id of the object.",
          "type": "string"
        },
        "generation": {
          "description": "The id of the object in fabric.",
          "type": "string"
        },
        "osDetails": {
          "$ref": "#/definitions/OSDetails",
          "description": "The Last replication time."
        },
        "diskDetails": {
          "description": "The Last successful failover time.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskDetails"
          }
        },
        "hasPhysicalDisk": {
          "description": "A value indicating whether the VM has a physical disk attached. String value of {SrsDataContract.PresenceStatus} enum.",
          "enum": [
            "Unknown",
            "Present",
            "NotPresent"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PresenceStatus",
            "modelAsString": true
          }
        },
        "hasFibreChannelAdapter": {
          "description": "A value indicating whether the VM has a fibre channel adapter attached. String value of {SrsDataContract.PresenceStatus} enum.",
          "enum": [
            "Unknown",
            "Present",
            "NotPresent"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PresenceStatus",
            "modelAsString": true
          }
        },
        "hasSharedVhd": {
          "description": "A value indicating whether the VM has a shared VHD attached. String value of {SrsDataContract.PresenceStatus} enum.",
          "enum": [
            "Unknown",
            "Present",
            "NotPresent"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PresenceStatus",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "VmmVirtualMachine"
    },
    "VMNicDetails": {
      "description": "Hyper V VM network details.",
      "type": "object",
      "properties": {
        "nicId": {
          "description": "The nic Id.",
          "type": "string"
        },
        "replicaNicId": {
          "description": "The replica nic Id.",
          "type": "string"
        },
        "sourceNicArmId": {
          "description": "The source nic ARM Id.",
          "type": "string"
        },
        "vMSubnetName": {
          "description": "VM subnet name.",
          "type": "string"
        },
        "vMNetworkName": {
          "description": "VM network name.",
          "type": "string"
        },
        "recoveryVMNetworkId": {
          "description": "Recovery VM network Id.",
          "type": "string"
        },
        "recoveryVMSubnetName": {
          "description": "Recovery VM subnet name.",
          "type": "string"
        },
        "ipAddressType": {
          "description": "Ip address type.",
          "type": "string"
        },
        "primaryNicStaticIPAddress": {
          "description": "Primary nic static IP address.",
          "type": "string"
        },
        "replicaNicStaticIPAddress": {
          "description": "Replica nic static IP address.",
          "type": "string"
        },
        "selectionType": {
          "description": "Selection type for failover.",
          "type": "string"
        },
        "recoveryNicIpAddressType": {
          "description": "IP allocation type for recovery VM.",
          "type": "string"
        },
        "recoveryPublicIpAddressId": {
          "description": "The id of the public IP address resource associated with the NIC.",
          "type": "string"
        },
        "recoveryNetworkSecurityGroupId": {
          "description": "The id of the NSG associated with the NIC.",
          "type": "string"
        },
        "recoveryLBBackendAddressPoolIds": {
          "description": "The target backend address pools for the NIC.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableAcceleratedNetworkingOnRecovery": {
          "description": "A value indicating whether the NIC has accelerated networking enabled.",
          "type": "boolean"
        },
        "tfoVMNetworkId": {
          "description": "The network to be used by NIC during test failover.",
          "type": "string"
        },
        "tfoVMSubnetName": {
          "description": "The subnet to be used by NIC during test failover.",
          "type": "string"
        },
        "tfoNetworkSecurityGroupId": {
          "description": "The NSG to be used by NIC during test failover.",
          "type": "string"
        },
        "enableAcceleratedNetworkingOnTfo": {
          "description": "Whether the test failover NIC has accelerated networking enabled.",
          "type": "boolean"
        },
        "tfoIPConfigs": {
          "description": "The IP configurations to be used by NIC during test failover.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPConfig"
          }
        }
      }
    },
    "VMNicInputDetails": {
      "description": "Hyper V VM network input details.",
      "type": "object",
      "properties": {
        "nicId": {
          "description": "The nic Id.",
          "type": "string"
        },
        "recoveryVMSubnetName": {
          "description": "Recovery VM subnet name.",
          "type": "string"
        },
        "replicaNicStaticIPAddress": {
          "description": "Replica nic static IP address.",
          "type": "string"
        },
        "selectionType": {
          "description": "Selection type for failover.",
          "type": "string"
        },
        "recoveryPublicIpAddressId": {
          "description": "The id of the public IP address resource associated with the NIC.",
          "type": "string"
        },
        "recoveryNetworkSecurityGroupId": {
          "description": "The id of the NSG associated with the NIC.",
          "type": "string"
        },
        "recoveryLBBackendAddressPoolIds": {
          "description": "The target backend address pools for the NIC.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableAcceleratedNetworkingOnRecovery": {
          "description": "Whether the NIC has accelerated networking enabled.",
          "type": "boolean"
        },
        "tfoVMSubnetName": {
          "description": "The subnet to be used by NIC during test failover.",
          "type": "string"
        },
        "tfoNetworkSecurityGroupId": {
          "description": "The NSG to be used by NIC during test failover.",
          "type": "string"
        },
        "enableAcceleratedNetworkingOnTfo": {
          "description": "Whether the test NIC has accelerated networking enabled.",
          "type": "boolean"
        },
        "tfoIPConfigs": {
          "description": "The IP configurations to be used by NIC during test failover.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPConfig"
          }
        }
      }
    },
    "VmNicUpdatesTaskDetails": {
      "description": "This class represents the vm NicUpdates task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "vmId": {
          "description": "Virtual machine Id.",
          "type": "string"
        },
        "nicId": {
          "description": "Nic Id.",
          "type": "string"
        },
        "name": {
          "description": "Name of the Nic.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "VmNicUpdatesTaskDetails"
    },
    "VMwareCbtContainerCreationInput": {
      "description": "VMwareCbt container creation input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificContainerCreationInput"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "6c7da455-506f-43ff-a16a-8eb101aebb70"
    },
    "VMwareCbtContainerMappingInput": {
      "description": "VMwareCbt container mapping input.",
      "required": [
        "keyVaultId",
        "keyVaultUri",
        "storageAccountId",
        "storageAccountSasSecretName",
        "serviceBusConnectionStringSecretName",
        "targetLocation"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificContainerMappingInput"
        }
      ],
      "properties": {
        "keyVaultId": {
          "description": "The target key vault ARM Id.",
          "type": "string"
        },
        "keyVaultUri": {
          "description": "The target key vault URL.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "The storage account ARM Id.",
          "type": "string"
        },
        "storageAccountSasSecretName": {
          "description": "The secret name of the storage account.",
          "type": "string"
        },
        "serviceBusConnectionStringSecretName": {
          "description": "The secret name of the service bus connection string.",
          "type": "string"
        },
        "targetLocation": {
          "description": "The target location.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "VMwareCbt"
    },
    "VMwareCbtDiskInput": {
      "description": "VMwareCbt disk input.",
      "required": [
        "diskId",
        "isOSDisk",
        "logStorageAccountId",
        "logStorageAccountSasSecretName"
      ],
      "type": "object",
      "properties": {
        "diskId": {
          "description": "The disk Id.",
          "type": "string"
        },
        "isOSDisk": {
          "description": "A value indicating whether the disk is the OS disk.",
          "type": "string"
        },
        "logStorageAccountId": {
          "description": "The log storage account ARM Id.",
          "type": "string"
        },
        "logStorageAccountSasSecretName": {
          "description": "The key vault secret name of the log storage account.",
          "type": "string"
        },
        "diskType": {
          "description": "The disk type.",
          "enum": [
            "Standard_LRS",
            "Premium_LRS",
            "StandardSSD_LRS"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DiskAccountType",
            "modelAsString": true
          }
        }
      }
    },
    "VMwareCbtEnableMigrationInput": {
      "description": "VMwareCbt specific enable migration input.",
      "required": [
        "vmwareMachineId",
        "disksToInclude",
        "dataMoverRunAsAccountId",
        "snapshotRunAsAccountId",
        "targetResourceGroupId",
        "targetNetworkId",
        "instanceType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnableMigrationProviderSpecificInput"
        }
      ],
      "properties": {
        "vmwareMachineId": {
          "description": "The ARM Id of the VM discovered in VMware.",
          "type": "string"
        },
        "disksToInclude": {
          "description": "The disks to include list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMwareCbtDiskInput"
          }
        },
        "licenseType": {
          "description": "License type.",
          "enum": [
            "NotSpecified",
            "NoLicenseType",
            "WindowsServer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LicenseType",
            "modelAsString": true
          }
        },
        "dataMoverRunAsAccountId": {
          "description": "The data mover RunAs account Id.",
          "type": "string"
        },
        "snapshotRunAsAccountId": {
          "description": "The snapshot RunAs account Id.",
          "type": "string"
        },
        "targetVmName": {
          "description": "The target VM name.",
          "type": "string"
        },
        "targetVmSize": {
          "description": "The target VM size.",
          "type": "string"
        },
        "targetResourceGroupId": {
          "description": "The target resource group ARM Id.",
          "type": "string"
        },
        "targetNetworkId": {
          "description": "The target network ARM Id.",
          "type": "string"
        },
        "targetSubnetName": {
          "description": "The target subnet name.",
          "type": "string"
        },
        "targetAvailabilitySetId": {
          "description": "The target availability set ARM Id.",
          "type": "string"
        },
        "targetBootDiagnosticsStorageAccountId": {
          "description": "The target boot diagnostics storage account ARM Id.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "VMwareCbt"
    },
    "VMwareCbtMigrateInput": {
      "description": "VMwareCbt specific migrate input.",
      "required": [
        "performShutdown",
        "instanceType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MigrateProviderSpecificInput"
        }
      ],
      "properties": {
        "performShutdown": {
          "description": "A value indicating whether VM is to be shutdown.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "VMwareCbt"
    },
    "VMwareCbtMigrationDetails": {
      "description": "VMwareCbt provider specific settings",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MigrationProviderSpecificSettings"
        }
      ],
      "properties": {
        "vmwareMachineId": {
          "description": "The ARM Id of the VM discovered in VMware.",
          "type": "string",
          "readOnly": true
        },
        "osType": {
          "description": "The type of the OS on the VM.",
          "type": "string",
          "readOnly": true
        },
        "licenseType": {
          "description": "License Type of the VM to be used.",
          "type": "string"
        },
        "dataMoverRunAsAccountId": {
          "description": "The data mover RunAs account Id.",
          "type": "string",
          "readOnly": true
        },
        "snapshotRunAsAccountId": {
          "description": "The snapshot RunAs account Id.",
          "type": "string",
          "readOnly": true
        },
        "targetVmName": {
          "description": "Target VM name.",
          "type": "string"
        },
        "targetVmSize": {
          "description": "The target VM size.",
          "type": "string"
        },
        "targetLocation": {
          "description": "The target location.",
          "type": "string",
          "readOnly": true
        },
        "targetResourceGroupId": {
          "description": "The target resource group Id.",
          "type": "string"
        },
        "targetAvailabilitySetId": {
          "description": "The target availability set Id.",
          "type": "string"
        },
        "targetBootDiagnosticsStorageAccountId": {
          "description": "The target boot diagnostics storage account ARM Id.",
          "type": "string"
        },
        "protectedDisks": {
          "description": "The list of protected disks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMwareCbtProtectedDiskDetails"
          }
        },
        "targetNetworkId": {
          "description": "The target network Id.",
          "type": "string"
        },
        "vmNics": {
          "description": "The network details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMwareCbtNicDetails"
          }
        },
        "migrationRecoveryPointId": {
          "description": "The recovery point Id to which the VM was migrated.",
          "type": "string",
          "readOnly": true
        },
        "lastRecoveryPointReceived": {
          "format": "date-time",
          "description": "The last recovery point received time.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "VMwareCbt"
    },
    "VMwareCbtNicDetails": {
      "description": "VMwareCbt NIC details.",
      "type": "object",
      "properties": {
        "nicId": {
          "description": "The NIC Id.",
          "type": "string",
          "readOnly": true
        },
        "isPrimaryNic": {
          "description": "A value indicating whether this is the primary NIC.",
          "type": "string"
        },
        "sourceIPAddress": {
          "description": "The source IP address.",
          "type": "string",
          "readOnly": true
        },
        "sourceIPAddressType": {
          "description": "The source IP address type.",
          "enum": [
            "Dynamic",
            "Static"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "EthernetAddressType",
            "modelAsString": true
          }
        },
        "sourceNetworkId": {
          "description": "Source network Id.",
          "type": "string",
          "readOnly": true
        },
        "targetIPAddress": {
          "description": "The target IP address.",
          "type": "string"
        },
        "targetIPAddressType": {
          "description": "The target IP address type.",
          "enum": [
            "Dynamic",
            "Static"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EthernetAddressType",
            "modelAsString": true
          }
        },
        "targetSubnetName": {
          "description": "Target subnet name.",
          "type": "string"
        },
        "isSelectedForMigration": {
          "description": "A value indicating whether this NIC is selected for migration.",
          "type": "string"
        }
      }
    },
    "VMwareCbtNicInput": {
      "description": "VMwareCbt NIC input.",
      "required": [
        "nicId",
        "isPrimaryNic"
      ],
      "type": "object",
      "properties": {
        "nicId": {
          "description": "The NIC Id.",
          "type": "string"
        },
        "isPrimaryNic": {
          "description": "A value indicating whether this is the primary NIC.",
          "type": "string"
        },
        "targetSubnetName": {
          "description": "Target subnet name.",
          "type": "string"
        },
        "targetStaticIPAddress": {
          "description": "The static IP address.",
          "type": "string"
        },
        "isSelectedForMigration": {
          "description": "A value indicating whether this NIC is selected for migration.",
          "type": "string"
        }
      }
    },
    "VMwareCbtPolicyCreationInput": {
      "description": "VMware Cbt policy creation input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryPointHistoryInMinutes": {
          "format": "int32",
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "type": "integer"
        },
        "crashConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The crash consistent snapshot frequency (in minutes).",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The app consistent snapshot frequency (in minutes).",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "VMwareCbt"
    },
    "VmwareCbtPolicyDetails": {
      "description": "VMware Cbt specific policy details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPointHistoryInMinutes": {
          "format": "int32",
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The app consistent snapshot frequency in minutes.",
          "type": "integer"
        },
        "crashConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "The crash consistent snapshot frequency in minutes.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "VMwareCbt"
    },
    "VMwareCbtProtectedDiskDetails": {
      "description": "VMwareCbt protected disk details.",
      "type": "object",
      "properties": {
        "diskId": {
          "description": "The disk id.",
          "type": "string",
          "readOnly": true
        },
        "diskName": {
          "description": "The disk name.",
          "type": "string",
          "readOnly": true
        },
        "diskPath": {
          "description": "The disk path.",
          "type": "string",
          "readOnly": true
        },
        "isOSDisk": {
          "description": "A value indicating whether the disk is the OS disk.",
          "type": "string",
          "readOnly": true
        },
        "capacityInBytes": {
          "format": "int64",
          "description": "The disk capacity in bytes.",
          "type": "integer",
          "readOnly": true
        },
        "logStorageAccountId": {
          "description": "The log storage account ARM Id.",
          "type": "string",
          "readOnly": true
        },
        "logStorageAccountSasSecretName": {
          "description": "The key vault secret name of the log storage account.",
          "type": "string",
          "readOnly": true
        },
        "seedManagedDiskId": {
          "description": "The ARM Id of the seed managed disk.",
          "type": "string",
          "readOnly": true
        },
        "targetManagedDiskId": {
          "description": "The ARM Id of the target managed disk.",
          "type": "string",
          "readOnly": true
        },
        "diskType": {
          "description": "The disk type.",
          "enum": [
            "Standard_LRS",
            "Premium_LRS",
            "StandardSSD_LRS"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DiskType",
            "modelAsString": true
          }
        }
      }
    },
    "VMwareCbtProtectionContainerMappingDetails": {
      "description": "VMwareCbt provider specific container mapping details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainerMappingProviderSpecificDetails"
        }
      ],
      "properties": {
        "keyVaultId": {
          "description": "The target key vault ARM Id.",
          "type": "string",
          "readOnly": true
        },
        "keyVaultUri": {
          "description": "The target key vault URI.",
          "type": "string",
          "readOnly": true
        },
        "storageAccountId": {
          "description": "The storage account ARM Id.",
          "type": "string",
          "readOnly": true
        },
        "storageAccountSasSecretName": {
          "description": "The secret name of the storage account.",
          "type": "string",
          "readOnly": true
        },
        "serviceBusConnectionStringSecretName": {
          "description": "The secret name of the service bus connection string.",
          "type": "string",
          "readOnly": true
        },
        "targetLocation": {
          "description": "The target location.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "VMwareCbt"
    },
    "VMwareCbtTestMigrateInput": {
      "description": "VMwareCbt specific test migrate input.",
      "required": [
        "recoveryPointId",
        "networkId",
        "instanceType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TestMigrateProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryPointId": {
          "description": "The recovery point Id.",
          "type": "string"
        },
        "networkId": {
          "description": "The test network Id.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "VMwareCbt"
    },
    "VMwareCbtUpdateMigrationItemInput": {
      "description": "VMwareCbt specific update migration item input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateMigrationItemProviderSpecificInput"
        }
      ],
      "properties": {
        "targetVmName": {
          "description": "The target VM name.",
          "type": "string"
        },
        "targetVmSize": {
          "description": "The target VM size.",
          "type": "string"
        },
        "targetResourceGroupId": {
          "description": "The target resource group ARM Id.",
          "type": "string"
        },
        "targetAvailabilitySetId": {
          "description": "The target availability set ARM Id.",
          "type": "string"
        },
        "targetBootDiagnosticsStorageAccountId": {
          "description": "The target boot diagnostics storage account ARM Id.",
          "type": "string"
        },
        "targetNetworkId": {
          "description": "The target network ARM Id.",
          "type": "string"
        },
        "vmNics": {
          "description": "The list of NIC details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMwareCbtNicInput"
          }
        },
        "licenseType": {
          "description": "The license type.",
          "enum": [
            "NotSpecified",
            "NoLicenseType",
            "WindowsServer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LicenseType",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "VMwareCbt"
    },
    "VMwareDetails": {
      "description": "Store the fabric details specific to the VMware fabric.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificDetails"
        }
      ],
      "properties": {
        "processServers": {
          "description": "The list of Process Servers associated with the fabric.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessServer"
          }
        },
        "masterTargetServers": {
          "description": "The list of Master Target servers associated with the fabric.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MasterTargetServer"
          }
        },
        "runAsAccounts": {
          "description": "The list of run as accounts created on the server.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RunAsAccount"
          }
        },
        "replicationPairCount": {
          "description": "The number of replication pairs configured in this CS.",
          "type": "string"
        },
        "processServerCount": {
          "description": "The number of process servers.",
          "type": "string"
        },
        "agentCount": {
          "description": "The number of source and target servers configured to talk to this CS.",
          "type": "string"
        },
        "protectedServers": {
          "description": "The number of protected servers.",
          "type": "string"
        },
        "systemLoad": {
          "description": "The percentage of the system load.",
          "type": "string"
        },
        "systemLoadStatus": {
          "description": "The system load status.",
          "type": "string"
        },
        "cpuLoad": {
          "description": "The percentage of the CPU load.",
          "type": "string"
        },
        "cpuLoadStatus": {
          "description": "The CPU load status.",
          "type": "string"
        },
        "totalMemoryInBytes": {
          "format": "int64",
          "description": "The total memory.",
          "type": "integer"
        },
        "availableMemoryInBytes": {
          "format": "int64",
          "description": "The available memory.",
          "type": "integer"
        },
        "memoryUsageStatus": {
          "description": "The memory usage status.",
          "type": "string"
        },
        "totalSpaceInBytes": {
          "format": "int64",
          "description": "The total space.",
          "type": "integer"
        },
        "availableSpaceInBytes": {
          "format": "int64",
          "description": "The available space.",
          "type": "integer"
        },
        "spaceUsageStatus": {
          "description": "The space usage status.",
          "type": "string"
        },
        "webLoad": {
          "description": "The web load.",
          "type": "string"
        },
        "webLoadStatus": {
          "description": "The web load status.",
          "type": "string"
        },
        "databaseServerLoad": {
          "description": "The database server load.",
          "type": "string"
        },
        "databaseServerLoadStatus": {
          "description": "The database server load status.",
          "type": "string"
        },
        "csServiceStatus": {
          "description": "The CS service status.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address.",
          "type": "string"
        },
        "agentVersion": {
          "description": "The agent Version.",
          "type": "string"
        },
        "hostName": {
          "description": "The host name.",
          "type": "string"
        },
        "lastHeartbeat": {
          "format": "date-time",
          "description": "The last heartbeat received from CS server.",
          "type": "string"
        },
        "versionStatus": {
          "description": "Version status",
          "type": "string"
        },
        "sslCertExpiryDate": {
          "format": "date-time",
          "description": "CS SSL cert expiry date.",
          "type": "string"
        },
        "sslCertExpiryRemainingDays": {
          "format": "int32",
          "description": "CS SSL cert expiry date.",
          "type": "integer"
        },
        "psTemplateVersion": {
          "description": "PS template version.",
          "type": "string"
        },
        "agentExpiryDate": {
          "format": "date-time",
          "description": "Agent expiry date.",
          "type": "string"
        },
        "agentVersionDetails": {
          "$ref": "#/definitions/VersionDetails",
          "description": "The agent version details."
        }
      },
      "x-ms-discriminator-value": "VMware"
    },
    "VMwareV2FabricCreationInput": {
      "description": "VMwareV2 fabric provider specific settings.",
      "required": [
        "vmwareSiteId",
        "migrationSolutionId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificCreationInput"
        }
      ],
      "properties": {
        "vmwareSiteId": {
          "description": "The ARM Id of the VMware site.",
          "type": "string"
        },
        "migrationSolutionId": {
          "description": "The ARM Id of the migration solution.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "VMwareV2"
    },
    "VMwareV2FabricSpecificDetails": {
      "description": "VMwareV2 fabric specific details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificDetails"
        }
      ],
      "properties": {
        "vmwareSiteId": {
          "description": "The ARM Id of the VMware site.",
          "type": "string",
          "readOnly": true
        },
        "migrationSolutionId": {
          "description": "The Migration solution ARM Id.",
          "type": "string",
          "readOnly": true
        },
        "serviceEndpoint": {
          "description": "The service endpoint.",
          "type": "string",
          "readOnly": true
        },
        "serviceResourceId": {
          "description": "The service resource Id.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "VMwareV2"
    },
    "VMwareVirtualMachineDetails": {
      "description": "VMware provider specific settings",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ConfigurationSettings"
        }
      ],
      "properties": {
        "agentGeneratedId": {
          "description": "The ID generated by the InMage agent after it gets installed on guest. This is the ID to be used during InMage CreateProtection.",
          "type": "string"
        },
        "agentInstalled": {
          "description": "The value indicating if InMage scout agent is installed on guest.",
          "type": "string"
        },
        "osType": {
          "description": "The OsType installed on VM.",
          "type": "string"
        },
        "agentVersion": {
          "description": "The agent version.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address.",
          "type": "string"
        },
        "poweredOn": {
          "description": "The value indicating whether VM is powered on.",
          "type": "string"
        },
        "vCenterInfrastructureId": {
          "description": "The VCenter infrastructure Id.",
          "type": "string"
        },
        "discoveryType": {
          "description": "A value indicating the discovery type of the machine. Value can be vCenter or physical.",
          "type": "string"
        },
        "diskDetails": {
          "description": "The disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InMageDiskDetails"
          }
        },
        "validationErrors": {
          "description": "The validation errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        }
      },
      "x-ms-discriminator-value": "VMwareVirtualMachine"
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription Id.",
      "required": true,
      "type": "string"
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group where the recovery services vault is present.",
      "required": true,
      "x-ms-parameter-location": "client",
      "type": "string"
    },
    "ResourceName": {
      "name": "resourceName",
      "in": "path",
      "description": "The name of the recovery services vault.",
      "required": true,
      "x-ms-parameter-location": "client",
      "type": "string"
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "description": "Client Api Version.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account."
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "x-internal-service-id": "site-recovery",
  "x-internal-service-name": "Recovery Services - Site Recovery",
  "x-internal-toc-name": "Replication Protectable Items",
  "x-internal-product-uid": null,
  "x-internal-split-members": [
    {
      "displayName": "Get",
      "relativePath": "ReplicationProtectableItems/Get"
    },
    {
      "displayName": "List By Replication Protection Containers",
      "relativePath": "ReplicationProtectableItems/ListByReplicationProtectionContainers"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}