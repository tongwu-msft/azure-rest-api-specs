{
  "swagger": "2.0",
  "info": {
    "version": "2017-03-01",
    "title": "ApiManagementClient",
    "description": "Use these REST APIs to get the analytics reports associated with your Azure API Management deployment."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {},
  "definitions": {
    "ReportCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportRecordContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Report records list representation."
    },
    "ReportRecordContract": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name depending on report endpoint specifies product, API, operation or developer name."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "interval": {
          "type": "string",
          "description": "Length of agregation period.  Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations)."
        },
        "country": {
          "type": "string",
          "description": "Country to which this record data is related."
        },
        "region": {
          "type": "string",
          "description": "Country region to which this record data is related."
        },
        "zip": {
          "type": "string",
          "description": "Zip code to which this record data is related."
        },
        "userId": {
          "readOnly": true,
          "type": "string",
          "description": "User identifier path. /users/{userId}"
        },
        "productId": {
          "readOnly": true,
          "type": "string",
          "description": "Product identifier path. /products/{productId}"
        },
        "apiId": {
          "type": "string",
          "description": "API identifier path. /apis/{apiId}"
        },
        "operationId": {
          "type": "string",
          "description": "Operation identifier path. /apis/{apiId}/operations/{operationId}"
        },
        "apiRegion": {
          "type": "string",
          "description": "API region identifier."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription identifier path. /subscriptions/{subscriptionId}"
        },
        "callCountSuccess": {
          "type": "integer",
          "format": "int32",
          "description": "Number of succesful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect"
        },
        "callCountBlocked": {
          "type": "integer",
          "format": "int32",
          "description": "Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorize and HttpStatusCode.Forbidden and HttpStatusCode.TooManyRequests"
        },
        "callCountFailed": {
          "type": "integer",
          "format": "int32",
          "description": "Number of calls failed due to proxy or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and any Code between HttpStatusCode.InternalServerError (500) and 600"
        },
        "callCountOther": {
          "type": "integer",
          "format": "int32",
          "description": "Number of other calls."
        },
        "callCountTotal": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of calls."
        },
        "bandwidth": {
          "type": "integer",
          "format": "int64",
          "description": "Bandwidth consumed."
        },
        "cacheHitCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of times when content was served from cache policy."
        },
        "cacheMissCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of times content was fetched from backend."
        },
        "apiTimeAvg": {
          "type": "number",
          "format": "double",
          "description": "Average time it took to process request."
        },
        "apiTimeMin": {
          "type": "number",
          "format": "double",
          "description": "Minimum time it took to process request."
        },
        "apiTimeMax": {
          "type": "number",
          "format": "double",
          "description": "Maximum time it took to process request."
        },
        "serviceTimeAvg": {
          "type": "number",
          "format": "double",
          "description": "Average time it took to process request on backend."
        },
        "serviceTimeMin": {
          "type": "number",
          "format": "double",
          "description": "Minimum time it took to process request on backend."
        },
        "serviceTimeMax": {
          "type": "number",
          "format": "double",
          "description": "Maximum time it took to process request on backend."
        }
      },
      "description": "Report data."
    },
    "RequestReportCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestReportRecordContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        }
      },
      "description": "Paged Report records list representation."
    },
    "RequestReportRecordContract": {
      "properties": {
        "apiId": {
          "type": "string",
          "description": "API identifier path. /apis/{apiId}"
        },
        "operationId": {
          "type": "string",
          "description": "Operation identifier path. /apis/{apiId}/operations/{operationId}"
        },
        "productId": {
          "readOnly": true,
          "type": "string",
          "description": "Product identifier path. /products/{productId}"
        },
        "userId": {
          "readOnly": true,
          "type": "string",
          "description": "User identifier path. /users/{userId}"
        },
        "method": {
          "type": "string",
          "description": "The HTTP method associated with this request.."
        },
        "url": {
          "type": "string",
          "description": "The full URL associated with this request."
        },
        "ipAddress": {
          "type": "string",
          "description": "The client IP address associated with this request."
        },
        "backendResponseCode": {
          "type": "string",
          "description": "The HTTP status code received by the gateway as a result of forwarding this request to the backend."
        },
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "The HTTP status code returned by the gateway."
        },
        "responseSize": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the response returned by the gateway."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when this request was received by the gateway in ISO 8601 format."
        },
        "cache": {
          "type": "string",
          "description": "Specifies if response cache was involved in generating the response. If the value is none, the cache was not used. If the value is hit, cached response was returned. If the value is miss, the cache was used but lookup resulted in a miss and request was fullfilled by the backend."
        },
        "apiTime": {
          "type": "number",
          "format": "double",
          "description": "The total time it took to process this request."
        },
        "serviceTime": {
          "type": "number",
          "format": "double",
          "description": "he time it took to forward this request to the backend and get the response back."
        },
        "apiRegion": {
          "type": "string",
          "description": "Azure region where the gateway that processed this request is located."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription identifier path. /subscriptions/{subscriptionId}"
        },
        "requestId": {
          "type": "string",
          "description": "Request Identifier."
        },
        "requestSize": {
          "type": "integer",
          "format": "int32",
          "description": "The size of this request.."
        }
      },
      "description": "Request Report data."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "SkipQueryParameter": {
      "name": "$skip",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to skip.",
      "minimum": 0,
      "x-ms-parameter-location": "method"
    },
    "TopQueryParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to return.",
      "minimum": 1,
      "x-ms-parameter-location": "method"
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Reports",
  "x-internal-split-members": [
    {
      "displayName": "List By Api",
      "relativePath": "Reports/ListByApi"
    },
    {
      "displayName": "List By Geo",
      "relativePath": "Reports/ListByGeo"
    },
    {
      "displayName": "List By Operation",
      "relativePath": "Reports/ListByOperation"
    },
    {
      "displayName": "List By Product",
      "relativePath": "Reports/ListByProduct"
    },
    {
      "displayName": "List By Request",
      "relativePath": "Reports/ListByRequest"
    },
    {
      "displayName": "List By Subscription",
      "relativePath": "Reports/ListBySubscription"
    },
    {
      "displayName": "List By Time",
      "relativePath": "Reports/ListByTime"
    },
    {
      "displayName": "List By User",
      "relativePath": "Reports/ListByUser"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}