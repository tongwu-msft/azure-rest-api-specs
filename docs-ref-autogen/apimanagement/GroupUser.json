{
  "swagger": "2.0",
  "info": {
    "version": "2017-03-01",
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on Group entity in your Azure API Management deployment. Groups are used to manage the visibility of products to developers. Each API Management service instance comes with the following immutable system groups whose membership is automatically managed by API Management.  - **Administrators** - Azure subscription administrators are members of this group. - **Developers** - Authenticated developer portal users fall into this group. - **Guests** - Unauthenticated developer portal users are placed into this group. In addition to these system groups, administrators can create custom groups or [leverage external groups in associated Azure Active Directory tenants](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-aad#how-to-add-an-external-azure-active-directory-group). Custom and external groups can be used alongside system groups in giving developers visibility and access to API products. For example, you could create one custom group for developers affiliated with a specific partner organization and allow them access to the APIs from a product containing relevant APIs only. A user can be a member of more than one group."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {},
  "definitions": {
    "GroupCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Group list representation."
    },
    "GroupContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GroupContractProperties",
          "description": "Group entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Contract details."
    },
    "GroupContractProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Group name.",
          "maxLength": 300,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "description": "Group description. Can contain HTML formatting tags.",
          "maxLength": 1000
        },
        "builtIn": {
          "readOnly": true,
          "type": "boolean",
          "description": "true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false."
        },
        "type": {
          "type": "string",
          "description": "Group type.",
          "enum": [
            "custom",
            "system",
            "external"
          ],
          "x-ms-enum": {
            "name": "GroupType",
            "modelAsString": false
          }
        },
        "externalId": {
          "type": "string",
          "description": "For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory aad://<tenant>.onmicrosoft.com/groups/<group object id>; otherwise the value is null."
        }
      },
      "required": [
        "displayName"
      ],
      "description": "Developer group."
    },
    "GroupCreateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GroupCreateParametersProperties",
          "description": "Properties supplied to Create Group operation."
        }
      },
      "description": "Parameters supplied to the Create Group operation."
    },
    "GroupCreateParametersProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Group name.",
          "maxLength": 300,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "description": "Group description."
        },
        "type": {
          "type": "string",
          "description": "Group type.",
          "enum": [
            "custom",
            "system",
            "external"
          ],
          "x-ms-enum": {
            "name": "GroupType",
            "modelAsString": false
          }
        },
        "externalId": {
          "type": "string",
          "description": "Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory aad://<tenant>.onmicrosoft.com/groups/<group object id>; otherwise the value is null."
        }
      },
      "required": [
        "displayName"
      ],
      "description": "Parameters supplied to the Create Group operation."
    },
    "GroupUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GroupUpdateParametersProperties",
          "description": "Group entity update contract properties."
        }
      },
      "description": "Parameters supplied to the Update Group operation."
    },
    "GroupUpdateParametersProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Group name.",
          "maxLength": 300,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "description": "Group description."
        },
        "type": {
          "type": "string",
          "description": "Group type.",
          "enum": [
            "custom",
            "system",
            "external"
          ],
          "x-ms-enum": {
            "name": "GroupType",
            "modelAsString": false
          }
        },
        "externalId": {
          "type": "string",
          "description": "Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory aad://<tenant>.onmicrosoft.com/groups/<group object id>; otherwise the value is null."
        }
      },
      "description": "Parameters supplied to the Update Group operation."
    },
    "PolicyContractProperties": {
      "properties": {
        "policyContent": {
          "type": "string",
          "description": "Xml Encoded contents of the Policy."
        }
      },
      "required": [
        "policyContent"
      ],
      "description": "Policy contract Properties."
    },
    "PolicyContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PolicyContractProperties",
          "description": "Properties of the Policy."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Policy Contract details."
    },
    "Resource": {
      "description": "The Resource definition.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type for API Management resource."
        }
      }
    },
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponse": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    },
    "UserIdentityContract": {
      "properties": {
        "provider": {
          "type": "string",
          "description": "Identity provider name."
        },
        "id": {
          "type": "string",
          "description": "Identifier value within provider."
        }
      },
      "description": "User identity details."
    },
    "UserUpdateParametersProperties": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address. Must not be empty and must be unique within the service instance.",
          "minLength": 1,
          "maxLength": 254
        },
        "password": {
          "type": "string",
          "description": "User Password."
        },
        "firstName": {
          "type": "string",
          "description": "First name.",
          "minLength": 1,
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "description": "Last name.",
          "minLength": 1,
          "maxLength": 100
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ],
      "description": "Parameters supplied to the Update User operation."
    },
    "UserCreateParameterProperties": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address. Must not be empty and must be unique within the service instance.",
          "minLength": 1,
          "maxLength": 254
        },
        "firstName": {
          "type": "string",
          "description": "First name.",
          "minLength": 1,
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "description": "Last name.",
          "minLength": 1,
          "maxLength": 100
        },
        "password": {
          "type": "string",
          "description": "User Password. If no value is provided, a default password is generated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ],
      "required": [
        "email",
        "firstName",
        "lastName"
      ],
      "description": "Parameters supplied to the Create User operation."
    },
    "UserContractProperties": {
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name."
        },
        "lastName": {
          "type": "string",
          "description": "Last name."
        },
        "email": {
          "type": "string",
          "description": "Email address."
        },
        "registrationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "groups": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupContract"
          },
          "description": "Collection of groups user is part of."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ],
      "description": "User profile."
    },
    "UserEntityBaseParameters": {
      "properties": {
        "state": {
          "type": "string",
          "description": "Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.",
          "enum": [
            "active",
            "blocked"
          ],
          "default": "active",
          "x-ms-enum": {
            "name": "UserState",
            "modelAsString": false
          }
        },
        "note": {
          "type": "string",
          "description": "Optional note about a user set by the administrator."
        },
        "identities": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserIdentityContract"
          },
          "description": "Collection of user identities."
        }
      },
      "description": "User Entity Base Parameters set."
    },
    "UserContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserContractProperties",
          "description": "User entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "User details."
    },
    "UserCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Users list representation."
    }
  },
  "parameters": {
    "GroupIdParameter": {
      "name": "groupId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Group identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "UserIdParameter": {
      "name": "uid",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "User identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "SkipQueryParameter": {
      "name": "$skip",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to skip.",
      "minimum": 0,
      "x-ms-parameter-location": "method"
    },
    "TopQueryParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to return.",
      "minimum": 1,
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Group User",
  "x-internal-split-members": [
    {
      "displayName": "Create",
      "relativePath": "GroupUser/Create"
    },
    {
      "displayName": "Delete",
      "relativePath": "GroupUser/Delete"
    },
    {
      "displayName": "List",
      "relativePath": "GroupUser/List"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}