{
  "swagger": "2.0",
  "info": {
    "version": "2017-03-01",
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/syncState": {
      "get": {
        "tags": [
          "TenantConfigurationSyncState"
        ],
        "operationId": "TenantConfiguration_GetSyncState",
        "description": "Gets the status of the most recent synchronization between the configuration database and the Git repository.",
        "x-ms-examples": {
          "ApiManagementTenantAccessSyncState": {
            "parameters": {
              "serviceName": "apimService1",
              "resourceGroupName": "rg1",
              "api-version": "2017-03-01",
              "subscriptionId": "subid",
              "configurationName": "configuration"
            },
            "responses": {
              "200": {
                "body": {
                  "branch": "master",
                  "commitId": "44c29c27a876372e2ea18d9c381cc493a6a89fc5",
                  "isExport": true,
                  "isSynced": false,
                  "isGitEnabled": true,
                  "syncDate": "2016-10-24T19:17:14.3641403Z",
                  "configurationChangeDate": "2017-06-03T00:41:30.9670873Z"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Sync state result.",
            "schema": {
              "$ref": "#/definitions/TenantConfigurationSyncStateContract"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Get Sync State"
      }
    }
  },
  "definitions": {
    "AccessInformationContract": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier."
        },
        "primaryKey": {
          "type": "string",
          "description": "Primary access key."
        },
        "secondaryKey": {
          "type": "string",
          "description": "Secondary access key."
        },
        "enabled": {
          "type": "boolean",
          "description": "Tenant access information of the API Management service."
        }
      },
      "description": "Tenant access information contract of the API Management service."
    },
    "AccessInformationUpdateParameters": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Tenant access information of the API Management service."
        }
      },
      "description": "Tenant access information update parameters of the API Management service."
    },
    "DeployConfigurationParameters": {
      "properties": {
        "branch": {
          "type": "string",
          "description": "The name of the Git branch from which the configuration is to be deployed to the configuration database."
        },
        "force": {
          "type": "boolean",
          "description": "The value enforcing deleting subscriptions to products that are deleted in this update."
        }
      },
      "required": [
        "branch"
      ],
      "description": "Parameters supplied to the Deploy Configuration operation."
    },
    "OperationResultContract": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Operation result identifier."
        },
        "status": {
          "type": "string",
          "description": "Status of an async operation.",
          "enum": [
            "Started",
            "InProgress",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "AsyncOperationStatus",
            "modelAsString": false
          }
        },
        "started": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last update time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "resultInfo": {
          "type": "string",
          "description": "Optional result info."
        },
        "error": {
          "$ref": "#/definitions/ErrorResponse",
          "description": "Error Body Contract"
        }
      },
      "description": "Operation Result."
    },
    "SaveConfigurationParameter": {
      "properties": {
        "branch": {
          "type": "string",
          "description": "The name of the Git branch in which to commit the current configuration snapshot."
        },
        "force": {
          "type": "boolean",
          "description": "The value if true, the current configuration database is committed to the Git repository, even if the Git repository has newer changes that would be overwritten."
        }
      },
      "required": [
        "branch"
      ],
      "description": "Parameters supplied to the Save Tenant Configuration operation."
    },
    "TenantConfigurationSyncStateContract": {
      "properties": {
        "branch": {
          "type": "string",
          "description": "The name of Git branch."
        },
        "commitId": {
          "type": "string",
          "description": "The latest commit Id."
        },
        "isExport": {
          "type": "boolean",
          "description": "value indicating if last sync was save (true) or deploy (false) operation."
        },
        "isSynced": {
          "type": "boolean",
          "description": "value indicating if last synchronization was later than the configuration change."
        },
        "isGitEnabled": {
          "type": "boolean",
          "description": "value indicating whether Git configuration access is enabled."
        },
        "syncDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the latest synchronization. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "configurationChangeDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the latest configuration change. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        }
      },
      "description": "Tenant Configuration Synchronization State."
    },
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponse": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    }
  },
  "parameters": {
    "AccessParameter": {
      "name": "accessName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "access"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "AccessIdName"
      },
      "description": "The identifier of the Access configuration.",
      "x-ms-parameter-location": "method"
    },
    "ConfigurationParameter": {
      "name": "configurationName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "configuration"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "configurationIdName"
      },
      "description": "The identifier of the Git Configuration Operation.",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Tenant Configuration",
  "x-internal-split-type": "Operation"
}