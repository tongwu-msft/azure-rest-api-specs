{
  "swagger": "2.0",
  "info": {
    "version": "2017-03-01",
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on Quota entity associated with your Azure API Management deployment. To configure call rate limit and quota policies refer to [how to configure call rate limit and quota](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies)."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}": {
      "get": {
        "tags": [
          "QuotaByPeriodKeys"
        ],
        "operationId": "QuotaByPeriodKeys_Get",
        "description": "Gets the value of the quota counter associated with the counter-key in the policy for the specific period in service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies",
          "description": "Document describing how to configure the quota policies."
        },
        "x-ms-examples": {
          "ApiManagementGetQuotaCounteryKeysByQuotaPeriod": {
            "parameters": {
              "serviceName": "apimService1",
              "resourceGroupName": "rg1",
              "api-version": "2017-03-01",
              "subscriptionId": "subid",
              "quotaCounterKey": "ba",
              "quotaPeriodKey": "0_P3Y6M4DT12H30M5S"
            },
            "responses": {
              "200": {
                "body": {
                  "counterKey": "ba",
                  "periodKey": "0_P3Y6M4DT12H30M5S",
                  "periodStartTime": "2014-08-04T04:24:35Z",
                  "periodEndTime": "2018-02-08T16:54:40Z",
                  "Value": {
                    "callsCount": 0,
                    "kbTransferred": 2.5625
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/QuotaCounterKeyParameter"
          },
          {
            "$ref": "#/parameters/QuotaPeriodKeyParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the Quota counter details for the specified period.",
            "schema": {
              "$ref": "#/definitions/QuotaCounterContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Get"
      }
    }
  },
  "definitions": {
    "QuotaCounterCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotaCounterContract"
          },
          "description": "Quota counter values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Quota Counter list representation."
    },
    "QuotaCounterContract": {
      "properties": {
        "counterKey": {
          "type": "string",
          "description": "The Key value of the Counter. Must not be empty.",
          "minLength": 1
        },
        "periodKey": {
          "type": "string",
          "description": "Identifier of the Period for which the counter was collected. Must not be empty.",
          "minLength": 1
        },
        "periodStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the start of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "periodEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the end of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "Value": {
          "$ref": "#/definitions/QuotaCounterValueContractProperties",
          "description": "Quota Value Properties"
        }
      },
      "required": [
        "counterKey",
        "periodKey",
        "periodStartTime",
        "periodEndTime"
      ],
      "description": "Quota counter details."
    },
    "QuotaCounterValueContract": {
      "properties": {
        "value": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/QuotaCounterValueContractProperties",
          "description": "Quota counter Value Properties."
        }
      },
      "description": "Quota counter value details."
    },
    "QuotaCounterValueContractProperties": {
      "properties": {
        "callsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of times Counter was called."
        },
        "kbTransferred": {
          "type": "number",
          "format": "double",
          "description": "Data Transferred in KiloBytes."
        }
      },
      "description": "Quota counter value details."
    },
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponse": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    }
  },
  "parameters": {
    "QuotaCounterKeyParameter": {
      "name": "quotaCounterKey",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key=\"boo\" in the policy, then it’s accessible by \"boo\" counter key. But if it’s defined as counter-key=\"@(\"b\"+\"a\")\" then it will be accessible by \"ba\" key",
      "x-ms-parameter-location": "method"
    },
    "QuotaPeriodKeyParameter": {
      "name": "quotaPeriodKey",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Quota period key identifier.",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Quota By Period Keys",
  "x-internal-split-type": "Operation"
}