{
  "swagger": "2.0",
  "info": {
    "version": "2019-01-01",
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on Diagnostic entity associated with your Azure API Management deployment. Diagnostics are used to log requests/responses in the APIM proxy."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics/{diagnosticId}": {
      "delete": {
        "tags": [
          "Diagnostic"
        ],
        "operationId": "Diagnostic_Delete",
        "description": "Deletes the specified Diagnostic.",
        "x-ms-examples": {
          "ApiManagementDeleteDiagnostic": {
            "parameters": {
              "serviceName": "apimService1",
              "resourceGroupName": "rg1",
              "api-version": "2019-01-01",
              "subscriptionId": "subid",
              "diagnosticId": "applicationinsights",
              "If-Match": "*"
            },
            "responses": {
              "200": {},
              "204": {}
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Diagnostic was successfully deleted."
          },
          "204": {
            "description": "The Diagnostic was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Delete"
      }
    }
  },
  "definitions": {
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponseBody": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    },
    "ErrorResponse": {
      "properties": {
        "error": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ErrorResponseBody",
          "description": "Properties of the Error Response."
        }
      },
      "description": "Error Response."
    },
    "Resource": {
      "description": "The Resource definition.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type for API Management resource."
        }
      }
    },
    "BodyDiagnosticSettings": {
      "properties": {
        "bytes": {
          "type": "integer",
          "format": "int32",
          "maximum": 8192,
          "description": "Number of request body bytes to log."
        }
      },
      "description": "Body logging settings."
    },
    "HttpMessageDiagnostic": {
      "properties": {
        "headers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of HTTP Headers to log."
        },
        "body": {
          "$ref": "#/definitions/BodyDiagnosticSettings",
          "description": "Body logging settings."
        }
      },
      "description": "Http message diagnostic settings."
    },
    "PipelineDiagnosticSettings": {
      "properties": {
        "request": {
          "$ref": "#/definitions/HttpMessageDiagnostic",
          "description": "Diagnostic settings for request."
        },
        "response": {
          "$ref": "#/definitions/HttpMessageDiagnostic",
          "description": "Diagnostic settings for response."
        }
      },
      "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
    },
    "SamplingSettings": {
      "properties": {
        "samplingType": {
          "type": "string",
          "description": "Sampling type.",
          "enum": [
            "fixed"
          ],
          "x-ms-enum": {
            "name": "SamplingType",
            "modelAsString": true,
            "values": [
              {
                "value": "fixed",
                "description": "Fixed-rate sampling."
              }
            ]
          }
        },
        "percentage": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 100,
          "description": "Rate of sampling for fixed-rate sampling."
        }
      },
      "description": "Sampling settings for Diagnostic."
    },
    "DiagnosticContractProperties": {
      "properties": {
        "alwaysLog": {
          "type": "string",
          "enum": [
            "allErrors"
          ],
          "x-ms-enum": {
            "name": "AlwaysLog",
            "modelAsString": true,
            "values": [
              {
                "value": "allErrors",
                "description": "Always log all erroneous request regardless of sampling settings."
              }
            ]
          },
          "description": "Specifies for what type of messages sampling settings should not apply."
        },
        "loggerId": {
          "type": "string",
          "description": "Resource Id of a target logger."
        },
        "sampling": {
          "$ref": "#/definitions/SamplingSettings",
          "description": "Sampling settings for Diagnostic."
        },
        "frontend": {
          "$ref": "#/definitions/PipelineDiagnosticSettings",
          "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
        },
        "backend": {
          "$ref": "#/definitions/PipelineDiagnosticSettings",
          "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Backend"
        },
        "enableHttpCorrelationHeaders": {
          "type": "boolean",
          "description": "Whether to process Correlation Headers coming to Api Management Service. Only applicable to Application Insights diagnostics. Default is true."
        }
      },
      "required": [
        "loggerId"
      ],
      "description": "Diagnostic Entity Properties"
    },
    "DiagnosticContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DiagnosticContractProperties",
          "description": "Diagnostic entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Diagnostic details."
    },
    "DiagnosticCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Diagnostic list representation."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "IfMatchRequiredParameter": {
      "name": "If-Match",
      "in": "header",
      "required": true,
      "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DiagnosticIdParameter": {
      "name": "diagnosticId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "IfMatchOptionalParameter": {
      "name": "If-Match",
      "in": "header",
      "required": false,
      "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SkipQueryParameter": {
      "name": "$skip",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to skip.",
      "minimum": 0,
      "x-ms-parameter-location": "method"
    },
    "TopQueryParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to return.",
      "minimum": 1,
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-id": "apimanagement",
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Diagnostic",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "Delete",
  "x-internal-operation-name": "Delete"
}