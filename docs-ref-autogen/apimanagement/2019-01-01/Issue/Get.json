{
  "swagger": "2.0",
  "info": {
    "version": "2019-01-01",
    "title": "ApiManagementClient",
    "description": "Use this REST API to get all the issues across an Azure Api Management service."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/issues/{issueId}": {
      "get": {
        "tags": [
          "Issue"
        ],
        "operationId": "Issue_Get",
        "description": "Gets API Management issue details",
        "x-ms-examples": {
          "ApiManagementGetIssue": {
            "parameters": {
              "serviceName": "apimService1",
              "resourceGroupName": "rg1",
              "api-version": "2019-01-01",
              "subscriptionId": "subid",
              "issueId": "57d2ef278aa04f0ad01d6cdc"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/issues/57d2ef278aa04f0ad01d6cdc",
                  "type": "Microsoft.ApiManagement/service/issues",
                  "name": "57d2ef278aa04f0ad01d6cdc",
                  "properties": {
                    "title": "New API issue",
                    "description": "New API issue description",
                    "createdDate": "2018-02-01T22:21:20.467Z",
                    "state": "open",
                    "userId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/1",
                    "apiId": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get the details of the issue.",
            "schema": {
              "$ref": "#/definitions/IssueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Get"
      }
    }
  },
  "definitions": {
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponseBody": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    },
    "ErrorResponse": {
      "properties": {
        "error": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ErrorResponseBody",
          "description": "Properties of the Error Response."
        }
      },
      "description": "Error Response."
    },
    "Resource": {
      "description": "The Resource definition.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type for API Management resource."
        }
      }
    },
    "IssueUpdateContractProperties": {
      "properties": {
        "title": {
          "type": "string",
          "description": "The issue title."
        },
        "description": {
          "type": "string",
          "description": "Text describing the issue."
        },
        "userId": {
          "type": "string",
          "description": "A resource identifier for the user created the issue."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/IssueContractBaseProperties"
        }
      ],
      "description": "Issue contract Update Properties."
    },
    "IssueContractProperties": {
      "properties": {
        "title": {
          "type": "string",
          "description": "The issue title."
        },
        "description": {
          "type": "string",
          "description": "Text describing the issue."
        },
        "userId": {
          "type": "string",
          "description": "A resource identifier for the user created the issue."
        }
      },
      "required": [
        "title",
        "description",
        "userId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/IssueContractBaseProperties"
        }
      ],
      "description": "Issue contract Properties."
    },
    "IssueContractBaseProperties": {
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the issue was created."
        },
        "state": {
          "type": "string",
          "description": "Status of the issue.",
          "enum": [
            "proposed",
            "open",
            "removed",
            "resolved",
            "closed"
          ],
          "x-ms-enum": {
            "name": "State",
            "modelAsString": true,
            "values": [
              {
                "value": "proposed",
                "description": "The issue is proposed."
              },
              {
                "value": "open",
                "description": "The issue is opened."
              },
              {
                "value": "removed",
                "description": "The issue was removed."
              },
              {
                "value": "resolved",
                "description": "The issue is now resolved."
              },
              {
                "value": "closed",
                "description": "The issue was closed."
              }
            ]
          }
        },
        "apiId": {
          "type": "string",
          "description": "A resource identifier for the API the issue was created for."
        }
      },
      "description": "Issue contract Base Properties."
    },
    "IssueContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IssueContractProperties",
          "description": "Properties of the Issue."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Issue Contract details."
    },
    "IssueCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueContract"
          },
          "description": "Issue values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Issue list representation."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "IssueIdParameter": {
      "name": "issueId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Issue identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "SkipQueryParameter": {
      "name": "$skip",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to skip.",
      "minimum": 0,
      "x-ms-parameter-location": "method"
    },
    "TopQueryParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to return.",
      "minimum": 1,
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-id": "apimanagement",
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Issue",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "Get",
  "x-internal-operation-name": "Get"
}