{
  "swagger": "2.0",
  "info": {
    "version": "2019-01-01",
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on Backend entity in Azure API Management deployment. The Backend entity in API Management represents a backend service that is configured to skip certification chain validation when using a self-signed certificate to test mutual certificate authentication."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}": {
      "head": {
        "tags": [
          "Backend"
        ],
        "operationId": "Backend_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the backend specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadBackend": {
            "parameters": {
              "serviceName": "apimService1",
              "resourceGroupName": "rg1",
              "api-version": "2019-01-01",
              "subscriptionId": "subid",
              "backendId": "sfbackend"
            },
            "responses": {
              "200": {
                "headers": {
                  "etag": "AAAAAAAAAAa="
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/BackendIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified backend entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Get Entity Tag"
      }
    }
  },
  "definitions": {
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponseBody": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    },
    "ErrorResponse": {
      "properties": {
        "error": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ErrorResponseBody",
          "description": "Properties of the Error Response."
        }
      },
      "description": "Error Response."
    },
    "Resource": {
      "description": "The Resource definition.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type for API Management resource."
        }
      }
    },
    "BackendReconnectProperties": {
      "properties": {
        "after": {
          "type": "string",
          "format": "duration",
          "description": "Duration in ISO8601 format after which reconnect will be initiated. Minimum duration of the Reconnect is PT2M."
        }
      },
      "description": "Properties to control reconnect requests."
    },
    "BackendReconnectContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BackendReconnectProperties",
          "description": "Reconnect request properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Reconnect request parameters."
    },
    "BackendTlsProperties": {
      "properties": {
        "validateCertificateChain": {
          "description": "Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.",
          "type": "boolean",
          "default": true
        },
        "validateCertificateName": {
          "description": "Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.",
          "type": "boolean",
          "default": true
        }
      },
      "description": "Properties controlling TLS Certificate Validation."
    },
    "BackendProxyContract": {
      "externalDocs": {
        "url": "https://msdn.microsoft.com/en-us/library/system.net.webproxy(v=vs.110).aspx",
        "description": "Backend entity uses these details to connect to a WebProxy."
      },
      "properties": {
        "url": {
          "type": "string",
          "description": "WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.",
          "minLength": 1,
          "maxLength": 2000
        },
        "username": {
          "type": "string",
          "description": "Username to connect to the WebProxy server"
        },
        "password": {
          "type": "string",
          "description": "Password to connect to the WebProxy Server"
        }
      },
      "required": [
        "url"
      ],
      "description": "Details of the Backend WebProxy Server to use in the Request to Backend."
    },
    "BackendAuthorizationHeaderCredentials": {
      "properties": {
        "scheme": {
          "type": "string",
          "description": "Authentication Scheme name.",
          "minLength": 1,
          "maxLength": 100
        },
        "parameter": {
          "type": "string",
          "description": "Authentication Parameter value.",
          "minLength": 1,
          "maxLength": 300
        }
      },
      "required": [
        "scheme",
        "parameter"
      ],
      "description": "Authorization header information."
    },
    "BackendCredentialsContract": {
      "properties": {
        "certificate": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 32,
          "description": "List of Client Certificate Thumbprint."
        },
        "query": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": "Query Parameter description."
        },
        "header": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": "Header Parameter description."
        },
        "authorization": {
          "description": "Authorization header authentication",
          "$ref": "#/definitions/BackendAuthorizationHeaderCredentials"
        }
      },
      "description": "Details of the Credentials used to connect to Backend."
    },
    "X509CertificateName": {
      "properties": {
        "name": {
          "description": "Common Name of the Certificate.",
          "type": "string"
        },
        "issuerCertificateThumbprint": {
          "description": "Thumbprint for the Issuer of the Certificate.",
          "type": "string"
        }
      },
      "externalDocs": {
        "url": "https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-windows-cluster-x509-security"
      },
      "description": "Properties of server X509Names."
    },
    "BackendServiceFabricClusterProperties": {
      "properties": {
        "clientCertificatethumbprint": {
          "description": "The client certificate thumbprint for the management endpoint.",
          "type": "string"
        },
        "maxPartitionResolutionRetries": {
          "description": "Maximum number of retries while attempting resolve the partition.",
          "format": "int32",
          "type": "integer"
        },
        "managementEndpoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The cluster management endpoint."
        },
        "serverCertificateThumbprints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Thumbprints of certificates cluster management service uses for tls communication"
        },
        "serverX509Names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/X509CertificateName"
          },
          "description": "Server X509 Certificate Names Collection"
        }
      },
      "required": [
        "managementEndpoints",
        "clientCertificatethumbprint"
      ],
      "description": "Properties of the Service Fabric Type Backend."
    },
    "BackendProperties": {
      "properties": {
        "serviceFabricCluster": {
          "$ref": "#/definitions/BackendServiceFabricClusterProperties",
          "description": "Backend Service Fabric Cluster Properties"
        }
      },
      "description": "Properties specific to the Backend Type."
    },
    "BackendUpdateParameterProperties": {
      "properties": {
        "url": {
          "type": "string",
          "description": "Runtime Url of the Backend.",
          "minLength": 1,
          "maxLength": 2000
        },
        "protocol": {
          "type": "string",
          "enum": [
            "http",
            "soap"
          ],
          "x-ms-enum": {
            "name": "BackendProtocol",
            "modelAsString": true,
            "values": [
              {
                "value": "http",
                "description": "The Backend is a RESTful service."
              },
              {
                "value": "soap",
                "description": "The Backend is a SOAP service."
              }
            ]
          },
          "description": "Backend communication protocol."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackendBaseParameters"
        }
      ],
      "description": "Parameters supplied to the Update Backend operation."
    },
    "BackendContractProperties": {
      "properties": {
        "url": {
          "type": "string",
          "description": "Runtime Url of the Backend.",
          "minLength": 1,
          "maxLength": 2000
        },
        "protocol": {
          "type": "string",
          "enum": [
            "http",
            "soap"
          ],
          "x-ms-enum": {
            "name": "BackendProtocol",
            "modelAsString": true,
            "values": [
              {
                "value": "http",
                "description": "The Backend is a RESTful service."
              },
              {
                "value": "soap",
                "description": "The Backend is a SOAP service."
              }
            ]
          },
          "description": "Backend communication protocol."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackendBaseParameters"
        }
      ],
      "required": [
        "url",
        "protocol"
      ],
      "description": "Parameters supplied to the Create Backend operation."
    },
    "BackendBaseParameters": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Backend Title.",
          "minLength": 1,
          "maxLength": 300
        },
        "description": {
          "type": "string",
          "description": "Backend Description.",
          "minLength": 1,
          "maxLength": 2000
        },
        "resourceId": {
          "type": "string",
          "description": "Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.",
          "minLength": 1,
          "maxLength": 2000
        },
        "properties": {
          "$ref": "#/definitions/BackendProperties",
          "description": "Backend Properties contract"
        },
        "credentials": {
          "$ref": "#/definitions/BackendCredentialsContract",
          "description": "Backend Credentials Contract Properties"
        },
        "proxy": {
          "$ref": "#/definitions/BackendProxyContract",
          "description": "Backend Proxy Contract Properties"
        },
        "tls": {
          "$ref": "#/definitions/BackendTlsProperties",
          "description": "Backend TLS Properties"
        }
      },
      "description": "Backend entity base Parameter set."
    },
    "BackendUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BackendUpdateParameterProperties",
          "description": "Backend entity update contract properties."
        }
      },
      "description": "Backend update parameters."
    },
    "BackendContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BackendContractProperties",
          "description": "Backend entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Backend details."
    },
    "BackendCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackendContract"
          },
          "description": "Backend values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Backend list representation."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "BackendIdParameter": {
      "name": "backendId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "IfMatchRequiredParameter": {
      "name": "If-Match",
      "in": "header",
      "required": true,
      "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "IfMatchOptionalParameter": {
      "name": "If-Match",
      "in": "header",
      "required": false,
      "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SkipQueryParameter": {
      "name": "$skip",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to skip.",
      "minimum": 0,
      "x-ms-parameter-location": "method"
    },
    "TopQueryParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to return.",
      "minimum": 1,
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-id": "apimanagement",
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Backend",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "GetEntityTag",
  "x-internal-operation-name": "Get Entity Tag"
}