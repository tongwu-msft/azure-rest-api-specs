{
  "swagger": "2.0",
  "info": {
    "version": "2019-01-01",
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on Identity Provider entity associated with your Azure API Management deployment. Setting up an external Identity Provider for authentication can help you manage the developer portal logins using the OAuth2 flow."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}": {
      "put": {
        "tags": [
          "IdentityProvider"
        ],
        "operationId": "IdentityProvider_CreateOrUpdate",
        "description": "Creates or Updates the IdentityProvider configuration.",
        "x-ms-examples": {
          "ApiManagementCreateIdentityProvider": {
            "parameters": {
              "serviceName": "apimService1",
              "resourceGroupName": "rg1",
              "api-version": "2019-01-01",
              "subscriptionId": "subid",
              "identityProviderName": "facebook",
              "parameters": {
                "properties": {
                  "clientId": "facebookid",
                  "clientSecret": "facebookapplicationsecret"
                }
              }
            },
            "responses": {
              "201": {
                "body": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/identityProviders/Facebook",
                  "type": "Microsoft.ApiManagement/service/identityProviders",
                  "name": "Facebook",
                  "properties": {
                    "clientId": "facebookid",
                    "clientSecret": "facebookapplicationsecret",
                    "type": "facebook"
                  }
                }
              },
              "200": {
                "body": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/identityProviders/Facebook",
                  "type": "Microsoft.ApiManagement/service/identityProviders",
                  "name": "Facebook",
                  "properties": {
                    "clientId": "facebookid",
                    "clientSecret": "facebookapplicationsecret",
                    "type": "facebook"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IdentityProviderNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityProviderContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "IdentityProvider configuration were successfully created.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/IdentityProviderContract"
            }
          },
          "200": {
            "description": "The existing Identity Provider was successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/IdentityProviderContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Create Or Update"
      }
    }
  },
  "definitions": {
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponseBody": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    },
    "ErrorResponse": {
      "properties": {
        "error": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ErrorResponseBody",
          "description": "Properties of the Error Response."
        }
      },
      "description": "Error Response."
    },
    "IdentityProviderUpdateProperties": {
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
          "minLength": 1
        },
        "clientSecret": {
          "type": "string",
          "description": "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.",
          "minLength": 1
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/IdentityProviderBaseParameters"
        }
      ],
      "description": "Parameters supplied to the Update Identity Provider operation."
    },
    "IdentityProviderContractProperties": {
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
          "minLength": 1
        },
        "clientSecret": {
          "type": "string",
          "description": "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.",
          "minLength": 1
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/IdentityProviderBaseParameters"
        }
      ],
      "required": [
        "clientId",
        "clientSecret"
      ],
      "description": "The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users."
    },
    "IdentityProviderBaseParameters": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "facebook",
            "google",
            "microsoft",
            "twitter",
            "aad",
            "aadB2C"
          ],
          "x-ms-enum": {
            "name": "IdentityProviderType",
            "modelAsString": true,
            "values": [
              {
                "value": "facebook",
                "description": "Facebook as Identity provider."
              },
              {
                "value": "google",
                "description": "Google as Identity provider."
              },
              {
                "value": "microsoft",
                "description": "Microsoft Live as Identity provider."
              },
              {
                "value": "twitter",
                "description": "Twitter as Identity provider."
              },
              {
                "value": "aad",
                "description": "Azure Active Directory as Identity provider."
              },
              {
                "value": "aadB2C",
                "description": "Azure Active Directory B2C as Identity provider."
              }
            ]
          },
          "description": "Identity Provider Type identifier."
        },
        "signinTenant": {
          "type": "string",
          "description": "The TenantId to use instead of Common when logging into Active Directory"
        },
        "allowedTenants": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 32,
          "description": "List of Allowed Tenants when configuring Azure Active Directory login."
        },
        "authority": {
          "type": "string",
          "description": "OpenID Connect discovery endpoint hostname for AAD or AAD B2C."
        },
        "signupPolicyName": {
          "type": "string",
          "description": "Signup Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "signinPolicyName": {
          "type": "string",
          "description": "Signin Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "profileEditingPolicyName": {
          "type": "string",
          "description": "Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "passwordResetPolicyName": {
          "type": "string",
          "description": "Password Reset Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        }
      },
      "description": "Identity Provider Base Parameter Properties."
    },
    "IdentityProviderUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IdentityProviderUpdateProperties",
          "description": "Identity Provider update properties."
        }
      },
      "description": "Parameters supplied to update Identity Provider"
    },
    "Resource": {
      "description": "The Resource definition.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type for API Management resource."
        }
      }
    },
    "IdentityProviderContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IdentityProviderContractProperties",
          "description": "Identity Provider contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Identity Provider details."
    },
    "IdentityProviderList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityProviderContract"
          },
          "description": "Identity Provider configuration values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "List of all the Identity Providers configured on the service instance."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "IfMatchRequiredParameter": {
      "name": "If-Match",
      "in": "header",
      "required": true,
      "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "IdentityProviderNameParameter": {
      "name": "identityProviderName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "facebook",
        "google",
        "microsoft",
        "twitter",
        "aad",
        "aadB2C"
      ],
      "x-ms-enum": {
        "name": "IdentityProviderType",
        "modelAsString": true,
        "values": [
          {
            "value": "facebook",
            "description": "Facebook as Identity provider."
          },
          {
            "value": "google",
            "description": "Google as Identity provider."
          },
          {
            "value": "microsoft",
            "description": "Microsoft Live as Identity provider."
          },
          {
            "value": "twitter",
            "description": "Twitter as Identity provider."
          },
          {
            "value": "aad",
            "description": "Azure Active Directory as Identity provider."
          },
          {
            "value": "aadB2C",
            "description": "Azure Active Directory B2C as Identity provider."
          }
        ]
      },
      "description": "Identity Provider Type identifier.",
      "x-ms-parameter-location": "method"
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "IfMatchOptionalParameter": {
      "name": "If-Match",
      "in": "header",
      "required": false,
      "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-id": "apimanagement",
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Identity Provider",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "CreateOrUpdate",
  "x-internal-operation-name": "Create Or Update"
}