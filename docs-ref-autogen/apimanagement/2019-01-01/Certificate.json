{
  "swagger": "2.0",
  "info": {
    "version": "2019-01-01",
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on Certificate entity in your Azure API Management deployment. Certificates can be used to setup mutual authentication with your Backend in API Management. For more information refer to [How to secure backend using Mutual Auth Certificate](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-mutual-certificates)."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {},
  "definitions": {
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponseBody": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    },
    "ErrorResponse": {
      "properties": {
        "error": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ErrorResponseBody",
          "description": "Properties of the Error Response."
        }
      },
      "description": "Error Response."
    },
    "Resource": {
      "description": "The Resource definition.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type for API Management resource."
        }
      }
    },
    "CertificateContractProperties": {
      "properties": {
        "subject": {
          "type": "string",
          "description": "Subject attribute of the certificate."
        },
        "thumbprint": {
          "type": "string",
          "description": "Thumbprint of the certificate."
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        }
      },
      "required": [
        "subject",
        "thumbprint",
        "expirationDate"
      ],
      "description": "Properties of the Certificate contract."
    },
    "CertificateContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CertificateContractProperties",
          "description": "Certificate properties details."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Certificate details."
    },
    "CertificateCreateOrUpdateProperties": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Base 64 encoded certificate using the application/x-pkcs12 representation."
        },
        "password": {
          "type": "string",
          "description": "Password for the Certificate"
        }
      },
      "required": [
        "data",
        "password"
      ],
      "description": "Parameters supplied to the CreateOrUpdate certificate operation."
    },
    "CertificateCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CertificateCreateOrUpdateProperties",
          "description": "Certificate create or update properties details."
        }
      },
      "description": "Certificate create or update details."
    },
    "CertificateCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificateContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Certificates list representation."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "IfMatchRequiredParameter": {
      "name": "If-Match",
      "in": "header",
      "required": true,
      "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CertificateIdParameter": {
      "name": "certificateId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "IfMatchOptionalParameter": {
      "name": "If-Match",
      "in": "header",
      "required": false,
      "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SkipQueryParameter": {
      "name": "$skip",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to skip.",
      "minimum": 0,
      "x-ms-parameter-location": "method"
    },
    "TopQueryParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to return.",
      "minimum": 1,
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-id": "apimanagement",
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Certificate",
  "x-internal-product-uid": null,
  "x-internal-split-members": [
    {
      "displayName": "Create Or Update",
      "relativePath": "Certificate/CreateOrUpdate"
    },
    {
      "displayName": "Delete",
      "relativePath": "Certificate/Delete"
    },
    {
      "displayName": "Get",
      "relativePath": "Certificate/Get"
    },
    {
      "displayName": "Get Entity Tag",
      "relativePath": "Certificate/GetEntityTag"
    },
    {
      "displayName": "List By Service",
      "relativePath": "Certificate/ListByService"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}