{
  "swagger": "2.0",
  "info": {
    "version": "2019-01-01",
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {},
  "definitions": {
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponseBody": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    },
    "ErrorResponse": {
      "properties": {
        "error": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ErrorResponseBody",
          "description": "Properties of the Error Response."
        }
      },
      "description": "Error Response."
    },
    "UserTokenResult": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Shared Access Authorization token for the User."
        }
      },
      "description": "Get User Token response details."
    },
    "UserTokenParameterProperties": {
      "properties": {
        "keyType": {
          "type": "string",
          "description": "The Key to be used to generate token for user.",
          "enum": [
            "primary",
            "secondary"
          ],
          "default": "primary",
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        }
      },
      "required": [
        "keyType",
        "expiry"
      ],
      "description": "Parameters supplied to the Get User Token operation."
    },
    "UserTokenParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserTokenParameterProperties",
          "description": "User Token Parameter contract properties."
        }
      },
      "description": "Get User Token parameters."
    },
    "UserIdentityContract": {
      "properties": {
        "provider": {
          "type": "string",
          "description": "Identity provider name."
        },
        "id": {
          "type": "string",
          "description": "Identifier value within provider."
        }
      },
      "description": "User identity details."
    },
    "UserIdentityCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserIdentityContract"
          },
          "description": "User Identity values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "List of Users Identity list representation."
    },
    "Resource": {
      "description": "The Resource definition.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type for API Management resource."
        }
      }
    },
    "SubscriptionContractProperties": {
      "properties": {
        "ownerId": {
          "type": "string",
          "description": "The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier."
        },
        "scope": {
          "type": "string",
          "description": "Scope like /products/{productId} or /apis or /apis/{apiId}."
        },
        "displayName": {
          "type": "string",
          "description": "The name of the subscription, or null if the subscription has no name.",
          "minLength": 0,
          "maxLength": 100
        },
        "state": {
          "type": "string",
          "description": "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.",
          "enum": [
            "suspended",
            "active",
            "expired",
            "submitted",
            "rejected",
            "cancelled"
          ],
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": false
          }
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
          "readOnly": true
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "notificationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "primaryKey": {
          "type": "string",
          "description": "Subscription primary key.",
          "minLength": 1,
          "maxLength": 256
        },
        "secondaryKey": {
          "type": "string",
          "description": "Subscription secondary key.",
          "minLength": 1,
          "maxLength": 256
        },
        "stateComment": {
          "type": "string",
          "description": "Optional subscription comment added by an administrator."
        },
        "allowTracing": {
          "type": "boolean",
          "description": "Determines whether tracing is enabled",
          "x-apim-code-nillable": true
        }
      },
      "required": [
        "scope",
        "state",
        "primaryKey",
        "secondaryKey"
      ],
      "description": "Subscription details."
    },
    "SubscriptionContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SubscriptionContractProperties",
          "description": "Subscription contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Subscription details."
    },
    "SubscriptionCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Subscriptions list representation."
    },
    "GroupContractProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Group name.",
          "maxLength": 300,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "description": "Group description. Can contain HTML formatting tags.",
          "maxLength": 1000
        },
        "builtIn": {
          "readOnly": true,
          "type": "boolean",
          "description": "true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false."
        },
        "type": {
          "type": "string",
          "description": "Group type.",
          "enum": [
            "custom",
            "system",
            "external"
          ],
          "x-ms-enum": {
            "name": "GroupType",
            "modelAsString": false
          }
        },
        "externalId": {
          "type": "string",
          "description": "For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null."
        }
      },
      "required": [
        "displayName"
      ],
      "description": "Group contract Properties."
    },
    "GroupContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GroupContractProperties",
          "description": "Group entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Contract details."
    },
    "GroupCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Group list representation."
    },
    "GenerateSsoUrlResult": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Redirect Url containing the SSO URL value."
        }
      },
      "description": "Generate SSO Url operations response details."
    },
    "UserUpdateParametersProperties": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address. Must not be empty and must be unique within the service instance.",
          "minLength": 1,
          "maxLength": 254
        },
        "password": {
          "type": "string",
          "description": "User Password."
        },
        "firstName": {
          "type": "string",
          "description": "First name.",
          "minLength": 1,
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "description": "Last name.",
          "minLength": 1,
          "maxLength": 100
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ],
      "description": "Parameters supplied to the Update User operation."
    },
    "UserCreateParameterProperties": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address. Must not be empty and must be unique within the service instance.",
          "minLength": 1,
          "maxLength": 254
        },
        "firstName": {
          "type": "string",
          "description": "First name.",
          "minLength": 1,
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "description": "Last name.",
          "minLength": 1,
          "maxLength": 100
        },
        "password": {
          "type": "string",
          "description": "User Password. If no value is provided, a default password is generated."
        },
        "confirmation": {
          "type": "string",
          "description": "Determines the type of confirmation e-mail that will be sent to the newly created user.",
          "enum": [
            "signup",
            "invite"
          ],
          "x-ms-enum": {
            "name": "Confirmation",
            "modelAsString": true,
            "values": [
              {
                "value": "signup",
                "description": "Send an e-mail to the user confirming they have successfully signed up."
              },
              {
                "value": "invite",
                "description": "Send an e-mail inviting the user to sign-up and complete registration."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ],
      "required": [
        "email",
        "firstName",
        "lastName"
      ],
      "description": "Parameters supplied to the Create User operation."
    },
    "UserContractProperties": {
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name."
        },
        "lastName": {
          "type": "string",
          "description": "Last name."
        },
        "email": {
          "type": "string",
          "description": "Email address."
        },
        "registrationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "groups": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupContractProperties"
          },
          "description": "Collection of groups user is part of."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ],
      "description": "User profile."
    },
    "UserEntityBaseParameters": {
      "properties": {
        "state": {
          "type": "string",
          "description": "Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.",
          "enum": [
            "active",
            "blocked",
            "pending",
            "deleted"
          ],
          "default": "active",
          "x-ms-enum": {
            "name": "UserState",
            "modelAsString": true,
            "values": [
              {
                "value": "active",
                "description": "User state is active."
              },
              {
                "value": "blocked",
                "description": "User is blocked. Blocked users cannot authenticate at developer portal or call API."
              },
              {
                "value": "pending",
                "description": "User account is pending. Requires identity confirmation before it can be made active."
              },
              {
                "value": "deleted",
                "description": "User account is closed. All identities and related entities are removed."
              }
            ]
          }
        },
        "note": {
          "type": "string",
          "description": "Optional note about a user set by the administrator."
        },
        "identities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserIdentityContract"
          },
          "description": "Collection of user identities."
        }
      },
      "description": "User Entity Base Parameters set."
    },
    "UserUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserUpdateParametersProperties",
          "description": "User entity update contract properties."
        }
      },
      "description": "User update parameters."
    },
    "UserContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserContractProperties",
          "description": "User entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "User details."
    },
    "UserCreateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserCreateParameterProperties",
          "description": "User entity create contract properties."
        }
      },
      "description": "User create details."
    },
    "UserCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Users list representation."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "UserIdParameter": {
      "name": "userId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "User identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "SkipQueryParameter": {
      "name": "$skip",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to skip.",
      "minimum": 0,
      "x-ms-parameter-location": "method"
    },
    "TopQueryParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to return.",
      "minimum": 1,
      "x-ms-parameter-location": "method"
    },
    "IfMatchRequiredParameter": {
      "name": "If-Match",
      "in": "header",
      "required": true,
      "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "IfMatchOptionalParameter": {
      "name": "If-Match",
      "in": "header",
      "required": false,
      "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-id": "apimanagement",
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "User Group",
  "x-internal-product-uid": null,
  "x-internal-split-members": [
    {
      "displayName": "List",
      "relativePath": "UserGroup/List"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}