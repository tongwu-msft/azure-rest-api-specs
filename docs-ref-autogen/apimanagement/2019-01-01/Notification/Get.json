{
  "swagger": "2.0",
  "info": {
    "version": "2019-01-01",
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on who is going to receive notifications associated with your Azure API Management deployment."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_Get",
        "description": "Gets the details of the Notification specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetNotification": {
            "parameters": {
              "serviceName": "apimService1",
              "resourceGroupName": "rg1",
              "api-version": "2019-01-01",
              "subscriptionId": "subid",
              "notificationName": "RequestPublisherNotificationMessage"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/notifications/RequestPublisherNotificationMessage",
                  "type": "Microsoft.ApiManagement/service/notifications",
                  "name": "RequestPublisherNotificationMessage",
                  "properties": {
                    "title": "Subscription requests (requiring approval)",
                    "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval.",
                    "recipients": {
                      "emails": [
                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/recipientEmails/contoso@live.com",
                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/recipientEmails/foobar!live",
                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/recipientEmails/foobar@live.com"
                      ],
                      "users": [
                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/576823d0a40f7e74ec07d642"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Notification.",
            "schema": {
              "$ref": "#/definitions/NotificationContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Get"
      }
    }
  },
  "definitions": {
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponseBody": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    },
    "ErrorResponse": {
      "properties": {
        "error": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ErrorResponseBody",
          "description": "Properties of the Error Response."
        }
      },
      "description": "Error Response."
    },
    "Resource": {
      "description": "The Resource definition.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type for API Management resource."
        }
      }
    },
    "RecipientEmailContractProperties": {
      "properties": {
        "email": {
          "type": "string",
          "description": "User Email subscribed to notification."
        }
      },
      "description": "Recipient Email Contract Properties."
    },
    "RecipientEmailContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RecipientEmailContractProperties",
          "description": "Recipient Email contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Recipient Email details."
    },
    "RecipientEmailCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecipientEmailContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Recipient User list representation."
    },
    "RecipientUsersContractProperties": {
      "properties": {
        "userId": {
          "type": "string",
          "description": "API Management UserId subscribed to notification."
        }
      },
      "description": "Recipient User Contract Properties."
    },
    "RecipientUserContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RecipientUsersContractProperties",
          "description": "Recipient User entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Recipient User details."
    },
    "RecipientUserCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecipientUserContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Recipient User list representation."
    },
    "RecipientsContractProperties": {
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Emails subscribed for the notification."
        },
        "users": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Users subscribed for the notification."
        }
      },
      "description": "Notification Parameter contract."
    },
    "NotificationContractProperties": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the Notification.",
          "minLength": 1,
          "maxLength": 1000
        },
        "description": {
          "type": "string",
          "description": "Description of the Notification."
        },
        "recipients": {
          "$ref": "#/definitions/RecipientsContractProperties",
          "description": "Recipient Parameter values."
        }
      },
      "required": [
        "title"
      ],
      "description": "Notification Contract properties."
    },
    "NotificationContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NotificationContractProperties",
          "description": "Notification entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Notification details."
    },
    "NotificationCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Notification list representation."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "EmailParameter": {
      "name": "email",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Email identifier.",
      "x-ms-parameter-location": "method"
    },
    "NotificationNameParameter": {
      "name": "notificationName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "RequestPublisherNotificationMessage",
        "PurchasePublisherNotificationMessage",
        "NewApplicationNotificationMessage",
        "BCC",
        "NewIssuePublisherNotificationMessage",
        "AccountClosedPublisher",
        "QuotaLimitApproachingPublisherNotificationMessage"
      ],
      "x-ms-enum": {
        "name": "NotificationName",
        "modelAsString": true,
        "values": [
          {
            "value": "RequestPublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
          },
          {
            "value": "PurchasePublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
          },
          {
            "value": "NewApplicationNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
          },
          {
            "value": "BCC",
            "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
          },
          {
            "value": "NewIssuePublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
          },
          {
            "value": "AccountClosedPublisher",
            "description": "The following email recipients and users will receive email notifications when developer closes his account."
          },
          {
            "value": "QuotaLimitApproachingPublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
          }
        ]
      },
      "description": "Notification Name Identifier.",
      "x-ms-parameter-location": "method"
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "UserIdParameter": {
      "name": "userId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "User identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "IfMatchOptionalParameter": {
      "name": "If-Match",
      "in": "header",
      "required": false,
      "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SkipQueryParameter": {
      "name": "$skip",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to skip.",
      "minimum": 0,
      "x-ms-parameter-location": "method"
    },
    "TopQueryParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to return.",
      "minimum": 1,
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-id": "apimanagement",
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Notification",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "Get",
  "x-internal-operation-name": "Get"
}