{
  "swagger": "2.0",
  "info": {
    "version": "2019-01-01",
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2)."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}": {
      "patch": {
        "tags": [
          "AuthorizationServer"
        ],
        "operationId": "AuthorizationServer_Update",
        "description": "Updates the details of the authorization server specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateAuthorizationServer": {
            "parameters": {
              "serviceName": "apimService1",
              "resourceGroupName": "rg1",
              "api-version": "2019-01-01",
              "subscriptionId": "subid",
              "authsid": "newauthServer",
              "If-Match": "*",
              "parameters": {
                "properties": {
                  "clientId": "update",
                  "clientSecret": "updated"
                }
              }
            },
            "responses": {
              "204": {}
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthenticationServerIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationServerUpdateContract"
            },
            "description": "OAuth2 Server settings Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The authorization server settings were successfully updated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Update"
      }
    }
  },
  "definitions": {
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponseBody": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    },
    "ErrorResponse": {
      "properties": {
        "error": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ErrorResponseBody",
          "description": "Properties of the Error Response."
        }
      },
      "description": "Error Response."
    },
    "Resource": {
      "description": "The Resource definition.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type for API Management resource."
        }
      }
    },
    "TokenBodyParameterContract": {
      "properties": {
        "name": {
          "type": "string",
          "description": "body parameter name."
        },
        "value": {
          "type": "string",
          "description": "body parameter value."
        }
      },
      "required": [
        "name",
        "value"
      ],
      "description": "OAuth acquire token request body parameter (www-url-form-encoded)."
    },
    "AuthorizationServerUpdateContractProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly authorization server name.",
          "minLength": 1,
          "maxLength": 50
        },
        "clientRegistrationEndpoint": {
          "type": "string",
          "description": "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced."
        },
        "authorizationEndpoint": {
          "type": "string",
          "description": "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2."
        },
        "grantTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "authorizationCode",
              "implicit",
              "resourceOwnerPassword",
              "clientCredentials"
            ],
            "x-ms-enum": {
              "name": "GrantType",
              "modelAsString": true,
              "values": [
                {
                  "value": "authorizationCode",
                  "description": "Authorization Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.1."
                },
                {
                  "value": "implicit",
                  "description": "Implicit Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.2."
                },
                {
                  "value": "resourceOwnerPassword",
                  "description": "Resource Owner Password Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.3."
                },
                {
                  "value": "clientCredentials",
                  "description": "Client Credentials Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.4."
                }
              ]
            }
          },
          "description": "Form of an authorization grant, which the client uses to request the access token.",
          "externalDocs": {
            "url": "http://tools.ietf.org/html/rfc6749#section-4"
          }
        },
        "clientId": {
          "type": "string",
          "description": "Client or app id registered with this authorization server."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AuthorizationServerContractBaseProperties"
        }
      ],
      "description": "External OAuth authorization server Update settings contract."
    },
    "AuthorizationServerContractProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly authorization server name.",
          "minLength": 1,
          "maxLength": 50
        },
        "clientRegistrationEndpoint": {
          "type": "string",
          "description": "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced."
        },
        "authorizationEndpoint": {
          "type": "string",
          "description": "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2."
        },
        "grantTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "authorizationCode",
              "implicit",
              "resourceOwnerPassword",
              "clientCredentials"
            ],
            "x-ms-enum": {
              "name": "GrantType",
              "modelAsString": true,
              "values": [
                {
                  "value": "authorizationCode",
                  "description": "Authorization Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.1."
                },
                {
                  "value": "implicit",
                  "description": "Implicit Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.2."
                },
                {
                  "value": "resourceOwnerPassword",
                  "description": "Resource Owner Password Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.3."
                },
                {
                  "value": "clientCredentials",
                  "description": "Client Credentials Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.4."
                }
              ]
            }
          },
          "description": "Form of an authorization grant, which the client uses to request the access token.",
          "externalDocs": {
            "url": "http://tools.ietf.org/html/rfc6749#section-4"
          }
        },
        "clientId": {
          "type": "string",
          "description": "Client or app id registered with this authorization server."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AuthorizationServerContractBaseProperties"
        }
      ],
      "required": [
        "displayName",
        "clientRegistrationEndpoint",
        "authorizationEndpoint",
        "clientId",
        "grantTypes"
      ],
      "description": "External OAuth authorization server settings Properties."
    },
    "AuthorizationServerContractBaseProperties": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the authorization server. Can contain HTML formatting tags."
        },
        "authorizationMethods": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "HEAD",
              "OPTIONS",
              "TRACE",
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "x-ms-enum": {
              "name": "AuthorizationMethod",
              "modelAsString": false
            }
          },
          "description": "HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional."
        },
        "clientAuthenticationMethod": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Basic",
              "Body"
            ],
            "x-ms-enum": {
              "name": "ClientAuthenticationMethod",
              "modelAsString": true,
              "values": [
                {
                  "value": "Basic",
                  "description": "Basic Client Authentication method."
                },
                {
                  "value": "Body",
                  "description": "Body based Authentication method."
                }
              ]
            }
          },
          "description": "Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format."
        },
        "tokenBodyParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenBodyParameterContract"
          },
          "description": "Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}."
        },
        "tokenEndpoint": {
          "type": "string",
          "description": "OAuth token endpoint. Contains absolute URI to entity being referenced.",
          "externalDocs": {
            "url": "http://tools.ietf.org/html/rfc6749#section-3.1"
          }
        },
        "supportState": {
          "type": "boolean",
          "description": "If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.",
          "externalDocs": {
            "url": "http://tools.ietf.org/html/rfc6749#section-3.1"
          }
        },
        "defaultScope": {
          "type": "string",
          "description": "Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.",
          "externalDocs": {
            "url": "http://tools.ietf.org/html/rfc6749#section-3.3"
          }
        },
        "bearerTokenSendingMethods": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "authorizationHeader",
              "query"
            ],
            "x-ms-enum": {
              "name": "BearerTokenSendingMethod",
              "modelAsString": true
            }
          },
          "description": "Specifies the mechanism by which access token is passed to the API. ",
          "externalDocs": {
            "url": "http://tools.ietf.org/html/rfc6749#section-4"
          }
        },
        "clientSecret": {
          "type": "string",
          "description": "Client or app secret registered with this authorization server."
        },
        "resourceOwnerUsername": {
          "type": "string",
          "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username."
        },
        "resourceOwnerPassword": {
          "type": "string",
          "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password."
        }
      },
      "description": "External OAuth authorization server Update settings contract."
    },
    "AuthorizationServerUpdateContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AuthorizationServerUpdateContractProperties",
          "description": "Properties of the External OAuth authorization server update Contract."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "External OAuth authorization server settings."
    },
    "AuthorizationServerContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AuthorizationServerContractProperties",
          "description": "Properties of the External OAuth authorization server Contract."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "External OAuth authorization server settings."
    },
    "AuthorizationServerCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationServerContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged OAuth2 Authorization Servers list representation."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "IfMatchRequiredParameter": {
      "name": "If-Match",
      "in": "header",
      "required": true,
      "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AuthenticationServerIdParameter": {
      "name": "authsid",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the authorization server.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "IfMatchOptionalParameter": {
      "name": "If-Match",
      "in": "header",
      "required": false,
      "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SkipQueryParameter": {
      "name": "$skip",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to skip.",
      "minimum": 0,
      "x-ms-parameter-location": "method"
    },
    "TopQueryParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to return.",
      "minimum": 1,
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-id": "apimanagement",
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Authorization Server",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "Update",
  "x-internal-operation-name": "Update"
}