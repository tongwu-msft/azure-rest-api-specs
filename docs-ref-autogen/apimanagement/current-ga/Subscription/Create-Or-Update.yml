### YamlMime:RESTOperation
uid: management.azure.com.apimanagement.current-ga.subscription.createorupdate
name: Create Or Update
service: API Management
groupName: Subscription
apiVersion: 2021-08-01
summary: Creates or updates the subscription of specified user to the specified product.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}?api-version=2021-08-01
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}?notify={notify}&api-version=2021-08-01&appType={appType}
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: serviceName
  in: path
  isRequired: true
  description: The name of the API Management service.
  types:
  - uid: string
  pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$
- name: sid
  in: path
  isRequired: true
  description: Subscription entity Identifier. The entity represents the association between a user and a product in API Management.
  types:
  - uid: string
  pattern: ^[^*#&+:<>?]+$
- name: notify
  in: query
  description: "Notify change in Subscription State. \n - If false, do not send any email notification for change of state of subscription \n - If true, send email notification of change of state of subscription "
  types:
  - uid: boolean
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: string
- name: appType
  in: query
  description: Determines the type of application which send the create user request. Default is legacy publisher portal.
  types:
  - uid: AppType
responses:
- name: 201 Created
  headers:
  - name: ETag
    value: string
  description: The user was successfully subscribed to the product.
  types:
  - uid: SubscriptionContract
- name: 200 OK
  headers:
  - name: ETag
    value: string
  description: The user already subscribed to the product.
  types:
  - uid: SubscriptionContract
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.ownerId
    in: body
    description: User (user id path) for whom subscription is being created in form /users/{userId}
    types:
    - uid: string
  - name: properties.scope
    in: body
    isRequired: true
    description: Scope like /products/{productId} or /apis or /apis/{apiId}.
    types:
    - uid: string
  - name: properties.displayName
    in: body
    isRequired: true
    description: Subscription name.
    types:
    - uid: string
  - name: properties.primaryKey
    in: body
    description: Primary subscription key. If not specified during request key will be generated automatically.
    types:
    - uid: string
  - name: properties.secondaryKey
    in: body
    description: Secondary subscription key. If not specified during request key will be generated automatically.
    types:
    - uid: string
  - name: properties.state
    in: body
    description: Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
    types:
    - uid: SubscriptionState
  - name: properties.allowTracing
    in: body
    description: Determines whether tracing can be enabled
    types:
    - uid: boolean
requestHeader:
- name: If-Match
  in: header
  description: ETag of the Entity. Not required when creating an entity, but required when updating an entity.
  types:
  - uid: string
definitions:
- name: AppType
  description: Determines the type of application which send the create user request. Default is legacy publisher portal.
  kind: enum
  properties:
  - name: portal
    description: User create request was sent by legacy developer portal.
    types:
    - uid: string
  - name: developerPortal
    description: User create request was sent by new developer portal.
    types:
    - uid: string
- name: SubscriptionContract
  description: Subscription details.
  kind: object
  properties:
  - name: properties.ownerId
    description: The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier.
    types:
    - uid: string
  - name: properties.scope
    description: Scope like /products/{productId} or /apis or /apis/{apiId}.
    types:
    - uid: string
  - name: properties.displayName
    description: The name of the subscription, or null if the subscription has no name.
    types:
    - uid: string
  - name: properties.state
    description: Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
    types:
    - uid: SubscriptionState
  - name: properties.createdDate
    isReadyOnly: true
    description: 'Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.'
    types:
    - uid: string
  - name: properties.startDate
    description: 'Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.'
    types:
    - uid: string
  - name: properties.expirationDate
    description: 'Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.'
    types:
    - uid: string
  - name: properties.endDate
    description: 'Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.'
    types:
    - uid: string
  - name: properties.notificationDate
    description: 'Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.'
    types:
    - uid: string
  - name: properties.primaryKey
    description: Subscription primary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
    types:
    - uid: string
  - name: properties.secondaryKey
    description: Subscription secondary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
    types:
    - uid: string
  - name: properties.stateComment
    description: Optional subscription comment added by an administrator when the state is changed to the 'rejected'.
    types:
    - uid: string
  - name: properties.allowTracing
    description: Determines whether tracing is enabled
    types:
    - uid: boolean
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response.
  kind: object
  properties:
  - name: error.code
    description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
    types:
    - uid: string
  - name: error.message
    description: Human-readable representation of the error.
    types:
    - uid: string
  - name: error.details
    description: The list of invalid fields send in request, in case of validation error.
    types:
    - uid: ErrorFieldContract
      isArray: true
- name: SubscriptionCreateParameters
  description: Subscription create details.
  kind: object
  properties:
  - name: properties.ownerId
    description: User (user id path) for whom subscription is being created in form /users/{userId}
    types:
    - uid: string
  - name: properties.scope
    description: Scope like /products/{productId} or /apis or /apis/{apiId}.
    types:
    - uid: string
  - name: properties.displayName
    description: Subscription name.
    types:
    - uid: string
  - name: properties.primaryKey
    description: Primary subscription key. If not specified during request key will be generated automatically.
    types:
    - uid: string
  - name: properties.secondaryKey
    description: Secondary subscription key. If not specified during request key will be generated automatically.
    types:
    - uid: string
  - name: properties.state
    description: Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
    types:
    - uid: SubscriptionState
  - name: properties.allowTracing
    description: Determines whether tracing can be enabled
    types:
    - uid: boolean
- name: SubscriptionState
  description: Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
  kind: enum
  properties:
  - name: suspended
    types:
    - uid: string
  - name: active
    types:
    - uid: string
  - name: expired
    types:
    - uid: string
  - name: submitted
    types:
    - uid: string
  - name: rejected
    types:
    - uid: string
  - name: cancelled
    types:
    - uid: string
- name: ErrorFieldContract
  description: Error Field contract.
  kind: object
  properties:
  - name: code
    description: Property level error code.
    types:
    - uid: string
  - name: message
    description: Human-readable representation of property-level error.
    types:
    - uid: string
  - name: target
    description: Property name.
    types:
    - uid: string
examples:
- name: ApiManagementCreateSubscription
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/subscriptions/testsub?api-version=2021-08-01
    body: >-
      {
        "properties": {
          "ownerId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/57127d485157a511ace86ae7",
          "scope": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/products/5600b59475ff190048060002",
          "displayName": "testsub"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/subscriptions/testsub?api-version=2021-08-01

      {
        "properties": {
          "ownerId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/57127d485157a511ace86ae7",
          "scope": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/products/5600b59475ff190048060002",
          "displayName": "testsub"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.apimanagement.models.SubscriptionCreateParameters;

      /** Samples for Subscription CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateSubscription.json
           */
          /**
           * Sample code: ApiManagementCreateSubscription.
           *
           * @param manager Entry point to ApiManagementManager.
           */
          public static void apiManagementCreateSubscription(
              com.azure.resourcemanager.apimanagement.ApiManagementManager manager) {
              manager
                  .subscriptions()
                  .createOrUpdateWithResponse(
                      "rg1",
                      "apimService1",
                      "testsub",
                      new SubscriptionCreateParameters()
                          .withOwnerId(
                              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/57127d485157a511ace86ae7")
                          .withScope(
                              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/products/5600b59475ff190048060002")
                          .withDisplayName("testsub"),
                      null,
                      null,
                      null,
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-apimanagement_1.0.0-beta.3/sdk/apimanagement/azure-resourcemanager-apimanagement/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armapimanagement_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/apimanagement/armapimanagement"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateSubscription.json
      func ExampleSubscriptionClient_CreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armapimanagement.NewSubscriptionClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CreateOrUpdate(ctx,
      		"rg1",
      		"apimService1",
      		"testsub",
      		armapimanagement.SubscriptionCreateParameters{
      			Properties: &armapimanagement.SubscriptionCreateParameterProperties{
      				DisplayName: to.Ptr("testsub"),
      				OwnerID:     to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/57127d485157a511ace86ae7"),
      				Scope:       to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/products/5600b59475ff190048060002"),
      			},
      		},
      		&armapimanagement.SubscriptionClientCreateOrUpdateOptions{Notify: nil,
      			IfMatch: nil,
      			AppType: nil,
      		})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fapimanagement%2Farmapimanagement%2Fv1.0.0/sdk/resourcemanager/apimanagement/armapimanagement/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ApiManagementClient } = require("@azure/arm-apimanagement");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates the subscription of specified user to the specified product.
       *
       * @summary Creates or updates the subscription of specified user to the specified product.
       * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateSubscription.json
       */
      async function apiManagementCreateSubscription() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const serviceName = "apimService1";
        const sid = "testsub";
        const parameters = {
          displayName: "testsub",
          ownerId:
            "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/57127d485157a511ace86ae7",
          scope:
            "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/products/5600b59475ff190048060002",
        };
        const credential = new DefaultAzureCredential();
        const client = new ApiManagementClient(credential, subscriptionId);
        const result = await client.subscription.createOrUpdate(
          resourceGroupName,
          serviceName,
          sid,
          parameters
        );
        console.log(result);
      }

      apiManagementCreateSubscription().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-apimanagement_8.1.2/sdk/apimanagement/arm-apimanagement/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/subscriptions/testsub",
        "type": "Microsoft.ApiManagement/service/subscriptions",
        "name": "testsub",
        "properties": {
          "ownerId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/57127d485157a511ace86ae7",
          "scope": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/products/5600b59475ff190048060002",
          "displayName": "testsub",
          "state": "submitted",
          "createdDate": "2017-06-02T23:34:03.1055076Z"
        }
      }
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/subscriptions/testsub",
        "type": "Microsoft.ApiManagement/service/subscriptions",
        "name": "testsub",
        "properties": {
          "ownerId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/57127d485157a511ace86ae7",
          "scope": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/products/5600b59475ff190048060002",
          "displayName": "testsub",
          "state": "submitted",
          "createdDate": "2017-06-02T23:34:03.1055076Z"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about API Management service - Creates or updates the subscription of specified user to the specified product.
errorCodes: []
