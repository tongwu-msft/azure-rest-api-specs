### YamlMime:RESTOperation
uid: management.azure.com.apimanagement.current-ga.user.getsharedaccesstoken
name: Get Shared Access Token
service: API Management
groupName: User
apiVersion: 2021-08-01
summary: Gets the Shared Access Authorization Token for the User.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/token?api-version=2021-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: serviceName
  in: path
  isRequired: true
  description: The name of the API Management service.
  types:
  - uid: string
  pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$
- name: userId
  in: path
  isRequired: true
  description: User identifier. Must be unique in the current API Management service instance.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The response body contains the authorization token for the user.
  types:
  - uid: UserTokenResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.keyType
    in: body
    isRequired: true
    description: The Key to be used to generate token for user.
    types:
    - uid: KeyType
  - name: properties.expiry
    in: body
    isRequired: true
    description: 'The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.'
    types:
    - uid: string
requestHeader: []
definitions:
- name: UserTokenResult
  description: Get User Token response details.
  kind: object
  properties:
  - name: value
    description: Shared Access Authorization token for the User.
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response.
  kind: object
  properties:
  - name: error.code
    description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
    types:
    - uid: string
  - name: error.message
    description: Human-readable representation of the error.
    types:
    - uid: string
  - name: error.details
    description: The list of invalid fields send in request, in case of validation error.
    types:
    - uid: ErrorFieldContract
      isArray: true
- name: UserTokenParameters
  description: Get User Token parameters.
  kind: object
  properties:
  - name: properties.keyType
    description: The Key to be used to generate token for user.
    types:
    - uid: KeyType
    defaultValue: primary
  - name: properties.expiry
    description: 'The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.'
    types:
    - uid: string
- name: ErrorFieldContract
  description: Error Field contract.
  kind: object
  properties:
  - name: code
    description: Property level error code.
    types:
    - uid: string
  - name: message
    description: Human-readable representation of property-level error.
    types:
    - uid: string
  - name: target
    description: Property name.
    types:
    - uid: string
- name: KeyType
  description: The Key to be used to generate token for user.
  kind: enum
  properties:
  - name: primary
    types:
    - uid: string
  - name: secondary
    types:
    - uid: string
examples:
- name: ApiManagementUserToken
  request:
    uri: POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/userId1718/token?api-version=2021-08-01
    body: >-
      {
        "properties": {
          "keyType": "primary",
          "expiry": "2019-04-21T00:44:24.2845269Z"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/userId1718/token?api-version=2021-08-01

      {
        "properties": {
          "keyType": "primary",
          "expiry": "2019-04-21T00:44:24.2845269Z"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.apimanagement.models.KeyType;
      import com.azure.resourcemanager.apimanagement.models.UserTokenParameters;
      import java.time.OffsetDateTime;

      /** Samples for User GetSharedAccessToken. */
      public final class Main {
          /*
           * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementUserToken.json
           */
          /**
           * Sample code: ApiManagementUserToken.
           *
           * @param manager Entry point to ApiManagementManager.
           */
          public static void apiManagementUserToken(com.azure.resourcemanager.apimanagement.ApiManagementManager manager) {
              manager
                  .users()
                  .getSharedAccessTokenWithResponse(
                      "rg1",
                      "apimService1",
                      "userId1718",
                      new UserTokenParameters()
                          .withKeyType(KeyType.PRIMARY)
                          .withExpiry(OffsetDateTime.parse("2019-04-21T00:44:24.2845269Z")),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-apimanagement_1.0.0-beta.3/sdk/apimanagement/azure-resourcemanager-apimanagement/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armapimanagement_test

      import (
      	"context"
      	"log"

      	"time"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/apimanagement/armapimanagement"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementUserToken.json
      func ExampleUserClient_GetSharedAccessToken() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armapimanagement.NewUserClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.GetSharedAccessToken(ctx,
      		"rg1",
      		"apimService1",
      		"userId1718",
      		armapimanagement.UserTokenParameters{
      			Properties: &armapimanagement.UserTokenParameterProperties{
      				Expiry:  to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2019-04-21T00:44:24.2845269Z"); return t }()),
      				KeyType: to.Ptr(armapimanagement.KeyTypePrimary),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fapimanagement%2Farmapimanagement%2Fv1.0.0/sdk/resourcemanager/apimanagement/armapimanagement/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ApiManagementClient } = require("@azure/arm-apimanagement");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets the Shared Access Authorization Token for the User.
       *
       * @summary Gets the Shared Access Authorization Token for the User.
       * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementUserToken.json
       */
      async function apiManagementUserToken() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const serviceName = "apimService1";
        const userId = "userId1718";
        const parameters = {
          expiry: new Date("2019-04-21T00:44:24.2845269Z"),
          keyType: "primary",
        };
        const credential = new DefaultAzureCredential();
        const client = new ApiManagementClient(credential, subscriptionId);
        const result = await client.user.getSharedAccessToken(
          resourceGroupName,
          serviceName,
          userId,
          parameters
        );
        console.log(result);
      }

      apiManagementUserToken().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-apimanagement_8.1.1/sdk/apimanagement/arm-apimanagement/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": "userId1718&201904210044&9A1GR1f5WIhFvFmzQG+xxxxxxxxxxx/kBeu87DWad3tkasUXuvPL+MgzlwUHyg=="
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about API Management service - Gets the Shared Access Authorization Token for the User.
errorCodes: []
