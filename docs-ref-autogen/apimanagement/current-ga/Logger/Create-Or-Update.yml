### YamlMime:RESTOperation
uid: management.azure.com.apimanagement.current-ga.logger.createorupdate
name: Create Or Update
service: API Management
groupName: Logger
apiVersion: 2021-08-01
summary: Creates or Updates a logger.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerId}?api-version=2021-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: serviceName
  in: path
  isRequired: true
  description: The name of the API Management service.
  types:
  - uid: string
  pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$
- name: loggerId
  in: path
  isRequired: true
  description: Logger identifier. Must be unique in the API Management service instance.
  types:
  - uid: string
  pattern: ^[^*#&+:<>?]+$
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 201 Created
  headers:
  - name: ETag
    value: string
  description: Logger was successfully created.
  types:
  - uid: LoggerContract
- name: 200 OK
  headers:
  - name: ETag
    value: string
  description: The existing logger was successfully updated.
  types:
  - uid: LoggerContract
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.loggerType
    in: body
    isRequired: true
    description: Logger type.
    types:
    - uid: LoggerType
  - name: properties.description
    in: body
    description: Logger description.
    types:
    - uid: string
  - name: properties.credentials
    in: body
    description: >-
      The name and SendRule connection string of the event hub for azureEventHub logger.

      Instrumentation key for applicationInsights logger.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.isBuffered
    in: body
    description: Whether records are buffered in the logger before publishing. Default is assumed to be true.
    types:
    - uid: boolean
  - name: properties.resourceId
    in: body
    description: Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).
    types:
    - uid: string
requestHeader:
- name: If-Match
  in: header
  description: ETag of the Entity. Not required when creating an entity, but required when updating an entity.
  types:
  - uid: string
definitions:
- name: LoggerContract
  description: Logger details.
  kind: object
  properties:
  - name: properties.loggerType
    description: Logger type.
    types:
    - uid: LoggerType
  - name: properties.description
    description: Logger description.
    types:
    - uid: string
  - name: properties.credentials
    description: >-
      The name and SendRule connection string of the event hub for azureEventHub logger.

      Instrumentation key for applicationInsights logger.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.isBuffered
    description: Whether records are buffered in the logger before publishing. Default is assumed to be true.
    types:
    - uid: boolean
  - name: properties.resourceId
    description: Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response.
  kind: object
  properties:
  - name: error.code
    description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
    types:
    - uid: string
  - name: error.message
    description: Human-readable representation of the error.
    types:
    - uid: string
  - name: error.details
    description: The list of invalid fields send in request, in case of validation error.
    types:
    - uid: ErrorFieldContract
      isArray: true
- name: LoggerType
  description: Logger type.
  kind: enum
  properties:
  - name: azureEventHub
    description: Azure Event Hub as log destination.
    types:
    - uid: string
  - name: applicationInsights
    description: Azure Application Insights as log destination.
    types:
    - uid: string
  - name: azureMonitor
    description: Azure Monitor
    types:
    - uid: string
- name: ErrorFieldContract
  description: Error Field contract.
  kind: object
  properties:
  - name: code
    description: Property level error code.
    types:
    - uid: string
  - name: message
    description: Human-readable representation of property-level error.
    types:
    - uid: string
  - name: target
    description: Property name.
    types:
    - uid: string
examples:
- name: ApiManagementCreateEHLogger
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/eh1?api-version=2021-08-01
    body: >-
      {
        "properties": {
          "loggerType": "azureEventHub",
          "description": "adding a new logger",
          "credentials": {
            "name": "hydraeventhub",
            "connectionString": "Endpoint=sb://hydraeventhub-ns.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=********="
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/eh1?api-version=2021-08-01

      {
        "properties": {
          "loggerType": "azureEventHub",
          "description": "adding a new logger",
          "credentials": {
            "name": "hydraeventhub",
            "connectionString": "Endpoint=sb://hydraeventhub-ns.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=********="
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.resourcemanager.apimanagement.models.LoggerType;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for Logger CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateEHLogger.json
           */
          /**
           * Sample code: ApiManagementCreateEHLogger.
           *
           * @param manager Entry point to ApiManagementManager.
           */
          public static void apiManagementCreateEHLogger(
              com.azure.resourcemanager.apimanagement.ApiManagementManager manager) {
              manager
                  .loggers()
                  .define("eh1")
                  .withExistingService("rg1", "apimService1")
                  .withLoggerType(LoggerType.AZURE_EVENT_HUB)
                  .withDescription("adding a new logger")
                  .withCredentials(
                      mapOf(
                          "name",
                          "hydraeventhub",
                          "connectionString",
                          "Endpoint=sb://hydraeventhub-ns.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=********="))
                  .create();
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-apimanagement_1.0.0-beta.3/sdk/apimanagement/azure-resourcemanager-apimanagement/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/eh1",
        "type": "Microsoft.ApiManagement/service/loggers",
        "name": "eh1",
        "properties": {
          "loggerType": "azureEventHub",
          "description": "adding a new logger",
          "credentials": {
            "connectionString": "{{Logger-Credentials-5f28745bbebeeb13cc3f7301}}"
          },
          "isBuffered": true
        }
      }
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/eh1",
        "type": "Microsoft.ApiManagement/service/loggers",
        "name": "eh1",
        "properties": {
          "loggerType": "azureEventHub",
          "description": "adding a new logger",
          "credentials": {
            "connectionString": "{{Logger-Credentials-5f28745bbebeeb13cc3f7301}}"
          },
          "isBuffered": true
        }
      }
- name: ApiManagementCreateAILogger
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/loggerId?api-version=2021-08-01
    body: >-
      {
        "properties": {
          "loggerType": "applicationInsights",
          "description": "adding a new logger",
          "credentials": {
            "instrumentationKey": "11................a1"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/loggerId?api-version=2021-08-01

      {
        "properties": {
          "loggerType": "applicationInsights",
          "description": "adding a new logger",
          "credentials": {
            "instrumentationKey": "11................a1"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.resourcemanager.apimanagement.models.LoggerType;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for Logger CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateAILogger.json
           */
          /**
           * Sample code: ApiManagementCreateAILogger.
           *
           * @param manager Entry point to ApiManagementManager.
           */
          public static void apiManagementCreateAILogger(
              com.azure.resourcemanager.apimanagement.ApiManagementManager manager) {
              manager
                  .loggers()
                  .define("loggerId")
                  .withExistingService("rg1", "apimService1")
                  .withLoggerType(LoggerType.APPLICATION_INSIGHTS)
                  .withDescription("adding a new logger")
                  .withCredentials(mapOf("instrumentationKey", "11................a1"))
                  .create();
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-apimanagement_1.0.0-beta.3/sdk/apimanagement/azure-resourcemanager-apimanagement/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armapimanagement_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/apimanagement/armapimanagement"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateAILogger.json
      func ExampleLoggerClient_CreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armapimanagement.NewLoggerClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CreateOrUpdate(ctx,
      		"rg1",
      		"apimService1",
      		"loggerId",
      		armapimanagement.LoggerContract{
      			Properties: &armapimanagement.LoggerContractProperties{
      				Description: to.Ptr("adding a new logger"),
      				Credentials: map[string]*string{
      					"instrumentationKey": to.Ptr("11................a1"),
      				},
      				LoggerType: to.Ptr(armapimanagement.LoggerTypeApplicationInsights),
      			},
      		},
      		&armapimanagement.LoggerClientCreateOrUpdateOptions{IfMatch: nil})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fapimanagement%2Farmapimanagement%2Fv1.0.0/sdk/resourcemanager/apimanagement/armapimanagement/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/loggerId",
        "type": "Microsoft.ApiManagement/service/loggers",
        "name": "loggerId",
        "properties": {
          "loggerType": "applicationInsights",
          "description": null,
          "credentials": {
            "instrumentationKey": "{{5a.......2a}}"
          },
          "isBuffered": false,
          "resourceId": "/subscriptions/subid/resourceGroups/rg1/providers/microsoft.insights/components/airesource"
        }
      }
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/loggerId",
        "type": "Microsoft.ApiManagement/service/loggers",
        "name": "loggerId",
        "properties": {
          "loggerType": "applicationInsights",
          "description": null,
          "credentials": {
            "instrumentationKey": "{{5a.......2a}}"
          },
          "isBuffered": false
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about API Management service - Creates or Updates a logger.
errorCodes: []
