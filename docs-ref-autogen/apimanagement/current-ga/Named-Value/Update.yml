### YamlMime:RESTOperation
uid: management.azure.com.apimanagement.current-ga.namedvalue.update
name: Update
service: API Management
groupName: Named Value
apiVersion: 2021-08-01
summary: Updates the specific named value.
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}?api-version=2021-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: serviceName
  in: path
  isRequired: true
  description: The name of the API Management service.
  types:
  - uid: string
  pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$
- name: namedValueId
  in: path
  isRequired: true
  description: Identifier of the NamedValue.
  types:
  - uid: string
  pattern: ^[^*#&+:<>?]+$
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 202 Accepted
  description: Request to create or update named value was accepted.
- name: 200 OK
  headers:
  - name: ETag
    value: string
  description: Named value was successfully updated.
  types:
  - uid: NamedValueContract
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.displayName
    in: body
    description: Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
    types:
    - uid: string
  - name: properties.value
    in: body
    description: Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace.
    types:
    - uid: string
  - name: properties.keyVault
    in: body
    description: KeyVault location details of the namedValue.
    types:
    - uid: KeyVaultContractCreateProperties
  - name: properties.tags
    in: body
    description: Optional tags that when provided can be used to filter the NamedValue list.
    types:
    - uid: string
      isArray: true
  - name: properties.secret
    in: body
    description: Determines whether the value is a secret and should be encrypted or not. Default value is false.
    types:
    - uid: boolean
requestHeader:
- name: If-Match
  in: header
  isRequired: true
  description: ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.
  types:
  - uid: string
definitions:
- name: KeyVaultContractCreateProperties
  description: Create keyVault contract details.
  kind: object
  properties:
  - name: secretIdentifier
    description: Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires API Management service to be configured with aka.ms/apimmsi
    types:
    - uid: string
  - name: identityClientId
    description: Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.
    types:
    - uid: string
- name: NamedValueContract
  description: NamedValue details.
  kind: object
  properties:
  - name: properties.displayName
    description: Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
    types:
    - uid: string
  - name: properties.value
    description: Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
    types:
    - uid: string
  - name: properties.keyVault
    description: KeyVault location details of the namedValue.
    types:
    - uid: KeyVaultContractProperties
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
  - name: properties.tags
    description: Optional tags that when provided can be used to filter the NamedValue list.
    types:
    - uid: string
      isArray: true
  - name: properties.secret
    description: Determines whether the value is a secret and should be encrypted or not. Default value is false.
    types:
    - uid: boolean
- name: ErrorResponse
  description: Error Response.
  kind: object
  properties:
  - name: error.code
    description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
    types:
    - uid: string
  - name: error.message
    description: Human-readable representation of the error.
    types:
    - uid: string
  - name: error.details
    description: The list of invalid fields send in request, in case of validation error.
    types:
    - uid: ErrorFieldContract
      isArray: true
- name: NamedValueUpdateParameters
  description: NamedValue update Parameters.
  kind: object
  properties:
  - name: properties.displayName
    description: Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
    types:
    - uid: string
  - name: properties.value
    description: Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace.
    types:
    - uid: string
  - name: properties.keyVault
    description: KeyVault location details of the namedValue.
    types:
    - uid: KeyVaultContractCreateProperties
  - name: properties.tags
    description: Optional tags that when provided can be used to filter the NamedValue list.
    types:
    - uid: string
      isArray: true
  - name: properties.secret
    description: Determines whether the value is a secret and should be encrypted or not. Default value is false.
    types:
    - uid: boolean
- name: KeyVaultContractProperties
  description: KeyVault contract details.
  kind: object
  properties:
  - name: lastStatus
    description: Last time sync and refresh status of secret from key vault.
    types:
    - uid: KeyVaultLastAccessStatusContractProperties
  - name: secretIdentifier
    description: Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires API Management service to be configured with aka.ms/apimmsi
    types:
    - uid: string
  - name: identityClientId
    description: Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.
    types:
    - uid: string
- name: ErrorFieldContract
  description: Error Field contract.
  kind: object
  properties:
  - name: code
    description: Property level error code.
    types:
    - uid: string
  - name: message
    description: Human-readable representation of property-level error.
    types:
    - uid: string
  - name: target
    description: Property name.
    types:
    - uid: string
- name: KeyVaultLastAccessStatusContractProperties
  description: Issue contract Update Properties.
  kind: object
  properties:
  - name: code
    description: Last status code for sync and refresh of secret from key vault.
    types:
    - uid: string
  - name: message
    description: Details of the error else empty.
    types:
    - uid: string
  - name: timeStampUtc
    description: 'Last time secret was accessed. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.'
    types:
    - uid: string
examples:
- name: ApiManagementUpdateNamedValue
  request:
    uri: PATCH https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/namedValues/testprop2?api-version=2021-08-01
    body: >-
      {
        "properties": {
          "displayName": "prop3name",
          "value": "propValue",
          "tags": [
            "foo",
            "bar2"
          ],
          "secret": false
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/namedValues/testprop2?api-version=2021-08-01


      {
        "properties": {
          "displayName": "prop3name",
          "value": "propValue",
          "tags": [
            "foo",
            "bar2"
          ],
          "secret": false
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.apimanagement.models.NamedValueContract;
      import java.util.Arrays;

      /** Samples for NamedValue Update. */
      public final class Main {
          /*
           * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementUpdateNamedValue.json
           */
          /**
           * Sample code: ApiManagementUpdateNamedValue.
           *
           * @param manager Entry point to ApiManagementManager.
           */
          public static void apiManagementUpdateNamedValue(
              com.azure.resourcemanager.apimanagement.ApiManagementManager manager) {
              NamedValueContract resource =
                  manager.namedValues().getWithResponse("rg1", "apimService1", "testprop2", Context.NONE).getValue();
              resource
                  .update()
                  .withTags(Arrays.asList("foo", "bar2"))
                  .withDisplayName("prop3name")
                  .withValue("propValue")
                  .withSecret(false)
                  .withIfMatch("*")
                  .apply();
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-apimanagement_1.0.0-beta.3/sdk/apimanagement/azure-resourcemanager-apimanagement/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armapimanagement_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/apimanagement/armapimanagement"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementUpdateNamedValue.json
      func ExampleNamedValueClient_BeginUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armapimanagement.NewNamedValueClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginUpdate(ctx,
      		"rg1",
      		"apimService1",
      		"testprop2",
      		"*",
      		armapimanagement.NamedValueUpdateParameters{
      			Properties: &armapimanagement.NamedValueUpdateParameterProperties{
      				Secret: to.Ptr(false),
      				Tags: []*string{
      					to.Ptr("foo"),
      					to.Ptr("bar2")},
      				DisplayName: to.Ptr("prop3name"),
      				Value:       to.Ptr("propValue"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fapimanagement%2Farmapimanagement%2Fv1.0.0/sdk/resourcemanager/apimanagement/armapimanagement/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ApiManagementClient } = require("@azure/arm-apimanagement");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Updates the specific named value.
       *
       * @summary Updates the specific named value.
       * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementUpdateNamedValue.json
       */
      async function apiManagementUpdateNamedValue() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const serviceName = "apimService1";
        const namedValueId = "testprop2";
        const ifMatch = "*";
        const parameters = {
          displayName: "prop3name",
          secret: false,
          tags: ["foo", "bar2"],
          value: "propValue",
        };
        const credential = new DefaultAzureCredential();
        const client = new ApiManagementClient(credential, subscriptionId);
        const result = await client.namedValue.beginUpdateAndWait(
          resourceGroupName,
          serviceName,
          namedValueId,
          ifMatch,
          parameters
        );
        console.log(result);
      }

      apiManagementUpdateNamedValue().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-apimanagement_8.1.2/sdk/apimanagement/arm-apimanagement/README.md) on how to add the SDK to your project and authenticate.
    headers:
    - name: If-Match
      value: '*'
  responses:
  - statusCode: "202"
    headers:
    - name: location
      value: https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/namedValues/testprop2?api-version=2021-08-01&asyncId=5c730e343244df1b9cb56e85&asyncCode=204
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/namedValues/testprop2",
        "type": "Microsoft.ApiManagement/service/namedValues",
        "properties": {
          "displayName": "prop3name",
          "value": "propValue",
          "tags": [
            "foo",
            "bar2"
          ],
          "secret": false
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about API Management service - Updates the specific named value.
errorCodes: []
