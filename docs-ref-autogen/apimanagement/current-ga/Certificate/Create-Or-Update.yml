### YamlMime:RESTOperation
uid: management.azure.com.apimanagement.current-ga.certificate.createorupdate
name: Create Or Update
service: API Management
groupName: Certificate
apiVersion: 2021-08-01
summary: Creates or updates the certificate being used for authentication with the backend.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}?api-version=2021-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: serviceName
  in: path
  isRequired: true
  description: The name of the API Management service.
  types:
  - uid: string
  pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$
- name: certificateId
  in: path
  isRequired: true
  description: Identifier of the certificate entity. Must be unique in the current API Management service instance.
  types:
  - uid: string
  pattern: ^[^*#&+:<>?]+$
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 201 Created
  headers:
  - name: ETag
    value: string
  description: The new certificate was successfully added.
  types:
  - uid: CertificateContract
- name: 200 OK
  headers:
  - name: ETag
    value: string
  description: The certificate details were successfully updated.
  types:
  - uid: CertificateContract
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.data
    in: body
    description: Base 64 encoded certificate using the application/x-pkcs12 representation.
    types:
    - uid: string
  - name: properties.password
    in: body
    description: Password for the Certificate
    types:
    - uid: string
  - name: properties.keyVault
    in: body
    description: KeyVault location details of the certificate.
    types:
    - uid: KeyVaultContractCreateProperties
requestHeader:
- name: If-Match
  in: header
  description: ETag of the Entity. Not required when creating an entity, but required when updating an entity.
  types:
  - uid: string
definitions:
- name: KeyVaultContractCreateProperties
  description: Create keyVault contract details.
  kind: object
  properties:
  - name: secretIdentifier
    description: Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires API Management service to be configured with aka.ms/apimmsi
    types:
    - uid: string
  - name: identityClientId
    description: Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.
    types:
    - uid: string
- name: CertificateContract
  description: Certificate details.
  kind: object
  properties:
  - name: properties.subject
    description: Subject attribute of the certificate.
    types:
    - uid: string
  - name: properties.thumbprint
    description: Thumbprint of the certificate.
    types:
    - uid: string
  - name: properties.expirationDate
    description: 'Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.'
    types:
    - uid: string
  - name: properties.keyVault
    description: KeyVault location details of the certificate.
    types:
    - uid: KeyVaultContractProperties
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response.
  kind: object
  properties:
  - name: error.code
    description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
    types:
    - uid: string
  - name: error.message
    description: Human-readable representation of the error.
    types:
    - uid: string
  - name: error.details
    description: The list of invalid fields send in request, in case of validation error.
    types:
    - uid: ErrorFieldContract
      isArray: true
- name: CertificateCreateOrUpdateParameters
  description: Certificate create or update details.
  kind: object
  properties:
  - name: properties.data
    description: Base 64 encoded certificate using the application/x-pkcs12 representation.
    types:
    - uid: string
  - name: properties.password
    description: Password for the Certificate
    types:
    - uid: string
  - name: properties.keyVault
    description: KeyVault location details of the certificate.
    types:
    - uid: KeyVaultContractCreateProperties
- name: KeyVaultContractProperties
  description: KeyVault contract details.
  kind: object
  properties:
  - name: lastStatus
    description: Last time sync and refresh status of secret from key vault.
    types:
    - uid: KeyVaultLastAccessStatusContractProperties
  - name: secretIdentifier
    description: Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires API Management service to be configured with aka.ms/apimmsi
    types:
    - uid: string
  - name: identityClientId
    description: Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.
    types:
    - uid: string
- name: ErrorFieldContract
  description: Error Field contract.
  kind: object
  properties:
  - name: code
    description: Property level error code.
    types:
    - uid: string
  - name: message
    description: Human-readable representation of property-level error.
    types:
    - uid: string
  - name: target
    description: Property name.
    types:
    - uid: string
- name: KeyVaultLastAccessStatusContractProperties
  description: Issue contract Update Properties.
  kind: object
  properties:
  - name: code
    description: Last status code for sync and refresh of secret from key vault.
    types:
    - uid: string
  - name: message
    description: Details of the error else empty.
    types:
    - uid: string
  - name: timeStampUtc
    description: 'Last time secret was accessed. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.'
    types:
    - uid: string
examples:
- name: ApiManagementCreateCertificate
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/certificates/tempcert?api-version=2021-08-01
    body: >-
      {
        "properties": {
          "data": "****************Base 64 Encoded Certificate *******************************",
          "password": "****Certificate Password******"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/certificates/tempcert?api-version=2021-08-01

      {
        "properties": {
          "data": "****************Base 64 Encoded Certificate *******************************",
          "password": "****Certificate Password******"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      /** Samples for Certificate CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateCertificate.json
           */
          /**
           * Sample code: ApiManagementCreateCertificate.
           *
           * @param manager Entry point to ApiManagementManager.
           */
          public static void apiManagementCreateCertificate(
              com.azure.resourcemanager.apimanagement.ApiManagementManager manager) {
              manager
                  .certificates()
                  .define("tempcert")
                  .withExistingService("rg1", "apimService1")
                  .withData("****************Base 64 Encoded Certificate *******************************")
                  .withPassword("****Certificate Password******")
                  .create();
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-apimanagement_1.0.0-beta.3/sdk/apimanagement/azure-resourcemanager-apimanagement/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armapimanagement_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/apimanagement/armapimanagement"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateCertificate.json
      func ExampleCertificateClient_CreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armapimanagement.NewCertificateClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CreateOrUpdate(ctx,
      		"rg1",
      		"apimService1",
      		"tempcert",
      		armapimanagement.CertificateCreateOrUpdateParameters{
      			Properties: &armapimanagement.CertificateCreateOrUpdateProperties{
      				Data:     to.Ptr("****************Base 64 Encoded Certificate *******************************"),
      				Password: to.Ptr("****Certificate Password******"),
      			},
      		},
      		&armapimanagement.CertificateClientCreateOrUpdateOptions{IfMatch: nil})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fapimanagement%2Farmapimanagement%2Fv1.0.0/sdk/resourcemanager/apimanagement/armapimanagement/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ApiManagementClient } = require("@azure/arm-apimanagement");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates the certificate being used for authentication with the backend.
       *
       * @summary Creates or updates the certificate being used for authentication with the backend.
       * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateCertificate.json
       */
      async function apiManagementCreateCertificate() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const serviceName = "apimService1";
        const certificateId = "tempcert";
        const parameters = {
          data: "****************Base 64 Encoded Certificate *******************************",
          password: "****Certificate Password******",
        };
        const credential = new DefaultAzureCredential();
        const client = new ApiManagementClient(credential, subscriptionId);
        const result = await client.certificate.createOrUpdate(
          resourceGroupName,
          serviceName,
          certificateId,
          parameters
        );
        console.log(result);
      }

      apiManagementCreateCertificate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-apimanagement_8.1.2/sdk/apimanagement/arm-apimanagement/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/certificates/tempcert",
        "type": "Microsoft.ApiManagement/service/certificates",
        "name": "tempcert",
        "properties": {
          "subject": "CN=contoso.com",
          "thumbprint": "*******************3",
          "expirationDate": "2018-03-17T21:55:07+00:00"
        }
      }
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/certificates/tempcert",
        "type": "Microsoft.ApiManagement/service/certificates",
        "name": "tempcert",
        "properties": {
          "subject": "CN=contoso.com",
          "thumbprint": "*******************3",
          "expirationDate": "2018-03-17T21:55:07+00:00"
        }
      }
- name: ApiManagementCreateCertificateWithKeyVault
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/certificates/templateCertkv?api-version=2021-08-01
    body: >-
      {
        "properties": {
          "keyVault": {
            "identityClientId": "ceaa6b06-c00f-43ef-99ac-f53d1fe876a0",
            "secretIdentifier": "https://rpbvtkeyvaultintegration.vault-int.azure-int.net/secrets/msitestingCert"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/certificates/templateCertkv?api-version=2021-08-01

      {
        "properties": {
          "keyVault": {
            "identityClientId": "ceaa6b06-c00f-43ef-99ac-f53d1fe876a0",
            "secretIdentifier": "https://rpbvtkeyvaultintegration.vault-int.azure-int.net/secrets/msitestingCert"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.resourcemanager.apimanagement.models.KeyVaultContractCreateProperties;

      /** Samples for Certificate CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateCertificateWithKeyVault.json
           */
          /**
           * Sample code: ApiManagementCreateCertificateWithKeyVault.
           *
           * @param manager Entry point to ApiManagementManager.
           */
          public static void apiManagementCreateCertificateWithKeyVault(
              com.azure.resourcemanager.apimanagement.ApiManagementManager manager) {
              manager
                  .certificates()
                  .define("templateCertkv")
                  .withExistingService("rg1", "apimService1")
                  .withKeyVault(
                      new KeyVaultContractCreateProperties()
                          .withSecretIdentifier(
                              "https://rpbvtkeyvaultintegration.vault-int.azure-int.net/secrets/msitestingCert")
                          .withIdentityClientId("ceaa6b06-c00f-43ef-99ac-f53d1fe876a0"))
                  .create();
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-apimanagement_1.0.0-beta.3/sdk/apimanagement/azure-resourcemanager-apimanagement/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ApiManagementClient } = require("@azure/arm-apimanagement");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates the certificate being used for authentication with the backend.
       *
       * @summary Creates or updates the certificate being used for authentication with the backend.
       * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateCertificateWithKeyVault.json
       */
      async function apiManagementCreateCertificateWithKeyVault() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const serviceName = "apimService1";
        const certificateId = "templateCertkv";
        const parameters = {
          keyVault: {
            identityClientId: "ceaa6b06-c00f-43ef-99ac-f53d1fe876a0",
            secretIdentifier:
              "https://rpbvtkeyvaultintegration.vault-int.azure-int.net/secrets/msitestingCert",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ApiManagementClient(credential, subscriptionId);
        const result = await client.certificate.createOrUpdate(
          resourceGroupName,
          serviceName,
          certificateId,
          parameters
        );
        console.log(result);
      }

      apiManagementCreateCertificateWithKeyVault().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-apimanagement_8.1.2/sdk/apimanagement/arm-apimanagement/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/certificates/templateCertkv",
        "type": "Microsoft.ApiManagement/service/certificates",
        "name": "templateCertkv",
        "properties": {
          "subject": "CN=*.msitesting.net",
          "thumbprint": "EA**********************9AD690",
          "expirationDate": "2037-01-01T07:00:00Z",
          "keyVault": {
            "secretIdentifier": "https://rpbvtkeyvaultintegration.vault-int.azure-int.net/secrets/msitestingCert",
            "identityClientId": "ceaa6b06-c00f-43ef-99ac-f53d1fe876a0",
            "lastStatus": {
              "code": "Success",
              "timeStampUtc": "2020-09-22T00:24:53.3191468Z"
            }
          }
        }
      }
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/certificates/templateCertkv",
        "type": "Microsoft.ApiManagement/service/certificates",
        "name": "templateCertkv",
        "properties": {
          "subject": "CN=*.msitesting.net",
          "thumbprint": "EA**********************9AD690",
          "expirationDate": "2037-01-01T07:00:00Z",
          "keyVault": {
            "secretIdentifier": "https://rpbvtkeyvaultintegration.vault-int.azure-int.net/secrets/msitestingCert",
            "identityClientId": "ceaa6b06-c00f-43ef-99ac-f53d1fe876a0",
            "lastStatus": {
              "code": "Success",
              "timeStampUtc": "2020-09-22T00:24:53.3191468Z"
            }
          }
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about API Management service - Creates or updates the certificate being used for authentication with the backend.
errorCodes: []
