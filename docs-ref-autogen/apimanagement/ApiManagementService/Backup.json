{
  "swagger": "2.0",
  "info": {
    "version": "2017-03-01",
    "title": "ApiManagementClient",
    "description": "Use these REST APIs to manage Azure API Management deployment."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup": {
      "post": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_Backup",
        "description": "Creates a backup of the API Management service to the given Azure Storage Account. This is long running operation and could take several minutes to complete.",
        "x-ms-examples": {
          "ApiManagementCreateBackup": {
            "parameters": {
              "serviceName": "apimService1",
              "resourceGroupName": "rg1",
              "api-version": "2017-03-01",
              "subscriptionId": "subid",
              "parameters": {
                "storageAccount": "teststorageaccount",
                "accessKey": "**************************************************",
                "containerName": "backupContainer",
                "backupName": "apimService1backup_2017_03_19"
              }
            },
            "responses": {
              "202": {
                "headers": {
                  "location": "https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/operationresults/dGVjaGVkX01hbmFnZVJvbGVfNWRiNGI3Ng==?api-version=2017-03-01"
                }
              },
              "200": {
                "body": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1",
                  "name": "apimService1",
                  "type": "Microsoft.ApiManagement/service",
                  "tags": {
                    "UID": "52ed5986-717b-45b4-b17c-3df8db372cff"
                  },
                  "location": "East Asia",
                  "etag": "AAAAAAAXX6Y=",
                  "properties": {
                    "publisherEmail": "admin@live.com",
                    "publisherName": "Contoso",
                    "provisioningState": "Succeeded",
                    "targetProvisioningState": "",
                    "createdAtUtc": "2015-09-22T01:50:34.7921566Z",
                    "gatewayUrl": "https://apimService1.azure-api.net",
                    "portalUrl": "https://apimService1.portal.azure-api.net",
                    "managementApiUrl": "https://apimService1.management.azure-api.net",
                    "scmUrl": "https://apimService1.scm.azure-api.net",
                    "hostnameConfigurations": [],
                    "staticIps": [
                      "207.46.155.24"
                    ],
                    "virtualNetworkType": "None"
                  },
                  "sku": {
                    "name": "Premium",
                    "capacity": 1
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceBackupRestoreParameters"
            },
            "description": "Parameters supplied to the ApiManagementService_Backup operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully backed up the API Management service to the storage account.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          }
        },
        "x-ms-long-running-operation": true,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Backup"
      }
    }
  },
  "definitions": {
    "CertificateInformation": {
      "properties": {
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "thumbprint": {
          "type": "string",
          "description": "Thumbprint of the certificate."
        },
        "subject": {
          "type": "string",
          "description": "Subject of the certificate."
        }
      },
      "required": [
        "expiry",
        "thumbprint",
        "subject"
      ],
      "description": "SSL certificate information."
    },
    "CertificateConfiguration": {
      "properties": {
        "encodedCertificate": {
          "type": "string",
          "description": "Base64 Encoded certificate."
        },
        "certificatePassword": {
          "type": "string",
          "description": "Certificate Password."
        },
        "storeName": {
          "description": "The local certificate store location. Only Root and CertificateAuthority are valid locations.",
          "type": "string",
          "enum": [
            "CertificateAuthority",
            "Root"
          ]
        },
        "certificate": {
          "$ref": "#/definitions/CertificateInformation",
          "description": "Certificate information.",
          "readOnly": true
        }
      },
      "required": [
        "storeName"
      ],
      "description": "Certificate configuration which consist of non-trusted intermediates and root certificates."
    },
    "HostnameConfiguration": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Hostname type.",
          "enum": [
            "Proxy",
            "Portal",
            "Management",
            "Scm"
          ],
          "x-ms-enum": {
            "name": "HostnameType",
            "modelAsString": false
          }
        },
        "hostName": {
          "type": "string",
          "description": "Hostname to configure on the Api Management service."
        },
        "encodedCertificate": {
          "type": "string",
          "description": "Base64 Encoded certificate."
        },
        "certificatePassword": {
          "type": "string",
          "description": "Certificate Password."
        },
        "defaultSslBinding": {
          "type": "boolean",
          "description": "Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.",
          "default": false
        },
        "negotiateClientCertificate": {
          "type": "boolean",
          "description": "Specify true to always negotiate client certificate on the hostname. Default Value is false.",
          "default": false
        },
        "certificate": {
          "$ref": "#/definitions/CertificateInformation",
          "description": "Certificate information.",
          "readOnly": true
        }
      },
      "required": [
        "type",
        "hostName"
      ],
      "description": "Custom hostname configuration."
    },
    "VirtualNetworkConfiguration": {
      "properties": {
        "vnetid": {
          "readOnly": true,
          "type": "string",
          "description": "The virtual network ID. This is typically a GUID. Expect a null GUID by default."
        },
        "subnetname": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the subnet."
        },
        "subnetResourceId": {
          "type": "string",
          "pattern": "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$",
          "description": "The full resource ID of a subnet in a virtual network to deploy the API Management service in."
        }
      },
      "description": "Configuration of a virtual network to which API Management service is deployed."
    },
    "AdditionalLocation": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location name of the additional region among Azure Data center regions."
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementServiceSkuProperties",
          "description": "SKU properties of the API Management service."
        },
        "staticIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Static IP addresses of the location's virtual machines."
        },
        "virtualNetworkConfiguration": {
          "$ref": "#/definitions/VirtualNetworkConfiguration",
          "description": "Virtual network configuration for the location."
        }
      },
      "required": [
        "location",
        "sku"
      ],
      "description": "Description of an additional API Management resource location."
    },
    "ApiManagementServiceBackupRestoreParameters": {
      "properties": {
        "storageAccount": {
          "type": "string",
          "description": "Azure Cloud Storage account (used to place/retrieve the backup) name."
        },
        "accessKey": {
          "type": "string",
          "description": "Azure Cloud Storage account (used to place/retrieve the backup) access key."
        },
        "containerName": {
          "type": "string",
          "description": "Azure Cloud Storage blob container name used to place/retrieve the backup."
        },
        "backupName": {
          "type": "string",
          "description": "The name of the backup file to create."
        }
      },
      "required": [
        "storageAccount",
        "accessKey",
        "containerName",
        "backupName"
      ],
      "description": "Parameters supplied to the Backup/Restore of an API Management service operation."
    },
    "ApiManagementServiceProperties": {
      "properties": {
        "publisherEmail": {
          "type": "string",
          "description": "Publisher email.",
          "maxLength": 100
        },
        "publisherName": {
          "type": "string",
          "description": "Publisher name.",
          "maxLength": 100
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiManagementServiceBaseProperties"
        }
      ],
      "required": [
        "publisherEmail",
        "publisherName"
      ],
      "description": "Properties of an API Management service resource description."
    },
    "ApiManagementServiceUpdateProperties": {
      "properties": {
        "publisherEmail": {
          "type": "string",
          "description": "Publisher email.",
          "maxLength": 100
        },
        "publisherName": {
          "type": "string",
          "description": "Publisher name.",
          "maxLength": 100
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiManagementServiceBaseProperties"
        }
      ],
      "description": "Properties of an API Management service resource description."
    },
    "ApiManagementServiceBaseProperties": {
      "properties": {
        "notificationSenderEmail": {
          "type": "string",
          "description": "Email address from which the notification will be sent.",
          "maxLength": 100
        },
        "provisioningState": {
          "type": "string",
          "description": "The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.",
          "readOnly": true
        },
        "targetProvisioningState": {
          "type": "string",
          "description": "The provisioning state of the API Management service, which is targeted by the long running operation started on the service.",
          "readOnly": true
        },
        "createdAtUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
          "readOnly": true
        },
        "gatewayUrl": {
          "type": "string",
          "description": "Gateway URL of the API Management service.",
          "readOnly": true
        },
        "portalUrl": {
          "type": "string",
          "description": "Publisher portal endpoint Url of the API Management service.",
          "readOnly": true
        },
        "managementApiUrl": {
          "type": "string",
          "description": "Management API endpoint URL of the API Management service.",
          "readOnly": true
        },
        "scmUrl": {
          "type": "string",
          "description": "SCM endpoint URL of the API Management service.",
          "readOnly": true
        },
        "hostnameConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostnameConfiguration"
          },
          "description": "Custom hostname configuration of the API Management service."
        },
        "staticIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Static IP addresses of the API Management service virtual machines. Available only for Standard and Premium SKU."
        },
        "virtualNetworkConfiguration": {
          "$ref": "#/definitions/VirtualNetworkConfiguration",
          "description": "Virtual network configuration of the API Management service."
        },
        "additionalLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalLocation"
          },
          "description": "Additional datacenter locations of the API Management service."
        },
        "customProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom properties of the API Management service. Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2). Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1 and setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service."
        },
        "certificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificateConfiguration"
          },
          "description": "List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10."
        },
        "virtualNetworkType": {
          "type": "string",
          "description": "The type of VPN in which API Managemet service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.",
          "default": "None",
          "enum": [
            "None",
            "External",
            "Internal"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkType",
            "modelAsString": false
          }
        }
      },
      "description": "Base Properties of an API Management service resource description."
    },
    "ApiManagementServiceSkuProperties": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Sku.",
          "externalDocs": {
            "url": "https://azure.microsoft.com/en-us/pricing/details/api-management/"
          },
          "enum": [
            "Developer",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuType",
            "modelAsString": false
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity of the SKU (number of deployed units of the SKU). The default value is 1.",
          "default": 1
        }
      },
      "required": [
        "name"
      ],
      "description": "API Management service resource SKU properties."
    },
    "ApiManagementServiceResource": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiManagementServiceProperties",
          "description": "Properties of the API Management service."
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementServiceSkuProperties",
          "description": "SKU properties of the API Management service."
        },
        "location": {
          "type": "string",
          "description": "Resource location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApimResource"
        }
      ],
      "required": [
        "location",
        "sku",
        "properties"
      ],
      "description": "A single API Management service resource in List or Get response."
    },
    "ApimResource": {
      "description": "The Resource definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type for API Management resource is set to Microsoft.ApiManagement."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "x-ms-azure-resource": true
    },
    "ApiManagementServiceUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiManagementServiceUpdateProperties",
          "description": "Properties of the API Management service."
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementServiceSkuProperties",
          "description": "SKU properties of the API Management service."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApimResource"
        }
      ],
      "description": "Parameter supplied to Update Api Management Service."
    },
    "ApiManagementServiceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiManagementServiceResource"
          },
          "description": "Result of the List API Management services operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of API Management services."
        }
      },
      "required": [
        "value"
      ],
      "description": "The response of the List API Management services operation."
    },
    "ApiManagementServiceGetSsoTokenResult": {
      "properties": {
        "redirectUri": {
          "type": "string",
          "description": "Redirect URL to the Publisher Portal containing the SSO token."
        }
      },
      "description": "The response of the GetSsoToken operation."
    },
    "ApiManagementServiceCheckNameAvailabilityParameters": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name to check for availability."
        }
      },
      "required": [
        "name"
      ],
      "description": "Parameters supplied to the CheckNameAvailability operation."
    },
    "ApiManagementServiceNameAvailabilityResult": {
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "True if the name is available and can be used to create a new API Management service; otherwise false.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that <resourceName> is already in use, and direct them to select a different name.",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "description": "Invalid indicates the name provided does not match the resource provider’s naming requirements (incorrect length, unsupported characters, etc.)  AlreadyExists indicates that the name is already in use and is therefore unavailable.",
          "enum": [
            "Valid",
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "NameAvailabilityReason",
            "modelAsString": false
          }
        }
      },
      "description": "Response of the CheckNameAvailability operation."
    },
    "ApiManagementServiceApplyNetworkConfigurationParameters": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Location of the Api Management service to update for a multi-region service. For a service deployed in a single region, this parameter is not required."
        }
      },
      "description": "Parameter supplied to the Apply Network configuration operation."
    },
    "Operation": {
      "description": "REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "The object that describes the operation.",
          "properties": {
            "provider": {
              "description": "Friendly name of the resource provider",
              "type": "string"
            },
            "operation": {
              "description": "Operation type: read, write, delete, listKeys/action, etc.",
              "type": "string"
            },
            "resource": {
              "description": "Resource type on which the operation is performed.",
              "type": "string"
            },
            "description": {
              "description": "Friendly name of the operation",
              "type": "string"
            }
          }
        }
      }
    },
    "OperationListResult": {
      "description": "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of operations supported by the resource provider."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Api Management Service",
  "x-internal-split-type": "Operation"
}