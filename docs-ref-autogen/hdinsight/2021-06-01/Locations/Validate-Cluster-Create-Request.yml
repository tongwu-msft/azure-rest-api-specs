### YamlMime:RESTOperation
uid: management.azure.com.hdinsight.2021-06-01.locations.validateclustercreaterequest
name: Validate Cluster Create Request
service: HDInsight
groupName: Locations
apiVersion: 2021-06-01
summary: Validate the cluster create request spec is valid or not.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.HDInsight/locations/{location}/validateCreateRequest?api-version=2021-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: location
  in: path
  isRequired: true
  description: The Azure location (region) for which to make the request.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The HDInsight client API Version.
  types:
  - uid: string
responses:
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
- name: 200 OK
  description: OK response definition.
  types:
  - uid: ClusterCreateValidationResult
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    description: The cluster name.
    types:
    - uid: string
  - name: type
    in: body
    description: The resource type.
    types:
    - uid: string
  - name: tenantId
    in: body
    description: The tenant id.
    types:
    - uid: string
  - name: fetchAaddsResource
    in: body
    description: This indicates whether fetch Aadds resource or not.
    types:
    - uid: boolean
  - name: location
    in: body
    description: The location of the cluster.
    types:
    - uid: string
  - name: tags
    in: body
    description: The resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: zones
    in: body
    description: The availability zones.
    types:
    - uid: string
      isArray: true
  - name: properties
    in: body
    description: The cluster create parameters.
    types:
    - uid: ClusterCreateProperties
  - name: identity
    in: body
    description: The identity of the cluster, if configured.
    types:
    - uid: ClusterIdentity
requestHeader: []
definitions:
- name: ClusterCreateProperties
  description: The cluster create parameters.
  kind: object
  properties:
  - name: clusterVersion
    description: The version of the cluster.
    types:
    - uid: string
  - name: osType
    description: The type of operating system.
    types:
    - uid: OSType
  - name: tier
    description: The cluster tier.
    types:
    - uid: Tier
    defaultValue: Standard
  - name: clusterDefinition
    description: The cluster definition.
    types:
    - uid: ClusterDefinition
  - name: kafkaRestProperties
    description: The cluster kafka rest proxy configuration.
    types:
    - uid: KafkaRestProperties
  - name: securityProfile
    description: The security profile.
    types:
    - uid: SecurityProfile
  - name: computeProfile
    description: The compute profile.
    types:
    - uid: ComputeProfile
  - name: storageProfile
    description: The storage profile.
    types:
    - uid: StorageProfile
  - name: diskEncryptionProperties
    description: The disk encryption properties.
    types:
    - uid: DiskEncryptionProperties
  - name: encryptionInTransitProperties
    description: The encryption-in-transit properties.
    types:
    - uid: EncryptionInTransitProperties
  - name: minSupportedTlsVersion
    description: The minimal supported tls version.
    types:
    - uid: string
  - name: networkProperties
    description: The network properties.
    types:
    - uid: NetworkProperties
  - name: computeIsolationProperties
    description: The compute isolation properties.
    types:
    - uid: ComputeIsolationProperties
  - name: privateLinkConfigurations
    description: The private link configurations.
    types:
    - uid: PrivateLinkConfiguration
      isArray: true
- name: ClusterIdentity
  description: Identity for the cluster.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal id of cluster identity. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant id associated with the cluster. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: type
    description: The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities.
    types:
    - uid: ResourceIdentityType
  - name: userAssignedIdentities
    description: "The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: UserAssignedIdentity
- name: ErrorResponse
  description: Describes the format of Error response.
  kind: object
  properties:
  - name: code
    description: Error code
    types:
    - uid: string
  - name: message
    description: Error message indicating why the operation failed.
    types:
    - uid: string
- name: ClusterCreateValidationResult
  description: The response of cluster create request validation.
  kind: object
  properties:
  - name: validationErrors
    description: The validation errors.
    types:
    - uid: ValidationErrorInfo
      isArray: true
  - name: validationWarnings
    description: The validation warnings.
    types:
    - uid: ValidationErrorInfo
      isArray: true
  - name: estimatedCreationDuration
    description: The estimated creation duration.
    types:
    - uid: string
  - name: aaddsResourcesDetails
    description: The Azure active directory domain service resource details.
    types:
    - uid: AaddsResourceDetails
      isArray: true
- name: ClusterCreateRequestValidationParameters
  description: The cluster create request specification.
  kind: object
  properties:
  - name: name
    description: The cluster name.
    types:
    - uid: string
  - name: type
    description: The resource type.
    types:
    - uid: string
  - name: tenantId
    description: The tenant id.
    types:
    - uid: string
  - name: fetchAaddsResource
    description: This indicates whether fetch Aadds resource or not.
    types:
    - uid: boolean
  - name: location
    description: The location of the cluster.
    types:
    - uid: string
  - name: tags
    description: The resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: zones
    description: The availability zones.
    types:
    - uid: string
      isArray: true
  - name: properties
    description: The cluster create parameters.
    types:
    - uid: ClusterCreateProperties
  - name: identity
    description: The identity of the cluster, if configured.
    types:
    - uid: ClusterIdentity
- name: OSType
  description: The type of operating system.
  kind: enum
  properties:
  - name: Windows
    types:
    - uid: string
  - name: Linux
    types:
    - uid: string
- name: Tier
  description: The managed disk billing tier, Standard or Premium.
  kind: enum
  properties:
  - name: Standard
    types:
    - uid: string
  - name: Premium
    types:
    - uid: string
- name: ClusterDefinition
  description: The cluster definition.
  kind: object
  properties:
  - name: blueprint
    description: The link to the blueprint.
    types:
    - uid: string
  - name: kind
    description: The type of cluster.
    types:
    - uid: string
  - name: componentVersion
    description: The versions of different services in the cluster.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: configurations
    description: The cluster configurations.
    types:
    - uid: object
- name: KafkaRestProperties
  description: The kafka rest proxy configuration which contains AAD security group information.
  kind: object
  properties:
  - name: clientGroupInfo
    description: The information of AAD security group.
    types:
    - uid: ClientGroupInfo
  - name: configurationOverride
    description: The configurations that need to be overriden.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: SecurityProfile
  description: The security profile which contains Ssh public key for the HDInsight cluster.
  kind: object
  properties:
  - name: directoryType
    description: The directory type.
    types:
    - uid: DirectoryType
  - name: domain
    description: The organization's active directory domain.
    types:
    - uid: string
  - name: organizationalUnitDN
    description: The organizational unit within the Active Directory to place the cluster and service accounts.
    types:
    - uid: string
  - name: ldapsUrls
    description: The LDAPS protocol URLs to communicate with the Active Directory.
    types:
    - uid: string
      isArray: true
  - name: domainUsername
    description: The domain user account that will have admin privileges on the cluster.
    types:
    - uid: string
  - name: domainUserPassword
    description: The domain admin password.
    types:
    - uid: string
  - name: clusterUsersGroupDNs
    description: Optional. The Distinguished Names for cluster user groups
    types:
    - uid: string
      isArray: true
  - name: aaddsResourceId
    description: The resource ID of the user's Azure Active Directory Domain Service.
    types:
    - uid: string
  - name: msiResourceId
    description: User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
    types:
    - uid: string
- name: ComputeProfile
  description: Describes the compute profile.
  kind: object
  properties:
  - name: roles
    description: The list of roles in the cluster.
    types:
    - uid: Role
      isArray: true
- name: StorageProfile
  description: The storage profile.
  kind: object
  properties:
  - name: storageaccounts
    description: The list of storage accounts in the cluster.
    types:
    - uid: StorageAccount
      isArray: true
- name: DiskEncryptionProperties
  description: The disk encryption properties
  kind: object
  properties:
  - name: vaultUri
    description: Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
    types:
    - uid: string
  - name: keyName
    description: Key name that is used for enabling disk encryption.
    types:
    - uid: string
  - name: keyVersion
    description: Specific key version that is used for enabling disk encryption.
    types:
    - uid: string
  - name: encryptionAlgorithm
    description: Algorithm identifier for encryption, default RSA-OAEP.
    types:
    - uid: JsonWebKeyEncryptionAlgorithm
  - name: msiResourceId
    description: Resource ID of Managed Identity that is used to access the key vault.
    types:
    - uid: string
  - name: encryptionAtHost
    description: Indicates whether or not resource disk encryption is enabled.
    types:
    - uid: boolean
    defaultValue: false
- name: EncryptionInTransitProperties
  description: The encryption-in-transit properties.
  kind: object
  properties:
  - name: isEncryptionInTransitEnabled
    description: Indicates whether or not inter cluster node communication is encrypted in transit.
    types:
    - uid: boolean
    defaultValue: false
- name: NetworkProperties
  description: The network properties.
  kind: object
  properties:
  - name: resourceProviderConnection
    description: The direction for the resource provider connection.
    types:
    - uid: ResourceProviderConnection
  - name: privateLink
    description: Indicates whether or not private link is enabled.
    types:
    - uid: PrivateLink
- name: ComputeIsolationProperties
  description: The compute isolation properties.
  kind: object
  properties:
  - name: enableComputeIsolation
    description: The flag indicates whether enable compute isolation or not.
    types:
    - uid: boolean
    defaultValue: false
  - name: hostSku
    description: The host sku.
    types:
    - uid: string
- name: PrivateLinkConfiguration
  description: The private link configuration.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The private link configuration id.
    types:
    - uid: string
  - name: name
    description: The name of private link configuration.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the private link configuration.
    types:
    - uid: string
  - name: properties.groupId
    description: The HDInsight private linkable sub-resource name to apply the private link configuration to. For example, 'headnode', 'gateway', 'edgenode'.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The private link configuration provisioning state, which only appears in the response.
    types:
    - uid: PrivateLinkConfigurationProvisioningState
  - name: properties.ipConfigurations
    description: The IP configurations for the private link service.
    types:
    - uid: IPConfiguration
      isArray: true
- name: ResourceIdentityType
  description: The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
  - name: UserAssigned
    types:
    - uid: string
  - name: SystemAssigned, UserAssigned
    types:
    - uid: string
  - name: None
    types:
    - uid: string
- name: UserAssignedIdentity
  description: The User Assigned Identity
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal id of user assigned identity.
    types:
    - uid: string
  - name: clientId
    isReadyOnly: true
    description: The client id of user assigned identity.
    types:
    - uid: string
  - name: tenantId
    description: The tenant id of user assigned identity.
    types:
    - uid: string
- name: ValidationErrorInfo
  description: The validation error information.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
  - name: errorResource
    description: The error resource.
    types:
    - uid: string
  - name: messageArguments
    description: The message arguments
    types:
    - uid: string
      isArray: true
- name: AaddsResourceDetails
  description: The Azure active directory domain service resource details.
  kind: object
  properties:
  - name: domainName
    description: The Azure active directory domain service name.
    types:
    - uid: string
  - name: initialSyncComplete
    description: This indicates whether initial sync complete or not.
    types:
    - uid: boolean
  - name: ldapsEnabled
    description: This indicates whether enable ldaps or not.
    types:
    - uid: boolean
  - name: ldapsPublicCertificateInBase64
    description: The base 64 format string of public ldap certificate.
    types:
    - uid: string
  - name: resourceId
    description: The resource id of azure active directory domain service.
    types:
    - uid: string
  - name: subnetId
    description: The subnet resource id.
    types:
    - uid: string
  - name: tenantId
    description: The tenant id of azure active directory domain service .
    types:
    - uid: string
- name: ClientGroupInfo
  description: The information of AAD security group.
  kind: object
  properties:
  - name: groupName
    description: The AAD security group name.
    types:
    - uid: string
  - name: groupId
    description: The AAD security group id.
    types:
    - uid: string
- name: DirectoryType
  description: The directory type.
  kind: enum
  properties:
  - name: ActiveDirectory
    types:
    - uid: string
- name: Role
  description: Describes a role on the cluster.
  kind: object
  properties:
  - name: name
    description: The name of the role.
    types:
    - uid: string
  - name: minInstanceCount
    description: The minimum instance count of the cluster.
    types:
    - uid: integer
  - name: targetInstanceCount
    description: The instance count of the cluster.
    types:
    - uid: integer
  - name: VMGroupName
    description: The name of the virtual machine group.
    types:
    - uid: string
  - name: autoscale
    description: The autoscale configurations.
    types:
    - uid: Autoscale
  - name: hardwareProfile
    description: The hardware profile.
    types:
    - uid: HardwareProfile
  - name: osProfile
    description: The operating system profile.
    types:
    - uid: OsProfile
  - name: virtualNetworkProfile
    description: The virtual network profile.
    types:
    - uid: VirtualNetworkProfile
  - name: dataDisksGroups
    description: The data disks groups for the role.
    types:
    - uid: DataDisksGroups
      isArray: true
  - name: scriptActions
    description: The list of script actions on the role.
    types:
    - uid: ScriptAction
      isArray: true
  - name: encryptDataDisks
    description: Indicates whether encrypt the data disks.
    types:
    - uid: boolean
    defaultValue: false
- name: StorageAccount
  description: The storage Account.
  kind: object
  properties:
  - name: name
    description: The name of the storage account.
    types:
    - uid: string
  - name: isDefault
    description: Whether or not the storage account is the default storage account.
    types:
    - uid: boolean
  - name: container
    description: The container in the storage account, only to be specified for WASB storage accounts.
    types:
    - uid: string
  - name: fileSystem
    description: The filesystem, only to be specified for Azure Data Lake Storage Gen 2.
    types:
    - uid: string
  - name: key
    description: The storage account access key.
    types:
    - uid: string
  - name: resourceId
    description: The resource ID of storage account, only to be specified for Azure Data Lake Storage Gen 2.
    types:
    - uid: string
  - name: msiResourceId
    description: The managed identity (MSI) that is allowed to access the storage account, only to be specified for Azure Data Lake Storage Gen 2.
    types:
    - uid: string
  - name: saskey
    description: The shared access signature key.
    types:
    - uid: string
  - name: fileshare
    description: The file share name.
    types:
    - uid: string
- name: JsonWebKeyEncryptionAlgorithm
  description: Algorithm identifier for encryption, default RSA-OAEP.
  kind: enum
  properties:
  - name: RSA-OAEP
    types:
    - uid: string
  - name: RSA-OAEP-256
    types:
    - uid: string
  - name: RSA1_5
    types:
    - uid: string
- name: ResourceProviderConnection
  description: The direction for the resource provider connection.
  kind: enum
  properties:
  - name: Inbound
    types:
    - uid: string
  - name: Outbound
    types:
    - uid: string
- name: PrivateLink
  description: Indicates whether or not private link is enabled.
  kind: enum
  properties:
  - name: Disabled
    types:
    - uid: string
  - name: Enabled
    types:
    - uid: string
- name: PrivateLinkConfigurationProvisioningState
  description: The private link configuration provisioning state, which only appears in the response.
  kind: enum
  properties:
  - name: InProgress
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
- name: IPConfiguration
  description: The ip configurations for the private link service.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The private link IP configuration id.
    types:
    - uid: string
  - name: name
    description: The name of private link IP configuration.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the private link IP configuration.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The private link configuration provisioning state, which only appears in the response.
    types:
    - uid: PrivateLinkConfigurationProvisioningState
  - name: properties.primary
    description: Indicates whether this IP configuration is primary for the corresponding NIC.
    types:
    - uid: boolean
  - name: properties.privateIPAddress
    description: The IP address.
    types:
    - uid: string
  - name: properties.privateIPAllocationMethod
    description: The method that private IP address is allocated.
    types:
    - uid: PrivateIPAllocationMethod
  - name: properties.subnet
    description: The subnet resource id.
    types:
    - uid: ResourceId
- name: Autoscale
  description: The autoscale request parameters
  kind: object
  properties:
  - name: capacity
    description: Parameters for load-based autoscale
    types:
    - uid: AutoscaleCapacity
  - name: recurrence
    description: Parameters for schedule-based autoscale
    types:
    - uid: AutoscaleRecurrence
- name: HardwareProfile
  description: The hardware profile.
  kind: object
  properties:
  - name: vmSize
    description: The size of the VM
    types:
    - uid: string
- name: OsProfile
  description: The Linux operation systems profile.
  kind: object
  properties:
  - name: linuxOperatingSystemProfile
    description: The Linux OS profile.
    types:
    - uid: LinuxOperatingSystemProfile
- name: VirtualNetworkProfile
  description: The virtual network properties.
  kind: object
  properties:
  - name: id
    description: The ID of the virtual network.
    types:
    - uid: string
  - name: subnet
    description: The name of the subnet.
    types:
    - uid: string
- name: DataDisksGroups
  description: The data disks groups for the role.
  kind: object
  properties:
  - name: disksPerNode
    description: The number of disks per node.
    types:
    - uid: integer
  - name: storageAccountType
    isReadyOnly: true
    description: ReadOnly. The storage account type. Do not set this value.
    types:
    - uid: string
  - name: diskSizeGB
    isReadyOnly: true
    description: ReadOnly. The DiskSize in GB. Do not set this value.
    types:
    - uid: integer
- name: ScriptAction
  description: Describes a script action on role on the cluster.
  kind: object
  properties:
  - name: name
    description: The name of the script action.
    types:
    - uid: string
  - name: uri
    description: The URI to the script.
    types:
    - uid: string
  - name: parameters
    description: The parameters for the script provided.
    types:
    - uid: string
- name: PrivateIPAllocationMethod
  description: The method that private IP address is allocated.
  kind: enum
  properties:
  - name: dynamic
    types:
    - uid: string
  - name: static
    types:
    - uid: string
- name: ResourceId
  description: The azure resource id.
  kind: object
  properties:
  - name: id
    description: The azure resource id.
    types:
    - uid: string
- name: AutoscaleCapacity
  description: The load-based autoscale request parameters
  kind: object
  properties:
  - name: minInstanceCount
    description: The minimum instance count of the cluster
    types:
    - uid: integer
  - name: maxInstanceCount
    description: The maximum instance count of the cluster
    types:
    - uid: integer
- name: AutoscaleRecurrence
  description: Schedule-based autoscale request parameters
  kind: object
  properties:
  - name: timeZone
    description: The time zone for the autoscale schedule times
    types:
    - uid: string
  - name: schedule
    description: Array of schedule-based autoscale rules
    types:
    - uid: AutoscaleSchedule
      isArray: true
- name: LinuxOperatingSystemProfile
  description: The ssh username, password, and ssh public key.
  kind: object
  properties:
  - name: username
    description: The username.
    types:
    - uid: string
  - name: password
    description: The password.
    types:
    - uid: string
  - name: sshProfile
    description: The SSH profile.
    types:
    - uid: SshProfile
- name: AutoscaleSchedule
  description: Parameters for a schedule-based autoscale rule, consisting of an array of days + a time and capacity
  kind: object
  properties:
  - name: days
    description: Days of the week for a schedule-based autoscale rule
    types:
    - uid: string
      isArray: true
  - name: timeAndCapacity
    description: Time and capacity for a schedule-based autoscale rule
    types:
    - uid: AutoscaleTimeAndCapacity
- name: SshProfile
  description: The list of SSH public keys.
  kind: object
  properties:
  - name: publicKeys
    description: The list of SSH public keys.
    types:
    - uid: SshPublicKey
      isArray: true
- name: AutoscaleTimeAndCapacity
  description: Time and capacity request parameters
  kind: object
  properties:
  - name: time
    description: 24-hour time in the form xx:xx
    types:
    - uid: string
  - name: minInstanceCount
    description: The minimum instance count of the cluster
    types:
    - uid: integer
  - name: maxInstanceCount
    description: The maximum instance count of the cluster
    types:
    - uid: integer
- name: SshPublicKey
  description: The SSH public key for the cluster nodes.
  kind: object
  properties:
  - name: certificateData
    description: The certificate for SSH.
    types:
    - uid: string
examples:
- name: Get the subscription usages for specific location
  request:
    uri: POST https://management.azure.com/subscriptions/subid/providers/Microsoft.HDInsight/locations/southcentralus/validateCreateRequest?api-version=2021-06-01
    body: >-
      {
        "name": "testclustername",
        "type": "Microsoft.HDInsight/clusters",
        "location": "southcentralus",
        "tags": {},
        "properties": {
          "clusterVersion": "4.0",
          "osType": "Linux",
          "tier": "Standard",
          "clusterDefinition": {
            "kind": "spark",
            "componentVersion": {
              "Spark": "2.4"
            },
            "configurations": {
              "gateway": {
                "restAuthCredential.isEnabled": true,
                "restAuthCredential.username": "admin",
                "restAuthCredential.password": "**********"
              }
            }
          },
          "storageProfile": {
            "storageaccounts": [
              {
                "name": "storagename.blob.core.windows.net",
                "isDefault": true,
                "container": "contianername",
                "key": "*******",
                "resourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/storagename"
              }
            ]
          },
          "computeProfile": {
            "roles": [
              {
                "autoscale": null,
                "name": "headnode",
                "minInstanceCount": 1,
                "targetInstanceCount": 2,
                "hardwareProfile": {
                  "vmSize": "Standard_E8_V3"
                },
                "osProfile": {
                  "linuxOperatingSystemProfile": {
                    "username": "sshuser",
                    "password": "********"
                  }
                },
                "virtualNetworkProfile": null,
                "scriptActions": [],
                "dataDisksGroups": null
              },
              {
                "autoscale": null,
                "name": "workernode",
                "targetInstanceCount": 4,
                "hardwareProfile": {
                  "vmSize": "Standard_E8_V3"
                },
                "osProfile": {
                  "linuxOperatingSystemProfile": {
                    "username": "sshuser",
                    "password": "********"
                  }
                },
                "virtualNetworkProfile": null,
                "scriptActions": [],
                "dataDisksGroups": null
              },
              {
                "autoscale": null,
                "name": "zookeepernode",
                "minInstanceCount": 1,
                "targetInstanceCount": 3,
                "hardwareProfile": {
                  "vmSize": "Standard_D13_V2"
                },
                "osProfile": {
                  "linuxOperatingSystemProfile": {
                    "username": "sshuser",
                    "password": "**********"
                  }
                },
                "virtualNetworkProfile": null,
                "scriptActions": [],
                "dataDisksGroups": null
              }
            ]
          },
          "minSupportedTlsVersion": "1.2"
        },
        "fetchAaddsResource": false,
        "tenantId": "00000000-0000-0000-0000-000000000000"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/providers/Microsoft.HDInsight/locations/southcentralus/validateCreateRequest?api-version=2021-06-01

      {
        "name": "testclustername",
        "type": "Microsoft.HDInsight/clusters",
        "location": "southcentralus",
        "tags": {},
        "properties": {
          "clusterVersion": "4.0",
          "osType": "Linux",
          "tier": "Standard",
          "clusterDefinition": {
            "kind": "spark",
            "componentVersion": {
              "Spark": "2.4"
            },
            "configurations": {
              "gateway": {
                "restAuthCredential.isEnabled": true,
                "restAuthCredential.username": "admin",
                "restAuthCredential.password": "**********"
              }
            }
          },
          "storageProfile": {
            "storageaccounts": [
              {
                "name": "storagename.blob.core.windows.net",
                "isDefault": true,
                "container": "contianername",
                "key": "*******",
                "resourceId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/storagename"
              }
            ]
          },
          "computeProfile": {
            "roles": [
              {
                "autoscale": null,
                "name": "headnode",
                "minInstanceCount": 1,
                "targetInstanceCount": 2,
                "hardwareProfile": {
                  "vmSize": "Standard_E8_V3"
                },
                "osProfile": {
                  "linuxOperatingSystemProfile": {
                    "username": "sshuser",
                    "password": "********"
                  }
                },
                "virtualNetworkProfile": null,
                "scriptActions": [],
                "dataDisksGroups": null
              },
              {
                "autoscale": null,
                "name": "workernode",
                "targetInstanceCount": 4,
                "hardwareProfile": {
                  "vmSize": "Standard_E8_V3"
                },
                "osProfile": {
                  "linuxOperatingSystemProfile": {
                    "username": "sshuser",
                    "password": "********"
                  }
                },
                "virtualNetworkProfile": null,
                "scriptActions": [],
                "dataDisksGroups": null
              },
              {
                "autoscale": null,
                "name": "zookeepernode",
                "minInstanceCount": 1,
                "targetInstanceCount": 3,
                "hardwareProfile": {
                  "vmSize": "Standard_D13_V2"
                },
                "osProfile": {
                  "linuxOperatingSystemProfile": {
                    "username": "sshuser",
                    "password": "**********"
                  }
                },
                "virtualNetworkProfile": null,
                "scriptActions": [],
                "dataDisksGroups": null
              }
            ]
          },
          "minSupportedTlsVersion": "1.2"
        },
        "fetchAaddsResource": false,
        "tenantId": "00000000-0000-0000-0000-000000000000"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.serializer.SerializerFactory;
      import com.azure.core.util.Context;
      import com.azure.core.util.serializer.SerializerEncoding;
      import com.azure.resourcemanager.hdinsight.models.ClusterCreateProperties;
      import com.azure.resourcemanager.hdinsight.models.ClusterCreateRequestValidationParameters;
      import com.azure.resourcemanager.hdinsight.models.ClusterDefinition;
      import com.azure.resourcemanager.hdinsight.models.ComputeProfile;
      import com.azure.resourcemanager.hdinsight.models.HardwareProfile;
      import com.azure.resourcemanager.hdinsight.models.LinuxOperatingSystemProfile;
      import com.azure.resourcemanager.hdinsight.models.OSType;
      import com.azure.resourcemanager.hdinsight.models.OsProfile;
      import com.azure.resourcemanager.hdinsight.models.Role;
      import com.azure.resourcemanager.hdinsight.models.StorageAccount;
      import com.azure.resourcemanager.hdinsight.models.StorageProfile;
      import com.azure.resourcemanager.hdinsight.models.Tier;
      import java.io.IOException;
      import java.util.Arrays;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for Locations ValidateClusterCreateRequest. */
      public final class Main {
          /*
           * x-ms-original-file: specification/hdinsight/resource-manager/Microsoft.HDInsight/stable/2021-06-01/examples/HDI_Locations_ValidateClusterCreateRequest.json
           */
          /**
           * Sample code: Get the subscription usages for specific location.
           *
           * @param manager Entry point to HDInsightManager.
           */
          public static void getTheSubscriptionUsagesForSpecificLocation(
              com.azure.resourcemanager.hdinsight.HDInsightManager manager) throws IOException {
              manager
                  .locations()
                  .validateClusterCreateRequestWithResponse(
                      "southcentralus",
                      new ClusterCreateRequestValidationParameters()
                          .withLocation("southcentralus")
                          .withTags(mapOf())
                          .withProperties(
                              new ClusterCreateProperties()
                                  .withClusterVersion("4.0")
                                  .withOsType(OSType.LINUX)
                                  .withTier(Tier.STANDARD)
                                  .withClusterDefinition(
                                      new ClusterDefinition()
                                          .withKind("spark")
                                          .withComponentVersion(mapOf("Spark", "2.4"))
                                          .withConfigurations(
                                              SerializerFactory
                                                  .createDefaultManagementSerializerAdapter()
                                                  .deserialize(
                                                      "{\"gateway\":{\"restAuthCredential.isEnabled\":true,\"restAuthCredential.password\":\"**********\",\"restAuthCredential.username\":\"admin\"}}",
                                                      Object.class,
                                                      SerializerEncoding.JSON)))
                                  .withComputeProfile(
                                      new ComputeProfile()
                                          .withRoles(
                                              Arrays
                                                  .asList(
                                                      new Role()
                                                          .withName("headnode")
                                                          .withMinInstanceCount(1)
                                                          .withTargetInstanceCount(2)
                                                          .withHardwareProfile(
                                                              new HardwareProfile().withVmSize("Standard_E8_V3"))
                                                          .withOsProfile(
                                                              new OsProfile()
                                                                  .withLinuxOperatingSystemProfile(
                                                                      new LinuxOperatingSystemProfile()
                                                                          .withUsername("sshuser")
                                                                          .withPassword("********")))
                                                          .withScriptActions(Arrays.asList()),
                                                      new Role()
                                                          .withName("workernode")
                                                          .withTargetInstanceCount(4)
                                                          .withHardwareProfile(
                                                              new HardwareProfile().withVmSize("Standard_E8_V3"))
                                                          .withOsProfile(
                                                              new OsProfile()
                                                                  .withLinuxOperatingSystemProfile(
                                                                      new LinuxOperatingSystemProfile()
                                                                          .withUsername("sshuser")
                                                                          .withPassword("********")))
                                                          .withScriptActions(Arrays.asList()),
                                                      new Role()
                                                          .withName("zookeepernode")
                                                          .withMinInstanceCount(1)
                                                          .withTargetInstanceCount(3)
                                                          .withHardwareProfile(
                                                              new HardwareProfile().withVmSize("Standard_D13_V2"))
                                                          .withOsProfile(
                                                              new OsProfile()
                                                                  .withLinuxOperatingSystemProfile(
                                                                      new LinuxOperatingSystemProfile()
                                                                          .withUsername("sshuser")
                                                                          .withPassword("**********")))
                                                          .withScriptActions(Arrays.asList()))))
                                  .withStorageProfile(
                                      new StorageProfile()
                                          .withStorageaccounts(
                                              Arrays
                                                  .asList(
                                                      new StorageAccount()
                                                          .withName("storagename.blob.core.windows.net")
                                                          .withIsDefault(true)
                                                          .withContainer("contianername")
                                                          .withKey("*******")
                                                          .withResourceId(
                                                              "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/storagename"))))
                                  .withMinSupportedTlsVersion("1.2"))
                          .withName("testclustername")
                          .withType("Microsoft.HDInsight/clusters")
                          .withTenantId("00000000-0000-0000-0000-000000000000")
                          .withFetchAaddsResource(false),
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-hdinsight_1.0.0-beta.5/sdk/hdinsight/azure-resourcemanager-hdinsight/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armhdinsight_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/hdinsight/armhdinsight"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/hdinsight/resource-manager/Microsoft.HDInsight/stable/2021-06-01/examples/HDI_Locations_ValidateClusterCreateRequest.json
      func ExampleLocationsClient_ValidateClusterCreateRequest() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armhdinsight.NewLocationsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.ValidateClusterCreateRequest(ctx,
      		"southcentralus",
      		armhdinsight.ClusterCreateRequestValidationParameters{
      			Location: to.Ptr("southcentralus"),
      			Properties: &armhdinsight.ClusterCreateProperties{
      				ClusterDefinition: &armhdinsight.ClusterDefinition{
      					ComponentVersion: map[string]*string{
      						"Spark": to.Ptr("2.4"),
      					},
      					Configurations: map[string]interface{}{
      						"gateway": map[string]interface{}{
      							"restAuthCredential.isEnabled": true,
      							"restAuthCredential.password":  "**********",
      							"restAuthCredential.username":  "admin",
      						},
      					},
      					Kind: to.Ptr("spark"),
      				},
      				ClusterVersion: to.Ptr("4.0"),
      				ComputeProfile: &armhdinsight.ComputeProfile{
      					Roles: []*armhdinsight.Role{
      						{
      							Name: to.Ptr("headnode"),
      							HardwareProfile: &armhdinsight.HardwareProfile{
      								VMSize: to.Ptr("Standard_E8_V3"),
      							},
      							MinInstanceCount: to.Ptr[int32](1),
      							OSProfile: &armhdinsight.OsProfile{
      								LinuxOperatingSystemProfile: &armhdinsight.LinuxOperatingSystemProfile{
      									Password: to.Ptr("********"),
      									Username: to.Ptr("sshuser"),
      								},
      							},
      							ScriptActions:       []*armhdinsight.ScriptAction{},
      							TargetInstanceCount: to.Ptr[int32](2),
      						},
      						{
      							Name: to.Ptr("workernode"),
      							HardwareProfile: &armhdinsight.HardwareProfile{
      								VMSize: to.Ptr("Standard_E8_V3"),
      							},
      							OSProfile: &armhdinsight.OsProfile{
      								LinuxOperatingSystemProfile: &armhdinsight.LinuxOperatingSystemProfile{
      									Password: to.Ptr("********"),
      									Username: to.Ptr("sshuser"),
      								},
      							},
      							ScriptActions:       []*armhdinsight.ScriptAction{},
      							TargetInstanceCount: to.Ptr[int32](4),
      						},
      						{
      							Name: to.Ptr("zookeepernode"),
      							HardwareProfile: &armhdinsight.HardwareProfile{
      								VMSize: to.Ptr("Standard_D13_V2"),
      							},
      							MinInstanceCount: to.Ptr[int32](1),
      							OSProfile: &armhdinsight.OsProfile{
      								LinuxOperatingSystemProfile: &armhdinsight.LinuxOperatingSystemProfile{
      									Password: to.Ptr("**********"),
      									Username: to.Ptr("sshuser"),
      								},
      							},
      							ScriptActions:       []*armhdinsight.ScriptAction{},
      							TargetInstanceCount: to.Ptr[int32](3),
      						}},
      				},
      				MinSupportedTLSVersion: to.Ptr("1.2"),
      				OSType:                 to.Ptr(armhdinsight.OSTypeLinux),
      				StorageProfile: &armhdinsight.StorageProfile{
      					Storageaccounts: []*armhdinsight.StorageAccount{
      						{
      							Name:       to.Ptr("storagename.blob.core.windows.net"),
      							Container:  to.Ptr("contianername"),
      							IsDefault:  to.Ptr(true),
      							Key:        to.Ptr("*******"),
      							ResourceID: to.Ptr("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/storagename"),
      						}},
      				},
      				Tier: to.Ptr(armhdinsight.TierStandard),
      			},
      			Tags:               map[string]*string{},
      			Name:               to.Ptr("testclustername"),
      			Type:               to.Ptr("Microsoft.HDInsight/clusters"),
      			FetchAaddsResource: to.Ptr(false),
      			TenantID:           to.Ptr("00000000-0000-0000-0000-000000000000"),
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fhdinsight%2Farmhdinsight%2Fv1.0.0/sdk/resourcemanager/hdinsight/armhdinsight/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { HDInsightManagementClient } = require("@azure/arm-hdinsight");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Validate the cluster create request spec is valid or not.
       *
       * @summary Validate the cluster create request spec is valid or not.
       * x-ms-original-file: specification/hdinsight/resource-manager/Microsoft.HDInsight/stable/2021-06-01/examples/HDI_Locations_ValidateClusterCreateRequest.json
       */
      async function getTheSubscriptionUsagesForSpecificLocation() {
        const subscriptionId = "subid";
        const location = "southcentralus";
        const parameters = {
          name: "testclustername",
          type: "Microsoft.HDInsight/clusters",
          fetchAaddsResource: false,
          location: "southcentralus",
          properties: {
            clusterDefinition: {
              componentVersion: { spark: "2.4" },
              configurations: {
                gateway: {
                  "restAuthCredential.isEnabled": true,
                  "restAuthCredential.password": "**********",
                  "restAuthCredential.username": "admin",
                },
              },
              kind: "spark",
            },
            clusterVersion: "4.0",
            computeProfile: {
              roles: [
                {
                  name: "headnode",
                  autoscaleConfiguration: {},
                  dataDisksGroups: [],
                  hardwareProfile: { vmSize: "Standard_E8_V3" },
                  minInstanceCount: 1,
                  osProfile: {
                    linuxOperatingSystemProfile: {
                      password: "********",
                      username: "sshuser",
                    },
                  },
                  scriptActions: [],
                  targetInstanceCount: 2,
                  virtualNetworkProfile: {},
                },
                {
                  name: "workernode",
                  autoscaleConfiguration: {},
                  dataDisksGroups: [],
                  hardwareProfile: { vmSize: "Standard_E8_V3" },
                  osProfile: {
                    linuxOperatingSystemProfile: {
                      password: "********",
                      username: "sshuser",
                    },
                  },
                  scriptActions: [],
                  targetInstanceCount: 4,
                  virtualNetworkProfile: {},
                },
                {
                  name: "zookeepernode",
                  autoscaleConfiguration: {},
                  dataDisksGroups: [],
                  hardwareProfile: { vmSize: "Standard_D13_V2" },
                  minInstanceCount: 1,
                  osProfile: {
                    linuxOperatingSystemProfile: {
                      password: "**********",
                      username: "sshuser",
                    },
                  },
                  scriptActions: [],
                  targetInstanceCount: 3,
                  virtualNetworkProfile: {},
                },
              ],
            },
            minSupportedTlsVersion: "1.2",
            osType: "Linux",
            storageProfile: {
              storageaccounts: [
                {
                  name: "storagename.blob.core.windows.net",
                  container: "contianername",
                  isDefault: true,
                  key: "*******",
                  resourceId:
                    "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/storagename",
                },
              ],
            },
            tier: "Standard",
          },
          tags: {},
          tenantId: "00000000-0000-0000-0000-000000000000",
        };
        const credential = new DefaultAzureCredential();
        const client = new HDInsightManagementClient(credential, subscriptionId);
        const result = await client.locations.validateClusterCreateRequest(location, parameters);
        console.log(result);
      }

      getTheSubscriptionUsagesForSpecificLocation().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-hdinsight_1.2.0/sdk/hdinsight/arm-hdinsight/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "validationErrors": [],
        "estimatedCreationDuration": "00:20:00"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about HDInsight service - Validate the cluster create request spec is valid or not.
errorCodes: []
