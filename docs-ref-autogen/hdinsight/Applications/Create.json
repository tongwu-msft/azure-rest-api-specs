{
  "swagger": "2.0",
  "info": {
    "version": "2018-06-01-preview",
    "title": "HDInsightManagementClient",
    "description": "The HDInsight Management Client."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/applications/{applicationName}": {
      "put": {
        "tags": [
          "Applications"
        ],
        "description": "Creates applications for the HDInsight cluster.",
        "operationId": "Applications_Create",
        "x-ms-examples": {
          "Create Application": {
            "parameters": {
              "applicationName": "hue",
              "clusterName": "cluster1",
              "resourceGroupName": "rg1",
              "api-version": "2018-06-01-preview",
              "subscriptionId": "subid",
              "parameters": {
                "properties": {
                  "computeProfile": {
                    "roles": [
                      {
                        "name": "edgenode",
                        "targetInstanceCount": 1,
                        "hardwareProfile": {
                          "vmSize": "Standard_D12_v2"
                        }
                      }
                    ]
                  },
                  "installScriptActions": [
                    {
                      "name": "app-install-app1",
                      "uri": "https://.../install.sh",
                      "parameters": "-version latest -port 20000",
                      "roles": [
                        "edgenode"
                      ]
                    }
                  ],
                  "uninstallScriptActions": [],
                  "httpsEndpoints": [
                    {
                      "subDomainSuffix": "dss",
                      "destinationPort": 20000,
                      "accessModes": [
                        "WebPage"
                      ]
                    }
                  ],
                  "applicationType": "CustomApplication",
                  "errors": []
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.HDInsight/clusters/cluster1/applications/hue",
                  "name": "hue",
                  "type": "Microsoft.HDInsight/clusters/applications",
                  "etag": "etag",
                  "tags": {},
                  "properties": {
                    "computeProfile": {
                      "roles": [
                        {
                          "name": "edgenode",
                          "targetInstanceCount": 1,
                          "hardwareProfile": {
                            "vmSize": "Standard_D12_v2"
                          }
                        }
                      ]
                    },
                    "installScriptActions": [
                      {
                        "name": "app-install-app1",
                        "uri": "https://.../install.sh",
                        "parameters": "-version latest -port 20000",
                        "roles": [
                          "edgenode"
                        ]
                      }
                    ],
                    "uninstallScriptActions": [],
                    "httpsEndpoints": [
                      {
                        "subDomainSuffix": "dss",
                        "destinationPort": 20000,
                        "accessModes": [
                          "WebPage"
                        ]
                      }
                    ],
                    "sshEndpoints": [],
                    "provisioningState": "InProgress",
                    "applicationState": "ApplicationConfiguration",
                    "applicationType": "CustomApplication",
                    "errors": [],
                    "createdDate": "2017-02-28"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Application"
            },
            "description": "The application create request."
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Create"
      }
    }
  },
  "definitions": {
    "ApplicationGetHttpsEndpoint": {
      "description": "Gets the application HTTP endpoints.",
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of access modes for the application."
        },
        "location": {
          "type": "string",
          "description": "The location of the endpoint."
        },
        "destinationPort": {
          "type": "integer",
          "format": "int32",
          "description": "The destination port to connect to."
        },
        "publicPort": {
          "type": "integer",
          "format": "int32",
          "description": "The public port to connect to."
        },
        "subDomainSuffix": {
          "type": "string",
          "description": "The subdomain suffix of the application."
        },
        "disableGatewayAuth": {
          "type": "boolean",
          "description": "The value indicates whether to disable GatewayAuth."
        }
      }
    },
    "ApplicationGetEndpoint": {
      "description": "Gets the application SSH endpoint",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location of the endpoint."
        },
        "destinationPort": {
          "type": "integer",
          "format": "int32",
          "description": "The destination port to connect to."
        },
        "publicPort": {
          "type": "integer",
          "format": "int32",
          "description": "The public port to connect to."
        }
      }
    },
    "ApplicationProperties": {
      "description": "The HDInsight cluster application GET response.",
      "type": "object",
      "properties": {
        "computeProfile": {
          "$ref": "#/definitions/ComputeProfile",
          "description": "The list of roles in the cluster."
        },
        "installScriptActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuntimeScriptAction"
          },
          "description": "The list of install script actions."
        },
        "uninstallScriptActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuntimeScriptAction"
          },
          "description": "The list of uninstall script actions."
        },
        "httpsEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGetHttpsEndpoint"
          },
          "description": "The list of application HTTPS endpoints."
        },
        "sshEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGetEndpoint"
          },
          "description": "The list of application SSH endpoints."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the application."
        },
        "applicationType": {
          "type": "string",
          "description": "The application type."
        },
        "applicationState": {
          "readOnly": true,
          "type": "string",
          "description": "The application state."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          },
          "description": "The list of errors."
        },
        "createdDate": {
          "readOnly": true,
          "type": "string",
          "description": "The application create date time."
        },
        "marketplaceIdentifier": {
          "readOnly": true,
          "type": "string",
          "description": "The marketplace identifier."
        }
      }
    },
    "Application": {
      "description": "The HDInsight cluster application",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "etag": {
          "description": "The ETag for the application",
          "type": "string"
        },
        "tags": {
          "description": "The tags for the application.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ApplicationProperties",
          "description": "The properties of the application."
        }
      }
    },
    "ApplicationListResult": {
      "description": "Result of the request to list cluster Applications. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Application"
          },
          "description": "The list of HDInsight applications installed on HDInsight cluster."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of operation list results if there are any."
        }
      }
    },
    "ProxyResource": {
      "description": "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ClusterIdentity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal id of cluster identity. This property will only be provided for a system assigned identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant id associated with the cluster. This property will only be provided for a system assigned identity."
        },
        "type": {
          "type": "string",
          "description": "The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal id of user assigned identity."
              },
              "clientId": {
                "readOnly": true,
                "type": "string",
                "description": "The client id of user assigned identity."
              }
            }
          },
          "description": "The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        }
      },
      "description": "Identity for the cluster."
    },
    "DiskEncryptionProperties": {
      "description": "The disk encryption properties",
      "properties": {
        "vaultUri": {
          "type": "string",
          "description": "Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net"
        },
        "keyName": {
          "type": "string",
          "description": "Key name that is used for enabling disk encryption."
        },
        "keyVersion": {
          "type": "string",
          "description": "Specific key version that is used for enabling disk encryption."
        },
        "encryptionAlgorithm": {
          "type": "string",
          "description": "Algorithm identifier for encryption, default RSA-OAEP.",
          "enum": [
            "RSA-OAEP",
            "RSA-OAEP-256",
            "RSA1_5"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeyEncryptionAlgorithm",
            "modelAsString": true
          }
        },
        "msiResourceId": {
          "type": "string",
          "description": "Resource ID of Managed Identity that is used to access the key vault."
        }
      }
    },
    "ConnectivityEndpoint": {
      "description": "The connectivity properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the endpoint."
        },
        "protocol": {
          "type": "string",
          "description": "The protocol of the endpoint."
        },
        "location": {
          "type": "string",
          "description": "The location of the endpoint."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port to connect to."
        }
      }
    },
    "Errors": {
      "description": "The error message associated with the cluster creation.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        }
      }
    },
    "QuotaInfo": {
      "description": "The quota properties for the cluster.",
      "properties": {
        "coresUsed": {
          "type": "integer",
          "format": "int32",
          "description": "The cores used by the cluster."
        }
      }
    },
    "ScriptAction": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the script action."
        },
        "uri": {
          "type": "string",
          "description": "The URI to the script."
        },
        "parameters": {
          "type": "string",
          "description": "The parameters for the script provided."
        }
      },
      "required": [
        "name",
        "uri",
        "parameters"
      ],
      "description": "Describes a script action on role on the cluster."
    },
    "DataDisksGroups": {
      "description": "The data disks groups for the role.",
      "properties": {
        "disksPerNode": {
          "type": "integer",
          "format": "int32",
          "description": "The number of disks per node."
        },
        "storageAccountType": {
          "type": "string",
          "description": "ReadOnly. The storage account type. Do not set this value.",
          "readOnly": true
        },
        "diskSizeGB": {
          "type": "integer",
          "description": "ReadOnly. The DiskSize in GB. Do not set this value.",
          "readOnly": true
        }
      }
    },
    "VirtualNetworkProfile": {
      "description": "The virtual network properties.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the virtual network."
        },
        "subnet": {
          "type": "string",
          "description": "The name of the subnet."
        }
      }
    },
    "SshPublicKey": {
      "description": "The SSH public key for the cluster nodes.",
      "properties": {
        "certificateData": {
          "type": "string",
          "description": "The certificate for SSH."
        }
      }
    },
    "SshProfile": {
      "description": "The list of SSH public keys.",
      "properties": {
        "publicKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SshPublicKey"
          },
          "description": "The list of SSH public keys."
        }
      }
    },
    "LinuxOperatingSystemProfile": {
      "description": "The ssh username, password, and ssh public key.",
      "properties": {
        "username": {
          "type": "string",
          "description": "The username."
        },
        "password": {
          "type": "string",
          "description": "The password."
        },
        "sshProfile": {
          "$ref": "#/definitions/SshProfile",
          "description": "The SSH profile."
        }
      }
    },
    "OsProfile": {
      "description": "The Linux operation systems profile.",
      "properties": {
        "linuxOperatingSystemProfile": {
          "$ref": "#/definitions/LinuxOperatingSystemProfile",
          "description": "The Linux OS profile."
        }
      }
    },
    "HardwareProfile": {
      "properties": {
        "vmSize": {
          "type": "string",
          "description": "The size of the VM"
        }
      },
      "description": "The hardware profile."
    },
    "AutoscaleTimeAndCapacity": {
      "properties": {
        "time": {
          "type": "string",
          "description": "24-hour time in the form xx:xx"
        },
        "minInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum instance count of the cluster"
        },
        "maxInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum instance count of the cluster"
        }
      },
      "description": "Time and capacity request parameters"
    },
    "AutoscaleSchedule": {
      "properties": {
        "days": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "x-ms-enum": {
              "name": "DaysOfWeek",
              "modelAsString": false
            }
          },
          "description": "Days of the week for a schedule-based autoscale rule"
        },
        "timeAndCapacity": {
          "$ref": "#/definitions/AutoscaleTimeAndCapacity",
          "description": "Time and capacity for a schedule-based autoscale rule"
        }
      },
      "description": "Parameters for a schedule-based autoscale rule, consisting of an array of days + a time and capacity"
    },
    "AutoscaleRecurrence": {
      "properties": {
        "timeZone": {
          "type": "string",
          "description": "The time zone for the autoscale schedule times"
        },
        "schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoscaleSchedule"
          },
          "description": "Array of schedule-based autoscale rules"
        }
      },
      "description": "Schedule-based autoscale request parameters"
    },
    "AutoscaleCapacity": {
      "properties": {
        "minInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum instance count of the cluster"
        },
        "maxInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum instance count of the cluster"
        }
      },
      "description": "The load-based autoscale request parameters"
    },
    "Autoscale": {
      "properties": {
        "capacity": {
          "$ref": "#/definitions/AutoscaleCapacity",
          "description": "Parameters for load-based autoscale"
        },
        "recurrence": {
          "$ref": "#/definitions/AutoscaleRecurrence",
          "description": "Parameters for schedule-based autoscale"
        }
      },
      "description": "The autoscale request parameters"
    },
    "Role": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the role."
        },
        "minInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum instance count of the cluster."
        },
        "targetInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The instance count of the cluster."
        },
        "autoscale": {
          "$ref": "#/definitions/Autoscale",
          "x-ms-client-name": "autoscaleConfiguration",
          "description": "The autoscale configurations."
        },
        "hardwareProfile": {
          "$ref": "#/definitions/HardwareProfile",
          "description": "The hardware profile."
        },
        "osProfile": {
          "$ref": "#/definitions/OsProfile",
          "description": "The operating system profile."
        },
        "virtualNetworkProfile": {
          "$ref": "#/definitions/VirtualNetworkProfile",
          "description": "The virtual network profile."
        },
        "dataDisksGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataDisksGroups"
          },
          "description": "The data disks groups for the role."
        },
        "scriptActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptAction"
          },
          "description": "The list of script actions on the role."
        }
      },
      "description": "Describes a role on the cluster."
    },
    "ComputeProfile": {
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          },
          "description": "The list of roles in the cluster."
        }
      },
      "description": "Describes the compute profile."
    },
    "SecurityProfile": {
      "description": "The security profile which contains Ssh public key for the HDInsight cluster.",
      "properties": {
        "directoryType": {
          "type": "string",
          "description": "The directory type.",
          "enum": [
            "ActiveDirectory"
          ],
          "x-ms-enum": {
            "name": "DirectoryType",
            "modelAsString": false
          }
        },
        "domain": {
          "type": "string",
          "description": "The organization's active directory domain."
        },
        "organizationalUnitDN": {
          "type": "string",
          "description": "The organizational unit within the Active Directory to place the cluster and service accounts."
        },
        "ldapsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The LDAPS protocol URLs to communicate with the Active Directory."
        },
        "domainUsername": {
          "type": "string",
          "description": "The domain user account that will have admin privileges on the cluster."
        },
        "domainUserPassword": {
          "type": "string",
          "format": "password",
          "description": "The domain admin password."
        },
        "clusterUsersGroupDNs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The Distinguished Names for cluster user groups"
        },
        "aaddsResourceId": {
          "type": "string",
          "description": "The resource ID of the user's Azure Active Directory Domain Service."
        },
        "msiResourceId": {
          "type": "string",
          "description": "User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS."
        }
      }
    },
    "ClientGroupInfo": {
      "description": "The information of AAD security group.",
      "properties": {
        "groupName": {
          "type": "string",
          "description": "The AAD security group name."
        },
        "groupId": {
          "type": "string",
          "description": "The AAD security group id."
        }
      }
    },
    "KafkaRestProperties": {
      "description": "The kafka rest proxy configuration which contains AAD security group information.",
      "properties": {
        "clientGroupInfo": {
          "$ref": "#/definitions/ClientGroupInfo",
          "description": "The information of AAD security group."
        }
      }
    },
    "ClusterDefinition": {
      "description": "The cluster definition.",
      "properties": {
        "blueprint": {
          "type": "string",
          "description": "The link to the blueprint."
        },
        "kind": {
          "type": "string",
          "description": "The type of cluster."
        },
        "componentVersion": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The versions of different services in the cluster."
        },
        "configurations": {
          "type": "object",
          "description": "The cluster configurations."
        }
      }
    },
    "ClusterGetProperties": {
      "description": "The properties of cluster.",
      "properties": {
        "clusterVersion": {
          "type": "string",
          "description": "The version of the cluster."
        },
        "osType": {
          "type": "string",
          "description": "The type of operating system.",
          "enum": [
            "Windows",
            "Linux"
          ],
          "x-ms-enum": {
            "name": "OSType",
            "modelAsString": false
          }
        },
        "tier": {
          "type": "string",
          "description": "The cluster tier.",
          "enum": [
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "Tier",
            "modelAsString": false
          }
        },
        "clusterDefinition": {
          "$ref": "#/definitions/ClusterDefinition",
          "description": "The cluster definition."
        },
        "kafkaRestProperties": {
          "$ref": "#/definitions/KafkaRestProperties",
          "description": "The cluster kafka rest proxy configuration."
        },
        "securityProfile": {
          "$ref": "#/definitions/SecurityProfile",
          "description": "The security profile."
        },
        "computeProfile": {
          "$ref": "#/definitions/ComputeProfile",
          "description": "The compute profile."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state, which only appears in the response.",
          "enum": [
            "InProgress",
            "Failed",
            "Succeeded",
            "Canceled",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "HDInsightClusterProvisioningState",
            "modelAsString": false
          }
        },
        "createdDate": {
          "type": "string",
          "description": "The date on which the cluster was created."
        },
        "clusterState": {
          "type": "string",
          "description": "The state of the cluster."
        },
        "quotaInfo": {
          "$ref": "#/definitions/QuotaInfo",
          "description": "The quota information."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Errors"
          },
          "description": "The list of errors."
        },
        "connectivityEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectivityEndpoint"
          },
          "description": "The list of connectivity endpoints."
        },
        "diskEncryptionProperties": {
          "$ref": "#/definitions/DiskEncryptionProperties",
          "description": "The disk encryption properties."
        },
        "minSupportedTlsVersion": {
          "type": "string",
          "description": "The minimal supported tls version."
        }
      },
      "required": [
        "clusterDefinition"
      ]
    },
    "Cluster": {
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "etag": {
          "type": "string",
          "description": "The ETag for the resource"
        },
        "properties": {
          "$ref": "#/definitions/ClusterGetProperties",
          "description": "The properties of the cluster."
        },
        "identity": {
          "$ref": "#/definitions/ClusterIdentity",
          "description": "The identity of the cluster, if configured."
        }
      },
      "description": "The HDInsight cluster."
    },
    "TrackedResource": {
      "description": "The resource model definition for a ARM tracked top level resource",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The Azure Region where the resource lives"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "description": "The core properties of ARM resources",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource Id for the resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource."
        }
      },
      "x-ms-azure-resource": true
    },
    "ScriptActionExecutionSummary": {
      "properties": {
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "The status of script action execution."
        },
        "instanceCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The instance count for a given script action execution status."
        }
      },
      "description": "The execution summary of a script action."
    },
    "RuntimeScriptActionDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/RuntimeScriptAction"
        },
        {
          "properties": {
            "scriptExecutionId": {
              "readOnly": true,
              "type": "integer",
              "format": "int64",
              "description": "The execution id of the script action."
            },
            "startTime": {
              "readOnly": true,
              "type": "string",
              "description": "The start time of script action execution."
            },
            "endTime": {
              "readOnly": true,
              "type": "string",
              "description": "The end time of script action execution."
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "description": "The current execution status of the script action."
            },
            "operation": {
              "readOnly": true,
              "type": "string",
              "description": "The reason why the script action was executed."
            },
            "executionSummary": {
              "readOnly": true,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScriptActionExecutionSummary"
              },
              "description": "The summary of script action execution result."
            },
            "debugInformation": {
              "readOnly": true,
              "type": "string",
              "description": "The script action execution debug information."
            }
          }
        }
      ],
      "description": "The execution details of a script action."
    },
    "RuntimeScriptAction": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the script action."
        },
        "uri": {
          "type": "string",
          "description": "The URI to the script."
        },
        "parameters": {
          "type": "string",
          "description": "The parameters for the script"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of roles where script will be executed."
        },
        "applicationName": {
          "readOnly": true,
          "type": "string",
          "description": "The application name of the script action, if any."
        }
      },
      "required": [
        "name",
        "uri",
        "roles"
      ],
      "description": "Describes a script action on a running cluster."
    },
    "ErrorResponse": {
      "description": "Describes the format of Error response.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "ClusterNameParameter": {
      "name": "clusterName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the cluster.",
      "x-ms-parameter-location": "method"
    },
    "ApplicationNameParameter": {
      "name": "applicationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The constant value for the application name.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The HDInsight client API Version."
    }
  },
  "x-internal-service-id": "hdinsight",
  "x-internal-service-name": "HDInsight",
  "x-internal-toc-name": "Applications",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "Create",
  "x-internal-operation-name": "Create"
}