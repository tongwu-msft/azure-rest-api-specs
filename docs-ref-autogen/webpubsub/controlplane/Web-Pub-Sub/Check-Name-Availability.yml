### YamlMime:RESTOperation
uid: management.azure.com.webpubsub.controlplane.webpubsub.checknameavailability
name: Check Name Availability
service: Azure Web PubSub Service
groupName: Web Pub Sub
apiVersion: 2021-10-01
summary: Checks that the resource name is valid and is not already in use.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.SignalRService/locations/{location}/checkNameAvailability?api-version=2021-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription Id which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: location
  in: path
  isRequired: true
  description: the region
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Success. The response describes the name availability.
  types:
  - uid: NameAvailability
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: type
    in: body
    isRequired: true
    description: The resource type. Can be "Microsoft.SignalRService/SignalR" or "Microsoft.SignalRService/webPubSub"
    types:
    - uid: string
  - name: name
    in: body
    isRequired: true
    description: The resource name to validate. e.g."my-resource-name"
    types:
    - uid: string
requestHeader: []
definitions:
- name: NameAvailability
  description: Result of the request to check name availability. It contains a flag and possible reason of failure.
  kind: object
  properties:
  - name: nameAvailable
    description: Indicates whether the name is available or not.
    types:
    - uid: boolean
  - name: reason
    description: The reason of the availability. Required if name is not available.
    types:
    - uid: string
  - name: message
    description: The message of the operation.
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: NameAvailabilityParameters
  description: Data POST-ed to the nameAvailability action
  kind: object
  properties:
  - name: type
    description: The resource type. Can be "Microsoft.SignalRService/SignalR" or "Microsoft.SignalRService/webPubSub"
    types:
    - uid: string
  - name: name
    description: The resource name to validate. e.g."my-resource-name"
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: WebPubSub_CheckNameAvailability
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.SignalRService/locations/eastus/checkNameAvailability?api-version=2021-10-01
    body: >-
      {
        "type": "Microsoft.SignalRService/WebPubSub",
        "name": "myWebPubSubService"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.SignalRService/locations/eastus/checkNameAvailability?api-version=2021-10-01

      {
        "type": "Microsoft.SignalRService/WebPubSub",
        "name": "myWebPubSubService"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.webpubsub.models.NameAvailabilityParameters;

      /** Samples for WebPubSub CheckNameAvailability. */
      public final class Main {
          /*
           * x-ms-original-file: specification/webpubsub/resource-manager/Microsoft.SignalRService/stable/2021-10-01/examples/WebPubSub_CheckNameAvailability.json
           */
          /**
           * Sample code: WebPubSub_CheckNameAvailability.
           *
           * @param manager Entry point to WebPubSubManager.
           */
          public static void webPubSubCheckNameAvailability(com.azure.resourcemanager.webpubsub.WebPubSubManager manager) {
              manager
                  .webPubSubs()
                  .checkNameAvailabilityWithResponse(
                      "eastus",
                      new NameAvailabilityParameters()
                          .withType("Microsoft.SignalRService/WebPubSub")
                          .withName("myWebPubSubService"),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-webpubsub_1.0.0-beta.2/sdk/webpubsub/azure-resourcemanager-webpubsub/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armwebpubsub_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/webpubsub/armwebpubsub"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/webpubsub/resource-manager/Microsoft.SignalRService/stable/2021-10-01/examples/WebPubSub_CheckNameAvailability.json
      func ExampleClient_CheckNameAvailability() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armwebpubsub.NewClient("00000000-0000-0000-0000-000000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CheckNameAvailability(ctx,
      		"eastus",
      		armwebpubsub.NameAvailabilityParameters{
      			Name: to.Ptr("myWebPubSubService"),
      			Type: to.Ptr("Microsoft.SignalRService/WebPubSub"),
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fwebpubsub%2Farmwebpubsub%2Fv1.0.0/sdk/resourcemanager/webpubsub/armwebpubsub/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "nameAvailable": false,
        "reason": "AlreadyExists",
        "message": "The name is already taken. Please try a different name."
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Azure Web PubSub Service service - Checks that the resource name is valid and is not already in use.
errorCodes: []
