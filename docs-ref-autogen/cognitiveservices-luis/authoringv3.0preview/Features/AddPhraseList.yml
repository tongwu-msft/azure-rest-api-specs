### YamlMime:RESTOperation
uid: cognitiveservices-luis.authoringv3.0preview.features.addphraselist
name: Add Phrase List
service: Cognitive Services - LUIS
groupName: Features
apiVersion: 3.0-preview
summary: Creates a new phraselist feature in a version of the application.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST {Endpoint}/luis/authoring/v3.0-preview/apps/{appId}/versions/{versionId}/phraselists
uriParameters:
- name: Endpoint
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: 'Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).'
  types:
  - uid: string
- name: appId
  in: path
  isRequired: true
  description: The application ID.
  types:
  - uid: string
  format: uuid
- name: versionId
  in: path
  isRequired: true
  description: The version ID.
  types:
  - uid: string
responses:
- name: 201 Created
  description: The ID of the created feature.
  types:
  - uid: integer
- name: Other Status Codes
  description: Error Response.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: phrases
    in: body
    description: List of comma-separated phrases that represent the Phraselist.
    types:
    - uid: string
  - name: name
    in: body
    description: The Phraselist name.
    types:
    - uid: string
  - name: isExchangeable
    in: body
    description: An interchangeable phrase list feature serves as a list of synonyms for training. A non-exchangeable phrase list serves as separate features for training. So, if your non-interchangeable phrase list contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-interchangeable phrase list as an additional bag of words to add to LUIS existing vocabulary features. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t.  Default value is true.
    types:
    - uid: boolean
  - name: enabledForAllModels
    in: body
    description: Indicates if the Phraselist is enabled for all models in the application.
    types:
    - uid: boolean
requestHeader:
- name: Ocp-Apim-Subscription-Key
  in: header
  isRequired: true
  types:
  - uid: string
definitions:
- name: ErrorResponse
  description: Error response when invoking an operation on the API.
  kind: object
  properties:
  - name: errorType
    description: ''
    types:
    - uid: string
- name: PhraselistCreateObject
  description: Object model for creating a phraselist model.
  kind: object
  properties:
  - name: phrases
    description: List of comma-separated phrases that represent the Phraselist.
    types:
    - uid: string
  - name: name
    description: The Phraselist name.
    types:
    - uid: string
  - name: isExchangeable
    description: An interchangeable phrase list feature serves as a list of synonyms for training. A non-exchangeable phrase list serves as separate features for training. So, if your non-interchangeable phrase list contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-interchangeable phrase list as an additional bag of words to add to LUIS existing vocabulary features. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t.  Default value is true.
    types:
    - uid: boolean
  - name: enabledForAllModels
    description: Indicates if the Phraselist is enabled for all models in the application.
    types:
    - uid: boolean
examples:
- name: Successful Create Phraselist Feature request
  request:
    uri: POST {Endpoint}/luis/authoring/v3.0-preview/apps/86226c53-b7a6-416f-876b-226b2b5ab07b/versions/0.1/phraselists
    body: >-
      {
        "name": "DaysOfWeek",
        "phrases": "monday,tuesday,wednesday,thursday,friday,saturday,sunday",
        "isExchangeable": true
      }
    headers:
    - name: Ocp-Apim-Subscription-Key
      value: "00000000000000000000000000000000"
  responses:
  - statusCode: "201"
    body: "1823"
security:
- name: Ocp-Apim-Subscription-Key
  type: apiKey
  in: header
errorCodes: []
