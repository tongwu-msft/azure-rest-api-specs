### YamlMime:RESTOperation
uid: speakerrecognition.identification.textindependent.identifysinglespeaker
name: Identify Single Speaker
service: Speaker Recognition
groupName: Text Independent
apiVersion: "2.0"
summary: "Identify Single Speaker Profile  \nIdentifies who is speaking in input audio among a list of candidate profiles.\n\nLimitations:\n* Minimum audio input length is **1 second**\n* Maximum audio input length is **120 seconds**\n* Minimum candidate speakers count is **1**\n* Maximum candidate speakers count is **50**\n* Minimum effective speech length (excluding silence and other non-speech frames) is **4 seconds**\n  This limitation can be disabled by setting \"ignoreMinLength\" to **true**.\n\n* Minimum audio Signal-to-noise ratio (SNR) is **0dB**"
consumes:
- audio/wav; codecs=audio/pcm
produces:
- application/json
paths:
- content: POST {Endpoint}/speaker/identification/v2.0/text-independent/profiles/identifySingleSpeaker?profileIds={profileIds}
- content: POST {Endpoint}/speaker/identification/v2.0/text-independent/profiles/identifySingleSpeaker?profileIds={profileIds}&ignoreMinLength={ignoreMinLength}
  isOptional: true
uriParameters:
- name: Endpoint
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: 'Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).'
  types:
  - uid: string
- name: profileIds
  in: query
  isRequired: true
  description: Comma-delimited profile IDs. Maximum supported number is 50 IDs.
  types:
  - uid: string
- name: ignoreMinLength
  in: query
  description: If true, the minimum amount of speech needed for identification is skipped. Default is false.
  types:
  - uid: boolean
responses:
- name: 200 OK
  description: OK
  types:
  - uid: IdentifiedSingleSpeakerInfo
- name: 400 Bad Request
  description: >-
    Bad Request

    * InvalidRequest - Invalid audio length. Maximum allowed length per recognition request is 120 seconds.

    * InvalidRequest - Invalid audio length. Minimum allowed length per recognition request is 1 second.

    * InvalidRequest - Invalid audio format. Supported format is 16Khz 16bit Mono PCM.

    * InvalidArgument - Invalid ignoreMinLength parameter value. Valid values are "true" and "false".

    * InvalidArgument - Invalid profileIds parameter value. It should be comma-delimited list of IDs containing at least one ID.

    * InvalidRequest - profileIds parameter is missing. It should be comma-delimited list of IDs containing at least one ID.

    * InvalidRequest - Invalid group of profiles. Profiles must have the same locale.

    * InvalidRequest - Maximum number of profiles allowed per request is 50.

    * InvalidRequest - Minimum audio Signal-to-noise ratio (SNR) is 0dB

    * InvalidRequest - Profile is not enrolled.
  types:
  - uid: Error
- name: 401 Unauthorized
  description: Request is not authorized. Make sure subscription key is included and valid.
  types:
  - uid: Error
- name: Other Status Codes
  description: UnsupportedMediaType  - Unsupported media type. Only "audio/wav; codecs=audio/pcm" is accepted.
  types:
  - uid: Error
- name: Other Status Codes
  description: Rate limit is exceeded.
  types:
  - uid: Error
- name: 500 Internal Server Error
  description: Internal Server Error.
  types:
  - uid: Error
requestBody:
- name: default
  parameters:
  - name: audioData
    in: body
    description: Binary audio file. Supported formats are audio/wav; codecs=audio/pcm. Supports audio up to 5MB.
    types:
    - uid: object
requestHeader:
- name: Ocp-Apim-Subscription-Key
  in: header
  isRequired: true
  types:
  - uid: string
definitions:
- name: IdentifiedSingleSpeakerInfo
  kind: object
  properties:
  - name: identifiedProfile
    description: Object containing data of identified profile.
    types:
    - uid: IdentifyInfo
  - name: profilesRanking
    description: Object containing data of the top 5 profiles (including identified profile) sorted in descending order by score.
    types:
    - uid: IdentifyInfo
      isArray: true
- name: Error
  kind: object
  properties:
  - name: error
    description: ''
    types:
    - uid: Error
- name: IdentifyInfo
  description: Identified speaker info
  kind: object
  properties:
  - name: profileId
    description: ID of identified of profile. If no candidate is identified as the right speaker, the value is set to empty GUID.
    types:
    - uid: string
  - name: score
    description: A float number indicating the similarity between input audio and targeted voice print. This number must be between 0 and 1. A higher number means higher similarity.
    types:
    - uid: number
examples:
- name: Successful Query
  request:
    uri: POST {Endpoint}/speaker/identification/v2.0/text-independent/profiles/identifySingleSpeaker?profileIds=3669fa29-1bf3-45ad-beea-6b348d058d7e,111f427c-3791-468f-b709-fcef7660fff9,0e196cd9-32d5-4883-8631-54a0e7c7cb3d,0e196cd9-32d5-4883-8631-54a0e7c7cb3d,726e57d9-04e0-4214-b482-7f786fa83560,f95189fd-1bf5-4485-9c2e-e5897e0c98ca
    body: "\"{binary file date}\""
    headers:
    - name: Ocp-Apim-Subscription-Key
      value: '{API key}'
  responses:
  - statusCode: "200"
    headers:
    - name: Content-Type
      value: application/json
    body: >-
      {
        "identifiedProfile": {
          "profileId": "111f427c-3791-468f-b709-fcef7660fff9",
          "score": 0.63
        },
        "profilesRanking": [
          {
            "profileId": "111f427c-3791-468f-b709-fcef7660fff9",
            "score": 0.63
          },
          {
            "profileId": "3669fa29-1bf3-45ad-beea-6b348d058d7e",
            "score": 0.49
          },
          {
            "profileId": "0e196cd9-32d5-4883-8631-54a0e7c7cb3d",
            "score": 0.4
          },
          {
            "profileId": "726e57d9-04e0-4214-b482-7f786fa83560",
            "score": 0.1
          },
          {
            "profileId": "f95189fd-1bf5-4485-9c2e-e5897e0c98ca",
            "score": 0.03
          }
        ]
      }
  - statusCode: "400"
    headers:
    - name: Content-Type
      value: application/json
    body: >-
      {
        "error": {
          "code": "InvalidRequest",
          "message": "Profile is not enrolled."
        }
      }
  - statusCode: "401"
    headers:
    - name: Content-Type
      value: application/json
    body: >-
      {
        "error": {
          "code": "Unauthorized",
          "message": "Request is not authorized. Make sure subscription key is included and valid."
        }
      }
  - statusCode: "415"
    headers:
    - name: Content-Type
      value: application/json
    body: >-
      {
        "error": {
          "code": "UnsupportedMediaType",
          "message": "Unsupported media type. Only 'audio/wav; codecs=audio/pcm' is accepted."
        }
      }
  - statusCode: "429"
    headers:
    - name: Content-Type
      value: application/json
    body: >-
      {
        "error": {
          "code": "RateLimit",
          "message": "Rate limit is exceeded."
        }
      }
  - statusCode: "500"
    headers:
    - name: Content-Type
      value: application/json
    body: >-
      {
        "error": {
          "code": "InternalServerError",
          "message": "Internal Server Error."
        }
      }
security:
- name: Ocp-Apim-Subscription-Key
  type: apiKey
  in: header
errorCodes: []
