### YamlMime:RESTOperation
uid: management.azure.com.mysql.flexibleserver.servers.create
name: Create
service: MySQL
groupName: Servers
apiVersion: 2021-05-01
summary: Creates a new server or updates an existing server. The update action will overwrite the existing server.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}?api-version=2021-05-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: Server
- name: 201 Created
  description: Created
  types:
  - uid: Server
- name: 202 Accepted
  description: Accepted
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: sku
    in: body
    description: The SKU (pricing tier) of the server.
    types:
    - uid: Sku
  - name: identity.type
    in: body
    description: Type of managed service identity.
    types:
    - uid: ManagedServiceIdentityType
  - name: identity.userAssignedIdentities
    in: body
    description: Metadata of user assigned identity.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: object
  - name: properties.administratorLogin
    in: body
    description: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
    types:
    - uid: string
  - name: properties.administratorLoginPassword
    in: body
    description: The password of the administrator login (required for server creation).
    types:
    - uid: string
  - name: properties.version
    in: body
    description: Server version.
    types:
    - uid: ServerVersion
  - name: properties.availabilityZone
    in: body
    description: availability Zone information of the server.
    types:
    - uid: string
  - name: properties.createMode
    in: body
    description: The mode to create a new MySQL server.
    types:
    - uid: CreateMode
  - name: properties.sourceServerResourceId
    in: body
    description: The source MySQL server id.
    types:
    - uid: string
  - name: properties.restorePointInTime
    in: body
    description: Restore point creation time (ISO8601 format), specifying the time to restore from.
    types:
    - uid: string
  - name: properties.replicationRole
    in: body
    description: The replication role.
    types:
    - uid: ReplicationRole
  - name: properties.dataEncryption
    in: body
    description: The Data Encryption for CMK.
    types:
    - uid: DataEncryption
  - name: properties.storage
    in: body
    description: Storage related properties of a server.
    types:
    - uid: Storage
  - name: properties.backup
    in: body
    description: Backup related properties of a server.
    types:
    - uid: Backup
  - name: properties.highAvailability
    in: body
    description: High availability related properties of a server.
    types:
    - uid: HighAvailability
  - name: properties.network
    in: body
    description: Network related properties of a server.
    types:
    - uid: Network
  - name: properties.maintenanceWindow
    in: body
    description: Maintenance window of a server.
    types:
    - uid: MaintenanceWindow
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    in: body
    isRequired: true
    description: The geo-location where the resource lives
    types:
    - uid: string
requestHeader: []
definitions:
- name: Sku
  description: Billing information related properties of a server.
  kind: object
  properties:
  - name: name
    description: The name of the sku, e.g. Standard_D32s_v3.
    types:
    - uid: string
  - name: tier
    description: The tier of the particular SKU, e.g. GeneralPurpose.
    types:
    - uid: SkuTier
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: DataEncryption
  description: The date encryption for cmk.
  kind: object
  properties:
  - name: primaryUserAssignedIdentityId
    description: Primary user identity resource id
    types:
    - uid: string
  - name: primaryKeyURI
    description: Primary key uri
    types:
    - uid: string
  - name: geoBackupUserAssignedIdentityId
    description: Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup
    types:
    - uid: string
  - name: geoBackupKeyURI
    description: Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup
    types:
    - uid: string
  - name: type
    description: The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.
    types:
    - uid: DataEncryptionType
- name: Storage
  description: Storage Profile properties of a server
  kind: object
  properties:
  - name: storageSizeGB
    description: Max storage size allowed for a server.
    types:
    - uid: integer
  - name: iops
    description: Storage IOPS for a server.
    types:
    - uid: integer
  - name: autoGrow
    description: Enable Storage Auto Grow or not.
    types:
    - uid: EnableStatusEnum
  - name: storageSku
    isReadyOnly: true
    description: The sku name of the server storage.
    types:
    - uid: string
- name: Backup
  description: Storage Profile properties of a server
  kind: object
  properties:
  - name: backupRetentionDays
    description: Backup retention days for the server.
    types:
    - uid: integer
  - name: geoRedundantBackup
    description: Whether or not geo redundant backup is enabled.
    types:
    - uid: EnableStatusEnum
  - name: earliestRestoreDate
    isReadyOnly: true
    description: Earliest restore point creation time (ISO8601 format)
    types:
    - uid: string
- name: HighAvailability
  description: Network related properties of a server
  kind: object
  properties:
  - name: mode
    description: High availability mode for a server.
    types:
    - uid: HighAvailabilityMode
  - name: state
    isReadyOnly: true
    description: The state of server high availability.
    types:
    - uid: HighAvailabilityState
  - name: standbyAvailabilityZone
    description: Availability zone of the standby server.
    types:
    - uid: string
- name: Network
  description: Network related properties of a server
  kind: object
  properties:
  - name: publicNetworkAccess
    isReadyOnly: true
    description: Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.
    types:
    - uid: EnableStatusEnum
  - name: delegatedSubnetResourceId
    description: Delegated subnet resource id used to setup vnet for a server.
    types:
    - uid: string
  - name: privateDnsZoneResourceId
    description: Private DNS zone resource id.
    types:
    - uid: string
- name: MaintenanceWindow
  description: Maintenance window of a server.
  kind: object
  properties:
  - name: customWindow
    description: indicates whether custom window is enabled or disabled
    types:
    - uid: string
  - name: startHour
    description: start hour for maintenance window
    types:
    - uid: integer
  - name: startMinute
    description: start minute for maintenance window
    types:
    - uid: integer
  - name: dayOfWeek
    description: day of week for maintenance window
    types:
    - uid: integer
- name: Server
  description: Represents a server.
  kind: object
  properties:
  - name: sku
    description: The SKU (pricing tier) of the server.
    types:
    - uid: Sku
  - name: systemData
    isReadyOnly: true
    description: The system metadata relating to this resource.
    types:
    - uid: systemData
  - name: identity.principalId
    isReadyOnly: true
    description: ObjectId from the KeyVault
    types:
    - uid: string
  - name: identity.tenantId
    isReadyOnly: true
    description: TenantId from the KeyVault
    types:
    - uid: string
  - name: identity.type
    description: Type of managed service identity.
    types:
    - uid: ManagedServiceIdentityType
  - name: identity.userAssignedIdentities
    description: Metadata of user assigned identity.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: object
  - name: properties.administratorLogin
    description: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
    types:
    - uid: string
  - name: properties.administratorLoginPassword
    description: The password of the administrator login (required for server creation).
    types:
    - uid: string
  - name: properties.version
    description: Server version.
    types:
    - uid: ServerVersion
  - name: properties.availabilityZone
    description: availability Zone information of the server.
    types:
    - uid: string
  - name: properties.createMode
    description: The mode to create a new MySQL server.
    types:
    - uid: CreateMode
  - name: properties.sourceServerResourceId
    description: The source MySQL server id.
    types:
    - uid: string
  - name: properties.restorePointInTime
    description: Restore point creation time (ISO8601 format), specifying the time to restore from.
    types:
    - uid: string
  - name: properties.replicationRole
    description: The replication role.
    types:
    - uid: ReplicationRole
  - name: properties.replicaCapacity
    isReadyOnly: true
    description: The maximum number of replicas that a primary server can have.
    types:
    - uid: integer
  - name: properties.dataEncryption
    description: The Data Encryption for CMK.
    types:
    - uid: DataEncryption
  - name: properties.state
    isReadyOnly: true
    description: The state of a server.
    types:
    - uid: ServerState
  - name: properties.fullyQualifiedDomainName
    isReadyOnly: true
    description: The fully qualified domain name of a server.
    types:
    - uid: string
  - name: properties.storage
    description: Storage related properties of a server.
    types:
    - uid: Storage
  - name: properties.backup
    description: Backup related properties of a server.
    types:
    - uid: Backup
  - name: properties.highAvailability
    description: High availability related properties of a server.
    types:
    - uid: HighAvailability
  - name: properties.network
    description: Network related properties of a server.
    types:
    - uid: Network
  - name: properties.maintenanceWindow
    description: Maintenance window of a server.
    types:
    - uid: MaintenanceWindow
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: CloudError
  description: An error response from the Batch service.
  kind: object
  properties:
  - name: error
    description: "Error Response  \nThe resource management error response."
    types:
    - uid: ErrorResponse
- name: SkuTier
  description: The tier of the particular SKU, e.g. GeneralPurpose.
  kind: enum
  properties:
  - name: Burstable
    types:
    - uid: string
  - name: GeneralPurpose
    types:
    - uid: string
  - name: MemoryOptimized
    types:
    - uid: string
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: DataEncryptionType
  description: The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.
  kind: enum
  properties:
  - name: AzureKeyVault
    types:
    - uid: string
  - name: SystemManaged
    types:
    - uid: string
- name: EnableStatusEnum
  description: Enum to indicate whether value is 'Enabled' or 'Disabled'
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: HighAvailabilityMode
  description: High availability mode for a server.
  kind: enum
  properties:
  - name: Disabled
    types:
    - uid: string
  - name: ZoneRedundant
    types:
    - uid: string
  - name: SameZone
    types:
    - uid: string
- name: HighAvailabilityState
  description: The state of server high availability.
  kind: enum
  properties:
  - name: NotEnabled
    types:
    - uid: string
  - name: CreatingStandby
    types:
    - uid: string
  - name: Healthy
    types:
    - uid: string
  - name: FailingOver
    types:
    - uid: string
  - name: RemovingStandby
    types:
    - uid: string
- name: ManagedServiceIdentityType
  description: Type of managed service identity.
  kind: enum
  properties:
  - name: UserAssigned
    types:
    - uid: string
- name: ServerVersion
  description: The version of a server.
  kind: enum
  properties:
  - name: "5.7"
    types:
    - uid: string
  - name: 8.0.21
    types:
    - uid: string
- name: CreateMode
  description: The mode to create a new MySQL server.
  kind: enum
  properties:
  - name: Default
    types:
    - uid: string
  - name: PointInTimeRestore
    types:
    - uid: string
  - name: Replica
    types:
    - uid: string
  - name: GeoRestore
    types:
    - uid: string
- name: ReplicationRole
  description: The replication role.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: Source
    types:
    - uid: string
  - name: Replica
    types:
    - uid: string
- name: ServerState
  description: The state of a server.
  kind: enum
  properties:
  - name: Ready
    types:
    - uid: string
  - name: Dropping
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
  - name: Starting
    types:
    - uid: string
  - name: Stopping
    types:
    - uid: string
  - name: Stopped
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Create a new server
  request:
    uri: PUT https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforMySQL/flexibleServers/mysqltestserver?api-version=2021-05-01
    body: >-
      {
        "sku": {
          "name": "Standard_D2ds_v4",
          "tier": "GeneralPurpose"
        },
        "properties": {
          "administratorLogin": "cloudsa",
          "administratorLoginPassword": "your_password",
          "availabilityZone": "1",
          "version": "5.7",
          "createMode": "Default",
          "storage": {
            "storageSizeGB": 100,
            "iops": 600,
            "autoGrow": "Disabled"
          },
          "backup": {
            "backupRetentionDays": 7,
            "geoRedundantBackup": "Disabled"
          },
          "highAvailability": {
            "mode": "ZoneRedundant",
            "standbyAvailabilityZone": "3"
          }
        },
        "location": "southeastasia",
        "tags": {
          "num": "1"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforMySQL/flexibleServers/mysqltestserver?api-version=2021-05-01

      {
        "sku": {
          "name": "Standard_D2ds_v4",
          "tier": "GeneralPurpose"
        },
        "properties": {
          "administratorLogin": "cloudsa",
          "administratorLoginPassword": "your_password",
          "availabilityZone": "1",
          "version": "5.7",
          "createMode": "Default",
          "storage": {
            "storageSizeGB": 100,
            "iops": 600,
            "autoGrow": "Disabled"
          },
          "backup": {
            "backupRetentionDays": 7,
            "geoRedundantBackup": "Disabled"
          },
          "highAvailability": {
            "mode": "ZoneRedundant",
            "standbyAvailabilityZone": "3"
          }
        },
        "location": "southeastasia",
        "tags": {
          "num": "1"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.resourcemanager.mysqlflexibleserver.models.Backup;
      import com.azure.resourcemanager.mysqlflexibleserver.models.CreateMode;
      import com.azure.resourcemanager.mysqlflexibleserver.models.EnableStatusEnum;
      import com.azure.resourcemanager.mysqlflexibleserver.models.HighAvailability;
      import com.azure.resourcemanager.mysqlflexibleserver.models.HighAvailabilityMode;
      import com.azure.resourcemanager.mysqlflexibleserver.models.ServerVersion;
      import com.azure.resourcemanager.mysqlflexibleserver.models.Sku;
      import com.azure.resourcemanager.mysqlflexibleserver.models.SkuTier;
      import com.azure.resourcemanager.mysqlflexibleserver.models.Storage;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for Servers Create. */
      public final class Main {
          /*
           * x-ms-original-file: specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2021-05-01/examples/ServerCreate.json
           */
          /**
           * Sample code: Create a new server.
           *
           * @param manager Entry point to MySqlManager.
           */
          public static void createANewServer(com.azure.resourcemanager.mysqlflexibleserver.MySqlManager manager) {
              manager
                  .servers()
                  .define("mysqltestserver")
                  .withRegion("southeastasia")
                  .withExistingResourceGroup("testrg")
                  .withTags(mapOf("num", "1"))
                  .withSku(new Sku().withName("Standard_D2ds_v4").withTier(SkuTier.GENERAL_PURPOSE))
                  .withAdministratorLogin("cloudsa")
                  .withAdministratorLoginPassword("your_password")
                  .withVersion(ServerVersion.FIVE_SEVEN)
                  .withAvailabilityZone("1")
                  .withCreateMode(CreateMode.DEFAULT)
                  .withStorage(new Storage().withStorageSizeGB(100).withIops(600).withAutoGrow(EnableStatusEnum.DISABLED))
                  .withBackup(new Backup().withBackupRetentionDays(7).withGeoRedundantBackup(EnableStatusEnum.DISABLED))
                  .withHighAvailability(
                      new HighAvailability().withMode(HighAvailabilityMode.ZONE_REDUNDANT).withStandbyAvailabilityZone("3"))
                  .create();
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-mysqlflexibleserver_1.0.0-beta.2/sdk/mysqlflexibleserver/azure-resourcemanager-mysqlflexibleserver/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armmysqlflexibleservers_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/mysql/armmysqlflexibleservers"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2021-05-01/examples/ServerCreate.json
      func ExampleServersClient_BeginCreate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armmysqlflexibleservers.NewServersClient("ffffffff-ffff-ffff-ffff-ffffffffffff", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreate(ctx,
      		"testrg",
      		"mysqltestserver",
      		armmysqlflexibleservers.Server{
      			Location: to.Ptr("southeastasia"),
      			Tags: map[string]*string{
      				"num": to.Ptr("1"),
      			},
      			Properties: &armmysqlflexibleservers.ServerProperties{
      				AdministratorLogin:         to.Ptr("cloudsa"),
      				AdministratorLoginPassword: to.Ptr("your_password"),
      				AvailabilityZone:           to.Ptr("1"),
      				Backup: &armmysqlflexibleservers.Backup{
      					BackupRetentionDays: to.Ptr[int32](7),
      					GeoRedundantBackup:  to.Ptr(armmysqlflexibleservers.EnableStatusEnumDisabled),
      				},
      				CreateMode: to.Ptr(armmysqlflexibleservers.CreateModeDefault),
      				HighAvailability: &armmysqlflexibleservers.HighAvailability{
      					Mode:                    to.Ptr(armmysqlflexibleservers.HighAvailabilityModeZoneRedundant),
      					StandbyAvailabilityZone: to.Ptr("3"),
      				},
      				Storage: &armmysqlflexibleservers.Storage{
      					AutoGrow:      to.Ptr(armmysqlflexibleservers.EnableStatusEnumDisabled),
      					Iops:          to.Ptr[int32](600),
      					StorageSizeGB: to.Ptr[int32](100),
      				},
      				Version: to.Ptr(armmysqlflexibleservers.ServerVersionFive7),
      			},
      			SKU: &armmysqlflexibleservers.SKU{
      				Name: to.Ptr("Standard_D2ds_v4"),
      				Tier: to.Ptr(armmysqlflexibleservers.SKUTierGeneralPurpose),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fmysql%2Farmmysqlflexibleservers%2Fv1.0.0/sdk/resourcemanager/mysql/armmysqlflexibleservers/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { MySQLManagementFlexibleServerClient } = require("@azure/arm-mysql-flexible");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates a new server or updates an existing server. The update action will overwrite the existing server.
       *
       * @summary Creates a new server or updates an existing server. The update action will overwrite the existing server.
       * x-ms-original-file: specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2021-05-01/examples/ServerCreate.json
       */
      async function createANewServer() {
        const subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
        const resourceGroupName = "testrg";
        const serverName = "mysqltestserver";
        const parameters = {
          administratorLogin: "cloudsa",
          administratorLoginPassword: "your_password",
          availabilityZone: "1",
          backup: { backupRetentionDays: 7, geoRedundantBackup: "Disabled" },
          createMode: "Default",
          highAvailability: { mode: "ZoneRedundant", standbyAvailabilityZone: "3" },
          location: "southeastasia",
          sku: { name: "Standard_D2ds_v4", tier: "GeneralPurpose" },
          storage: { autoGrow: "Disabled", iops: 600, storageSizeGB: 100 },
          tags: { num: "1" },
          version: "5.7",
        };
        const credential = new DefaultAzureCredential();
        const client = new MySQLManagementFlexibleServerClient(credential, subscriptionId);
        const result = await client.servers.beginCreateAndWait(resourceGroupName, serverName, parameters);
        console.log(result);
      }

      createANewServer().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-mysql-flexible_3.0.0/sdk/mysql/arm-mysql-flexible/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "sku": {
          "name": "Standard_D2ds_v4",
          "tier": "GeneralPurpose"
        },
        "properties": {
          "administratorLogin": "cloudsa",
          "storage": {
            "storageSizeGB": 100,
            "iops": 600,
            "autoGrow": "Enabled",
            "storageSku": "Premium_LRS"
          },
          "version": "5.7",
          "state": "Ready",
          "fullyQualifiedDomainName": "mysqltestserver.database.mysql.azure.com",
          "availabilityZone": "1",
          "maintenanceWindow": {
            "customWindow": "Disabled",
            "dayOfWeek": 0,
            "startHour": 0,
            "startMinute": 0
          },
          "replicationRole": "None",
          "replicaCapacity": 10,
          "network": {
            "publicNetworkAccess": "Enabled"
          },
          "backup": {
            "backupRetentionDays": 7,
            "geoRedundantBackup": "Disabled",
            "earliestRestoreDate": "2021-06-17T06:11:38.4150019+00:00"
          },
          "highAvailability": {
            "mode": "ZoneRedundant",
            "state": "Healthy",
            "standbyAvailabilityZone": "3"
          }
        },
        "location": "Southeast Asia",
        "tags": {
          "num": "1"
        },
        "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforMySQL/flexibleServers/mysqltestserver",
        "name": "mysqltestserver",
        "type": "Microsoft.DBforMySQL/flexibleServers"
      }
  - statusCode: "200"
    body: >-
      {
        "sku": {
          "name": "Standard_D2ds_v4",
          "tier": "GeneralPurpose"
        },
        "properties": {
          "administratorLogin": "cloudsa",
          "storage": {
            "storageSizeGB": 100,
            "iops": 600,
            "autoGrow": "Enabled",
            "storageSku": "Premium_LRS"
          },
          "version": "5.7",
          "state": "Ready",
          "fullyQualifiedDomainName": "mysqltestserver.database.mysql.azure.com",
          "availabilityZone": "1",
          "maintenanceWindow": {
            "customWindow": "Disabled",
            "dayOfWeek": 0,
            "startHour": 0,
            "startMinute": 0
          },
          "replicationRole": "None",
          "replicaCapacity": 10,
          "network": {
            "publicNetworkAccess": "Enabled"
          },
          "backup": {
            "backupRetentionDays": 7,
            "geoRedundantBackup": "Disabled",
            "earliestRestoreDate": "2021-06-17T06:11:38.4150019+00:00"
          },
          "highAvailability": {
            "mode": "ZoneRedundant",
            "state": "Healthy",
            "standbyAvailabilityZone": "3"
          }
        },
        "location": "Southeast Asia",
        "tags": {
          "num": "1"
        },
        "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforMySQL/flexibleServers/mysqltestserver",
        "name": "mysqltestserver",
        "type": "Microsoft.DBforMySQL/flexibleServers"
      }
  - statusCode: "202"
- name: Create a server as a point in time restore
  request:
    uri: PUT https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TargetResourceGroup/providers/Microsoft.DBforMySQL/flexibleServers/targetserver?api-version=2021-05-01
    body: >-
      {
        "location": "SoutheastAsia",
        "properties": {
          "restorePointInTime": "2021-06-24T00:00:37.467Z",
          "createMode": "PointInTimeRestore",
          "sourceServerResourceId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/SourceResourceGroup/providers/Microsoft.DBforMySQL/flexibleServers/sourceserver"
        },
        "sku": {
          "name": "Standard_D14_v2",
          "tier": "GeneralPurpose"
        },
        "tags": {
          "num": "1"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TargetResourceGroup/providers/Microsoft.DBforMySQL/flexibleServers/targetserver?api-version=2021-05-01

      {
        "location": "SoutheastAsia",
        "properties": {
          "restorePointInTime": "2021-06-24T00:00:37.467Z",
          "createMode": "PointInTimeRestore",
          "sourceServerResourceId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/SourceResourceGroup/providers/Microsoft.DBforMySQL/flexibleServers/sourceserver"
        },
        "sku": {
          "name": "Standard_D14_v2",
          "tier": "GeneralPurpose"
        },
        "tags": {
          "num": "1"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.resourcemanager.mysqlflexibleserver.models.CreateMode;
      import com.azure.resourcemanager.mysqlflexibleserver.models.Sku;
      import com.azure.resourcemanager.mysqlflexibleserver.models.SkuTier;
      import java.time.OffsetDateTime;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for Servers Create. */
      public final class Main {
          /*
           * x-ms-original-file: specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2021-05-01/examples/ServerCreateWithPointInTimeRestore.json
           */
          /**
           * Sample code: Create a server as a point in time restore.
           *
           * @param manager Entry point to MySqlManager.
           */
          public static void createAServerAsAPointInTimeRestore(
              com.azure.resourcemanager.mysqlflexibleserver.MySqlManager manager) {
              manager
                  .servers()
                  .define("targetserver")
                  .withRegion("SoutheastAsia")
                  .withExistingResourceGroup("TargetResourceGroup")
                  .withTags(mapOf("num", "1"))
                  .withSku(new Sku().withName("Standard_D14_v2").withTier(SkuTier.GENERAL_PURPOSE))
                  .withCreateMode(CreateMode.POINT_IN_TIME_RESTORE)
                  .withSourceServerResourceId(
                      "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/SourceResourceGroup/providers/Microsoft.DBforMySQL/flexibleServers/sourceserver")
                  .withRestorePointInTime(OffsetDateTime.parse("2021-06-24T00:00:37.467Z"))
                  .create();
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-mysqlflexibleserver_1.0.0-beta.2/sdk/mysqlflexibleserver/azure-resourcemanager-mysqlflexibleserver/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { MySQLManagementFlexibleServerClient } = require("@azure/arm-mysql-flexible");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates a new server or updates an existing server. The update action will overwrite the existing server.
       *
       * @summary Creates a new server or updates an existing server. The update action will overwrite the existing server.
       * x-ms-original-file: specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2021-05-01/examples/ServerCreateWithPointInTimeRestore.json
       */
      async function createAServerAsAPointInTimeRestore() {
        const subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
        const resourceGroupName = "TargetResourceGroup";
        const serverName = "targetserver";
        const parameters = {
          createMode: "PointInTimeRestore",
          location: "SoutheastAsia",
          restorePointInTime: new Date("2021-06-24T00:00:37.467Z"),
          sku: { name: "Standard_D14_v2", tier: "GeneralPurpose" },
          sourceServerResourceId:
            "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/SourceResourceGroup/providers/Microsoft.DBforMySQL/flexibleServers/sourceserver",
          tags: { num: "1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new MySQLManagementFlexibleServerClient(credential, subscriptionId);
        const result = await client.servers.beginCreateAndWait(resourceGroupName, serverName, parameters);
        console.log(result);
      }

      createAServerAsAPointInTimeRestore().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-mysql-flexible_3.0.0/sdk/mysql/arm-mysql-flexible/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "sku": {
          "name": "Standard_D2ds_v4",
          "tier": "GeneralPurpose"
        },
        "properties": {
          "administratorLogin": "adminuser",
          "storage": {
            "storageSizeGB": 20,
            "iops": 360,
            "autoGrow": "Enabled",
            "storageSku": "Premium_LRS"
          },
          "version": "5.7",
          "state": "Ready",
          "fullyQualifiedDomainName": "targetserver.database.mysql.azure.com",
          "availabilityZone": "1",
          "maintenanceWindow": {
            "customWindow": "Disabled",
            "dayOfWeek": 0,
            "startHour": 0,
            "startMinute": 0
          },
          "replicationRole": "None",
          "replicaCapacity": 10,
          "network": {
            "publicNetworkAccess": "Enabled"
          },
          "backup": {
            "backupRetentionDays": 7,
            "geoRedundantBackup": "Disabled",
            "earliestRestoreDate": "2021-06-24T00:15:24.00+00:00"
          },
          "highAvailability": {
            "mode": "Disabled",
            "state": "NotEnabled"
          }
        },
        "location": "Southeast Asia",
        "tags": {
          "num": "1"
        },
        "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TargetResourceGroup/providers/Microsoft.DBforMySQL/flexibleServers/targetserver",
        "name": "targetserver",
        "type": "Microsoft.DBforMySQL/flexibleServers"
      }
  - statusCode: "200"
    body: >-
      {
        "sku": {
          "name": "Standard_D2ds_v4",
          "tier": "GeneralPurpose"
        },
        "properties": {
          "administratorLogin": "adminuser",
          "storage": {
            "storageSizeGB": 20,
            "iops": 360,
            "autoGrow": "Enabled",
            "storageSku": "Premium_LRS"
          },
          "version": "5.7",
          "state": "Ready",
          "fullyQualifiedDomainName": "targetserver.database.mysql.azure.com",
          "availabilityZone": "1",
          "maintenanceWindow": {
            "customWindow": "Disabled",
            "dayOfWeek": 0,
            "startHour": 0,
            "startMinute": 0
          },
          "replicationRole": "None",
          "replicaCapacity": 10,
          "network": {
            "publicNetworkAccess": "Enabled"
          },
          "backup": {
            "backupRetentionDays": 7,
            "geoRedundantBackup": "Disabled",
            "earliestRestoreDate": "2021-06-24T00:15:24.00+00:00"
          },
          "highAvailability": {
            "mode": "Disabled",
            "state": "NotEnabled"
          }
        },
        "location": "Southeast Asia",
        "tags": {
          "num": "1"
        },
        "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TargetResourceGroup/providers/Microsoft.DBforMySQL/flexibleServers/targetserver",
        "name": "targetserver",
        "type": "Microsoft.DBforMySQL/flexibleServers"
      }
  - statusCode: "202"
- name: Create a replica server
  request:
    uri: PUT https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testgr/providers/Microsoft.DBforMySQL/flexibleServers/replica-server?api-version=2021-05-01
    body: >-
      {
        "location": "SoutheastAsia",
        "properties": {
          "createMode": "Replica",
          "sourceServerResourceId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testgr/providers/Microsoft.DBforMySQL/flexibleServers/source-server"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testgr/providers/Microsoft.DBforMySQL/flexibleServers/replica-server?api-version=2021-05-01

      {
        "location": "SoutheastAsia",
        "properties": {
          "createMode": "Replica",
          "sourceServerResourceId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testgr/providers/Microsoft.DBforMySQL/flexibleServers/source-server"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.resourcemanager.mysqlflexibleserver.models.CreateMode;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for Servers Create. */
      public final class Main {
          /*
           * x-ms-original-file: specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2021-05-01/examples/ServerCreateReplica.json
           */
          /**
           * Sample code: Create a replica server.
           *
           * @param manager Entry point to MySqlManager.
           */
          public static void createAReplicaServer(com.azure.resourcemanager.mysqlflexibleserver.MySqlManager manager) {
              manager
                  .servers()
                  .define("replica-server")
                  .withRegion("SoutheastAsia")
                  .withExistingResourceGroup("testgr")
                  .withCreateMode(CreateMode.REPLICA)
                  .withSourceServerResourceId(
                      "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testgr/providers/Microsoft.DBforMySQL/flexibleServers/source-server")
                  .create();
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-mysqlflexibleserver_1.0.0-beta.2/sdk/mysqlflexibleserver/azure-resourcemanager-mysqlflexibleserver/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { MySQLManagementFlexibleServerClient } = require("@azure/arm-mysql-flexible");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates a new server or updates an existing server. The update action will overwrite the existing server.
       *
       * @summary Creates a new server or updates an existing server. The update action will overwrite the existing server.
       * x-ms-original-file: specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2021-05-01/examples/ServerCreateReplica.json
       */
      async function createAReplicaServer() {
        const subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
        const resourceGroupName = "testgr";
        const serverName = "replica-server";
        const parameters = {
          createMode: "Replica",
          location: "SoutheastAsia",
          sourceServerResourceId:
            "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testgr/providers/Microsoft.DBforMySQL/flexibleServers/source-server",
        };
        const credential = new DefaultAzureCredential();
        const client = new MySQLManagementFlexibleServerClient(credential, subscriptionId);
        const result = await client.servers.beginCreateAndWait(resourceGroupName, serverName, parameters);
        console.log(result);
      }

      createAReplicaServer().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-mysql-flexible_3.0.0/sdk/mysql/arm-mysql-flexible/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "sku": {
          "name": "Standard_D2ds_v4",
          "tier": "GeneralPurpose"
        },
        "properties": {
          "administratorLogin": "cloudsa",
          "storage": {
            "storageSizeGB": 20,
            "iops": 360,
            "autoGrow": "Enabled",
            "storageSku": "Premium_LRS"
          },
          "version": "5.7",
          "state": "Ready",
          "fullyQualifiedDomainName": "replica-server.database.mysql.azure.com",
          "sourceServerResourceId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testgr/providers/Microsoft.DBforMySQL/flexibleServers/source-server",
          "availabilityZone": "3",
          "maintenanceWindow": {
            "customWindow": "Disabled",
            "dayOfWeek": 0,
            "startHour": 0,
            "startMinute": 0
          },
          "replicationRole": "Replica",
          "replicaCapacity": 0,
          "network": {
            "publicNetworkAccess": "Enabled"
          },
          "backup": {
            "backupRetentionDays": 7,
            "geoRedundantBackup": "Disabled",
            "earliestRestoreDate": "2021-06-24T08:19:18.5729164+00:00"
          },
          "highAvailability": {
            "mode": "Disabled",
            "state": "NotEnabled"
          }
        },
        "location": "Southeast Asia",
        "tags": {
          "ElasticServer": "1"
        },
        "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testgr/providers/Microsoft.DBforMySQL/flexibleServers/replica-server",
        "name": "replica-server",
        "type": "Microsoft.DBforMySQL/flexibleServers"
      }
  - statusCode: "200"
    body: >-
      {
        "sku": {
          "name": "Standard_D2ds_v4",
          "tier": "GeneralPurpose"
        },
        "properties": {
          "administratorLogin": "cloudsa",
          "storage": {
            "storageSizeGB": 20,
            "iops": 360,
            "autoGrow": "Enabled",
            "storageSku": "Premium_LRS"
          },
          "version": "5.7",
          "state": "Ready",
          "fullyQualifiedDomainName": "replica-server.database.mysql.azure.com",
          "sourceServerResourceId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testgr/providers/Microsoft.DBforMySQL/flexibleServers/source-server",
          "availabilityZone": "3",
          "maintenanceWindow": {
            "customWindow": "Disabled",
            "dayOfWeek": 0,
            "startHour": 0,
            "startMinute": 0
          },
          "replicationRole": "Replica",
          "replicaCapacity": 0,
          "network": {
            "publicNetworkAccess": "Enabled"
          },
          "backup": {
            "backupRetentionDays": 7,
            "geoRedundantBackup": "Disabled",
            "earliestRestoreDate": "2021-06-24T08:19:18.5729164+00:00"
          },
          "highAvailability": {
            "mode": "Disabled",
            "state": "NotEnabled"
          }
        },
        "location": "Southeast Asia",
        "tags": {
          "ElasticServer": "1"
        },
        "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testgr/providers/Microsoft.DBforMySQL/flexibleServers/replica-server",
        "name": "replica-server",
        "type": "Microsoft.DBforMySQL/flexibleServers"
      }
  - statusCode: "202"
- name: Create a server with byok
  request:
    uri: PUT https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforMySQL/flexibleServers/mysqltestserver?api-version=2021-05-01
    body: >-
      {
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
            "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-identity": {}
          }
        },
        "sku": {
          "name": "Standard_D2ds_v4",
          "tier": "GeneralPurpose"
        },
        "properties": {
          "administratorLogin": "cloudsa",
          "administratorLoginPassword": "your_password",
          "availabilityZone": "1",
          "version": "5.7",
          "createMode": "Default",
          "storage": {
            "storageSizeGB": 100,
            "iops": 600,
            "autoGrow": "Disabled"
          },
          "backup": {
            "backupRetentionDays": 7,
            "geoRedundantBackup": "Disabled"
          },
          "highAvailability": {
            "mode": "ZoneRedundant",
            "standbyAvailabilityZone": "3"
          },
          "dataEncryption": {
            "type": "AzureKeyVault",
            "primaryUserAssignedIdentityId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-identity",
            "primaryKeyURI": "https://test.vault.azure.net/keys/key/c8a92236622244c0a4fdb892666f671a",
            "geoBackupUserAssignedIdentityId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-geo-identity",
            "geoBackupKeyURI": "https://test-geo.vault.azure.net/keys/key/c8a92236622244c0a4fdb892666f671a"
          }
        },
        "location": "southeastasia",
        "tags": {
          "num": "1"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforMySQL/flexibleServers/mysqltestserver?api-version=2021-05-01

      {
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
            "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-identity": {}
          }
        },
        "sku": {
          "name": "Standard_D2ds_v4",
          "tier": "GeneralPurpose"
        },
        "properties": {
          "administratorLogin": "cloudsa",
          "administratorLoginPassword": "your_password",
          "availabilityZone": "1",
          "version": "5.7",
          "createMode": "Default",
          "storage": {
            "storageSizeGB": 100,
            "iops": 600,
            "autoGrow": "Disabled"
          },
          "backup": {
            "backupRetentionDays": 7,
            "geoRedundantBackup": "Disabled"
          },
          "highAvailability": {
            "mode": "ZoneRedundant",
            "standbyAvailabilityZone": "3"
          },
          "dataEncryption": {
            "type": "AzureKeyVault",
            "primaryUserAssignedIdentityId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-identity",
            "primaryKeyURI": "https://test.vault.azure.net/keys/key/c8a92236622244c0a4fdb892666f671a",
            "geoBackupUserAssignedIdentityId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-geo-identity",
            "geoBackupKeyURI": "https://test-geo.vault.azure.net/keys/key/c8a92236622244c0a4fdb892666f671a"
          }
        },
        "location": "southeastasia",
        "tags": {
          "num": "1"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.serializer.SerializerFactory;
      import com.azure.core.util.serializer.SerializerEncoding;
      import com.azure.resourcemanager.mysqlflexibleserver.models.Backup;
      import com.azure.resourcemanager.mysqlflexibleserver.models.CreateMode;
      import com.azure.resourcemanager.mysqlflexibleserver.models.DataEncryption;
      import com.azure.resourcemanager.mysqlflexibleserver.models.DataEncryptionType;
      import com.azure.resourcemanager.mysqlflexibleserver.models.EnableStatusEnum;
      import com.azure.resourcemanager.mysqlflexibleserver.models.HighAvailability;
      import com.azure.resourcemanager.mysqlflexibleserver.models.HighAvailabilityMode;
      import com.azure.resourcemanager.mysqlflexibleserver.models.Identity;
      import com.azure.resourcemanager.mysqlflexibleserver.models.ManagedServiceIdentityType;
      import com.azure.resourcemanager.mysqlflexibleserver.models.ServerVersion;
      import com.azure.resourcemanager.mysqlflexibleserver.models.Sku;
      import com.azure.resourcemanager.mysqlflexibleserver.models.SkuTier;
      import com.azure.resourcemanager.mysqlflexibleserver.models.Storage;
      import java.io.IOException;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for Servers Create. */
      public final class Main {
          /*
           * x-ms-original-file: specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2021-05-01/examples/ServerCreateWithBYOK.json
           */
          /**
           * Sample code: Create a server with byok.
           *
           * @param manager Entry point to MySqlManager.
           */
          public static void createAServerWithByok(com.azure.resourcemanager.mysqlflexibleserver.MySqlManager manager)
              throws IOException {
              manager
                  .servers()
                  .define("mysqltestserver")
                  .withRegion("southeastasia")
                  .withExistingResourceGroup("testrg")
                  .withTags(mapOf("num", "1"))
                  .withIdentity(
                      new Identity()
                          .withType(ManagedServiceIdentityType.USER_ASSIGNED)
                          .withUserAssignedIdentities(
                              mapOf(
                                  "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-identity",
                                  SerializerFactory
                                      .createDefaultManagementSerializerAdapter()
                                      .deserialize("{}", Object.class, SerializerEncoding.JSON))))
                  .withSku(new Sku().withName("Standard_D2ds_v4").withTier(SkuTier.GENERAL_PURPOSE))
                  .withAdministratorLogin("cloudsa")
                  .withAdministratorLoginPassword("your_password")
                  .withVersion(ServerVersion.FIVE_SEVEN)
                  .withAvailabilityZone("1")
                  .withCreateMode(CreateMode.DEFAULT)
                  .withDataEncryption(
                      new DataEncryption()
                          .withPrimaryUserAssignedIdentityId(
                              "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-identity")
                          .withPrimaryKeyUri("https://test.vault.azure.net/keys/key/c8a92236622244c0a4fdb892666f671a")
                          .withGeoBackupUserAssignedIdentityId(
                              "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-geo-identity")
                          .withGeoBackupKeyUri("https://test-geo.vault.azure.net/keys/key/c8a92236622244c0a4fdb892666f671a")
                          .withType(DataEncryptionType.AZURE_KEY_VAULT))
                  .withStorage(new Storage().withStorageSizeGB(100).withIops(600).withAutoGrow(EnableStatusEnum.DISABLED))
                  .withBackup(new Backup().withBackupRetentionDays(7).withGeoRedundantBackup(EnableStatusEnum.DISABLED))
                  .withHighAvailability(
                      new HighAvailability().withMode(HighAvailabilityMode.ZONE_REDUNDANT).withStandbyAvailabilityZone("3"))
                  .create();
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-mysqlflexibleserver_1.0.0-beta.2/sdk/mysqlflexibleserver/azure-resourcemanager-mysqlflexibleserver/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "sku": {
          "name": "Standard_D2ds_v4",
          "tier": "GeneralPurpose"
        },
        "properties": {
          "administratorLogin": "cloudsa",
          "storage": {
            "storageSizeGB": 100,
            "iops": 600,
            "autoGrow": "Enabled",
            "storageSku": "Premium_LRS"
          },
          "version": "5.7",
          "state": "Ready",
          "fullyQualifiedDomainName": "mysqltestserver.database.mysql.azure.com",
          "availabilityZone": "1",
          "maintenanceWindow": {
            "customWindow": "Disabled",
            "dayOfWeek": 0,
            "startHour": 0,
            "startMinute": 0
          },
          "replicationRole": "None",
          "replicaCapacity": 10,
          "network": {
            "publicNetworkAccess": "Enabled"
          },
          "backup": {
            "backupRetentionDays": 7,
            "geoRedundantBackup": "Disabled",
            "earliestRestoreDate": "2021-06-17T06:11:38.4150019+00:00"
          },
          "highAvailability": {
            "mode": "ZoneRedundant",
            "state": "Healthy",
            "standbyAvailabilityZone": "3"
          }
        },
        "location": "Southeast Asia",
        "tags": {
          "num": "1"
        },
        "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforMySQL/flexibleServers/mysqltestserver",
        "name": "mysqltestserver",
        "type": "Microsoft.DBforMySQL/flexibleServers"
      }
  - statusCode: "200"
    body: >-
      {
        "sku": {
          "name": "Standard_D2ds_v4",
          "tier": "GeneralPurpose"
        },
        "properties": {
          "administratorLogin": "cloudsa",
          "storage": {
            "storageSizeGB": 100,
            "iops": 600,
            "autoGrow": "Enabled",
            "storageSku": "Premium_LRS"
          },
          "version": "5.7",
          "state": "Ready",
          "fullyQualifiedDomainName": "mysqltestserver.database.mysql.azure.com",
          "availabilityZone": "1",
          "maintenanceWindow": {
            "customWindow": "Disabled",
            "dayOfWeek": 0,
            "startHour": 0,
            "startMinute": 0
          },
          "replicationRole": "None",
          "replicaCapacity": 10,
          "network": {
            "publicNetworkAccess": "Enabled"
          },
          "backup": {
            "backupRetentionDays": 7,
            "geoRedundantBackup": "Disabled",
            "earliestRestoreDate": "2021-06-17T06:11:38.4150019+00:00"
          },
          "highAvailability": {
            "mode": "ZoneRedundant",
            "state": "Healthy",
            "standbyAvailabilityZone": "3"
          }
        },
        "location": "Southeast Asia",
        "tags": {
          "num": "1"
        },
        "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforMySQL/flexibleServers/mysqltestserver",
        "name": "mysqltestserver",
        "type": "Microsoft.DBforMySQL/flexibleServers"
      }
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Creates a new server or updates an existing server. The update action will overwrite the existing server.
errorCodes: []
