### YamlMime:RESTOperation
uid: management.azure.com.mysql.flexibleserver.servers.restart
name: Restart
service: MySQL
groupName: Servers
apiVersion: 2021-05-01
summary: Restarts a server.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/restart?api-version=2021-05-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
- name: 202 Accepted
  description: Accepted
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: restartWithFailover
    in: body
    description: Whether or not failover to standby server when restarting a server with high availability enabled.
    types:
    - uid: EnableStatusEnum
  - name: maxFailoverSeconds
    in: body
    description: The maximum allowed failover time in seconds.
    types:
    - uid: integer
requestHeader: []
definitions:
- name: CloudError
  description: An error response from the Batch service.
  kind: object
  properties:
  - name: error
    description: "Error Response  \nThe resource management error response."
    types:
    - uid: ErrorResponse
- name: ServerRestartParameter
  description: Server restart parameters.
  kind: object
  properties:
  - name: restartWithFailover
    description: Whether or not failover to standby server when restarting a server with high availability enabled.
    types:
    - uid: EnableStatusEnum
  - name: maxFailoverSeconds
    description: The maximum allowed failover time in seconds.
    types:
    - uid: integer
- name: ErrorResponse
  description: Error Response
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: EnableStatusEnum
  description: Enum to indicate whether value is 'Enabled' or 'Disabled'
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Restart a server
  request:
    uri: POST https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforMySQL/flexibleServers/testserver/restart?api-version=2021-05-01
    body: >-
      {
        "restartWithFailover": "Enabled",
        "maxFailoverSeconds": 60
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforMySQL/flexibleServers/testserver/restart?api-version=2021-05-01

      {
        "restartWithFailover": "Enabled",
        "maxFailoverSeconds": 60
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.mysqlflexibleserver.models.EnableStatusEnum;
      import com.azure.resourcemanager.mysqlflexibleserver.models.ServerRestartParameter;

      /** Samples for Servers Restart. */
      public final class Main {
          /*
           * x-ms-original-file: specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2021-05-01/examples/ServerRestart.json
           */
          /**
           * Sample code: Restart a server.
           *
           * @param manager Entry point to MySqlManager.
           */
          public static void restartAServer(com.azure.resourcemanager.mysqlflexibleserver.MySqlManager manager) {
              manager
                  .servers()
                  .restart(
                      "TestGroup",
                      "testserver",
                      new ServerRestartParameter()
                          .withRestartWithFailover(EnableStatusEnum.ENABLED)
                          .withMaxFailoverSeconds(60),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-mysqlflexibleserver_1.0.0-beta.2/sdk/mysqlflexibleserver/azure-resourcemanager-mysqlflexibleserver/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armmysqlflexibleservers_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/mysql/armmysqlflexibleservers"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2021-05-01/examples/ServerRestart.json
      func ExampleServersClient_BeginRestart() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armmysqlflexibleservers.NewServersClient("ffffffff-ffff-ffff-ffff-ffffffffffff", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginRestart(ctx,
      		"TestGroup",
      		"testserver",
      		armmysqlflexibleservers.ServerRestartParameter{
      			MaxFailoverSeconds:  to.Ptr[int32](60),
      			RestartWithFailover: to.Ptr(armmysqlflexibleservers.EnableStatusEnumEnabled),
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	_, err = poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fmysql%2Farmmysqlflexibleservers%2Fv1.0.0/sdk/resourcemanager/mysql/armmysqlflexibleservers/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { MySQLManagementFlexibleServerClient } = require("@azure/arm-mysql-flexible");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Restarts a server.
       *
       * @summary Restarts a server.
       * x-ms-original-file: specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2021-05-01/examples/ServerRestart.json
       */
      async function restartAServer() {
        const subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
        const resourceGroupName = "TestGroup";
        const serverName = "testserver";
        const parameters = {
          maxFailoverSeconds: 60,
          restartWithFailover: "Enabled",
        };
        const credential = new DefaultAzureCredential();
        const client = new MySQLManagementFlexibleServerClient(credential, subscriptionId);
        const result = await client.servers.beginRestartAndWait(
          resourceGroupName,
          serverName,
          parameters
        );
        console.log(result);
      }

      restartAServer().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-mysql-flexible_3.0.0/sdk/mysql/arm-mysql-flexible/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about MySQL service - Restarts a server.
errorCodes: []
