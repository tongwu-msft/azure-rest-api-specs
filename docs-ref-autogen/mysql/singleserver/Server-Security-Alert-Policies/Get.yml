### YamlMime:RESTOperation
uid: management.azure.com.mysql.singleserver.serversecurityalertpolicies.get
name: Get
service: MySQL
groupName: Server Security Alert Policies
apiVersion: 2017-12-01
summary: Get a server's security alert policy.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/Default?api-version=2017-12-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: securityAlertPolicyName
  in: path
  isRequired: true
  description: The name of the security alert policy.
  types:
  - uid: SecurityAlertPolicyName
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved the server threat detection policy.
  types:
  - uid: ServerSecurityAlertPolicy
- name: Other Status Codes
  description: Error response describing why the operation of getting security alert policies failed.
requestHeader: []
definitions:
- name: SecurityAlertPolicyName
  description: The name of the security alert policy.
  kind: enum
  properties:
  - name: Default
    types:
    - uid: string
- name: ServerSecurityAlertPolicy
  description: A server security alert policy.
  kind: object
  properties:
  - name: properties.state
    description: Specifies the state of the policy, whether it is enabled or disabled.
    types:
    - uid: ServerSecurityAlertPolicyState
  - name: properties.disabledAlerts
    description: 'Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly'
    types:
    - uid: string
      isArray: true
  - name: properties.emailAddresses
    description: Specifies an array of e-mail addresses to which the alert is sent.
    types:
    - uid: string
      isArray: true
  - name: properties.emailAccountAdmins
    description: Specifies that the alert is sent to the account administrators.
    types:
    - uid: boolean
  - name: properties.storageEndpoint
    description: Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.
    types:
    - uid: string
  - name: properties.storageAccountAccessKey
    description: Specifies the identifier key of the Threat Detection audit storage account.
    types:
    - uid: string
  - name: properties.retentionDays
    description: Specifies the number of days to keep in the Threat Detection audit logs.
    types:
    - uid: integer
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ServerSecurityAlertPolicyState
  description: Specifies the state of the policy, whether it is enabled or disabled.
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
examples:
- name: Get a server's threat detection policy
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-4799/providers/Microsoft.DBforMySQL/servers/securityalert-6440/securityAlertPolicies/Default?api-version=2017-12-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-4799/providers/Microsoft.DBforMySQL/servers/securityalert-6440/securityAlertPolicies/Default?api-version=2017-12-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.mysql.models.SecurityAlertPolicyName;

      /** Samples for ServerSecurityAlertPolicies Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2017-12-01/examples/ServerSecurityAlertsGet.json
           */
          /**
           * Sample code: Get a server's threat detection policy.
           *
           * @param manager Entry point to MySqlManager.
           */
          public static void getAServerSThreatDetectionPolicy(com.azure.resourcemanager.mysql.MySqlManager manager) {
              manager
                  .serverSecurityAlertPolicies()
                  .getWithResponse("securityalert-4799", "securityalert-6440", SecurityAlertPolicyName.DEFAULT, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-mysql_1.0.2/sdk/mysql/azure-resourcemanager-mysql/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armmysql_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/mysql/armmysql"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2017-12-01/examples/ServerSecurityAlertsGet.json
      func ExampleServerSecurityAlertPoliciesClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armmysql.NewServerSecurityAlertPoliciesClient("00000000-1111-2222-3333-444444444444", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"securityalert-4799",
      		"securityalert-6440",
      		armmysql.SecurityAlertPolicyNameDefault,
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fmysql%2Farmmysql%2Fv1.0.0/sdk/resourcemanager/mysql/armmysql/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { MySQLManagementClient } = require("@azure/arm-mysql");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Get a server's security alert policy.
       *
       * @summary Get a server's security alert policy.
       * x-ms-original-file: specification/mysql/resource-manager/Microsoft.DBforMySQL/stable/2017-12-01/examples/ServerSecurityAlertsGet.json
       */
      async function getAServerThreatDetectionPolicy() {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "securityalert-4799";
        const serverName = "securityalert-6440";
        const securityAlertPolicyName = "Default";
        const credential = new DefaultAzureCredential();
        const client = new MySQLManagementClient(credential, subscriptionId);
        const result = await client.serverSecurityAlertPolicies.get(
          resourceGroupName,
          serverName,
          securityAlertPolicyName
        );
        console.log(result);
      }

      getAServerThreatDetectionPolicy().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-mysql_5.0.1/sdk/mysql/arm-mysql/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-4799/providers/Microsoft.DBforMySQL/servers/securityalert-6440/securityAlertPolicies/default",
        "name": "Default",
        "type": "Microsoft.DBforMySQL/servers/securityAlertPolicies",
        "properties": {
          "state": "Disabled",
          "emailAccountAdmins": true,
          "emailAddresses": [
            "test@microsoft.com;user@microsoft.com"
          ],
          "disabledAlerts": [
            "Access_Anomaly"
          ],
          "retentionDays": 0,
          "storageEndpoint": "https://mystorage.blob.core.windows.net"
        }
      }
security: []
metadata:
  description: Learn more about MySQL service - Get a server's security alert policy.
errorCodes: []
