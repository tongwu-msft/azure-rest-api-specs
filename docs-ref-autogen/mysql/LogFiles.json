{
  "swagger": "2.0",
  "info": {
    "version": "2017-04-30-preview",
    "title": "MySQLManagementClient",
    "description": "The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, log files and configurations."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/logFiles": {
      "get": {
        "tags": [
          "LogFiles"
        ],
        "operationId": "LogFiles_ListByServer",
        "x-ms-examples": {
          "LogFileList": {
            "parameters": {
              "serverName": "testserver",
              "resourceGroupName": "TestGroup",
              "api-version": "2017-04-30-preview",
              "subscriptionId": "ffffffff-ffff-ffff-ffff-ffffffffffff"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "properties": {
                        "name": "mysql-slow-testserver-2017042102.log",
                        "sizeInKB": 1,
                        "createdTime": "0001-01-01T00:00:00+00:00",
                        "lastModifiedTime": "2017-04-21T03:02:23+00:00",
                        "type": "slowlog",
                        "url": "https://wasd2orcasseas1aelsfse0.file.core.windows.net/52bd047495b3459b95185a1738cbaeac/serverlogs/mysql-slow-testserver-2017042102.log?sv=2015-04-05&sr=f&sig=zt6C6CBMygNbwzbDw5qcU%2F3duOgP9ZERQ8aWJr7fnuM%3D&se=2017-04-21T04%3A02%3A33Z&sp=r"
                      },
                      "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforMySQL/servers/testserver/logFiles/mysql-slow-testserver-2017042102.log",
                      "name": "mysql-slow-testserver-2017042102.log",
                      "type": "Microsoft.DBforMySQL/servers/logFiles"
                    },
                    {
                      "properties": {
                        "name": "mysql-slow-testserver-2017042202.log",
                        "sizeInKB": 1,
                        "createdTime": "0001-01-01T00:00:00+00:00",
                        "lastModifiedTime": "2017-04-22T03:02:23+00:00",
                        "type": "slowlog",
                        "url": "https://wasd2orcasseas1aelsfse0.file.core.windows.net/52bd047495b3459b95185a1738cbaeac/serverlogs/mysql-slow-testserver-2017042202.log?sv=2015-04-05&sr=f&sig=zt6C6CBMygNbwzbDw5qcU%2F3duOgP9ZERQ8aWJr7fnuM%3D&se=2017-04-22T04%3A02%3A33Z&sp=r"
                      },
                      "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforMySQL/servers/testserver/logFiles/mysql-slow-testserver-2017042202.log",
                      "name": "mysql-slow-testserver-2017042202.log",
                      "type": "Microsoft.DBforMySQL/servers/logFiles"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "List all the log files in a given server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogFileListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "ServerVersion": {
      "type": "string",
      "description": "The version of a server.",
      "enum": [
        "5.6",
        "5.7"
      ],
      "x-ms-enum": {
        "name": "ServerVersion",
        "modelAsString": true
      }
    },
    "SslEnforcement": {
      "type": "string",
      "description": "Enable ssl enforcement or not when connect to server.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SslEnforcementEnum",
        "modelAsString": false
      }
    },
    "ProxyResource": {
      "description": "Resource properties.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "x-ms-azure-resource": true
    },
    "TrackedResource": {
      "description": "Resource properties including location and tags for track resources.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location the resource resides in."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "required": [
        "location"
      ]
    },
    "ServerProperties": {
      "properties": {
        "administratorLogin": {
          "type": "string",
          "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation)."
        },
        "storageMB": {
          "type": "integer",
          "format": "int64",
          "minimum": 1024,
          "description": "The maximum storage allowed for a server."
        },
        "version": {
          "$ref": "#/definitions/ServerVersion",
          "description": "Server version."
        },
        "sslEnforcement": {
          "$ref": "#/definitions/SslEnforcement",
          "description": "Enable ssl enforcement or not when connect to server."
        },
        "userVisibleState": {
          "type": "string",
          "description": "A state of a server that is visible to user.",
          "enum": [
            "Ready",
            "Dropping",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ServerState",
            "modelAsString": true
          }
        },
        "fullyQualifiedDomainName": {
          "type": "string",
          "description": "The fully qualified domain name of a server."
        }
      },
      "description": "The properties of a server."
    },
    "ServerPropertiesForCreate": {
      "discriminator": "createMode",
      "required": [
        "createMode"
      ],
      "properties": {
        "storageMB": {
          "type": "integer",
          "format": "int64",
          "minimum": 1024,
          "description": "The maximum storage allowed for a server."
        },
        "version": {
          "$ref": "#/definitions/ServerVersion",
          "description": "Server version."
        },
        "sslEnforcement": {
          "$ref": "#/definitions/SslEnforcement",
          "description": "Enable ssl enforcement or not when connect to server."
        },
        "createMode": {
          "type": "string",
          "description": "The mode to create a new server.",
          "enum": [
            "Default",
            "PointInTimeRestore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          }
        }
      },
      "description": "The properties used to create a new server."
    },
    "ServerPropertiesForDefaultCreate": {
      "x-ms-discriminator-value": "Default",
      "allOf": [
        {
          "$ref": "#/definitions/ServerPropertiesForCreate"
        }
      ],
      "properties": {
        "administratorLogin": {
          "type": "string",
          "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation)."
        },
        "administratorLoginPassword": {
          "type": "string",
          "format": "password",
          "description": "The password of the administrator login."
        }
      },
      "required": [
        "administratorLogin",
        "administratorLoginPassword"
      ],
      "description": "The properties used to create a new server."
    },
    "ServerPropertiesForRestore": {
      "x-ms-discriminator-value": "PointInTimeRestore",
      "allOf": [
        {
          "$ref": "#/definitions/ServerPropertiesForCreate"
        }
      ],
      "properties": {
        "sourceServerId": {
          "type": "string",
          "description": "The source server id to restore from."
        },
        "restorePointInTime": {
          "type": "string",
          "format": "date-time",
          "description": "Restore point creation time (ISO8601 format), specifying the time to restore from."
        }
      },
      "required": [
        "sourceServerId",
        "restorePointInTime"
      ],
      "description": "The properties to a new server by restoring from a backup."
    },
    "Sku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the sku, typically, a letter + Number code, e.g. P3."
        },
        "tier": {
          "type": "string",
          "description": "The tier of the particular SKU, e.g. Basic.",
          "enum": [
            "Basic",
            "Standard"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "The scale up/out capacity, representing server's compute units."
        },
        "size": {
          "type": "string",
          "description": "The size code, to be interpreted by resource as appropriate."
        },
        "family": {
          "type": "string",
          "description": "The family of hardware."
        }
      },
      "description": "Billing information related properties of a server."
    },
    "Server": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU (pricing tier) of the server."
        },
        "properties": {
          "$ref": "#/definitions/ServerProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of the server."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Represents a server."
    },
    "ServerForCreate": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU (pricing tier) of the server."
        },
        "properties": {
          "$ref": "#/definitions/ServerPropertiesForCreate",
          "x-ms-client-flatten": false,
          "description": "Properties of the server."
        },
        "location": {
          "type": "string",
          "description": "The location the resource resides in."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      },
      "required": [
        "properties",
        "location"
      ],
      "description": "Represents a server to be created."
    },
    "ServerUpdateParameters": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU (pricing tier) of the server."
        },
        "properties": {
          "properties": {
            "storageMB": {
              "type": "integer",
              "format": "int64",
              "minimum": 1024,
              "description": "The max storage allowed for a server."
            },
            "administratorLoginPassword": {
              "type": "string",
              "format": "password",
              "description": "The password of the administrator login."
            },
            "version": {
              "$ref": "#/definitions/ServerVersion",
              "description": "The version of a server."
            },
            "sslEnforcement": {
              "$ref": "#/definitions/SslEnforcement",
              "description": "Enable ssl enforcement or not when connect to server."
            }
          },
          "x-ms-client-flatten": true,
          "description": "The properties that can be updated for a server."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      },
      "description": "Parameters allowd to update for a server."
    },
    "ServerListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          },
          "description": "The list of servers"
        }
      },
      "description": "A list of servers."
    },
    "FirewallRuleProperties": {
      "properties": {
        "startIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
          "description": "The start IP address of the server firewall rule. Must be IPv4 format."
        },
        "endIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
          "description": "The end IP address of the server firewall rule. Must be IPv4 format."
        }
      },
      "required": [
        "startIpAddress",
        "endIpAddress"
      ],
      "description": "The properties of a server firewall rule."
    },
    "FirewallRule": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of a firewall rule."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Represents a server firewall rule."
    },
    "FirewallRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "The list of firewall rules in a server."
        }
      },
      "description": "A list of firewall rules."
    },
    "DatabaseProperties": {
      "properties": {
        "charset": {
          "type": "string",
          "description": "The charset of the database."
        },
        "collation": {
          "type": "string",
          "description": "The collation of the database."
        }
      },
      "description": "The properties of a database."
    },
    "Database": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of a database."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a Database."
    },
    "DatabaseListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "description": "The list of databases housed in a server"
        }
      },
      "description": "A List of databases."
    },
    "ConfigurationProperties": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the configuration."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Description of the configuration."
        },
        "defaultValue": {
          "type": "string",
          "readOnly": true,
          "description": "Default value of the configuration."
        },
        "dataType": {
          "type": "string",
          "readOnly": true,
          "description": "Data type of the configuration."
        },
        "allowedValues": {
          "type": "string",
          "readOnly": true,
          "description": "Allowed values of the configuration."
        },
        "source": {
          "type": "string",
          "description": "Source of the configuration."
        }
      },
      "description": "The properties of a configuration."
    },
    "Configuration": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of a configuration."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a Configuration."
    },
    "ConfigurationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Configuration"
          },
          "description": "The list of server configurations."
        }
      },
      "description": "A list of server configurations."
    },
    "OperationDisplay": {
      "properties": {
        "provider": {
          "type": "string",
          "readOnly": true,
          "description": "Operation resource provider name."
        },
        "resource": {
          "type": "string",
          "readOnly": true,
          "description": "Resource on which the operation is performed."
        },
        "operation": {
          "type": "string",
          "readOnly": true,
          "description": "Localized friendly name for the operation."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Operation description."
        }
      },
      "description": "Display metadata associated with the operation."
    },
    "Operation": {
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the operation being performed on this particular object."
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "readOnly": true,
          "description": "The localized display information for this particular operation or action."
        },
        "origin": {
          "type": "string",
          "readOnly": true,
          "description": "The intended executor of the operation.",
          "enum": [
            "NotSpecified",
            "user",
            "system"
          ],
          "x-ms-enum": {
            "name": "OperationOrigin",
            "modelAsString": true
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "x-ms-client-flatten": false,
          "description": "Additional descriptions for the operation."
        }
      },
      "description": "REST API operation definition."
    },
    "OperationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "The list of resource provider operations."
        }
      },
      "description": "A list of resource provider operations."
    },
    "LogFileProperties": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Log file name."
        },
        "sizeInKB": {
          "type": "integer",
          "format": "int64",
          "description": "Size of the log file."
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the log file."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last modified timestamp of the log file."
        },
        "type": {
          "type": "string",
          "description": "Type of the log file."
        },
        "url": {
          "type": "string",
          "description": "The url to download the log file from."
        }
      },
      "description": "The properties of a log file."
    },
    "LogFile": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the log file."
        },
        "properties": {
          "$ref": "#/definitions/LogFileProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of the log file."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a log file."
    },
    "LogFileListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogFile"
          },
          "description": "The list of log files."
        }
      },
      "description": "A list of log files."
    },
    "PerformanceTierServiceLevelObjectives": {
      "properties": {
        "id": {
          "type": "string",
          "description": "ID for the service level objective."
        },
        "edition": {
          "type": "string",
          "description": "Edition of the performance tier."
        },
        "dtu": {
          "type": "integer",
          "description": "Database throughput unit associated with the service level objective"
        },
        "storageMB": {
          "type": "integer",
          "description": "Maximum storage in MB associated with the service level objective"
        }
      },
      "description": "Service level objectives for performance tier."
    },
    "PerformanceTierProperties": {
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the performance tier."
        },
        "backupRetentionDays": {
          "type": "integer",
          "description": "Backup retention in days for the performance tier edition"
        },
        "serviceLevelObjectives": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerformanceTierServiceLevelObjectives"
          },
          "description": "Service level objectives associated with the performance tier"
        }
      },
      "description": "Performance tier properties"
    },
    "PerformanceTierListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerformanceTierProperties"
          },
          "description": "The list of performance tiers"
        }
      },
      "description": "A list of performance tiers."
    },
    "NameAvailabilityRequest": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name to verify."
        },
        "type": {
          "type": "string",
          "description": "Resource type used for verification."
        }
      },
      "description": "Request from client to check resource name availability."
    },
    "NameAvailability": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Error Message."
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates whether the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "Reason for name being unavailable."
        }
      },
      "description": "Represents a resource name availability."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription ID that identifies an Azure subscription."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for the request."
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
      "x-ms-parameter-location": "method"
    },
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server.",
      "x-ms-parameter-location": "method"
    },
    "FirewallRuleNameParameter": {
      "name": "firewallRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server firewall rule.",
      "x-ms-parameter-location": "method"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the database.",
      "x-ms-parameter-location": "method"
    },
    "ConfigurationNameParameter": {
      "name": "configurationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server configuration.",
      "x-ms-parameter-location": "method"
    },
    "LocationNameParameter": {
      "name": "locationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the location.",
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-name": "MySQL",
  "x-internal-toc-name": "Log Files"
}