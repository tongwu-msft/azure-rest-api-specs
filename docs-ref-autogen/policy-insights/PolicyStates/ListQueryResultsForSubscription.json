{
  "swagger": "2.0",
  "info": {
    "version": "2019-10-01",
    "title": "PolicyStatesClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults": {
      "post": {
        "operationId": "PolicyStates_ListQueryResultsForSubscription",
        "description": "Queries policy states for the resources under the subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/policyStatesResourceParameter"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/topParameter"
          },
          {
            "$ref": "#/parameters/orderByParameter"
          },
          {
            "$ref": "#/parameters/selectParameter"
          },
          {
            "$ref": "#/parameters/fromParameter"
          },
          {
            "$ref": "#/parameters/toParameter"
          },
          {
            "$ref": "#/parameters/filterParameter"
          },
          {
            "$ref": "#/parameters/applyParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results.",
            "schema": {
              "$ref": "#/definitions/PolicyStatesQueryResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/QueryFailure"
            }
          }
        },
        "x-ms-examples": {
          "Query latest at subscription scope": {
            "parameters": {
              "policyStatesResource": "latest",
              "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
              "api-version": "2019-10-01"
            },
            "responses": {
              "200": {
                "body": {
                  "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest",
                  "@odata.count": 2,
                  "value": [
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "timestamp": "2019-10-09T17:48:05Z",
                      "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourceGroups/myrg1/providers/Microsoft.Network/publicIPAddresses/mypubip1",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.Authorization/policyAssignments/Enable Monitoring in Azure Security Center",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6",
                      "effectiveParameters": null,
                      "isCompliant": false,
                      "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
                      "resourceType": "/Microsoft.Network/publicIPAddresses",
                      "resourceLocation": "eastus",
                      "resourceGroup": "myrg1",
                      "resourceTags": "tbd",
                      "policyAssignmentName": "Enable Monitoring in Azure Security Center",
                      "policyAssignmentOwner": "tbd",
                      "policyAssignmentParameters": "{}",
                      "policyAssignmentScope": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852",
                      "policyDefinitionName": "9daedab3-fb2d-461e-b861-71790eead4f6",
                      "policyDefinitionAction": "AuditIfNotExists",
                      "policyDefinitionCategory": "tbd",
                      "policySetDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
                      "policySetDefinitionName": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
                      "policySetDefinitionOwner": null,
                      "policySetDefinitionCategory": null,
                      "policySetDefinitionParameters": null,
                      "managementGroupIds": "mymg,fff988bf-fff1-ffff-fffb-fffcd011db47",
                      "policyDefinitionReferenceId": null,
                      "complianceState": "NonCompliant",
                      "policyDefinitionGroupNames": [
                        "myGroup"
                      ]
                    },
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "timestamp": "2019-10-09T17:48:05Z",
                      "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourceGroups/myrg1/providers/Microsoft.Network/publicIPAddresses/mypubip1",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.Authorization/policyAssignments/9ac09b0657d942e5ad4041a6",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6",
                      "effectiveParameters": null,
                      "isCompliant": false,
                      "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
                      "resourceType": "/Microsoft.Network/publicIPAddresses",
                      "resourceLocation": "eastus",
                      "resourceGroup": "myrg1",
                      "resourceTags": "tbd",
                      "policyAssignmentName": "9ac09b0657d942e5ad4041a6",
                      "policyAssignmentOwner": "tbd",
                      "policyAssignmentParameters": "{}",
                      "policyAssignmentScope": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852",
                      "policyDefinitionName": "9daedab3-fb2d-461e-b861-71790eead4f6",
                      "policyDefinitionAction": "AuditIfNotExists",
                      "policyDefinitionCategory": "tbd",
                      "policySetDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
                      "policySetDefinitionName": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
                      "policySetDefinitionOwner": null,
                      "policySetDefinitionCategory": null,
                      "policySetDefinitionParameters": null,
                      "managementGroupIds": "mymg,fff988bf-fff1-ffff-fffb-fffcd011db47",
                      "policyDefinitionReferenceId": null,
                      "complianceState": "NonCompliant",
                      "policyDefinitionGroupNames": [
                        "myGroup"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "Time range; sort, select and limit": {
            "parameters": {
              "policyStatesResource": "latest",
              "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
              "api-version": "2019-10-01",
              "$from": "2019-10-05T18:00:00Z",
              "$to": "2019-10-06T18:00:00Z",
              "$orderby": "Timestamp desc, PolicyAssignmentId asc, SubscriptionId asc, ResourceGroup asc, ResourceId",
              "$select": "Timestamp, PolicyAssignmentId, PolicyDefinitionId, SubscriptionId, ResourceGroup, ResourceId, policyDefinitionGroupNames",
              "$top": 2
            },
            "responses": {
              "200": {
                "body": {
                  "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest",
                  "@odata.count": 2,
                  "value": [
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "timestamp": "2019-10-06T17:58:00Z",
                      "policyAssignmentId": "/providers/Microsoft.Management/managementGroups/8cb1e007-947f-423a-ad0c-7ab7dc7d0255/providers/Microsoft.Authorization/policyAssignments/1654a0254ab34920a60f94eb",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/655cb504-bcee-4362-bd4c-402e6aa38759",
                      "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
                      "resourceGroup": "myrg1",
                      "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourceGroups/myrg1/providers/Microsoft.Storage/storageAccounts/mysa1",
                      "policyDefinitionGroupNames": [
                        "myGroup"
                      ]
                    },
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "timestamp": "2019-10-06T17:58:00Z",
                      "policyAssignmentId": "/providers/Microsoft.Management/managementGroups/8cb1e007-947f-423a-ad0c-7ab7dc7d0255/providers/Microsoft.Authorization/policyAssignments/1654a0254ab34920a60f94eb",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/655cb504-bcee-4362-bd4c-402e6aa38759",
                      "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
                      "resourceGroup": "myrg2",
                      "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourceGroups/myrg2/providers/Microsoft.Storage/storageAccounts/mysa2",
                      "policyDefinitionGroupNames": []
                    }
                  ]
                }
              }
            }
          },
          "Filter and group with aggregate": {
            "parameters": {
              "policyStatesResource": "latest",
              "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
              "api-version": "2019-10-01",
              "$from": "2019-10-05T18:00:00Z",
              "$filter": "IsCompliant eq false and (PolicyDefinitionAction eq 'audit' or PolicyDefinitionAction eq 'deny')",
              "$apply": "groupby((PolicyAssignmentId, PolicyDefinitionId, PolicyDefinitionAction, ResourceId), aggregate($count as NumAuditDenyNonComplianceRecords))",
              "$orderby": "NumAuditDenyNonComplianceRecords desc",
              "$top": 2
            },
            "responses": {
              "200": {
                "body": {
                  "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest",
                  "@odata.count": 2,
                  "value": [
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/e46af646ebdb461dba708e01",
                      "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/c8b79b49-a579-4045-984e-1b249ab8b474",
                      "policyDefinitionAction": "audit",
                      "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourcegroups/myrg/providers/microsoft.classiccompute/domainnames/myDomainName",
                      "NumAuditDenyNonComplianceRecords": 10
                    },
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/ddd8ef92e3714a5ea3d208c1",
                      "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
                      "policyDefinitionAction": "audit",
                      "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourcegroups/myrg/providers/microsoft.classiccompute/domainnames/myDomainName",
                      "NumAuditDenyNonComplianceRecords": 10
                    }
                  ]
                }
              }
            }
          },
          "Filter and group without aggregate": {
            "parameters": {
              "policyStatesResource": "latest",
              "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
              "api-version": "2019-10-01",
              "$from": "2019-10-05T18:00:00Z",
              "$filter": "IsCompliant eq false and (PolicyDefinitionAction ne 'audit' and PolicyDefinitionAction ne 'append')",
              "$apply": "groupby((PolicyAssignmentId, PolicyDefinitionId, PolicyDefinitionAction, ResourceId))",
              "$top": 2
            },
            "responses": {
              "200": {
                "body": {
                  "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest",
                  "@odata.count": 2,
                  "value": [
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/enable monitoring in azure security center",
                      "policyDefinitionId": "/providers/microsoft.authorization/policydefinitions/44452482-524f-4bf4-b852-0bff7cc4a3ed",
                      "policyDefinitionAction": "auditifnotexists",
                      "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourcegroups/myrg/providers/microsoft.network/virtualnetworks/vnet"
                    },
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/89b27f38-e9e4-4468-ab81-801c84b8c017",
                      "policyDefinitionId": "/providers/microsoft.authorization/policydefinitions/44452482-524f-4bf4-b852-0bff7cc4a3ed",
                      "policyDefinitionAction": "auditifnotexists",
                      "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourcegroups/myrg/providers/microsoft.network/virtualnetworks/vnet"
                    }
                  ]
                }
              }
            }
          },
          "Filter and aggregate only": {
            "parameters": {
              "policyStatesResource": "latest",
              "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
              "api-version": "2019-10-01",
              "$from": "2019-10-05T18:00:00Z",
              "$filter": "PolicyDefinitionAction eq 'deny'",
              "$apply": "aggregate($count as NumDenyStates)"
            },
            "responses": {
              "200": {
                "body": {
                  "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest",
                  "@odata.count": 1,
                  "value": [
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "NumDenyStates": 6
                    }
                  ]
                }
              }
            }
          },
          "Filter and multiple groups": {
            "parameters": {
              "policyStatesResource": "latest",
              "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
              "api-version": "2019-10-01",
              "$filter": "IsCompliant eq false",
              "$apply": "groupby((PolicyAssignmentId, PolicySetDefinitionId, PolicyDefinitionId, PolicyDefinitionReferenceId, ResourceId))/groupby((PolicyAssignmentId, PolicySetDefinitionId, PolicyDefinitionId, PolicyDefinitionReferenceId), aggregate($count as NumNonCompliantResources))",
              "$orderby": "NumNonCompliantResources desc",
              "$top": 10
            },
            "responses": {
              "200": {
                "body": {
                  "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest",
                  "@odata.count": 10,
                  "value": [
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/f4cc58b7db524a9799381531",
                      "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/12b58873-e0f8-4b95-936c-86cbe7c9d697",
                      "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
                      "policyDefinitionReferenceId": "14799174781370023846",
                      "NumNonCompliantResources": 557
                    },
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/f4cc58b7db524a9799381531",
                      "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/12b58873-e0f8-4b95-936c-86cbe7c9d697",
                      "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
                      "policyDefinitionReferenceId": "1679708035638239273",
                      "NumNonCompliantResources": 557
                    },
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/ddd8ef92e3714a5ea3d208c1",
                      "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/12b58873-e0f8-4b95-936c-86cbe7c9d697",
                      "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
                      "policyDefinitionReferenceId": "14799174781370023846",
                      "NumNonCompliantResources": 557
                    },
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/ddd8ef92e3714a5ea3d208c1",
                      "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/12b58873-e0f8-4b95-936c-86cbe7c9d697",
                      "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
                      "policyDefinitionReferenceId": "1679708035638239273",
                      "NumNonCompliantResources": 557
                    },
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/d9da7e80af6344ab9d342aa7",
                      "policySetDefinitionId": "",
                      "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
                      "policyDefinitionReferenceId": "",
                      "NumNonCompliantResources": 557
                    },
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/dcda79d769674aea8bfcaa49",
                      "policySetDefinitionId": "",
                      "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/c8b79b49-a579-4045-984e-1b249ab8b474",
                      "policyDefinitionReferenceId": "",
                      "NumNonCompliantResources": 557
                    },
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/3f3c4330183b4e218fe6fd29",
                      "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/3e3807c1-65c9-49e0-a406-82d8ae3e338c",
                      "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
                      "policyDefinitionReferenceId": "",
                      "NumNonCompliantResources": 552
                    },
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/e46af646ebdb461dba708e01",
                      "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/a03db67e-a286-43c3-9098-b2da83d361ad",
                      "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/c8b79b49-a579-4045-984e-1b249ab8b474",
                      "policyDefinitionReferenceId": "8935913113203900114",
                      "NumNonCompliantResources": 544
                    },
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/providers/microsoft.management/managementgroups/mymg/providers/microsoft.authorization/policyassignments/8174043a1e2849179635b874",
                      "policySetDefinitionId": "",
                      "policyDefinitionId": "/providers/microsoft.management/managementgroups/mymg/providers/microsoft.authorization/policydefinitions/72c0c41a-c752-4bc0-9c61-0d6adc567066",
                      "policyDefinitionReferenceId": "",
                      "NumNonCompliantResources": 526
                    },
                    {
                      "@odata.id": null,
                      "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
                      "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/ddd8ef92e3714a5ea3d208c1",
                      "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/12b58873-e0f8-4b95-936c-86cbe7c9d697",
                      "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/c8b79b49-a579-4045-984e-1b249ab8b474",
                      "policyDefinitionReferenceId": "2124621540977569058",
                      "NumNonCompliantResources": 509
                    }
                  ]
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-internal-toc-name": "List Query Results For Subscription"
      }
    }
  },
  "definitions": {
    "PolicyStatesQueryResults": {
      "description": "Query results.",
      "properties": {
        "@odata.context": {
          "description": "OData context string; used by OData clients to resolve type information based on metadata.",
          "type": "string"
        },
        "@odata.count": {
          "description": "OData entity count; represents the number of policy state records returned.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "value": {
          "description": "Query results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyState"
          }
        }
      }
    },
    "PolicyState": {
      "type": "object",
      "description": "Policy state record.",
      "properties": {
        "@odata.id": {
          "description": "OData entity ID; always set to null since policy state records do not have an entity ID.",
          "type": "string"
        },
        "@odata.context": {
          "description": "OData context string; used by OData clients to resolve type information based on metadata.",
          "type": "string"
        },
        "timestamp": {
          "description": "Timestamp for the policy state record.",
          "type": "string",
          "format": "date-time"
        },
        "resourceId": {
          "description": "Resource ID.",
          "type": "string"
        },
        "policyAssignmentId": {
          "description": "Policy assignment ID.",
          "type": "string"
        },
        "policyDefinitionId": {
          "description": "Policy definition ID.",
          "type": "string"
        },
        "effectiveParameters": {
          "description": "Effective parameters for the policy assignment.",
          "type": "string"
        },
        "isCompliant": {
          "description": "Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead.",
          "type": "boolean"
        },
        "subscriptionId": {
          "description": "Subscription ID.",
          "type": "string"
        },
        "resourceType": {
          "description": "Resource type.",
          "type": "string"
        },
        "resourceLocation": {
          "description": "Resource location.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "Resource group name.",
          "type": "string"
        },
        "resourceTags": {
          "description": "List of resource tags.",
          "type": "string"
        },
        "policyAssignmentName": {
          "description": "Policy assignment name.",
          "type": "string"
        },
        "policyAssignmentOwner": {
          "description": "Policy assignment owner.",
          "type": "string"
        },
        "policyAssignmentParameters": {
          "description": "Policy assignment parameters.",
          "type": "string"
        },
        "policyAssignmentScope": {
          "description": "Policy assignment scope.",
          "type": "string"
        },
        "policyDefinitionName": {
          "description": "Policy definition name.",
          "type": "string"
        },
        "policyDefinitionAction": {
          "description": "Policy definition action, i.e. effect.",
          "type": "string"
        },
        "policyDefinitionCategory": {
          "description": "Policy definition category.",
          "type": "string"
        },
        "policySetDefinitionId": {
          "description": "Policy set definition ID, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "policySetDefinitionName": {
          "description": "Policy set definition name, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "policySetDefinitionOwner": {
          "description": "Policy set definition owner, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "policySetDefinitionCategory": {
          "description": "Policy set definition category, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "policySetDefinitionParameters": {
          "description": "Policy set definition parameters, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "managementGroupIds": {
          "description": "Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.",
          "type": "string"
        },
        "policyDefinitionReferenceId": {
          "description": "Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "complianceState": {
          "description": "Compliance state of the resource.",
          "type": "string"
        },
        "policyEvaluationDetails": {
          "description": "Policy evaluation details.",
          "type": "object",
          "$ref": "#/definitions/PolicyEvaluationDetails"
        },
        "policyDefinitionGroupNames": {
          "description": "Policy definition group names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": {
        "description": "The list of key/value pairs for the additional properties, in the format 'key':'value' where key = the field name, and value = the field value. By default this is not populated"
      }
    },
    "PolicyEvaluationDetails": {
      "type": "object",
      "description": "Policy evaluation details.",
      "properties": {
        "evaluatedExpressions": {
          "description": "Details of the evaluated expressions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressionEvaluationDetails"
          }
        },
        "ifNotExistsDetails": {
          "description": "Evaluation details of IfNotExists effect.",
          "type": "object",
          "$ref": "#/definitions/IfNotExistsEvaluationDetails"
        }
      }
    },
    "ExpressionEvaluationDetails": {
      "type": "object",
      "description": "Evaluation details of policy language expressions.",
      "properties": {
        "result": {
          "description": "Evaluation result.",
          "type": "string"
        },
        "expression": {
          "description": "Expression evaluated.",
          "type": "string"
        },
        "path": {
          "description": "Property path if the expression is a field or an alias.",
          "type": "string"
        },
        "expressionValue": {
          "description": "Value of the expression.",
          "type": "object"
        },
        "targetValue": {
          "description": "Target value to be compared with the expression value.",
          "type": "object"
        },
        "operator": {
          "description": "Operator to compare the expression value and the target value.",
          "type": "string"
        }
      }
    },
    "IfNotExistsEvaluationDetails": {
      "type": "object",
      "description": "Evaluation details of IfNotExists effect.",
      "properties": {
        "resourceId": {
          "description": "ID of the last evaluated resource for IfNotExists effect.",
          "type": "string"
        },
        "totalResources": {
          "description": "Total number of resources to which the existence condition is applicable.",
          "type": "integer"
        }
      }
    },
    "SummarizeResults": {
      "description": "Summarize action results.",
      "properties": {
        "@odata.context": {
          "description": "OData context string; used by OData clients to resolve type information based on metadata.",
          "type": "string"
        },
        "@odata.count": {
          "description": "OData entity count; represents the number of summaries returned; always set to 1.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1
        },
        "value": {
          "description": "Summarize action results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Summary"
          }
        }
      }
    },
    "Summary": {
      "description": "Summary results.",
      "properties": {
        "@odata.id": {
          "description": "OData entity ID; always set to null since summaries do not have an entity ID.",
          "type": "string"
        },
        "@odata.context": {
          "description": "OData context string; used by OData clients to resolve type information based on metadata.",
          "type": "string"
        },
        "results": {
          "description": "Compliance summary for all policy assignments.",
          "$ref": "#/definitions/SummaryResults"
        },
        "policyAssignments": {
          "description": "Policy assignments summary.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentSummary"
          }
        }
      }
    },
    "SummaryResults": {
      "description": "Compliance summary on a particular summary level.",
      "properties": {
        "queryResultsUri": {
          "description": "HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly.",
          "type": "string"
        },
        "nonCompliantResources": {
          "description": "Number of non-compliant resources.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "nonCompliantPolicies": {
          "description": "Number of non-compliant policies.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "resourceDetails": {
          "description": "The resources summary at this level.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComplianceDetail"
          }
        },
        "policyDetails": {
          "description": "The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComplianceDetail"
          }
        },
        "policyGroupDetails": {
          "description": "The policy definition group summary at this level.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComplianceDetail"
          }
        }
      }
    },
    "ComplianceDetail": {
      "description": "The compliance state rollup.",
      "properties": {
        "complianceState": {
          "description": "The compliance state.",
          "type": "string"
        },
        "count": {
          "description": "Summarized count value for this compliance state.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PolicyAssignmentSummary": {
      "description": "Policy assignment summary.",
      "properties": {
        "policyAssignmentId": {
          "description": "Policy assignment ID.",
          "type": "string"
        },
        "policySetDefinitionId": {
          "description": "Policy set definition ID, if the policy assignment is for a policy set.",
          "type": "string"
        },
        "results": {
          "description": "Compliance summary for the policy assignment.",
          "$ref": "#/definitions/SummaryResults"
        },
        "policyDefinitions": {
          "description": "Policy definitions summary.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDefinitionSummary"
          }
        },
        "policyGroups": {
          "description": "Policy definition group summary.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyGroupSummary"
          }
        }
      }
    },
    "PolicyDefinitionSummary": {
      "description": "Policy definition summary.",
      "properties": {
        "policyDefinitionId": {
          "description": "Policy definition ID.",
          "type": "string"
        },
        "policyDefinitionReferenceId": {
          "description": "Policy definition reference ID.",
          "type": "string"
        },
        "policyDefinitionGroupNames": {
          "description": "Policy definition group names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "effect": {
          "description": "Policy effect, i.e. policy definition action.",
          "type": "string"
        },
        "results": {
          "description": "Compliance summary for the policy definition.",
          "$ref": "#/definitions/SummaryResults"
        }
      }
    },
    "PolicyGroupSummary": {
      "description": "Policy definition group summary.",
      "properties": {
        "policyGroupName": {
          "description": "Policy group name.",
          "type": "string"
        },
        "results": {
          "description": "Compliance summary for the policy definition group.",
          "$ref": "#/definitions/SummaryResults"
        }
      }
    },
    "QueryFailure": {
      "description": "Error response.",
      "properties": {
        "error": {
          "description": "Error definition.",
          "properties": {
            "code": {
              "description": "Service specific error code which serves as the substatus for the HTTP error code.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "Description of the error.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "OperationsListResults": {
      "description": "List of available operations.",
      "properties": {
        "@odata.count": {
          "description": "OData entity count; represents the number of operations returned.",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "value": {
          "description": "List of available operations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        }
      }
    },
    "Operation": {
      "description": "Operation definition.",
      "properties": {
        "name": {
          "description": "Operation name.",
          "type": "string"
        },
        "display": {
          "description": "Display metadata associated with the operation.",
          "properties": {
            "provider": {
              "description": "Resource provider name.",
              "type": "string"
            },
            "resource": {
              "description": "Resource name on which the operation is performed.",
              "type": "string"
            },
            "operation": {
              "description": "Operation name.",
              "type": "string"
            },
            "description": {
              "description": "Operation description.",
              "type": "string"
            }
          }
        }
      }
    },
    "MetadataDocument": {
      "description": "Metadata XML document.",
      "type": "string"
    }
  },
  "parameters": {
    "policyStatesResourceParameter": {
      "name": "policyStatesResource",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "default",
        "latest"
      ],
      "x-ms-enum": {
        "name": "PolicyStatesResource",
        "modelAsString": true
      },
      "description": "The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s).",
      "x-ms-parameter-location": "method"
    },
    "policyStatesSummaryResourceParameter": {
      "name": "policyStatesSummaryResource",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "latest"
      ],
      "description": "The virtual resource under PolicyStates resource type for summarize action. In a given time range, 'latest' represents the latest policy state(s) and is the only allowed value.",
      "x-ms-parameter-location": "method"
    },
    "managementGroupsNamespaceParameter": {
      "name": "managementGroupsNamespace",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "Microsoft.Management"
      ],
      "description": "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
      "x-ms-parameter-location": "method"
    },
    "managementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Management group name.",
      "x-ms-parameter-location": "method"
    },
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Microsoft Azure subscription ID.",
      "x-ms-parameter-location": "method"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Resource group name.",
      "x-ms-parameter-location": "method"
    },
    "resourceIdParameter": {
      "name": "resourceId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Resource ID.",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "authorizationNamespaceParameter": {
      "name": "authorizationNamespace",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "Microsoft.Authorization"
      ],
      "description": "The namespace for Microsoft Authorization resource provider; only \"Microsoft.Authorization\" is allowed.",
      "x-ms-parameter-location": "method"
    },
    "policySetDefinitionNameParameter": {
      "name": "policySetDefinitionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Policy set definition name.",
      "x-ms-parameter-location": "method"
    },
    "policyDefinitionNameParameter": {
      "name": "policyDefinitionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Policy definition name.",
      "x-ms-parameter-location": "method"
    },
    "policyAssignmentNameParameter": {
      "name": "policyAssignmentName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Policy assignment name.",
      "x-ms-parameter-location": "method"
    },
    "scopeParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "A valid scope, i.e. management group, subscription, resource group, or resource ID. Scope used has no effect on metadata returned.",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version.",
      "x-ms-parameter-location": "client"
    },
    "topParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "description": "Maximum number of records to return.",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "Top"
    },
    "orderByParameter": {
      "name": "$orderby",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\".",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "OrderBy"
    },
    "selectParameter": {
      "name": "$select",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "Select"
    },
    "fromParameter": {
      "name": "$from",
      "in": "query",
      "required": false,
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "From"
    },
    "toParameter": {
      "name": "$to",
      "in": "query",
      "required": false,
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "To"
    },
    "filterParameter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "OData filter expression.",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "Filter"
    },
    "applyParameter": {
      "name": "$apply",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "OData apply expression for aggregations.",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "Apply"
    },
    "expandParameter": {
      "name": "$expand",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The $expand query parameter. For example, to expand policyEvaluationDetails, use $expand=policyEvaluationDetails",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "QueryOptions"
      },
      "x-ms-client-name": "Expand"
    }
  },
  "x-internal-service-id": "policy-insights",
  "x-internal-service-name": "Policy Insights",
  "x-internal-toc-name": "Policy States",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "ListQueryResultsForSubscription",
  "x-internal-operation-name": "List Query Results For Subscription"
}