{
  "swagger": "2.0",
  "info": {
    "version": "2019-01-21",
    "title": "KustoManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {},
  "definitions": {
    "ClusterProperties": {
      "properties": {
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The state of the resource.",
          "enum": [
            "Creating",
            "Unavailable",
            "Running",
            "Deleting",
            "Deleted",
            "Stopping",
            "Stopped",
            "Starting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "State",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "uri": {
          "type": "string",
          "readOnly": true,
          "description": "The cluster URI."
        },
        "dataIngestionUri": {
          "type": "string",
          "readOnly": true,
          "description": "The cluster data ingestion URI."
        },
        "trustedExternalTenants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrustedExternalTenant"
          },
          "description": "The cluster's external tenants."
        }
      },
      "description": "Class representing the Kusto cluster properties."
    },
    "TrustedExternalTenant": {
      "properties": {
        "value": {
          "type": "string",
          "description": "GUID representing an external tenant."
        }
      },
      "description": "Represents a tenant ID that is trusted by the cluster."
    },
    "AzureResourceSku": {
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "Resource Namespace and Type."
        },
        "sku": {
          "$ref": "#/definitions/AzureSku",
          "description": "The SKU details."
        },
        "capacity": {
          "$ref": "#/definitions/AzureCapacity",
          "description": "The number of instances of the cluster."
        }
      },
      "description": "Azure resource SKU definition."
    },
    "AzureCapacity": {
      "type": "object",
      "required": [
        "minimum",
        "maximum",
        "default",
        "scaleType"
      ],
      "properties": {
        "scaleType": {
          "description": "Scale type.",
          "type": "string",
          "enum": [
            "automatic",
            "manual",
            "none"
          ],
          "x-ms-enum": {
            "name": "AzureScaleType",
            "modelAsString": true
          }
        },
        "minimum": {
          "description": "Minimum allowed instances count.",
          "type": "integer"
        },
        "maximum": {
          "description": "Maximum allowed instances count.",
          "type": "integer"
        },
        "default": {
          "description": "The default capacity that would be used.",
          "type": "integer"
        }
      },
      "description": "Azure capacity definition."
    },
    "AzureSku": {
      "type": "object",
      "required": [
        "name",
        "tier"
      ],
      "properties": {
        "name": {
          "description": "SKU name.",
          "type": "string",
          "enum": [
            "Standard_DS13_v2+1TB_PS",
            "Standard_DS13_v2+2TB_PS",
            "Standard_DS14_v2+3TB_PS",
            "Standard_DS14_v2+4TB_PS",
            "Standard_D13_v2",
            "Standard_D14_v2",
            "Standard_L8s",
            "Standard_L16s",
            "Standard_D11_v2",
            "Standard_D12_v2",
            "Standard_L4s",
            "Dev(No SLA)_Standard_D11_v2"
          ],
          "x-ms-enum": {
            "name": "AzureSkuName",
            "modelAsString": true
          }
        },
        "capacity": {
          "description": "The number of instances of the cluster.",
          "type": "integer"
        },
        "tier": {
          "description": "SKU tier.",
          "type": "string",
          "enum": [
            "Basic",
            "Standard"
          ],
          "x-ms-enum": {
            "name": "AzureSkuTier",
            "modelAsString": true
          }
        }
      },
      "description": "Azure SKU definition."
    },
    "DatabaseStatistics": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "size": {
          "type": "number",
          "description": "The database size - the total size of compressed data and index in bytes."
        }
      },
      "description": "A class that contains database statistics information."
    },
    "DatabaseProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "softDeletePeriod": {
          "type": "string",
          "format": "duration",
          "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan."
        },
        "hotCachePeriod": {
          "type": "string",
          "format": "duration",
          "description": "The time the data that should be kept in cache for fast queries in TimeSpan."
        },
        "statistics": {
          "$ref": "#/definitions/DatabaseStatistics",
          "description": "The statistics of the database."
        }
      },
      "description": "Class representing the Kusto database properties."
    },
    "EventHubConnectionProperties": {
      "properties": {
        "eventHubResourceId": {
          "type": "string",
          "description": "The resource ID of the event hub to be used to create a data connection."
        },
        "consumerGroup": {
          "type": "string",
          "description": "The event hub consumer group."
        },
        "tableName": {
          "type": "string",
          "description": "The table where the data should be ingested. Optionally the table information can be added to each message."
        },
        "mappingRuleName": {
          "type": "string",
          "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message."
        },
        "dataFormat": {
          "$ref": "#/definitions/DataFormat",
          "description": "The data format of the message. Optionally the data format can be added to each message."
        }
      },
      "required": [
        "eventHubResourceId",
        "consumerGroup"
      ],
      "description": "Class representing the Kusto event hub connection properties."
    },
    "DataFormat": {
      "description": "The data format of the message. Optionally the data format can be added to each message.",
      "type": "string",
      "enum": [
        "MULTIJSON",
        "JSON",
        "CSV",
        "TSV",
        "SCSV",
        "SOHSV",
        "PSV",
        "TXT",
        "RAW",
        "SINGLEJSON",
        "AVRO"
      ],
      "x-ms-enum": {
        "name": "dataFormat",
        "modelAsString": true
      }
    },
    "EventGridConnectionProperties": {
      "properties": {
        "storageAccountResourceId": {
          "type": "string",
          "description": "The resource ID of the storage account where the data resides."
        },
        "eventHubResourceId": {
          "type": "string",
          "description": "The resource ID where the event grid is configured to send events."
        },
        "consumerGroup": {
          "type": "string",
          "description": "The event hub consumer group."
        },
        "tableName": {
          "type": "string",
          "description": "The table where the data should be ingested. Optionally the table information can be added to each message."
        },
        "mappingRuleName": {
          "type": "string",
          "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message."
        },
        "dataFormat": {
          "$ref": "#/definitions/DataFormat",
          "description": "The data format of the message. Optionally the data format can be added to each message."
        }
      },
      "required": [
        "storageAccountResourceId",
        "eventHubResourceId",
        "consumerGroup",
        "tableName",
        "dataFormat"
      ],
      "description": "Class representing the Kusto event grid connection properties."
    },
    "Cluster": {
      "required": [
        "sku"
      ],
      "properties": {
        "sku": {
          "$ref": "#/definitions/AzureSku",
          "description": "The SKU of the cluster."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ClusterProperties",
          "description": "The cluster properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Class representing a Kusto cluster."
    },
    "ClusterUpdate": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "sku": {
          "$ref": "#/definitions/AzureSku",
          "description": "The SKU of the cluster."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The cluster properties.",
          "$ref": "#/definitions/ClusterProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Class representing an update to a Kusto cluster."
    },
    "Database": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The database properties.",
          "$ref": "#/definitions/DatabaseProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Class representing a Kusto database."
    },
    "DatabaseUpdate": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of the updated database.",
          "$ref": "#/definitions/DatabaseProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Class representing an update to a Kusto database."
    },
    "DatabasePrincipal": {
      "type": "object",
      "required": [
        "name",
        "role",
        "type"
      ],
      "properties": {
        "role": {
          "description": "Database principal role.",
          "type": "string",
          "enum": [
            "Admin",
            "Ingestor",
            "Monitor",
            "User",
            "UnrestrictedViewers",
            "Viewer"
          ],
          "x-ms-enum": {
            "name": "DatabasePrincipalRole",
            "modelAsString": true
          }
        },
        "name": {
          "description": "Database principal name.",
          "type": "string"
        },
        "type": {
          "description": "Database principal type.",
          "type": "string",
          "enum": [
            "App",
            "Group",
            "User"
          ],
          "x-ms-enum": {
            "name": "DatabasePrincipalType",
            "modelAsString": true
          }
        },
        "fqn": {
          "description": "Database principal fully qualified name.",
          "type": "string"
        },
        "email": {
          "description": "Database principal email if exists.",
          "type": "string"
        },
        "appId": {
          "description": "Application id - relevant only for application principal type.",
          "type": "string"
        }
      },
      "description": "A class representing database principal entity."
    },
    "ClusterListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          },
          "description": "The list of Kusto clusters."
        }
      },
      "description": "The list Kusto clusters operation response."
    },
    "DatabaseListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "description": "The list of Kusto databases."
        }
      },
      "description": "The list Kusto databases operation response."
    },
    "DatabasePrincipalListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabasePrincipal"
          },
          "description": "The list of Kusto database principals."
        }
      },
      "description": "The list Kusto database principals operation response."
    },
    "DataConnection": {
      "required": [
        "kind"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "kind": {
          "description": "Kind of the endpoint for the data connection",
          "enum": [
            "EventHub",
            "EventGrid"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Kind",
            "modelAsString": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Class representing an data connection.",
      "discriminator": "kind"
    },
    "DataConnectionValidationResult": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "A message which indicates a problem in data connection validation."
        }
      },
      "description": "The result returned from a data connection validation request."
    },
    "DatabasePrincipalListRequest": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabasePrincipal"
          },
          "description": "The list of Kusto database principals."
        }
      },
      "description": "The list Kusto database principals operation request."
    },
    "DataConnectionValidation": {
      "properties": {
        "dataConnectionName": {
          "type": "string",
          "description": "The name of the data connection."
        },
        "properties": {
          "$ref": "#/definitions/DataConnection",
          "description": "The data connection properties to validate."
        }
      },
      "description": "Class representing an data connection validation."
    },
    "EventHubDataConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The Event Hub data connection properties to validate.",
          "$ref": "#/definitions/EventHubConnectionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataConnection"
        }
      ],
      "description": "Class representing an event hub data connection.",
      "x-ms-discriminator-value": "EventHub"
    },
    "EventGridDataConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of the Event Grid data connection.",
          "$ref": "#/definitions/EventGridConnectionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataConnection"
        }
      ],
      "description": "Class representing an Event Grid data connection.",
      "x-ms-discriminator-value": "EventGrid"
    },
    "DataConnectionValidationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataConnectionValidationResult"
          },
          "description": "The list of Kusto data connection validation errors."
        }
      },
      "description": "The list Kusto data connection validation result."
    },
    "DataConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataConnection"
          },
          "description": "The list of Kusto data connections."
        }
      },
      "description": "The list Kusto data connections operation response."
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "An error response from Kusto."
        }
      },
      "description": "An error response from Kusto."
    },
    "ClusterCheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Cluster name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": false
          },
          "description": "The type of resource, Microsoft.Kusto/clusters."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "The result returned from a cluster check name availability request."
    },
    "DatabaseCheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Database name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters/databases"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": false
          },
          "description": "The type of resource, Microsoft.Kusto/clusters/databases."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "The result returned from a database check name availability request."
    },
    "DataConnectionCheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Data Connection name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters/databases/dataConnections"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": false
          },
          "description": "The type of resource, Microsoft.Kusto/clusters/databases/dataConnections."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "The result returned from a data connections check name availability request."
    },
    "CheckNameResult": {
      "type": "object",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Specifies a Boolean value that indicates if the name is available."
        },
        "name": {
          "type": "string",
          "description": "The name that was checked."
        },
        "message": {
          "type": "string",
          "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated."
        },
        "reason": {
          "type": "string",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "reason",
            "modelAsString": true
          },
          "description": "Message providing the reason why the given name is invalid."
        }
      },
      "description": "The result returned from a check name availability request."
    },
    "ListResourceSkusResult": {
      "description": "List of available SKUs for an existing Kusto Cluster.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureResourceSku"
          },
          "description": "The collection of available SKUs for an existing resource."
        }
      }
    },
    "ListSkusResult": {
      "description": "List of available SKUs for a new Kusto Cluster.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureSku"
          },
          "description": "The collection of available SKUs for new resources."
        }
      }
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for displaying in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from Kusto."
    },
    "OperationListResult": {
      "title": "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "title": "The list of operations supported by the resource provider."
        },
        "nextLink": {
          "type": "string",
          "title": "The URL to get the next set of operation list results if there are any."
        }
      }
    },
    "Operation": {
      "title": "A REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "title": "The operation name.",
          "description": "This is of the format {provider}/{resource}/{operation}.",
          "type": "string"
        },
        "display": {
          "title": "The object that describes the operation.",
          "properties": {
            "provider": {
              "title": "Friendly name of the resource provider.",
              "type": "string"
            },
            "operation": {
              "title": "The operation type.",
              "description": "For example: read, write, delete.",
              "type": "string"
            },
            "resource": {
              "title": "The resource type on which the operation is performed.",
              "type": "string"
            },
            "description": {
              "title": "The friendly name of the operation.",
              "type": "string"
            }
          }
        },
        "origin": {
          "title": "The intended executor of the operation.",
          "type": "string"
        },
        "properties": {
          "title": "Properties of the operation.",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "ProxyResource": {
      "description": "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "TrackedResource": {
      "description": "The resource model definition for a ARM tracked top level resource",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "AzureEntityResource": {
      "x-ms-client-name": "AzureEntityResource",
      "description": "The resource model definition for a Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Etag."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API Version."
    },
    "ClusterNameParameter": {
      "name": "clusterName",
      "in": "path",
      "description": "The name of the Kusto cluster.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group containing the Kusto cluster.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database in the Kusto cluster.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DataConnectionNameParameter": {
      "name": "dataConnectionName",
      "in": "path",
      "description": "The name of the data connection.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "x-internal-service-id": "azurerekusto",
  "x-internal-service-name": "Azure Kusto",
  "x-internal-toc-name": "Databases",
  "x-internal-product-uid": null,
  "x-internal-split-members": [
    {
      "displayName": "Add Principals",
      "relativePath": "Databases/AddPrincipals"
    },
    {
      "displayName": "Check Name Availability",
      "relativePath": "Databases/CheckNameAvailability"
    },
    {
      "displayName": "Create Or Update",
      "relativePath": "Databases/CreateOrUpdate"
    },
    {
      "displayName": "Delete",
      "relativePath": "Databases/Delete"
    },
    {
      "displayName": "Get",
      "relativePath": "Databases/Get"
    },
    {
      "displayName": "List By Cluster",
      "relativePath": "Databases/ListByCluster"
    },
    {
      "displayName": "List Principals",
      "relativePath": "Databases/ListPrincipals"
    },
    {
      "displayName": "Remove Principals",
      "relativePath": "Databases/RemovePrincipals"
    },
    {
      "displayName": "Update",
      "relativePath": "Databases/Update"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}