### YamlMime:RESTOperation
uid: management.azure.com.azurerekusto.dataconnections.dataconnectionvalidation
name: data Connection Validation
service: Azure Kusto
groupName: Data Connections
apiVersion: 2022-02-01
summary: Checks that the data connection parameters are valid.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/dataConnectionValidation?api-version=2022-02-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group containing the Kusto cluster.
  types:
  - uid: string
- name: clusterName
  in: path
  isRequired: true
  description: The name of the Kusto cluster.
  types:
  - uid: string
- name: databaseName
  in: path
  isRequired: true
  description: The name of the database in the Kusto cluster.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK -- Operation to check the kusto resource name availability was successful.
  types:
  - uid: DataConnectionValidationListResult
- name: 202 Accepted
  description: Accepted
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: dataConnectionName
    in: body
    description: The name of the data connection.
    types:
    - uid: string
  - name: properties
    in: body
    description: The data connection properties to validate.
    types:
    - uid: EventHubDataConnection
    - uid: IotHubDataConnection
    - uid: EventGridDataConnection
    typesTitle: DataConnection
requestHeader: []
definitions:
- name: DataConnectionValidationListResult
  description: The list Kusto data connection validation result.
  kind: object
  properties:
  - name: value
    description: The list of Kusto data connection validation errors.
    types:
    - uid: DataConnectionValidationResult
      isArray: true
- name: CloudError
  description: An error response from Kusto.
  kind: object
  properties:
  - name: error
    description: An error response from Kusto.
    types:
    - uid: CloudErrorBody
- name: DataConnectionValidation
  description: Class representing an data connection validation.
  kind: object
  properties:
  - name: dataConnectionName
    description: The name of the data connection.
    types:
    - uid: string
  - name: properties
    description: The data connection properties to validate.
    types:
    - uid: EventHubDataConnection
    - uid: IotHubDataConnection
    - uid: EventGridDataConnection
    typesTitle: DataConnection
- name: EventHubDataConnection
  description: Class representing an event hub data connection.
  kind: object
  properties:
  - name: properties.eventHubResourceId
    description: The resource ID of the event hub to be used to create a data connection.
    types:
    - uid: string
  - name: properties.consumerGroup
    description: The event hub consumer group.
    types:
    - uid: string
  - name: properties.tableName
    description: The table where the data should be ingested. Optionally the table information can be added to each message.
    types:
    - uid: string
  - name: properties.mappingRuleName
    description: The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.
    types:
    - uid: string
  - name: properties.dataFormat
    description: The data format of the message. Optionally the data format can be added to each message.
    types:
    - uid: eventHubDataFormat
  - name: properties.eventSystemProperties
    description: System properties of the event hub
    types:
    - uid: string
      isArray: true
  - name: properties.compression
    description: The event hub messages compression type
    types:
    - uid: compression
    defaultValue: None
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioned state of the resource.
    types:
    - uid: ProvisioningState
  - name: properties.managedIdentityResourceId
    description: Empty for non-managed identity based data connection. For system assigned identity, provide cluster resource Id.  For user assigned identity (UAI) provide the UAI resource Id.
    types:
    - uid: string
  - name: properties.managedIdentityObjectId
    isReadyOnly: true
    description: The object ID of the managedIdentityResourceId
    types:
    - uid: string
  - name: properties.databaseRouting
    description: Indication for database routing information from the data connection, by default only database routing information is allowed
    types:
    - uid: DatabaseRouting
    defaultValue: Single
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: kind
    description: Kind of the endpoint for the data connection
    types:
    - uid: EventHub
    typesTitle: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: IotHubDataConnection
  description: Class representing an iot hub data connection.
  kind: object
  properties:
  - name: properties.iotHubResourceId
    description: The resource ID of the Iot hub to be used to create a data connection.
    types:
    - uid: string
  - name: properties.consumerGroup
    description: The iot hub consumer group.
    types:
    - uid: string
  - name: properties.tableName
    description: The table where the data should be ingested. Optionally the table information can be added to each message.
    types:
    - uid: string
  - name: properties.mappingRuleName
    description: The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.
    types:
    - uid: string
  - name: properties.dataFormat
    description: The data format of the message. Optionally the data format can be added to each message.
    types:
    - uid: iotHubDataFormat
  - name: properties.eventSystemProperties
    description: System properties of the iot hub
    types:
    - uid: string
      isArray: true
  - name: properties.sharedAccessPolicyName
    description: The name of the share access policy
    types:
    - uid: string
  - name: properties.databaseRouting
    description: Indication for database routing information from the data connection, by default only database routing information is allowed
    types:
    - uid: DatabaseRouting
    defaultValue: Single
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioned state of the resource.
    types:
    - uid: ProvisioningState
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: kind
    description: Kind of the endpoint for the data connection
    types:
    - uid: IotHub
    typesTitle: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: EventGridDataConnection
  description: Class representing an Event Grid data connection.
  kind: object
  properties:
  - name: properties.storageAccountResourceId
    description: The resource ID of the storage account where the data resides.
    types:
    - uid: string
  - name: properties.eventGridResourceId
    description: The resource ID of the event grid that is subscribed to the storage account events.
    types:
    - uid: string
  - name: properties.eventHubResourceId
    description: The resource ID where the event grid is configured to send events.
    types:
    - uid: string
  - name: properties.consumerGroup
    description: The event hub consumer group.
    types:
    - uid: string
  - name: properties.tableName
    description: The table where the data should be ingested. Optionally the table information can be added to each message.
    types:
    - uid: string
  - name: properties.mappingRuleName
    description: The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.
    types:
    - uid: string
  - name: properties.dataFormat
    description: The data format of the message. Optionally the data format can be added to each message.
    types:
    - uid: eventGridDataFormat
  - name: properties.ignoreFirstRecord
    description: A Boolean value that, if set to true, indicates that ingestion should ignore the first record of every file
    types:
    - uid: boolean
  - name: properties.blobStorageEventType
    description: The name of blob storage event type to process.
    types:
    - uid: blobStorageEventType
  - name: properties.managedIdentityResourceId
    description: Empty for non-managed identity based data connection. For system assigned identity, provide cluster resource Id.  For user assigned identity (UAI) provide the UAI resource Id.
    types:
    - uid: string
  - name: properties.managedIdentityObjectId
    isReadyOnly: true
    description: The object ID of managedIdentityResourceId
    types:
    - uid: string
  - name: properties.databaseRouting
    description: Indication for database routing information from the data connection, by default only database routing information is allowed
    types:
    - uid: DatabaseRouting
    defaultValue: Single
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioned state of the resource.
    types:
    - uid: ProvisioningState
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: kind
    description: Kind of the endpoint for the data connection
    types:
    - uid: EventGrid
    typesTitle: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: DataConnectionValidationResult
  description: The result returned from a data connection validation request.
  kind: object
  properties:
  - name: errorMessage
    description: A message which indicates a problem in data connection validation.
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from Kusto.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for displaying in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: eventHubDataFormat
  description: The data format of the message. Optionally the data format can be added to each message.
  kind: enum
  properties:
  - name: MULTIJSON
    types:
    - uid: string
  - name: JSON
    types:
    - uid: string
  - name: CSV
    types:
    - uid: string
  - name: TSV
    types:
    - uid: string
  - name: SCSV
    types:
    - uid: string
  - name: SOHSV
    types:
    - uid: string
  - name: PSV
    types:
    - uid: string
  - name: TXT
    types:
    - uid: string
  - name: RAW
    types:
    - uid: string
  - name: SINGLEJSON
    types:
    - uid: string
  - name: AVRO
    types:
    - uid: string
  - name: TSVE
    types:
    - uid: string
  - name: PARQUET
    types:
    - uid: string
  - name: ORC
    types:
    - uid: string
  - name: APACHEAVRO
    types:
    - uid: string
  - name: W3CLOGFILE
    types:
    - uid: string
- name: compression
  description: The event hub messages compression type
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: GZip
    types:
    - uid: string
- name: ProvisioningState
  description: The provisioned state of the resource.
  kind: enum
  properties:
  - name: Running
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Moving
    types:
    - uid: string
- name: DatabaseRouting
  description: Indication for database routing information from the data connection, by default only database routing information is allowed
  kind: enum
  properties:
  - name: Single
    types:
    - uid: string
  - name: Multi
    types:
    - uid: string
- name: iotHubDataFormat
  description: The data format of the message. Optionally the data format can be added to each message.
  kind: enum
  properties:
  - name: MULTIJSON
    types:
    - uid: string
  - name: JSON
    types:
    - uid: string
  - name: CSV
    types:
    - uid: string
  - name: TSV
    types:
    - uid: string
  - name: SCSV
    types:
    - uid: string
  - name: SOHSV
    types:
    - uid: string
  - name: PSV
    types:
    - uid: string
  - name: TXT
    types:
    - uid: string
  - name: RAW
    types:
    - uid: string
  - name: SINGLEJSON
    types:
    - uid: string
  - name: AVRO
    types:
    - uid: string
  - name: TSVE
    types:
    - uid: string
  - name: PARQUET
    types:
    - uid: string
  - name: ORC
    types:
    - uid: string
  - name: APACHEAVRO
    types:
    - uid: string
  - name: W3CLOGFILE
    types:
    - uid: string
- name: eventGridDataFormat
  description: The data format of the message. Optionally the data format can be added to each message.
  kind: enum
  properties:
  - name: MULTIJSON
    types:
    - uid: string
  - name: JSON
    types:
    - uid: string
  - name: CSV
    types:
    - uid: string
  - name: TSV
    types:
    - uid: string
  - name: SCSV
    types:
    - uid: string
  - name: SOHSV
    types:
    - uid: string
  - name: PSV
    types:
    - uid: string
  - name: TXT
    types:
    - uid: string
  - name: RAW
    types:
    - uid: string
  - name: SINGLEJSON
    types:
    - uid: string
  - name: AVRO
    types:
    - uid: string
  - name: TSVE
    types:
    - uid: string
  - name: PARQUET
    types:
    - uid: string
  - name: ORC
    types:
    - uid: string
  - name: APACHEAVRO
    types:
    - uid: string
  - name: W3CLOGFILE
    types:
    - uid: string
- name: blobStorageEventType
  description: The name of blob storage event type to process.
  kind: enum
  properties:
  - name: Microsoft.Storage.BlobCreated
    types:
    - uid: string
  - name: Microsoft.Storage.BlobRenamed
    types:
    - uid: string
examples:
- name: KustoDataConnectionValidation
  request:
    uri: POST https://management.azure.com/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Kusto/clusters/kustoCluster/databases/KustoDatabase8/dataConnectionValidation?api-version=2022-02-01
    body: >-
      {
        "dataConnectionName": "dataConnectionTest",
        "properties": {
          "kind": "EventHub",
          "properties": {
            "consumerGroup": "testConsumerGroup1",
            "eventHubResourceId": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.EventHub/namespaces/eventhubTestns1/eventhubs/eventhubTest1",
            "managedIdentityResourceId": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.ManagedIdentity/userAssignedIdentities/managedidentityTest1",
            "compression": "None",
            "tableName": "TestTable",
            "mappingRuleName": "TestMapping",
            "dataFormat": "JSON"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Kusto/clusters/kustoCluster/databases/KustoDatabase8/dataConnectionValidation?api-version=2022-02-01

      {
        "dataConnectionName": "dataConnectionTest",
        "properties": {
          "kind": "EventHub",
          "properties": {
            "consumerGroup": "testConsumerGroup1",
            "eventHubResourceId": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.EventHub/namespaces/eventhubTestns1/eventhubs/eventhubTest1",
            "managedIdentityResourceId": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.ManagedIdentity/userAssignedIdentities/managedidentityTest1",
            "compression": "None",
            "tableName": "TestTable",
            "mappingRuleName": "TestMapping",
            "dataFormat": "JSON"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.kusto.fluent.models.DataConnectionValidationInner;
      import com.azure.resourcemanager.kusto.models.Compression;
      import com.azure.resourcemanager.kusto.models.EventHubDataConnection;
      import com.azure.resourcemanager.kusto.models.EventHubDataFormat;

      /** Samples for DataConnections DataConnectionValidation. */
      public final class Main {
          /*
           * x-ms-original-file: specification/azure-kusto/resource-manager/Microsoft.Kusto/stable/2022-02-01/examples/KustoDataConnectionValidationAsync.json
           */
          /**
           * Sample code: KustoDataConnectionValidation.
           *
           * @param manager Entry point to KustoManager.
           */
          public static void kustoDataConnectionValidation(com.azure.resourcemanager.kusto.KustoManager manager) {
              manager
                  .dataConnections()
                  .dataConnectionValidation(
                      "kustorptest",
                      "kustoCluster",
                      "KustoDatabase8",
                      new DataConnectionValidationInner()
                          .withDataConnectionName("dataConnectionTest")
                          .withProperties(
                              new EventHubDataConnection()
                                  .withEventHubResourceId(
                                      "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.EventHub/namespaces/eventhubTestns1/eventhubs/eventhubTest1")
                                  .withConsumerGroup("testConsumerGroup1")
                                  .withTableName("TestTable")
                                  .withMappingRuleName("TestMapping")
                                  .withDataFormat(EventHubDataFormat.JSON)
                                  .withCompression(Compression.NONE)
                                  .withManagedIdentityResourceId(
                                      "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.ManagedIdentity/userAssignedIdentities/managedidentityTest1")),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-kusto_1.0.0-beta.4/sdk/kusto/azure-resourcemanager-kusto/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { KustoManagementClient } = require("@azure/arm-kusto");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Checks that the data connection parameters are valid.
       *
       * @summary Checks that the data connection parameters are valid.
       * x-ms-original-file: specification/azure-kusto/resource-manager/Microsoft.Kusto/stable/2022-02-01/examples/KustoDataConnectionValidationAsync.json
       */
      async function kustoDataConnectionValidation() {
        const subscriptionId = "12345678-1234-1234-1234-123456789098";
        const resourceGroupName = "kustorptest";
        const clusterName = "kustoCluster";
        const databaseName = "KustoDatabase8";
        const parameters = {
          dataConnectionName: "dataConnectionTest",
          properties: {
            compression: "None",
            consumerGroup: "testConsumerGroup1",
            dataFormat: "JSON",
            eventHubResourceId:
              "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.EventHub/namespaces/eventhubTestns1/eventhubs/eventhubTest1",
            kind: "EventHub",
            managedIdentityResourceId:
              "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.ManagedIdentity/userAssignedIdentities/managedidentityTest1",
            mappingRuleName: "TestMapping",
            tableName: "TestTable",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new KustoManagementClient(credential, subscriptionId);
        const result = await client.dataConnections.beginDataConnectionValidationAndWait(
          resourceGroupName,
          clusterName,
          databaseName,
          parameters
        );
        console.log(result);
      }

      kustoDataConnectionValidation().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-kusto_7.1.2/sdk/kusto/arm-kusto/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      [
        {
          "errorMessage": "Event hub's namespace does not exist"
        },
        {
          "errorMessage": "Database does not exist"
        }
      ]
  - statusCode: "202"
- name: KustoDataConnectionEventGridValidation
  request:
    uri: POST https://management.azure.com/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Kusto/clusters/kustoCluster/databases/KustoDatabase8/dataConnectionValidation?api-version=2022-02-01
    body: >-
      {
        "dataConnectionName": "dataConnectionTest",
        "properties": {
          "kind": "EventGrid",
          "properties": {
            "consumerGroup": "$Default",
            "eventHubResourceId": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.EventHub/namespaces/eventhubTestns1/eventhubs/eventhubTest1",
            "eventGridResourceId": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Storage/storageAccounts/teststorageaccount/providers/Microsoft.EventGrid/eventSubscriptions/eventSubscriptionTest",
            "tableName": "TestTable",
            "mappingRuleName": "TestMapping",
            "dataFormat": "JSON",
            "storageAccountResourceId": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Storage/storageAccounts/teststorageaccount",
            "ignoreFirstRecord": false,
            "blobStorageEventType": "Microsoft.Storage.BlobCreated",
            "managedIdentityResourceId": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.ManagedIdentity/userAssignedIdentities/managedidentityTest1",
            "databaseRouting": "Single"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Kusto/clusters/kustoCluster/databases/KustoDatabase8/dataConnectionValidation?api-version=2022-02-01

      {
        "dataConnectionName": "dataConnectionTest",
        "properties": {
          "kind": "EventGrid",
          "properties": {
            "consumerGroup": "$Default",
            "eventHubResourceId": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.EventHub/namespaces/eventhubTestns1/eventhubs/eventhubTest1",
            "eventGridResourceId": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Storage/storageAccounts/teststorageaccount/providers/Microsoft.EventGrid/eventSubscriptions/eventSubscriptionTest",
            "tableName": "TestTable",
            "mappingRuleName": "TestMapping",
            "dataFormat": "JSON",
            "storageAccountResourceId": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Storage/storageAccounts/teststorageaccount",
            "ignoreFirstRecord": false,
            "blobStorageEventType": "Microsoft.Storage.BlobCreated",
            "managedIdentityResourceId": "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.ManagedIdentity/userAssignedIdentities/managedidentityTest1",
            "databaseRouting": "Single"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.kusto.fluent.models.DataConnectionValidationInner;
      import com.azure.resourcemanager.kusto.models.BlobStorageEventType;
      import com.azure.resourcemanager.kusto.models.DatabaseRouting;
      import com.azure.resourcemanager.kusto.models.EventGridDataConnection;
      import com.azure.resourcemanager.kusto.models.EventGridDataFormat;

      /** Samples for DataConnections DataConnectionValidation. */
      public final class Main {
          /*
           * x-ms-original-file: specification/azure-kusto/resource-manager/Microsoft.Kusto/stable/2022-02-01/examples/KustoDataConnectionEventGridValidationAsync.json
           */
          /**
           * Sample code: KustoDataConnectionEventGridValidation.
           *
           * @param manager Entry point to KustoManager.
           */
          public static void kustoDataConnectionEventGridValidation(com.azure.resourcemanager.kusto.KustoManager manager) {
              manager
                  .dataConnections()
                  .dataConnectionValidation(
                      "kustorptest",
                      "kustoCluster",
                      "KustoDatabase8",
                      new DataConnectionValidationInner()
                          .withDataConnectionName("dataConnectionTest")
                          .withProperties(
                              new EventGridDataConnection()
                                  .withStorageAccountResourceId(
                                      "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Storage/storageAccounts/teststorageaccount")
                                  .withEventGridResourceId(
                                      "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Storage/storageAccounts/teststorageaccount/providers/Microsoft.EventGrid/eventSubscriptions/eventSubscriptionTest")
                                  .withEventHubResourceId(
                                      "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.EventHub/namespaces/eventhubTestns1/eventhubs/eventhubTest1")
                                  .withConsumerGroup("$Default")
                                  .withTableName("TestTable")
                                  .withMappingRuleName("TestMapping")
                                  .withDataFormat(EventGridDataFormat.JSON)
                                  .withIgnoreFirstRecord(false)
                                  .withBlobStorageEventType(BlobStorageEventType.MICROSOFT_STORAGE_BLOB_CREATED)
                                  .withManagedIdentityResourceId(
                                      "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.ManagedIdentity/userAssignedIdentities/managedidentityTest1")
                                  .withDatabaseRouting(DatabaseRouting.SINGLE)),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-kusto_1.0.0-beta.4/sdk/kusto/azure-resourcemanager-kusto/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armkusto_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/kusto/armkusto"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/azure-kusto/resource-manager/Microsoft.Kusto/stable/2022-02-01/examples/KustoDataConnectionEventGridValidationAsync.json
      func ExampleDataConnectionsClient_BeginDataConnectionValidation() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armkusto.NewDataConnectionsClient("12345678-1234-1234-1234-123456789098", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginDataConnectionValidation(ctx,
      		"kustorptest",
      		"kustoCluster",
      		"KustoDatabase8",
      		armkusto.DataConnectionValidation{
      			DataConnectionName: to.Ptr("dataConnectionTest"),
      			Properties: &armkusto.EventGridDataConnection{
      				Kind: to.Ptr(armkusto.DataConnectionKindEventGrid),
      				Properties: &armkusto.EventGridConnectionProperties{
      					BlobStorageEventType:      to.Ptr(armkusto.BlobStorageEventTypeMicrosoftStorageBlobCreated),
      					ConsumerGroup:             to.Ptr("$Default"),
      					DataFormat:                to.Ptr(armkusto.EventGridDataFormatJSON),
      					DatabaseRouting:           to.Ptr(armkusto.DatabaseRoutingSingle),
      					EventGridResourceID:       to.Ptr("/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Storage/storageAccounts/teststorageaccount/providers/Microsoft.EventGrid/eventSubscriptions/eventSubscriptionTest"),
      					EventHubResourceID:        to.Ptr("/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.EventHub/namespaces/eventhubTestns1/eventhubs/eventhubTest1"),
      					IgnoreFirstRecord:         to.Ptr(false),
      					ManagedIdentityResourceID: to.Ptr("/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.ManagedIdentity/userAssignedIdentities/managedidentityTest1"),
      					MappingRuleName:           to.Ptr("TestMapping"),
      					StorageAccountResourceID:  to.Ptr("/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Storage/storageAccounts/teststorageaccount"),
      					TableName:                 to.Ptr("TestTable"),
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fkusto%2Farmkusto%2Fv1.0.0/sdk/resourcemanager/kusto/armkusto/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { KustoManagementClient } = require("@azure/arm-kusto");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Checks that the data connection parameters are valid.
       *
       * @summary Checks that the data connection parameters are valid.
       * x-ms-original-file: specification/azure-kusto/resource-manager/Microsoft.Kusto/stable/2022-02-01/examples/KustoDataConnectionEventGridValidationAsync.json
       */
      async function kustoDataConnectionEventGridValidation() {
        const subscriptionId = "12345678-1234-1234-1234-123456789098";
        const resourceGroupName = "kustorptest";
        const clusterName = "kustoCluster";
        const databaseName = "KustoDatabase8";
        const parameters = {
          dataConnectionName: "dataConnectionTest",
          properties: {
            blobStorageEventType: "Microsoft.Storage.BlobCreated",
            consumerGroup: "$Default",
            dataFormat: "JSON",
            databaseRouting: "Single",
            eventGridResourceId:
              "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Storage/storageAccounts/teststorageaccount/providers/Microsoft.EventGrid/eventSubscriptions/eventSubscriptionTest",
            eventHubResourceId:
              "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.EventHub/namespaces/eventhubTestns1/eventhubs/eventhubTest1",
            ignoreFirstRecord: false,
            kind: "EventGrid",
            managedIdentityResourceId:
              "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.ManagedIdentity/userAssignedIdentities/managedidentityTest1",
            mappingRuleName: "TestMapping",
            storageAccountResourceId:
              "/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Storage/storageAccounts/teststorageaccount",
            tableName: "TestTable",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new KustoManagementClient(credential, subscriptionId);
        const result = await client.dataConnections.beginDataConnectionValidationAndWait(
          resourceGroupName,
          clusterName,
          databaseName,
          parameters
        );
        console.log(result);
      }

      kustoDataConnectionEventGridValidation().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-kusto_7.1.2/sdk/kusto/arm-kusto/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      [
        {
          "errorMessage": "Database does not exist"
        }
      ]
  - statusCode: "202"
security: []
metadata:
  description: Learn more about Azure Kusto service - Checks that the data connection parameters are valid.
errorCodes: []
