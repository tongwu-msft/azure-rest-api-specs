### YamlMime:RESTOperation
uid: management.azure.com.dns.recordsets.createorupdate
name: Create Or Update
service: DNS
groupName: Record Sets
apiVersion: 2018-05-01
summary: Creates or updates a record set within a DNS zone.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}?api-version=2018-05-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Specifies the Azure subscription ID, which uniquely identifies the Microsoft Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: zoneName
  in: path
  isRequired: true
  description: The name of the DNS zone (without a terminating dot).
  types:
  - uid: string
- name: recordType
  in: path
  isRequired: true
  description: The type of DNS record in this record set. Record sets of type SOA can be updated but not created (they are created when the DNS zone is created).
  types:
  - uid: RecordType
- name: relativeRecordSetName
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The name of the record set, relative to the name of the zone.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Specifies the API version.
  types:
  - uid: string
responses:
- name: 201 Created
  description: The record set has been created.
  types:
  - uid: RecordSet
- name: 200 OK
  description: The record set has been updated.
  types:
  - uid: RecordSet
- name: Other Status Codes
  description: Default response. It will be deserialized as per the Error definition.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: etag
    in: body
    description: The etag of the record set.
    types:
    - uid: string
  - name: properties.metadata
    in: body
    description: The metadata attached to the record set.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.TTL
    in: body
    description: The TTL (time-to-live) of the records in the record set.
    types:
    - uid: integer
  - name: properties.targetResource
    in: body
    description: A reference to an azure resource from where the dns resource value is taken.
    types:
    - uid: SubResource
  - name: properties.ARecords
    in: body
    description: The list of A records in the record set.
    types:
    - uid: ARecord
      isArray: true
  - name: properties.AAAARecords
    in: body
    description: The list of AAAA records in the record set.
    types:
    - uid: AaaaRecord
      isArray: true
  - name: properties.MXRecords
    in: body
    description: The list of MX records in the record set.
    types:
    - uid: MxRecord
      isArray: true
  - name: properties.NSRecords
    in: body
    description: The list of NS records in the record set.
    types:
    - uid: NsRecord
      isArray: true
  - name: properties.PTRRecords
    in: body
    description: The list of PTR records in the record set.
    types:
    - uid: PtrRecord
      isArray: true
  - name: properties.SRVRecords
    in: body
    description: The list of SRV records in the record set.
    types:
    - uid: SrvRecord
      isArray: true
  - name: properties.TXTRecords
    in: body
    description: The list of TXT records in the record set.
    types:
    - uid: TxtRecord
      isArray: true
  - name: properties.CNAMERecord
    in: body
    description: The CNAME record in the  record set.
    types:
    - uid: CnameRecord
  - name: properties.SOARecord
    in: body
    description: The SOA record in the record set.
    types:
    - uid: SoaRecord
  - name: properties.caaRecords
    in: body
    description: The list of CAA records in the record set.
    types:
    - uid: CaaRecord
      isArray: true
requestHeader:
- name: If-Match
  in: header
  description: The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwriting any concurrent changes.
  types:
  - uid: string
- name: If-None-Match
  in: header
  description: Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored.
  types:
  - uid: string
definitions:
- name: RecordType
  description: The type of DNS record in this record set. Record sets of type SOA can be updated but not created (they are created when the DNS zone is created).
  kind: enum
  properties:
  - name: A
    types:
    - uid: string
  - name: AAAA
    types:
    - uid: string
  - name: CAA
    types:
    - uid: string
  - name: CNAME
    types:
    - uid: string
  - name: MX
    types:
    - uid: string
  - name: NS
    types:
    - uid: string
  - name: PTR
    types:
    - uid: string
  - name: SOA
    types:
    - uid: string
  - name: SRV
    types:
    - uid: string
  - name: TXT
    types:
    - uid: string
- name: SubResource
  description: A reference to a another resource
  kind: object
  properties:
  - name: id
    description: Resource Id.
    types:
    - uid: string
- name: ARecord
  description: An A record.
  kind: object
  properties:
  - name: ipv4Address
    description: The IPv4 address of this A record.
    types:
    - uid: string
- name: AaaaRecord
  description: An AAAA record.
  kind: object
  properties:
  - name: ipv6Address
    description: The IPv6 address of this AAAA record.
    types:
    - uid: string
- name: MxRecord
  description: An MX record.
  kind: object
  properties:
  - name: preference
    description: The preference value for this MX record.
    types:
    - uid: integer
  - name: exchange
    description: The domain name of the mail host for this MX record.
    types:
    - uid: string
- name: NsRecord
  description: An NS record.
  kind: object
  properties:
  - name: nsdname
    description: The name server name for this NS record.
    types:
    - uid: string
- name: PtrRecord
  description: A PTR record.
  kind: object
  properties:
  - name: ptrdname
    description: The PTR target domain name for this PTR record.
    types:
    - uid: string
- name: SrvRecord
  description: An SRV record.
  kind: object
  properties:
  - name: priority
    description: The priority value for this SRV record.
    types:
    - uid: integer
  - name: weight
    description: The weight value for this SRV record.
    types:
    - uid: integer
  - name: port
    description: The port value for this SRV record.
    types:
    - uid: integer
  - name: target
    description: The target domain name for this SRV record.
    types:
    - uid: string
- name: TxtRecord
  description: A TXT record.
  kind: object
  properties:
  - name: value
    description: The text value of this TXT record.
    types:
    - uid: string
      isArray: true
- name: CnameRecord
  description: A CNAME record.
  kind: object
  properties:
  - name: cname
    description: The canonical name for this CNAME record.
    types:
    - uid: string
- name: SoaRecord
  description: An SOA record.
  kind: object
  properties:
  - name: host
    description: The domain name of the authoritative name server for this SOA record.
    types:
    - uid: string
  - name: email
    description: The email contact for this SOA record.
    types:
    - uid: string
  - name: serialNumber
    description: The serial number for this SOA record.
    types:
    - uid: integer
  - name: refreshTime
    description: The refresh value for this SOA record.
    types:
    - uid: integer
  - name: retryTime
    description: The retry time for this SOA record.
    types:
    - uid: integer
  - name: expireTime
    description: The expire time for this SOA record.
    types:
    - uid: integer
  - name: minimumTTL
    description: The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
    types:
    - uid: integer
- name: CaaRecord
  description: A CAA record.
  kind: object
  properties:
  - name: flags
    description: The flags for this CAA record as an integer between 0 and 255.
    types:
    - uid: integer
  - name: tag
    description: The tag for this CAA record.
    types:
    - uid: string
  - name: value
    description: The value for this CAA record.
    types:
    - uid: string
- name: RecordSet
  description: Describes a DNS record set (a collection of DNS records with the same name and type).
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The ID of the record set.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the record set.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the record set.
    types:
    - uid: string
  - name: etag
    description: The etag of the record set.
    types:
    - uid: string
  - name: properties.metadata
    description: The metadata attached to the record set.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.TTL
    description: The TTL (time-to-live) of the records in the record set.
    types:
    - uid: integer
  - name: properties.fqdn
    isReadyOnly: true
    description: Fully qualified domain name of the record set.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: provisioning State of the record set.
    types:
    - uid: string
  - name: properties.targetResource
    description: A reference to an azure resource from where the dns resource value is taken.
    types:
    - uid: SubResource
  - name: properties.ARecords
    description: The list of A records in the record set.
    types:
    - uid: ARecord
      isArray: true
  - name: properties.AAAARecords
    description: The list of AAAA records in the record set.
    types:
    - uid: AaaaRecord
      isArray: true
  - name: properties.MXRecords
    description: The list of MX records in the record set.
    types:
    - uid: MxRecord
      isArray: true
  - name: properties.NSRecords
    description: The list of NS records in the record set.
    types:
    - uid: NsRecord
      isArray: true
  - name: properties.PTRRecords
    description: The list of PTR records in the record set.
    types:
    - uid: PtrRecord
      isArray: true
  - name: properties.SRVRecords
    description: The list of SRV records in the record set.
    types:
    - uid: SrvRecord
      isArray: true
  - name: properties.TXTRecords
    description: The list of TXT records in the record set.
    types:
    - uid: TxtRecord
      isArray: true
  - name: properties.CNAMERecord
    description: The CNAME record in the  record set.
    types:
    - uid: CnameRecord
  - name: properties.SOARecord
    description: The SOA record in the record set.
    types:
    - uid: SoaRecord
  - name: properties.caaRecords
    description: The list of CAA records in the record set.
    types:
    - uid: CaaRecord
      isArray: true
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: Create A recordset
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/A/record1?api-version=2018-05-01
    body: >-
      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "ARecords": [
            {
              "ipv4Address": "127.0.0.1"
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/A/record1?api-version=2018-05-01

      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "ARecords": [
            {
              "ipv4Address": "127.0.0.1"
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.dns.fluent.models.RecordSetInner;
      import com.azure.resourcemanager.dns.models.ARecord;
      import com.azure.resourcemanager.dns.models.RecordType;
      import java.util.Arrays;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for RecordSets CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateARecordset.json
           */
          /**
           * Sample code: Create A recordset.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createARecordset(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .dnsZones()
                  .manager()
                  .serviceClient()
                  .getRecordSets()
                  .createOrUpdateWithResponse(
                      "rg1",
                      "zone1",
                      "record1",
                      RecordType.A,
                      new RecordSetInner()
                          .withMetadata(mapOf("key1", "value1"))
                          .withTtl(3600L)
                          .withARecords(Arrays.asList(new ARecord().withIpv4Address("127.0.0.1"))),
                      null,
                      null,
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armdns_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/dns/armdns"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateARecordset.json
      func ExampleRecordSetsClient_CreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armdns.NewRecordSetsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CreateOrUpdate(ctx,
      		"rg1",
      		"zone1",
      		"record1",
      		armdns.RecordTypeA,
      		armdns.RecordSet{
      			Properties: &armdns.RecordSetProperties{
      				ARecords: []*armdns.ARecord{
      					{
      						IPv4Address: to.Ptr("127.0.0.1"),
      					}},
      				TTL: to.Ptr[int64](3600),
      				Metadata: map[string]*string{
      					"key1": to.Ptr("value1"),
      				},
      			},
      		},
      		&armdns.RecordSetsClientCreateOrUpdateOptions{IfMatch: nil,
      			IfNoneMatch: nil,
      		})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fdns%2Farmdns%2Fv1.0.0/sdk/resourcemanager/dns/armdns/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DnsManagementClient } = require("@azure/arm-dns");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a record set within a DNS zone.
       *
       * @summary Creates or updates a record set within a DNS zone.
       * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateARecordset.json
       */
      async function createARecordset() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "A";
        const parameters = {
          aRecords: [{ ipv4Address: "127.0.0.1" }],
          ttl: 3600,
          metadata: { key1: "value1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = await client.recordSets.createOrUpdate(
          resourceGroupName,
          zoneName,
          relativeRecordSetName,
          recordType,
          parameters
        );
        console.log(result);
      }

      createARecordset().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dns_5.0.1/sdk/dns/arm-dns/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/A/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/A",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "ARecords": [
            {
              "ipv4Address": "127.0.0.1"
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/A/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/A",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "ARecords": [
            {
              "ipv4Address": "127.0.0.1"
            }
          ]
        }
      }
- name: Create A recordset with alias target resource
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/A/record1?api-version=2018-05-01
    body: >-
      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "targetResource": {
            "id": "/subscriptions/726f8cd6-6459-4db4-8e6d-2cd2716904e2/resourceGroups/test/providers/Microsoft.Network/trafficManagerProfiles/testpp2"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/A/record1?api-version=2018-05-01

      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "targetResource": {
            "id": "/subscriptions/726f8cd6-6459-4db4-8e6d-2cd2716904e2/resourceGroups/test/providers/Microsoft.Network/trafficManagerProfiles/testpp2"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.dns.fluent.models.RecordSetInner;
      import com.azure.resourcemanager.dns.models.RecordType;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for RecordSets CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateARecordsetAlias.json
           */
          /**
           * Sample code: Create A recordset with alias target resource.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createARecordsetWithAliasTargetResource(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .dnsZones()
                  .manager()
                  .serviceClient()
                  .getRecordSets()
                  .createOrUpdateWithResponse(
                      "rg1",
                      "zone1",
                      "record1",
                      RecordType.A,
                      new RecordSetInner()
                          .withMetadata(mapOf("key1", "value1"))
                          .withTtl(3600L)
                          .withTargetResource(
                              new SubResource()
                                  .withId(
                                      "/subscriptions/726f8cd6-6459-4db4-8e6d-2cd2716904e2/resourceGroups/test/providers/Microsoft.Network/trafficManagerProfiles/testpp2")),
                      null,
                      null,
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DnsManagementClient } = require("@azure/arm-dns");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a record set within a DNS zone.
       *
       * @summary Creates or updates a record set within a DNS zone.
       * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateARecordsetAlias.json
       */
      async function createARecordsetWithAliasTargetResource() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "A";
        const parameters = {
          ttl: 3600,
          metadata: { key1: "value1" },
          targetResource: {
            id: "/subscriptions/726f8cd6-6459-4db4-8e6d-2cd2716904e2/resourceGroups/test/providers/Microsoft.Network/trafficManagerProfiles/testpp2",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = await client.recordSets.createOrUpdate(
          resourceGroupName,
          zoneName,
          relativeRecordSetName,
          recordType,
          parameters
        );
        console.log(result);
      }

      createARecordsetWithAliasTargetResource().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dns_5.0.1/sdk/dns/arm-dns/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/A/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/A",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "targetResource": {
            "id": "/subscriptions/726f8cd6-6459-4db4-8e6d-2cd2716904e2/resourceGroups/test/providers/Microsoft.Network/trafficManagerProfiles/testpp2"
          },
          "provisioningState": "Succeeded"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/A/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/A",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "targetResource": {
            "id": "/subscriptions/726f8cd6-6459-4db4-8e6d-2cd2716904e2/resourceGroups/test/providers/Microsoft.Network/trafficManagerProfiles/testpp2"
          },
          "provisioningState": "Succeeded"
        }
      }
- name: Create AAAA recordset
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/AAAA/record1?api-version=2018-05-01
    body: >-
      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "AAAARecords": [
            {
              "ipv6Address": "::1"
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/AAAA/record1?api-version=2018-05-01

      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "AAAARecords": [
            {
              "ipv6Address": "::1"
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.dns.fluent.models.RecordSetInner;
      import com.azure.resourcemanager.dns.models.AaaaRecord;
      import com.azure.resourcemanager.dns.models.RecordType;
      import java.util.Arrays;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for RecordSets CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateAAAARecordset.json
           */
          /**
           * Sample code: Create AAAA recordset.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAAAARecordset(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .dnsZones()
                  .manager()
                  .serviceClient()
                  .getRecordSets()
                  .createOrUpdateWithResponse(
                      "rg1",
                      "zone1",
                      "record1",
                      RecordType.AAAA,
                      new RecordSetInner()
                          .withMetadata(mapOf("key1", "value1"))
                          .withTtl(3600L)
                          .withAaaaRecords(Arrays.asList(new AaaaRecord().withIpv6Address("::1"))),
                      null,
                      null,
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DnsManagementClient } = require("@azure/arm-dns");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a record set within a DNS zone.
       *
       * @summary Creates or updates a record set within a DNS zone.
       * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateAAAARecordset.json
       */
      async function createAaaaRecordset() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "AAAA";
        const parameters = {
          aaaaRecords: [{ ipv6Address: "::1" }],
          ttl: 3600,
          metadata: { key1: "value1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = await client.recordSets.createOrUpdate(
          resourceGroupName,
          zoneName,
          relativeRecordSetName,
          recordType,
          parameters
        );
        console.log(result);
      }

      createAaaaRecordset().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dns_5.0.1/sdk/dns/arm-dns/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/AAAA/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/AAAA",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "AAAARecords": [
            {
              "ipv6Address": "::1"
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/AAAA/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/AAAA",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "AAAARecords": [
            {
              "ipv6Address": "::1"
            }
          ]
        }
      }
- name: Create CAA recordset
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/CAA/record1?api-version=2018-05-01
    body: >-
      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "caaRecords": [
            {
              "flags": 0,
              "tag": "issue",
              "value": "ca.contoso.com"
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/CAA/record1?api-version=2018-05-01

      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "caaRecords": [
            {
              "flags": 0,
              "tag": "issue",
              "value": "ca.contoso.com"
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.dns.fluent.models.RecordSetInner;
      import com.azure.resourcemanager.dns.models.CaaRecord;
      import com.azure.resourcemanager.dns.models.RecordType;
      import java.util.Arrays;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for RecordSets CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateCaaRecordset.json
           */
          /**
           * Sample code: Create CAA recordset.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createCAARecordset(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .dnsZones()
                  .manager()
                  .serviceClient()
                  .getRecordSets()
                  .createOrUpdateWithResponse(
                      "rg1",
                      "zone1",
                      "record1",
                      RecordType.CAA,
                      new RecordSetInner()
                          .withMetadata(mapOf("key1", "value1"))
                          .withTtl(3600L)
                          .withCaaRecords(
                              Arrays.asList(new CaaRecord().withFlags(0).withTag("issue").withValue("ca.contoso.com"))),
                      null,
                      null,
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DnsManagementClient } = require("@azure/arm-dns");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a record set within a DNS zone.
       *
       * @summary Creates or updates a record set within a DNS zone.
       * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateCaaRecordset.json
       */
      async function createCaaRecordset() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "CAA";
        const parameters = {
          ttl: 3600,
          caaRecords: [{ flags: 0, tag: "issue", value: "ca.contoso.com" }],
          metadata: { key1: "value1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = await client.recordSets.createOrUpdate(
          resourceGroupName,
          zoneName,
          relativeRecordSetName,
          recordType,
          parameters
        );
        console.log(result);
      }

      createCaaRecordset().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dns_5.0.1/sdk/dns/arm-dns/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/CAA/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/CAA",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "caaRecords": [
            {
              "flags": 0,
              "tag": "issue",
              "value": "ca.contoso.com"
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/CAA/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/CAA",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "caaRecords": [
            {
              "flags": 0,
              "tag": "issue",
              "value": "ca.contoso.com"
            }
          ]
        }
      }
- name: Create CNAME recordset
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/CNAME/record1?api-version=2018-05-01
    body: >-
      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "CNAMERecord": {
            "cname": "contoso.com"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/CNAME/record1?api-version=2018-05-01

      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "CNAMERecord": {
            "cname": "contoso.com"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.dns.fluent.models.RecordSetInner;
      import com.azure.resourcemanager.dns.models.CnameRecord;
      import com.azure.resourcemanager.dns.models.RecordType;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for RecordSets CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateCNAMERecordset.json
           */
          /**
           * Sample code: Create CNAME recordset.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createCNAMERecordset(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .dnsZones()
                  .manager()
                  .serviceClient()
                  .getRecordSets()
                  .createOrUpdateWithResponse(
                      "rg1",
                      "zone1",
                      "record1",
                      RecordType.CNAME,
                      new RecordSetInner()
                          .withMetadata(mapOf("key1", "value1"))
                          .withTtl(3600L)
                          .withCnameRecord(new CnameRecord().withCname("contoso.com")),
                      null,
                      null,
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DnsManagementClient } = require("@azure/arm-dns");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a record set within a DNS zone.
       *
       * @summary Creates or updates a record set within a DNS zone.
       * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateCNAMERecordset.json
       */
      async function createCnameRecordset() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "CNAME";
        const parameters = {
          cnameRecord: { cname: "contoso.com" },
          ttl: 3600,
          metadata: { key1: "value1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = await client.recordSets.createOrUpdate(
          resourceGroupName,
          zoneName,
          relativeRecordSetName,
          recordType,
          parameters
        );
        console.log(result);
      }

      createCnameRecordset().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dns_5.0.1/sdk/dns/arm-dns/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/CNAME/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/CNAME",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "CNAMERecord": {
            "cname": "contoso.com"
          }
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/CNAME/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/CNAME",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "CNAMERecord": {
            "cname": "contoso.com"
          }
        }
      }
- name: Create MX recordset
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/MX/record1?api-version=2018-05-01
    body: >-
      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "MXRecords": [
            {
              "preference": 0,
              "exchange": "mail.contoso.com"
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/MX/record1?api-version=2018-05-01

      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "MXRecords": [
            {
              "preference": 0,
              "exchange": "mail.contoso.com"
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.dns.fluent.models.RecordSetInner;
      import com.azure.resourcemanager.dns.models.MxRecord;
      import com.azure.resourcemanager.dns.models.RecordType;
      import java.util.Arrays;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for RecordSets CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateMXRecordset.json
           */
          /**
           * Sample code: Create MX recordset.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createMXRecordset(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .dnsZones()
                  .manager()
                  .serviceClient()
                  .getRecordSets()
                  .createOrUpdateWithResponse(
                      "rg1",
                      "zone1",
                      "record1",
                      RecordType.MX,
                      new RecordSetInner()
                          .withMetadata(mapOf("key1", "value1"))
                          .withTtl(3600L)
                          .withMxRecords(Arrays.asList(new MxRecord().withPreference(0).withExchange("mail.contoso.com"))),
                      null,
                      null,
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DnsManagementClient } = require("@azure/arm-dns");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a record set within a DNS zone.
       *
       * @summary Creates or updates a record set within a DNS zone.
       * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateMXRecordset.json
       */
      async function createMxRecordset() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "MX";
        const parameters = {
          mxRecords: [{ exchange: "mail.contoso.com", preference: 0 }],
          ttl: 3600,
          metadata: { key1: "value1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = await client.recordSets.createOrUpdate(
          resourceGroupName,
          zoneName,
          relativeRecordSetName,
          recordType,
          parameters
        );
        console.log(result);
      }

      createMxRecordset().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dns_5.0.1/sdk/dns/arm-dns/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/MX/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/MX",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "MXRecords": [
            {
              "preference": 0,
              "exchange": "mail.contoso.com"
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/MX/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/MX",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "MXRecords": [
            {
              "preference": 0,
              "exchange": "mail.contoso.com"
            }
          ]
        }
      }
- name: Create NS recordset
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/NS/record1?api-version=2018-05-01
    body: >-
      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "NSRecords": [
            {
              "nsdname": "ns1.contoso.com"
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/NS/record1?api-version=2018-05-01

      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "NSRecords": [
            {
              "nsdname": "ns1.contoso.com"
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.dns.fluent.models.RecordSetInner;
      import com.azure.resourcemanager.dns.models.NsRecord;
      import com.azure.resourcemanager.dns.models.RecordType;
      import java.util.Arrays;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for RecordSets CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateNSRecordset.json
           */
          /**
           * Sample code: Create NS recordset.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createNSRecordset(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .dnsZones()
                  .manager()
                  .serviceClient()
                  .getRecordSets()
                  .createOrUpdateWithResponse(
                      "rg1",
                      "zone1",
                      "record1",
                      RecordType.NS,
                      new RecordSetInner()
                          .withMetadata(mapOf("key1", "value1"))
                          .withTtl(3600L)
                          .withNsRecords(Arrays.asList(new NsRecord().withNsdname("ns1.contoso.com"))),
                      null,
                      null,
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DnsManagementClient } = require("@azure/arm-dns");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a record set within a DNS zone.
       *
       * @summary Creates or updates a record set within a DNS zone.
       * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateNSRecordset.json
       */
      async function createNsRecordset() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "NS";
        const parameters = {
          nsRecords: [{ nsdname: "ns1.contoso.com" }],
          ttl: 3600,
          metadata: { key1: "value1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = await client.recordSets.createOrUpdate(
          resourceGroupName,
          zoneName,
          relativeRecordSetName,
          recordType,
          parameters
        );
        console.log(result);
      }

      createNsRecordset().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dns_5.0.1/sdk/dns/arm-dns/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/NS/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/NS",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "NSRecords": [
            {
              "nsdname": "ns1.contoso.com"
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/NS/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/NS",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "NSRecords": [
            {
              "nsdname": "ns1.contoso.com"
            }
          ]
        }
      }
- name: Create PTR recordset
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/0.0.127.in-addr.arpa/PTR/1?api-version=2018-05-01
    body: >-
      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "PTRRecords": [
            {
              "ptrdname": "localhost"
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/0.0.127.in-addr.arpa/PTR/1?api-version=2018-05-01

      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "PTRRecords": [
            {
              "ptrdname": "localhost"
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.dns.fluent.models.RecordSetInner;
      import com.azure.resourcemanager.dns.models.PtrRecord;
      import com.azure.resourcemanager.dns.models.RecordType;
      import java.util.Arrays;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for RecordSets CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdatePTRRecordset.json
           */
          /**
           * Sample code: Create PTR recordset.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createPTRRecordset(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .dnsZones()
                  .manager()
                  .serviceClient()
                  .getRecordSets()
                  .createOrUpdateWithResponse(
                      "rg1",
                      "0.0.127.in-addr.arpa",
                      "1",
                      RecordType.PTR,
                      new RecordSetInner()
                          .withMetadata(mapOf("key1", "value1"))
                          .withTtl(3600L)
                          .withPtrRecords(Arrays.asList(new PtrRecord().withPtrdname("localhost"))),
                      null,
                      null,
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DnsManagementClient } = require("@azure/arm-dns");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a record set within a DNS zone.
       *
       * @summary Creates or updates a record set within a DNS zone.
       * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdatePTRRecordset.json
       */
      async function createPtrRecordset() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "0.0.127.in-addr.arpa";
        const relativeRecordSetName = "1";
        const recordType = "PTR";
        const parameters = {
          ptrRecords: [{ ptrdname: "localhost" }],
          ttl: 3600,
          metadata: { key1: "value1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = await client.recordSets.createOrUpdate(
          resourceGroupName,
          zoneName,
          relativeRecordSetName,
          recordType,
          parameters
        );
        console.log(result);
      }

      createPtrRecordset().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dns_5.0.1/sdk/dns/arm-dns/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/0.0.127.in-addr.arpa/PTR/1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "1",
        "type": "Microsoft.Network/dnsZones/PTR",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "1.0.0.127.in-addr.arpa",
          "PTRRecords": [
            {
              "ptrdname": "localhost"
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/0.0.127.in-addr.arpa/PTR/1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "1",
        "type": "Microsoft.Network/dnsZones/PTR",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "1.0.0.127.in-addr.arpa",
          "PTRRecords": [
            {
              "ptrdname": "localhost"
            }
          ]
        }
      }
- name: Create SOA recordset
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/SOA/@?api-version=2018-05-01
    body: >-
      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "SOARecord": {
            "host": "ns1.contoso.com",
            "email": "hostmaster.contoso.com",
            "serialNumber": 1,
            "refreshTime": 3600,
            "retryTime": 300,
            "expireTime": 2419200,
            "minimumTTL": 300
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/SOA/@?api-version=2018-05-01

      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "SOARecord": {
            "host": "ns1.contoso.com",
            "email": "hostmaster.contoso.com",
            "serialNumber": 1,
            "refreshTime": 3600,
            "retryTime": 300,
            "expireTime": 2419200,
            "minimumTTL": 300
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.dns.fluent.models.RecordSetInner;
      import com.azure.resourcemanager.dns.models.RecordType;
      import com.azure.resourcemanager.dns.models.SoaRecord;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for RecordSets CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateSOARecordset.json
           */
          /**
           * Sample code: Create SOA recordset.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createSOARecordset(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .dnsZones()
                  .manager()
                  .serviceClient()
                  .getRecordSets()
                  .createOrUpdateWithResponse(
                      "rg1",
                      "zone1",
                      "@",
                      RecordType.SOA,
                      new RecordSetInner()
                          .withMetadata(mapOf("key1", "value1"))
                          .withTtl(3600L)
                          .withSoaRecord(
                              new SoaRecord()
                                  .withHost("ns1.contoso.com")
                                  .withEmail("hostmaster.contoso.com")
                                  .withSerialNumber(1L)
                                  .withRefreshTime(3600L)
                                  .withRetryTime(300L)
                                  .withExpireTime(2419200L)
                                  .withMinimumTtl(300L)),
                      null,
                      null,
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DnsManagementClient } = require("@azure/arm-dns");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a record set within a DNS zone.
       *
       * @summary Creates or updates a record set within a DNS zone.
       * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateSOARecordset.json
       */
      async function createSoaRecordset() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "@";
        const recordType = "SOA";
        const parameters = {
          soaRecord: {
            email: "hostmaster.contoso.com",
            expireTime: 2419200,
            host: "ns1.contoso.com",
            minimumTtl: 300,
            refreshTime: 3600,
            retryTime: 300,
            serialNumber: 1,
          },
          ttl: 3600,
          metadata: { key1: "value1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = await client.recordSets.createOrUpdate(
          resourceGroupName,
          zoneName,
          relativeRecordSetName,
          recordType,
          parameters
        );
        console.log(result);
      }

      createSoaRecordset().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dns_5.0.1/sdk/dns/arm-dns/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/SOA/@",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "@",
        "type": "Microsoft.Network/dnsZones/SOA",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "zone1",
          "SOARecord": {
            "host": "ns1.contoso.com",
            "email": "hostmaster.contoso.com",
            "serialNumber": 1,
            "refreshTime": 3600,
            "retryTime": 300,
            "expireTime": 2419200,
            "minimumTTL": 300
          }
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/SOA/@",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "@",
        "type": "Microsoft.Network/dnsZones/SOA",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "zone1",
          "SOARecord": {
            "host": "ns1.contoso.com",
            "email": "hostmaster.contoso.com",
            "serialNumber": 1,
            "refreshTime": 3600,
            "retryTime": 300,
            "expireTime": 2419200,
            "minimumTTL": 300
          }
        }
      }
- name: Create SRV recordset
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/SRV/record1?api-version=2018-05-01
    body: >-
      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "SRVRecords": [
            {
              "priority": 0,
              "weight": 10,
              "port": 80,
              "target": "contoso.com"
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/SRV/record1?api-version=2018-05-01

      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "SRVRecords": [
            {
              "priority": 0,
              "weight": 10,
              "port": 80,
              "target": "contoso.com"
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.dns.fluent.models.RecordSetInner;
      import com.azure.resourcemanager.dns.models.RecordType;
      import com.azure.resourcemanager.dns.models.SrvRecord;
      import java.util.Arrays;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for RecordSets CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateSRVRecordset.json
           */
          /**
           * Sample code: Create SRV recordset.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createSRVRecordset(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .dnsZones()
                  .manager()
                  .serviceClient()
                  .getRecordSets()
                  .createOrUpdateWithResponse(
                      "rg1",
                      "zone1",
                      "record1",
                      RecordType.SRV,
                      new RecordSetInner()
                          .withMetadata(mapOf("key1", "value1"))
                          .withTtl(3600L)
                          .withSrvRecords(
                              Arrays
                                  .asList(
                                      new SrvRecord().withPriority(0).withWeight(10).withPort(80).withTarget("contoso.com"))),
                      null,
                      null,
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DnsManagementClient } = require("@azure/arm-dns");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a record set within a DNS zone.
       *
       * @summary Creates or updates a record set within a DNS zone.
       * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateSRVRecordset.json
       */
      async function createSrvRecordset() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "SRV";
        const parameters = {
          srvRecords: [{ port: 80, priority: 0, target: "contoso.com", weight: 10 }],
          ttl: 3600,
          metadata: { key1: "value1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = await client.recordSets.createOrUpdate(
          resourceGroupName,
          zoneName,
          relativeRecordSetName,
          recordType,
          parameters
        );
        console.log(result);
      }

      createSrvRecordset().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dns_5.0.1/sdk/dns/arm-dns/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/SRV/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/SRV",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "SRVRecords": [
            {
              "priority": 0,
              "weight": 10,
              "port": 80,
              "target": "contoso.com"
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/SRV/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/SRV",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "SRVRecords": [
            {
              "priority": 0,
              "weight": 10,
              "port": 80,
              "target": "contoso.com"
            }
          ]
        }
      }
- name: Create TXT recordset
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/TXT/record1?api-version=2018-05-01
    body: >-
      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "TXTRecords": [
            {
              "value": [
                "string1",
                "string2"
              ]
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/TXT/record1?api-version=2018-05-01

      {
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "TXTRecords": [
            {
              "value": [
                "string1",
                "string2"
              ]
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.dns.fluent.models.RecordSetInner;
      import com.azure.resourcemanager.dns.models.RecordType;
      import com.azure.resourcemanager.dns.models.TxtRecord;
      import java.util.Arrays;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for RecordSets CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateTXTRecordset.json
           */
          /**
           * Sample code: Create TXT recordset.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createTXTRecordset(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .dnsZones()
                  .manager()
                  .serviceClient()
                  .getRecordSets()
                  .createOrUpdateWithResponse(
                      "rg1",
                      "zone1",
                      "record1",
                      RecordType.TXT,
                      new RecordSetInner()
                          .withMetadata(mapOf("key1", "value1"))
                          .withTtl(3600L)
                          .withTxtRecords(Arrays.asList(new TxtRecord().withValue(Arrays.asList("string1", "string2")))),
                      null,
                      null,
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { DnsManagementClient } = require("@azure/arm-dns");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates a record set within a DNS zone.
       *
       * @summary Creates or updates a record set within a DNS zone.
       * x-ms-original-file: specification/dns/resource-manager/Microsoft.Network/stable/2018-05-01/examples/CreateOrUpdateTXTRecordset.json
       */
      async function createTxtRecordset() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const zoneName = "zone1";
        const relativeRecordSetName = "record1";
        const recordType = "TXT";
        const parameters = {
          ttl: 3600,
          txtRecords: [{ value: ["string1", "string2"] }],
          metadata: { key1: "value1" },
        };
        const credential = new DefaultAzureCredential();
        const client = new DnsManagementClient(credential, subscriptionId);
        const result = await client.recordSets.createOrUpdate(
          resourceGroupName,
          zoneName,
          relativeRecordSetName,
          recordType,
          parameters
        );
        console.log(result);
      }

      createTxtRecordset().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-dns_5.0.1/sdk/dns/arm-dns/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/TXT/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/TXT",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "TXTRecords": [
            {
              "value": [
                "string1",
                "string2"
              ]
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1/TXT/record1",
        "etag": "00000000-0000-0000-0000-000000000000",
        "name": "record1",
        "type": "Microsoft.Network/dnsZones/TXT",
        "properties": {
          "metadata": {
            "key1": "value1"
          },
          "TTL": 3600,
          "fqdn": "record1.zone1",
          "TXTRecords": [
            {
              "value": [
                "string1",
                "string2"
              ]
            }
          ]
        }
      }
security: []
metadata:
  description: >
    Learn more about DNS service - Creates or updates a record set within a DNS zone.
errorCodes: []
