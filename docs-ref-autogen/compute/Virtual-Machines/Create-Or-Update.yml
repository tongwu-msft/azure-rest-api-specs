### YamlMime:RESTOperation
uid: management.azure.com.compute.virtualmachines.createorupdate
name: Create Or Update
service: Compute
groupName: Virtual Machines
apiVersion: 2022-03-01
summary: The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}?api-version=2022-03-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: vmName
  in: path
  isRequired: true
  description: The name of the virtual machine.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: VirtualMachine
- name: 201 Created
  description: Created
  types:
  - uid: VirtualMachine
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: plan
    in: body
    description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
    types:
    - uid: Plan
  - name: identity
    in: body
    description: The identity of the virtual machine, if configured.
    types:
    - uid: VirtualMachineIdentity
  - name: zones
    in: body
    description: The virtual machine zones.
    types:
    - uid: string
      isArray: true
  - name: extendedLocation
    in: body
    description: The extended location of the Virtual Machine.
    types:
    - uid: ExtendedLocation
  - name: properties.hardwareProfile
    in: body
    description: Specifies the hardware settings for the virtual machine.
    types:
    - uid: HardwareProfile
  - name: properties.storageProfile
    in: body
    description: Specifies the storage settings for the virtual machine disks.
    types:
    - uid: StorageProfile
  - name: properties.additionalCapabilities
    in: body
    description: Specifies additional capabilities enabled or disabled on the virtual machine.
    types:
    - uid: AdditionalCapabilities
  - name: properties.osProfile
    in: body
    description: Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned.
    types:
    - uid: OSProfile
  - name: properties.networkProfile
    in: body
    description: Specifies the network interfaces of the virtual machine.
    types:
    - uid: NetworkProfile
  - name: properties.securityProfile
    in: body
    description: Specifies the Security related profile settings for the virtual machine.
    types:
    - uid: SecurityProfile
  - name: properties.diagnosticsProfile
    in: body
    description: 'Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.'
    types:
    - uid: DiagnosticsProfile
  - name: properties.availabilitySet
    in: body
    description: Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). <br><br> For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates) <br><br> Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. <br><br>This property cannot exist along with a non-null properties.virtualMachineScaleSet reference.
    types:
    - uid: SubResource
  - name: properties.virtualMachineScaleSet
    in: body
    description: 'Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. <br><br>This property cannot exist along with a non-null properties.availabilitySet reference. <br><br>Minimum api‐version: 2019‐03‐01'
    types:
    - uid: SubResource
  - name: properties.proximityPlacementGroup
    in: body
    description: 'Specifies information about the proximity placement group that the virtual machine should be assigned to. <br><br>Minimum api-version: 2018-04-01.'
    types:
    - uid: SubResource
  - name: properties.priority
    in: body
    description: 'Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01'
    types:
    - uid: VirtualMachinePriorityTypes
  - name: properties.evictionPolicy
    in: body
    description: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
    types:
    - uid: VirtualMachineEvictionPolicyTypes
  - name: properties.billingProfile
    in: body
    description: 'Specifies the billing related details of a Azure Spot virtual machine. <br><br>Minimum api-version: 2019-03-01.'
    types:
    - uid: BillingProfile
  - name: properties.host
    in: body
    description: 'Specifies information about the dedicated host that the virtual machine resides in. <br><br>Minimum api-version: 2018-10-01.'
    types:
    - uid: SubResource
  - name: properties.hostGroup
    in: body
    description: 'Specifies information about the dedicated host group that the virtual machine resides in. <br><br>Minimum api-version: 2020-06-01. <br><br>NOTE: User cannot specify both host and hostGroup properties.'
    types:
    - uid: SubResource
  - name: properties.licenseType
    in: body
    description: 'Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15'
    types:
    - uid: string
  - name: properties.extensionsTimeBudget
    in: body
    description: 'Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01'
    types:
    - uid: string
  - name: properties.platformFaultDomain
    in: body
    description: "Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains.<br><li>This is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot be updated once the Virtual Machine is created.<li>Fault domain assignment can be viewed in the Virtual Machine Instance View.<br><br>Minimum api‐version: 2020‐12‐01"
    types:
    - uid: integer
  - name: properties.scheduledEventsProfile
    in: body
    description: Specifies Scheduled Event related configurations.
    types:
    - uid: ScheduledEventsProfile
  - name: properties.userData
    in: body
    description: 'UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01'
    types:
    - uid: string
  - name: properties.capacityReservation
    in: body
    description: 'Specifies information about the capacity reservation that is used to allocate virtual machine. <br><br>Minimum api-version: 2021-04-01.'
    types:
    - uid: CapacityReservationProfile
  - name: properties.applicationProfile
    in: body
    description: Specifies the gallery applications that should be made available to the VM/VMSS
    types:
    - uid: ApplicationProfile
  - name: location
    in: body
    isRequired: true
    description: Resource location
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: Plan
  description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
  kind: object
  properties:
  - name: name
    description: The plan ID.
    types:
    - uid: string
  - name: publisher
    description: The publisher ID.
    types:
    - uid: string
  - name: product
    description: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
    types:
    - uid: string
  - name: promotionCode
    description: The promotion code.
    types:
    - uid: string
- name: VirtualMachineExtension
  description: Describes a Virtual Machine Extension.
  kind: object
  properties:
  - name: properties.forceUpdateTag
    description: How the extension handler should be forced to update even if the extension configuration has not changed.
    types:
    - uid: string
  - name: properties.publisher
    description: The name of the extension handler publisher.
    types:
    - uid: string
  - name: properties.type
    description: Specifies the type of the extension; an example is "CustomScriptExtension".
    types:
    - uid: string
  - name: properties.typeHandlerVersion
    description: Specifies the version of the script handler.
    types:
    - uid: string
  - name: properties.autoUpgradeMinorVersion
    description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
    types:
    - uid: boolean
  - name: properties.enableAutomaticUpgrade
    description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
    types:
    - uid: boolean
  - name: properties.settings
    description: Json formatted public settings for the extension.
    types:
    - uid: object
  - name: properties.protectedSettings
    description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
    types:
    - uid: object
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state, which only appears in the response.
    types:
    - uid: string
  - name: properties.instanceView
    description: The virtual machine extension instance view.
    types:
    - uid: VirtualMachineExtensionInstanceView
  - name: properties.suppressFailures
    description: Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.
    types:
    - uid: boolean
  - name: properties.protectedSettingsFromKeyVault
    description: The extensions protected settings that are passed by reference, and consumed from key vault
    types:
    - uid: object
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: VirtualMachineIdentity
  description: Identity for the virtual machine.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal id of virtual machine identity. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: type
    description: The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
    types:
    - uid: ResourceIdentityType
  - name: userAssignedIdentities
    description: "The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
    types:
    - uid: UserAssignedIdentities
- name: ExtendedLocation
  description: The complex type of the extended location.
  kind: object
  properties:
  - name: name
    description: The name of the extended location.
    types:
    - uid: string
  - name: type
    description: The type of the extended location.
    types:
    - uid: ExtendedLocationTypes
- name: HardwareProfile
  description: Specifies the hardware settings for the virtual machine.
  kind: object
  properties:
  - name: vmSize
    description: 'Specifies the size of the virtual machine. <br><br> The enum data type is currently deprecated and will be removed by December 23rd 2023. <br><br> Recommended way to get the list of available sizes is using these APIs: <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes). For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes). <br><br> The available VM sizes depend on region and availability set.'
    types:
    - uid: VirtualMachineSizeTypes
  - name: vmSizeProperties
    description: 'Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-07-01. <br><br> This feature is still in preview mode and is not supported for VirtualMachineScaleSet. <br><br> Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details.'
    types:
    - uid: VMSizeProperties
- name: StorageProfile
  description: Specifies the storage settings for the virtual machine disks.
  kind: object
  properties:
  - name: imageReference
    description: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
    types:
    - uid: ImageReference
  - name: osDisk
    description: Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
    types:
    - uid: OSDisk
  - name: dataDisks
    description: Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
    types:
    - uid: DataDisk
      isArray: true
- name: AdditionalCapabilities
  description: Enables or disables a capability on the virtual machine or virtual machine scale set.
  kind: object
  properties:
  - name: ultraSSDEnabled
    description: The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled.
    types:
    - uid: boolean
  - name: hibernationEnabled
    description: The flag that enables or disables hibernation capability on the VM.
    types:
    - uid: boolean
- name: OSProfile
  description: Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.
  kind: object
  properties:
  - name: computerName
    description: Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules).
    types:
    - uid: string
  - name: adminUsername
    description: Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters.
    types:
    - uid: string
  - name: adminPassword
    description: Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
    types:
    - uid: string
  - name: customData
    description: 'Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> **Note: Do not pass any secrets or passwords in customData property** <br><br> This property cannot be updated after the VM is created. <br><br> customData is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/) <br><br> For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)'
    types:
    - uid: string
  - name: windowsConfiguration
    description: Specifies Windows operating system settings on the virtual machine.
    types:
    - uid: WindowsConfiguration
  - name: linuxConfiguration
    description: Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
    types:
    - uid: LinuxConfiguration
  - name: secrets
    description: Specifies set of certificates that should be installed onto the virtual machine. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
    types:
    - uid: VaultSecretGroup
      isArray: true
  - name: allowExtensionOperations
    description: Specifies whether extension operations should be allowed on the virtual machine. <br><br>This may only be set to False when no extensions are present on the virtual machine.
    types:
    - uid: boolean
  - name: requireGuestProvisionSignal
    description: Optional property which must either be set to True or omitted.
    types:
    - uid: boolean
- name: NetworkProfile
  description: Specifies the network interfaces or the networking configuration of the virtual machine.
  kind: object
  properties:
  - name: networkInterfaces
    description: Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
    types:
    - uid: NetworkInterfaceReference
      isArray: true
  - name: networkApiVersion
    description: specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations
    types:
    - uid: NetworkApiVersion
  - name: networkInterfaceConfigurations
    description: Specifies the networking configurations that will be used to create the virtual machine networking resources.
    types:
    - uid: VirtualMachineNetworkInterfaceConfiguration
      isArray: true
- name: SecurityProfile
  description: Specifies the Security profile settings for the virtual machine or virtual machine scale set.
  kind: object
  properties:
  - name: uefiSettings
    description: 'Specifies the security settings like secure boot and vTPM used while creating the virtual machine. <br><br>Minimum api-version: 2020-12-01'
    types:
    - uid: UefiSettings
  - name: encryptionAtHost
    description: 'This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. <br><br> Default: The Encryption at host will be disabled unless this property is set to true for the resource.'
    types:
    - uid: boolean
  - name: securityType
    description: 'Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br> Default: UefiSettings will not be enabled unless this property is set.'
    types:
    - uid: SecurityTypes
- name: DiagnosticsProfile
  description: 'Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.'
  kind: object
  properties:
  - name: bootDiagnostics
    description: 'Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br>**NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription as the VM. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.'
    types:
    - uid: BootDiagnostics
- name: SubResource
  kind: object
  properties:
  - name: id
    description: Resource Id
    types:
    - uid: string
- name: BillingProfile
  description: 'Specifies the billing related details of a Azure Spot VM or VMSS. <br><br>Minimum api-version: 2019-03-01.'
  kind: object
  properties:
  - name: maxPrice
    description: 'Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01.'
    types:
    - uid: number
- name: VirtualMachineInstanceView
  description: The instance view of a virtual machine.
  kind: object
  properties:
  - name: platformUpdateDomain
    description: Specifies the update domain of the virtual machine.
    types:
    - uid: integer
  - name: platformFaultDomain
    description: Specifies the fault domain of the virtual machine.
    types:
    - uid: integer
  - name: computerName
    description: The computer name assigned to the virtual machine.
    types:
    - uid: string
  - name: osName
    description: The Operating System running on the virtual machine.
    types:
    - uid: string
  - name: osVersion
    description: The version of Operating System running on the virtual machine.
    types:
    - uid: string
  - name: hyperVGeneration
    description: Specifies the HyperVGeneration Type associated with a resource
    types:
    - uid: HyperVGenerationType
  - name: rdpThumbPrint
    description: The Remote desktop certificate thumbprint.
    types:
    - uid: string
  - name: vmAgent
    description: The VM Agent running on the virtual machine.
    types:
    - uid: VirtualMachineAgentInstanceView
  - name: maintenanceRedeployStatus
    description: The Maintenance Operation status on the virtual machine.
    types:
    - uid: MaintenanceRedeployStatus
  - name: disks
    description: The virtual machine disk information.
    types:
    - uid: DiskInstanceView
      isArray: true
  - name: extensions
    description: The extensions information.
    types:
    - uid: VirtualMachineExtensionInstanceView
      isArray: true
  - name: vmHealth
    isReadyOnly: true
    description: The health status for the VM.
    types:
    - uid: VirtualMachineHealthStatus
  - name: bootDiagnostics
    description: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
    types:
    - uid: BootDiagnosticsInstanceView
  - name: assignedHost
    isReadyOnly: true
    description: 'Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. <br><br>Minimum api-version: 2020-06-01.'
    types:
    - uid: string
  - name: statuses
    description: The resource status information.
    types:
    - uid: InstanceViewStatus
      isArray: true
  - name: patchStatus
    description: '[Preview Feature] The status of virtual machine patch operations.'
    types:
    - uid: VirtualMachinePatchStatus
- name: ScheduledEventsProfile
  kind: object
  properties:
  - name: terminateNotificationProfile
    description: Specifies Terminate Scheduled Event related configurations.
    types:
    - uid: TerminateNotificationProfile
- name: CapacityReservationProfile
  description: The parameters of a capacity reservation Profile.
  kind: object
  properties:
  - name: capacityReservationGroup
    description: Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details.
    types:
    - uid: SubResource
- name: ApplicationProfile
  description: Contains the list of gallery applications that should be made available to the VM/VMSS
  kind: object
  properties:
  - name: galleryApplications
    description: Specifies the gallery applications that should be made available to the VM/VMSS
    types:
    - uid: VMGalleryApplication
      isArray: true
- name: VirtualMachine
  description: Describes a Virtual Machine.
  kind: object
  properties:
  - name: plan
    description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
    types:
    - uid: Plan
  - name: resources
    isReadyOnly: true
    description: The virtual machine child extension resources.
    types:
    - uid: VirtualMachineExtension
      isArray: true
  - name: identity
    description: The identity of the virtual machine, if configured.
    types:
    - uid: VirtualMachineIdentity
  - name: zones
    description: The virtual machine zones.
    types:
    - uid: string
      isArray: true
  - name: extendedLocation
    description: The extended location of the Virtual Machine.
    types:
    - uid: ExtendedLocation
  - name: properties.hardwareProfile
    description: Specifies the hardware settings for the virtual machine.
    types:
    - uid: HardwareProfile
  - name: properties.storageProfile
    description: Specifies the storage settings for the virtual machine disks.
    types:
    - uid: StorageProfile
  - name: properties.additionalCapabilities
    description: Specifies additional capabilities enabled or disabled on the virtual machine.
    types:
    - uid: AdditionalCapabilities
  - name: properties.osProfile
    description: Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned.
    types:
    - uid: OSProfile
  - name: properties.networkProfile
    description: Specifies the network interfaces of the virtual machine.
    types:
    - uid: NetworkProfile
  - name: properties.securityProfile
    description: Specifies the Security related profile settings for the virtual machine.
    types:
    - uid: SecurityProfile
  - name: properties.diagnosticsProfile
    description: 'Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.'
    types:
    - uid: DiagnosticsProfile
  - name: properties.availabilitySet
    description: Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). <br><br> For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates) <br><br> Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. <br><br>This property cannot exist along with a non-null properties.virtualMachineScaleSet reference.
    types:
    - uid: SubResource
  - name: properties.virtualMachineScaleSet
    description: 'Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. <br><br>This property cannot exist along with a non-null properties.availabilitySet reference. <br><br>Minimum api‐version: 2019‐03‐01'
    types:
    - uid: SubResource
  - name: properties.proximityPlacementGroup
    description: 'Specifies information about the proximity placement group that the virtual machine should be assigned to. <br><br>Minimum api-version: 2018-04-01.'
    types:
    - uid: SubResource
  - name: properties.priority
    description: 'Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01'
    types:
    - uid: VirtualMachinePriorityTypes
  - name: properties.evictionPolicy
    description: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
    types:
    - uid: VirtualMachineEvictionPolicyTypes
  - name: properties.billingProfile
    description: 'Specifies the billing related details of a Azure Spot virtual machine. <br><br>Minimum api-version: 2019-03-01.'
    types:
    - uid: BillingProfile
  - name: properties.host
    description: 'Specifies information about the dedicated host that the virtual machine resides in. <br><br>Minimum api-version: 2018-10-01.'
    types:
    - uid: SubResource
  - name: properties.hostGroup
    description: 'Specifies information about the dedicated host group that the virtual machine resides in. <br><br>Minimum api-version: 2020-06-01. <br><br>NOTE: User cannot specify both host and hostGroup properties.'
    types:
    - uid: SubResource
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state, which only appears in the response.
    types:
    - uid: string
  - name: properties.instanceView
    isReadyOnly: true
    description: The virtual machine instance view.
    types:
    - uid: VirtualMachineInstanceView
  - name: properties.licenseType
    description: 'Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15'
    types:
    - uid: string
  - name: properties.vmId
    isReadyOnly: true
    description: Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS commands.
    types:
    - uid: string
  - name: properties.extensionsTimeBudget
    description: 'Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01'
    types:
    - uid: string
  - name: properties.platformFaultDomain
    description: "Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains.<br><li>This is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot be updated once the Virtual Machine is created.<li>Fault domain assignment can be viewed in the Virtual Machine Instance View.<br><br>Minimum api‐version: 2020‐12‐01"
    types:
    - uid: integer
  - name: properties.scheduledEventsProfile
    description: Specifies Scheduled Event related configurations.
    types:
    - uid: ScheduledEventsProfile
  - name: properties.userData
    description: 'UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01'
    types:
    - uid: string
  - name: properties.capacityReservation
    description: 'Specifies information about the capacity reservation that is used to allocate virtual machine. <br><br>Minimum api-version: 2021-04-01.'
    types:
    - uid: CapacityReservationProfile
  - name: properties.applicationProfile
    description: Specifies the gallery applications that should be made available to the VM/VMSS
    types:
    - uid: ApplicationProfile
  - name: properties.timeCreated
    isReadyOnly: true
    description: 'Specifies the time at which the Virtual Machine resource was created.<br><br>Minimum api-version: 2022-03-01.'
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: An error response from the Compute service.
  kind: object
  properties:
  - name: error
    description: Api error.
    types:
    - uid: ApiError
- name: VirtualMachineExtensionInstanceView
  description: The instance view of a virtual machine extension.
  kind: object
  properties:
  - name: name
    description: The virtual machine extension name.
    types:
    - uid: string
  - name: type
    description: Specifies the type of the extension; an example is "CustomScriptExtension".
    types:
    - uid: string
  - name: typeHandlerVersion
    description: Specifies the version of the script handler.
    types:
    - uid: string
  - name: substatuses
    description: The resource status information.
    types:
    - uid: InstanceViewStatus
      isArray: true
  - name: statuses
    description: The resource status information.
    types:
    - uid: InstanceViewStatus
      isArray: true
- name: ResourceIdentityType
  description: The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
  - name: UserAssigned
    types:
    - uid: string
  - name: SystemAssigned, UserAssigned
    types:
    - uid: string
  - name: None
    types:
    - uid: string
- name: UserAssignedIdentities
  description: "The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
  kind: object
  properties:
  - name: ''
    description: ''
    types:
    - uid: ''
- name: ExtendedLocationTypes
  description: The type of the extended location.
  kind: enum
  properties:
  - name: EdgeZone
    types:
    - uid: string
- name: VirtualMachineSizeTypes
  description: 'Specifies the size of the virtual machine. <br><br> The enum data type is currently deprecated and will be removed by December 23rd 2023. <br><br> Recommended way to get the list of available sizes is using these APIs: <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes). For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes). <br><br> The available VM sizes depend on region and availability set.'
  kind: enum
  properties:
  - name: Basic_A0
    types:
    - uid: string
  - name: Basic_A1
    types:
    - uid: string
  - name: Basic_A2
    types:
    - uid: string
  - name: Basic_A3
    types:
    - uid: string
  - name: Basic_A4
    types:
    - uid: string
  - name: Standard_A0
    types:
    - uid: string
  - name: Standard_A1
    types:
    - uid: string
  - name: Standard_A2
    types:
    - uid: string
  - name: Standard_A3
    types:
    - uid: string
  - name: Standard_A4
    types:
    - uid: string
  - name: Standard_A5
    types:
    - uid: string
  - name: Standard_A6
    types:
    - uid: string
  - name: Standard_A7
    types:
    - uid: string
  - name: Standard_A8
    types:
    - uid: string
  - name: Standard_A9
    types:
    - uid: string
  - name: Standard_A10
    types:
    - uid: string
  - name: Standard_A11
    types:
    - uid: string
  - name: Standard_A1_v2
    types:
    - uid: string
  - name: Standard_A2_v2
    types:
    - uid: string
  - name: Standard_A4_v2
    types:
    - uid: string
  - name: Standard_A8_v2
    types:
    - uid: string
  - name: Standard_A2m_v2
    types:
    - uid: string
  - name: Standard_A4m_v2
    types:
    - uid: string
  - name: Standard_A8m_v2
    types:
    - uid: string
  - name: Standard_B1s
    types:
    - uid: string
  - name: Standard_B1ms
    types:
    - uid: string
  - name: Standard_B2s
    types:
    - uid: string
  - name: Standard_B2ms
    types:
    - uid: string
  - name: Standard_B4ms
    types:
    - uid: string
  - name: Standard_B8ms
    types:
    - uid: string
  - name: Standard_D1
    types:
    - uid: string
  - name: Standard_D2
    types:
    - uid: string
  - name: Standard_D3
    types:
    - uid: string
  - name: Standard_D4
    types:
    - uid: string
  - name: Standard_D11
    types:
    - uid: string
  - name: Standard_D12
    types:
    - uid: string
  - name: Standard_D13
    types:
    - uid: string
  - name: Standard_D14
    types:
    - uid: string
  - name: Standard_D1_v2
    types:
    - uid: string
  - name: Standard_D2_v2
    types:
    - uid: string
  - name: Standard_D3_v2
    types:
    - uid: string
  - name: Standard_D4_v2
    types:
    - uid: string
  - name: Standard_D5_v2
    types:
    - uid: string
  - name: Standard_D2_v3
    types:
    - uid: string
  - name: Standard_D4_v3
    types:
    - uid: string
  - name: Standard_D8_v3
    types:
    - uid: string
  - name: Standard_D16_v3
    types:
    - uid: string
  - name: Standard_D32_v3
    types:
    - uid: string
  - name: Standard_D64_v3
    types:
    - uid: string
  - name: Standard_D2s_v3
    types:
    - uid: string
  - name: Standard_D4s_v3
    types:
    - uid: string
  - name: Standard_D8s_v3
    types:
    - uid: string
  - name: Standard_D16s_v3
    types:
    - uid: string
  - name: Standard_D32s_v3
    types:
    - uid: string
  - name: Standard_D64s_v3
    types:
    - uid: string
  - name: Standard_D11_v2
    types:
    - uid: string
  - name: Standard_D12_v2
    types:
    - uid: string
  - name: Standard_D13_v2
    types:
    - uid: string
  - name: Standard_D14_v2
    types:
    - uid: string
  - name: Standard_D15_v2
    types:
    - uid: string
  - name: Standard_DS1
    types:
    - uid: string
  - name: Standard_DS2
    types:
    - uid: string
  - name: Standard_DS3
    types:
    - uid: string
  - name: Standard_DS4
    types:
    - uid: string
  - name: Standard_DS11
    types:
    - uid: string
  - name: Standard_DS12
    types:
    - uid: string
  - name: Standard_DS13
    types:
    - uid: string
  - name: Standard_DS14
    types:
    - uid: string
  - name: Standard_DS1_v2
    types:
    - uid: string
  - name: Standard_DS2_v2
    types:
    - uid: string
  - name: Standard_DS3_v2
    types:
    - uid: string
  - name: Standard_DS4_v2
    types:
    - uid: string
  - name: Standard_DS5_v2
    types:
    - uid: string
  - name: Standard_DS11_v2
    types:
    - uid: string
  - name: Standard_DS12_v2
    types:
    - uid: string
  - name: Standard_DS13_v2
    types:
    - uid: string
  - name: Standard_DS14_v2
    types:
    - uid: string
  - name: Standard_DS15_v2
    types:
    - uid: string
  - name: Standard_DS13-4_v2
    types:
    - uid: string
  - name: Standard_DS13-2_v2
    types:
    - uid: string
  - name: Standard_DS14-8_v2
    types:
    - uid: string
  - name: Standard_DS14-4_v2
    types:
    - uid: string
  - name: Standard_E2_v3
    types:
    - uid: string
  - name: Standard_E4_v3
    types:
    - uid: string
  - name: Standard_E8_v3
    types:
    - uid: string
  - name: Standard_E16_v3
    types:
    - uid: string
  - name: Standard_E32_v3
    types:
    - uid: string
  - name: Standard_E64_v3
    types:
    - uid: string
  - name: Standard_E2s_v3
    types:
    - uid: string
  - name: Standard_E4s_v3
    types:
    - uid: string
  - name: Standard_E8s_v3
    types:
    - uid: string
  - name: Standard_E16s_v3
    types:
    - uid: string
  - name: Standard_E32s_v3
    types:
    - uid: string
  - name: Standard_E64s_v3
    types:
    - uid: string
  - name: Standard_E32-16_v3
    types:
    - uid: string
  - name: Standard_E32-8s_v3
    types:
    - uid: string
  - name: Standard_E64-32s_v3
    types:
    - uid: string
  - name: Standard_E64-16s_v3
    types:
    - uid: string
  - name: Standard_F1
    types:
    - uid: string
  - name: Standard_F2
    types:
    - uid: string
  - name: Standard_F4
    types:
    - uid: string
  - name: Standard_F8
    types:
    - uid: string
  - name: Standard_F16
    types:
    - uid: string
  - name: Standard_F1s
    types:
    - uid: string
  - name: Standard_F2s
    types:
    - uid: string
  - name: Standard_F4s
    types:
    - uid: string
  - name: Standard_F8s
    types:
    - uid: string
  - name: Standard_F16s
    types:
    - uid: string
  - name: Standard_F2s_v2
    types:
    - uid: string
  - name: Standard_F4s_v2
    types:
    - uid: string
  - name: Standard_F8s_v2
    types:
    - uid: string
  - name: Standard_F16s_v2
    types:
    - uid: string
  - name: Standard_F32s_v2
    types:
    - uid: string
  - name: Standard_F64s_v2
    types:
    - uid: string
  - name: Standard_F72s_v2
    types:
    - uid: string
  - name: Standard_G1
    types:
    - uid: string
  - name: Standard_G2
    types:
    - uid: string
  - name: Standard_G3
    types:
    - uid: string
  - name: Standard_G4
    types:
    - uid: string
  - name: Standard_G5
    types:
    - uid: string
  - name: Standard_GS1
    types:
    - uid: string
  - name: Standard_GS2
    types:
    - uid: string
  - name: Standard_GS3
    types:
    - uid: string
  - name: Standard_GS4
    types:
    - uid: string
  - name: Standard_GS5
    types:
    - uid: string
  - name: Standard_GS4-8
    types:
    - uid: string
  - name: Standard_GS4-4
    types:
    - uid: string
  - name: Standard_GS5-16
    types:
    - uid: string
  - name: Standard_GS5-8
    types:
    - uid: string
  - name: Standard_H8
    types:
    - uid: string
  - name: Standard_H16
    types:
    - uid: string
  - name: Standard_H8m
    types:
    - uid: string
  - name: Standard_H16m
    types:
    - uid: string
  - name: Standard_H16r
    types:
    - uid: string
  - name: Standard_H16mr
    types:
    - uid: string
  - name: Standard_L4s
    types:
    - uid: string
  - name: Standard_L8s
    types:
    - uid: string
  - name: Standard_L16s
    types:
    - uid: string
  - name: Standard_L32s
    types:
    - uid: string
  - name: Standard_M64s
    types:
    - uid: string
  - name: Standard_M64ms
    types:
    - uid: string
  - name: Standard_M128s
    types:
    - uid: string
  - name: Standard_M128ms
    types:
    - uid: string
  - name: Standard_M64-32ms
    types:
    - uid: string
  - name: Standard_M64-16ms
    types:
    - uid: string
  - name: Standard_M128-64ms
    types:
    - uid: string
  - name: Standard_M128-32ms
    types:
    - uid: string
  - name: Standard_NC6
    types:
    - uid: string
  - name: Standard_NC12
    types:
    - uid: string
  - name: Standard_NC24
    types:
    - uid: string
  - name: Standard_NC24r
    types:
    - uid: string
  - name: Standard_NC6s_v2
    types:
    - uid: string
  - name: Standard_NC12s_v2
    types:
    - uid: string
  - name: Standard_NC24s_v2
    types:
    - uid: string
  - name: Standard_NC24rs_v2
    types:
    - uid: string
  - name: Standard_NC6s_v3
    types:
    - uid: string
  - name: Standard_NC12s_v3
    types:
    - uid: string
  - name: Standard_NC24s_v3
    types:
    - uid: string
  - name: Standard_NC24rs_v3
    types:
    - uid: string
  - name: Standard_ND6s
    types:
    - uid: string
  - name: Standard_ND12s
    types:
    - uid: string
  - name: Standard_ND24s
    types:
    - uid: string
  - name: Standard_ND24rs
    types:
    - uid: string
  - name: Standard_NV6
    types:
    - uid: string
  - name: Standard_NV12
    types:
    - uid: string
  - name: Standard_NV24
    types:
    - uid: string
- name: VMSizeProperties
  description: Specifies VM Size Property settings on the virtual machine.
  kind: object
  properties:
  - name: vCPUsAvailable
    description: Specifies the number of vCPUs available for the VM. <br><br> When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) .
    types:
    - uid: integer
  - name: vCPUsPerCore
    description: Specifies the vCPU to physical core ratio. <br><br> When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) <br><br> Setting this property to 1 also means that hyper-threading is disabled.
    types:
    - uid: integer
- name: ImageReference
  description: 'Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.'
  kind: object
  properties:
  - name: publisher
    description: The image publisher.
    types:
    - uid: string
  - name: offer
    description: Specifies the offer of the platform image or marketplace image used to create the virtual machine.
    types:
    - uid: string
  - name: sku
    description: The image SKU.
    types:
    - uid: string
  - name: version
    description: Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input.
    types:
    - uid: string
  - name: exactVersion
    isReadyOnly: true
    description: Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.
    types:
    - uid: string
  - name: sharedGalleryImageId
    description: Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call.
    types:
    - uid: string
  - name: communityGalleryImageId
    description: Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call.
    types:
    - uid: string
  - name: id
    description: Resource Id
    types:
    - uid: string
- name: OSDisk
  description: Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
  kind: object
  properties:
  - name: osType
    description: 'This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**'
    types:
    - uid: OperatingSystemTypes
  - name: encryptionSettings
    description: 'Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15'
    types:
    - uid: DiskEncryptionSettings
  - name: name
    description: The disk name.
    types:
    - uid: string
  - name: vhd
    description: The virtual hard disk.
    types:
    - uid: VirtualHardDisk
  - name: image
    description: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
    types:
    - uid: VirtualHardDisk
  - name: caching
    description: 'Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None** for Standard storage. **ReadOnly** for Premium storage.'
    types:
    - uid: CachingTypes
  - name: writeAcceleratorEnabled
    description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
    types:
    - uid: boolean
  - name: diffDiskSettings
    description: Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine.
    types:
    - uid: DiffDiskSettings
  - name: createOption
    description: Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
    types:
    - uid: DiskCreateOptionTypes
  - name: diskSizeGB
    description: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
    types:
    - uid: integer
  - name: managedDisk
    description: The managed disk parameters.
    types:
    - uid: ManagedDiskParameters
  - name: deleteOption
    description: 'Specifies whether OS Disk should be deleted or detached upon VM deletion. <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VM is deleted.<br><br> **Detach** If this value is used, the os disk is retained after VM is deleted. <br><br> The default value is set to **detach**. For an ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for ephemeral OS Disk.'
    types:
    - uid: DiskDeleteOptionTypes
- name: DataDisk
  description: Describes a data disk.
  kind: object
  properties:
  - name: lun
    description: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
    types:
    - uid: integer
  - name: name
    description: The disk name.
    types:
    - uid: string
  - name: vhd
    description: The virtual hard disk.
    types:
    - uid: VirtualHardDisk
  - name: image
    description: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
    types:
    - uid: VirtualHardDisk
  - name: caching
    description: 'Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**'
    types:
    - uid: CachingTypes
  - name: writeAcceleratorEnabled
    description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
    types:
    - uid: boolean
  - name: createOption
    description: Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
    types:
    - uid: DiskCreateOptionTypes
  - name: diskSizeGB
    description: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
    types:
    - uid: integer
  - name: managedDisk
    description: The managed disk parameters.
    types:
    - uid: ManagedDiskParameters
  - name: toBeDetached
    description: Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset
    types:
    - uid: boolean
  - name: diskIOPSReadWrite
    isReadyOnly: true
    description: Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
    types:
    - uid: integer
  - name: diskMBpsReadWrite
    isReadyOnly: true
    description: Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
    types:
    - uid: integer
  - name: detachOption
    description: "Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: **ForceDetach**. <br><br> detachOption: **ForceDetach** is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. <br><br> This feature is still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to 'true' along with setting detachOption: 'ForceDetach'."
    types:
    - uid: DiskDetachOptionTypes
  - name: deleteOption
    description: 'Specifies whether data disk should be deleted or detached upon VM deletion.<br><br> Possible values: <br><br> **Delete** If this value is used, the data disk is deleted when VM is deleted.<br><br> **Detach** If this value is used, the data disk is retained after VM is deleted.<br><br> The default value is set to **detach**'
    types:
    - uid: DiskDeleteOptionTypes
- name: WindowsConfiguration
  description: Specifies Windows operating system settings on the virtual machine.
  kind: object
  properties:
  - name: provisionVMAgent
    description: Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
    types:
    - uid: boolean
  - name: enableAutomaticUpdates
    description: Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. <br><br> For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.
    types:
    - uid: boolean
  - name: timeZone
    description: Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". <br><br> Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
    types:
    - uid: string
  - name: additionalUnattendContent
    description: Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
    types:
    - uid: AdditionalUnattendContent
      isArray: true
  - name: patchSettings
    description: '[Preview Feature] Specifies settings related to VM Guest Patching on Windows.'
    types:
    - uid: PatchSettings
  - name: winRM
    description: Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
    types:
    - uid: WinRMConfiguration
- name: LinuxConfiguration
  description: Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
  kind: object
  properties:
  - name: disablePasswordAuthentication
    description: Specifies whether password authentication should be disabled.
    types:
    - uid: boolean
  - name: ssh
    description: Specifies the ssh key configuration for a Linux OS.
    types:
    - uid: SshConfiguration
  - name: provisionVMAgent
    description: Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
    types:
    - uid: boolean
  - name: patchSettings
    description: '[Preview Feature] Specifies settings related to VM Guest Patching on Linux.'
    types:
    - uid: LinuxPatchSettings
- name: VaultSecretGroup
  description: Describes a set of certificates which are all in the same Key Vault.
  kind: object
  properties:
  - name: sourceVault
    description: The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
    types:
    - uid: SubResource
  - name: vaultCertificates
    description: The list of key vault references in SourceVault which contain certificates.
    types:
    - uid: VaultCertificate
      isArray: true
- name: NetworkInterfaceReference
  description: Describes a network interface reference.
  kind: object
  properties:
  - name: properties.primary
    description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
    types:
    - uid: boolean
  - name: properties.deleteOption
    description: Specify what happens to the network interface when the VM is deleted
    types:
    - uid: DeleteOptions
  - name: id
    description: Resource Id
    types:
    - uid: string
- name: NetworkApiVersion
  description: specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations
  kind: enum
  properties:
  - name: 2020-11-01
    types:
    - uid: string
- name: VirtualMachineNetworkInterfaceConfiguration
  description: Describes a virtual machine network interface configurations.
  kind: object
  properties:
  - name: name
    description: The network interface configuration name.
    types:
    - uid: string
  - name: properties.primary
    description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
    types:
    - uid: boolean
  - name: properties.deleteOption
    description: Specify what happens to the network interface when the VM is deleted
    types:
    - uid: DeleteOptions
  - name: properties.enableAcceleratedNetworking
    description: Specifies whether the network interface is accelerated networking-enabled.
    types:
    - uid: boolean
  - name: properties.enableFpga
    description: Specifies whether the network interface is FPGA networking-enabled.
    types:
    - uid: boolean
  - name: properties.enableIPForwarding
    description: Whether IP forwarding enabled on this NIC.
    types:
    - uid: boolean
  - name: properties.networkSecurityGroup
    description: The network security group.
    types:
    - uid: SubResource
  - name: properties.dnsSettings
    description: The dns settings to be applied on the network interfaces.
    types:
    - uid: VirtualMachineNetworkInterfaceDnsSettingsConfiguration
  - name: properties.ipConfigurations
    description: Specifies the IP configurations of the network interface.
    types:
    - uid: VirtualMachineNetworkInterfaceIPConfiguration
      isArray: true
  - name: properties.dscpConfiguration
    description: ''
    types:
    - uid: SubResource
- name: UefiSettings
  description: 'Specifies the security settings like secure boot and vTPM used while creating the virtual machine. <br><br>Minimum api-version: 2020-12-01'
  kind: object
  properties:
  - name: secureBootEnabled
    description: 'Specifies whether secure boot should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01'
    types:
    - uid: boolean
  - name: vTpmEnabled
    description: 'Specifies whether vTPM should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01'
    types:
    - uid: boolean
- name: SecurityTypes
  description: 'Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br> Default: UefiSettings will not be enabled unless this property is set.'
  kind: enum
  properties:
  - name: TrustedLaunch
    types:
    - uid: string
  - name: ConfidentialVM
    types:
    - uid: string
- name: BootDiagnostics
  description: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
  kind: object
  properties:
  - name: enabled
    description: Whether boot diagnostics should be enabled on the Virtual Machine.
    types:
    - uid: boolean
  - name: storageUri
    description: Uri of the storage account to use for placing the console output and screenshot. <br><br>If storageUri is not specified while enabling boot diagnostics, managed storage will be used.
    types:
    - uid: string
- name: HyperVGenerationType
  description: Specifies the HyperVGeneration Type associated with a resource
  kind: enum
  properties:
  - name: V1
    types:
    - uid: string
  - name: V2
    types:
    - uid: string
- name: VirtualMachineAgentInstanceView
  description: The instance view of the VM Agent running on the virtual machine.
  kind: object
  properties:
  - name: vmAgentVersion
    description: The VM Agent full version.
    types:
    - uid: string
  - name: extensionHandlers
    description: The virtual machine extension handler instance view.
    types:
    - uid: VirtualMachineExtensionHandlerInstanceView
      isArray: true
  - name: statuses
    description: The resource status information.
    types:
    - uid: InstanceViewStatus
      isArray: true
- name: MaintenanceRedeployStatus
  description: Maintenance Operation Status.
  kind: object
  properties:
  - name: isCustomerInitiatedMaintenanceAllowed
    description: True, if customer is allowed to perform Maintenance.
    types:
    - uid: boolean
  - name: preMaintenanceWindowStartTime
    description: Start Time for the Pre Maintenance Window.
    types:
    - uid: string
  - name: preMaintenanceWindowEndTime
    description: End Time for the Pre Maintenance Window.
    types:
    - uid: string
  - name: maintenanceWindowStartTime
    description: Start Time for the Maintenance Window.
    types:
    - uid: string
  - name: maintenanceWindowEndTime
    description: End Time for the Maintenance Window.
    types:
    - uid: string
  - name: lastOperationResultCode
    description: The Last Maintenance Operation Result Code.
    types:
    - uid: MaintenanceOperationResultCodeTypes
  - name: lastOperationMessage
    description: Message returned for the last Maintenance Operation.
    types:
    - uid: string
- name: DiskInstanceView
  description: The instance view of the disk.
  kind: object
  properties:
  - name: name
    description: The disk name.
    types:
    - uid: string
  - name: encryptionSettings
    description: 'Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15'
    types:
    - uid: DiskEncryptionSettings
      isArray: true
  - name: statuses
    description: The resource status information.
    types:
    - uid: InstanceViewStatus
      isArray: true
- name: VirtualMachineHealthStatus
  description: The health status of the VM.
  kind: object
  properties:
  - name: status
    isReadyOnly: true
    description: The health status information for the VM.
    types:
    - uid: InstanceViewStatus
- name: BootDiagnosticsInstanceView
  description: The instance view of a virtual machine boot diagnostics.
  kind: object
  properties:
  - name: consoleScreenshotBlobUri
    isReadyOnly: true
    description: 'The console screenshot blob URI. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with managed storage.'
    types:
    - uid: string
  - name: serialConsoleLogBlobUri
    isReadyOnly: true
    description: 'The serial console log blob Uri. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with managed storage.'
    types:
    - uid: string
  - name: status
    isReadyOnly: true
    description: 'The boot diagnostics status information for the VM. <br><br> NOTE: It will be set only if there are errors encountered in enabling boot diagnostics.'
    types:
    - uid: InstanceViewStatus
- name: InstanceViewStatus
  description: Instance view status.
  kind: object
  properties:
  - name: code
    description: The status code.
    types:
    - uid: string
  - name: level
    description: The level code.
    types:
    - uid: StatusLevelTypes
  - name: displayStatus
    description: The short localizable label for the status.
    types:
    - uid: string
  - name: message
    description: The detailed status message, including for alerts and error messages.
    types:
    - uid: string
  - name: time
    description: The time of the status.
    types:
    - uid: string
- name: VirtualMachinePatchStatus
  description: The status of virtual machine patch operations.
  kind: object
  properties:
  - name: availablePatchSummary
    description: The available patch summary of the latest assessment operation for the virtual machine.
    types:
    - uid: AvailablePatchSummary
  - name: lastPatchInstallationSummary
    description: The installation summary of the latest installation operation for the virtual machine.
    types:
    - uid: LastPatchInstallationSummary
  - name: configurationStatuses
    isReadyOnly: true
    description: The enablement status of the specified patchMode
    types:
    - uid: InstanceViewStatus
      isArray: true
- name: TerminateNotificationProfile
  kind: object
  properties:
  - name: notBeforeTimeout
    description: Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)
    types:
    - uid: string
  - name: enable
    description: Specifies whether the Terminate Scheduled event is enabled or disabled.
    types:
    - uid: boolean
- name: VMGalleryApplication
  description: Specifies the required information to reference a compute gallery application version
  kind: object
  properties:
  - name: tags
    description: Optional, Specifies a passthrough value for more generic context.
    types:
    - uid: string
  - name: order
    description: Optional, Specifies the order in which the packages have to be installed
    types:
    - uid: integer
  - name: packageReferenceId
    description: Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}
    types:
    - uid: string
  - name: configurationReference
    description: Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided
    types:
    - uid: string
  - name: treatFailureAsDeploymentFailure
    description: Optional, If true, any failure for any operation in the VmApplication will fail the deployment
    types:
    - uid: boolean
  - name: enableAutomaticUpgrade
    description: If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS
    types:
    - uid: boolean
- name: VirtualMachinePriorityTypes
  description: 'Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01'
  kind: enum
  properties:
  - name: Regular
    types:
    - uid: string
  - name: Low
    types:
    - uid: string
  - name: Spot
    types:
    - uid: string
- name: VirtualMachineEvictionPolicyTypes
  description: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
  kind: enum
  properties:
  - name: Deallocate
    types:
    - uid: string
  - name: Delete
    types:
    - uid: string
- name: ApiError
  description: Api error.
  kind: object
  properties:
  - name: details
    description: The Api error details
    types:
    - uid: ApiErrorBase
      isArray: true
  - name: innererror
    description: The Api inner error
    types:
    - uid: InnerError
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: OperatingSystemTypes
  description: 'This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**'
  kind: enum
  properties:
  - name: Windows
    types:
    - uid: string
  - name: Linux
    types:
    - uid: string
- name: DiskEncryptionSettings
  description: Describes a Encryption Settings for a Disk
  kind: object
  properties:
  - name: diskEncryptionKey
    description: Specifies the location of the disk encryption key, which is a Key Vault Secret.
    types:
    - uid: KeyVaultSecretReference
  - name: keyEncryptionKey
    description: Specifies the location of the key encryption key in Key Vault.
    types:
    - uid: KeyVaultKeyReference
  - name: enabled
    description: Specifies whether disk encryption should be enabled on the virtual machine.
    types:
    - uid: boolean
- name: VirtualHardDisk
  description: Describes the uri of a disk.
  kind: object
  properties:
  - name: uri
    description: Specifies the virtual hard disk's uri.
    types:
    - uid: string
- name: CachingTypes
  description: 'Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None** for Standard storage. **ReadOnly** for Premium storage.'
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: ReadOnly
    types:
    - uid: string
  - name: ReadWrite
    types:
    - uid: string
- name: DiffDiskSettings
  description: 'Describes the parameters of ephemeral disk settings that can be specified for operating system disk. <br><br> NOTE: The ephemeral disk settings can only be specified for managed disk.'
  kind: object
  properties:
  - name: option
    description: Specifies the ephemeral disk settings for operating system disk.
    types:
    - uid: DiffDiskOptions
  - name: placement
    description: 'Specifies the ephemeral disk placement for operating system disk.<br><br> Possible values are: <br><br> **CacheDisk** <br><br> **ResourceDisk** <br><br> Default: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** is used.<br><br> Refer to VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk.'
    types:
    - uid: DiffDiskPlacement
- name: DiskCreateOptionTypes
  description: Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
  kind: enum
  properties:
  - name: FromImage
    types:
    - uid: string
  - name: Empty
    types:
    - uid: string
  - name: Attach
    types:
    - uid: string
- name: ManagedDiskParameters
  description: The parameters of a managed disk.
  kind: object
  properties:
  - name: storageAccountType
    description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
    types:
    - uid: StorageAccountTypes
  - name: diskEncryptionSet
    description: Specifies the customer managed disk encryption set resource id for the managed disk.
    types:
    - uid: DiskEncryptionSetParameters
  - name: securityProfile
    description: Specifies the security profile for the managed disk.
    types:
    - uid: VMDiskSecurityProfile
  - name: id
    description: Resource Id
    types:
    - uid: string
- name: DiskDeleteOptionTypes
  description: 'Specifies whether OS Disk should be deleted or detached upon VM deletion. <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VM is deleted.<br><br> **Detach** If this value is used, the os disk is retained after VM is deleted. <br><br> The default value is set to **detach**. For an ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for ephemeral OS Disk.'
  kind: enum
  properties:
  - name: Delete
    types:
    - uid: string
  - name: Detach
    types:
    - uid: string
- name: DiskDetachOptionTypes
  description: "Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: **ForceDetach**. <br><br> detachOption: **ForceDetach** is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. <br><br> This feature is still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to 'true' along with setting detachOption: 'ForceDetach'."
  kind: enum
  properties:
  - name: ForceDetach
    types:
    - uid: string
- name: AdditionalUnattendContent
  description: Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
  kind: object
  properties:
  - name: passName
    description: The pass name. Currently, the only allowable value is OobeSystem.
    types:
    - uid: PassNames
  - name: componentName
    description: The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
    types:
    - uid: ComponentNames
  - name: settingName
    description: 'Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.'
    types:
    - uid: SettingNames
  - name: content
    description: Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
    types:
    - uid: string
- name: PatchSettings
  description: Specifies settings related to VM Guest Patching on Windows.
  kind: object
  properties:
  - name: patchMode
    description: 'Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true '
    types:
    - uid: WindowsVMGuestPatchMode
  - name: enableHotpatching
    description: Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'.
    types:
    - uid: boolean
  - name: assessmentMode
    description: 'Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. '
    types:
    - uid: WindowsPatchAssessmentMode
  - name: automaticByPlatformSettings
    description: Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Windows.
    types:
    - uid: WindowsVMGuestPatchAutomaticByPlatformSettings
- name: WinRMConfiguration
  description: Describes Windows Remote Management configuration of the VM
  kind: object
  properties:
  - name: listeners
    description: The list of Windows Remote Management listeners
    types:
    - uid: WinRMListener
      isArray: true
- name: SshConfiguration
  description: SSH configuration for Linux based VMs running on Azure
  kind: object
  properties:
  - name: publicKeys
    description: The list of SSH public keys used to authenticate with linux based VMs.
    types:
    - uid: SshPublicKey
      isArray: true
- name: LinuxPatchSettings
  description: Specifies settings related to VM Guest Patching on Linux.
  kind: object
  properties:
  - name: patchMode
    description: Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true
    types:
    - uid: LinuxVMGuestPatchMode
  - name: assessmentMode
    description: Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
    types:
    - uid: LinuxPatchAssessmentMode
  - name: automaticByPlatformSettings
    description: Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Linux.
    types:
    - uid: LinuxVMGuestPatchAutomaticByPlatformSettings
- name: VaultCertificate
  description: Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
  kind: object
  properties:
  - name: certificateUrl
    description: 'This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).'
    types:
    - uid: string
  - name: certificateStore
    description: For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
    types:
    - uid: string
- name: DeleteOptions
  description: Specify what happens to the public IP address when the VM is deleted
  kind: enum
  properties:
  - name: Delete
    types:
    - uid: string
  - name: Detach
    types:
    - uid: string
- name: VirtualMachineNetworkInterfaceDnsSettingsConfiguration
  description: Describes a virtual machines network configuration's DNS settings.
  kind: object
  properties:
  - name: dnsServers
    description: List of DNS servers IP addresses
    types:
    - uid: string
      isArray: true
- name: VirtualMachineNetworkInterfaceIPConfiguration
  description: Describes a virtual machine network profile's IP configuration.
  kind: object
  properties:
  - name: name
    description: The IP configuration name.
    types:
    - uid: string
  - name: properties.subnet
    description: Specifies the identifier of the subnet.
    types:
    - uid: SubResource
  - name: properties.primary
    description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
    types:
    - uid: boolean
  - name: properties.publicIPAddressConfiguration
    description: The publicIPAddressConfiguration.
    types:
    - uid: VirtualMachinePublicIPAddressConfiguration
  - name: properties.privateIPAddressVersion
    description: "Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'."
    types:
    - uid: IPVersions
  - name: properties.applicationSecurityGroups
    description: Specifies an array of references to application security group.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.applicationGatewayBackendAddressPools
    description: Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.loadBalancerBackendAddressPools
    description: Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer].
    types:
    - uid: SubResource
      isArray: true
- name: VirtualMachineExtensionHandlerInstanceView
  description: The instance view of a virtual machine extension handler.
  kind: object
  properties:
  - name: type
    description: Specifies the type of the extension; an example is "CustomScriptExtension".
    types:
    - uid: string
  - name: typeHandlerVersion
    description: Specifies the version of the script handler.
    types:
    - uid: string
  - name: status
    description: The extension handler status.
    types:
    - uid: InstanceViewStatus
- name: MaintenanceOperationResultCodeTypes
  description: The Last Maintenance Operation Result Code.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: RetryLater
    types:
    - uid: string
  - name: MaintenanceAborted
    types:
    - uid: string
  - name: MaintenanceCompleted
    types:
    - uid: string
- name: StatusLevelTypes
  description: The level code.
  kind: enum
  properties:
  - name: Info
    types:
    - uid: string
  - name: Warning
    types:
    - uid: string
  - name: Error
    types:
    - uid: string
- name: AvailablePatchSummary
  description: Describes the properties of an virtual machine instance view for available patch summary.
  kind: object
  properties:
  - name: status
    isReadyOnly: true
    description: The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
    types:
    - uid: PatchOperationStatus
  - name: assessmentActivityId
    isReadyOnly: true
    description: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
    types:
    - uid: string
  - name: rebootPending
    isReadyOnly: true
    description: The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred.
    types:
    - uid: boolean
  - name: criticalAndSecurityPatchCount
    isReadyOnly: true
    description: The number of critical or security patches that have been detected as available and not yet installed.
    types:
    - uid: integer
  - name: otherPatchCount
    isReadyOnly: true
    description: The number of all available patches excluding critical and security.
    types:
    - uid: integer
  - name: startTime
    isReadyOnly: true
    description: The UTC timestamp when the operation began.
    types:
    - uid: string
  - name: lastModifiedTime
    isReadyOnly: true
    description: The UTC timestamp when the operation began.
    types:
    - uid: string
  - name: error
    isReadyOnly: true
    description: The errors that were encountered during execution of the operation. The details array contains the list of them.
    types:
    - uid: ApiError
- name: LastPatchInstallationSummary
  description: Describes the properties of the last installed patch summary.
  kind: object
  properties:
  - name: status
    isReadyOnly: true
    description: The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
    types:
    - uid: PatchOperationStatus
  - name: installationActivityId
    isReadyOnly: true
    description: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
    types:
    - uid: string
  - name: maintenanceWindowExceeded
    isReadyOnly: true
    description: Describes whether the operation ran out of time before it completed all its intended actions
    types:
    - uid: boolean
  - name: notSelectedPatchCount
    isReadyOnly: true
    description: The number of all available patches but not going to be installed because it didn't match a classification or inclusion list entry.
    types:
    - uid: integer
  - name: excludedPatchCount
    isReadyOnly: true
    description: The number of all available patches but excluded explicitly by a customer-specified exclusion list match.
    types:
    - uid: integer
  - name: pendingPatchCount
    isReadyOnly: true
    description: The number of all available patches expected to be installed over the course of the patch installation operation.
    types:
    - uid: integer
  - name: installedPatchCount
    isReadyOnly: true
    description: The count of patches that successfully installed.
    types:
    - uid: integer
  - name: failedPatchCount
    isReadyOnly: true
    description: The count of patches that failed installation.
    types:
    - uid: integer
  - name: startTime
    isReadyOnly: true
    description: The UTC timestamp when the operation began.
    types:
    - uid: string
  - name: lastModifiedTime
    isReadyOnly: true
    description: The UTC timestamp when the operation began.
    types:
    - uid: string
  - name: error
    isReadyOnly: true
    description: The errors that were encountered during execution of the operation. The details array contains the list of them.
    types:
    - uid: ApiError
- name: ApiErrorBase
  description: Api error base.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: InnerError
  description: Inner error details.
  kind: object
  properties:
  - name: exceptiontype
    description: The exception type.
    types:
    - uid: string
  - name: errordetail
    description: The internal error message or exception dump.
    types:
    - uid: string
- name: KeyVaultSecretReference
  description: Describes a reference to Key Vault Secret
  kind: object
  properties:
  - name: secretUrl
    description: The URL referencing a secret in a Key Vault.
    types:
    - uid: string
  - name: sourceVault
    description: The relative URL of the Key Vault containing the secret.
    types:
    - uid: SubResource
- name: KeyVaultKeyReference
  description: Describes a reference to Key Vault Key
  kind: object
  properties:
  - name: keyUrl
    description: The URL referencing a key encryption key in Key Vault.
    types:
    - uid: string
  - name: sourceVault
    description: The relative URL of the Key Vault containing the key.
    types:
    - uid: SubResource
- name: DiffDiskOptions
  description: Specifies the ephemeral disk settings for operating system disk.
  kind: enum
  properties:
  - name: Local
    types:
    - uid: string
- name: DiffDiskPlacement
  description: Specifies the ephemeral disk placement for operating system disk. This property can be used by user in the request to choose the location i.e, cache disk or resource disk space for Ephemeral OS disk provisioning. For more information on Ephemeral OS disk size requirements, please refer Ephemeral OS disk size requirements for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements
  kind: enum
  properties:
  - name: CacheDisk
    types:
    - uid: string
  - name: ResourceDisk
    types:
    - uid: string
- name: StorageAccountTypes
  description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
  kind: enum
  properties:
  - name: Standard_LRS
    types:
    - uid: string
  - name: Premium_LRS
    types:
    - uid: string
  - name: StandardSSD_LRS
    types:
    - uid: string
  - name: UltraSSD_LRS
    types:
    - uid: string
  - name: Premium_ZRS
    types:
    - uid: string
  - name: StandardSSD_ZRS
    types:
    - uid: string
  - name: PremiumV2_LRS
    types:
    - uid: string
- name: DiskEncryptionSetParameters
  description: 'Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. <br><br> NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.'
  kind: object
  properties:
  - name: id
    description: Resource Id
    types:
    - uid: string
- name: VMDiskSecurityProfile
  description: 'Specifies the security profile settings for the managed disk. <br><br> NOTE: It can only be set for Confidential VMs'
  kind: object
  properties:
  - name: securityEncryptionType
    description: 'Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It can be set for only Confidential VMs.'
    types:
    - uid: securityEncryptionTypes
  - name: diskEncryptionSet
    description: Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob.
    types:
    - uid: DiskEncryptionSetParameters
- name: PassNames
  description: The pass name. Currently, the only allowable value is OobeSystem.
  kind: enum
  properties:
  - name: OobeSystem
    types:
    - uid: string
- name: ComponentNames
  description: The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
  kind: enum
  properties:
  - name: Microsoft-Windows-Shell-Setup
    types:
    - uid: string
- name: SettingNames
  description: 'Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.'
  kind: enum
  properties:
  - name: AutoLogon
    types:
    - uid: string
  - name: FirstLogonCommands
    types:
    - uid: string
- name: WindowsVMGuestPatchMode
  description: 'Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true '
  kind: enum
  properties:
  - name: Manual
    types:
    - uid: string
  - name: AutomaticByOS
    types:
    - uid: string
  - name: AutomaticByPlatform
    types:
    - uid: string
- name: WindowsPatchAssessmentMode
  description: 'Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. '
  kind: enum
  properties:
  - name: ImageDefault
    types:
    - uid: string
  - name: AutomaticByPlatform
    types:
    - uid: string
- name: WindowsVMGuestPatchAutomaticByPlatformSettings
  description: Specifies additional settings to be applied when patch mode AutomaticByPlatform is selected in Windows patch settings.
  kind: object
  properties:
  - name: rebootSetting
    description: Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
    types:
    - uid: WindowsVMGuestPatchAutomaticByPlatformRebootSetting
- name: WinRMListener
  description: Describes Protocol and thumbprint of Windows Remote Management listener
  kind: object
  properties:
  - name: protocol
    description: 'Specifies the protocol of WinRM listener. <br><br> Possible values are: <br>**http** <br><br> **https**'
    types:
    - uid: ProtocolTypes
  - name: certificateUrl
    description: 'This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).'
    types:
    - uid: string
- name: SshPublicKey
  description: Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
  kind: object
  properties:
  - name: path
    description: 'Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys'
    types:
    - uid: string
  - name: keyData
    description: SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
    types:
    - uid: string
- name: LinuxVMGuestPatchMode
  description: Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true
  kind: enum
  properties:
  - name: ImageDefault
    types:
    - uid: string
  - name: AutomaticByPlatform
    types:
    - uid: string
- name: LinuxPatchAssessmentMode
  description: Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
  kind: enum
  properties:
  - name: ImageDefault
    types:
    - uid: string
  - name: AutomaticByPlatform
    types:
    - uid: string
- name: LinuxVMGuestPatchAutomaticByPlatformSettings
  description: Specifies additional settings to be applied when patch mode AutomaticByPlatform is selected in Linux patch settings.
  kind: object
  properties:
  - name: rebootSetting
    description: Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
    types:
    - uid: LinuxVMGuestPatchAutomaticByPlatformRebootSetting
- name: VirtualMachinePublicIPAddressConfiguration
  description: Describes a virtual machines IP Configuration's PublicIPAddress configuration
  kind: object
  properties:
  - name: name
    description: The publicIP address configuration name.
    types:
    - uid: string
  - name: sku
    description: Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible.
    types:
    - uid: PublicIPAddressSku
  - name: properties.idleTimeoutInMinutes
    description: The idle timeout of the public IP address.
    types:
    - uid: integer
  - name: properties.deleteOption
    description: Specify what happens to the public IP address when the VM is deleted
    types:
    - uid: DeleteOptions
  - name: properties.dnsSettings
    description: The dns settings to be applied on the publicIP addresses .
    types:
    - uid: VirtualMachinePublicIPAddressDnsSettingsConfiguration
  - name: properties.ipTags
    description: The list of IP tags associated with the public IP address.
    types:
    - uid: VirtualMachineIpTag
      isArray: true
  - name: properties.publicIPPrefix
    description: The PublicIPPrefix from which to allocate publicIP addresses.
    types:
    - uid: SubResource
  - name: properties.publicIPAddressVersion
    description: "Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'."
    types:
    - uid: IPVersions
  - name: properties.publicIPAllocationMethod
    description: Specify the public IP allocation type
    types:
    - uid: PublicIPAllocationMethod
- name: IPVersions
  description: "Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'."
  kind: enum
  properties:
  - name: IPv4
    types:
    - uid: string
  - name: IPv6
    types:
    - uid: string
- name: PatchOperationStatus
  description: The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: InProgress
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: CompletedWithWarnings
    types:
    - uid: string
- name: securityEncryptionTypes
  description: 'Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It can be set for only Confidential VMs.'
  kind: enum
  properties:
  - name: VMGuestStateOnly
    types:
    - uid: string
  - name: DiskWithVMGuestState
    types:
    - uid: string
- name: WindowsVMGuestPatchAutomaticByPlatformRebootSetting
  description: Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: IfRequired
    types:
    - uid: string
  - name: Never
    types:
    - uid: string
  - name: Always
    types:
    - uid: string
- name: ProtocolTypes
  description: 'Specifies the protocol of WinRM listener. <br><br> Possible values are: <br>**http** <br><br> **https**'
  kind: enum
  properties:
  - name: Http
    types:
    - uid: string
  - name: Https
    types:
    - uid: string
- name: LinuxVMGuestPatchAutomaticByPlatformRebootSetting
  description: Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: IfRequired
    types:
    - uid: string
  - name: Never
    types:
    - uid: string
  - name: Always
    types:
    - uid: string
- name: PublicIPAddressSku
  description: Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible.
  kind: object
  properties:
  - name: name
    description: Specify public IP sku name
    types:
    - uid: PublicIPAddressSkuName
  - name: tier
    description: Specify public IP sku tier
    types:
    - uid: PublicIPAddressSkuTier
- name: VirtualMachinePublicIPAddressDnsSettingsConfiguration
  description: Describes a virtual machines network configuration's DNS settings.
  kind: object
  properties:
  - name: domainNameLabel
    description: The Domain name label prefix of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the domain name label and vm network profile unique ID.
    types:
    - uid: string
- name: VirtualMachineIpTag
  description: Contains the IP tag associated with the public IP address.
  kind: object
  properties:
  - name: ipTagType
    description: 'IP tag type. Example: FirstPartyUsage.'
    types:
    - uid: string
  - name: tag
    description: 'IP tag associated with the public IP. Example: SQL, Storage etc.'
    types:
    - uid: string
- name: PublicIPAllocationMethod
  description: Specify the public IP allocation type
  kind: enum
  properties:
  - name: Dynamic
    types:
    - uid: string
  - name: Static
    types:
    - uid: string
- name: PublicIPAddressSkuName
  description: Specify public IP sku name
  kind: enum
  properties:
  - name: Basic
    types:
    - uid: string
  - name: Standard
    types:
    - uid: string
- name: PublicIPAddressSkuTier
  description: Specify public IP sku tier
  kind: enum
  properties:
  - name: Regional
    types:
    - uid: string
  - name: Global
    types:
    - uid: string
examples:
- name: Create a vm with password authentication.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithPasswordAuthentication.json
           */
          /**
           * Sample code: Create a vm with password authentication.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithPasswordAuthentication(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithPasswordAuthentication.json
       */
      async function createAVMWithPasswordAuthentication() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithPasswordAuthentication().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "b248db33-62ba-4d2d-b791-811e075ee0f5",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "b248db33-62ba-4d2d-b791-811e075ee0f5",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a vm with ssh authentication.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "{image_sku}",
              "publisher": "{image_publisher}",
              "version": "latest",
              "offer": "{image_offer}"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "linuxConfiguration": {
              "ssh": {
                "publicKeys": [
                  {
                    "path": "/home/{your-username}/.ssh/authorized_keys",
                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCeClRAk2ipUs/l5voIsDC5q9RI+YSRd1Bvd/O+axgY4WiBzG+4FwJWZm/mLLe5DoOdHQwmU2FrKXZSW4w2sYE70KeWnrFViCOX5MTVvJgPE8ClugNl8RWth/tU849DvM9sT7vFgfVSHcAS2yDRyDlueii+8nF2ym8XWAPltFVCyLHRsyBp5YPqK8JFYIa1eybKsY3hEAxRCA+/7bq8et+Gj3coOsuRmrehav7rE6N12Pb80I6ofa6SM5XNYq4Xk0iYNx7R3kdz0Jj9XgZYWjAHjJmT0gTRoOnt6upOuxK7xI/ykWrllgpXrCPu3Ymz+c+ujaqcxDopnAl2lmf69/J1"
                  }
                ]
              },
              "disablePasswordAuthentication": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "{image_sku}",
              "publisher": "{image_publisher}",
              "version": "latest",
              "offer": "{image_offer}"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "linuxConfiguration": {
              "ssh": {
                "publicKeys": [
                  {
                    "path": "/home/{your-username}/.ssh/authorized_keys",
                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCeClRAk2ipUs/l5voIsDC5q9RI+YSRd1Bvd/O+axgY4WiBzG+4FwJWZm/mLLe5DoOdHQwmU2FrKXZSW4w2sYE70KeWnrFViCOX5MTVvJgPE8ClugNl8RWth/tU849DvM9sT7vFgfVSHcAS2yDRyDlueii+8nF2ym8XWAPltFVCyLHRsyBp5YPqK8JFYIa1eybKsY3hEAxRCA+/7bq8et+Gj3coOsuRmrehav7rE6N12Pb80I6ofa6SM5XNYq4Xk0iYNx7R3kdz0Jj9XgZYWjAHjJmT0gTRoOnt6upOuxK7xI/ykWrllgpXrCPu3Ymz+c+ujaqcxDopnAl2lmf69/J1"
                  }
                ]
              },
              "disablePasswordAuthentication": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.LinuxConfiguration;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.SshConfiguration;
      import com.azure.resourcemanager.compute.models.SshPublicKey;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithSshAuthentication.json
           */
          /**
           * Sample code: Create a vm with ssh authentication.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithSshAuthentication(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("{image_publisher}")
                                          .withOffer("{image_offer}")
                                          .withSku("{image_sku}")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withLinuxConfiguration(
                                      new LinuxConfiguration()
                                          .withDisablePasswordAuthentication(true)
                                          .withSsh(
                                              new SshConfiguration()
                                                  .withPublicKeys(
                                                      Arrays
                                                          .asList(
                                                              new SshPublicKey()
                                                                  .withPath("/home/{your-username}/.ssh/authorized_keys")
                                                                  .withKeyData(
                                                                      "ssh-rsa"
                                                                          + " AAAAB3NzaC1yc2EAAAADAQABAAABAQCeClRAk2ipUs/l5voIsDC5q9RI+YSRd1Bvd/O+axgY4WiBzG+4FwJWZm/mLLe5DoOdHQwmU2FrKXZSW4w2sYE70KeWnrFViCOX5MTVvJgPE8ClugNl8RWth/tU849DvM9sT7vFgfVSHcAS2yDRyDlueii+8nF2ym8XWAPltFVCyLHRsyBp5YPqK8JFYIa1eybKsY3hEAxRCA+/7bq8et+Gj3coOsuRmrehav7rE6N12Pb80I6ofa6SM5XNYq4Xk0iYNx7R3kdz0Jj9XgZYWjAHjJmT0gTRoOnt6upOuxK7xI/ykWrllgpXrCPu3Ymz+c+ujaqcxDopnAl2lmf69/J1"))))))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithSshAuthentication.json
       */
      async function createAVMWithSshAuthentication() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminUsername: "{your-username}",
            computerName: "myVM",
            linuxConfiguration: {
              disablePasswordAuthentication: true,
              ssh: {
                publicKeys: [
                  {
                    path: "/home/{your-username}/.ssh/authorized_keys",
                    keyData:
                      "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCeClRAk2ipUs/l5voIsDC5q9RI+YSRd1Bvd/O+axgY4WiBzG+4FwJWZm/mLLe5DoOdHQwmU2FrKXZSW4w2sYE70KeWnrFViCOX5MTVvJgPE8ClugNl8RWth/tU849DvM9sT7vFgfVSHcAS2yDRyDlueii+8nF2ym8XWAPltFVCyLHRsyBp5YPqK8JFYIa1eybKsY3hEAxRCA+/7bq8et+Gj3coOsuRmrehav7rE6N12Pb80I6ofa6SM5XNYq4Xk0iYNx7R3kdz0Jj9XgZYWjAHjJmT0gTRoOnt6upOuxK7xI/ykWrllgpXrCPu3Ymz+c+ujaqcxDopnAl2lmf69/J1",
                  },
                ],
              },
            },
          },
          storageProfile: {
            imageReference: {
              offer: "{image_offer}",
              publisher: "{image_publisher}",
              sku: "{image_sku}",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithSshAuthentication().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "ssh": {
                "publicKeys": [
                  {
                    "path": "/home/{your-username}/.ssh/authorized_keys",
                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCeClRAk2ipUs/l5voIsDC5q9RI+YSRd1Bvd/O+axgY4WiBzG+4FwJWZm/mLLe5DoOdHQwmU2FrKXZSW4w2sYE70KeWnrFViCOX5MTVvJgPE8ClugNl8RWth/tU849DvM9sT7vFgfVSHcAS2yDRyDlueii+8nF2ym8XWAPltFVCyLHRsyBp5YPqK8JFYIa1eybKsY3hEAxRCA+/7bq8et+Gj3coOsuRmrehav7rE6N12Pb80I6ofa6SM5XNYq4Xk0iYNx7R3kdz0Jj9XgZYWjAHjJmT0gTRoOnt6upOuxK7xI/ykWrllgpXrCPu3Ymz+c+ujaqcxDopnAl2lmf69/J1"
                  }
                ]
              },
              "disablePasswordAuthentication": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "osType": "Linux",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "e0de9b84-a506-4b95-9623-00a425d05c90",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "ssh": {
                "publicKeys": [
                  {
                    "path": "/home/{your-username}/.ssh/authorized_keys",
                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCeClRAk2ipUs/l5voIsDC5q9RI+YSRd1Bvd/O+axgY4WiBzG+4FwJWZm/mLLe5DoOdHQwmU2FrKXZSW4w2sYE70KeWnrFViCOX5MTVvJgPE8ClugNl8RWth/tU849DvM9sT7vFgfVSHcAS2yDRyDlueii+8nF2ym8XWAPltFVCyLHRsyBp5YPqK8JFYIa1eybKsY3hEAxRCA+/7bq8et+Gj3coOsuRmrehav7rE6N12Pb80I6ofa6SM5XNYq4Xk0iYNx7R3kdz0Jj9XgZYWjAHjJmT0gTRoOnt6upOuxK7xI/ykWrllgpXrCPu3Ymz+c+ujaqcxDopnAl2lmf69/J1"
                  }
                ]
              },
              "disablePasswordAuthentication": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "osType": "Linux",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "e0de9b84-a506-4b95-9623-00a425d05c90",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a vm with premium storage.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithPremiumStorage.json
           */
          /**
           * Sample code: Create a vm with premium storage.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithPremiumStorage(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.PREMIUM_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithPremiumStorage.json
       */
      async function createAVMWithPremiumStorage() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Premium_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithPremiumStorage().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a vm in a Virtual Machine Scale Set with customer assigned platformFaultDomain.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "virtualMachineScaleSet": {
            "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/{existing-flex-vmss-name-with-platformFaultDomainCount-greater-than-1}"
          },
          "platformFaultDomain": 1
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "virtualMachineScaleSet": {
            "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/{existing-flex-vmss-name-with-platformFaultDomainCount-greater-than-1}"
          },
          "platformFaultDomain": 1
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMacine_Create_InAVmssWithCustomerAssignedPlatformFaultDomain.json
           */
          /**
           * Sample code: Create a vm in a Virtual Machine Scale Set with customer assigned platformFaultDomain.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmInAVirtualMachineScaleSetWithCustomerAssignedPlatformFaultDomain(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withVirtualMachineScaleSet(
                              new SubResource()
                                  .withId(
                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/{existing-flex-vmss-name-with-platformFaultDomainCount-greater-than-1}"))
                          .withPlatformFaultDomain(1),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMacine_Create_InAVmssWithCustomerAssignedPlatformFaultDomain.json
       */
      async function createAVMInAVirtualMachineScaleSetWithCustomerAssignedPlatformFaultDomain() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          platformFaultDomain: 1,
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
          virtualMachineScaleSet: {
            id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/{existing-flex-vmss-name-with-platformFaultDomainCount-greater-than-1}",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMInAVirtualMachineScaleSetWithCustomerAssignedPlatformFaultDomain().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "7cce54f2-ecd3-4ddd-a8d9-50984faa3918",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "virtualMachineScaleSet": {
            "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myExistingFlexVmss"
          },
          "platformFaultDomain": 1,
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "7cce54f2-ecd3-4ddd-a8d9-50984faa3918",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "virtualMachineScaleSet": {
            "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myExistingFlexVmss"
          },
          "platformFaultDomain": 1,
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a vm in an availability set.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "availabilitySet": {
            "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/availabilitySets/{existing-availability-set-name}"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "availabilitySet": {
            "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/availabilitySets/{existing-availability-set-name}"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_InAnAvailabilitySet.json
           */
          /**
           * Sample code: Create a vm in an availability set.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmInAnAvailabilitySet(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withAvailabilitySet(
                              new SubResource()
                                  .withId(
                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/availabilitySets/{existing-availability-set-name}")),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_InAnAvailabilitySet.json
       */
      async function createAVMInAnAvailabilitySet() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          availabilitySet: {
            id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/availabilitySets/{existing-availability-set-name}",
          },
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMInAnAvailabilitySet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "b7a098cc-b0b8-46e8-a205-62f301a62a8f",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "availabilitySet": {
            "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/availabilitySets/NSGEXISTINGAS"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "b7a098cc-b0b8-46e8-a205-62f301a62a8f",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "availabilitySet": {
            "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/availabilitySets/NSGEXISTINGAS"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a vm with Scheduled Events Profile
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://{existing-storage-account-name}.blob.core.windows.net",
              "enabled": true
            }
          },
          "scheduledEventsProfile": {
            "terminateNotificationProfile": {
              "notBeforeTimeout": "PT10M",
              "enable": true
            }
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://{existing-storage-account-name}.blob.core.windows.net",
              "enabled": true
            }
          },
          "scheduledEventsProfile": {
            "terminateNotificationProfile": {
              "notBeforeTimeout": "PT10M",
              "enable": true
            }
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.BootDiagnostics;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiagnosticsProfile;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.ScheduledEventsProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.TerminateNotificationProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithScheduledEventsProfile.json
           */
          /**
           * Sample code: Create a vm with Scheduled Events Profile.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithScheduledEventsProfile(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withDiagnosticsProfile(
                              new DiagnosticsProfile()
                                  .withBootDiagnostics(
                                      new BootDiagnostics()
                                          .withEnabled(true)
                                          .withStorageUri("http://{existing-storage-account-name}.blob.core.windows.net")))
                          .withScheduledEventsProfile(
                              new ScheduledEventsProfile()
                                  .withTerminateNotificationProfile(
                                      new TerminateNotificationProfile().withNotBeforeTimeout("PT10M").withEnable(true))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithScheduledEventsProfile.json
       */
      async function createAVMWithScheduledEventsProfile() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          diagnosticsProfile: {
            bootDiagnostics: {
              enabled: true,
              storageUri: "http://{existing-storage-account-name}.blob.core.windows.net",
            },
          },
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          scheduledEventsProfile: {
            terminateNotificationProfile: { enable: true, notBeforeTimeout: "PT10M" },
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithScheduledEventsProfile().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://nsgdiagnostic.blob.core.windows.net",
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "scheduledEventsProfile": {
            "terminateNotificationProfile": {
              "notBeforeTimeout": "PT10M",
              "enable": true
            }
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://nsgdiagnostic.blob.core.windows.net",
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "scheduledEventsProfile": {
            "terminateNotificationProfile": {
              "notBeforeTimeout": "PT10M",
              "enable": true
            }
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a vm with boot diagnostics.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://{existing-storage-account-name}.blob.core.windows.net",
              "enabled": true
            }
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://{existing-storage-account-name}.blob.core.windows.net",
              "enabled": true
            }
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.BootDiagnostics;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiagnosticsProfile;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMacine_Create_WithBootDiagnostics.json
           */
          /**
           * Sample code: Create a vm with boot diagnostics.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithBootDiagnostics(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withDiagnosticsProfile(
                              new DiagnosticsProfile()
                                  .withBootDiagnostics(
                                      new BootDiagnostics()
                                          .withEnabled(true)
                                          .withStorageUri("http://{existing-storage-account-name}.blob.core.windows.net"))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMacine_Create_WithBootDiagnostics.json
       */
      async function createAVMWithBootDiagnostics() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          diagnosticsProfile: {
            bootDiagnostics: {
              enabled: true,
              storageUri: "http://{existing-storage-account-name}.blob.core.windows.net",
            },
          },
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithBootDiagnostics().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://nsgdiagnostic.blob.core.windows.net",
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://nsgdiagnostic.blob.core.windows.net",
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a vm with managed boot diagnostics.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true
            }
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true
            }
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.BootDiagnostics;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiagnosticsProfile;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithManagedBootDiagnostics.json
           */
          /**
           * Sample code: Create a vm with managed boot diagnostics.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithManagedBootDiagnostics(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withDiagnosticsProfile(
                              new DiagnosticsProfile().withBootDiagnostics(new BootDiagnostics().withEnabled(true))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithManagedBootDiagnostics.json
       */
      async function createAVMWithManagedBootDiagnostics() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          diagnosticsProfile: { bootDiagnostics: { enabled: true } },
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithManagedBootDiagnostics().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a vm with empty data disks.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            },
            "dataDisks": [
              {
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "lun": 0
              },
              {
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "lun": 1
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            },
            "dataDisks": [
              {
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "lun": 0
              },
              {
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "lun": 1
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DataDisk;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithEmptyDataDisks.json
           */
          /**
           * Sample code: Create a vm with empty data disks.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithEmptyDataDisks(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D2_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS)))
                                  .withDataDisks(
                                      Arrays
                                          .asList(
                                              new DataDisk()
                                                  .withLun(0)
                                                  .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                                  .withDiskSizeGB(1023),
                                              new DataDisk()
                                                  .withLun(1)
                                                  .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                                  .withDiskSizeGB(1023))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithEmptyDataDisks.json
       */
      async function createAVMWithEmptyDataDisks() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D2_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            dataDisks: [
              { createOption: "Empty", diskSizeGB: 1023, lun: 0 },
              { createOption: "Empty", diskSizeGB: 1023, lun: 1 },
            ],
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithEmptyDataDisks().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": [
              {
                "caching": "None",
                "managedDisk": {
                  "storageAccountType": "Standard_LRS"
                },
                "createOption": "Empty",
                "lun": 0,
                "diskSizeGB": 1023
              },
              {
                "caching": "None",
                "managedDisk": {
                  "storageAccountType": "Standard_LRS"
                },
                "createOption": "Empty",
                "lun": 1,
                "diskSizeGB": 1023
              }
            ]
          },
          "vmId": "3906fef9-a1e5-4b83-a8a8-540858b41df0",
          "hardwareProfile": {
            "vmSize": "Standard_D2_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": [
              {
                "caching": "None",
                "managedDisk": {
                  "storageAccountType": "Standard_LRS"
                },
                "createOption": "Empty",
                "lun": 0,
                "diskSizeGB": 1023,
                "toBeDetached": false
              },
              {
                "caching": "None",
                "managedDisk": {
                  "storageAccountType": "Standard_LRS"
                },
                "createOption": "Empty",
                "lun": 1,
                "diskSizeGB": 1023,
                "toBeDetached": false
              }
            ]
          },
          "vmId": "3906fef9-a1e5-4b83-a8a8-540858b41df0",
          "hardwareProfile": {
            "vmSize": "Standard_D2_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a vm with a marketplace image plan.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "plan": {
          "publisher": "microsoft-ads",
          "product": "windows-data-science-vm",
          "name": "windows2016"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows2016",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "windows-data-science-vm"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "plan": {
          "publisher": "microsoft-ads",
          "product": "windows-data-science-vm",
          "name": "windows2016"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows2016",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "windows-data-science-vm"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.Plan;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithAMarketplaceImagePlan.json
           */
          /**
           * Sample code: Create a vm with a marketplace image plan.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithAMarketplaceImagePlan(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withPlan(
                              new Plan()
                                  .withName("windows2016")
                                  .withPublisher("microsoft-ads")
                                  .withProduct("windows-data-science-vm"))
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("microsoft-ads")
                                          .withOffer("windows-data-science-vm")
                                          .withSku("windows2016")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithAMarketplaceImagePlan.json
       */
      async function createAVMWithAMarketplaceImagePlan() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          plan: {
            name: "windows2016",
            product: "windows-data-science-vm",
            publisher: "microsoft-ads",
          },
          storageProfile: {
            imageReference: {
              offer: "windows-data-science-vm",
              publisher: "microsoft-ads",
              sku: "windows2016",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithAMarketplaceImagePlan().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "standard-data-science-vm",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "standard-data-science-vm"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "plan": {
          "publisher": "microsoft-ads",
          "product": "standard-data-science-vm",
          "name": "standard-data-science-vm"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "standard-data-science-vm",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "standard-data-science-vm"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "plan": {
          "publisher": "microsoft-ads",
          "product": "standard-data-science-vm",
          "name": "standard-data-science-vm"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
- name: Create a vm from a custom image.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_FromACustomImage.json
           */
          /**
           * Sample code: Create a vm from a custom image.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmFromACustomImage(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withId(
                                              "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_FromACustomImage.json
       */
      async function createAVMFromACustomImage() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            imageReference: {
              id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMFromACustomImage().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/nsgcustom"
            },
            "osDisk": {
              "name": "myVMosdisk",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Linux"
            },
            "dataDisks": []
          },
          "vmId": "71aa3d5a-d73d-4970-9182-8580433b2865",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/nsgcustom"
            },
            "osDisk": {
              "name": "myVMosdisk",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Linux"
            },
            "dataDisks": []
          },
          "vmId": "71aa3d5a-d73d-4970-9182-8580433b2865",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a platform-image vm with unmanaged os and data disks.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/{vm-name}?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "vhd": {
                "uri": "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk.vhd"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": [
              {
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "lun": 0,
                "vhd": {
                  "uri": "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk0.vhd"
                }
              },
              {
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "lun": 1,
                "vhd": {
                  "uri": "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk1.vhd"
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/{vm-name}?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "vhd": {
                "uri": "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk.vhd"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": [
              {
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "lun": 0,
                "vhd": {
                  "uri": "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk0.vhd"
                }
              },
              {
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "lun": 1,
                "vhd": {
                  "uri": "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk1.vhd"
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DataDisk;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualHardDisk;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_PlatformImageVmWithUnmanagedOsAndDataDisks.json
           */
          /**
           * Sample code: Create a platform-image vm with unmanaged os and data disks.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAPlatformImageVmWithUnmanagedOsAndDataDisks(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "{vm-name}",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D2_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withVhd(
                                              new VirtualHardDisk()
                                                  .withUri(
                                                      "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk.vhd"))
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE))
                                  .withDataDisks(
                                      Arrays
                                          .asList(
                                              new DataDisk()
                                                  .withLun(0)
                                                  .withVhd(
                                                      new VirtualHardDisk()
                                                          .withUri(
                                                              "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk0.vhd"))
                                                  .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                                  .withDiskSizeGB(1023),
                                              new DataDisk()
                                                  .withLun(1)
                                                  .withVhd(
                                                      new VirtualHardDisk()
                                                          .withUri(
                                                              "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk1.vhd"))
                                                  .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                                  .withDiskSizeGB(1023))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_PlatformImageVmWithUnmanagedOsAndDataDisks.json
       */
      async function createAPlatformImageVMWithUnmanagedOSAndDataDisks() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "{vm-name}";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D2_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            dataDisks: [
              {
                createOption: "Empty",
                diskSizeGB: 1023,
                lun: 0,
                vhd: {
                  uri: "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk0.vhd",
                },
              },
              {
                createOption: "Empty",
                diskSizeGB: 1023,
                lun: 1,
                vhd: {
                  uri: "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk1.vhd",
                },
              },
            ],
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              vhd: {
                uri: "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk.vhd",
              },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAPlatformImageVMWithUnmanagedOSAndDataDisks().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "vhd": {
                "uri": "http://{existing-storage-account-name}.blob.core.windows.net/vhds/myDisk.vhd"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "caching": "ReadWrite"
            },
            "dataDisks": [
              {
                "name": "dataDisk0",
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "caching": "None",
                "vhd": {
                  "uri": "http://{existing-storage-account-name}.blob.core.windows.net/vhds/myDisk0.vhd"
                },
                "lun": 0
              },
              {
                "name": "dataDisk1",
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "caching": "None",
                "vhd": {
                  "uri": "http://{existing-storage-account-name}.blob.core.windows.net/vhds/myDisk1.vhd"
                },
                "lun": 1
              }
            ]
          },
          "vmId": "5230a749-2f68-4830-900b-702182d32e63",
          "hardwareProfile": {
            "vmSize": "Standard_D2_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "vhd": {
                "uri": "http://{existing-storage-account-name}.blob.core.windows.net/vhds/myDisk.vhd"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "caching": "ReadWrite"
            },
            "dataDisks": [
              {
                "name": "dataDisk0",
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "caching": "None",
                "vhd": {
                  "uri": "http://{existing-storage-account-name}.blob.core.windows.net/vhds/myDisk0.vhd"
                },
                "lun": 0
              },
              {
                "name": "dataDisk1",
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "caching": "None",
                "vhd": {
                  "uri": "http://{existing-storage-account-name}.blob.core.windows.net/vhds/myDisk1.vhd"
                },
                "lun": 1
              }
            ]
          },
          "vmId": "5230a749-2f68-4830-900b-702182d32e63",
          "hardwareProfile": {
            "vmSize": "Standard_D2_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a custom-image vm from an unmanaged generalized os image.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/{vm-name}?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "osDisk": {
              "name": "myVMosdisk",
              "image": {
                "uri": "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/{existing-generalized-os-image-blob-name}.vhd"
              },
              "osType": "Windows",
              "createOption": "FromImage",
              "caching": "ReadWrite",
              "vhd": {
                "uri": "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk.vhd"
              }
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/{vm-name}?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "osDisk": {
              "name": "myVMosdisk",
              "image": {
                "uri": "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/{existing-generalized-os-image-blob-name}.vhd"
              },
              "osType": "Windows",
              "createOption": "FromImage",
              "caching": "ReadWrite",
              "vhd": {
                "uri": "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk.vhd"
              }
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.OperatingSystemTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualHardDisk;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_CustomImageVmFromAnUnmanagedGeneralizedOsImage.json
           */
          /**
           * Sample code: Create a custom-image vm from an unmanaged generalized os image.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createACustomImageVmFromAnUnmanagedGeneralizedOsImage(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "{vm-name}",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withOsDisk(
                                      new OSDisk()
                                          .withOsType(OperatingSystemTypes.WINDOWS)
                                          .withName("myVMosdisk")
                                          .withVhd(
                                              new VirtualHardDisk()
                                                  .withUri(
                                                      "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk.vhd"))
                                          .withImage(
                                              new VirtualHardDisk()
                                                  .withUri(
                                                      "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/{existing-generalized-os-image-blob-name}.vhd"))
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_CustomImageVmFromAnUnmanagedGeneralizedOsImage.json
       */
      async function createACustomImageVMFromAnUnmanagedGeneralizedOSImage() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "{vm-name}";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              image: {
                uri: "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/{existing-generalized-os-image-blob-name}.vhd",
              },
              osType: "Windows",
              vhd: {
                uri: "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk.vhd",
              },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createACustomImageVMFromAnUnmanagedGeneralizedOSImage().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "osDisk": {
              "name": "myVMosdisk",
              "image": {
                "uri": "https://{existing-storage-account-name}.blob.core.windows.net/system/Microsoft.Compute/Images/vhds/{existing-generalized-os-image-blob-name}.vhd"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Windows",
              "vhd": {
                "uri": "http://{existing-storage-account-name}.blob.core.windows.net/vhds/myDisk.vhd"
              }
            },
            "dataDisks": []
          },
          "vmId": "926cd555-a07c-4ff5-b214-4aa4dd09d79b",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "osDisk": {
              "name": "myVMosdisk",
              "image": {
                "uri": "https://{existing-storage-account-name}.blob.core.windows.net/system/Microsoft.Compute/Images/vhds/{existing-generalized-os-image-blob-name}.vhd"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Windows",
              "vhd": {
                "uri": "http://{existing-storage-account-name}.blob.core.windows.net/vhds/myDisk.vhd"
              }
            },
            "dataDisks": []
          },
          "vmId": "926cd555-a07c-4ff5-b214-4aa4dd09d79b",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a vm with ephemeral os disk.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "plan": {
          "publisher": "microsoft-ads",
          "product": "windows-data-science-vm",
          "name": "windows2016"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows2016",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "windows-data-science-vm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "diffDiskSettings": {
                "option": "Local"
              },
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "plan": {
          "publisher": "microsoft-ads",
          "product": "windows-data-science-vm",
          "name": "windows2016"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows2016",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "windows-data-science-vm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "diffDiskSettings": {
                "option": "Local"
              },
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiffDiskOptions;
      import com.azure.resourcemanager.compute.models.DiffDiskSettings;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.Plan;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithADiffOsDisk.json
           */
          /**
           * Sample code: Create a vm with ephemeral os disk.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithEphemeralOsDisk(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withPlan(
                              new Plan()
                                  .withName("windows2016")
                                  .withPublisher("microsoft-ads")
                                  .withProduct("windows-data-science-vm"))
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_DS1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("microsoft-ads")
                                          .withOffer("windows-data-science-vm")
                                          .withSku("windows2016")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_ONLY)
                                          .withDiffDiskSettings(new DiffDiskSettings().withOption(DiffDiskOptions.LOCAL))
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithADiffOsDisk.json
       */
      async function createAVMWithEphemeralOSDisk() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_DS1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          plan: {
            name: "windows2016",
            product: "windows-data-science-vm",
            publisher: "microsoft-ads",
          },
          storageProfile: {
            imageReference: {
              offer: "windows-data-science-vm",
              publisher: "microsoft-ads",
              sku: "windows2016",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadOnly",
              createOption: "FromImage",
              diffDiskSettings: { option: "Local" },
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithEphemeralOSDisk().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "standard-data-science-vm",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "standard-data-science-vm"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadOnly",
              "diffDiskSettings": {
                "option": "Local"
              },
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "plan": {
          "publisher": "microsoft-ads",
          "product": "standard-data-science-vm",
          "name": "standard-data-science-vm"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "standard-data-science-vm",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "standard-data-science-vm"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadOnly",
              "diffDiskSettings": {
                "option": "Local"
              },
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "plan": {
          "publisher": "microsoft-ads",
          "product": "standard-data-science-vm",
          "name": "standard-data-science-vm"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
- name: Create a vm with DiskEncryptionSet resource id in the os disk and data disk.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS",
                "diskEncryptionSet": {
                  "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                }
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            },
            "dataDisks": [
              {
                "caching": "ReadWrite",
                "managedDisk": {
                  "storageAccountType": "Standard_LRS",
                  "diskEncryptionSet": {
                    "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                  }
                },
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "lun": 0
              },
              {
                "caching": "ReadWrite",
                "managedDisk": {
                  "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/{existing-managed-disk-name}",
                  "storageAccountType": "Standard_LRS",
                  "diskEncryptionSet": {
                    "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                  }
                },
                "diskSizeGB": 1023,
                "createOption": "Attach",
                "lun": 1
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS",
                "diskEncryptionSet": {
                  "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                }
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            },
            "dataDisks": [
              {
                "caching": "ReadWrite",
                "managedDisk": {
                  "storageAccountType": "Standard_LRS",
                  "diskEncryptionSet": {
                    "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                  }
                },
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "lun": 0
              },
              {
                "caching": "ReadWrite",
                "managedDisk": {
                  "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/{existing-managed-disk-name}",
                  "storageAccountType": "Standard_LRS",
                  "diskEncryptionSet": {
                    "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                  }
                },
                "diskSizeGB": 1023,
                "createOption": "Attach",
                "lun": 1
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DataDisk;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.DiskEncryptionSetParameters;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithDiskEncryptionSetResource.json
           */
          /**
           * Sample code: Create a vm with DiskEncryptionSet resource id in the os disk and data disk.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithDiskEncryptionSetResourceIdInTheOsDiskAndDataDisk(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withId(
                                              "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS)
                                                  .withDiskEncryptionSet(
                                                      new DiskEncryptionSetParameters()
                                                          .withId(
                                                              "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"))))
                                  .withDataDisks(
                                      Arrays
                                          .asList(
                                              new DataDisk()
                                                  .withLun(0)
                                                  .withCaching(CachingTypes.READ_WRITE)
                                                  .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                                  .withDiskSizeGB(1023)
                                                  .withManagedDisk(
                                                      new ManagedDiskParameters()
                                                          .withStorageAccountType(StorageAccountTypes.STANDARD_LRS)
                                                          .withDiskEncryptionSet(
                                                              new DiskEncryptionSetParameters()
                                                                  .withId(
                                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"))),
                                              new DataDisk()
                                                  .withLun(1)
                                                  .withCaching(CachingTypes.READ_WRITE)
                                                  .withCreateOption(DiskCreateOptionTypes.ATTACH)
                                                  .withDiskSizeGB(1023)
                                                  .withManagedDisk(
                                                      new ManagedDiskParameters()
                                                          .withId(
                                                              "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/{existing-managed-disk-name}")
                                                          .withStorageAccountType(StorageAccountTypes.STANDARD_LRS)
                                                          .withDiskEncryptionSet(
                                                              new DiskEncryptionSetParameters()
                                                                  .withId(
                                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"))))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithDiskEncryptionSetResource.json
       */
      async function createAVMWithDiskEncryptionSetResourceIdInTheOSDiskAndDataDisk() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            dataDisks: [
              {
                caching: "ReadWrite",
                createOption: "Empty",
                diskSizeGB: 1023,
                lun: 0,
                managedDisk: {
                  diskEncryptionSet: {
                    id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}",
                  },
                  storageAccountType: "Standard_LRS",
                },
              },
              {
                caching: "ReadWrite",
                createOption: "Attach",
                diskSizeGB: 1023,
                lun: 1,
                managedDisk: {
                  diskEncryptionSet: {
                    id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}",
                  },
                  id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/{existing-managed-disk-name}",
                  storageAccountType: "Standard_LRS",
                },
              },
            ],
            imageReference: {
              id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: {
                diskEncryptionSet: {
                  id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}",
                },
                storageAccountType: "Standard_LRS",
              },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithDiskEncryptionSetResourceIdInTheOSDiskAndDataDisk().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/nsgcustom"
            },
            "osDisk": {
              "name": "myVMosdisk",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Standard_LRS",
                "diskEncryptionSet": {
                  "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskencryptionset-name}"
                }
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Linux"
            },
            "dataDisks": [
              {
                "caching": "ReadWrite",
                "managedDisk": {
                  "storageAccountType": "Standard_LRS",
                  "diskEncryptionSet": {
                    "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                  }
                },
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "lun": 0
              },
              {
                "caching": "ReadWrite",
                "managedDisk": {
                  "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/{existing-managed-disk-name}",
                  "storageAccountType": "Standard_LRS",
                  "diskEncryptionSet": {
                    "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                  }
                },
                "diskSizeGB": 1023,
                "createOption": "Attach",
                "lun": 1
              }
            ]
          },
          "vmId": "71aa3d5a-d73d-4970-9182-8580433b2865",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/nsgcustom"
            },
            "osDisk": {
              "name": "myVMosdisk",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Linux"
            },
            "dataDisks": [
              {
                "caching": "ReadWrite",
                "managedDisk": {
                  "storageAccountType": "Standard_LRS",
                  "diskEncryptionSet": {
                    "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                  }
                },
                "diskSizeGB": 1023,
                "createOption": "Empty",
                "lun": 0
              },
              {
                "caching": "ReadWrite",
                "managedDisk": {
                  "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/{existing-managed-disk-name}",
                  "storageAccountType": "Standard_LRS",
                  "diskEncryptionSet": {
                    "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                  }
                },
                "diskSizeGB": 1023,
                "createOption": "Attach",
                "lun": 1
              }
            ]
          },
          "vmId": "71aa3d5a-d73d-4970-9182-8580433b2865",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a vm with ephemeral os disk provisioning in Resource disk using placement property.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "plan": {
          "publisher": "microsoft-ads",
          "product": "windows-data-science-vm",
          "name": "windows2016"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows2016",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "windows-data-science-vm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "diffDiskSettings": {
                "option": "Local",
                "placement": "ResourceDisk"
              },
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "plan": {
          "publisher": "microsoft-ads",
          "product": "windows-data-science-vm",
          "name": "windows2016"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows2016",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "windows-data-science-vm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "diffDiskSettings": {
                "option": "Local",
                "placement": "ResourceDisk"
              },
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiffDiskOptions;
      import com.azure.resourcemanager.compute.models.DiffDiskPlacement;
      import com.azure.resourcemanager.compute.models.DiffDiskSettings;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.Plan;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithADiffOsDiskUsingDiffDiskPlacementAsResourceDisk.json
           */
          /**
           * Sample code: Create a vm with ephemeral os disk provisioning in Resource disk using placement property.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithEphemeralOsDiskProvisioningInResourceDiskUsingPlacementProperty(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withPlan(
                              new Plan()
                                  .withName("windows2016")
                                  .withPublisher("microsoft-ads")
                                  .withProduct("windows-data-science-vm"))
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_DS1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("microsoft-ads")
                                          .withOffer("windows-data-science-vm")
                                          .withSku("windows2016")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_ONLY)
                                          .withDiffDiskSettings(
                                              new DiffDiskSettings()
                                                  .withOption(DiffDiskOptions.LOCAL)
                                                  .withPlacement(DiffDiskPlacement.RESOURCE_DISK))
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithADiffOsDiskUsingDiffDiskPlacementAsResourceDisk.json
       */
      async function createAVMWithEphemeralOSDiskProvisioningInResourceDiskUsingPlacementProperty() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_DS1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          plan: {
            name: "windows2016",
            product: "windows-data-science-vm",
            publisher: "microsoft-ads",
          },
          storageProfile: {
            imageReference: {
              offer: "windows-data-science-vm",
              publisher: "microsoft-ads",
              sku: "windows2016",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadOnly",
              createOption: "FromImage",
              diffDiskSettings: { option: "Local", placement: "ResourceDisk" },
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithEphemeralOSDiskProvisioningInResourceDiskUsingPlacementProperty().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "standard-data-science-vm",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "standard-data-science-vm"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadOnly",
              "diffDiskSettings": {
                "option": "Local",
                "placement": "ResourceDisk"
              },
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "plan": {
          "publisher": "microsoft-ads",
          "product": "standard-data-science-vm",
          "name": "standard-data-science-vm"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "standard-data-science-vm",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "standard-data-science-vm"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadOnly",
              "diffDiskSettings": {
                "option": "Local",
                "placement": "ResourceDisk"
              },
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "plan": {
          "publisher": "microsoft-ads",
          "product": "standard-data-science-vm",
          "name": "standard-data-science-vm"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
- name: Create a vm with ephemeral os disk provisioning in Cache disk using placement property.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "plan": {
          "publisher": "microsoft-ads",
          "product": "windows-data-science-vm",
          "name": "windows2016"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows2016",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "windows-data-science-vm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "diffDiskSettings": {
                "option": "Local",
                "placement": "CacheDisk"
              },
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "plan": {
          "publisher": "microsoft-ads",
          "product": "windows-data-science-vm",
          "name": "windows2016"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows2016",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "windows-data-science-vm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "diffDiskSettings": {
                "option": "Local",
                "placement": "CacheDisk"
              },
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiffDiskOptions;
      import com.azure.resourcemanager.compute.models.DiffDiskPlacement;
      import com.azure.resourcemanager.compute.models.DiffDiskSettings;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.Plan;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithADiffOsDiskUsingDiffDiskPlacementAsCacheDisk.json
           */
          /**
           * Sample code: Create a vm with ephemeral os disk provisioning in Cache disk using placement property.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithEphemeralOsDiskProvisioningInCacheDiskUsingPlacementProperty(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withPlan(
                              new Plan()
                                  .withName("windows2016")
                                  .withPublisher("microsoft-ads")
                                  .withProduct("windows-data-science-vm"))
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_DS1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("microsoft-ads")
                                          .withOffer("windows-data-science-vm")
                                          .withSku("windows2016")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_ONLY)
                                          .withDiffDiskSettings(
                                              new DiffDiskSettings()
                                                  .withOption(DiffDiskOptions.LOCAL)
                                                  .withPlacement(DiffDiskPlacement.CACHE_DISK))
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithADiffOsDiskUsingDiffDiskPlacementAsCacheDisk.json
       */
      async function createAVMWithEphemeralOSDiskProvisioningInCacheDiskUsingPlacementProperty() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_DS1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          plan: {
            name: "windows2016",
            product: "windows-data-science-vm",
            publisher: "microsoft-ads",
          },
          storageProfile: {
            imageReference: {
              offer: "windows-data-science-vm",
              publisher: "microsoft-ads",
              sku: "windows2016",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadOnly",
              createOption: "FromImage",
              diffDiskSettings: { option: "Local", placement: "CacheDisk" },
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithEphemeralOSDiskProvisioningInCacheDiskUsingPlacementProperty().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "standard-data-science-vm",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "standard-data-science-vm"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadOnly",
              "diffDiskSettings": {
                "option": "Local",
                "placement": "CacheDisk"
              },
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "plan": {
          "publisher": "microsoft-ads",
          "product": "standard-data-science-vm",
          "name": "standard-data-science-vm"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "standard-data-science-vm",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "standard-data-science-vm"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadOnly",
              "diffDiskSettings": {
                "option": "Local",
                "placement": "CacheDisk"
              },
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "plan": {
          "publisher": "microsoft-ads",
          "product": "standard-data-science-vm",
          "name": "standard-data-science-vm"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
- name: Create a vm with Host Encryption using encryptionAtHost property.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "plan": {
          "publisher": "microsoft-ads",
          "product": "windows-data-science-vm",
          "name": "windows2016"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "securityProfile": {
            "encryptionAtHost": true
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows2016",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "windows-data-science-vm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "plan": {
          "publisher": "microsoft-ads",
          "product": "windows-data-science-vm",
          "name": "windows2016"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "securityProfile": {
            "encryptionAtHost": true
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows2016",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "windows-data-science-vm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.Plan;
      import com.azure.resourcemanager.compute.models.SecurityProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithEncryptionAtHost.json
           */
          /**
           * Sample code: Create a vm with Host Encryption using encryptionAtHost property.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithHostEncryptionUsingEncryptionAtHostProperty(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withPlan(
                              new Plan()
                                  .withName("windows2016")
                                  .withPublisher("microsoft-ads")
                                  .withProduct("windows-data-science-vm"))
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_DS1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("microsoft-ads")
                                          .withOffer("windows-data-science-vm")
                                          .withSku("windows2016")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_ONLY)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withSecurityProfile(new SecurityProfile().withEncryptionAtHost(true)),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithEncryptionAtHost.json
       */
      async function createAVMWithHostEncryptionUsingEncryptionAtHostProperty() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_DS1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          plan: {
            name: "windows2016",
            product: "windows-data-science-vm",
            publisher: "microsoft-ads",
          },
          securityProfile: { encryptionAtHost: true },
          storageProfile: {
            imageReference: {
              offer: "windows-data-science-vm",
              publisher: "microsoft-ads",
              sku: "windows2016",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadOnly",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithHostEncryptionUsingEncryptionAtHostProperty().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "standard-data-science-vm",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "standard-data-science-vm"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "securityProfile": {
            "encryptionAtHost": true
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "plan": {
          "publisher": "microsoft-ads",
          "product": "standard-data-science-vm",
          "name": "standard-data-science-vm"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "standard-data-science-vm",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "standard-data-science-vm"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "securityProfile": {
            "encryptionAtHost": true
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "plan": {
          "publisher": "microsoft-ads",
          "product": "standard-data-science-vm",
          "name": "standard-data-science-vm"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
- name: Create a Windows vm with a patch setting patchMode of AutomaticByOS.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByOS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByOS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.PatchSettings;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import com.azure.resourcemanager.compute.models.WindowsConfiguration;
      import com.azure.resourcemanager.compute.models.WindowsVMGuestPatchMode;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WindowsVmWithPatchSettingModeOfAutomaticByOS.json
           */
          /**
           * Sample code: Create a Windows vm with a patch setting patchMode of AutomaticByOS.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAWindowsVmWithAPatchSettingPatchModeOfAutomaticByOS(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.PREMIUM_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}")
                                  .withWindowsConfiguration(
                                      new WindowsConfiguration()
                                          .withProvisionVMAgent(true)
                                          .withEnableAutomaticUpdates(true)
                                          .withPatchSettings(
                                              new PatchSettings().withPatchMode(WindowsVMGuestPatchMode.AUTOMATIC_BY_OS))))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WindowsVmWithPatchSettingModeOfAutomaticByOS.json
       */
      async function createAWindowsVMWithAPatchSettingPatchModeOfAutomaticByOS() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
            windowsConfiguration: {
              enableAutomaticUpdates: true,
              patchSettings: { patchMode: "AutomaticByOS" },
              provisionVMAgent: true,
            },
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Premium_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAWindowsVMWithAPatchSettingPatchModeOfAutomaticByOS().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByOS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByOS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a Windows vm with a patch setting patchMode of AutomaticByPlatform and AutomaticByPlatformSettings.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform",
                "automaticByPlatformSettings": {
                  "rebootSetting": "Never"
                }
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform",
                "automaticByPlatformSettings": {
                  "rebootSetting": "Never"
                }
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.PatchSettings;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import com.azure.resourcemanager.compute.models.WindowsConfiguration;
      import com.azure.resourcemanager.compute.models.WindowsPatchAssessmentMode;
      import com.azure.resourcemanager.compute.models.WindowsVMGuestPatchAutomaticByPlatformRebootSetting;
      import com.azure.resourcemanager.compute.models.WindowsVMGuestPatchAutomaticByPlatformSettings;
      import com.azure.resourcemanager.compute.models.WindowsVMGuestPatchMode;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WindowsVmWithAutomaticByPlatformSettings.json
           */
          /**
           * Sample code: Create a Windows vm with a patch setting patchMode of AutomaticByPlatform and
           * AutomaticByPlatformSettings.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAWindowsVmWithAPatchSettingPatchModeOfAutomaticByPlatformAndAutomaticByPlatformSettings(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.PREMIUM_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}")
                                  .withWindowsConfiguration(
                                      new WindowsConfiguration()
                                          .withProvisionVMAgent(true)
                                          .withEnableAutomaticUpdates(true)
                                          .withPatchSettings(
                                              new PatchSettings()
                                                  .withPatchMode(WindowsVMGuestPatchMode.AUTOMATIC_BY_PLATFORM)
                                                  .withAssessmentMode(WindowsPatchAssessmentMode.AUTOMATIC_BY_PLATFORM)
                                                  .withAutomaticByPlatformSettings(
                                                      new WindowsVMGuestPatchAutomaticByPlatformSettings()
                                                          .withRebootSetting(
                                                              WindowsVMGuestPatchAutomaticByPlatformRebootSetting.NEVER)))))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WindowsVmWithAutomaticByPlatformSettings.json
       */
      async function createAWindowsVMWithAPatchSettingPatchModeOfAutomaticByPlatformAndAutomaticByPlatformSettings() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
            windowsConfiguration: {
              enableAutomaticUpdates: true,
              patchSettings: {
                assessmentMode: "AutomaticByPlatform",
                automaticByPlatformSettings: { rebootSetting: "Never" },
                patchMode: "AutomaticByPlatform",
              },
              provisionVMAgent: true,
            },
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Premium_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAWindowsVMWithAPatchSettingPatchModeOfAutomaticByPlatformAndAutomaticByPlatformSettings().catch(
        console.error
      );

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform",
                "automaticByPlatformSettings": {
                  "rebootSetting": "Never"
                }
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform",
                "automaticByPlatformSettings": {
                  "rebootSetting": "Never"
                }
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a Windows vm with patch settings patchMode and assessmentMode set to AutomaticByPlatform.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.PatchSettings;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import com.azure.resourcemanager.compute.models.WindowsConfiguration;
      import com.azure.resourcemanager.compute.models.WindowsPatchAssessmentMode;
      import com.azure.resourcemanager.compute.models.WindowsVMGuestPatchMode;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WindowsVmWithPatchSettingModesOfAutomaticByPlatform.json
           */
          /**
           * Sample code: Create a Windows vm with patch settings patchMode and assessmentMode set to AutomaticByPlatform.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAWindowsVmWithPatchSettingsPatchModeAndAssessmentModeSetToAutomaticByPlatform(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.PREMIUM_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}")
                                  .withWindowsConfiguration(
                                      new WindowsConfiguration()
                                          .withProvisionVMAgent(true)
                                          .withEnableAutomaticUpdates(true)
                                          .withPatchSettings(
                                              new PatchSettings()
                                                  .withPatchMode(WindowsVMGuestPatchMode.AUTOMATIC_BY_PLATFORM)
                                                  .withAssessmentMode(WindowsPatchAssessmentMode.AUTOMATIC_BY_PLATFORM))))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WindowsVmWithPatchSettingModesOfAutomaticByPlatform.json
       */
      async function createAWindowsVMWithPatchSettingsPatchModeAndAssessmentModeSetToAutomaticByPlatform() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
            windowsConfiguration: {
              enableAutomaticUpdates: true,
              patchSettings: {
                assessmentMode: "AutomaticByPlatform",
                patchMode: "AutomaticByPlatform",
              },
              provisionVMAgent: true,
            },
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Premium_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAWindowsVMWithPatchSettingsPatchModeAndAssessmentModeSetToAutomaticByPlatform().catch(
        console.error
      );

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a Windows vm with a patch setting patchMode of Manual.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "Manual"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "Manual"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.PatchSettings;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import com.azure.resourcemanager.compute.models.WindowsConfiguration;
      import com.azure.resourcemanager.compute.models.WindowsVMGuestPatchMode;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WindowsVmWithPatchSettingModeOfManual.json
           */
          /**
           * Sample code: Create a Windows vm with a patch setting patchMode of Manual.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAWindowsVmWithAPatchSettingPatchModeOfManual(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.PREMIUM_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}")
                                  .withWindowsConfiguration(
                                      new WindowsConfiguration()
                                          .withProvisionVMAgent(true)
                                          .withEnableAutomaticUpdates(true)
                                          .withPatchSettings(
                                              new PatchSettings().withPatchMode(WindowsVMGuestPatchMode.MANUAL))))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WindowsVmWithPatchSettingModeOfManual.json
       */
      async function createAWindowsVMWithAPatchSettingPatchModeOfManual() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
            windowsConfiguration: {
              enableAutomaticUpdates: true,
              patchSettings: { patchMode: "Manual" },
              provisionVMAgent: true,
            },
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Premium_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAWindowsVMWithAPatchSettingPatchModeOfManual().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "Manual"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": false,
              "patchSettings": {
                "patchMode": "Manual"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a Windows vm with a patch setting assessmentMode of ImageDefault.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "assessmentMode": "ImageDefault"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "assessmentMode": "ImageDefault"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.PatchSettings;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import com.azure.resourcemanager.compute.models.WindowsConfiguration;
      import com.azure.resourcemanager.compute.models.WindowsPatchAssessmentMode;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WindowsVmWithPatchSettingAssessmentModeOfImageDefault.json
           */
          /**
           * Sample code: Create a Windows vm with a patch setting assessmentMode of ImageDefault.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAWindowsVmWithAPatchSettingAssessmentModeOfImageDefault(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.PREMIUM_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}")
                                  .withWindowsConfiguration(
                                      new WindowsConfiguration()
                                          .withProvisionVMAgent(true)
                                          .withEnableAutomaticUpdates(true)
                                          .withPatchSettings(
                                              new PatchSettings()
                                                  .withAssessmentMode(WindowsPatchAssessmentMode.IMAGE_DEFAULT))))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WindowsVmWithPatchSettingAssessmentModeOfImageDefault.json
       */
      async function createAWindowsVMWithAPatchSettingAssessmentModeOfImageDefault() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
            windowsConfiguration: {
              enableAutomaticUpdates: true,
              patchSettings: { assessmentMode: "ImageDefault" },
              provisionVMAgent: true,
            },
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Premium_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAWindowsVMWithAPatchSettingAssessmentModeOfImageDefault().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "assessmentMode": "ImageDefault"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": false,
              "patchSettings": {
                "assessmentMode": "ImageDefault"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a Windows vm with a patch setting patchMode of AutomaticByPlatform and enableHotpatching set to true.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "enableHotpatching": true
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "enableHotpatching": true
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.PatchSettings;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import com.azure.resourcemanager.compute.models.WindowsConfiguration;
      import com.azure.resourcemanager.compute.models.WindowsVMGuestPatchMode;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WindowsVmWithPatchSettingModeOfAutomaticByPlatformAndEnableHotPatchingTrue.json
           */
          /**
           * Sample code: Create a Windows vm with a patch setting patchMode of AutomaticByPlatform and enableHotpatching set
           * to true.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAWindowsVmWithAPatchSettingPatchModeOfAutomaticByPlatformAndEnableHotpatchingSetToTrue(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.PREMIUM_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}")
                                  .withWindowsConfiguration(
                                      new WindowsConfiguration()
                                          .withProvisionVMAgent(true)
                                          .withEnableAutomaticUpdates(true)
                                          .withPatchSettings(
                                              new PatchSettings()
                                                  .withPatchMode(WindowsVMGuestPatchMode.AUTOMATIC_BY_PLATFORM)
                                                  .withEnableHotpatching(true))))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WindowsVmWithPatchSettingModeOfAutomaticByPlatformAndEnableHotPatchingTrue.json
       */
      async function createAWindowsVMWithAPatchSettingPatchModeOfAutomaticByPlatformAndEnableHotpatchingSetToTrue() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
            windowsConfiguration: {
              enableAutomaticUpdates: true,
              patchSettings: {
                enableHotpatching: true,
                patchMode: "AutomaticByPlatform",
              },
              provisionVMAgent: true,
            },
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Premium_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAWindowsVMWithAPatchSettingPatchModeOfAutomaticByPlatformAndEnableHotpatchingSetToTrue().catch(
        console.error
      );

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "enableHotpatching": true
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "enableHotpatching": true
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a Linux vm with a patch settings patchMode and assessmentMode set to AutomaticByPlatform.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.LinuxConfiguration;
      import com.azure.resourcemanager.compute.models.LinuxPatchAssessmentMode;
      import com.azure.resourcemanager.compute.models.LinuxPatchSettings;
      import com.azure.resourcemanager.compute.models.LinuxVMGuestPatchMode;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_LinuxVmWithPatchSettingModesOfAutomaticByPlatform.json
           */
          /**
           * Sample code: Create a Linux vm with a patch settings patchMode and assessmentMode set to AutomaticByPlatform.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createALinuxVmWithAPatchSettingsPatchModeAndAssessmentModeSetToAutomaticByPlatform(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D2S_V3))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("Canonical")
                                          .withOffer("UbuntuServer")
                                          .withSku("16.04-LTS")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.PREMIUM_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}")
                                  .withLinuxConfiguration(
                                      new LinuxConfiguration()
                                          .withProvisionVMAgent(true)
                                          .withPatchSettings(
                                              new LinuxPatchSettings()
                                                  .withPatchMode(LinuxVMGuestPatchMode.AUTOMATIC_BY_PLATFORM)
                                                  .withAssessmentMode(LinuxPatchAssessmentMode.AUTOMATIC_BY_PLATFORM))))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_LinuxVmWithPatchSettingModesOfAutomaticByPlatform.json
       */
      async function createALinuxVMWithAPatchSettingsPatchModeAndAssessmentModeSetToAutomaticByPlatform() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D2s_v3" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
            linuxConfiguration: {
              patchSettings: {
                assessmentMode: "AutomaticByPlatform",
                patchMode: "AutomaticByPlatform",
              },
              provisionVMAgent: true,
            },
          },
          storageProfile: {
            imageReference: {
              offer: "UbuntuServer",
              publisher: "Canonical",
              sku: "16.04-LTS",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Premium_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createALinuxVMWithAPatchSettingsPatchModeAndAssessmentModeSetToAutomaticByPlatform().catch(
        console.error
      );

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "osType": "Linux",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "osType": "Linux",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a Linux vm with a patch setting patchMode of ImageDefault.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "ImageDefault"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "ImageDefault"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.LinuxConfiguration;
      import com.azure.resourcemanager.compute.models.LinuxPatchSettings;
      import com.azure.resourcemanager.compute.models.LinuxVMGuestPatchMode;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_LinuxVmWithPatchSettingModeOfImageDefault.json
           */
          /**
           * Sample code: Create a Linux vm with a patch setting patchMode of ImageDefault.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createALinuxVmWithAPatchSettingPatchModeOfImageDefault(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D2S_V3))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("Canonical")
                                          .withOffer("UbuntuServer")
                                          .withSku("16.04-LTS")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.PREMIUM_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}")
                                  .withLinuxConfiguration(
                                      new LinuxConfiguration()
                                          .withProvisionVMAgent(true)
                                          .withPatchSettings(
                                              new LinuxPatchSettings().withPatchMode(LinuxVMGuestPatchMode.IMAGE_DEFAULT))))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_LinuxVmWithPatchSettingModeOfImageDefault.json
       */
      async function createALinuxVMWithAPatchSettingPatchModeOfImageDefault() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D2s_v3" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
            linuxConfiguration: {
              patchSettings: { patchMode: "ImageDefault" },
              provisionVMAgent: true,
            },
          },
          storageProfile: {
            imageReference: {
              offer: "UbuntuServer",
              publisher: "Canonical",
              sku: "16.04-LTS",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Premium_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createALinuxVMWithAPatchSettingPatchModeOfImageDefault().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "ImageDefault"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "osType": "Linux",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "ImageDefault"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "osType": "Linux",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a Linux vm with a patch setting patchMode of AutomaticByPlatform and AutomaticByPlatformSettings.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform",
                "automaticByPlatformSettings": {
                  "rebootSetting": "Never"
                }
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform",
                "automaticByPlatformSettings": {
                  "rebootSetting": "Never"
                }
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.LinuxConfiguration;
      import com.azure.resourcemanager.compute.models.LinuxPatchAssessmentMode;
      import com.azure.resourcemanager.compute.models.LinuxPatchSettings;
      import com.azure.resourcemanager.compute.models.LinuxVMGuestPatchAutomaticByPlatformRebootSetting;
      import com.azure.resourcemanager.compute.models.LinuxVMGuestPatchAutomaticByPlatformSettings;
      import com.azure.resourcemanager.compute.models.LinuxVMGuestPatchMode;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_LinuxVmWithAutomaticByPlatformSettings.json
           */
          /**
           * Sample code: Create a Linux vm with a patch setting patchMode of AutomaticByPlatform and
           * AutomaticByPlatformSettings.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createALinuxVmWithAPatchSettingPatchModeOfAutomaticByPlatformAndAutomaticByPlatformSettings(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D2S_V3))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("Canonical")
                                          .withOffer("UbuntuServer")
                                          .withSku("16.04-LTS")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.PREMIUM_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}")
                                  .withLinuxConfiguration(
                                      new LinuxConfiguration()
                                          .withProvisionVMAgent(true)
                                          .withPatchSettings(
                                              new LinuxPatchSettings()
                                                  .withPatchMode(LinuxVMGuestPatchMode.AUTOMATIC_BY_PLATFORM)
                                                  .withAssessmentMode(LinuxPatchAssessmentMode.AUTOMATIC_BY_PLATFORM)
                                                  .withAutomaticByPlatformSettings(
                                                      new LinuxVMGuestPatchAutomaticByPlatformSettings()
                                                          .withRebootSetting(
                                                              LinuxVMGuestPatchAutomaticByPlatformRebootSetting.NEVER)))))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_LinuxVmWithAutomaticByPlatformSettings.json
       */
      async function createALinuxVMWithAPatchSettingPatchModeOfAutomaticByPlatformAndAutomaticByPlatformSettings() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D2s_v3" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
            linuxConfiguration: {
              patchSettings: {
                assessmentMode: "AutomaticByPlatform",
                automaticByPlatformSettings: { rebootSetting: "Never" },
                patchMode: "AutomaticByPlatform",
              },
              provisionVMAgent: true,
            },
          },
          storageProfile: {
            imageReference: {
              offer: "UbuntuServer",
              publisher: "Canonical",
              sku: "16.04-LTS",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Premium_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createALinuxVMWithAPatchSettingPatchModeOfAutomaticByPlatformAndAutomaticByPlatformSettings().catch(
        console.error
      );

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform",
                "automaticByPlatformSettings": {
                  "rebootSetting": "Never"
                }
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "osType": "Linux",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "AutomaticByPlatform",
                "assessmentMode": "AutomaticByPlatform",
                "automaticByPlatformSettings": {
                  "rebootSetting": "Never"
                }
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "osType": "Linux",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a Linux vm with a patch setting assessmentMode of ImageDefault.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "assessmentMode": "ImageDefault"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "assessmentMode": "ImageDefault"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.LinuxConfiguration;
      import com.azure.resourcemanager.compute.models.LinuxPatchAssessmentMode;
      import com.azure.resourcemanager.compute.models.LinuxPatchSettings;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_LinuxVmWithPatchSettingAssessmentModeOfImageDefault.json
           */
          /**
           * Sample code: Create a Linux vm with a patch setting assessmentMode of ImageDefault.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createALinuxVmWithAPatchSettingAssessmentModeOfImageDefault(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D2S_V3))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("Canonical")
                                          .withOffer("UbuntuServer")
                                          .withSku("16.04-LTS")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.PREMIUM_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}")
                                  .withLinuxConfiguration(
                                      new LinuxConfiguration()
                                          .withProvisionVMAgent(true)
                                          .withPatchSettings(
                                              new LinuxPatchSettings()
                                                  .withAssessmentMode(LinuxPatchAssessmentMode.IMAGE_DEFAULT))))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcompute_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v3"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_LinuxVmWithPatchSettingAssessmentModeOfImageDefault.json
      func ExampleVirtualMachinesClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcompute.NewVirtualMachinesClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"myResourceGroup",
      		"myVM",
      		armcompute.VirtualMachine{
      			Location: to.Ptr("westus"),
      			Properties: &armcompute.VirtualMachineProperties{
      				HardwareProfile: &armcompute.HardwareProfile{
      					VMSize: to.Ptr(armcompute.VirtualMachineSizeTypesStandardD2SV3),
      				},
      				NetworkProfile: &armcompute.NetworkProfile{
      					NetworkInterfaces: []*armcompute.NetworkInterfaceReference{
      						{
      							ID: to.Ptr("/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}"),
      							Properties: &armcompute.NetworkInterfaceReferenceProperties{
      								Primary: to.Ptr(true),
      							},
      						}},
      				},
      				OSProfile: &armcompute.OSProfile{
      					AdminPassword: to.Ptr("{your-password}"),
      					AdminUsername: to.Ptr("{your-username}"),
      					ComputerName:  to.Ptr("myVM"),
      					LinuxConfiguration: &armcompute.LinuxConfiguration{
      						PatchSettings: &armcompute.LinuxPatchSettings{
      							AssessmentMode: to.Ptr(armcompute.LinuxPatchAssessmentModeImageDefault),
      						},
      						ProvisionVMAgent: to.Ptr(true),
      					},
      				},
      				StorageProfile: &armcompute.StorageProfile{
      					ImageReference: &armcompute.ImageReference{
      						Offer:     to.Ptr("UbuntuServer"),
      						Publisher: to.Ptr("Canonical"),
      						SKU:       to.Ptr("16.04-LTS"),
      						Version:   to.Ptr("latest"),
      					},
      					OSDisk: &armcompute.OSDisk{
      						Name:         to.Ptr("myVMosdisk"),
      						Caching:      to.Ptr(armcompute.CachingTypesReadWrite),
      						CreateOption: to.Ptr(armcompute.DiskCreateOptionTypesFromImage),
      						ManagedDisk: &armcompute.ManagedDiskParameters{
      							StorageAccountType: to.Ptr(armcompute.StorageAccountTypesPremiumLRS),
      						},
      					},
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcompute%2Farmcompute%2Fv3.0.0/sdk/resourcemanager/compute/armcompute/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_LinuxVmWithPatchSettingAssessmentModeOfImageDefault.json
       */
      async function createALinuxVMWithAPatchSettingAssessmentModeOfImageDefault() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D2s_v3" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
            linuxConfiguration: {
              patchSettings: { assessmentMode: "ImageDefault" },
              provisionVMAgent: true,
            },
          },
          storageProfile: {
            imageReference: {
              offer: "UbuntuServer",
              publisher: "Canonical",
              sku: "16.04-LTS",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Premium_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createALinuxVMWithAPatchSettingAssessmentModeOfImageDefault().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "assessmentMode": "ImageDefault"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "osType": "Linux",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "provisionVMAgent": true,
              "patchSettings": {
                "assessmentMode": "ImageDefault"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "osType": "Linux",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "a149cd25-409f-41af-8088-275f5486bc93",
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a vm with an extensions time budget.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://{existing-storage-account-name}.blob.core.windows.net",
              "enabled": true
            }
          },
          "extensionsTimeBudget": "PT30M"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://{existing-storage-account-name}.blob.core.windows.net",
              "enabled": true
            }
          },
          "extensionsTimeBudget": "PT30M"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.BootDiagnostics;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiagnosticsProfile;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithExtensionsTimeBudget.json
           */
          /**
           * Sample code: Create a vm with an extensions time budget.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithAnExtensionsTimeBudget(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withDiagnosticsProfile(
                              new DiagnosticsProfile()
                                  .withBootDiagnostics(
                                      new BootDiagnostics()
                                          .withEnabled(true)
                                          .withStorageUri("http://{existing-storage-account-name}.blob.core.windows.net")))
                          .withExtensionsTimeBudget("PT30M"),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithExtensionsTimeBudget.json
       */
      async function createAVMWithAnExtensionsTimeBudget() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          diagnosticsProfile: {
            bootDiagnostics: {
              enabled: true,
              storageUri: "http://{existing-storage-account-name}.blob.core.windows.net",
            },
          },
          extensionsTimeBudget: "PT30M",
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithAnExtensionsTimeBudget().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://nsgdiagnostic.blob.core.windows.net",
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "extensionsTimeBudget": "PT30M",
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://nsgdiagnostic.blob.core.windows.net",
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "extensionsTimeBudget": "PT30M",
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a VM with Uefi Settings of secureBoot and vTPM.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "securityProfile": {
            "uefiSettings": {
              "secureBootEnabled": true,
              "vTpmEnabled": true
            },
            "securityType": "TrustedLaunch"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows10-tvm",
              "publisher": "MicrosoftWindowsServer",
              "version": "18363.592.2001092016",
              "offer": "windowsserver-gen2preview-preview"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "securityProfile": {
            "uefiSettings": {
              "secureBootEnabled": true,
              "vTpmEnabled": true
            },
            "securityType": "TrustedLaunch"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows10-tvm",
              "publisher": "MicrosoftWindowsServer",
              "version": "18363.592.2001092016",
              "offer": "windowsserver-gen2preview-preview"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.SecurityProfile;
      import com.azure.resourcemanager.compute.models.SecurityTypes;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.UefiSettings;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithUefiSettings.json
           */
          /**
           * Sample code: Create a VM with Uefi Settings of secureBoot and vTPM.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVMWithUefiSettingsOfSecureBootAndVTPM(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D2S_V3))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("windowsserver-gen2preview-preview")
                                          .withSku("windows10-tvm")
                                          .withVersion("18363.592.2001092016"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_ONLY)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_SSD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withSecurityProfile(
                              new SecurityProfile()
                                  .withUefiSettings(new UefiSettings().withSecureBootEnabled(true).withVTpmEnabled(true))
                                  .withSecurityType(SecurityTypes.TRUSTED_LAUNCH)),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithUefiSettings.json
       */
      async function createAVMWithUefiSettingsOfSecureBootAndVTpm() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D2s_v3" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          securityProfile: {
            securityType: "TrustedLaunch",
            uefiSettings: { secureBootEnabled: true, vTpmEnabled: true },
          },
          storageProfile: {
            imageReference: {
              offer: "windowsserver-gen2preview-preview",
              publisher: "MicrosoftWindowsServer",
              sku: "windows10-tvm",
              version: "18363.592.2001092016",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadOnly",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "StandardSSD_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithUefiSettingsOfSecureBootAndVTpm().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows10-tvm",
              "publisher": "MicrosoftWindowsServer",
              "version": "18363.592.2001092016",
              "offer": "windowsserver-gen2preview-preview"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "securityProfile": {
            "uefiSettings": {
              "secureBootEnabled": true,
              "vTpmEnabled": true
            },
            "securityType": "TrustedLaunch"
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows10-tvm",
              "publisher": "MicrosoftWindowsServer",
              "version": "18363.592.2001092016",
              "offer": "windowsserver-gen2preview-preview"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "securityProfile": {
            "uefiSettings": {
              "secureBootEnabled": true,
              "vTpmEnabled": true
            },
            "securityType": "TrustedLaunch"
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
- name: Create a vm from a generalized shared image.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_FromAGeneralizedSharedImage.json
           */
          /**
           * Sample code: Create a vm from a generalized shared image.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmFromAGeneralizedSharedImage(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withId(
                                              "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_FromAGeneralizedSharedImage.json
       */
      async function createAVMFromAGeneralizedSharedImage() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            imageReference: {
              id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMFromAGeneralizedSharedImage().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage"
            },
            "osDisk": {
              "name": "myVMosdisk",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Linux"
            },
            "dataDisks": []
          },
          "vmId": "71aa3d5a-d73d-4970-9182-8580433b2865",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage"
            },
            "osDisk": {
              "name": "myVMosdisk",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Linux"
            },
            "dataDisks": []
          },
          "vmId": "71aa3d5a-d73d-4970-9182-8580433b2865",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a vm from a specialized shared image.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_FromASpecializedSharedImage.json
           */
          /**
           * Sample code: Create a vm from a specialized shared image.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmFromASpecializedSharedImage(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withId(
                                              "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_FromASpecializedSharedImage.json
       */
      async function createAVMFromASpecializedSharedImage() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          storageProfile: {
            imageReference: {
              id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMFromASpecializedSharedImage().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage"
            },
            "osDisk": {
              "name": "myVMosdisk",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Linux"
            },
            "dataDisks": []
          },
          "vmId": "71aa3d5a-d73d-4970-9182-8580433b2865",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage"
            },
            "osDisk": {
              "name": "myVMosdisk",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Linux"
            },
            "dataDisks": []
          },
          "vmId": "71aa3d5a-d73d-4970-9182-8580433b2865",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a VM with network interface configuration
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkApiVersion": "2020-11-01",
            "networkInterfaceConfigurations": [
              {
                "name": "{nic-config-name}",
                "properties": {
                  "primary": true,
                  "deleteOption": "Delete",
                  "ipConfigurations": [
                    {
                      "name": "{ip-config-name}",
                      "properties": {
                        "primary": true,
                        "publicIPAddressConfiguration": {
                          "name": "{publicIP-config-name}",
                          "sku": {
                            "name": "Basic",
                            "tier": "Global"
                          },
                          "properties": {
                            "deleteOption": "Detach",
                            "publicIPAllocationMethod": "Static"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkApiVersion": "2020-11-01",
            "networkInterfaceConfigurations": [
              {
                "name": "{nic-config-name}",
                "properties": {
                  "primary": true,
                  "deleteOption": "Delete",
                  "ipConfigurations": [
                    {
                      "name": "{ip-config-name}",
                      "properties": {
                        "primary": true,
                        "publicIPAddressConfiguration": {
                          "name": "{publicIP-config-name}",
                          "sku": {
                            "name": "Basic",
                            "tier": "Global"
                          },
                          "properties": {
                            "deleteOption": "Detach",
                            "publicIPAllocationMethod": "Static"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DeleteOptions;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkApiVersion;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.PublicIpAddressSku;
      import com.azure.resourcemanager.compute.models.PublicIpAddressSkuName;
      import com.azure.resourcemanager.compute.models.PublicIpAddressSkuTier;
      import com.azure.resourcemanager.compute.models.PublicIpAllocationMethod;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineNetworkInterfaceConfiguration;
      import com.azure.resourcemanager.compute.models.VirtualMachineNetworkInterfaceIpConfiguration;
      import com.azure.resourcemanager.compute.models.VirtualMachinePublicIpAddressConfiguration;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithNetworkInterfaceConfiguration.json
           */
          /**
           * Sample code: Create a VM with network interface configuration.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVMWithNetworkInterfaceConfiguration(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkApiVersion(NetworkApiVersion.TWO_ZERO_TWO_ZERO_ONE_ONE_ZERO_ONE)
                                  .withNetworkInterfaceConfigurations(
                                      Arrays
                                          .asList(
                                              new VirtualMachineNetworkInterfaceConfiguration()
                                                  .withName("{nic-config-name}")
                                                  .withPrimary(true)
                                                  .withDeleteOption(DeleteOptions.DELETE)
                                                  .withIpConfigurations(
                                                      Arrays
                                                          .asList(
                                                              new VirtualMachineNetworkInterfaceIpConfiguration()
                                                                  .withName("{ip-config-name}")
                                                                  .withPrimary(true)
                                                                  .withPublicIpAddressConfiguration(
                                                                      new VirtualMachinePublicIpAddressConfiguration()
                                                                          .withName("{publicIP-config-name}")
                                                                          .withSku(
                                                                              new PublicIpAddressSku()
                                                                                  .withName(PublicIpAddressSkuName.BASIC)
                                                                                  .withTier(PublicIpAddressSkuTier.GLOBAL))
                                                                          .withDeleteOption(DeleteOptions.DETACH)
                                                                          .withPublicIpAllocationMethod(
                                                                              PublicIpAllocationMethod.STATIC))))))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithNetworkInterfaceConfiguration.json
       */
      async function createAVMWithNetworkInterfaceConfiguration() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkApiVersion: "2020-11-01",
            networkInterfaceConfigurations: [
              {
                name: "{nic-config-name}",
                deleteOption: "Delete",
                ipConfigurations: [
                  {
                    name: "{ip-config-name}",
                    primary: true,
                    publicIPAddressConfiguration: {
                      name: "{publicIP-config-name}",
                      deleteOption: "Detach",
                      publicIPAllocationMethod: "Static",
                      sku: { name: "Basic", tier: "Global" },
                    },
                  },
                ],
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithNetworkInterfaceConfiguration().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/toBeCreatedNetworkInterface",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "b7a098cc-b0b8-46e8-a205-62f301a62a8f",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/toBeCreatedNetworkInterface",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "vmId": "b7a098cc-b0b8-46e8-a205-62f301a62a8f",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a VM with UserData
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/{vm-name}?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "vmOSdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "{vm-name}",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://{existing-storage-account-name}.blob.core.windows.net",
              "enabled": true
            }
          },
          "userData": "RXhhbXBsZSBVc2VyRGF0YQ=="
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/{vm-name}?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "vmOSdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "{vm-name}",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://{existing-storage-account-name}.blob.core.windows.net",
              "enabled": true
            }
          },
          "userData": "RXhhbXBsZSBVc2VyRGF0YQ=="
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.BootDiagnostics;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiagnosticsProfile;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithUserData.json
           */
          /**
           * Sample code: Create a VM with UserData.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVMWithUserData(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "{vm-name}",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("vmOSdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("{vm-name}")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withDiagnosticsProfile(
                              new DiagnosticsProfile()
                                  .withBootDiagnostics(
                                      new BootDiagnostics()
                                          .withEnabled(true)
                                          .withStorageUri("http://{existing-storage-account-name}.blob.core.windows.net")))
                          .withUserData("RXhhbXBsZSBVc2VyRGF0YQ=="),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithUserData.json
       */
      async function createAVMWithUserData() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "{vm-name}";
        const parameters = {
          diagnosticsProfile: {
            bootDiagnostics: {
              enabled: true,
              storageUri: "http://{existing-storage-account-name}.blob.core.windows.net",
            },
          },
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "{vm-name}",
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "vmOSdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
          userData: "RXhhbXBsZSBVc2VyRGF0YQ==",
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithUserData().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/{vm-name}",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "{vm-name}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "vmOSdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://nsgdiagnostic.blob.core.windows.net",
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "{vm-name}",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/{vm-name}",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "{vm-name}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "vmOSdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://nsgdiagnostic.blob.core.windows.net",
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "{vm-name}",
        "location": "westus"
      }
- name: Create a vm with Application Profile.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "{image_sku}",
              "publisher": "{image_publisher}",
              "version": "latest",
              "offer": "{image_offer}"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "applicationProfile": {
            "galleryApplications": [
              {
                "tags": "myTag1",
                "order": 1,
                "packageReferenceId": "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdb/resourceGroups/myresourceGroupName2/providers/Microsoft.Compute/galleries/myGallery1/applications/MyApplication1/versions/1.0",
                "configurationReference": "https://mystorageaccount.blob.core.windows.net/configurations/settings.config",
                "treatFailureAsDeploymentFailure": false,
                "enableAutomaticUpgrade": false
              },
              {
                "packageReferenceId": "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdg/resourceGroups/myresourceGroupName3/providers/Microsoft.Compute/galleries/myGallery2/applications/MyApplication2/versions/1.1"
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "{image_sku}",
              "publisher": "{image_publisher}",
              "version": "latest",
              "offer": "{image_offer}"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "applicationProfile": {
            "galleryApplications": [
              {
                "tags": "myTag1",
                "order": 1,
                "packageReferenceId": "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdb/resourceGroups/myresourceGroupName2/providers/Microsoft.Compute/galleries/myGallery1/applications/MyApplication1/versions/1.0",
                "configurationReference": "https://mystorageaccount.blob.core.windows.net/configurations/settings.config",
                "treatFailureAsDeploymentFailure": false,
                "enableAutomaticUpgrade": false
              },
              {
                "packageReferenceId": "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdg/resourceGroups/myresourceGroupName3/providers/Microsoft.Compute/galleries/myGallery2/applications/MyApplication2/versions/1.1"
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.ApplicationProfile;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VMGalleryApplication;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithApplicationProfile.json
           */
          /**
           * Sample code: Create a vm with Application Profile.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVmWithApplicationProfile(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("{image_publisher}")
                                          .withOffer("{image_offer}")
                                          .withSku("{image_sku}")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withApplicationProfile(
                              new ApplicationProfile()
                                  .withGalleryApplications(
                                      Arrays
                                          .asList(
                                              new VMGalleryApplication()
                                                  .withTags("myTag1")
                                                  .withOrder(1)
                                                  .withPackageReferenceId(
                                                      "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdb/resourceGroups/myresourceGroupName2/providers/Microsoft.Compute/galleries/myGallery1/applications/MyApplication1/versions/1.0")
                                                  .withConfigurationReference(
                                                      "https://mystorageaccount.blob.core.windows.net/configurations/settings.config")
                                                  .withTreatFailureAsDeploymentFailure(false)
                                                  .withEnableAutomaticUpgrade(false),
                                              new VMGalleryApplication()
                                                  .withPackageReferenceId(
                                                      "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdg/resourceGroups/myresourceGroupName3/providers/Microsoft.Compute/galleries/myGallery2/applications/MyApplication2/versions/1.1")))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithApplicationProfile.json
       */
      async function createAVMWithApplicationProfile() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          applicationProfile: {
            galleryApplications: [
              {
                configurationReference:
                  "https://mystorageaccount.blob.core.windows.net/configurations/settings.config",
                enableAutomaticUpgrade: false,
                order: 1,
                packageReferenceId:
                  "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdb/resourceGroups/myresourceGroupName2/providers/Microsoft.Compute/galleries/myGallery1/applications/MyApplication1/versions/1.0",
                tags: "myTag1",
                treatFailureAsDeploymentFailure: false,
              },
              {
                packageReferenceId:
                  "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdg/resourceGroups/myresourceGroupName3/providers/Microsoft.Compute/galleries/myGallery2/applications/MyApplication2/versions/1.1",
              },
            ],
          },
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            imageReference: {
              offer: "{image_offer}",
              publisher: "{image_publisher}",
              sku: "{image_sku}",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithApplicationProfile().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "ssh": {
                "publicKeys": [
                  {
                    "path": "/home/{your-username}/.ssh/authorized_keys",
                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCeClRAk2ipUs/l5voIsDC5q9RI+YSRd1Bvd/O+axgY4WiBzG+4FwJWZm/mLLe5DoOdHQwmU2FrKXZSW4w2sYE70KeWnrFViCOX5MTVvJgPE8ClugNl8RWth/tU849DvM9sT7vFgfVSHcAS2yDRyDlueii+8nF2ym8XWAPltFVCyLHRsyBp5YPqK8JFYIa1eybKsY3hEAxRCA+/7bq8et+Gj3coOsuRmrehav7rE6N12Pb80I6ofa6SM5XNYq4Xk0iYNx7R3kdz0Jj9XgZYWjAHjJmT0gTRoOnt6upOuxK7xI/ykWrllgpXrCPu3Ymz+c+ujaqcxDopnAl2lmf69/J1"
                  }
                ]
              },
              "disablePasswordAuthentication": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "osType": "Linux",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "applicationProfile": {
            "galleryApplications": [
              {
                "tags": "myTag1",
                "order": 1,
                "packageReferenceId": "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdb/resourceGroups/myresourceGroupName2/providers/Microsoft.Compute/galleries/myGallery1/applications/MyApplication1/versions/1.0",
                "configurationReference": "https://mystorageaccount.blob.core.windows.net/configurations/settings.config"
              },
              {
                "packageReferenceId": "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdg/resourceGroups/myresourceGroupName3/providers/Microsoft.Compute/galleries/myGallery2/applications/MyApplication2/versions/1.1"
              }
            ]
          },
          "vmId": "e0de9b84-a506-4b95-9623-00a425d05c90",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "ssh": {
                "publicKeys": [
                  {
                    "path": "/home/{your-username}/.ssh/authorized_keys",
                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCeClRAk2ipUs/l5voIsDC5q9RI+YSRd1Bvd/O+axgY4WiBzG+4FwJWZm/mLLe5DoOdHQwmU2FrKXZSW4w2sYE70KeWnrFViCOX5MTVvJgPE8ClugNl8RWth/tU849DvM9sT7vFgfVSHcAS2yDRyDlueii+8nF2ym8XWAPltFVCyLHRsyBp5YPqK8JFYIa1eybKsY3hEAxRCA+/7bq8et+Gj3coOsuRmrehav7rE6N12Pb80I6ofa6SM5XNYq4Xk0iYNx7R3kdz0Jj9XgZYWjAHjJmT0gTRoOnt6upOuxK7xI/ykWrllgpXrCPu3Ymz+c+ujaqcxDopnAl2lmf69/J1"
                  }
                ]
              },
              "disablePasswordAuthentication": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "16.04-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "osType": "Linux",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "applicationProfile": {
            "galleryApplications": [
              {
                "tags": "myTag1",
                "order": 1,
                "packageReferenceId": "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdb/resourceGroups/myresourceGroupName2/providers/Microsoft.Compute/galleries/myGallery1/applications/MyApplication1/versions/1.0",
                "configurationReference": "https://mystorageaccount.blob.core.windows.net/configurations/settings.config"
              },
              {
                "packageReferenceId": "/subscriptions/32c17a9e-aa7b-4ba5-a45b-e324116b6fdg/resourceGroups/myresourceGroupName3/providers/Microsoft.Compute/galleries/myGallery2/applications/MyApplication2/versions/1.1"
              }
            ]
          },
          "vmId": "e0de9b84-a506-4b95-9623-00a425d05c90",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a VM with HibernationEnabled
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/{vm-name}?api-version=2022-03-01
    body: >-
      {
        "location": "eastus2euap",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "additionalCapabilities": {
            "hibernationEnabled": true
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2019-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "vmOSdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "{vm-name}",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://{existing-storage-account-name}.blob.core.windows.net",
              "enabled": true
            }
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/{vm-name}?api-version=2022-03-01

      {
        "location": "eastus2euap",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "additionalCapabilities": {
            "hibernationEnabled": true
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2019-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "vmOSdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "{vm-name}",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://{existing-storage-account-name}.blob.core.windows.net",
              "enabled": true
            }
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.AdditionalCapabilities;
      import com.azure.resourcemanager.compute.models.BootDiagnostics;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiagnosticsProfile;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithHibernationEnabled.json
           */
          /**
           * Sample code: Create a VM with HibernationEnabled.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVMWithHibernationEnabled(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "{vm-name}",
                      new VirtualMachineInner()
                          .withLocation("eastus2euap")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D2S_V3))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2019-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("vmOSdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withAdditionalCapabilities(new AdditionalCapabilities().withHibernationEnabled(true))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("{vm-name}")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withDiagnosticsProfile(
                              new DiagnosticsProfile()
                                  .withBootDiagnostics(
                                      new BootDiagnostics()
                                          .withEnabled(true)
                                          .withStorageUri("http://{existing-storage-account-name}.blob.core.windows.net"))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithHibernationEnabled.json
       */
      async function createAVMWithHibernationEnabled() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "{vm-name}";
        const parameters = {
          additionalCapabilities: { hibernationEnabled: true },
          diagnosticsProfile: {
            bootDiagnostics: {
              enabled: true,
              storageUri: "http://{existing-storage-account-name}.blob.core.windows.net",
            },
          },
          hardwareProfile: { vmSize: "Standard_D2s_v3" },
          location: "eastus2euap",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "{vm-name}",
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2019-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "vmOSdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithHibernationEnabled().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/{vm-name}",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "{vm-name}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2019-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "vmOSdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://nsgdiagnostic.blob.core.windows.net",
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "additionalCapabilities": {
            "hibernationEnabled": true
          },
          "provisioningState": "Updating"
        },
        "name": "{vm-name}",
        "location": "eastus2euap"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/{vm-name}",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "{vm-name}",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2019-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "vmOSdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://nsgdiagnostic.blob.core.windows.net",
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "additionalCapabilities": {
            "hibernationEnabled": true
          },
          "provisioningState": "Creating"
        },
        "name": "{vm-name}",
        "location": "eastus2euap"
      }
- name: Create a VM with VM Size Properties
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D4_v3",
            "vmSizeProperties": {
              "vCPUsAvailable": 1,
              "vCPUsPerCore": 1
            }
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://{existing-storage-account-name}.blob.core.windows.net",
              "enabled": true
            }
          },
          "userData": "U29tZSBDdXN0b20gRGF0YQ=="
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D4_v3",
            "vmSizeProperties": {
              "vCPUsAvailable": 1,
              "vCPUsPerCore": 1
            }
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://{existing-storage-account-name}.blob.core.windows.net",
              "enabled": true
            }
          },
          "userData": "U29tZSBDdXN0b20gRGF0YQ=="
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.BootDiagnostics;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiagnosticsProfile;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VMSizeProperties;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_CreateWithVMSizeProperties.json
           */
          /**
           * Sample code: Create a VM with VM Size Properties.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVMWithVMSizeProperties(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(
                              new HardwareProfile()
                                  .withVmSize(VirtualMachineSizeTypes.STANDARD_D4_V3)
                                  .withVmSizeProperties(new VMSizeProperties().withVCpusAvailable(1).withVCpusPerCore(1)))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("WindowsServer")
                                          .withSku("2016-Datacenter")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withDiagnosticsProfile(
                              new DiagnosticsProfile()
                                  .withBootDiagnostics(
                                      new BootDiagnostics()
                                          .withEnabled(true)
                                          .withStorageUri("http://{existing-storage-account-name}.blob.core.windows.net")))
                          .withUserData("U29tZSBDdXN0b20gRGF0YQ=="),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_CreateWithVMSizeProperties.json
       */
      async function createAVMWithVMSizeProperties() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          diagnosticsProfile: {
            bootDiagnostics: {
              enabled: true,
              storageUri: "http://{existing-storage-account-name}.blob.core.windows.net",
            },
          },
          hardwareProfile: {
            vmSize: "Standard_D4_v3",
            vmSizeProperties: { vCPUsAvailable: 1, vCPUsPerCore: 1 },
          },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            imageReference: {
              offer: "WindowsServer",
              publisher: "MicrosoftWindowsServer",
              sku: "2016-Datacenter",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
          userData: "U29tZSBDdXN0b20gRGF0YQ==",
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithVMSizeProperties().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://nsgdiagnostic.blob.core.windows.net",
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D4_v3",
            "vmSizeProperties": {
              "vCPUsAvailable": 1,
              "vCPUsPerCore": 1
            }
          },
          "provisioningState": "Updating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "2016-Datacenter",
              "publisher": "MicrosoftWindowsServer",
              "version": "latest",
              "offer": "WindowsServer"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "name": "myVMosdisk",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "http://nsgdiagnostic.blob.core.windows.net",
              "enabled": true
            }
          },
          "vmId": "676420ba-7a24-4bfe-80bd-9c841ee184fa",
          "hardwareProfile": {
            "vmSize": "Standard_D4_v3",
            "vmSizeProperties": {
              "vCPUsAvailable": 1,
              "vCPUsPerCore": 1
            }
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create or update a VM with capacity reservation
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "plan": {
          "publisher": "microsoft-ads",
          "product": "windows-data-science-vm",
          "name": "windows2016"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows2016",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "windows-data-science-vm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "capacityReservation": {
            "capacityReservationGroup": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/CapacityReservationGroups/{crgName}"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "plan": {
          "publisher": "microsoft-ads",
          "product": "windows-data-science-vm",
          "name": "windows2016"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows2016",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "windows-data-science-vm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "capacityReservation": {
            "capacityReservationGroup": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/CapacityReservationGroups/{crgName}"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.CapacityReservationProfile;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.Plan;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithCapacityReservation.json
           */
          /**
           * Sample code: Create or update a VM with capacity reservation.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createOrUpdateAVMWithCapacityReservation(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withPlan(
                              new Plan()
                                  .withName("windows2016")
                                  .withPublisher("microsoft-ads")
                                  .withProduct("windows-data-science-vm"))
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_DS1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("microsoft-ads")
                                          .withOffer("windows-data-science-vm")
                                          .withSku("windows2016")
                                          .withVersion("latest"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_ONLY)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withCapacityReservation(
                              new CapacityReservationProfile()
                                  .withCapacityReservationGroup(
                                      new SubResource()
                                          .withId(
                                              "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/CapacityReservationGroups/{crgName}"))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithCapacityReservation.json
       */
      async function createOrUpdateAVMWithCapacityReservation() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          capacityReservation: {
            capacityReservationGroup: {
              id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/CapacityReservationGroups/{crgName}",
            },
          },
          hardwareProfile: { vmSize: "Standard_DS1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          plan: {
            name: "windows2016",
            product: "windows-data-science-vm",
            publisher: "microsoft-ads",
          },
          storageProfile: {
            imageReference: {
              offer: "windows-data-science-vm",
              publisher: "microsoft-ads",
              sku: "windows2016",
              version: "latest",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadOnly",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createOrUpdateAVMWithCapacityReservation().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "capacityReservation": {
            "capacityReservationGroup": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/CapacityReservationGroups/{crgName}"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "standard-data-science-vm",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "standard-data-science-vm"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "plan": {
          "publisher": "microsoft-ads",
          "product": "standard-data-science-vm",
          "name": "standard-data-science-vm"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "capacityReservation": {
            "capacityReservationGroup": {
              "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/CapacityReservationGroups/{crgName}"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "standard-data-science-vm",
              "publisher": "microsoft-ads",
              "version": "latest",
              "offer": "standard-data-science-vm"
            },
            "osDisk": {
              "osType": "Windows",
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "provisioningState": "Creating"
        },
        "plan": {
          "publisher": "microsoft-ads",
          "product": "standard-data-science-vm",
          "name": "standard-data-science-vm"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
- name: Create a VM from a shared gallery image
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sharedGalleryImageId": "/SharedGalleries/sharedGalleryName/Images/sharedGalleryImageName/Versions/sharedGalleryImageVersionName"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "sharedGalleryImageId": "/SharedGalleries/sharedGalleryName/Images/sharedGalleryImageName/Versions/sharedGalleryImageVersionName"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_FromASharedGalleryImage.json
           */
          /**
           * Sample code: Create a VM from a shared gallery image.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVMFromASharedGalleryImage(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withSharedGalleryImageId(
                                              "/SharedGalleries/sharedGalleryName/Images/sharedGalleryImageName/Versions/sharedGalleryImageVersionName"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_FromASharedGalleryImage.json
       */
      async function createAVMFromASharedGalleryImage() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            imageReference: {
              sharedGalleryImageId:
                "/SharedGalleries/sharedGalleryName/Images/sharedGalleryImageName/Versions/sharedGalleryImageVersionName",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMFromASharedGalleryImage().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sharedGalleryImageId": "/SharedGalleries/sharedGalleryName/Images/sharedGalleryImageName/Versions/sharedGalleryImageVersionName"
            },
            "osDisk": {
              "name": "myVMosdisk",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Linux"
            },
            "dataDisks": []
          },
          "vmId": "71aa3d5a-d73d-4970-9182-8580433b2865",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sharedGalleryImageId": "/SharedGalleries/sharedGalleryName/Images/sharedGalleryImageName/Versions/sharedGalleryImageVersionName"
            },
            "osDisk": {
              "name": "myVMosdisk",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Linux"
            },
            "dataDisks": []
          },
          "vmId": "71aa3d5a-d73d-4970-9182-8580433b2865",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a VM from a community gallery image
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "communityGalleryImageId": "/CommunityGalleries/galleryPublicName/Images/communityGalleryImageName/Versions/communityGalleryImageVersionName"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "communityGalleryImageId": "/CommunityGalleries/galleryPublicName/Images/communityGalleryImageName/Versions/communityGalleryImageVersionName"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "name": "myVMosdisk",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_FromACommunityGalleryImage.json
           */
          /**
           * Sample code: Create a VM from a community gallery image.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVMFromACommunityGalleryImage(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D1_V2))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withCommunityGalleryImageId(
                                              "/CommunityGalleries/galleryPublicName/Images/communityGalleryImageName/Versions/communityGalleryImageVersionName"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_WRITE)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_LRS))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_FromACommunityGalleryImage.json
       */
      async function createAVMFromACommunityGalleryImage() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_D1_v2" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          storageProfile: {
            imageReference: {
              communityGalleryImageId:
                "/CommunityGalleries/galleryPublicName/Images/communityGalleryImageName/Versions/communityGalleryImageVersionName",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadWrite",
              createOption: "FromImage",
              managedDisk: { storageAccountType: "Standard_LRS" },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMFromACommunityGalleryImage().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "communityGalleryImageId": "/CommunityGalleries/galleryPublicName/Images/communityGalleryImageName/Versions/communityGalleryImageVersionName"
            },
            "osDisk": {
              "name": "myVMosdisk",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Linux"
            },
            "dataDisks": []
          },
          "vmId": "71aa3d5a-d73d-4970-9182-8580433b2865",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "communityGalleryImageId": "/CommunityGalleries/galleryPublicName/Images/communityGalleryImageName/Versions/communityGalleryImageVersionName"
            },
            "osDisk": {
              "name": "myVMosdisk",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "osType": "Linux"
            },
            "dataDisks": []
          },
          "vmId": "71aa3d5a-d73d-4970-9182-8580433b2865",
          "hardwareProfile": {
            "vmSize": "Standard_D1_v2"
          },
          "provisioningState": "Creating"
        },
        "name": "myVM",
        "location": "westus"
      }
- name: Create a VM with securityType ConfidentialVM with Platform Managed Keys
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DC2as_v5"
          },
          "securityProfile": {
            "uefiSettings": {
              "secureBootEnabled": true,
              "vTpmEnabled": true
            },
            "securityType": "ConfidentialVM"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows-cvm",
              "publisher": "MicrosoftWindowsServer",
              "version": "17763.2183.2109130127",
              "offer": "2019-datacenter-cvm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS",
                "securityProfile": {
                  "securityEncryptionType": "DiskWithVMGuestState"
                }
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DC2as_v5"
          },
          "securityProfile": {
            "uefiSettings": {
              "secureBootEnabled": true,
              "vTpmEnabled": true
            },
            "securityType": "ConfidentialVM"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows-cvm",
              "publisher": "MicrosoftWindowsServer",
              "version": "17763.2183.2109130127",
              "offer": "2019-datacenter-cvm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS",
                "securityProfile": {
                  "securityEncryptionType": "DiskWithVMGuestState"
                }
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.SecurityEncryptionTypes;
      import com.azure.resourcemanager.compute.models.SecurityProfile;
      import com.azure.resourcemanager.compute.models.SecurityTypes;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.UefiSettings;
      import com.azure.resourcemanager.compute.models.VMDiskSecurityProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithSecurityTypeConfidentialVM.json
           */
          /**
           * Sample code: Create a VM with securityType ConfidentialVM with Platform Managed Keys.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVMWithSecurityTypeConfidentialVMWithPlatformManagedKeys(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(
                              new HardwareProfile().withVmSize(VirtualMachineSizeTypes.fromString("Standard_DC2as_v5")))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("2019-datacenter-cvm")
                                          .withSku("windows-cvm")
                                          .withVersion("17763.2183.2109130127"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_ONLY)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_SSD_LRS)
                                                  .withSecurityProfile(
                                                      new VMDiskSecurityProfile()
                                                          .withSecurityEncryptionType(
                                                              SecurityEncryptionTypes.DISK_WITH_VMGUEST_STATE)))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withSecurityProfile(
                              new SecurityProfile()
                                  .withUefiSettings(new UefiSettings().withSecureBootEnabled(true).withVTpmEnabled(true))
                                  .withSecurityType(SecurityTypes.CONFIDENTIAL_VM)),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithSecurityTypeConfidentialVM.json
       */
      async function createAVMWithSecurityTypeConfidentialVMWithPlatformManagedKeys() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_DC2as_v5" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          securityProfile: {
            securityType: "ConfidentialVM",
            uefiSettings: { secureBootEnabled: true, vTpmEnabled: true },
          },
          storageProfile: {
            imageReference: {
              offer: "2019-datacenter-cvm",
              publisher: "MicrosoftWindowsServer",
              sku: "windows-cvm",
              version: "17763.2183.2109130127",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadOnly",
              createOption: "FromImage",
              managedDisk: {
                securityProfile: { securityEncryptionType: "DiskWithVMGuestState" },
                storageAccountType: "StandardSSD_LRS",
              },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithSecurityTypeConfidentialVMWithPlatformManagedKeys().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows-cvm",
              "publisher": "MicrosoftWindowsServer",
              "version": "17763.2183.2109130127",
              "offer": "2019-datacenter-cvm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS",
                "securityProfile": {
                  "securityEncryptionType": "DiskWithVMGuestState"
                }
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "securityProfile": {
            "uefiSettings": {
              "secureBootEnabled": true,
              "vTpmEnabled": true
            },
            "securityType": "ConfidentialVM"
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DC2as_v5"
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows-cvm",
              "publisher": "MicrosoftWindowsServer",
              "version": "17763.2183.2109130127",
              "offer": "2019-datacenter-cvm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS",
                "securityProfile": {
                  "securityEncryptionType": "DiskWithVMGuestState"
                }
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "securityProfile": {
            "uefiSettings": {
              "secureBootEnabled": true,
              "vTpmEnabled": true
            },
            "securityType": "ConfidentialVM"
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DC2as_v5"
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
- name: Create a VM with securityType ConfidentialVM with Customer Managed Keys
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01
    body: >-
      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DC2as_v5"
          },
          "securityProfile": {
            "uefiSettings": {
              "secureBootEnabled": true,
              "vTpmEnabled": true
            },
            "securityType": "ConfidentialVM"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows-cvm",
              "publisher": "MicrosoftWindowsServer",
              "version": "17763.2183.2109130127",
              "offer": "2019-datacenter-cvm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS",
                "securityProfile": {
                  "securityEncryptionType": "DiskWithVMGuestState",
                  "diskEncryptionSet": {
                    "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                  }
                }
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM?api-version=2022-03-01

      {
        "location": "westus",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DC2as_v5"
          },
          "securityProfile": {
            "uefiSettings": {
              "secureBootEnabled": true,
              "vTpmEnabled": true
            },
            "securityType": "ConfidentialVM"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows-cvm",
              "publisher": "MicrosoftWindowsServer",
              "version": "17763.2183.2109130127",
              "offer": "2019-datacenter-cvm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS",
                "securityProfile": {
                  "securityEncryptionType": "DiskWithVMGuestState",
                  "diskEncryptionSet": {
                    "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                  }
                }
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            }
          },
          "osProfile": {
            "adminUsername": "{your-username}",
            "computerName": "myVM",
            "adminPassword": "{your-password}"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.VirtualMachineInner;
      import com.azure.resourcemanager.compute.models.CachingTypes;
      import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
      import com.azure.resourcemanager.compute.models.DiskEncryptionSetParameters;
      import com.azure.resourcemanager.compute.models.HardwareProfile;
      import com.azure.resourcemanager.compute.models.ImageReference;
      import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
      import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
      import com.azure.resourcemanager.compute.models.NetworkProfile;
      import com.azure.resourcemanager.compute.models.OSDisk;
      import com.azure.resourcemanager.compute.models.OSProfile;
      import com.azure.resourcemanager.compute.models.SecurityEncryptionTypes;
      import com.azure.resourcemanager.compute.models.SecurityProfile;
      import com.azure.resourcemanager.compute.models.SecurityTypes;
      import com.azure.resourcemanager.compute.models.StorageAccountTypes;
      import com.azure.resourcemanager.compute.models.StorageProfile;
      import com.azure.resourcemanager.compute.models.UefiSettings;
      import com.azure.resourcemanager.compute.models.VMDiskSecurityProfile;
      import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
      import java.util.Arrays;

      /** Samples for VirtualMachines CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithSecurityTypeConfidentialVMWithCustomerManagedKeys.json
           */
          /**
           * Sample code: Create a VM with securityType ConfidentialVM with Customer Managed Keys.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createAVMWithSecurityTypeConfidentialVMWithCustomerManagedKeys(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachines()
                  .createOrUpdate(
                      "myResourceGroup",
                      "myVM",
                      new VirtualMachineInner()
                          .withLocation("westus")
                          .withHardwareProfile(
                              new HardwareProfile().withVmSize(VirtualMachineSizeTypes.fromString("Standard_DC2as_v5")))
                          .withStorageProfile(
                              new StorageProfile()
                                  .withImageReference(
                                      new ImageReference()
                                          .withPublisher("MicrosoftWindowsServer")
                                          .withOffer("2019-datacenter-cvm")
                                          .withSku("windows-cvm")
                                          .withVersion("17763.2183.2109130127"))
                                  .withOsDisk(
                                      new OSDisk()
                                          .withName("myVMosdisk")
                                          .withCaching(CachingTypes.READ_ONLY)
                                          .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                                          .withManagedDisk(
                                              new ManagedDiskParameters()
                                                  .withStorageAccountType(StorageAccountTypes.STANDARD_SSD_LRS)
                                                  .withSecurityProfile(
                                                      new VMDiskSecurityProfile()
                                                          .withSecurityEncryptionType(
                                                              SecurityEncryptionTypes.DISK_WITH_VMGUEST_STATE)
                                                          .withDiskEncryptionSet(
                                                              new DiskEncryptionSetParameters()
                                                                  .withId(
                                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"))))))
                          .withOsProfile(
                              new OSProfile()
                                  .withComputerName("myVM")
                                  .withAdminUsername("{your-username}")
                                  .withAdminPassword("{your-password}"))
                          .withNetworkProfile(
                              new NetworkProfile()
                                  .withNetworkInterfaces(
                                      Arrays
                                          .asList(
                                              new NetworkInterfaceReference()
                                                  .withId(
                                                      "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                                  .withPrimary(true))))
                          .withSecurityProfile(
                              new SecurityProfile()
                                  .withUefiSettings(new UefiSettings().withSecureBootEnabled(true).withVTpmEnabled(true))
                                  .withSecurityType(SecurityTypes.CONFIDENTIAL_VM)),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       *
       * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineExamples/VirtualMachine_Create_WithSecurityTypeConfidentialVMWithCustomerManagedKeys.json
       */
      async function createAVMWithSecurityTypeConfidentialVMWithCustomerManagedKeys() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "myVM";
        const parameters = {
          hardwareProfile: { vmSize: "Standard_DC2as_v5" },
          location: "westus",
          networkProfile: {
            networkInterfaces: [
              {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                primary: true,
              },
            ],
          },
          osProfile: {
            adminPassword: "{your-password}",
            adminUsername: "{your-username}",
            computerName: "myVM",
          },
          securityProfile: {
            securityType: "ConfidentialVM",
            uefiSettings: { secureBootEnabled: true, vTpmEnabled: true },
          },
          storageProfile: {
            imageReference: {
              offer: "2019-datacenter-cvm",
              publisher: "MicrosoftWindowsServer",
              sku: "windows-cvm",
              version: "17763.2183.2109130127",
            },
            osDisk: {
              name: "myVMosdisk",
              caching: "ReadOnly",
              createOption: "FromImage",
              managedDisk: {
                securityProfile: {
                  diskEncryptionSet: {
                    id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}",
                  },
                  securityEncryptionType: "DiskWithVMGuestState",
                },
                storageAccountType: "StandardSSD_LRS",
              },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachines.beginCreateOrUpdateAndWait(
          resourceGroupName,
          vmName,
          parameters
        );
        console.log(result);
      }

      createAVMWithSecurityTypeConfidentialVMWithCustomerManagedKeys().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows-cvm",
              "publisher": "MicrosoftWindowsServer",
              "version": "17763.2183.2109130127",
              "offer": "2019-datacenter-cvm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS",
                "securityProfile": {
                  "securityEncryptionType": "DiskWithVMGuestState",
                  "diskEncryptionSet": {
                    "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                  }
                }
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "securityProfile": {
            "uefiSettings": {
              "secureBootEnabled": true,
              "vTpmEnabled": true
            },
            "securityType": "ConfidentialVM"
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DC2as_v5"
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "name": "myVM",
        "properties": {
          "osProfile": {
            "adminUsername": "{your-username}",
            "secrets": [],
            "computerName": "myVM",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/nsgExistingNic",
                "properties": {
                  "primary": true
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "sku": "windows-cvm",
              "publisher": "MicrosoftWindowsServer",
              "version": "17763.2183.2109130127",
              "offer": "2019-datacenter-cvm"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS",
                "securityProfile": {
                  "securityEncryptionType": "DiskWithVMGuestState",
                  "diskEncryptionSet": {
                    "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
                  }
                }
              },
              "createOption": "FromImage",
              "name": "myVMosdisk"
            },
            "dataDisks": []
          },
          "securityProfile": {
            "uefiSettings": {
              "secureBootEnabled": true,
              "vTpmEnabled": true
            },
            "securityType": "ConfidentialVM"
          },
          "vmId": "5c0d55a7-c407-4ed6-bf7d-ddb810267c85",
          "hardwareProfile": {
            "vmSize": "Standard_DC2as_v5"
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
        "location": "westus"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
errorCodes: []
