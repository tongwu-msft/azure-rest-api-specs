### YamlMime:RESTOperation
uid: management.azure.com.compute.galleryapplicationversions.get
name: Get
service: Compute
groupName: Gallery Application Versions
apiVersion: 2022-01-03
summary: Retrieves information about a gallery Application Version.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}?api-version=2022-01-03
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}?$expand=ReplicationStatus&api-version=2022-01-03
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: galleryName
  in: path
  isRequired: true
  description: The name of the Shared Application Gallery in which the Application Definition resides.
  types:
  - uid: string
- name: galleryApplicationName
  in: path
  isRequired: true
  description: The name of the gallery Application Definition in which the Application Version resides.
  types:
  - uid: string
- name: galleryApplicationVersionName
  in: path
  isRequired: true
  description: The name of the gallery Application Version to be retrieved.
  types:
  - uid: string
- name: $expand
  in: query
  description: The expand expression to apply on the operation.
  types:
  - uid: ReplicationStatusTypes
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: GalleryApplicationVersion
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: ReplicationStatusTypes
  description: The expand expression to apply on the operation.
  kind: enum
  properties:
  - name: ReplicationStatus
    types:
    - uid: string
- name: GalleryApplicationVersion
  description: Specifies information about the gallery Application Version that you want to create or update.
  kind: object
  properties:
  - name: properties.publishingProfile
    description: The publishing profile of a gallery image version.
    types:
    - uid: GalleryApplicationVersionPublishingProfile
  - name: properties.provisioningState
    isReadyOnly: true
    description: "The current state of the gallery or gallery artifact.  \nThe provisioning state, which only appears in the response."
    types:
    - uid: GalleryProvisioningState
  - name: properties.replicationStatus
    isReadyOnly: true
    description: This is the replication status of the gallery image version.
    types:
    - uid: ReplicationStatus
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: An error response from the Compute service.
  kind: object
  properties:
  - name: error
    description: Api error.
    types:
    - uid: ApiError
- name: GalleryApplicationVersionPublishingProfile
  description: The publishing profile of a gallery image version.
  kind: object
  properties:
  - name: source
    description: The source image from which the Image Version is going to be created.
    types:
    - uid: UserArtifactSource
  - name: manageActions
    description: ''
    types:
    - uid: UserArtifactManage
  - name: settings
    description: Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
    types:
    - uid: UserArtifactSettings
  - name: advancedSettings
    description: Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: enableHealthCheck
    description: Optional. Whether or not this application reports health.
    types:
    - uid: boolean
  - name: targetRegions
    description: The target regions where the Image Version is going to be replicated to. This property is updatable.
    types:
    - uid: TargetRegion
      isArray: true
  - name: replicaCount
    description: The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
    types:
    - uid: integer
  - name: excludeFromLatest
    description: If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
    types:
    - uid: boolean
  - name: publishedDate
    isReadyOnly: true
    description: The timestamp for when the gallery image version is published.
    types:
    - uid: string
  - name: endOfLifeDate
    description: The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
    types:
    - uid: string
  - name: storageAccountType
    description: Specifies the storage account type to be used to store the image. This property is not updatable.
    types:
    - uid: StorageAccountType
  - name: replicationMode
    description: Optional parameter which specifies the mode to be used for replication. This property is not updatable.
    types:
    - uid: ReplicationMode
  - name: targetExtendedLocations
    description: The target extended locations where the Image Version is going to be replicated to. This property is updatable.
    types:
    - uid: GalleryTargetExtendedLocation
      isArray: true
- name: GalleryProvisioningState
  description: The current state of the gallery or gallery artifact.
  kind: enum
  properties:
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Migrating
    types:
    - uid: string
- name: ReplicationStatus
  description: This is the replication status of the gallery image version.
  kind: object
  properties:
  - name: aggregatedState
    isReadyOnly: true
    description: This is the aggregated replication status based on all the regional replication status flags.
    types:
    - uid: AggregatedReplicationState
  - name: summary
    isReadyOnly: true
    description: This is a summary of replication status for each region.
    types:
    - uid: RegionalReplicationStatus
      isArray: true
- name: ApiError
  description: Api error.
  kind: object
  properties:
  - name: details
    description: The Api error details
    types:
    - uid: ApiErrorBase
      isArray: true
  - name: innererror
    description: The Api inner error
    types:
    - uid: InnerError
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: UserArtifactSource
  description: The source image from which the Image Version is going to be created.
  kind: object
  properties:
  - name: mediaLink
    description: Required. The mediaLink of the artifact, must be a readable storage page blob.
    types:
    - uid: string
  - name: defaultConfigurationLink
    description: Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
    types:
    - uid: string
- name: UserArtifactManage
  kind: object
  properties:
  - name: install
    description: Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
    types:
    - uid: string
  - name: remove
    description: Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
    types:
    - uid: string
  - name: update
    description: Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
    types:
    - uid: string
- name: UserArtifactSettings
  description: Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
  kind: object
  properties:
  - name: packageFileName
    description: Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified, the package file will be named the same as the Gallery Application name.
    types:
    - uid: string
  - name: configFileName
    description: Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified, the config file will be named the Gallery Application name appended with "_config".
    types:
    - uid: string
- name: TargetRegion
  description: Describes the target region information.
  kind: object
  properties:
  - name: name
    description: The name of the region.
    types:
    - uid: string
  - name: regionalReplicaCount
    description: The number of replicas of the Image Version to be created per region. This property is updatable.
    types:
    - uid: integer
  - name: storageAccountType
    description: Specifies the storage account type to be used to store the image. This property is not updatable.
    types:
    - uid: StorageAccountType
  - name: encryption
    description: Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
    types:
    - uid: EncryptionImages
- name: StorageAccountType
  description: Specifies the storage account type to be used to store the image. This property is not updatable.
  kind: enum
  properties:
  - name: Standard_LRS
    types:
    - uid: string
  - name: Standard_ZRS
    types:
    - uid: string
  - name: Premium_LRS
    types:
    - uid: string
- name: ReplicationMode
  description: Optional parameter which specifies the mode to be used for replication. This property is not updatable.
  kind: enum
  properties:
  - name: Full
    types:
    - uid: string
  - name: Shallow
    types:
    - uid: string
- name: GalleryTargetExtendedLocation
  kind: object
  properties:
  - name: name
    description: The name of the region.
    types:
    - uid: string
  - name: extendedLocation
    description: The name of the extended location.
    types:
    - uid: GalleryExtendedLocation
  - name: extendedLocationReplicaCount
    description: The number of replicas of the Image Version to be created per extended location. This property is updatable.
    types:
    - uid: integer
  - name: storageAccountType
    description: Specifies the storage account type to be used to store the image. This property is not updatable.
    types:
    - uid: StorageAccountType
  - name: encryption
    description: Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
    types:
    - uid: EncryptionImages
- name: AggregatedReplicationState
  description: This is the aggregated replication status based on all the regional replication status flags.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: InProgress
    types:
    - uid: string
  - name: Completed
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: RegionalReplicationStatus
  description: This is the regional replication status.
  kind: object
  properties:
  - name: region
    isReadyOnly: true
    description: The region to which the gallery image version is being replicated to.
    types:
    - uid: string
  - name: state
    isReadyOnly: true
    description: This is the regional replication state.
    types:
    - uid: ReplicationState
  - name: details
    isReadyOnly: true
    description: The details of the replication status.
    types:
    - uid: string
  - name: progress
    isReadyOnly: true
    description: It indicates progress of the replication job.
    types:
    - uid: integer
- name: ApiErrorBase
  description: Api error base.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: InnerError
  description: Inner error details.
  kind: object
  properties:
  - name: exceptiontype
    description: The exception type.
    types:
    - uid: string
  - name: errordetail
    description: The internal error message or exception dump.
    types:
    - uid: string
- name: EncryptionImages
  description: Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
  kind: object
  properties:
  - name: osDiskImage
    description: Contains encryption settings for an OS disk image.
    types:
    - uid: OSDiskImageEncryption
  - name: dataDiskImages
    description: A list of encryption specifications for data disk images.
    types:
    - uid: DataDiskImageEncryption
      isArray: true
- name: GalleryExtendedLocation
  description: The name of the extended location.
  kind: object
  properties:
  - name: name
    description: ''
    types:
    - uid: string
  - name: type
    description: It is type of the extended location.
    types:
    - uid: GalleryExtendedLocationType
- name: ReplicationState
  description: This is the regional replication state.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: Replicating
    types:
    - uid: string
  - name: Completed
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: OSDiskImageEncryption
  description: Contains encryption settings for an OS disk image.
  kind: object
  properties:
  - name: securityProfile
    description: This property specifies the security profile of an OS disk image.
    types:
    - uid: OSDiskImageSecurityProfile
  - name: diskEncryptionSetId
    description: A relative URI containing the resource ID of the disk encryption set.
    types:
    - uid: string
- name: DataDiskImageEncryption
  description: Contains encryption settings for a data disk image.
  kind: object
  properties:
  - name: lun
    description: This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
    types:
    - uid: integer
  - name: diskEncryptionSetId
    description: A relative URI containing the resource ID of the disk encryption set.
    types:
    - uid: string
- name: GalleryExtendedLocationType
  description: It is type of the extended location.
  kind: enum
  properties:
  - name: EdgeZone
    types:
    - uid: string
  - name: Unknown
    types:
    - uid: string
- name: OSDiskImageSecurityProfile
  description: Contains security profile for an OS disk image.
  kind: object
  properties:
  - name: confidentialVMEncryptionType
    description: confidential VM encryption types
    types:
    - uid: ConfidentialVMEncryptionType
  - name: secureVMDiskEncryptionSetId
    description: secure VM disk encryption set id
    types:
    - uid: string
- name: ConfidentialVMEncryptionType
  description: confidential VM encryption types
  kind: enum
  properties:
  - name: EncryptedVMGuestStateOnlyWithPmk
    types:
    - uid: string
  - name: EncryptedWithPmk
    types:
    - uid: string
  - name: EncryptedWithCmk
    types:
    - uid: string
examples:
- name: Get a gallery Application Version.
  request:
    uri: GET https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myGalleryName/applications/myGalleryApplicationName/versions/1.0.0?$expand=ReplicationStatus&api-version=2022-01-03
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myGalleryName/applications/myGalleryApplicationName/versions/1.0.0?$expand=ReplicationStatus&api-version=2022-01-03
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for GalleryApplicationVersions Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-01-03/GalleryRP/examples/galleryExamples/GalleryApplicationVersion_Get.json
           */
          /**
           * Sample code: Get a gallery Application Version.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void getAGalleryApplicationVersion(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getGalleryApplicationVersions()
                  .getWithResponse(
                      "myResourceGroup", "myGalleryName", "myGalleryApplicationName", "1.0.0", null, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Retrieves information about a gallery Application Version.
       *
       * @summary Retrieves information about a gallery Application Version.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-01-03/GalleryRP/examples/galleryExamples/GalleryApplicationVersion_Get.json
       */
      async function getAGalleryApplicationVersion() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const galleryName = "myGalleryName";
        const galleryApplicationName = "myGalleryApplicationName";
        const galleryApplicationVersionName = "1.0.0";
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.galleryApplicationVersions.get(
          resourceGroupName,
          galleryName,
          galleryApplicationName,
          galleryApplicationVersionName
        );
        console.log(result);
      }

      getAGalleryApplicationVersion().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "location": "West US",
        "name": "1.0.0",
        "type": "Microsoft.Compute/galleries/applications/versions",
        "id": "/subscriptions/01523d7c-60da-455e-adef-521b547922c4/resourceGroups/galleryPsTestRg98/providers/Microsoft.Compute/galleries/galleryPsTestGallery6165/applications/galleryPsTestGalleryApplication7825/versions/1.0.0",
        "properties": {
          "publishingProfile": {
            "source": {
              "mediaLink": "https://mystorageaccount.blob.core.windows.net/mycontainer/package.zip?{sasKey}"
            },
            "manageActions": {
              "install": "powershell -command \"Expand-Archive -Path package.zip -DestinationPath C:\\package\"",
              "remove": "del C:\\package "
            },
            "enableHealthCheck": false,
            "targetRegions": [
              {
                "name": "West US",
                "regionalReplicaCount": 1,
                "storageAccountType": "Standard_LRS"
              }
            ],
            "replicaCount": 1,
            "excludeFromLatest": false,
            "publishedDate": "2019-06-21T17:13:57.5972568+00:00",
            "endOfLifeDate": "2019-07-01T07:00:00+00:00",
            "storageAccountType": "Standard_LRS"
          },
          "provisioningState": "Succeeded"
        }
      }
- name: Get a gallery Application Version with replication status.
  request:
    uri: GET https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myGalleryName/applications/myGalleryApplicationName/versions/1.0.0?$expand=ReplicationStatus&api-version=2022-01-03
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myGalleryName/applications/myGalleryApplicationName/versions/1.0.0?$expand=ReplicationStatus&api-version=2022-01-03
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.models.ReplicationStatusTypes;

      /** Samples for GalleryApplicationVersions Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-01-03/GalleryRP/examples/galleryExamples/GalleryApplicationVersion_Get_WithReplicationStatus.json
           */
          /**
           * Sample code: Get a gallery Application Version with replication status.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void getAGalleryApplicationVersionWithReplicationStatus(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getGalleryApplicationVersions()
                  .getWithResponse(
                      "myResourceGroup",
                      "myGalleryName",
                      "myGalleryApplicationName",
                      "1.0.0",
                      ReplicationStatusTypes.REPLICATION_STATUS,
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcompute_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v3"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2022-01-03/GalleryRP/examples/galleryExamples/GalleryApplicationVersion_Get_WithReplicationStatus.json
      func ExampleGalleryApplicationVersionsClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcompute.NewGalleryApplicationVersionsClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"myResourceGroup",
      		"myGalleryName",
      		"myGalleryApplicationName",
      		"1.0.0",
      		&armcompute.GalleryApplicationVersionsClientGetOptions{Expand: to.Ptr(armcompute.ReplicationStatusTypesReplicationStatus)})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcompute%2Farmcompute%2Fv3.0.1/sdk/resourcemanager/compute/armcompute/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Retrieves information about a gallery Application Version.
       *
       * @summary Retrieves information about a gallery Application Version.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-01-03/GalleryRP/examples/galleryExamples/GalleryApplicationVersion_Get_WithReplicationStatus.json
       */
      async function getAGalleryApplicationVersionWithReplicationStatus() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const galleryName = "myGalleryName";
        const galleryApplicationName = "myGalleryApplicationName";
        const galleryApplicationVersionName = "1.0.0";
        const expand = "ReplicationStatus";
        const options = { expand };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.galleryApplicationVersions.get(
          resourceGroupName,
          galleryName,
          galleryApplicationName,
          galleryApplicationVersionName,
          options
        );
        console.log(result);
      }

      getAGalleryApplicationVersionWithReplicationStatus().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "publishingProfile": {
            "source": {
              "mediaLink": "https://mystorageaccount.blob.core.windows.net/mycontainer/package.zip?{sasKey}"
            },
            "manageActions": {
              "install": "powershell -command \"Expand-Archive -Path package.zip -DestinationPath C:\\package\"",
              "remove": "del C:\\package "
            },
            "enableHealthCheck": false,
            "settings": {
              "packageFileName": "package.zip",
              "configFileName": "configuration.cfg"
            },
            "advancedSettings": {
              "timeout": "300",
              "user": "root"
            },
            "targetRegions": [
              {
                "name": "West US",
                "regionalReplicaCount": 1,
                "storageAccountType": "Standard_LRS"
              }
            ],
            "replicaCount": 1,
            "excludeFromLatest": false,
            "publishedDate": "2019-06-21T17:13:57.5972568+00:00",
            "endOfLifeDate": "2019-07-01T07:00:00+00:00",
            "storageAccountType": "Standard_LRS"
          },
          "replicationStatus": {
            "aggregatedState": "Completed",
            "summary": [
              {
                "region": "West US",
                "state": "Completed",
                "details": "",
                "progress": 100
              }
            ]
          },
          "provisioningState": "Succeeded"
        },
        "location": "West US",
        "name": "1.0.0"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Compute service - Retrieves information about a gallery Application Version.
errorCodes: []
