### YamlMime:RESTOperation
uid: management.azure.com.compute.virtualmachinescalesetvmextensions.update
name: Update
service: Compute
groupName: Virtual Machine Scale Set VM Extensions
apiVersion: 2022-03-01
summary: The operation to update the VMSS VM extension.
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/extensions/{vmExtensionName}?api-version=2022-03-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: vmScaleSetName
  in: path
  isRequired: true
  description: The name of the VM scale set.
  types:
  - uid: string
- name: instanceId
  in: path
  isRequired: true
  description: The instance ID of the virtual machine.
  types:
  - uid: string
- name: vmExtensionName
  in: path
  isRequired: true
  description: The name of the virtual machine extension.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: VirtualMachineScaleSetVMExtension
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: properties.forceUpdateTag
    in: body
    description: How the extension handler should be forced to update even if the extension configuration has not changed.
    types:
    - uid: string
  - name: properties.publisher
    in: body
    description: The name of the extension handler publisher.
    types:
    - uid: string
  - name: properties.type
    in: body
    description: Specifies the type of the extension; an example is "CustomScriptExtension".
    types:
    - uid: string
  - name: properties.typeHandlerVersion
    in: body
    description: Specifies the version of the script handler.
    types:
    - uid: string
  - name: properties.autoUpgradeMinorVersion
    in: body
    description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
    types:
    - uid: boolean
  - name: properties.enableAutomaticUpgrade
    in: body
    description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
    types:
    - uid: boolean
  - name: properties.settings
    in: body
    description: Json formatted public settings for the extension.
    types:
    - uid: object
  - name: properties.protectedSettings
    in: body
    description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
    types:
    - uid: object
  - name: properties.suppressFailures
    in: body
    description: Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.
    types:
    - uid: boolean
  - name: properties.protectedSettingsFromKeyVault
    in: body
    description: The extensions protected settings that are passed by reference, and consumed from key vault
    types:
    - uid: object
requestHeader: []
definitions:
- name: VirtualMachineScaleSetVMExtension
  description: Describes a VMSS VM Extension.
  kind: object
  properties:
  - name: name
    isReadyOnly: true
    description: The name of the extension.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: properties.forceUpdateTag
    description: How the extension handler should be forced to update even if the extension configuration has not changed.
    types:
    - uid: string
  - name: properties.publisher
    description: The name of the extension handler publisher.
    types:
    - uid: string
  - name: properties.type
    description: Specifies the type of the extension; an example is "CustomScriptExtension".
    types:
    - uid: string
  - name: properties.typeHandlerVersion
    description: Specifies the version of the script handler.
    types:
    - uid: string
  - name: properties.autoUpgradeMinorVersion
    description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
    types:
    - uid: boolean
  - name: properties.enableAutomaticUpgrade
    description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
    types:
    - uid: boolean
  - name: properties.settings
    description: Json formatted public settings for the extension.
    types:
    - uid: object
  - name: properties.protectedSettings
    description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
    types:
    - uid: object
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state, which only appears in the response.
    types:
    - uid: string
  - name: properties.instanceView
    description: The virtual machine extension instance view.
    types:
    - uid: VirtualMachineExtensionInstanceView
  - name: properties.suppressFailures
    description: Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.
    types:
    - uid: boolean
  - name: properties.protectedSettingsFromKeyVault
    description: The extensions protected settings that are passed by reference, and consumed from key vault
    types:
    - uid: object
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
- name: CloudError
  description: An error response from the Compute service.
  kind: object
  properties:
  - name: error
    description: Api error.
    types:
    - uid: ApiError
- name: VirtualMachineScaleSetVMExtensionUpdate
  description: Describes a VMSS VM Extension.
  kind: object
  properties:
  - name: name
    isReadyOnly: true
    description: The name of the extension.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: properties.forceUpdateTag
    description: How the extension handler should be forced to update even if the extension configuration has not changed.
    types:
    - uid: string
  - name: properties.publisher
    description: The name of the extension handler publisher.
    types:
    - uid: string
  - name: properties.type
    description: Specifies the type of the extension; an example is "CustomScriptExtension".
    types:
    - uid: string
  - name: properties.typeHandlerVersion
    description: Specifies the version of the script handler.
    types:
    - uid: string
  - name: properties.autoUpgradeMinorVersion
    description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
    types:
    - uid: boolean
  - name: properties.enableAutomaticUpgrade
    description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
    types:
    - uid: boolean
  - name: properties.settings
    description: Json formatted public settings for the extension.
    types:
    - uid: object
  - name: properties.protectedSettings
    description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
    types:
    - uid: object
  - name: properties.suppressFailures
    description: Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.
    types:
    - uid: boolean
  - name: properties.protectedSettingsFromKeyVault
    description: The extensions protected settings that are passed by reference, and consumed from key vault
    types:
    - uid: object
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
- name: VirtualMachineExtensionInstanceView
  description: The instance view of a virtual machine extension.
  kind: object
  properties:
  - name: name
    description: The virtual machine extension name.
    types:
    - uid: string
  - name: type
    description: Specifies the type of the extension; an example is "CustomScriptExtension".
    types:
    - uid: string
  - name: typeHandlerVersion
    description: Specifies the version of the script handler.
    types:
    - uid: string
  - name: substatuses
    description: The resource status information.
    types:
    - uid: InstanceViewStatus
      isArray: true
  - name: statuses
    description: The resource status information.
    types:
    - uid: InstanceViewStatus
      isArray: true
- name: ApiError
  description: Api error.
  kind: object
  properties:
  - name: details
    description: The Api error details
    types:
    - uid: ApiErrorBase
      isArray: true
  - name: innererror
    description: The Api inner error
    types:
    - uid: InnerError
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: InstanceViewStatus
  description: Instance view status.
  kind: object
  properties:
  - name: code
    description: The status code.
    types:
    - uid: string
  - name: level
    description: The level code.
    types:
    - uid: StatusLevelTypes
  - name: displayStatus
    description: The short localizable label for the status.
    types:
    - uid: string
  - name: message
    description: The detailed status message, including for alerts and error messages.
    types:
    - uid: string
  - name: time
    description: The time of the status.
    types:
    - uid: string
- name: ApiErrorBase
  description: Api error base.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: InnerError
  description: Inner error details.
  kind: object
  properties:
  - name: exceptiontype
    description: The exception type.
    types:
    - uid: string
  - name: errordetail
    description: The internal error message or exception dump.
    types:
    - uid: string
- name: StatusLevelTypes
  description: The level code.
  kind: enum
  properties:
  - name: Info
    types:
    - uid: string
  - name: Warning
    types:
    - uid: string
  - name: Error
    types:
    - uid: string
examples:
- name: Update VirtualMachineScaleSet VM extension.
  request:
    uri: PATCH https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myvmScaleSet/virtualMachines/0/extensions/myVMExtension?api-version=2022-03-01
    body: >-
      {
        "properties": {
          "autoUpgradeMinorVersion": true,
          "publisher": "extPublisher",
          "type": "extType",
          "typeHandlerVersion": "1.2",
          "settings": {
            "UserName": "xyz@microsoft.com"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myvmScaleSet/virtualMachines/0/extensions/myVMExtension?api-version=2022-03-01

      {
        "properties": {
          "autoUpgradeMinorVersion": true,
          "publisher": "extPublisher",
          "type": "extType",
          "typeHandlerVersion": "1.2",
          "settings": {
            "UserName": "xyz@microsoft.com"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.serializer.SerializerFactory;
      import com.azure.core.util.Context;
      import com.azure.core.util.serializer.SerializerEncoding;
      import com.azure.resourcemanager.compute.models.VirtualMachineScaleSetVMExtensionUpdate;
      import java.io.IOException;

      /** Samples for VirtualMachineScaleSetVMExtensions Update. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineScaleSetExamples/VirtualMachineScaleSetVMExtensions_Update.json
           */
          /**
           * Sample code: Update VirtualMachineScaleSet VM extension.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void updateVirtualMachineScaleSetVMExtension(com.azure.resourcemanager.AzureResourceManager azure)
              throws IOException {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachineScaleSetVMExtensions()
                  .update(
                      "myResourceGroup",
                      "myvmScaleSet",
                      "0",
                      "myVMExtension",
                      new VirtualMachineScaleSetVMExtensionUpdate()
                          .withPublisher("extPublisher")
                          .withTypePropertiesType("extType")
                          .withTypeHandlerVersion("1.2")
                          .withAutoUpgradeMinorVersion(true)
                          .withSettings(
                              SerializerFactory
                                  .createDefaultManagementSerializerAdapter()
                                  .deserialize(
                                      "{\"UserName\":\"xyz@microsoft.com\"}", Object.class, SerializerEncoding.JSON)),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcompute_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v3"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineScaleSetExamples/VirtualMachineScaleSetVMExtensions_Update.json
      func ExampleVirtualMachineScaleSetVMExtensionsClient_BeginUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcompute.NewVirtualMachineScaleSetVMExtensionsClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginUpdate(ctx,
      		"myResourceGroup",
      		"myvmScaleSet",
      		"0",
      		"myVMExtension",
      		armcompute.VirtualMachineScaleSetVMExtensionUpdate{
      			Properties: &armcompute.VirtualMachineExtensionUpdateProperties{
      				Type:                    to.Ptr("extType"),
      				AutoUpgradeMinorVersion: to.Ptr(true),
      				Publisher:               to.Ptr("extPublisher"),
      				Settings: map[string]interface{}{
      					"UserName": "xyz@microsoft.com",
      				},
      				TypeHandlerVersion: to.Ptr("1.2"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcompute%2Farmcompute%2Fv3.0.0/sdk/resourcemanager/compute/armcompute/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to update the VMSS VM extension.
       *
       * @summary The operation to update the VMSS VM extension.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/virtualMachineScaleSetExamples/VirtualMachineScaleSetVMExtensions_Update.json
       */
      async function updateVirtualMachineScaleSetVMExtension() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmScaleSetName = "myvmScaleSet";
        const instanceId = "0";
        const vmExtensionName = "myVMExtension";
        const extensionParameters = {
          typePropertiesType: "extType",
          autoUpgradeMinorVersion: true,
          publisher: "extPublisher",
          settings: { UserName: "xyz@microsoft.com" },
          typeHandlerVersion: "1.2",
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachineScaleSetVMExtensions.beginUpdateAndWait(
          resourceGroupName,
          vmScaleSetName,
          instanceId,
          vmExtensionName,
          extensionParameters
        );
        console.log(result);
      }

      updateVirtualMachineScaleSetVMExtension().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "myVMExtension",
        "type": "Microsoft.Compute/virtualMachineScaleSets/virtualMachines/extensions",
        "id": "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myvmScaleSet/virtualMachines/0/extensions/myVMExtension",
        "properties": {
          "autoUpgradeMinorVersion": true,
          "provisioningState": "Creating",
          "publisher": "extPublisher",
          "type": "extType",
          "typeHandlerVersion": "1.2",
          "settings": {
            "UserName": "xyz@microsoft.com"
          }
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Compute service - The operation to update the VMSS VM extension.
errorCodes: []
