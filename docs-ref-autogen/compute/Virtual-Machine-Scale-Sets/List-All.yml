### YamlMime:RESTOperation
uid: management.azure.com.compute.virtualmachinescalesets.listall
name: List All
service: Compute
groupName: Virtual Machine Scale Sets
apiVersion: 2022-03-01
summary: Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink is null to fetch all the VM Scale Sets.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachineScaleSets?api-version=2022-03-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: VirtualMachineScaleSetListWithLinkResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: VirtualMachineScaleSetListWithLinkResult
  description: The List Virtual Machine operation response.
  kind: object
  properties:
  - name: value
    description: The list of virtual machine scale sets.
    types:
    - uid: VirtualMachineScaleSet
      isArray: true
  - name: nextLink
    description: The uri to fetch the next page of Virtual Machine Scale Sets. Call ListNext() with this to fetch the next page of Virtual Machine Scale Sets.
    types:
    - uid: string
- name: CloudError
  description: An error response from the Compute service.
  kind: object
  properties:
  - name: error
    description: Api error.
    types:
    - uid: ApiError
- name: VirtualMachineScaleSet
  description: Describes a Virtual Machine Scale Set.
  kind: object
  properties:
  - name: sku
    description: The virtual machine scale set sku.
    types:
    - uid: Sku
  - name: plan
    description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
    types:
    - uid: Plan
  - name: identity
    description: The identity of the virtual machine scale set, if configured.
    types:
    - uid: VirtualMachineScaleSetIdentity
  - name: zones
    description: 'The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set'
    types:
    - uid: string
      isArray: true
  - name: extendedLocation
    description: The extended location of the Virtual Machine Scale Set.
    types:
    - uid: ExtendedLocation
  - name: properties.upgradePolicy
    description: The upgrade policy.
    types:
    - uid: UpgradePolicy
  - name: properties.automaticRepairsPolicy
    description: Policy for automatic repairs.
    types:
    - uid: AutomaticRepairsPolicy
  - name: properties.virtualMachineProfile
    description: The virtual machine profile.
    types:
    - uid: VirtualMachineScaleSetVMProfile
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state, which only appears in the response.
    types:
    - uid: string
  - name: properties.overprovision
    description: Specifies whether the Virtual Machine Scale Set should be overprovisioned.
    types:
    - uid: boolean
  - name: properties.doNotRunExtensionsOnOverprovisionedVMs
    description: When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
    types:
    - uid: boolean
  - name: properties.uniqueId
    isReadyOnly: true
    description: Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
    types:
    - uid: string
  - name: properties.singlePlacementGroup
    description: 'When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.'
    types:
    - uid: boolean
  - name: properties.zoneBalance
    description: Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage. zoneBalance property can only be set if the zones property of the scale set contains more than one zone. If there are no zones or only one zone specified, then zoneBalance property should not be set.
    types:
    - uid: boolean
  - name: properties.platformFaultDomainCount
    description: Fault Domain count for each placement group.
    types:
    - uid: integer
  - name: properties.proximityPlacementGroup
    description: 'Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. <br><br>Minimum api-version: 2018-04-01.'
    types:
    - uid: SubResource
  - name: properties.hostGroup
    description: 'Specifies information about the dedicated host group that the virtual machine scale set resides in. <br><br>Minimum api-version: 2020-06-01.'
    types:
    - uid: SubResource
  - name: properties.additionalCapabilities
    description: 'Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.'
    types:
    - uid: AdditionalCapabilities
  - name: properties.scaleInPolicy
    description: Specifies the policies applied when scaling in Virtual Machines in the Virtual Machine Scale Set.
    types:
    - uid: ScaleInPolicy
  - name: properties.orchestrationMode
    description: Specifies the orchestration mode for the virtual machine scale set.
    types:
    - uid: OrchestrationMode
  - name: properties.spotRestorePolicy
    description: Specifies the Spot Restore properties for the virtual machine scale set.
    types:
    - uid: SpotRestorePolicy
  - name: properties.timeCreated
    isReadyOnly: true
    description: 'Specifies the time at which the Virtual Machine Scale Set resource was created.<br><br>Minimum api-version: 2022-03-01.'
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: ApiError
  description: Api error.
  kind: object
  properties:
  - name: details
    description: The Api error details
    types:
    - uid: ApiErrorBase
      isArray: true
  - name: innererror
    description: The Api inner error
    types:
    - uid: InnerError
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: Sku
  description: 'Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.'
  kind: object
  properties:
  - name: name
    description: The sku name.
    types:
    - uid: string
  - name: tier
    description: Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
    types:
    - uid: string
  - name: capacity
    description: Specifies the number of virtual machines in the scale set.
    types:
    - uid: integer
- name: Plan
  description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
  kind: object
  properties:
  - name: name
    description: The plan ID.
    types:
    - uid: string
  - name: publisher
    description: The publisher ID.
    types:
    - uid: string
  - name: product
    description: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
    types:
    - uid: string
  - name: promotionCode
    description: The promotion code.
    types:
    - uid: string
- name: VirtualMachineScaleSetIdentity
  description: Identity for the virtual machine scale set.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal id of virtual machine scale set identity. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant id associated with the virtual machine scale set. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: type
    description: The type of identity used for the virtual machine scale set. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine scale set.
    types:
    - uid: ResourceIdentityType
  - name: userAssignedIdentities
    description: "The list of user identities associated with the virtual machine scale set. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
    types:
    - uid: UserAssignedIdentities
- name: ExtendedLocation
  description: The complex type of the extended location.
  kind: object
  properties:
  - name: name
    description: The name of the extended location.
    types:
    - uid: string
  - name: type
    description: The type of the extended location.
    types:
    - uid: ExtendedLocationTypes
- name: UpgradePolicy
  description: Describes an upgrade policy - automatic, manual, or rolling.
  kind: object
  properties:
  - name: mode
    description: Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
    types:
    - uid: UpgradeMode
  - name: rollingUpgradePolicy
    description: The configuration parameters used while performing a rolling upgrade.
    types:
    - uid: RollingUpgradePolicy
  - name: automaticOSUpgradePolicy
    description: Configuration parameters used for performing automatic OS Upgrade.
    types:
    - uid: AutomaticOSUpgradePolicy
- name: AutomaticRepairsPolicy
  description: Specifies the configuration parameters for automatic repairs on the virtual machine scale set.
  kind: object
  properties:
  - name: enabled
    description: Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false.
    types:
    - uid: boolean
  - name: gracePeriod
    description: The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 10 minutes (PT10M), which is also the default value. The maximum allowed grace period is 90 minutes (PT90M).
    types:
    - uid: string
  - name: repairAction
    description: Type of repair action (replace, restart, reimage) that will be used for repairing unhealthy virtual machines in the scale set. Default value is replace.
    types:
    - uid: RepairAction
- name: VirtualMachineScaleSetVMProfile
  description: Describes a virtual machine scale set virtual machine profile.
  kind: object
  properties:
  - name: osProfile
    description: Specifies the operating system settings for the virtual machines in the scale set.
    types:
    - uid: VirtualMachineScaleSetOSProfile
  - name: storageProfile
    description: Specifies the storage settings for the virtual machine disks.
    types:
    - uid: VirtualMachineScaleSetStorageProfile
  - name: networkProfile
    description: Specifies properties of the network interfaces of the virtual machines in the scale set.
    types:
    - uid: VirtualMachineScaleSetNetworkProfile
  - name: securityProfile
    description: Specifies the Security related profile settings for the virtual machines in the scale set.
    types:
    - uid: SecurityProfile
  - name: diagnosticsProfile
    description: 'Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.'
    types:
    - uid: DiagnosticsProfile
  - name: extensionProfile
    description: Specifies a collection of settings for extensions installed on virtual machines in the scale set.
    types:
    - uid: VirtualMachineScaleSetExtensionProfile
  - name: licenseType
    description: 'Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15'
    types:
    - uid: string
  - name: priority
    description: 'Specifies the priority for the virtual machines in the scale set. <br><br>Minimum api-version: 2017-10-30-preview'
    types:
    - uid: VirtualMachinePriorityTypes
  - name: evictionPolicy
    description: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
    types:
    - uid: VirtualMachineEvictionPolicyTypes
  - name: billingProfile
    description: 'Specifies the billing related details of a Azure Spot VMSS. <br><br>Minimum api-version: 2019-03-01.'
    types:
    - uid: BillingProfile
  - name: scheduledEventsProfile
    description: Specifies Scheduled Event related configurations.
    types:
    - uid: ScheduledEventsProfile
  - name: userData
    description: 'UserData for the virtual machines in the scale set, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01'
    types:
    - uid: string
  - name: capacityReservation
    description: 'Specifies the capacity reservation related details of a scale set. <br><br>Minimum api-version: 2021-04-01.'
    types:
    - uid: CapacityReservationProfile
  - name: applicationProfile
    description: Specifies the gallery applications that should be made available to the VM/VMSS
    types:
    - uid: ApplicationProfile
  - name: hardwareProfile
    description: 'Specifies the hardware profile related details of a scale set. <br><br>Minimum api-version: 2022-03-01.'
    types:
    - uid: VirtualMachineScaleSetHardwareProfile
- name: SubResource
  kind: object
  properties:
  - name: id
    description: Resource Id
    types:
    - uid: string
- name: AdditionalCapabilities
  description: Enables or disables a capability on the virtual machine or virtual machine scale set.
  kind: object
  properties:
  - name: ultraSSDEnabled
    description: The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled.
    types:
    - uid: boolean
  - name: hibernationEnabled
    description: The flag that enables or disables hibernation capability on the VM.
    types:
    - uid: boolean
- name: ScaleInPolicy
  description: Describes a scale-in policy for a virtual machine scale set.
  kind: object
  properties:
  - name: rules
    description: 'The rules to be followed when scaling-in a virtual machine scale set. <br><br> Possible values are: <br><br> **Default** When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a zonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for removal will be the newest ones that are not protected from scale-in. <br><br> **OldestVM** When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal. <br><br> **NewestVM** When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the newest virtual machines that are not protected will be chosen for removal. <br><br>'
    types:
    - uid: string
      isArray: true
  - name: forceDeletion
    description: This property allows you to specify if virtual machines chosen for removal have to be force deleted when a virtual machine scale set is being scaled-in.(Feature in Preview)
    types:
    - uid: boolean
- name: OrchestrationMode
  description: Specifies the orchestration mode for the virtual machine scale set.
  kind: enum
  properties:
  - name: Uniform
    types:
    - uid: string
  - name: Flexible
    types:
    - uid: string
- name: SpotRestorePolicy
  description: Specifies the Spot-Try-Restore properties for the virtual machine scale set. <br><br> With this property customer can enable or disable automatic restore of the evicted Spot VMSS VM instances opportunistically based on capacity availability and pricing constraint.
  kind: object
  properties:
  - name: enabled
    description: Enables the Spot-Try-Restore feature where evicted VMSS SPOT instances will be tried to be restored opportunistically based on capacity availability and pricing constraints
    types:
    - uid: boolean
  - name: restoreTimeout
    description: Timeout value expressed as an ISO 8601 time duration after which the platform will not try to restore the VMSS SPOT instances
    types:
    - uid: string
- name: ApiErrorBase
  description: Api error base.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: InnerError
  description: Inner error details.
  kind: object
  properties:
  - name: exceptiontype
    description: The exception type.
    types:
    - uid: string
  - name: errordetail
    description: The internal error message or exception dump.
    types:
    - uid: string
- name: ResourceIdentityType
  description: The type of identity used for the virtual machine scale set. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine scale set.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
  - name: UserAssigned
    types:
    - uid: string
  - name: SystemAssigned, UserAssigned
    types:
    - uid: string
  - name: None
    types:
    - uid: string
- name: UserAssignedIdentities
  description: "The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
  kind: object
  properties:
  - name: ''
    description: ''
    types:
    - uid: ''
- name: ExtendedLocationTypes
  description: The type of the extended location.
  kind: enum
  properties:
  - name: EdgeZone
    types:
    - uid: string
- name: UpgradeMode
  description: Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
  kind: enum
  properties:
  - name: Automatic
    types:
    - uid: string
  - name: Manual
    types:
    - uid: string
  - name: Rolling
    types:
    - uid: string
- name: RollingUpgradePolicy
  description: The configuration parameters used while performing a rolling upgrade.
  kind: object
  properties:
  - name: maxBatchInstancePercent
    description: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%.
    types:
    - uid: integer
  - name: maxUnhealthyInstancePercent
    description: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%.
    types:
    - uid: integer
  - name: maxUnhealthyUpgradedInstancePercent
    description: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%.
    types:
    - uid: integer
  - name: pauseTimeBetweenBatches
    description: The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S).
    types:
    - uid: string
  - name: enableCrossZoneUpgrade
    description: Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size.
    types:
    - uid: boolean
  - name: prioritizeUnhealthyInstances
    description: Upgrade all unhealthy instances in a scale set before any healthy instances.
    types:
    - uid: boolean
- name: AutomaticOSUpgradePolicy
  description: The configuration parameters used for performing automatic OS upgrade.
  kind: object
  properties:
  - name: enableAutomaticOSUpgrade
    description: Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. Default value is false. <br><br> If this is set to true for Windows based scale sets, [enableAutomaticUpdates](https://docs.microsoft.com/dotnet/api/microsoft.azure.management.compute.models.windowsconfiguration.enableautomaticupdates?view=azure-dotnet) is automatically set to false and cannot be set to true.
    types:
    - uid: boolean
  - name: disableAutomaticRollback
    description: Whether OS image rollback feature should be disabled. Default value is false.
    types:
    - uid: boolean
  - name: useRollingUpgradePolicy
    description: Indicates whether rolling upgrade policy should be used during Auto OS Upgrade. Default value is false. Auto OS Upgrade will fallback to the default policy if no policy is defined on the VMSS.
    types:
    - uid: boolean
- name: RepairAction
  description: Type of repair action (replace, restart, reimage) that will be used for repairing unhealthy virtual machines in the scale set. Default value is replace.
  kind: enum
  properties:
  - name: Replace
    types:
    - uid: string
  - name: Restart
    types:
    - uid: string
  - name: Reimage
    types:
    - uid: string
- name: VirtualMachineScaleSetOSProfile
  description: Describes a virtual machine scale set OS profile.
  kind: object
  properties:
  - name: computerNamePrefix
    description: Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
    types:
    - uid: string
  - name: adminUsername
    description: Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters
    types:
    - uid: string
  - name: adminPassword
    description: Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
    types:
    - uid: string
  - name: customData
    description: Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)
    types:
    - uid: string
  - name: windowsConfiguration
    description: Specifies Windows operating system settings on the virtual machine.
    types:
    - uid: WindowsConfiguration
  - name: linuxConfiguration
    description: Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
    types:
    - uid: LinuxConfiguration
  - name: secrets
    description: Specifies set of certificates that should be installed onto the virtual machines in the scale set. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
    types:
    - uid: VaultSecretGroup
      isArray: true
  - name: allowExtensionOperations
    description: Specifies whether extension operations should be allowed on the virtual machine scale set. <br><br>This may only be set to False when no extensions are present on the virtual machine scale set.
    types:
    - uid: boolean
- name: VirtualMachineScaleSetStorageProfile
  description: Describes a virtual machine scale set storage profile.
  kind: object
  properties:
  - name: imageReference
    description: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
    types:
    - uid: ImageReference
  - name: osDisk
    description: Specifies information about the operating system disk used by the virtual machines in the scale set. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
    types:
    - uid: VirtualMachineScaleSetOSDisk
  - name: dataDisks
    description: Specifies the parameters that are used to add data disks to the virtual machines in the scale set. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
    types:
    - uid: VirtualMachineScaleSetDataDisk
      isArray: true
- name: VirtualMachineScaleSetNetworkProfile
  description: Describes a virtual machine scale set network profile.
  kind: object
  properties:
  - name: healthProbe
    description: "A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'."
    types:
    - uid: ApiEntityReference
  - name: networkInterfaceConfigurations
    description: The list of network configurations.
    types:
    - uid: VirtualMachineScaleSetNetworkConfiguration
      isArray: true
  - name: networkApiVersion
    description: specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set with orchestration mode 'Flexible'
    types:
    - uid: NetworkApiVersion
- name: SecurityProfile
  description: Specifies the Security profile settings for the virtual machine or virtual machine scale set.
  kind: object
  properties:
  - name: uefiSettings
    description: 'Specifies the security settings like secure boot and vTPM used while creating the virtual machine. <br><br>Minimum api-version: 2020-12-01'
    types:
    - uid: UefiSettings
  - name: encryptionAtHost
    description: 'This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. <br><br> Default: The Encryption at host will be disabled unless this property is set to true for the resource.'
    types:
    - uid: boolean
  - name: securityType
    description: 'Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br> Default: UefiSettings will not be enabled unless this property is set.'
    types:
    - uid: SecurityTypes
- name: DiagnosticsProfile
  description: 'Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.'
  kind: object
  properties:
  - name: bootDiagnostics
    description: 'Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br>**NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription as the VM. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.'
    types:
    - uid: BootDiagnostics
- name: VirtualMachineScaleSetExtensionProfile
  description: Describes a virtual machine scale set extension profile.
  kind: object
  properties:
  - name: extensions
    description: The virtual machine scale set child extension resources.
    types:
    - uid: VirtualMachineScaleSetExtension
      isArray: true
  - name: extensionsTimeBudget
    description: 'Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01'
    types:
    - uid: string
- name: VirtualMachinePriorityTypes
  description: 'Specifies the priority for the virtual machines in the scale set. <br><br>Minimum api-version: 2017-10-30-preview'
  kind: enum
  properties:
  - name: Regular
    types:
    - uid: string
  - name: Low
    types:
    - uid: string
  - name: Spot
    types:
    - uid: string
- name: VirtualMachineEvictionPolicyTypes
  description: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
  kind: enum
  properties:
  - name: Deallocate
    types:
    - uid: string
  - name: Delete
    types:
    - uid: string
- name: BillingProfile
  description: 'Specifies the billing related details of a Azure Spot VM or VMSS. <br><br>Minimum api-version: 2019-03-01.'
  kind: object
  properties:
  - name: maxPrice
    description: 'Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01.'
    types:
    - uid: number
- name: ScheduledEventsProfile
  kind: object
  properties:
  - name: terminateNotificationProfile
    description: Specifies Terminate Scheduled Event related configurations.
    types:
    - uid: TerminateNotificationProfile
- name: CapacityReservationProfile
  description: The parameters of a capacity reservation Profile.
  kind: object
  properties:
  - name: capacityReservationGroup
    description: Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details.
    types:
    - uid: SubResource
- name: ApplicationProfile
  description: Contains the list of gallery applications that should be made available to the VM/VMSS
  kind: object
  properties:
  - name: galleryApplications
    description: Specifies the gallery applications that should be made available to the VM/VMSS
    types:
    - uid: VMGalleryApplication
      isArray: true
- name: VirtualMachineScaleSetHardwareProfile
  description: Specifies the hardware settings for the virtual machine scale set.
  kind: object
  properties:
  - name: vmSizeProperties
    description: 'Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2022-03-01. <br><br> Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details.'
    types:
    - uid: VMSizeProperties
- name: WindowsConfiguration
  description: Specifies Windows operating system settings on the virtual machine.
  kind: object
  properties:
  - name: provisionVMAgent
    description: Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
    types:
    - uid: boolean
  - name: enableAutomaticUpdates
    description: Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. <br><br> For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.
    types:
    - uid: boolean
  - name: timeZone
    description: Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". <br><br> Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
    types:
    - uid: string
  - name: additionalUnattendContent
    description: Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
    types:
    - uid: AdditionalUnattendContent
      isArray: true
  - name: patchSettings
    description: '[Preview Feature] Specifies settings related to VM Guest Patching on Windows.'
    types:
    - uid: PatchSettings
  - name: winRM
    description: Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
    types:
    - uid: WinRMConfiguration
- name: LinuxConfiguration
  description: Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
  kind: object
  properties:
  - name: disablePasswordAuthentication
    description: Specifies whether password authentication should be disabled.
    types:
    - uid: boolean
  - name: ssh
    description: Specifies the ssh key configuration for a Linux OS.
    types:
    - uid: SshConfiguration
  - name: provisionVMAgent
    description: Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
    types:
    - uid: boolean
  - name: patchSettings
    description: '[Preview Feature] Specifies settings related to VM Guest Patching on Linux.'
    types:
    - uid: LinuxPatchSettings
- name: VaultSecretGroup
  description: Describes a set of certificates which are all in the same Key Vault.
  kind: object
  properties:
  - name: sourceVault
    description: The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
    types:
    - uid: SubResource
  - name: vaultCertificates
    description: The list of key vault references in SourceVault which contain certificates.
    types:
    - uid: VaultCertificate
      isArray: true
- name: ImageReference
  description: 'Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.'
  kind: object
  properties:
  - name: publisher
    description: The image publisher.
    types:
    - uid: string
  - name: offer
    description: Specifies the offer of the platform image or marketplace image used to create the virtual machine.
    types:
    - uid: string
  - name: sku
    description: The image SKU.
    types:
    - uid: string
  - name: version
    description: Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input.
    types:
    - uid: string
  - name: exactVersion
    isReadyOnly: true
    description: Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.
    types:
    - uid: string
  - name: sharedGalleryImageId
    description: Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call.
    types:
    - uid: string
  - name: communityGalleryImageId
    description: Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call.
    types:
    - uid: string
  - name: id
    description: Resource Id
    types:
    - uid: string
- name: VirtualMachineScaleSetOSDisk
  description: Describes a virtual machine scale set operating system disk.
  kind: object
  properties:
  - name: name
    description: The disk name.
    types:
    - uid: string
  - name: caching
    description: 'Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**'
    types:
    - uid: CachingTypes
  - name: writeAcceleratorEnabled
    description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
    types:
    - uid: boolean
  - name: createOption
    description: 'Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.'
    types:
    - uid: DiskCreateOptionTypes
  - name: diffDiskSettings
    description: Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale set.
    types:
    - uid: DiffDiskSettings
  - name: diskSizeGB
    description: Specifies the size of the operating system disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
    types:
    - uid: integer
  - name: osType
    description: 'This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**'
    types:
    - uid: OperatingSystemTypes
  - name: image
    description: Specifies information about the unmanaged user image to base the scale set on.
    types:
    - uid: VirtualHardDisk
  - name: vhdContainers
    description: Specifies the container urls that are used to store operating system disks for the scale set.
    types:
    - uid: string
      isArray: true
  - name: managedDisk
    description: The managed disk parameters.
    types:
    - uid: VirtualMachineScaleSetManagedDiskParameters
  - name: deleteOption
    description: 'Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only). <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The default value is set to **Delete**. For an Ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for Ephemeral OS Disk.'
    types:
    - uid: DiskDeleteOptionTypes
- name: VirtualMachineScaleSetDataDisk
  description: Describes a virtual machine scale set data disk.
  kind: object
  properties:
  - name: name
    description: The disk name.
    types:
    - uid: string
  - name: lun
    description: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
    types:
    - uid: integer
  - name: caching
    description: 'Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**'
    types:
    - uid: CachingTypes
  - name: writeAcceleratorEnabled
    description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
    types:
    - uid: boolean
  - name: createOption
    description: The create option.
    types:
    - uid: DiskCreateOptionTypes
  - name: diskSizeGB
    description: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
    types:
    - uid: integer
  - name: managedDisk
    description: The managed disk parameters.
    types:
    - uid: VirtualMachineScaleSetManagedDiskParameters
  - name: diskIOPSReadWrite
    description: Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.
    types:
    - uid: integer
  - name: diskMBpsReadWrite
    description: Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.
    types:
    - uid: integer
  - name: deleteOption
    description: 'Specifies whether data disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only).<br><br> Possible values: <br><br> **Delete** If this value is used, the data disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the data disk is retained after VMSS Flex VM is deleted.<br><br> The default value is set to **Delete**.'
    types:
    - uid: DiskDeleteOptionTypes
- name: ApiEntityReference
  description: The API entity reference.
  kind: object
  properties:
  - name: id
    description: The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
    types:
    - uid: string
- name: VirtualMachineScaleSetNetworkConfiguration
  description: Describes a virtual machine scale set network profile's network configurations.
  kind: object
  properties:
  - name: name
    description: The network configuration name.
    types:
    - uid: string
  - name: properties.primary
    description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
    types:
    - uid: boolean
  - name: properties.enableAcceleratedNetworking
    description: Specifies whether the network interface is accelerated networking-enabled.
    types:
    - uid: boolean
  - name: properties.enableFpga
    description: Specifies whether the network interface is FPGA networking-enabled.
    types:
    - uid: boolean
  - name: properties.networkSecurityGroup
    description: The network security group.
    types:
    - uid: SubResource
  - name: properties.dnsSettings
    description: The dns settings to be applied on the network interfaces.
    types:
    - uid: VirtualMachineScaleSetNetworkConfigurationDnsSettings
  - name: properties.ipConfigurations
    description: Specifies the IP configurations of the network interface.
    types:
    - uid: VirtualMachineScaleSetIPConfiguration
      isArray: true
  - name: properties.enableIPForwarding
    description: Whether IP forwarding enabled on this NIC.
    types:
    - uid: boolean
  - name: properties.deleteOption
    description: Specify what happens to the network interface when the VM is deleted
    types:
    - uid: DeleteOptions
  - name: id
    description: Resource Id
    types:
    - uid: string
- name: NetworkApiVersion
  description: specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set with orchestration mode 'Flexible'
  kind: enum
  properties:
  - name: 2020-11-01
    types:
    - uid: string
- name: UefiSettings
  description: 'Specifies the security settings like secure boot and vTPM used while creating the virtual machine. <br><br>Minimum api-version: 2020-12-01'
  kind: object
  properties:
  - name: secureBootEnabled
    description: 'Specifies whether secure boot should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01'
    types:
    - uid: boolean
  - name: vTpmEnabled
    description: 'Specifies whether vTPM should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01'
    types:
    - uid: boolean
- name: SecurityTypes
  description: 'Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br> Default: UefiSettings will not be enabled unless this property is set.'
  kind: enum
  properties:
  - name: TrustedLaunch
    types:
    - uid: string
  - name: ConfidentialVM
    types:
    - uid: string
- name: BootDiagnostics
  description: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
  kind: object
  properties:
  - name: enabled
    description: Whether boot diagnostics should be enabled on the Virtual Machine.
    types:
    - uid: boolean
  - name: storageUri
    description: Uri of the storage account to use for placing the console output and screenshot. <br><br>If storageUri is not specified while enabling boot diagnostics, managed storage will be used.
    types:
    - uid: string
- name: VirtualMachineScaleSetExtension
  description: Describes a Virtual Machine Scale Set Extension.
  kind: object
  properties:
  - name: name
    description: The name of the extension.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: properties.forceUpdateTag
    description: If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed.
    types:
    - uid: string
  - name: properties.publisher
    description: The name of the extension handler publisher.
    types:
    - uid: string
  - name: properties.type
    description: Specifies the type of the extension; an example is "CustomScriptExtension".
    types:
    - uid: string
  - name: properties.typeHandlerVersion
    description: Specifies the version of the script handler.
    types:
    - uid: string
  - name: properties.autoUpgradeMinorVersion
    description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
    types:
    - uid: boolean
  - name: properties.enableAutomaticUpgrade
    description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
    types:
    - uid: boolean
  - name: properties.settings
    description: Json formatted public settings for the extension.
    types:
    - uid: object
  - name: properties.protectedSettings
    description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
    types:
    - uid: object
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state, which only appears in the response.
    types:
    - uid: string
  - name: properties.provisionAfterExtensions
    description: Collection of extension names after which this extension needs to be provisioned.
    types:
    - uid: string
      isArray: true
  - name: properties.suppressFailures
    description: Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.
    types:
    - uid: boolean
  - name: properties.protectedSettingsFromKeyVault
    description: The extensions protected settings that are passed by reference, and consumed from key vault
    types:
    - uid: object
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
- name: TerminateNotificationProfile
  kind: object
  properties:
  - name: notBeforeTimeout
    description: Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)
    types:
    - uid: string
  - name: enable
    description: Specifies whether the Terminate Scheduled event is enabled or disabled.
    types:
    - uid: boolean
- name: VMGalleryApplication
  description: Specifies the required information to reference a compute gallery application version
  kind: object
  properties:
  - name: tags
    description: Optional, Specifies a passthrough value for more generic context.
    types:
    - uid: string
  - name: order
    description: Optional, Specifies the order in which the packages have to be installed
    types:
    - uid: integer
  - name: packageReferenceId
    description: Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}
    types:
    - uid: string
  - name: configurationReference
    description: Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided
    types:
    - uid: string
  - name: treatFailureAsDeploymentFailure
    description: Optional, If true, any failure for any operation in the VmApplication will fail the deployment
    types:
    - uid: boolean
  - name: enableAutomaticUpgrade
    description: If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS
    types:
    - uid: boolean
- name: VMSizeProperties
  description: Specifies VM Size Property settings on the virtual machine.
  kind: object
  properties:
  - name: vCPUsAvailable
    description: Specifies the number of vCPUs available for the VM. <br><br> When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) .
    types:
    - uid: integer
  - name: vCPUsPerCore
    description: Specifies the vCPU to physical core ratio. <br><br> When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) <br><br> Setting this property to 1 also means that hyper-threading is disabled.
    types:
    - uid: integer
- name: AdditionalUnattendContent
  description: Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
  kind: object
  properties:
  - name: passName
    description: The pass name. Currently, the only allowable value is OobeSystem.
    types:
    - uid: PassNames
  - name: componentName
    description: The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
    types:
    - uid: ComponentNames
  - name: settingName
    description: 'Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.'
    types:
    - uid: SettingNames
  - name: content
    description: Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
    types:
    - uid: string
- name: PatchSettings
  description: Specifies settings related to VM Guest Patching on Windows.
  kind: object
  properties:
  - name: patchMode
    description: 'Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true '
    types:
    - uid: WindowsVMGuestPatchMode
  - name: enableHotpatching
    description: Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'.
    types:
    - uid: boolean
  - name: assessmentMode
    description: 'Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. '
    types:
    - uid: WindowsPatchAssessmentMode
  - name: automaticByPlatformSettings
    description: Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Windows.
    types:
    - uid: WindowsVMGuestPatchAutomaticByPlatformSettings
- name: WinRMConfiguration
  description: Describes Windows Remote Management configuration of the VM
  kind: object
  properties:
  - name: listeners
    description: The list of Windows Remote Management listeners
    types:
    - uid: WinRMListener
      isArray: true
- name: SshConfiguration
  description: SSH configuration for Linux based VMs running on Azure
  kind: object
  properties:
  - name: publicKeys
    description: The list of SSH public keys used to authenticate with linux based VMs.
    types:
    - uid: SshPublicKey
      isArray: true
- name: LinuxPatchSettings
  description: Specifies settings related to VM Guest Patching on Linux.
  kind: object
  properties:
  - name: patchMode
    description: Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true
    types:
    - uid: LinuxVMGuestPatchMode
  - name: assessmentMode
    description: Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
    types:
    - uid: LinuxPatchAssessmentMode
  - name: automaticByPlatformSettings
    description: Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Linux.
    types:
    - uid: LinuxVMGuestPatchAutomaticByPlatformSettings
- name: VaultCertificate
  description: Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
  kind: object
  properties:
  - name: certificateUrl
    description: 'This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).'
    types:
    - uid: string
  - name: certificateStore
    description: For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
    types:
    - uid: string
- name: CachingTypes
  description: 'Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**'
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: ReadOnly
    types:
    - uid: string
  - name: ReadWrite
    types:
    - uid: string
- name: DiskCreateOptionTypes
  description: 'Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.'
  kind: enum
  properties:
  - name: FromImage
    types:
    - uid: string
  - name: Empty
    types:
    - uid: string
  - name: Attach
    types:
    - uid: string
- name: DiffDiskSettings
  description: 'Describes the parameters of ephemeral disk settings that can be specified for operating system disk. <br><br> NOTE: The ephemeral disk settings can only be specified for managed disk.'
  kind: object
  properties:
  - name: option
    description: Specifies the ephemeral disk settings for operating system disk.
    types:
    - uid: DiffDiskOptions
  - name: placement
    description: 'Specifies the ephemeral disk placement for operating system disk.<br><br> Possible values are: <br><br> **CacheDisk** <br><br> **ResourceDisk** <br><br> Default: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** is used.<br><br> Refer to VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk.'
    types:
    - uid: DiffDiskPlacement
- name: OperatingSystemTypes
  description: 'This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**'
  kind: enum
  properties:
  - name: Windows
    types:
    - uid: string
  - name: Linux
    types:
    - uid: string
- name: VirtualHardDisk
  description: Describes the uri of a disk.
  kind: object
  properties:
  - name: uri
    description: Specifies the virtual hard disk's uri.
    types:
    - uid: string
- name: VirtualMachineScaleSetManagedDiskParameters
  description: Describes the parameters of a ScaleSet managed disk.
  kind: object
  properties:
  - name: storageAccountType
    description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
    types:
    - uid: StorageAccountTypes
  - name: diskEncryptionSet
    description: Specifies the customer managed disk encryption set resource id for the managed disk.
    types:
    - uid: DiskEncryptionSetParameters
  - name: securityProfile
    description: Specifies the security profile for the managed disk.
    types:
    - uid: VMDiskSecurityProfile
- name: DiskDeleteOptionTypes
  description: 'Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only). <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The default value is set to **Delete**. For an Ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for Ephemeral OS Disk.'
  kind: enum
  properties:
  - name: Delete
    types:
    - uid: string
  - name: Detach
    types:
    - uid: string
- name: VirtualMachineScaleSetNetworkConfigurationDnsSettings
  description: Describes a virtual machines scale sets network configuration's DNS settings.
  kind: object
  properties:
  - name: dnsServers
    description: List of DNS servers IP addresses
    types:
    - uid: string
      isArray: true
- name: VirtualMachineScaleSetIPConfiguration
  description: Describes a virtual machine scale set network profile's IP configuration.
  kind: object
  properties:
  - name: name
    description: The IP configuration name.
    types:
    - uid: string
  - name: properties.subnet
    description: Specifies the identifier of the subnet.
    types:
    - uid: ApiEntityReference
  - name: properties.primary
    description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
    types:
    - uid: boolean
  - name: properties.publicIPAddressConfiguration
    description: The publicIPAddressConfiguration.
    types:
    - uid: VirtualMachineScaleSetPublicIPAddressConfiguration
  - name: properties.privateIPAddressVersion
    description: "Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'."
    types:
    - uid: IPVersion
  - name: properties.applicationGatewayBackendAddressPools
    description: Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.applicationSecurityGroups
    description: Specifies an array of references to application security group.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.loadBalancerBackendAddressPools
    description: Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.loadBalancerInboundNatPools
    description: Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
    types:
    - uid: SubResource
      isArray: true
  - name: id
    description: Resource Id
    types:
    - uid: string
- name: DeleteOptions
  description: Specify what happens to the public IP when the VM is deleted
  kind: enum
  properties:
  - name: Delete
    types:
    - uid: string
  - name: Detach
    types:
    - uid: string
- name: PassNames
  description: The pass name. Currently, the only allowable value is OobeSystem.
  kind: enum
  properties:
  - name: OobeSystem
    types:
    - uid: string
- name: ComponentNames
  description: The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
  kind: enum
  properties:
  - name: Microsoft-Windows-Shell-Setup
    types:
    - uid: string
- name: SettingNames
  description: 'Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.'
  kind: enum
  properties:
  - name: AutoLogon
    types:
    - uid: string
  - name: FirstLogonCommands
    types:
    - uid: string
- name: WindowsVMGuestPatchMode
  description: 'Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true '
  kind: enum
  properties:
  - name: Manual
    types:
    - uid: string
  - name: AutomaticByOS
    types:
    - uid: string
  - name: AutomaticByPlatform
    types:
    - uid: string
- name: WindowsPatchAssessmentMode
  description: 'Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. '
  kind: enum
  properties:
  - name: ImageDefault
    types:
    - uid: string
  - name: AutomaticByPlatform
    types:
    - uid: string
- name: WindowsVMGuestPatchAutomaticByPlatformSettings
  description: Specifies additional settings to be applied when patch mode AutomaticByPlatform is selected in Windows patch settings.
  kind: object
  properties:
  - name: rebootSetting
    description: Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
    types:
    - uid: WindowsVMGuestPatchAutomaticByPlatformRebootSetting
- name: WinRMListener
  description: Describes Protocol and thumbprint of Windows Remote Management listener
  kind: object
  properties:
  - name: protocol
    description: 'Specifies the protocol of WinRM listener. <br><br> Possible values are: <br>**http** <br><br> **https**'
    types:
    - uid: ProtocolTypes
  - name: certificateUrl
    description: 'This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).'
    types:
    - uid: string
- name: SshPublicKey
  description: Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
  kind: object
  properties:
  - name: path
    description: 'Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys'
    types:
    - uid: string
  - name: keyData
    description: SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
    types:
    - uid: string
- name: LinuxVMGuestPatchMode
  description: Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true
  kind: enum
  properties:
  - name: ImageDefault
    types:
    - uid: string
  - name: AutomaticByPlatform
    types:
    - uid: string
- name: LinuxPatchAssessmentMode
  description: Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
  kind: enum
  properties:
  - name: ImageDefault
    types:
    - uid: string
  - name: AutomaticByPlatform
    types:
    - uid: string
- name: LinuxVMGuestPatchAutomaticByPlatformSettings
  description: Specifies additional settings to be applied when patch mode AutomaticByPlatform is selected in Linux patch settings.
  kind: object
  properties:
  - name: rebootSetting
    description: Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
    types:
    - uid: LinuxVMGuestPatchAutomaticByPlatformRebootSetting
- name: DiffDiskOptions
  description: Specifies the ephemeral disk settings for operating system disk.
  kind: enum
  properties:
  - name: Local
    types:
    - uid: string
- name: DiffDiskPlacement
  description: Specifies the ephemeral disk placement for operating system disk. This property can be used by user in the request to choose the location i.e, cache disk or resource disk space for Ephemeral OS disk provisioning. For more information on Ephemeral OS disk size requirements, please refer Ephemeral OS disk size requirements for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements
  kind: enum
  properties:
  - name: CacheDisk
    types:
    - uid: string
  - name: ResourceDisk
    types:
    - uid: string
- name: StorageAccountTypes
  description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
  kind: enum
  properties:
  - name: Standard_LRS
    types:
    - uid: string
  - name: Premium_LRS
    types:
    - uid: string
  - name: StandardSSD_LRS
    types:
    - uid: string
  - name: UltraSSD_LRS
    types:
    - uid: string
  - name: Premium_ZRS
    types:
    - uid: string
  - name: StandardSSD_ZRS
    types:
    - uid: string
  - name: PremiumV2_LRS
    types:
    - uid: string
- name: DiskEncryptionSetParameters
  description: 'Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. <br><br> NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.'
  kind: object
  properties:
  - name: id
    description: Resource Id
    types:
    - uid: string
- name: VMDiskSecurityProfile
  description: 'Specifies the security profile settings for the managed disk. <br><br> NOTE: It can only be set for Confidential VMs'
  kind: object
  properties:
  - name: securityEncryptionType
    description: 'Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It can be set for only Confidential VMs.'
    types:
    - uid: securityEncryptionTypes
  - name: diskEncryptionSet
    description: Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob.
    types:
    - uid: DiskEncryptionSetParameters
- name: VirtualMachineScaleSetPublicIPAddressConfiguration
  description: Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
  kind: object
  properties:
  - name: name
    description: The publicIP address configuration name.
    types:
    - uid: string
  - name: sku
    description: Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible.
    types:
    - uid: PublicIPAddressSku
  - name: properties.idleTimeoutInMinutes
    description: The idle timeout of the public IP address.
    types:
    - uid: integer
  - name: properties.dnsSettings
    description: The dns settings to be applied on the publicIP addresses .
    types:
    - uid: VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings
  - name: properties.ipTags
    description: The list of IP tags associated with the public IP address.
    types:
    - uid: VirtualMachineScaleSetIpTag
      isArray: true
  - name: properties.publicIPPrefix
    description: The PublicIPPrefix from which to allocate publicIP addresses.
    types:
    - uid: SubResource
  - name: properties.publicIPAddressVersion
    description: "Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'."
    types:
    - uid: IPVersion
  - name: properties.deleteOption
    description: Specify what happens to the public IP when the VM is deleted
    types:
    - uid: DeleteOptions
- name: IPVersion
  description: "Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'."
  kind: enum
  properties:
  - name: IPv4
    types:
    - uid: string
  - name: IPv6
    types:
    - uid: string
- name: WindowsVMGuestPatchAutomaticByPlatformRebootSetting
  description: Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: IfRequired
    types:
    - uid: string
  - name: Never
    types:
    - uid: string
  - name: Always
    types:
    - uid: string
- name: ProtocolTypes
  description: 'Specifies the protocol of WinRM listener. <br><br> Possible values are: <br>**http** <br><br> **https**'
  kind: enum
  properties:
  - name: Http
    types:
    - uid: string
  - name: Https
    types:
    - uid: string
- name: LinuxVMGuestPatchAutomaticByPlatformRebootSetting
  description: Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: IfRequired
    types:
    - uid: string
  - name: Never
    types:
    - uid: string
  - name: Always
    types:
    - uid: string
- name: securityEncryptionTypes
  description: 'Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It can be set for only Confidential VMs.'
  kind: enum
  properties:
  - name: VMGuestStateOnly
    types:
    - uid: string
  - name: DiskWithVMGuestState
    types:
    - uid: string
- name: PublicIPAddressSku
  description: Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible.
  kind: object
  properties:
  - name: name
    description: Specify public IP sku name
    types:
    - uid: PublicIPAddressSkuName
  - name: tier
    description: Specify public IP sku tier
    types:
    - uid: PublicIPAddressSkuTier
- name: VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings
  description: Describes a virtual machines scale sets network configuration's DNS settings.
  kind: object
  properties:
  - name: domainNameLabel
    description: The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created
    types:
    - uid: string
- name: VirtualMachineScaleSetIpTag
  description: Contains the IP tag associated with the public IP address.
  kind: object
  properties:
  - name: ipTagType
    description: 'IP tag type. Example: FirstPartyUsage.'
    types:
    - uid: string
  - name: tag
    description: 'IP tag associated with the public IP. Example: SQL, Storage etc.'
    types:
    - uid: string
- name: PublicIPAddressSkuName
  description: Specify public IP sku name
  kind: enum
  properties:
  - name: Basic
    types:
    - uid: string
  - name: Standard
    types:
    - uid: string
- name: PublicIPAddressSkuTier
  description: Specify public IP sku tier
  kind: enum
  properties:
  - name: Regional
    types:
    - uid: string
  - name: Global
    types:
    - uid: string
examples:
- name: VirtualMachineScaleSets_ListAll_MaximumSet_Gen
  request:
    uri: GET https://management.azure.com/subscriptions/{subscription-id}/providers/Microsoft.Compute/virtualMachineScaleSets?api-version=2022-03-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/{subscription-id}/providers/Microsoft.Compute/virtualMachineScaleSets?api-version=2022-03-01
      ```

  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "sku": {
              "tier": "Standard",
              "capacity": 3,
              "name": "Standard_D1_v2"
            },
            "location": "westus",
            "properties": {
              "overprovision": true,
              "virtualMachineProfile": {
                "storageProfile": {
                  "imageReference": {
                    "sku": "2016-Datacenter",
                    "publisher": "MicrosoftWindowsServer",
                    "version": "latest",
                    "offer": "WindowsServer",
                    "exactVersion": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                    "sharedGalleryImageId": "aaaaaaaaaaaaaaaaaaaaaa",
                    "id": "a"
                  },
                  "osDisk": {
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS",
                      "diskEncryptionSet": {
                        "id": "aaaaaaaaaaaa"
                      }
                    },
                    "createOption": "FromImage",
                    "name": "aaaaaaaaaaaaaaa",
                    "writeAcceleratorEnabled": true,
                    "diffDiskSettings": {
                      "option": "Local",
                      "placement": "CacheDisk"
                    },
                    "diskSizeGB": 30,
                    "osType": "Windows",
                    "image": {
                      "uri": "https://{storageAccountName}.blob.core.windows.net/{containerName}/{vhdName}.vhd"
                    },
                    "vhdContainers": [
                      "aaaaaaaaaaaaaaaaaaaaaaaaa"
                    ]
                  },
                  "dataDisks": [
                    {
                      "name": "aaaaaaaaaaaaaa",
                      "lun": 24,
                      "caching": "None",
                      "writeAcceleratorEnabled": true,
                      "createOption": "FromImage",
                      "diskSizeGB": 11,
                      "managedDisk": {
                        "storageAccountType": "Standard_LRS",
                        "diskEncryptionSet": {
                          "id": "aaaaaaaaaaaa"
                        }
                      },
                      "diskIOPSReadWrite": 11,
                      "diskMBpsReadWrite": 13
                    }
                  ]
                },
                "osProfile": {
                  "computerNamePrefix": "{vmss-name}",
                  "adminUsername": "{your-username}",
                  "customData": "aaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "timeZone": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                    "additionalUnattendContent": [
                      {
                        "passName": "OobeSystem",
                        "componentName": "Microsoft-Windows-Shell-Setup",
                        "settingName": "AutoLogon",
                        "content": "aaaaaaaaaaaaaaaaaaaa"
                      }
                    ],
                    "patchSettings": {
                      "patchMode": "Manual",
                      "enableHotpatching": true,
                      "assessmentMode": "ImageDefault"
                    },
                    "winRM": {
                      "listeners": [
                        {
                          "protocol": "Http",
                          "certificateUrl": "aaaaaaaaaaaaaaaaaaaaaa"
                        }
                      ]
                    }
                  },
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "ssh": {
                      "publicKeys": [
                        {
                          "path": "aaa",
                          "keyData": "aaaaaa"
                        }
                      ]
                    },
                    "provisionVMAgent": true,
                    "patchSettings": {
                      "patchMode": "ImageDefault",
                      "assessmentMode": "ImageDefault"
                    }
                  },
                  "secrets": [
                    {
                      "sourceVault": {
                        "id": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}"
                      },
                      "vaultCertificates": [
                        {
                          "certificateUrl": "aaaaaaa",
                          "certificateStore": "aaaaaaaaaaaaaaaaaaaaaaaaa"
                        }
                      ]
                    }
                  ]
                },
                "networkProfile": {
                  "networkInterfaceConfigurations": [
                    {
                      "name": "{vmss-name}",
                      "properties": {
                        "primary": true,
                        "enableIPForwarding": true,
                        "ipConfigurations": [
                          {
                            "name": "{vmss-name}",
                            "properties": {
                              "subnet": {
                                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"
                              },
                              "primary": true,
                              "publicIPAddressConfiguration": {
                                "name": "aaaaaaaaaaaaaaaaaa",
                                "properties": {
                                  "idleTimeoutInMinutes": 18,
                                  "dnsSettings": {
                                    "domainNameLabel": "aaaaaaaaaaaaaaaaaa"
                                  },
                                  "ipTags": [
                                    {
                                      "ipTagType": "aaaaaaa",
                                      "tag": "aaaaaaaaaaaaaaaaaaaaaaaaaaa"
                                    }
                                  ],
                                  "publicIPPrefix": {
                                    "id": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}"
                                  },
                                  "publicIPAddressVersion": "IPv4",
                                  "deleteOption": "Delete"
                                },
                                "sku": {
                                  "name": "Basic",
                                  "tier": "Regional"
                                }
                              },
                              "privateIPAddressVersion": "IPv4",
                              "applicationGatewayBackendAddressPools": [
                                {
                                  "id": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}"
                                }
                              ],
                              "applicationSecurityGroups": [
                                {
                                  "id": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}"
                                }
                              ],
                              "loadBalancerBackendAddressPools": [
                                {
                                  "id": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}"
                                }
                              ],
                              "loadBalancerInboundNatPools": [
                                {
                                  "id": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}"
                                }
                              ]
                            },
                            "id": "aaaaaaaaaaaaa"
                          }
                        ],
                        "enableAcceleratedNetworking": true,
                        "enableFpga": true,
                        "networkSecurityGroup": {
                          "id": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}"
                        },
                        "dnsSettings": {
                          "dnsServers": [
                            "aaaaaaaaaaaa"
                          ]
                        },
                        "deleteOption": "Delete"
                      },
                      "id": "aaaaaaaaaaaaa"
                    }
                  ],
                  "healthProbe": {
                    "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/restorePointCollections/rpcName/restorePoints/restorePointName/diskRestorePoints/testingexcludedisk_OsDisk_1_74cdaedcea50483d9833c96adefa100f_22b4bdfe-6c54-4f72-84d8-85d8860f0c57"
                  },
                  "networkApiVersion": "2020-11-01"
                },
                "securityProfile": {
                  "uefiSettings": {
                    "secureBootEnabled": true,
                    "vTpmEnabled": true
                  },
                  "encryptionAtHost": true,
                  "securityType": "TrustedLaunch"
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "aaaaaaaaaaaaaaaaaaa"
                  }
                },
                "extensionProfile": {
                  "extensions": [
                    {
                      "name": "aa",
                      "type": "aaaaa",
                      "properties": {
                        "forceUpdateTag": "aaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "publisher": "aaaaaaaaaaaaa",
                        "type": "aaaaaaaa",
                        "typeHandlerVersion": "aaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "autoUpgradeMinorVersion": true,
                        "enableAutomaticUpgrade": true,
                        "settings": {},
                        "protectedSettings": {},
                        "provisioningState": "aaaaaaaaaaaaaa",
                        "provisionAfterExtensions": [
                          "aaaaaaaaaaaaaa"
                        ],
                        "suppressFailures": true
                      },
                      "id": "aaaaaaaaaaaaaaaaaaaaaa"
                    }
                  ],
                  "extensionsTimeBudget": "aaaaaaaaaaaaaaaaaaaaaaaaaa"
                },
                "licenseType": "aaaaaaaaaa",
                "priority": "Regular",
                "evictionPolicy": "Deallocate",
                "billingProfile": {
                  "maxPrice": 4
                },
                "scheduledEventsProfile": {
                  "terminateNotificationProfile": {
                    "notBeforeTimeout": "aa",
                    "enable": true
                  }
                },
                "userData": "aaa",
                "capacityReservation": {
                  "capacityReservationGroup": {
                    "id": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}"
                  }
                },
                "applicationProfile": {
                  "galleryApplications": [
                    {
                      "tags": "aaaaaaaaaaa",
                      "order": 29,
                      "packageReferenceId": "aaaaaaaaaa",
                      "configurationReference": "aaaaa"
                    }
                  ]
                }
              },
              "upgradePolicy": {
                "mode": "Manual",
                "rollingUpgradePolicy": {
                  "maxBatchInstancePercent": 49,
                  "maxUnhealthyInstancePercent": 81,
                  "maxUnhealthyUpgradedInstancePercent": 98,
                  "pauseTimeBetweenBatches": "aaaaaaaaaaaaaaa",
                  "enableCrossZoneUpgrade": true,
                  "prioritizeUnhealthyInstances": true
                },
                "automaticOSUpgradePolicy": {
                  "enableAutomaticOSUpgrade": true,
                  "disableAutomaticRollback": true
                }
              },
              "automaticRepairsPolicy": {
                "enabled": true,
                "gracePeriod": "aaaaaaaaaaaaaaaaaaaaaaaaa"
              },
              "provisioningState": "succeeded",
              "doNotRunExtensionsOnOverprovisionedVMs": true,
              "uniqueId": "aaaaaaaa",
              "singlePlacementGroup": true,
              "zoneBalance": true,
              "platformFaultDomainCount": 1,
              "proximityPlacementGroup": {
                "id": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}"
              },
              "hostGroup": {
                "id": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}"
              },
              "additionalCapabilities": {
                "ultraSSDEnabled": true,
                "hibernationEnabled": true
              },
              "scaleInPolicy": {
                "rules": [
                  "Default"
                ],
                "forceDeletion": true
              },
              "orchestrationMode": "Uniform",
              "spotRestorePolicy": {
                "enabled": true,
                "restoreTimeout": "aaaaaaaaaa"
              }
            },
            "plan": {
              "name": "aaaaaaaaaa",
              "publisher": "aaaaaaaaaaaaaaaaaaaaaa",
              "product": "aaaaaaaaaaaaaaaaaaaa",
              "promotionCode": "aaaaaaaaaaaaaaaaaaaa"
            },
            "identity": {
              "principalId": "aaaaaaaaaaaaaaa",
              "tenantId": "aaaaaaaaaaaaaaaa",
              "type": "SystemAssigned",
              "userAssignedIdentities": {
                "key3951": {
                  "principalId": "aaaa",
                  "clientId": "aaaaaaaaaaaaaaaaaaaaaaaaaaa"
                }
              }
            },
            "zones": [
              "aaaaaaaaaaaaaaaaaaaa"
            ],
            "extendedLocation": {
              "name": "aaaaaaaaaaaaaaaaaaaaa",
              "type": "EdgeZone"
            },
            "id": "/subscriptions/{subscription-id}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}",
            "name": "{virtualMachineScaleSetName}",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "tags": {
              "key8425": "aaa"
            }
          }
        ],
        "nextLink": "aaaa"
      }
- name: VirtualMachineScaleSets_ListAll_MinimumSet_Gen
  request:
    uri: GET https://management.azure.com/subscriptions/{subscription-id}/providers/Microsoft.Compute/virtualMachineScaleSets?api-version=2022-03-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/{subscription-id}/providers/Microsoft.Compute/virtualMachineScaleSets?api-version=2022-03-01
      ```

  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "location": "westus"
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of
errorCodes: []
