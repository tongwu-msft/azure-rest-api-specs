### YamlMime:RESTOperation
uid: management.azure.com.compute.cloudservices.createorupdate
name: Create Or Update
service: Compute
groupName: Cloud Services
apiVersion: 2022-04-04
summary: Create or update a cloud service. Please note some properties can be set only during cloud service creation.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}?api-version=2022-04-04
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the resource group.
  types:
  - uid: string
- name: cloudServiceName
  in: path
  isRequired: true
  description: Name of the cloud service.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: Other Status Codes
  description: Error
  types:
  - uid: CloudError
- name: 200 OK
  description: OK
  types:
  - uid: CloudService
- name: 201 Created
  description: Created
  types:
  - uid: CloudService
requestBody:
- name: default
  parameters:
  - name: location
    in: body
    isRequired: true
    description: Resource location.
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    in: body
    description: Cloud service properties
    types:
    - uid: CloudServiceProperties
  - name: systemData
    in: body
    description: The system meta data relating to this resource.
    types:
    - uid: SystemData
requestHeader: []
definitions:
- name: CloudServiceProperties
  description: Cloud service properties
  kind: object
  properties:
  - name: packageUrl
    description: >-
      Specifies a URL that refers to the location of the service package in the Blob service. The service package URL can be Shared Access Signature (SAS) URI from any storage account.

      This is a write-only property and is not returned in GET calls.
    types:
    - uid: string
  - name: configuration
    description: Specifies the XML service configuration (.cscfg) for the cloud service.
    types:
    - uid: string
  - name: configurationUrl
    description: >-
      Specifies a URL that refers to the location of the service configuration in the Blob service. The service package URL  can be Shared Access Signature (SAS) URI from any storage account.

      This is a write-only property and is not returned in GET calls.
    types:
    - uid: string
  - name: startCloudService
    description: >-
      (Optional) Indicates whether to start the cloud service immediately after it is created. The default value is `true`.

      If false, the service model is still deployed, but the code is not run immediately. Instead, the service is PoweredOff until you call Start, at which time the service will be started. A deployed service still incurs charges, even if it is poweredoff.
    types:
    - uid: boolean
  - name: allowModelOverride
    description: >-
      (Optional) Indicates whether the role sku properties (roleProfile.roles.sku) specified in the model/template should override the role instance count and vm size specified in the .cscfg and .csdef respectively.

      The default value is `false`.
    types:
    - uid: boolean
  - name: upgradeMode
    description: >-
      Update mode for the cloud service. Role instances are allocated to update domains when the service is deployed. Updates can be initiated manually in each update domain or initiated automatically in all update domains.

      Possible Values are <br /><br />**Auto**<br /><br />**Manual** <br /><br />**Simultaneous**<br /><br />

      If not specified, the default value is Auto. If set to Manual, PUT UpdateDomain must be called to apply the update. If set to Auto, the update is automatically applied to each update domain in sequence.
    types:
    - uid: CloudServiceUpgradeMode
  - name: roleProfile
    description: Describes the role profile for the cloud service.
    types:
    - uid: CloudServiceRoleProfile
  - name: osProfile
    description: Describes the OS profile for the cloud service.
    types:
    - uid: CloudServiceOsProfile
  - name: networkProfile
    description: Network Profile for the cloud service.
    types:
    - uid: CloudServiceNetworkProfile
  - name: extensionProfile
    description: Describes a cloud service extension profile.
    types:
    - uid: CloudServiceExtensionProfile
  - name: provisioningState
    isReadyOnly: true
    description: The provisioning state, which only appears in the response.
    types:
    - uid: string
  - name: uniqueId
    isReadyOnly: true
    description: The unique identifier for the cloud service.
    types:
    - uid: string
- name: SystemData
  description: The system meta data relating to this resource.
  kind: object
  properties:
  - name: createdAt
    isReadyOnly: true
    description: 'Specifies the time in UTC at which the Cloud Service (extended support) resource was created. <br />Minimum api-version: 2022-04-04.'
    types:
    - uid: string
  - name: lastModifiedAt
    isReadyOnly: true
    description: 'Specifies the time in UTC at which the Cloud Service (extended support) resource was last modified. <br />Minimum api-version: 2022-04-04.'
    types:
    - uid: string
- name: CloudError
  description: An error response from the Compute service.
  kind: object
  properties:
  - name: error
    description: Api error.
    types:
    - uid: ApiError
- name: CloudService
  description: Describes the cloud service.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: Resource Id.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties
    description: Cloud service properties
    types:
    - uid: CloudServiceProperties
  - name: systemData
    description: The system meta data relating to this resource.
    types:
    - uid: SystemData
- name: CloudServiceUpgradeMode
  description: >-
    Update mode for the cloud service. Role instances are allocated to update domains when the service is deployed. Updates can be initiated manually in each update domain or initiated automatically in all update domains.

    Possible Values are <br /><br />**Auto**<br /><br />**Manual** <br /><br />**Simultaneous**<br /><br />

    If not specified, the default value is Auto. If set to Manual, PUT UpdateDomain must be called to apply the update. If set to Auto, the update is automatically applied to each update domain in sequence.
  kind: enum
  properties:
  - name: Auto
    types:
    - uid: string
  - name: Manual
    types:
    - uid: string
  - name: Simultaneous
    types:
    - uid: string
- name: CloudServiceRoleProfile
  description: Describes the role profile for the cloud service.
  kind: object
  properties:
  - name: roles
    description: List of roles for the cloud service.
    types:
    - uid: CloudServiceRoleProfileProperties
      isArray: true
- name: CloudServiceOsProfile
  description: Describes the OS profile for the cloud service.
  kind: object
  properties:
  - name: secrets
    description: Specifies set of certificates that should be installed onto the role instances.
    types:
    - uid: CloudServiceVaultSecretGroup
      isArray: true
- name: CloudServiceNetworkProfile
  description: Network Profile for the cloud service.
  kind: object
  properties:
  - name: loadBalancerConfigurations
    description: List of Load balancer configurations. Cloud service can have up to two load balancer configurations, corresponding to a Public Load Balancer and an Internal Load Balancer.
    types:
    - uid: LoadBalancerConfiguration
      isArray: true
  - name: slotType
    description: >-
      Slot type for the cloud service.

      Possible values are <br /><br />**Production**<br /><br />**Staging**<br /><br />

      If not specified, the default value is Production.
    types:
    - uid: CloudServiceSlotType
  - name: swappableCloudService
    description: The id reference of the cloud service containing the target IP with which the subject cloud service can perform a swap. This property cannot be updated once it is set. The swappable cloud service referred by this id must be present otherwise an error will be thrown.
    types:
    - uid: SubResource
- name: CloudServiceExtensionProfile
  description: Describes a cloud service extension profile.
  kind: object
  properties:
  - name: extensions
    description: List of extensions for the cloud service.
    types:
    - uid: Extension
      isArray: true
- name: ApiError
  description: Api error.
  kind: object
  properties:
  - name: details
    description: The Api error details
    types:
    - uid: ApiErrorBase
      isArray: true
  - name: innererror
    description: The Api inner error
    types:
    - uid: InnerError
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: CloudServiceRoleProfileProperties
  description: Describes the role properties.
  kind: object
  properties:
  - name: name
    description: Resource name.
    types:
    - uid: string
  - name: sku
    description: Describes the cloud service role sku.
    types:
    - uid: CloudServiceRoleSku
- name: CloudServiceVaultSecretGroup
  description: Describes a set of certificates which are all in the same Key Vault.
  kind: object
  properties:
  - name: sourceVault
    description: The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
    types:
    - uid: SubResource
  - name: vaultCertificates
    description: The list of key vault references in SourceVault which contain certificates.
    types:
    - uid: CloudServiceVaultCertificate
      isArray: true
- name: LoadBalancerConfiguration
  description: Describes the load balancer configuration.
  kind: object
  properties:
  - name: id
    description: Resource Id
    types:
    - uid: string
  - name: name
    description: The name of the Load balancer
    types:
    - uid: string
  - name: properties
    description: Properties of the load balancer configuration.
    types:
    - uid: LoadBalancerConfigurationProperties
- name: CloudServiceSlotType
  description: >-
    Slot type for the cloud service.

    Possible values are <br /><br />**Production**<br /><br />**Staging**<br /><br />

    If not specified, the default value is Production.
  kind: enum
  properties:
  - name: Production
    types:
    - uid: string
  - name: Staging
    types:
    - uid: string
- name: SubResource
  kind: object
  properties:
  - name: id
    description: Resource Id
    types:
    - uid: string
- name: Extension
  description: Describes a cloud service Extension.
  kind: object
  properties:
  - name: name
    description: The name of the extension.
    types:
    - uid: string
  - name: properties
    description: Extension Properties.
    types:
    - uid: CloudServiceExtensionProperties
- name: ApiErrorBase
  description: Api error base.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: InnerError
  description: Inner error details.
  kind: object
  properties:
  - name: exceptiontype
    description: The exception type.
    types:
    - uid: string
  - name: errordetail
    description: The internal error message or exception dump.
    types:
    - uid: string
- name: CloudServiceRoleSku
  description: Describes the cloud service role sku.
  kind: object
  properties:
  - name: name
    description: 'The sku name. NOTE: If the new SKU is not supported on the hardware the cloud service is currently on, you need to delete and recreate the cloud service or move back to the old sku.'
    types:
    - uid: string
  - name: tier
    description: Specifies the tier of the cloud service. Possible Values are <br /><br /> **Standard** <br /><br /> **Basic**
    types:
    - uid: string
  - name: capacity
    description: Specifies the number of role instances in the cloud service.
    types:
    - uid: integer
- name: CloudServiceVaultCertificate
  description: Describes a single certificate reference in a Key Vault, and where the certificate should reside on the role instance.
  kind: object
  properties:
  - name: certificateUrl
    description: This is the URL of a certificate that has been uploaded to Key Vault as a secret.
    types:
    - uid: string
- name: LoadBalancerConfigurationProperties
  description: Describes the properties of the load balancer configuration.
  kind: object
  properties:
  - name: frontendIPConfigurations
    description: Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
    types:
    - uid: LoadBalancerFrontendIPConfiguration
      isArray: true
- name: CloudServiceExtensionProperties
  description: Extension Properties.
  kind: object
  properties:
  - name: publisher
    description: The name of the extension handler publisher.
    types:
    - uid: string
  - name: type
    description: Specifies the type of the extension.
    types:
    - uid: string
  - name: typeHandlerVersion
    description: Specifies the version of the extension. Specifies the version of the extension. If this element is not specified or an asterisk (*) is used as the value, the latest version of the extension is used. If the value is specified with a major version number and an asterisk as the minor version number (X.), the latest minor version of the specified major version is selected. If a major version number and a minor version number are specified (X.Y), the specific extension version is selected. If a version is specified, an auto-upgrade is performed on the role instance.
    types:
    - uid: string
  - name: autoUpgradeMinorVersion
    description: Explicitly specify whether platform can automatically upgrade typeHandlerVersion to higher minor versions when they become available.
    types:
    - uid: boolean
  - name: settings
    description: Public settings for the extension. For JSON extensions, this is the JSON settings for the extension. For XML Extension (like RDP), this is the XML setting for the extension.
    types:
    - uid: object
  - name: protectedSettings
    description: Protected settings for the extension which are encrypted before sent to the role instance.
    types:
    - uid: object
  - name: protectedSettingsFromKeyVault
    description: Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
    types:
    - uid: CloudServiceVaultAndSecretReference
  - name: forceUpdateTag
    description: >-
      Tag to force apply the provided public and protected settings.

      Changing the tag value allows for re-running the extension without changing any of the public or protected settings.

      If forceUpdateTag is not changed, updates to public or protected settings would still be applied by the handler.

      If neither forceUpdateTag nor any of public or protected settings change, extension would flow to the role instance with the same sequence-number, and

      it is up to handler implementation whether to re-run it or not
    types:
    - uid: string
  - name: provisioningState
    isReadyOnly: true
    description: The provisioning state, which only appears in the response.
    types:
    - uid: string
  - name: rolesAppliedTo
    description: Optional list of roles to apply this extension. If property is not specified or '*' is specified, extension is applied to all roles in the cloud service.
    types:
    - uid: string
      isArray: true
- name: LoadBalancerFrontendIPConfiguration
  description: Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
    types:
    - uid: string
  - name: properties
    description: Properties of load balancer frontend ip configuration.
    types:
    - uid: LoadBalancerFrontendIPConfigurationProperties
- name: CloudServiceVaultAndSecretReference
  description: Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
  kind: object
  properties:
  - name: sourceVault
    description: The ARM Resource ID of the Key Vault
    types:
    - uid: SubResource
  - name: secretUrl
    description: Secret URL which contains the protected settings of the extension
    types:
    - uid: string
- name: LoadBalancerFrontendIPConfigurationProperties
  description: Describes a cloud service IP Configuration
  kind: object
  properties:
  - name: publicIPAddress
    description: The reference to the public ip address resource.
    types:
    - uid: SubResource
  - name: subnet
    description: The reference to the virtual network subnet resource.
    types:
    - uid: SubResource
  - name: privateIPAddress
    description: The virtual network private IP address of the IP configuration.
    types:
    - uid: string
examples:
- name: Create New Cloud Service with Single Role
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}?api-version=2022-04-04
    body: >-
      {
        "location": "westus",
        "properties": {
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/myPublicIP"
                        }
                      },
                      "name": "myfe"
                    }
                  ]
                },
                "name": "myLoadBalancer"
              }
            ]
          },
          "roleProfile": {
            "roles": [
              {
                "sku": {
                  "name": "Standard_D1_v2",
                  "capacity": 1,
                  "tier": "Standard"
                },
                "name": "ContosoFrontend"
              }
            ]
          },
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}?api-version=2022-04-04

      {
        "location": "westus",
        "properties": {
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/myPublicIP"
                        }
                      },
                      "name": "myfe"
                    }
                  ]
                },
                "name": "myLoadBalancer"
              }
            ]
          },
          "roleProfile": {
            "roles": [
              {
                "sku": {
                  "name": "Standard_D1_v2",
                  "capacity": 1,
                  "tier": "Standard"
                },
                "name": "ContosoFrontend"
              }
            ]
          },
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.CloudServiceInner;
      import com.azure.resourcemanager.compute.models.CloudServiceNetworkProfile;
      import com.azure.resourcemanager.compute.models.CloudServiceProperties;
      import com.azure.resourcemanager.compute.models.CloudServiceRoleProfile;
      import com.azure.resourcemanager.compute.models.CloudServiceRoleProfileProperties;
      import com.azure.resourcemanager.compute.models.CloudServiceRoleSku;
      import com.azure.resourcemanager.compute.models.CloudServiceUpgradeMode;
      import com.azure.resourcemanager.compute.models.LoadBalancerConfiguration;
      import com.azure.resourcemanager.compute.models.LoadBalancerConfigurationProperties;
      import com.azure.resourcemanager.compute.models.LoadBalancerFrontendIpConfiguration;
      import com.azure.resourcemanager.compute.models.LoadBalancerFrontendIpConfigurationProperties;
      import java.util.Arrays;

      /** Samples for CloudServices CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/CloudserviceRP/stable/2022-04-04/examples/CloudService_Create_WithSingleRole.json
           */
          /**
           * Sample code: Create New Cloud Service with Single Role.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createNewCloudServiceWithSingleRole(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getCloudServices()
                  .createOrUpdate(
                      "ConstosoRG",
                      "{cs-name}",
                      new CloudServiceInner()
                          .withLocation("westus")
                          .withProperties(
                              new CloudServiceProperties()
                                  .withPackageUrl("{PackageUrl}")
                                  .withConfiguration("{ServiceConfiguration}")
                                  .withUpgradeMode(CloudServiceUpgradeMode.AUTO)
                                  .withRoleProfile(
                                      new CloudServiceRoleProfile()
                                          .withRoles(
                                              Arrays
                                                  .asList(
                                                      new CloudServiceRoleProfileProperties()
                                                          .withName("ContosoFrontend")
                                                          .withSku(
                                                              new CloudServiceRoleSku()
                                                                  .withName("Standard_D1_v2")
                                                                  .withTier("Standard")
                                                                  .withCapacity(1L)))))
                                  .withNetworkProfile(
                                      new CloudServiceNetworkProfile()
                                          .withLoadBalancerConfigurations(
                                              Arrays
                                                  .asList(
                                                      new LoadBalancerConfiguration()
                                                          .withName("myLoadBalancer")
                                                          .withProperties(
                                                              new LoadBalancerConfigurationProperties()
                                                                  .withFrontendIpConfigurations(
                                                                      Arrays
                                                                          .asList(
                                                                              new LoadBalancerFrontendIpConfiguration()
                                                                                  .withName("myfe")
                                                                                  .withProperties(
                                                                                      new LoadBalancerFrontendIpConfigurationProperties()
                                                                                          .withPublicIpAddress(
                                                                                              new SubResource()
                                                                                                  .withId(
                                                                                                      "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/myPublicIP")))))))))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.19.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcompute_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v4"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/CloudserviceRP/stable/2022-04-04/examples/CloudService_Create_WithSingleRole.json
      func ExampleCloudServicesClient_BeginCreateOrUpdate_createNewCloudServiceWithSingleRole() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcompute.NewCloudServicesClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx, "ConstosoRG", "{cs-name}", armcompute.CloudService{
      		Location: to.Ptr("westus"),
      		Properties: &armcompute.CloudServiceProperties{
      			Configuration: to.Ptr("{ServiceConfiguration}"),
      			NetworkProfile: &armcompute.CloudServiceNetworkProfile{
      				LoadBalancerConfigurations: []*armcompute.LoadBalancerConfiguration{
      					{
      						Name: to.Ptr("myLoadBalancer"),
      						Properties: &armcompute.LoadBalancerConfigurationProperties{
      							FrontendIPConfigurations: []*armcompute.LoadBalancerFrontendIPConfiguration{
      								{
      									Name: to.Ptr("myfe"),
      									Properties: &armcompute.LoadBalancerFrontendIPConfigurationProperties{
      										PublicIPAddress: &armcompute.SubResource{
      											ID: to.Ptr("/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/myPublicIP"),
      										},
      									},
      								}},
      						},
      					}},
      			},
      			PackageURL: to.Ptr("{PackageUrl}"),
      			RoleProfile: &armcompute.CloudServiceRoleProfile{
      				Roles: []*armcompute.CloudServiceRoleProfileProperties{
      					{
      						Name: to.Ptr("ContosoFrontend"),
      						SKU: &armcompute.CloudServiceRoleSKU{
      							Name:     to.Ptr("Standard_D1_v2"),
      							Capacity: to.Ptr[int64](1),
      							Tier:     to.Ptr("Standard"),
      						},
      					}},
      			},
      			UpgradeMode: to.Ptr(armcompute.CloudServiceUpgradeModeAuto),
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcompute%2Farmcompute%2Fv4.0.0/sdk/resourcemanager/compute/armcompute/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update a cloud service. Please note some properties can be set only during cloud service creation.
       *
       * @summary Create or update a cloud service. Please note some properties can be set only during cloud service creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/CloudserviceRP/stable/2022-04-04/examples/CloudService_Create_WithSingleRole.json
       */
      async function createNewCloudServiceWithSingleRole() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "ConstosoRG";
        const cloudServiceName = "{cs-name}";
        const parameters = {
          location: "westus",
          properties: {
            configuration: "{ServiceConfiguration}",
            networkProfile: {
              loadBalancerConfigurations: [
                {
                  name: "myLoadBalancer",
                  properties: {
                    frontendIPConfigurations: [
                      {
                        name: "myfe",
                        properties: {
                          publicIPAddress: {
                            id: "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/myPublicIP",
                          },
                        },
                      },
                    ],
                  },
                },
              ],
            },
            packageUrl: "{PackageUrl}",
            roleProfile: {
              roles: [
                {
                  name: "ContosoFrontend",
                  sku: { name: "Standard_D1_v2", capacity: 1, tier: "Standard" },
                },
              ],
            },
            upgradeMode: "Auto",
          },
        };
        const options = { parameters };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.cloudServices.beginCreateOrUpdateAndWait(
          resourceGroupName,
          cloudServiceName,
          options
        );
        console.log(result);
      }

      createNewCloudServiceWithSingleRole().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "{cs-name}",
        "id": "/subscriptions/5393f919-a68a-43d0-9063-4b2bda6bffdf/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}",
        "type": "Microsoft.Compute/cloudServices",
        "location": "westus",
        "properties": {
          "packageUrl": "{PackageUrl}",
          "configuration": "{ServiceConfiguration}",
          "upgradeMode": "Auto",
          "roleProfile": {
            "roles": [
              {
                "name": "ContosoFrontend",
                "sku": {
                  "name": "Standard_D1_v2",
                  "tier": "Standard",
                  "capacity": 1
                }
              }
            ]
          },
          "osProfile": {
            "secrets": []
          },
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/myPublicIP"
                        }
                      },
                      "name": "myfe"
                    }
                  ]
                },
                "name": "myLoadBalancer"
              }
            ]
          },
          "provisioningState": "Updating",
          "uniqueId": "14d10b45-ced7-42ef-a406-50a3df2cea7d"
        },
        "systemData": {
          "createdAt": "2020-01-01T17:18:19.1234567Z",
          "lastModifiedAt": "2020-01-01T17:18:19.1234567Z"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "{cs-name}",
        "id": "/subscriptions/5393f919-a68a-43d0-9063-4b2bda6bffdf/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}",
        "type": "Microsoft.Compute/cloudServices",
        "location": "westus",
        "properties": {
          "packageUrl": "{PackageUrl}",
          "configuration": "{ServiceConfiguration}",
          "upgradeMode": "Auto",
          "roleProfile": {
            "roles": [
              {
                "name": "ContosoFrontend",
                "sku": {
                  "name": "Standard_D1_v2",
                  "tier": "Standard",
                  "capacity": 1
                }
              }
            ]
          },
          "osProfile": {
            "secrets": []
          },
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/myPublicIP"
                        }
                      },
                      "name": "myfe"
                    }
                  ]
                },
                "name": "myLoadBalancer"
              }
            ]
          },
          "provisioningState": "Creating",
          "uniqueId": "14d10b45-ced7-42ef-a406-50a3df2cea7d"
        },
        "systemData": {
          "createdAt": "2020-01-01T17:18:19.1234567Z",
          "lastModifiedAt": "2020-01-01T17:18:19.1234567Z"
        }
      }
- name: Create New Cloud Service with Single Role and RDP Extension
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}?api-version=2022-04-04
    body: >-
      {
        "properties": {
          "extensionProfile": {
            "extensions": [
              {
                "properties": {
                  "type": "RDP",
                  "autoUpgradeMinorVersion": false,
                  "protectedSettings": "<PrivateConfig><Password>{password}</Password></PrivateConfig>",
                  "publisher": "Microsoft.Windows.Azure.Extensions",
                  "settings": "<PublicConfig><UserName>UserAzure</UserName><Expiration>10/22/2021 15:05:45</Expiration></PublicConfig>",
                  "typeHandlerVersion": "1.2"
                },
                "name": "RDPExtension"
              }
            ]
          },
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"
                        }
                      },
                      "name": "contosofe"
                    }
                  ]
                },
                "name": "contosolb"
              }
            ]
          },
          "roleProfile": {
            "roles": [
              {
                "sku": {
                  "name": "Standard_D1_v2",
                  "capacity": 1,
                  "tier": "Standard"
                },
                "name": "ContosoFrontend"
              }
            ]
          },
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto"
        },
        "location": "westus"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}?api-version=2022-04-04

      {
        "properties": {
          "extensionProfile": {
            "extensions": [
              {
                "properties": {
                  "type": "RDP",
                  "autoUpgradeMinorVersion": false,
                  "protectedSettings": "<PrivateConfig><Password>{password}</Password></PrivateConfig>",
                  "publisher": "Microsoft.Windows.Azure.Extensions",
                  "settings": "<PublicConfig><UserName>UserAzure</UserName><Expiration>10/22/2021 15:05:45</Expiration></PublicConfig>",
                  "typeHandlerVersion": "1.2"
                },
                "name": "RDPExtension"
              }
            ]
          },
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"
                        }
                      },
                      "name": "contosofe"
                    }
                  ]
                },
                "name": "contosolb"
              }
            ]
          },
          "roleProfile": {
            "roles": [
              {
                "sku": {
                  "name": "Standard_D1_v2",
                  "capacity": 1,
                  "tier": "Standard"
                },
                "name": "ContosoFrontend"
              }
            ]
          },
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto"
        },
        "location": "westus"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.CloudServiceInner;
      import com.azure.resourcemanager.compute.models.CloudServiceExtensionProfile;
      import com.azure.resourcemanager.compute.models.CloudServiceExtensionProperties;
      import com.azure.resourcemanager.compute.models.CloudServiceNetworkProfile;
      import com.azure.resourcemanager.compute.models.CloudServiceProperties;
      import com.azure.resourcemanager.compute.models.CloudServiceRoleProfile;
      import com.azure.resourcemanager.compute.models.CloudServiceRoleProfileProperties;
      import com.azure.resourcemanager.compute.models.CloudServiceRoleSku;
      import com.azure.resourcemanager.compute.models.CloudServiceUpgradeMode;
      import com.azure.resourcemanager.compute.models.Extension;
      import com.azure.resourcemanager.compute.models.LoadBalancerConfiguration;
      import com.azure.resourcemanager.compute.models.LoadBalancerConfigurationProperties;
      import com.azure.resourcemanager.compute.models.LoadBalancerFrontendIpConfiguration;
      import com.azure.resourcemanager.compute.models.LoadBalancerFrontendIpConfigurationProperties;
      import java.util.Arrays;

      /** Samples for CloudServices CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/CloudserviceRP/stable/2022-04-04/examples/CloudService_Create_WithSingleRoleAndRDP.json
           */
          /**
           * Sample code: Create New Cloud Service with Single Role and RDP Extension.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createNewCloudServiceWithSingleRoleAndRDPExtension(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getCloudServices()
                  .createOrUpdate(
                      "ConstosoRG",
                      "{cs-name}",
                      new CloudServiceInner()
                          .withLocation("westus")
                          .withProperties(
                              new CloudServiceProperties()
                                  .withPackageUrl("{PackageUrl}")
                                  .withConfiguration("{ServiceConfiguration}")
                                  .withUpgradeMode(CloudServiceUpgradeMode.AUTO)
                                  .withRoleProfile(
                                      new CloudServiceRoleProfile()
                                          .withRoles(
                                              Arrays
                                                  .asList(
                                                      new CloudServiceRoleProfileProperties()
                                                          .withName("ContosoFrontend")
                                                          .withSku(
                                                              new CloudServiceRoleSku()
                                                                  .withName("Standard_D1_v2")
                                                                  .withTier("Standard")
                                                                  .withCapacity(1L)))))
                                  .withNetworkProfile(
                                      new CloudServiceNetworkProfile()
                                          .withLoadBalancerConfigurations(
                                              Arrays
                                                  .asList(
                                                      new LoadBalancerConfiguration()
                                                          .withName("contosolb")
                                                          .withProperties(
                                                              new LoadBalancerConfigurationProperties()
                                                                  .withFrontendIpConfigurations(
                                                                      Arrays
                                                                          .asList(
                                                                              new LoadBalancerFrontendIpConfiguration()
                                                                                  .withName("contosofe")
                                                                                  .withProperties(
                                                                                      new LoadBalancerFrontendIpConfigurationProperties()
                                                                                          .withPublicIpAddress(
                                                                                              new SubResource()
                                                                                                  .withId(
                                                                                                      "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip")))))))))
                                  .withExtensionProfile(
                                      new CloudServiceExtensionProfile()
                                          .withExtensions(
                                              Arrays
                                                  .asList(
                                                      new Extension()
                                                          .withName("RDPExtension")
                                                          .withProperties(
                                                              new CloudServiceExtensionProperties()
                                                                  .withPublisher("Microsoft.Windows.Azure.Extensions")
                                                                  .withType("RDP")
                                                                  .withTypeHandlerVersion("1.2")
                                                                  .withAutoUpgradeMinorVersion(false)
                                                                  .withSettings(
                                                                      "<PublicConfig><UserName>UserAzure</UserName><Expiration>10/22/2021"
                                                                          + " 15:05:45</Expiration></PublicConfig>")
                                                                  .withProtectedSettings(
                                                                      "<PrivateConfig><Password>{password}</Password></PrivateConfig>")))))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.19.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcompute_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v4"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/CloudserviceRP/stable/2022-04-04/examples/CloudService_Create_WithSingleRoleAndRDP.json
      func ExampleCloudServicesClient_BeginCreateOrUpdate_createNewCloudServiceWithSingleRoleAndRdpExtension() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcompute.NewCloudServicesClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx, "ConstosoRG", "{cs-name}", armcompute.CloudService{
      		Location: to.Ptr("westus"),
      		Properties: &armcompute.CloudServiceProperties{
      			Configuration: to.Ptr("{ServiceConfiguration}"),
      			ExtensionProfile: &armcompute.CloudServiceExtensionProfile{
      				Extensions: []*armcompute.Extension{
      					{
      						Name: to.Ptr("RDPExtension"),
      						Properties: &armcompute.CloudServiceExtensionProperties{
      							Type:                    to.Ptr("RDP"),
      							AutoUpgradeMinorVersion: to.Ptr(false),
      							ProtectedSettings:       "<PrivateConfig><Password>{password}</Password></PrivateConfig>",
      							Publisher:               to.Ptr("Microsoft.Windows.Azure.Extensions"),
      							Settings:                "<PublicConfig><UserName>UserAzure</UserName><Expiration>10/22/2021 15:05:45</Expiration></PublicConfig>",
      							TypeHandlerVersion:      to.Ptr("1.2"),
      						},
      					}},
      			},
      			NetworkProfile: &armcompute.CloudServiceNetworkProfile{
      				LoadBalancerConfigurations: []*armcompute.LoadBalancerConfiguration{
      					{
      						Name: to.Ptr("contosolb"),
      						Properties: &armcompute.LoadBalancerConfigurationProperties{
      							FrontendIPConfigurations: []*armcompute.LoadBalancerFrontendIPConfiguration{
      								{
      									Name: to.Ptr("contosofe"),
      									Properties: &armcompute.LoadBalancerFrontendIPConfigurationProperties{
      										PublicIPAddress: &armcompute.SubResource{
      											ID: to.Ptr("/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"),
      										},
      									},
      								}},
      						},
      					}},
      			},
      			PackageURL: to.Ptr("{PackageUrl}"),
      			RoleProfile: &armcompute.CloudServiceRoleProfile{
      				Roles: []*armcompute.CloudServiceRoleProfileProperties{
      					{
      						Name: to.Ptr("ContosoFrontend"),
      						SKU: &armcompute.CloudServiceRoleSKU{
      							Name:     to.Ptr("Standard_D1_v2"),
      							Capacity: to.Ptr[int64](1),
      							Tier:     to.Ptr("Standard"),
      						},
      					}},
      			},
      			UpgradeMode: to.Ptr(armcompute.CloudServiceUpgradeModeAuto),
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcompute%2Farmcompute%2Fv4.0.0/sdk/resourcemanager/compute/armcompute/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update a cloud service. Please note some properties can be set only during cloud service creation.
       *
       * @summary Create or update a cloud service. Please note some properties can be set only during cloud service creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/CloudserviceRP/stable/2022-04-04/examples/CloudService_Create_WithSingleRoleAndRDP.json
       */
      async function createNewCloudServiceWithSingleRoleAndRdpExtension() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "ConstosoRG";
        const cloudServiceName = "{cs-name}";
        const parameters = {
          location: "westus",
          properties: {
            configuration: "{ServiceConfiguration}",
            extensionProfile: {
              extensions: [
                {
                  name: "RDPExtension",
                  properties: {
                    type: "RDP",
                    autoUpgradeMinorVersion: false,
                    protectedSettings: "<PrivateConfig><Password>{password}</Password></PrivateConfig>",
                    publisher: "Microsoft.Windows.Azure.Extensions",
                    settings:
                      "<PublicConfig><UserName>UserAzure</UserName><Expiration>10/22/2021 15:05:45</Expiration></PublicConfig>",
                    typeHandlerVersion: "1.2",
                  },
                },
              ],
            },
            networkProfile: {
              loadBalancerConfigurations: [
                {
                  name: "contosolb",
                  properties: {
                    frontendIPConfigurations: [
                      {
                        name: "contosofe",
                        properties: {
                          publicIPAddress: {
                            id: "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip",
                          },
                        },
                      },
                    ],
                  },
                },
              ],
            },
            packageUrl: "{PackageUrl}",
            roleProfile: {
              roles: [
                {
                  name: "ContosoFrontend",
                  sku: { name: "Standard_D1_v2", capacity: 1, tier: "Standard" },
                },
              ],
            },
            upgradeMode: "Auto",
          },
        };
        const options = { parameters };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.cloudServices.beginCreateOrUpdateAndWait(
          resourceGroupName,
          cloudServiceName,
          options
        );
        console.log(result);
      }

      createNewCloudServiceWithSingleRoleAndRdpExtension().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "{cs-name}",
        "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}",
        "type": "Microsoft.Compute/cloudServices",
        "location": "westus",
        "properties": {
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto",
          "roleProfile": {
            "roles": [
              {
                "name": "ContosoFrontend",
                "sku": {
                  "name": "Standard_D1_v2",
                  "tier": "Standard",
                  "capacity": 1
                }
              }
            ]
          },
          "osProfile": {
            "secrets": []
          },
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "name": "contosolb",
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "name": "contosofe",
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "RDPExtension",
                "properties": {
                  "autoUpgradeMinorVersion": false,
                  "provisioningState": "Creating",
                  "rolesAppliedTo": [
                    "*"
                  ],
                  "publisher": "Microsoft.Windows.Azure.Extensions",
                  "type": "RDP",
                  "typeHandlerVersion": "1.2",
                  "settings": "<PublicConfig><UserName>UserAzure</UserName><Expiration>10/22/2021 15:05:45</Expiration></PublicConfig>"
                }
              }
            ]
          },
          "provisioningState": "Updating",
          "uniqueId": "c948cccb-bbfa-4516-a250-c28abc4d0c15"
        },
        "systemData": {
          "createdAt": "2020-01-01T17:18:19.1234567Z",
          "lastModifiedAt": "2020-01-01T17:18:19.1234567Z"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "{cs-name}",
        "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}",
        "type": "Microsoft.Compute/cloudServices",
        "location": "westus",
        "properties": {
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto",
          "roleProfile": {
            "roles": [
              {
                "name": "ContosoFrontend",
                "sku": {
                  "name": "Standard_D1_v2",
                  "tier": "Standard",
                  "capacity": 1
                }
              }
            ]
          },
          "osProfile": {
            "secrets": []
          },
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "name": "contosolb",
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "name": "contosofe",
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "RDPExtension",
                "properties": {
                  "autoUpgradeMinorVersion": false,
                  "provisioningState": "Creating",
                  "rolesAppliedTo": [
                    "*"
                  ],
                  "publisher": "Microsoft.Windows.Azure.Extensions",
                  "type": "RDP",
                  "typeHandlerVersion": "1.2",
                  "settings": "<PublicConfig><UserName>UserAzure</UserName><Expiration>10/22/2021 15:05:45</Expiration></PublicConfig>"
                }
              }
            ]
          },
          "provisioningState": "Creating",
          "uniqueId": "c948cccb-bbfa-4516-a250-c28abc4d0c15"
        },
        "systemData": {
          "createdAt": "2020-01-01T17:18:19.1234567Z",
          "lastModifiedAt": "2020-01-01T17:18:19.1234567Z"
        }
      }
- name: Create New Cloud Service with Multiple Roles
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}?api-version=2022-04-04
    body: >-
      {
        "properties": {
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"
                        }
                      },
                      "name": "contosofe"
                    }
                  ]
                },
                "name": "contosolb"
              }
            ]
          },
          "roleProfile": {
            "roles": [
              {
                "sku": {
                  "name": "Standard_D1_v2",
                  "capacity": 1,
                  "tier": "Standard"
                },
                "name": "ContosoFrontend"
              },
              {
                "sku": {
                  "name": "Standard_D1_v2",
                  "capacity": 1,
                  "tier": "Standard"
                },
                "name": "ContosoBackend"
              }
            ]
          },
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto"
        },
        "location": "westus"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}?api-version=2022-04-04

      {
        "properties": {
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"
                        }
                      },
                      "name": "contosofe"
                    }
                  ]
                },
                "name": "contosolb"
              }
            ]
          },
          "roleProfile": {
            "roles": [
              {
                "sku": {
                  "name": "Standard_D1_v2",
                  "capacity": 1,
                  "tier": "Standard"
                },
                "name": "ContosoFrontend"
              },
              {
                "sku": {
                  "name": "Standard_D1_v2",
                  "capacity": 1,
                  "tier": "Standard"
                },
                "name": "ContosoBackend"
              }
            ]
          },
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto"
        },
        "location": "westus"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.CloudServiceInner;
      import com.azure.resourcemanager.compute.models.CloudServiceNetworkProfile;
      import com.azure.resourcemanager.compute.models.CloudServiceProperties;
      import com.azure.resourcemanager.compute.models.CloudServiceRoleProfile;
      import com.azure.resourcemanager.compute.models.CloudServiceRoleProfileProperties;
      import com.azure.resourcemanager.compute.models.CloudServiceRoleSku;
      import com.azure.resourcemanager.compute.models.CloudServiceUpgradeMode;
      import com.azure.resourcemanager.compute.models.LoadBalancerConfiguration;
      import com.azure.resourcemanager.compute.models.LoadBalancerConfigurationProperties;
      import com.azure.resourcemanager.compute.models.LoadBalancerFrontendIpConfiguration;
      import com.azure.resourcemanager.compute.models.LoadBalancerFrontendIpConfigurationProperties;
      import java.util.Arrays;

      /** Samples for CloudServices CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/CloudserviceRP/stable/2022-04-04/examples/CloudService_Create_WithMultiRole.json
           */
          /**
           * Sample code: Create New Cloud Service with Multiple Roles.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createNewCloudServiceWithMultipleRoles(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getCloudServices()
                  .createOrUpdate(
                      "ConstosoRG",
                      "{cs-name}",
                      new CloudServiceInner()
                          .withLocation("westus")
                          .withProperties(
                              new CloudServiceProperties()
                                  .withPackageUrl("{PackageUrl}")
                                  .withConfiguration("{ServiceConfiguration}")
                                  .withUpgradeMode(CloudServiceUpgradeMode.AUTO)
                                  .withRoleProfile(
                                      new CloudServiceRoleProfile()
                                          .withRoles(
                                              Arrays
                                                  .asList(
                                                      new CloudServiceRoleProfileProperties()
                                                          .withName("ContosoFrontend")
                                                          .withSku(
                                                              new CloudServiceRoleSku()
                                                                  .withName("Standard_D1_v2")
                                                                  .withTier("Standard")
                                                                  .withCapacity(1L)),
                                                      new CloudServiceRoleProfileProperties()
                                                          .withName("ContosoBackend")
                                                          .withSku(
                                                              new CloudServiceRoleSku()
                                                                  .withName("Standard_D1_v2")
                                                                  .withTier("Standard")
                                                                  .withCapacity(1L)))))
                                  .withNetworkProfile(
                                      new CloudServiceNetworkProfile()
                                          .withLoadBalancerConfigurations(
                                              Arrays
                                                  .asList(
                                                      new LoadBalancerConfiguration()
                                                          .withName("contosolb")
                                                          .withProperties(
                                                              new LoadBalancerConfigurationProperties()
                                                                  .withFrontendIpConfigurations(
                                                                      Arrays
                                                                          .asList(
                                                                              new LoadBalancerFrontendIpConfiguration()
                                                                                  .withName("contosofe")
                                                                                  .withProperties(
                                                                                      new LoadBalancerFrontendIpConfigurationProperties()
                                                                                          .withPublicIpAddress(
                                                                                              new SubResource()
                                                                                                  .withId(
                                                                                                      "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip")))))))))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.19.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcompute_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v4"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/CloudserviceRP/stable/2022-04-04/examples/CloudService_Create_WithMultiRole.json
      func ExampleCloudServicesClient_BeginCreateOrUpdate_createNewCloudServiceWithMultipleRoles() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcompute.NewCloudServicesClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx, "ConstosoRG", "{cs-name}", armcompute.CloudService{
      		Location: to.Ptr("westus"),
      		Properties: &armcompute.CloudServiceProperties{
      			Configuration: to.Ptr("{ServiceConfiguration}"),
      			NetworkProfile: &armcompute.CloudServiceNetworkProfile{
      				LoadBalancerConfigurations: []*armcompute.LoadBalancerConfiguration{
      					{
      						Name: to.Ptr("contosolb"),
      						Properties: &armcompute.LoadBalancerConfigurationProperties{
      							FrontendIPConfigurations: []*armcompute.LoadBalancerFrontendIPConfiguration{
      								{
      									Name: to.Ptr("contosofe"),
      									Properties: &armcompute.LoadBalancerFrontendIPConfigurationProperties{
      										PublicIPAddress: &armcompute.SubResource{
      											ID: to.Ptr("/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"),
      										},
      									},
      								}},
      						},
      					}},
      			},
      			PackageURL: to.Ptr("{PackageUrl}"),
      			RoleProfile: &armcompute.CloudServiceRoleProfile{
      				Roles: []*armcompute.CloudServiceRoleProfileProperties{
      					{
      						Name: to.Ptr("ContosoFrontend"),
      						SKU: &armcompute.CloudServiceRoleSKU{
      							Name:     to.Ptr("Standard_D1_v2"),
      							Capacity: to.Ptr[int64](1),
      							Tier:     to.Ptr("Standard"),
      						},
      					},
      					{
      						Name: to.Ptr("ContosoBackend"),
      						SKU: &armcompute.CloudServiceRoleSKU{
      							Name:     to.Ptr("Standard_D1_v2"),
      							Capacity: to.Ptr[int64](1),
      							Tier:     to.Ptr("Standard"),
      						},
      					}},
      			},
      			UpgradeMode: to.Ptr(armcompute.CloudServiceUpgradeModeAuto),
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcompute%2Farmcompute%2Fv4.0.0/sdk/resourcemanager/compute/armcompute/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update a cloud service. Please note some properties can be set only during cloud service creation.
       *
       * @summary Create or update a cloud service. Please note some properties can be set only during cloud service creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/CloudserviceRP/stable/2022-04-04/examples/CloudService_Create_WithMultiRole.json
       */
      async function createNewCloudServiceWithMultipleRoles() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "ConstosoRG";
        const cloudServiceName = "{cs-name}";
        const parameters = {
          location: "westus",
          properties: {
            configuration: "{ServiceConfiguration}",
            networkProfile: {
              loadBalancerConfigurations: [
                {
                  name: "contosolb",
                  properties: {
                    frontendIPConfigurations: [
                      {
                        name: "contosofe",
                        properties: {
                          publicIPAddress: {
                            id: "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip",
                          },
                        },
                      },
                    ],
                  },
                },
              ],
            },
            packageUrl: "{PackageUrl}",
            roleProfile: {
              roles: [
                {
                  name: "ContosoFrontend",
                  sku: { name: "Standard_D1_v2", capacity: 1, tier: "Standard" },
                },
                {
                  name: "ContosoBackend",
                  sku: { name: "Standard_D1_v2", capacity: 1, tier: "Standard" },
                },
              ],
            },
            upgradeMode: "Auto",
          },
        };
        const options = { parameters };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.cloudServices.beginCreateOrUpdateAndWait(
          resourceGroupName,
          cloudServiceName,
          options
        );
        console.log(result);
      }

      createNewCloudServiceWithMultipleRoles().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "{cs-name}",
        "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}",
        "type": "Microsoft.Compute/cloudServices",
        "location": "westus",
        "properties": {
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto",
          "roleProfile": {
            "roles": [
              {
                "name": "ContosoFrontend",
                "sku": {
                  "name": "Standard_D1_v2",
                  "tier": "Standard",
                  "capacity": 1
                }
              },
              {
                "name": "ContosoBackend",
                "sku": {
                  "name": "Standard_D1_v2",
                  "tier": "Standard",
                  "capacity": 1
                }
              }
            ]
          },
          "osProfile": {
            "secrets": []
          },
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "name": "contosolb",
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "name": "contosofe",
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "provisioningState": "Updating",
          "uniqueId": "7f3edf91-cb34-4a3e-971a-177dc3dd43cb"
        },
        "systemData": {
          "createdAt": "2020-01-01T17:18:19.1234567Z",
          "lastModifiedAt": "2020-01-01T17:18:19.1234567Z"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "{cs-name}",
        "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}",
        "type": "Microsoft.Compute/cloudServices",
        "location": "westus",
        "properties": {
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto",
          "roleProfile": {
            "roles": [
              {
                "name": "ContosoFrontend",
                "sku": {
                  "name": "Standard_D1_v2",
                  "tier": "Standard",
                  "capacity": 1
                }
              },
              {
                "name": "ContosoBackend",
                "sku": {
                  "name": "Standard_D1_v2",
                  "tier": "Standard",
                  "capacity": 1
                }
              }
            ]
          },
          "osProfile": {
            "secrets": []
          },
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "name": "contosolb",
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "name": "contosofe",
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "provisioningState": "Creating",
          "uniqueId": "7f3edf91-cb34-4a3e-971a-177dc3dd43cb"
        },
        "systemData": {
          "createdAt": "2020-01-01T17:18:19.1234567Z",
          "lastModifiedAt": "2020-01-01T17:18:19.1234567Z"
        }
      }
- name: Create New Cloud Service with Single Role and Certificate from Key Vault
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}?api-version=2022-04-04
    body: >-
      {
        "location": "westus",
        "properties": {
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"
                        }
                      },
                      "name": "contosofe"
                    }
                  ]
                },
                "name": "contosolb"
              }
            ]
          },
          "osProfile": {
            "secrets": [
              {
                "sourceVault": {
                  "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.KeyVault/vaults/{keyvault-name}"
                },
                "vaultCertificates": [
                  {
                    "certificateUrl": "https://{keyvault-name}.vault.azure.net:443/secrets/ContosoCertificate/{secret-id}"
                  }
                ]
              }
            ]
          },
          "roleProfile": {
            "roles": [
              {
                "sku": {
                  "name": "Standard_D1_v2",
                  "capacity": 1,
                  "tier": "Standard"
                },
                "name": "ContosoFrontend"
              }
            ]
          },
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}?api-version=2022-04-04

      {
        "location": "westus",
        "properties": {
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"
                        }
                      },
                      "name": "contosofe"
                    }
                  ]
                },
                "name": "contosolb"
              }
            ]
          },
          "osProfile": {
            "secrets": [
              {
                "sourceVault": {
                  "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.KeyVault/vaults/{keyvault-name}"
                },
                "vaultCertificates": [
                  {
                    "certificateUrl": "https://{keyvault-name}.vault.azure.net:443/secrets/ContosoCertificate/{secret-id}"
                  }
                ]
              }
            ]
          },
          "roleProfile": {
            "roles": [
              {
                "sku": {
                  "name": "Standard_D1_v2",
                  "capacity": 1,
                  "tier": "Standard"
                },
                "name": "ContosoFrontend"
              }
            ]
          },
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.fluent.models.CloudServiceInner;
      import com.azure.resourcemanager.compute.models.CloudServiceNetworkProfile;
      import com.azure.resourcemanager.compute.models.CloudServiceOsProfile;
      import com.azure.resourcemanager.compute.models.CloudServiceProperties;
      import com.azure.resourcemanager.compute.models.CloudServiceRoleProfile;
      import com.azure.resourcemanager.compute.models.CloudServiceRoleProfileProperties;
      import com.azure.resourcemanager.compute.models.CloudServiceRoleSku;
      import com.azure.resourcemanager.compute.models.CloudServiceUpgradeMode;
      import com.azure.resourcemanager.compute.models.CloudServiceVaultCertificate;
      import com.azure.resourcemanager.compute.models.CloudServiceVaultSecretGroup;
      import com.azure.resourcemanager.compute.models.LoadBalancerConfiguration;
      import com.azure.resourcemanager.compute.models.LoadBalancerConfigurationProperties;
      import com.azure.resourcemanager.compute.models.LoadBalancerFrontendIpConfiguration;
      import com.azure.resourcemanager.compute.models.LoadBalancerFrontendIpConfigurationProperties;
      import java.util.Arrays;

      /** Samples for CloudServices CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/CloudserviceRP/stable/2022-04-04/examples/CloudService_Create_WithSingleRoleAndCertificate.json
           */
          /**
           * Sample code: Create New Cloud Service with Single Role and Certificate from Key Vault.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createNewCloudServiceWithSingleRoleAndCertificateFromKeyVault(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getCloudServices()
                  .createOrUpdate(
                      "ConstosoRG",
                      "{cs-name}",
                      new CloudServiceInner()
                          .withLocation("westus")
                          .withProperties(
                              new CloudServiceProperties()
                                  .withPackageUrl("{PackageUrl}")
                                  .withConfiguration("{ServiceConfiguration}")
                                  .withUpgradeMode(CloudServiceUpgradeMode.AUTO)
                                  .withRoleProfile(
                                      new CloudServiceRoleProfile()
                                          .withRoles(
                                              Arrays
                                                  .asList(
                                                      new CloudServiceRoleProfileProperties()
                                                          .withName("ContosoFrontend")
                                                          .withSku(
                                                              new CloudServiceRoleSku()
                                                                  .withName("Standard_D1_v2")
                                                                  .withTier("Standard")
                                                                  .withCapacity(1L)))))
                                  .withOsProfile(
                                      new CloudServiceOsProfile()
                                          .withSecrets(
                                              Arrays
                                                  .asList(
                                                      new CloudServiceVaultSecretGroup()
                                                          .withSourceVault(
                                                              new SubResource()
                                                                  .withId(
                                                                      "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.KeyVault/vaults/{keyvault-name}"))
                                                          .withVaultCertificates(
                                                              Arrays
                                                                  .asList(
                                                                      new CloudServiceVaultCertificate()
                                                                          .withCertificateUrl(
                                                                              "https://{keyvault-name}.vault.azure.net:443/secrets/ContosoCertificate/{secret-id}"))))))
                                  .withNetworkProfile(
                                      new CloudServiceNetworkProfile()
                                          .withLoadBalancerConfigurations(
                                              Arrays
                                                  .asList(
                                                      new LoadBalancerConfiguration()
                                                          .withName("contosolb")
                                                          .withProperties(
                                                              new LoadBalancerConfigurationProperties()
                                                                  .withFrontendIpConfigurations(
                                                                      Arrays
                                                                          .asList(
                                                                              new LoadBalancerFrontendIpConfiguration()
                                                                                  .withName("contosofe")
                                                                                  .withProperties(
                                                                                      new LoadBalancerFrontendIpConfigurationProperties()
                                                                                          .withPublicIpAddress(
                                                                                              new SubResource()
                                                                                                  .withId(
                                                                                                      "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip")))))))))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.19.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcompute_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v4"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/CloudserviceRP/stable/2022-04-04/examples/CloudService_Create_WithSingleRoleAndCertificate.json
      func ExampleCloudServicesClient_BeginCreateOrUpdate_createNewCloudServiceWithSingleRoleAndCertificateFromKeyVault() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcompute.NewCloudServicesClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx, "ConstosoRG", "{cs-name}", armcompute.CloudService{
      		Location: to.Ptr("westus"),
      		Properties: &armcompute.CloudServiceProperties{
      			Configuration: to.Ptr("{ServiceConfiguration}"),
      			NetworkProfile: &armcompute.CloudServiceNetworkProfile{
      				LoadBalancerConfigurations: []*armcompute.LoadBalancerConfiguration{
      					{
      						Name: to.Ptr("contosolb"),
      						Properties: &armcompute.LoadBalancerConfigurationProperties{
      							FrontendIPConfigurations: []*armcompute.LoadBalancerFrontendIPConfiguration{
      								{
      									Name: to.Ptr("contosofe"),
      									Properties: &armcompute.LoadBalancerFrontendIPConfigurationProperties{
      										PublicIPAddress: &armcompute.SubResource{
      											ID: to.Ptr("/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"),
      										},
      									},
      								}},
      						},
      					}},
      			},
      			OSProfile: &armcompute.CloudServiceOsProfile{
      				Secrets: []*armcompute.CloudServiceVaultSecretGroup{
      					{
      						SourceVault: &armcompute.SubResource{
      							ID: to.Ptr("/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.KeyVault/vaults/{keyvault-name}"),
      						},
      						VaultCertificates: []*armcompute.CloudServiceVaultCertificate{
      							{
      								CertificateURL: to.Ptr("https://{keyvault-name}.vault.azure.net:443/secrets/ContosoCertificate/{secret-id}"),
      							}},
      					}},
      			},
      			PackageURL: to.Ptr("{PackageUrl}"),
      			RoleProfile: &armcompute.CloudServiceRoleProfile{
      				Roles: []*armcompute.CloudServiceRoleProfileProperties{
      					{
      						Name: to.Ptr("ContosoFrontend"),
      						SKU: &armcompute.CloudServiceRoleSKU{
      							Name:     to.Ptr("Standard_D1_v2"),
      							Capacity: to.Ptr[int64](1),
      							Tier:     to.Ptr("Standard"),
      						},
      					}},
      			},
      			UpgradeMode: to.Ptr(armcompute.CloudServiceUpgradeModeAuto),
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcompute%2Farmcompute%2Fv4.0.0/sdk/resourcemanager/compute/armcompute/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update a cloud service. Please note some properties can be set only during cloud service creation.
       *
       * @summary Create or update a cloud service. Please note some properties can be set only during cloud service creation.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/CloudserviceRP/stable/2022-04-04/examples/CloudService_Create_WithSingleRoleAndCertificate.json
       */
      async function createNewCloudServiceWithSingleRoleAndCertificateFromKeyVault() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "ConstosoRG";
        const cloudServiceName = "{cs-name}";
        const parameters = {
          location: "westus",
          properties: {
            configuration: "{ServiceConfiguration}",
            networkProfile: {
              loadBalancerConfigurations: [
                {
                  name: "contosolb",
                  properties: {
                    frontendIPConfigurations: [
                      {
                        name: "contosofe",
                        properties: {
                          publicIPAddress: {
                            id: "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip",
                          },
                        },
                      },
                    ],
                  },
                },
              ],
            },
            osProfile: {
              secrets: [
                {
                  sourceVault: {
                    id: "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.KeyVault/vaults/{keyvault-name}",
                  },
                  vaultCertificates: [
                    {
                      certificateUrl:
                        "https://{keyvault-name}.vault.azure.net:443/secrets/ContosoCertificate/{secret-id}",
                    },
                  ],
                },
              ],
            },
            packageUrl: "{PackageUrl}",
            roleProfile: {
              roles: [
                {
                  name: "ContosoFrontend",
                  sku: { name: "Standard_D1_v2", capacity: 1, tier: "Standard" },
                },
              ],
            },
            upgradeMode: "Auto",
          },
        };
        const options = { parameters };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.cloudServices.beginCreateOrUpdateAndWait(
          resourceGroupName,
          cloudServiceName,
          options
        );
        console.log(result);
      }

      createNewCloudServiceWithSingleRoleAndCertificateFromKeyVault().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "{cs-name}",
        "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}",
        "type": "Microsoft.Compute/cloudServices",
        "location": "westus",
        "properties": {
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto",
          "roleProfile": {
            "roles": [
              {
                "name": "ContosoFrontend",
                "sku": {
                  "name": "Standard_D1_v2",
                  "tier": "Standard",
                  "capacity": 1
                }
              }
            ]
          },
          "osProfile": {
            "secrets": [
              {
                "sourceVault": {
                  "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.KeyVault/vaults/{keyvault-name}"
                },
                "vaultCertificates": [
                  {
                    "certificateUrl": "https://{keyvault-name}.vault.azure.net:443/secrets/ContosoCertificate/{secret-id}"
                  }
                ]
              }
            ]
          },
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "name": "contosolb",
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "name": "contosofe",
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "provisioningState": "Updating",
          "uniqueId": "60b6cd59-600b-4e02-b717-521b07aa94bf"
        },
        "systemData": {
          "createdAt": "2020-01-01T17:18:19.1234567Z",
          "lastModifiedAt": "2020-01-01T17:18:19.1234567Z"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "{cs-name}",
        "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{cs-name}",
        "type": "Microsoft.Compute/cloudServices",
        "location": "westus",
        "properties": {
          "configuration": "{ServiceConfiguration}",
          "packageUrl": "{PackageUrl}",
          "upgradeMode": "Auto",
          "roleProfile": {
            "roles": [
              {
                "name": "ContosoFrontend",
                "sku": {
                  "name": "Standard_D1_v2",
                  "tier": "Standard",
                  "capacity": 1
                }
              }
            ]
          },
          "osProfile": {
            "secrets": [
              {
                "sourceVault": {
                  "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.KeyVault/vaults/{keyvault-name}"
                },
                "vaultCertificates": [
                  {
                    "certificateUrl": "https://{keyvault-name}.vault.azure.net:443/secrets/ContosoCertificate/{secret-id}"
                  }
                ]
              }
            ]
          },
          "networkProfile": {
            "loadBalancerConfigurations": [
              {
                "name": "contosolb",
                "properties": {
                  "frontendIPConfigurations": [
                    {
                      "name": "contosofe",
                      "properties": {
                        "publicIPAddress": {
                          "id": "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/contosopublicip"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "provisioningState": "Creating",
          "uniqueId": "60b6cd59-600b-4e02-b717-521b07aa94bf"
        },
        "systemData": {
          "createdAt": "2020-01-01T17:18:19.1234567Z",
          "lastModifiedAt": "2020-01-01T17:18:19.1234567Z"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Create or update a cloud service. Please note some properties can be set only during cloud service creation.
errorCodes: []
