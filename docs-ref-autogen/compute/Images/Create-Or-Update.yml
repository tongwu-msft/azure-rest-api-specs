### YamlMime:RESTOperation
uid: management.azure.com.compute.images.createorupdate
name: Create Or Update
service: Compute
groupName: Images
apiVersion: 2022-08-01
summary: Create or update an image.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}?api-version=2022-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: imageName
  in: path
  isRequired: true
  description: The name of the image.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: Image
- name: 201 Created
  description: Created
  types:
  - uid: Image
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: extendedLocation
    in: body
    description: The extended location of the Image.
    types:
    - uid: ExtendedLocation
  - name: properties.sourceVirtualMachine
    in: body
    description: The source virtual machine from which Image is created.
    types:
    - uid: SubResource
  - name: properties.storageProfile
    in: body
    description: Specifies the storage settings for the virtual machine disks.
    types:
    - uid: ImageStorageProfile
  - name: properties.hyperVGeneration
    in: body
    description: Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource.
    types:
    - uid: HyperVGenerationTypes
  - name: location
    in: body
    isRequired: true
    description: Resource location
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: ExtendedLocation
  description: The complex type of the extended location.
  kind: object
  properties:
  - name: name
    description: The name of the extended location.
    types:
    - uid: string
  - name: type
    description: The type of the extended location.
    types:
    - uid: ExtendedLocationTypes
- name: SubResource
  kind: object
  properties:
  - name: id
    description: Resource Id
    types:
    - uid: string
- name: ImageStorageProfile
  description: Describes a storage profile.
  kind: object
  properties:
  - name: osDisk
    description: Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
    types:
    - uid: ImageOSDisk
  - name: dataDisks
    description: Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
    types:
    - uid: ImageDataDisk
      isArray: true
  - name: zoneResilient
    description: Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS).
    types:
    - uid: boolean
- name: Image
  description: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
  kind: object
  properties:
  - name: extendedLocation
    description: The extended location of the Image.
    types:
    - uid: ExtendedLocation
  - name: properties.sourceVirtualMachine
    description: The source virtual machine from which Image is created.
    types:
    - uid: SubResource
  - name: properties.storageProfile
    description: Specifies the storage settings for the virtual machine disks.
    types:
    - uid: ImageStorageProfile
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state.
    types:
    - uid: string
  - name: properties.hyperVGeneration
    description: Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource.
    types:
    - uid: HyperVGenerationTypes
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: An error response from the Compute service.
  kind: object
  properties:
  - name: error
    description: Api error.
    types:
    - uid: ApiError
- name: ExtendedLocationTypes
  description: The type of the extended location.
  kind: enum
  properties:
  - name: EdgeZone
    types:
    - uid: string
- name: ImageOSDisk
  description: Describes an Operating System disk.
  kind: object
  properties:
  - name: osType
    description: 'This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**'
    types:
    - uid: OperatingSystemTypes
  - name: osState
    description: The OS State. For managed images, use Generalized.
    types:
    - uid: OperatingSystemStateTypes
  - name: snapshot
    description: The snapshot.
    types:
    - uid: SubResource
  - name: managedDisk
    description: The managedDisk.
    types:
    - uid: SubResource
  - name: blobUri
    description: The Virtual Hard Disk.
    types:
    - uid: string
  - name: caching
    description: 'Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**'
    types:
    - uid: CachingTypes
  - name: diskSizeGB
    description: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
    types:
    - uid: integer
  - name: storageAccountType
    description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
    types:
    - uid: StorageAccountTypes
  - name: diskEncryptionSet
    description: Specifies the customer managed disk encryption set resource id for the managed image disk.
    types:
    - uid: DiskEncryptionSetParameters
- name: ImageDataDisk
  description: Describes a data disk.
  kind: object
  properties:
  - name: lun
    description: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
    types:
    - uid: integer
  - name: snapshot
    description: The snapshot.
    types:
    - uid: SubResource
  - name: managedDisk
    description: The managedDisk.
    types:
    - uid: SubResource
  - name: blobUri
    description: The Virtual Hard Disk.
    types:
    - uid: string
  - name: caching
    description: 'Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**'
    types:
    - uid: CachingTypes
  - name: diskSizeGB
    description: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
    types:
    - uid: integer
  - name: storageAccountType
    description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
    types:
    - uid: StorageAccountTypes
  - name: diskEncryptionSet
    description: Specifies the customer managed disk encryption set resource id for the managed image disk.
    types:
    - uid: DiskEncryptionSetParameters
- name: HyperVGenerationTypes
  description: Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource.
  kind: enum
  properties:
  - name: V1
    types:
    - uid: string
  - name: V2
    types:
    - uid: string
- name: ApiError
  description: Api error.
  kind: object
  properties:
  - name: details
    description: The Api error details
    types:
    - uid: ApiErrorBase
      isArray: true
  - name: innererror
    description: The Api inner error
    types:
    - uid: InnerError
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: OperatingSystemTypes
  description: 'This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**'
  kind: enum
  properties:
  - name: Windows
    types:
    - uid: string
  - name: Linux
    types:
    - uid: string
- name: OperatingSystemStateTypes
  description: The OS State. For managed images, use Generalized.
  kind: enum
  properties:
  - name: Generalized
    description: Generalized image. Needs to be provisioned during deployment time.
    types:
    - uid: string
  - name: Specialized
    description: Specialized image. Contains already provisioned OS Disk.
    types:
    - uid: string
- name: CachingTypes
  description: 'Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**'
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: ReadOnly
    types:
    - uid: string
  - name: ReadWrite
    types:
    - uid: string
- name: StorageAccountTypes
  description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
  kind: enum
  properties:
  - name: Standard_LRS
    types:
    - uid: string
  - name: Premium_LRS
    types:
    - uid: string
  - name: StandardSSD_LRS
    types:
    - uid: string
  - name: UltraSSD_LRS
    types:
    - uid: string
  - name: Premium_ZRS
    types:
    - uid: string
  - name: StandardSSD_ZRS
    types:
    - uid: string
  - name: PremiumV2_LRS
    types:
    - uid: string
- name: DiskEncryptionSetParameters
  description: 'Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. <br><br> NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.'
  kind: object
  properties:
  - name: id
    description: Resource Id
    types:
    - uid: string
- name: ApiErrorBase
  description: Api error base.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: InnerError
  description: Inner error details.
  kind: object
  properties:
  - name: exceptiontype
    description: The exception type.
    types:
    - uid: string
  - name: errordetail
    description: The internal error message or exception dump.
    types:
    - uid: string
examples:
- name: Create a virtual machine image from a blob.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01
    body: >-
      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "blobUri": "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              "osState": "Generalized"
            },
            "zoneResilient": true
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01

      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "blobUri": "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              "osState": "Generalized"
            },
            "zoneResilient": true
          }
        }
      }

      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update an image.
       *
       * @summary Create or update an image.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/imageExamples/Image_CreateFromABlob.json
       */
      async function createAVirtualMachineImageFromABlob() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const imageName = "myImage";
        const parameters = {
          location: "West US",
          storageProfile: {
            osDisk: {
              blobUri: "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              osState: "Generalized",
              osType: "Linux",
            },
            zoneResilient: true,
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.images.beginCreateOrUpdateAndWait(
          resourceGroupName,
          imageName,
          parameters
        );
        console.log(result);
      }

      createAVirtualMachineImageFromABlob().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "osState": "Generalized",
              "blobUri": "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              "caching": "ReadWrite"
            },
            "dataDisks": [],
            "zoneResilient": true
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "osState": "Generalized",
              "blobUri": "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              "caching": "ReadWrite"
            },
            "dataDisks": [],
            "zoneResilient": true
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
- name: Create a virtual machine image from a snapshot.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01
    body: >-
      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "snapshot": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot"
              },
              "osState": "Generalized"
            },
            "zoneResilient": false
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01

      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "snapshot": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot"
              },
              "osState": "Generalized"
            },
            "zoneResilient": false
          }
        }
      }

      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update an image.
       *
       * @summary Create or update an image.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/imageExamples/Image_CreateFromASnapshot.json
       */
      async function createAVirtualMachineImageFromASnapshot() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const imageName = "myImage";
        const parameters = {
          location: "West US",
          storageProfile: {
            osDisk: {
              osState: "Generalized",
              osType: "Linux",
              snapshot: {
                id: "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot",
              },
            },
            zoneResilient: false,
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.images.beginCreateOrUpdateAndWait(
          resourceGroupName,
          imageName,
          parameters
        );
        console.log(result);
      }

      createAVirtualMachineImageFromASnapshot().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "snapshot": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot"
              },
              "osState": "Generalized",
              "caching": "ReadWrite"
            },
            "dataDisks": [],
            "zoneResilient": false
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "snapshot": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot"
              },
              "osState": "Generalized",
              "caching": "ReadWrite"
            },
            "dataDisks": [],
            "zoneResilient": false
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
- name: Create a virtual machine image from a managed disk.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01
    body: >-
      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "managedDisk": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk"
              },
              "osState": "Generalized"
            },
            "zoneResilient": true
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01

      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "managedDisk": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk"
              },
              "osState": "Generalized"
            },
            "zoneResilient": true
          }
        }
      }

      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update an image.
       *
       * @summary Create or update an image.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/imageExamples/Image_CreateFromAManagedDisk.json
       */
      async function createAVirtualMachineImageFromAManagedDisk() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const imageName = "myImage";
        const parameters = {
          location: "West US",
          storageProfile: {
            osDisk: {
              managedDisk: {
                id: "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk",
              },
              osState: "Generalized",
              osType: "Linux",
            },
            zoneResilient: true,
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.images.beginCreateOrUpdateAndWait(
          resourceGroupName,
          imageName,
          parameters
        );
        console.log(result);
      }

      createAVirtualMachineImageFromAManagedDisk().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "managedDisk": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk"
              },
              "osState": "Generalized",
              "caching": "ReadWrite"
            },
            "dataDisks": [],
            "zoneResilient": true
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "managedDisk": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk"
              },
              "osState": "Generalized",
              "caching": "ReadWrite"
            },
            "dataDisks": [],
            "zoneResilient": true
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
- name: Create a virtual machine image from an existing virtual machine.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01
    body: >-
      {
        "location": "West US",
        "properties": {
          "sourceVirtualMachine": {
            "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01

      {
        "location": "West US",
        "properties": {
          "sourceVirtualMachine": {
            "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM"
          }
        }
      }

      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update an image.
       *
       * @summary Create or update an image.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/imageExamples/Image_CreateFromAVM.json
       */
      async function createAVirtualMachineImageFromAnExistingVirtualMachine() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const imageName = "myImage";
        const parameters = {
          location: "West US",
          sourceVirtualMachine: {
            id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.images.beginCreateOrUpdateAndWait(
          resourceGroupName,
          imageName,
          parameters
        );
        console.log(result);
      }

      createAVirtualMachineImageFromAnExistingVirtualMachine().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "sourceVirtualMachine": {
            "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM"
          },
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "osState": "Generalized",
              "managedDisk": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myVM_OsDisk_1_6dc293b7d811433196903acf92665022"
              },
              "caching": "ReadWrite"
            },
            "dataDisks": [],
            "zoneResilient": false
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "sourceVirtualMachine": {
            "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM"
          },
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "osState": "Generalized",
              "managedDisk": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myVM_OsDisk_1_6dc293b7d811433196903acf92665022"
              },
              "caching": "ReadWrite"
            },
            "dataDisks": [],
            "zoneResilient": false
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
- name: Create a virtual machine image that includes a data disk from a blob.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01
    body: >-
      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "blobUri": "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              "osState": "Generalized"
            },
            "dataDisks": [
              {
                "lun": 1,
                "blobUri": "https://mystorageaccount.blob.core.windows.net/dataimages/dataimage.vhd"
              }
            ],
            "zoneResilient": false
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01

      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "blobUri": "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              "osState": "Generalized"
            },
            "dataDisks": [
              {
                "lun": 1,
                "blobUri": "https://mystorageaccount.blob.core.windows.net/dataimages/dataimage.vhd"
              }
            ],
            "zoneResilient": false
          }
        }
      }

      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update an image.
       *
       * @summary Create or update an image.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/imageExamples/Image_Create_DataDiskFromABlobIncluded.json
       */
      async function createAVirtualMachineImageThatIncludesADataDiskFromABlob() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const imageName = "myImage";
        const parameters = {
          location: "West US",
          storageProfile: {
            dataDisks: [
              {
                blobUri: "https://mystorageaccount.blob.core.windows.net/dataimages/dataimage.vhd",
                lun: 1,
              },
            ],
            osDisk: {
              blobUri: "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              osState: "Generalized",
              osType: "Linux",
            },
            zoneResilient: false,
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.images.beginCreateOrUpdateAndWait(
          resourceGroupName,
          imageName,
          parameters
        );
        console.log(result);
      }

      createAVirtualMachineImageThatIncludesADataDiskFromABlob().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "osState": "Generalized",
              "blobUri": "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              "caching": "ReadWrite"
            },
            "dataDisks": [
              {
                "lun": 1,
                "blobUri": "https://mystorageaccount.blob.core.windows.net/dataimages/dataimage.vhd"
              }
            ],
            "zoneResilient": false
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "osState": "Generalized",
              "blobUri": "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              "caching": "ReadWrite"
            },
            "dataDisks": [
              {
                "lun": 1,
                "blobUri": "https://mystorageaccount.blob.core.windows.net/dataimages/dataimage.vhd"
              }
            ],
            "zoneResilient": false
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
- name: Create a virtual machine image that includes a data disk from a snapshot.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01
    body: >-
      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "snapshot": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot"
              },
              "osState": "Generalized"
            },
            "dataDisks": [
              {
                "lun": 1,
                "snapshot": {
                  "id": "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot2"
                }
              }
            ],
            "zoneResilient": true
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01

      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "snapshot": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot"
              },
              "osState": "Generalized"
            },
            "dataDisks": [
              {
                "lun": 1,
                "snapshot": {
                  "id": "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot2"
                }
              }
            ],
            "zoneResilient": true
          }
        }
      }

      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update an image.
       *
       * @summary Create or update an image.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/imageExamples/Image_Create_DataDiskFromASnapshotIncluded.json
       */
      async function createAVirtualMachineImageThatIncludesADataDiskFromASnapshot() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const imageName = "myImage";
        const parameters = {
          location: "West US",
          storageProfile: {
            dataDisks: [
              {
                lun: 1,
                snapshot: {
                  id: "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot2",
                },
              },
            ],
            osDisk: {
              osState: "Generalized",
              osType: "Linux",
              snapshot: {
                id: "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot",
              },
            },
            zoneResilient: true,
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.images.beginCreateOrUpdateAndWait(
          resourceGroupName,
          imageName,
          parameters
        );
        console.log(result);
      }

      createAVirtualMachineImageThatIncludesADataDiskFromASnapshot().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "snapshot": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot"
              },
              "osState": "Generalized",
              "caching": "ReadWrite"
            },
            "dataDisks": [
              {
                "lun": 1,
                "snapshot": {
                  "id": "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot2"
                }
              }
            ],
            "zoneResilient": true
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "snapshot": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot"
              },
              "osState": "Generalized",
              "caching": "ReadWrite"
            },
            "dataDisks": [
              {
                "lun": 1,
                "snapshot": {
                  "id": "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot2"
                }
              }
            ],
            "zoneResilient": true
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
- name: Create a virtual machine image that includes a data disk from a managed disk.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01
    body: >-
      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "managedDisk": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk"
              },
              "osState": "Generalized"
            },
            "dataDisks": [
              {
                "lun": 1,
                "managedDisk": {
                  "id": "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk2"
                }
              }
            ],
            "zoneResilient": false
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01

      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "managedDisk": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk"
              },
              "osState": "Generalized"
            },
            "dataDisks": [
              {
                "lun": 1,
                "managedDisk": {
                  "id": "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk2"
                }
              }
            ],
            "zoneResilient": false
          }
        }
      }

      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update an image.
       *
       * @summary Create or update an image.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/imageExamples/Image_Create_DataDiskFromAManagedDiskIncluded.json
       */
      async function createAVirtualMachineImageThatIncludesADataDiskFromAManagedDisk() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const imageName = "myImage";
        const parameters = {
          location: "West US",
          storageProfile: {
            dataDisks: [
              {
                lun: 1,
                managedDisk: {
                  id: "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk2",
                },
              },
            ],
            osDisk: {
              managedDisk: {
                id: "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk",
              },
              osState: "Generalized",
              osType: "Linux",
            },
            zoneResilient: false,
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.images.beginCreateOrUpdateAndWait(
          resourceGroupName,
          imageName,
          parameters
        );
        console.log(result);
      }

      createAVirtualMachineImageThatIncludesADataDiskFromAManagedDisk().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "managedDisk": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk"
              },
              "osState": "Generalized",
              "caching": "ReadWrite"
            },
            "dataDisks": [
              {
                "lun": 1,
                "managedDisk": {
                  "id": "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk2"
                }
              }
            ],
            "zoneResilient": false
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "managedDisk": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk"
              },
              "osState": "Generalized",
              "caching": "ReadWrite"
            },
            "dataDisks": [
              {
                "lun": 1,
                "managedDisk": {
                  "id": "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk2"
                }
              }
            ],
            "zoneResilient": false
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
- name: Create a virtual machine image from a blob with DiskEncryptionSet resource.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01
    body: >-
      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "blobUri": "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              "diskEncryptionSet": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
              },
              "osState": "Generalized"
            }
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01

      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "blobUri": "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              "diskEncryptionSet": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
              },
              "osState": "Generalized"
            }
          }
        }
      }

      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update an image.
       *
       * @summary Create or update an image.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/imageExamples/Image_CreateFromABlobWithDiskEncryptionSet.json
       */
      async function createAVirtualMachineImageFromABlobWithDiskEncryptionSetResource() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const imageName = "myImage";
        const parameters = {
          location: "West US",
          storageProfile: {
            osDisk: {
              blobUri: "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              diskEncryptionSet: {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}",
              },
              osState: "Generalized",
              osType: "Linux",
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.images.beginCreateOrUpdateAndWait(
          resourceGroupName,
          imageName,
          parameters
        );
        console.log(result);
      }

      createAVirtualMachineImageFromABlobWithDiskEncryptionSetResource().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "osState": "Generalized",
              "blobUri": "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              "diskEncryptionSet": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
              },
              "caching": "ReadWrite"
            },
            "dataDisks": []
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "osState": "Generalized",
              "blobUri": "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
              "diskEncryptionSet": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
              },
              "caching": "ReadWrite"
            },
            "dataDisks": []
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
- name: Create a virtual machine image from a snapshot with DiskEncryptionSet resource.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01
    body: >-
      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "managedDisk": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk"
              },
              "diskEncryptionSet": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
              },
              "osState": "Generalized"
            }
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01

      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "managedDisk": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk"
              },
              "diskEncryptionSet": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
              },
              "osState": "Generalized"
            }
          }
        }
      }

      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update an image.
       *
       * @summary Create or update an image.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/imageExamples/Image_CreateFromASnapshotWithDiskEncryptionSet.json
       */
      async function createAVirtualMachineImageFromASnapshotWithDiskEncryptionSetResource() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const imageName = "myImage";
        const parameters = {
          location: "West US",
          storageProfile: {
            osDisk: {
              diskEncryptionSet: {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}",
              },
              managedDisk: {
                id: "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk",
              },
              osState: "Generalized",
              osType: "Linux",
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.images.beginCreateOrUpdateAndWait(
          resourceGroupName,
          imageName,
          parameters
        );
        console.log(result);
      }

      createAVirtualMachineImageFromASnapshotWithDiskEncryptionSetResource().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "managedDisk": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk"
              },
              "diskEncryptionSet": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
              },
              "osState": "Generalized",
              "caching": "ReadWrite"
            },
            "dataDisks": []
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "managedDisk": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myManagedDisk"
              },
              "diskEncryptionSet": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
              },
              "osState": "Generalized",
              "caching": "ReadWrite"
            },
            "dataDisks": []
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
- name: Create a virtual machine image from a managed disk with DiskEncryptionSet resource.
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01
    body: >-
      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "snapshot": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot"
              },
              "diskEncryptionSet": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
              },
              "osState": "Generalized"
            }
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage?api-version=2022-08-01

      {
        "location": "West US",
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "snapshot": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot"
              },
              "diskEncryptionSet": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
              },
              "osState": "Generalized"
            }
          }
        }
      }

      ```

      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update an image.
       *
       * @summary Create or update an image.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-08-01/examples/imageExamples/Image_CreateFromAManagedDiskWithDiskEncryptionSet.json
       */
      async function createAVirtualMachineImageFromAManagedDiskWithDiskEncryptionSetResource() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const imageName = "myImage";
        const parameters = {
          location: "West US",
          storageProfile: {
            osDisk: {
              diskEncryptionSet: {
                id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}",
              },
              osState: "Generalized",
              osType: "Linux",
              snapshot: {
                id: "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot",
              },
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.images.beginCreateOrUpdateAndWait(
          resourceGroupName,
          imageName,
          parameters
        );
        console.log(result);
      }

      createAVirtualMachineImageFromAManagedDiskWithDiskEncryptionSetResource().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.2.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "snapshot": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot"
              },
              "diskEncryptionSet": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
              },
              "osState": "Generalized",
              "caching": "ReadWrite"
            },
            "dataDisks": []
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "snapshot": {
                "id": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot"
              },
              "diskEncryptionSet": {
                "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"
              },
              "osState": "Generalized",
              "caching": "ReadWrite"
            },
            "dataDisks": []
          },
          "provisioningState": "Creating"
        },
        "type": "Microsoft.Compute/images",
        "location": "westus",
        "id": "/subscriptions/{subscription-id}/resourceGroups/disk/providers/Microsoft.Compute/images/myImage",
        "name": "myImage"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Compute service - Create or update an image.
errorCodes: []
