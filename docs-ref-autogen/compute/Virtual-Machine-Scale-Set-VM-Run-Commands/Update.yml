### YamlMime:RESTOperation
uid: management.azure.com.compute.virtualmachinescalesetvmruncommands.update
name: Update
service: Compute
groupName: Virtual Machine Scale Set VM Run Commands
apiVersion: 2022-03-01
summary: The operation to update the VMSS VM run command.
consumes:
- application/json
- text/json
produces:
- application/json
- text/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}?api-version=2022-03-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: vmScaleSetName
  in: path
  isRequired: true
  description: The name of the VM scale set.
  types:
  - uid: string
- name: instanceId
  in: path
  isRequired: true
  description: The instance ID of the virtual machine.
  types:
  - uid: string
- name: runCommandName
  in: path
  isRequired: true
  description: The name of the virtual machine run command.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: VirtualMachineRunCommand
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: properties.source
    in: body
    description: The source of the run command script.
    types:
    - uid: VirtualMachineRunCommandScriptSource
  - name: properties.parameters
    in: body
    description: The parameters used by the script.
    types:
    - uid: RunCommandInputParameter
      isArray: true
  - name: properties.protectedParameters
    in: body
    description: The parameters used by the script.
    types:
    - uid: RunCommandInputParameter
      isArray: true
  - name: properties.asyncExecution
    in: body
    description: Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.
    types:
    - uid: boolean
  - name: properties.runAsUser
    in: body
    description: Specifies the user account on the VM when executing the run command.
    types:
    - uid: string
  - name: properties.runAsPassword
    in: body
    description: Specifies the user account password on the VM when executing the run command.
    types:
    - uid: string
  - name: properties.timeoutInSeconds
    in: body
    description: The timeout in seconds to execute the run command.
    types:
    - uid: integer
  - name: properties.outputBlobUri
    in: body
    description: Specifies the Azure storage blob where script output stream will be uploaded.
    types:
    - uid: string
  - name: properties.errorBlobUri
    in: body
    description: Specifies the Azure storage blob where script error stream will be uploaded.
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: VirtualMachineRunCommandScriptSource
  description: Describes the script sources for run command.
  kind: object
  properties:
  - name: script
    description: Specifies the script content to be executed on the VM.
    types:
    - uid: string
  - name: scriptUri
    description: Specifies the script download location.
    types:
    - uid: string
  - name: commandId
    description: Specifies a commandId of predefined built-in script.
    types:
    - uid: string
- name: RunCommandInputParameter
  description: Describes the properties of a run command parameter.
  kind: object
  properties:
  - name: name
    description: The run command parameter name.
    types:
    - uid: string
  - name: value
    description: The run command parameter value.
    types:
    - uid: string
- name: VirtualMachineRunCommandInstanceView
  description: The instance view of a virtual machine run command.
  kind: object
  properties:
  - name: executionState
    description: Script execution status.
    types:
    - uid: ExecutionState
  - name: executionMessage
    description: Communicate script configuration errors or execution messages.
    types:
    - uid: string
  - name: exitCode
    description: Exit code returned from script execution.
    types:
    - uid: integer
  - name: output
    description: Script output stream.
    types:
    - uid: string
  - name: error
    description: Script error stream.
    types:
    - uid: string
  - name: startTime
    description: Script start time.
    types:
    - uid: string
  - name: endTime
    description: Script end time.
    types:
    - uid: string
  - name: statuses
    description: The resource status information.
    types:
    - uid: InstanceViewStatus
      isArray: true
- name: VirtualMachineRunCommand
  description: Describes a Virtual Machine run command.
  kind: object
  properties:
  - name: properties.source
    description: The source of the run command script.
    types:
    - uid: VirtualMachineRunCommandScriptSource
  - name: properties.parameters
    description: The parameters used by the script.
    types:
    - uid: RunCommandInputParameter
      isArray: true
  - name: properties.protectedParameters
    description: The parameters used by the script.
    types:
    - uid: RunCommandInputParameter
      isArray: true
  - name: properties.asyncExecution
    description: Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.
    types:
    - uid: boolean
    defaultValue: false
  - name: properties.runAsUser
    description: Specifies the user account on the VM when executing the run command.
    types:
    - uid: string
  - name: properties.runAsPassword
    description: Specifies the user account password on the VM when executing the run command.
    types:
    - uid: string
  - name: properties.timeoutInSeconds
    description: The timeout in seconds to execute the run command.
    types:
    - uid: integer
  - name: properties.outputBlobUri
    description: Specifies the Azure storage blob where script output stream will be uploaded.
    types:
    - uid: string
  - name: properties.errorBlobUri
    description: Specifies the Azure storage blob where script error stream will be uploaded.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state, which only appears in the response.
    types:
    - uid: string
  - name: properties.instanceView
    isReadyOnly: true
    description: The virtual machine run command instance view.
    types:
    - uid: VirtualMachineRunCommandInstanceView
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: An error response from the Compute service.
  kind: object
  properties:
  - name: error
    description: Api error.
    types:
    - uid: ApiError
- name: VirtualMachineRunCommandUpdate
  description: Describes a Virtual Machine run command.
  kind: object
  properties:
  - name: properties.source
    description: The source of the run command script.
    types:
    - uid: VirtualMachineRunCommandScriptSource
  - name: properties.parameters
    description: The parameters used by the script.
    types:
    - uid: RunCommandInputParameter
      isArray: true
  - name: properties.protectedParameters
    description: The parameters used by the script.
    types:
    - uid: RunCommandInputParameter
      isArray: true
  - name: properties.asyncExecution
    description: Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.
    types:
    - uid: boolean
    defaultValue: false
  - name: properties.runAsUser
    description: Specifies the user account on the VM when executing the run command.
    types:
    - uid: string
  - name: properties.runAsPassword
    description: Specifies the user account password on the VM when executing the run command.
    types:
    - uid: string
  - name: properties.timeoutInSeconds
    description: The timeout in seconds to execute the run command.
    types:
    - uid: integer
  - name: properties.outputBlobUri
    description: Specifies the Azure storage blob where script output stream will be uploaded.
    types:
    - uid: string
  - name: properties.errorBlobUri
    description: Specifies the Azure storage blob where script error stream will be uploaded.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state, which only appears in the response.
    types:
    - uid: string
  - name: properties.instanceView
    isReadyOnly: true
    description: The virtual machine run command instance view.
    types:
    - uid: VirtualMachineRunCommandInstanceView
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: ExecutionState
  description: Script execution status.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: Pending
    types:
    - uid: string
  - name: Running
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: TimedOut
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
- name: InstanceViewStatus
  description: Instance view status.
  kind: object
  properties:
  - name: code
    description: The status code.
    types:
    - uid: string
  - name: level
    description: The level code.
    types:
    - uid: StatusLevelTypes
  - name: displayStatus
    description: The short localizable label for the status.
    types:
    - uid: string
  - name: message
    description: The detailed status message, including for alerts and error messages.
    types:
    - uid: string
  - name: time
    description: The time of the status.
    types:
    - uid: string
- name: ApiError
  description: Api error.
  kind: object
  properties:
  - name: details
    description: The Api error details
    types:
    - uid: ApiErrorBase
      isArray: true
  - name: innererror
    description: The Api inner error
    types:
    - uid: InnerError
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: StatusLevelTypes
  description: The level code.
  kind: enum
  properties:
  - name: Info
    types:
    - uid: string
  - name: Warning
    types:
    - uid: string
  - name: Error
    types:
    - uid: string
- name: ApiErrorBase
  description: Api error base.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: target
    description: The target of the particular error.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: InnerError
  description: Inner error details.
  kind: object
  properties:
  - name: exceptiontype
    description: The exception type.
    types:
    - uid: string
  - name: errordetail
    description: The internal error message or exception dump.
    types:
    - uid: string
examples:
- name: Update VirtualMachineScaleSet VM run command.
  request:
    uri: PATCH https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myvmScaleSet/virtualMachines/0/runCommands/myRunCommand?api-version=2022-03-01
    body: >-
      {
        "properties": {
          "source": {
            "script": "Write-Host Script Source Updated!"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myvmScaleSet/virtualMachines/0/runCommands/myRunCommand?api-version=2022-03-01

      {
        "properties": {
          "source": {
            "script": "Write-Host Script Source Updated!"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.models.VirtualMachineRunCommandScriptSource;
      import com.azure.resourcemanager.compute.models.VirtualMachineRunCommandUpdate;

      /** Samples for VirtualMachineScaleSetVMRunCommands Update. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/runCommandExamples/VirtualMachineScaleSetVMRunCommand_Update.json
           */
          /**
           * Sample code: Update VirtualMachineScaleSet VM run command.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void updateVirtualMachineScaleSetVMRunCommand(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getVirtualMachineScaleSetVMRunCommands()
                  .update(
                      "myResourceGroup",
                      "myvmScaleSet",
                      "0",
                      "myRunCommand",
                      new VirtualMachineRunCommandUpdate()
                          .withSource(
                              new VirtualMachineRunCommandScriptSource().withScript("Write-Host Script Source Updated!")),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcompute_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute/v3"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/runCommandExamples/VirtualMachineScaleSetVMRunCommand_Update.json
      func ExampleVirtualMachineScaleSetVMRunCommandsClient_BeginUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcompute.NewVirtualMachineScaleSetVMRunCommandsClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginUpdate(ctx,
      		"myResourceGroup",
      		"myvmScaleSet",
      		"0",
      		"myRunCommand",
      		armcompute.VirtualMachineRunCommandUpdate{
      			Properties: &armcompute.VirtualMachineRunCommandProperties{
      				Source: &armcompute.VirtualMachineRunCommandScriptSource{
      					Script: to.Ptr("Write-Host Script Source Updated!"),
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcompute%2Farmcompute%2Fv3.0.0/sdk/resourcemanager/compute/armcompute/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to The operation to update the VMSS VM run command.
       *
       * @summary The operation to update the VMSS VM run command.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2022-03-01/ComputeRP/examples/runCommandExamples/VirtualMachineScaleSetVMRunCommand_Update.json
       */
      async function updateVirtualMachineScaleSetVMRunCommand() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmScaleSetName = "myvmScaleSet";
        const instanceId = "0";
        const runCommandName = "myRunCommand";
        const runCommand = {
          source: { script: "Write-Host Script Source Updated!" },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.virtualMachineScaleSetVMRunCommands.beginUpdateAndWait(
          resourceGroupName,
          vmScaleSetName,
          instanceId,
          runCommandName,
          runCommand
        );
        console.log(result);
      }

      updateVirtualMachineScaleSetVMRunCommand().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_19.1.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "myRunCommand",
        "type": "Microsoft.Compute/virtualMachineScaleSets/virtualMachines/runCommands",
        "id": "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myvmScaleSet/virtualMachines/0/runCommands/myRunCommand",
        "location": "westus",
        "tags": {
          "tag1": "value1",
          "tag2": "value2"
        },
        "properties": {
          "source": {
            "script": "Write-Host Script Source Updated!"
          },
          "parameters": [
            {
              "name": "param1",
              "value": "value1"
            },
            {
              "name": "param2",
              "value": "value2"
            }
          ],
          "asyncExecution": false,
          "runAsUser": "user1",
          "timeoutInSeconds": 3600,
          "provisioningState": "Updating"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Compute service - The operation to update the VMSS VM run command.
errorCodes: []
