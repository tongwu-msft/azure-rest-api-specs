### YamlMime:RESTOperation
uid: management.azure.com.compute.snapshots.update
name: Update
service: Compute
groupName: Snapshots
apiVersion: 2021-12-01
summary: Updates (patches) a snapshot.
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}?api-version=2021-12-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: snapshotName
  in: path
  isRequired: true
  description: The name of the snapshot that is being created. The name can't be changed after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name length is 80 characters.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: Snapshot
- name: 202 Accepted
  description: Accepted
  types:
  - uid: Snapshot
requestBody:
- name: default
  parameters:
  - name: tags
    in: body
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: sku
    in: body
    description: The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for incremental snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot
    types:
    - uid: SnapshotSku
  - name: properties.osType
    in: body
    description: the Operating System type.
    types:
    - uid: OperatingSystemTypes
  - name: properties.diskSizeGB
    in: body
    description: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
    types:
    - uid: integer
  - name: properties.encryptionSettingsCollection
    in: body
    description: Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.
    types:
    - uid: EncryptionSettingsCollection
  - name: properties.encryption
    in: body
    description: Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.
    types:
    - uid: Encryption
  - name: properties.networkAccessPolicy
    in: body
    description: Policy for accessing the disk via network.
    types:
    - uid: NetworkAccessPolicy
  - name: properties.diskAccessId
    in: body
    description: ARM id of the DiskAccess resource for using private endpoints on disks.
    types:
    - uid: string
  - name: properties.supportsHibernation
    in: body
    description: Indicates the OS on a snapshot supports hibernation.
    types:
    - uid: boolean
  - name: properties.publicNetworkAccess
    in: body
    description: Policy for controlling export on the disk.
    types:
    - uid: PublicNetworkAccess
  - name: properties.dataAccessAuthMode
    in: body
    description: Additional authentication requirements when exporting or uploading to a disk or snapshot.
    types:
    - uid: DataAccessAuthMode
  - name: properties.supportedCapabilities
    in: body
    description: List of supported capabilities for the image from which the OS disk was created.
    types:
    - uid: SupportedCapabilities
requestHeader: []
definitions:
- name: SnapshotSku
  description: The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for incremental snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot
  kind: object
  properties:
  - name: name
    description: The sku name.
    types:
    - uid: SnapshotStorageAccountTypes
  - name: tier
    isReadyOnly: true
    description: The sku tier.
    types:
    - uid: string
- name: EncryptionSettingsCollection
  description: Encryption settings for disk or snapshot
  kind: object
  properties:
  - name: enabled
    description: Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.
    types:
    - uid: boolean
  - name: encryptionSettings
    description: A collection of encryption settings, one for each disk volume.
    types:
    - uid: EncryptionSettingsElement
      isArray: true
  - name: encryptionSettingsVersion
    description: Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. '1.0' corresponds to Azure Disk Encryption with AAD app.'1.1' corresponds to Azure Disk Encryption.
    types:
    - uid: string
- name: Encryption
  description: Encryption at rest settings for disk or snapshot
  kind: object
  properties:
  - name: diskEncryptionSetId
    description: ResourceId of the disk encryption set to use for enabling encryption at rest.
    types:
    - uid: string
  - name: type
    description: The type of key used to encrypt the data of the disk.
    types:
    - uid: EncryptionType
- name: SupportedCapabilities
  description: List of supported capabilities persisted on the disk resource for VM use.
  kind: object
  properties:
  - name: acceleratedNetwork
    description: True if the image from which the OS disk is created supports accelerated networking.
    types:
    - uid: boolean
  - name: architecture
    description: CPU architecture supported by an OS disk.
    types:
    - uid: Architecture
- name: Snapshot
  description: Snapshot resource.
  kind: object
  properties:
  - name: managedBy
    isReadyOnly: true
    description: Unused. Always Null.
    types:
    - uid: string
  - name: sku
    description: The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for incremental snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot
    types:
    - uid: SnapshotSku
  - name: extendedLocation
    description: The extended location where the snapshot will be created. Extended location cannot be changed.
    types:
    - uid: ExtendedLocation
  - name: properties.timeCreated
    isReadyOnly: true
    description: The time when the snapshot was created.
    types:
    - uid: string
  - name: properties.osType
    description: The Operating System type.
    types:
    - uid: OperatingSystemTypes
  - name: properties.hyperVGeneration
    description: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
    types:
    - uid: HyperVGeneration
  - name: properties.purchasePlan
    description: Purchase plan information for the image from which the source disk for the snapshot was originally created.
    types:
    - uid: PurchasePlan
  - name: properties.supportedCapabilities
    description: List of supported capabilities for the image from which the source disk from the snapshot was originally created.
    types:
    - uid: SupportedCapabilities
  - name: properties.creationData
    description: Disk source information. CreationData information cannot be changed after the disk has been created.
    types:
    - uid: CreationData
  - name: properties.diskSizeGB
    description: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
    types:
    - uid: integer
  - name: properties.diskSizeBytes
    isReadyOnly: true
    description: The size of the disk in bytes. This field is read only.
    types:
    - uid: integer
  - name: properties.diskState
    isReadyOnly: true
    description: The state of the snapshot.
    types:
    - uid: DiskState
  - name: properties.uniqueId
    isReadyOnly: true
    description: Unique Guid identifying the resource.
    types:
    - uid: string
  - name: properties.encryptionSettingsCollection
    description: Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.
    types:
    - uid: EncryptionSettingsCollection
  - name: properties.provisioningState
    isReadyOnly: true
    description: The disk provisioning state.
    types:
    - uid: string
  - name: properties.incremental
    description: Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.
    types:
    - uid: boolean
  - name: properties.encryption
    description: Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.
    types:
    - uid: Encryption
  - name: properties.networkAccessPolicy
    description: Policy for accessing the disk via network.
    types:
    - uid: NetworkAccessPolicy
  - name: properties.diskAccessId
    description: ARM id of the DiskAccess resource for using private endpoints on disks.
    types:
    - uid: string
  - name: properties.securityProfile
    description: Contains the security related information for the resource.
    types:
    - uid: DiskSecurityProfile
  - name: properties.supportsHibernation
    description: Indicates the OS on a snapshot supports hibernation.
    types:
    - uid: boolean
  - name: properties.publicNetworkAccess
    description: Policy for controlling export on the disk.
    types:
    - uid: PublicNetworkAccess
  - name: properties.completionPercent
    description: Percentage complete for the background copy when a resource is created via the CopyStart operation.
    types:
    - uid: number
  - name: properties.dataAccessAuthMode
    description: Additional authentication requirements when exporting or uploading to a disk or snapshot.
    types:
    - uid: DataAccessAuthMode
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: SnapshotUpdate
  description: Snapshot update resource.
  kind: object
  properties:
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: sku
    description: The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for incremental snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot
    types:
    - uid: SnapshotSku
  - name: properties.osType
    description: the Operating System type.
    types:
    - uid: OperatingSystemTypes
  - name: properties.diskSizeGB
    description: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
    types:
    - uid: integer
  - name: properties.encryptionSettingsCollection
    description: Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.
    types:
    - uid: EncryptionSettingsCollection
  - name: properties.encryption
    description: Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.
    types:
    - uid: Encryption
  - name: properties.networkAccessPolicy
    description: Policy for accessing the disk via network.
    types:
    - uid: NetworkAccessPolicy
  - name: properties.diskAccessId
    description: ARM id of the DiskAccess resource for using private endpoints on disks.
    types:
    - uid: string
  - name: properties.supportsHibernation
    description: Indicates the OS on a snapshot supports hibernation.
    types:
    - uid: boolean
  - name: properties.publicNetworkAccess
    description: Policy for controlling export on the disk.
    types:
    - uid: PublicNetworkAccess
  - name: properties.dataAccessAuthMode
    description: Additional authentication requirements when exporting or uploading to a disk or snapshot.
    types:
    - uid: DataAccessAuthMode
  - name: properties.supportedCapabilities
    description: List of supported capabilities for the image from which the OS disk was created.
    types:
    - uid: SupportedCapabilities
- name: SnapshotStorageAccountTypes
  description: The sku name.
  kind: enum
  properties:
  - name: Standard_LRS
    description: Standard HDD locally redundant storage
    types:
    - uid: string
  - name: Premium_LRS
    description: Premium SSD locally redundant storage
    types:
    - uid: string
  - name: Standard_ZRS
    description: Standard zone redundant storage
    types:
    - uid: string
- name: EncryptionSettingsElement
  description: Encryption settings for one disk volume.
  kind: object
  properties:
  - name: diskEncryptionKey
    description: Key Vault Secret Url and vault id of the disk encryption key
    types:
    - uid: KeyVaultAndSecretReference
  - name: keyEncryptionKey
    description: Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key.
    types:
    - uid: KeyVaultAndKeyReference
- name: EncryptionType
  description: The type of key used to encrypt the data of the disk.
  kind: enum
  properties:
  - name: EncryptionAtRestWithPlatformKey
    description: Disk is encrypted at rest with Platform managed key. It is the default encryption type. This is not a valid encryption type for disk encryption sets.
    types:
    - uid: string
  - name: EncryptionAtRestWithCustomerKey
    description: Disk is encrypted at rest with Customer managed key that can be changed and revoked by a customer.
    types:
    - uid: string
  - name: EncryptionAtRestWithPlatformAndCustomerKeys
    description: Disk is encrypted at rest with 2 layers of encryption. One of the keys is Customer managed and the other key is Platform managed.
    types:
    - uid: string
- name: Architecture
  description: CPU architecture supported by an OS disk.
  kind: enum
  properties:
  - name: x64
    types:
    - uid: string
  - name: Arm64
    types:
    - uid: string
- name: ExtendedLocation
  description: The complex type of the extended location.
  kind: object
  properties:
  - name: name
    description: The name of the extended location.
    types:
    - uid: string
  - name: type
    description: The type of the extended location.
    types:
    - uid: ExtendedLocationTypes
- name: OperatingSystemTypes
  description: The Operating System type.
  kind: enum
  properties:
  - name: Windows
    types:
    - uid: string
  - name: Linux
    types:
    - uid: string
- name: HyperVGeneration
  description: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
  kind: enum
  properties:
  - name: V1
    types:
    - uid: string
  - name: V2
    types:
    - uid: string
- name: PurchasePlan
  description: Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
  kind: object
  properties:
  - name: name
    description: The plan ID.
    types:
    - uid: string
  - name: publisher
    description: The publisher ID.
    types:
    - uid: string
  - name: product
    description: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
    types:
    - uid: string
  - name: promotionCode
    description: The Offer Promotion Code.
    types:
    - uid: string
- name: CreationData
  description: Data used when creating a disk.
  kind: object
  properties:
  - name: createOption
    description: This enumerates the possible sources of a disk's creation.
    types:
    - uid: DiskCreateOption
  - name: storageAccountId
    description: Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk.
    types:
    - uid: string
  - name: imageReference
    description: Disk source information.
    types:
    - uid: ImageDiskReference
  - name: galleryImageReference
    description: Required if creating from a Gallery Image. The id of the ImageDiskReference will be the ARM id of the shared galley image version from which to create a disk.
    types:
    - uid: ImageDiskReference
  - name: sourceUri
    description: If createOption is Import, this is the URI of a blob to be imported into a managed disk.
    types:
    - uid: string
  - name: sourceResourceId
    description: If createOption is Copy, this is the ARM id of the source snapshot or disk.
    types:
    - uid: string
  - name: sourceUniqueId
    isReadyOnly: true
    description: If this field is set, this is the unique id identifying the source of this resource.
    types:
    - uid: string
  - name: uploadSizeBytes
    description: If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer).
    types:
    - uid: integer
  - name: logicalSectorSize
    description: Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the default.
    types:
    - uid: integer
  - name: securityDataUri
    description: If createOption is ImportSecure, this is the URI of a blob to be imported into VM guest state.
    types:
    - uid: string
- name: DiskState
  description: This enumerates the possible state of the disk.
  kind: enum
  properties:
  - name: Unattached
    description: The disk is not being used and can be attached to a VM.
    types:
    - uid: string
  - name: Attached
    description: The disk is currently attached to a running VM.
    types:
    - uid: string
  - name: Reserved
    description: The disk is attached to a stopped-deallocated VM.
    types:
    - uid: string
  - name: Frozen
    description: The disk is attached to a VM which is in hibernated state.
    types:
    - uid: string
  - name: ActiveSAS
    description: The disk currently has an Active SAS Uri associated with it.
    types:
    - uid: string
  - name: ActiveSASFrozen
    description: The disk is attached to a VM in hibernated state and has an active SAS URI associated with it.
    types:
    - uid: string
  - name: ReadyToUpload
    description: A disk is ready to be created by upload by requesting a write token.
    types:
    - uid: string
  - name: ActiveUpload
    description: A disk is created for upload and a write token has been issued for uploading to it.
    types:
    - uid: string
- name: NetworkAccessPolicy
  description: Policy for accessing the disk via network.
  kind: enum
  properties:
  - name: AllowAll
    description: The disk can be exported or uploaded to from any network.
    types:
    - uid: string
  - name: AllowPrivate
    description: The disk can be exported or uploaded to using a DiskAccess resource's private endpoints.
    types:
    - uid: string
  - name: DenyAll
    description: The disk cannot be exported.
    types:
    - uid: string
- name: DiskSecurityProfile
  description: Contains the security related information for the resource.
  kind: object
  properties:
  - name: securityType
    description: Specifies the SecurityType of the VM. Applicable for OS disks only.
    types:
    - uid: DiskSecurityTypes
  - name: secureVMDiskEncryptionSetId
    description: ResourceId of the disk encryption set associated to Confidential VM supported disk encrypted with customer managed key
    types:
    - uid: string
- name: PublicNetworkAccess
  description: Policy for controlling export on the disk.
  kind: enum
  properties:
  - name: Enabled
    description: You can generate a SAS URI to access the underlying data of the disk publicly on the internet when NetworkAccessPolicy is set to AllowAll. You can access the data via the SAS URI only from your trusted Azure VNET when NetworkAccessPolicy is set to AllowPrivate.
    types:
    - uid: string
  - name: Disabled
    description: You cannot access the underlying data of the disk publicly on the internet even when NetworkAccessPolicy is set to AllowAll. You can access the data via the SAS URI only from your trusted Azure VNET when NetworkAccessPolicy is set to AllowPrivate.
    types:
    - uid: string
- name: DataAccessAuthMode
  description: Additional authentication requirements when exporting or uploading to a disk or snapshot.
  kind: enum
  properties:
  - name: AzureActiveDirectory
    description: When export/upload URL is used, the system checks if the user has an identity in Azure Active Directory and has necessary permissions to export/upload the data. Please refer to aka.ms/DisksAzureADAuth.
    types:
    - uid: string
  - name: None
    description: No additional authentication would be performed when accessing export/upload URL.
    types:
    - uid: string
- name: KeyVaultAndSecretReference
  description: 'Key Vault Secret Url and vault id of the encryption key '
  kind: object
  properties:
  - name: sourceVault
    description: Resource id of the KeyVault containing the key or secret
    types:
    - uid: SourceVault
  - name: secretUrl
    description: Url pointing to a key or secret in KeyVault
    types:
    - uid: string
- name: KeyVaultAndKeyReference
  description: Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the encryptionKey
  kind: object
  properties:
  - name: sourceVault
    description: Resource id of the KeyVault containing the key or secret
    types:
    - uid: SourceVault
  - name: keyUrl
    description: Url pointing to a key or secret in KeyVault
    types:
    - uid: string
- name: ExtendedLocationTypes
  description: The type of the extended location.
  kind: enum
  properties:
  - name: EdgeZone
    types:
    - uid: string
- name: DiskCreateOption
  description: This enumerates the possible sources of a disk's creation.
  kind: enum
  properties:
  - name: Empty
    description: Create an empty data disk of a size given by diskSizeGB.
    types:
    - uid: string
  - name: Attach
    description: Disk will be attached to a VM.
    types:
    - uid: string
  - name: FromImage
    description: Create a new disk from a platform image specified by the given imageReference or galleryImageReference.
    types:
    - uid: string
  - name: Import
    description: Create a disk by importing from a blob specified by a sourceUri in a storage account specified by storageAccountId.
    types:
    - uid: string
  - name: Copy
    description: Create a new disk or snapshot by copying from a disk or snapshot specified by the given sourceResourceId.
    types:
    - uid: string
  - name: Restore
    description: Create a new disk by copying from a backup recovery point.
    types:
    - uid: string
  - name: Upload
    description: Create a new disk by obtaining a write token and using it to directly upload the contents of the disk.
    types:
    - uid: string
  - name: CopyStart
    description: Create a new disk by using a deep copy process, where the resource creation is considered complete only after all data has been copied from the source.
    types:
    - uid: string
  - name: ImportSecure
    description: Similar to Import create option. Create a new Trusted Launch VM or Confidential VM supported disk by importing additional blob for VM guest state specified by securityDataUri in storage account specified by storageAccountId
    types:
    - uid: string
  - name: UploadPreparedSecure
    description: Similar to Upload create option. Create a new Trusted Launch VM or Confidential VM supported disk and upload using write token in both disk and VM guest state
    types:
    - uid: string
- name: ImageDiskReference
  description: The source image used for creating the disk.
  kind: object
  properties:
  - name: id
    description: A relative uri containing either a Platform Image Repository or user image reference.
    types:
    - uid: string
  - name: lun
    description: If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.
    types:
    - uid: integer
- name: DiskSecurityTypes
  description: Specifies the SecurityType of the VM. Applicable for OS disks only.
  kind: enum
  properties:
  - name: TrustedLaunch
    description: Trusted Launch provides security features such as secure boot and virtual Trusted Platform Module (vTPM)
    types:
    - uid: string
  - name: ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey
    description: Indicates Confidential VM disk with only VM guest state encrypted
    types:
    - uid: string
  - name: ConfidentialVM_DiskEncryptedWithPlatformKey
    description: Indicates Confidential VM disk with both OS disk and VM guest state encrypted with a platform managed key
    types:
    - uid: string
  - name: ConfidentialVM_DiskEncryptedWithCustomerKey
    description: Indicates Confidential VM disk with both OS disk and VM guest state encrypted with a customer managed key
    types:
    - uid: string
- name: SourceVault
  description: The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}
  kind: object
  properties:
  - name: id
    description: Resource Id
    types:
    - uid: string
examples:
- name: Update a snapshot.
  request:
    uri: PATCH https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot?api-version=2021-12-01
    body: >-
      {
        "properties": {
          "diskSizeGB": 20
        },
        "tags": {
          "department": "Development",
          "project": "UpdateSnapshots"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot?api-version=2021-12-01

      {
        "properties": {
          "diskSizeGB": 20
        },
        "tags": {
          "department": "Development",
          "project": "UpdateSnapshots"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.models.SnapshotUpdate;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for Snapshots Update. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-12-01/examples/UpdateASnapshot.json
           */
          /**
           * Sample code: Update a snapshot.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void updateASnapshot(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getSnapshots()
                  .update(
                      "myResourceGroup",
                      "mySnapshot",
                      new SnapshotUpdate()
                          .withTags(mapOf("department", "Development", "project", "UpdateSnapshots"))
                          .withDiskSizeGB(20),
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.15.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Updates (patches) a snapshot.
       *
       * @summary Updates (patches) a snapshot.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-12-01/examples/UpdateASnapshot.json
       */
      async function updateASnapshot() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const snapshotName = "mySnapshot";
        const snapshot = {
          diskSizeGB: 20,
          tags: { department: "Development", project: "UpdateSnapshots" },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.snapshots.beginUpdateAndWait(
          resourceGroupName,
          snapshotName,
          snapshot
        );
        console.log(result);
      }

      updateASnapshot().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_18.0.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "202"
    headers:
    - name: Location
      value: https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot?api-version=2021-04-01
    body: >-
      {
        "properties": {
          "creationData": {
            "createOption": "Copy",
            "sourceResourceId": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot1"
          },
          "diskSizeGB": 20,
          "provisioningState": "Updating"
        },
        "tags": {
          "department": "Development",
          "project": "UpdateSnapshots"
        },
        "location": "West US",
        "name": "mySnapshot"
      }
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "creationData": {
            "createOption": "Copy",
            "sourceResourceId": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot1"
          },
          "diskSizeGB": 20,
          "provisioningState": "Succeeded"
        },
        "tags": {
          "department": "Development",
          "project": "UpdateSnapshots"
        },
        "location": "West US",
        "name": "mySnapshot"
      }
- name: Update a snapshot with accelerated networking.
  request:
    uri: PATCH https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot?api-version=2021-12-01
    body: >-
      {
        "properties": {
          "diskSizeGB": 20,
          "supportedCapabilities": {
            "acceleratedNetwork": false
          }
        },
        "tags": {
          "department": "Development",
          "project": "UpdateSnapshots"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot?api-version=2021-12-01

      {
        "properties": {
          "diskSizeGB": 20,
          "supportedCapabilities": {
            "acceleratedNetwork": false
          }
        },
        "tags": {
          "department": "Development",
          "project": "UpdateSnapshots"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.compute.models.SnapshotUpdate;
      import com.azure.resourcemanager.compute.models.SupportedCapabilities;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for Snapshots Update. */
      public final class Main {
          /*
           * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-12-01/examples/UpdateASnapshotWithAcceleratedNetwork.json
           */
          /**
           * Sample code: Update a snapshot with accelerated networking.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void updateASnapshotWithAcceleratedNetworking(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .virtualMachines()
                  .manager()
                  .serviceClient()
                  .getSnapshots()
                  .update(
                      "myResourceGroup",
                      "mySnapshot",
                      new SnapshotUpdate()
                          .withTags(mapOf("department", "Development", "project", "UpdateSnapshots"))
                          .withDiskSizeGB(20)
                          .withSupportedCapabilities(new SupportedCapabilities().withAcceleratedNetwork(false)),
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.15.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcompute_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/compute/resource-manager/Microsoft.Compute/stable/2021-12-01/examples/UpdateASnapshotWithAcceleratedNetwork.json
      func ExampleSnapshotsClient_BeginUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcompute.NewSnapshotsClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginUpdate(ctx,
      		"myResourceGroup",
      		"mySnapshot",
      		armcompute.SnapshotUpdate{
      			Properties: &armcompute.SnapshotUpdateProperties{
      				DiskSizeGB: to.Ptr[int32](20),
      				SupportedCapabilities: &armcompute.SupportedCapabilities{
      					AcceleratedNetwork: to.Ptr(false),
      				},
      			},
      			Tags: map[string]*string{
      				"department": to.Ptr("Development"),
      				"project":    to.Ptr("UpdateSnapshots"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcompute%2Farmcompute%2Fv1.0.0/sdk/resourcemanager/compute/armcompute/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { ComputeManagementClient } = require("@azure/arm-compute");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Updates (patches) a snapshot.
       *
       * @summary Updates (patches) a snapshot.
       * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-12-01/examples/UpdateASnapshotWithAcceleratedNetwork.json
       */
      async function updateASnapshotWithAcceleratedNetworking() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const snapshotName = "mySnapshot";
        const snapshot = {
          diskSizeGB: 20,
          supportedCapabilities: { acceleratedNetwork: false },
          tags: { department: "Development", project: "UpdateSnapshots" },
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = await client.snapshots.beginUpdateAndWait(
          resourceGroupName,
          snapshotName,
          snapshot
        );
        console.log(result);
      }

      updateASnapshotWithAcceleratedNetworking().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-compute_18.0.0/sdk/compute/arm-compute/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "202"
    headers:
    - name: Location
      value: https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot?api-version=2021-04-01
    body: >-
      {
        "properties": {
          "creationData": {
            "createOption": "Copy",
            "sourceResourceId": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot1"
          },
          "supportedCapabilities": {
            "acceleratedNetwork": false
          },
          "diskSizeGB": 20,
          "provisioningState": "Updating"
        },
        "tags": {
          "department": "Development",
          "project": "UpdateSnapshots"
        },
        "location": "West US",
        "name": "mySnapshot"
      }
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "creationData": {
            "createOption": "Copy",
            "sourceResourceId": "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot1"
          },
          "supportedCapabilities": {
            "acceleratedNetwork": false
          },
          "diskSizeGB": 20,
          "provisioningState": "Succeeded"
        },
        "tags": {
          "department": "Development",
          "project": "UpdateSnapshots"
        },
        "location": "West US",
        "name": "mySnapshot"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Compute service - Updates (patches) a snapshot.
errorCodes: []
