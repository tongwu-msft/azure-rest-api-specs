### YamlMime:RESTOperation
uid: management.azure.com.media.mediaservicesoperationresults.get
name: Get
service: Media Services
groupName: Media Services Operation Results
apiVersion: 2021-11-01
summary: "Get operation result.  \nGet media service operation result."
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/mediaServicesOperationResults/{operationId}?api-version=2021-11-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The unique identifier for a Microsoft Azure subscription.
  types:
  - uid: string
- name: locationName
  in: path
  isRequired: true
  description: Location name.
  types:
  - uid: string
- name: operationId
  in: path
  isRequired: true
  description: Operation Id.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: MediaService
- name: 202 Accepted
  headers:
  - name: Retry-After
    value: integer
  - name: Location
    value: string
  - name: Azure-AsyncOperation
    value: string
  description: Accepted
- name: Other Status Codes
  description: Detailed error information.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: MediaService
  description: A Media Services account.
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: The system metadata relating to this resource.
    types:
    - uid: systemData
  - name: identity
    description: The Managed Identity for the Media Services account.
    types:
    - uid: MediaServiceIdentity
  - name: properties.mediaServiceId
    isReadyOnly: true
    description: The Media Services account ID.
    types:
    - uid: string
  - name: properties.storageAccounts
    description: The storage accounts for this resource.
    types:
    - uid: StorageAccount
      isArray: true
  - name: properties.storageAuthentication
    description: ''
    types:
    - uid: StorageAuthentication
  - name: properties.encryption
    description: The account encryption properties.
    types:
    - uid: AccountEncryption
  - name: properties.keyDelivery
    description: The Key Delivery properties for Media Services account.
    types:
    - uid: KeyDelivery
  - name: properties.publicNetworkAccess
    description: Whether or not public network access is allowed for resources under the Media Services account.
    types:
    - uid: PublicNetworkAccess
  - name: properties.provisioningState
    isReadyOnly: true
    description: Provisioning state of the Media Services account.
    types:
    - uid: ProvisioningState
  - name: properties.privateEndpointConnections
    isReadyOnly: true
    description: The Private Endpoint Connections created for the Media Service account.
    types:
    - uid: PrivateEndpointConnection
      isArray: true
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: MediaServiceIdentity
  kind: object
  properties:
  - name: type
    description: The identity type.
    types:
    - uid: string
  - name: principalId
    isReadyOnly: true
    description: The Principal ID of the identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The Tenant ID of the identity.
    types:
    - uid: string
  - name: userAssignedIdentities
    description: The user assigned managed identities.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: UserAssignedManagedIdentity
- name: StorageAccount
  description: The storage account details.
  kind: object
  properties:
  - name: id
    description: The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts.
    types:
    - uid: string
  - name: type
    description: The type of the storage account.
    types:
    - uid: StorageAccountType
  - name: identity
    description: The storage account identity.
    types:
    - uid: ResourceIdentity
  - name: status
    isReadyOnly: true
    description: The current status of the storage account mapping.
    types:
    - uid: string
- name: StorageAuthentication
  kind: enum
  properties:
  - name: System
    description: System authentication.
    types:
    - uid: string
  - name: ManagedIdentity
    description: Managed Identity authentication.
    types:
    - uid: string
- name: AccountEncryption
  kind: object
  properties:
  - name: type
    description: The type of key used to encrypt the Account Key.
    types:
    - uid: AccountEncryptionKeyType
  - name: keyVaultProperties
    description: The properties of the key used to encrypt the account.
    types:
    - uid: KeyVaultProperties
  - name: identity
    description: The Key Vault identity.
    types:
    - uid: ResourceIdentity
  - name: status
    isReadyOnly: true
    description: The current status of the Key Vault mapping.
    types:
    - uid: string
- name: KeyDelivery
  kind: object
  properties:
  - name: accessControl
    description: The access control properties for Key Delivery.
    types:
    - uid: AccessControl
- name: PublicNetworkAccess
  description: Whether or not public network access is allowed for resources under the Media Services account.
  kind: enum
  properties:
  - name: Enabled
    description: Public network access is enabled.
    types:
    - uid: string
  - name: Disabled
    description: Public network access is disabled.
    types:
    - uid: string
- name: ProvisioningState
  description: Provisioning state of the Media Services account.
  kind: enum
  properties:
  - name: Failed
    description: Provisioning state failed.
    types:
    - uid: string
  - name: InProgress
    description: Provisioning state in progress.
    types:
    - uid: string
  - name: Succeeded
    description: Provisioning state succeeded.
    types:
    - uid: string
- name: PrivateEndpointConnection
  description: The Private Endpoint Connection resource.
  kind: object
  properties:
  - name: properties.privateEndpoint
    description: The resource of private end point.
    types:
    - uid: PrivateEndpoint
  - name: properties.privateLinkServiceConnectionState
    description: A collection of information about the state of the connection between service consumer and provider.
    types:
    - uid: PrivateLinkServiceConnectionState
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the private endpoint connection resource.
    types:
    - uid: PrivateEndpointConnectionProvisioningState
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: UserAssignedManagedIdentity
  kind: object
  properties:
  - name: clientId
    isReadyOnly: true
    description: The client ID.
    types:
    - uid: string
  - name: principalId
    isReadyOnly: true
    description: The principal ID.
    types:
    - uid: string
- name: StorageAccountType
  description: The type of the storage account.
  kind: enum
  properties:
  - name: Primary
    description: The primary storage account for the Media Services account.
    types:
    - uid: string
  - name: Secondary
    description: A secondary storage account for the Media Services account.
    types:
    - uid: string
- name: ResourceIdentity
  kind: object
  properties:
  - name: userAssignedIdentity
    description: The user assigned managed identity's ARM ID to use when accessing a resource.
    types:
    - uid: string
  - name: useSystemAssignedIdentity
    description: Indicates whether to use System Assigned Managed Identity. Mutual exclusive with User Assigned Managed Identity.
    types:
    - uid: boolean
- name: AccountEncryptionKeyType
  description: The type of key used to encrypt the Account Key.
  kind: enum
  properties:
  - name: SystemKey
    description: The Account Key is encrypted with a System Key.
    types:
    - uid: string
  - name: CustomerKey
    description: The Account Key is encrypted with a Customer Key.
    types:
    - uid: string
- name: KeyVaultProperties
  kind: object
  properties:
  - name: keyIdentifier
    description: The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).
    types:
    - uid: string
  - name: currentKeyIdentifier
    isReadyOnly: true
    description: The current key used to encrypt the Media Services account, including the key version.
    types:
    - uid: string
- name: AccessControl
  kind: object
  properties:
  - name: defaultAction
    description: The behavior for IP access control in Key Delivery.
    types:
    - uid: DefaultAction
  - name: ipAllowList
    description: The IP allow list for access control in Key Delivery. If the default action is set to 'Allow', the IP allow list must be empty.
    types:
    - uid: string
      isArray: true
- name: PrivateEndpoint
  description: The Private Endpoint resource.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The ARM identifier for Private Endpoint
    types:
    - uid: string
- name: PrivateLinkServiceConnectionState
  description: A collection of information about the state of the connection between service consumer and provider.
  kind: object
  properties:
  - name: status
    description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
    types:
    - uid: PrivateEndpointServiceConnectionStatus
  - name: description
    description: The reason for approval/rejection of the connection.
    types:
    - uid: string
  - name: actionsRequired
    description: A message indicating if changes on the service provider require any updates on the consumer.
    types:
    - uid: string
- name: PrivateEndpointConnectionProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
- name: DefaultAction
  description: The behavior for IP access control in Key Delivery.
  kind: enum
  properties:
  - name: Allow
    description: All public IP addresses are allowed.
    types:
    - uid: string
  - name: Deny
    description: Public IP addresses are blocked.
    types:
    - uid: string
- name: PrivateEndpointServiceConnectionStatus
  description: The private endpoint connection status.
  kind: enum
  properties:
  - name: Pending
    types:
    - uid: string
  - name: Approved
    types:
    - uid: string
  - name: Rejected
    types:
    - uid: string
examples:
- name: Get status of asynchronous operation.
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Media/locations/westus/mediaServicesOperationResults/6FBA62C4-99B5-4FF8-9826-FC4744A8864F?api-version=2021-11-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Media/locations/westus/mediaServicesOperationResults/6FBA62C4-99B5-4FF8-9826-FC4744A8864F?api-version=2021-11-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for MediaServicesOperationResults Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2021-11-01/examples/media-service-operation-result-by-id.json
           */
          /**
           * Sample code: Get status of asynchronous operation.
           *
           * @param manager Entry point to MediaServicesManager.
           */
          public static void getStatusOfAsynchronousOperation(
              com.azure.resourcemanager.mediaservices.MediaServicesManager manager) {
              manager
                  .mediaServicesOperationResults()
                  .getWithResponse("westus", "6FBA62C4-99B5-4FF8-9826-FC4744A8864F", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-mediaservices_2.2.0-beta.1/sdk/mediaservices/azure-resourcemanager-mediaservices/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armmediaservices_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/mediaservices/armmediaservices/v3"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/mediaservices/resource-manager/Microsoft.Media/stable/2021-11-01/examples/media-service-operation-result-by-id.json
      func ExampleOperationResultsClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armmediaservices.NewOperationResultsClient("00000000-0000-0000-0000-000000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx, "westus", "6FBA62C4-99B5-4FF8-9826-FC4744A8864F", nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fmediaservices%2Farmmediaservices%2Fv3.1.0/sdk/resourcemanager/mediaservices/armmediaservices/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AzureMediaServices } = require("@azure/arm-mediaservices");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Get media service operation result.
       *
       * @summary Get media service operation result.
       * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2021-11-01/examples/media-service-operation-result-by-id.json
       */
      async function getStatusOfAsynchronousOperation() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const locationName = "westus";
        const operationId = "6FBA62C4-99B5-4FF8-9826-FC4744A8864F";
        const credential = new DefaultAzureCredential();
        const client = new AzureMediaServices(credential, subscriptionId);
        const result = await client.mediaServicesOperationResults.get(locationName, operationId);
        console.log(result);
      }

      getStatusOfAsynchronousOperation().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-mediaservices_13.0.0/sdk/mediaservices/arm-mediaservices/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "202"
  - statusCode: "200"
    body: >-
      {
        "name": "contosomovies",
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaServices/contosomovies",
        "type": "Microsoft.Media/mediaServices",
        "location": "South Central US",
        "tags": {
          "key1": "value1",
          "key2": "value2"
        },
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
            "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1": {
              "principalId": "00000000-0000-0000-0000-000000000000",
              "clientId": "00000000-0000-0000-0000-000000000000"
            },
            "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id2": {
              "principalId": "00000000-0000-0000-0000-000000000000",
              "clientId": "00000000-0000-0000-0000-000000000000"
            }
          }
        },
        "properties": {
          "provisioningState": "Succeeded",
          "encryption": {
            "type": "CustomerKey",
            "keyVaultProperties": {
              "keyIdentifier": "https://keyvault.vault.azure.net/keys/key1",
              "currentKeyIdentifier": "https://keyvault.vault.azure.net/keys/key1/ver1"
            },
            "identity": {
              "userAssignedIdentity": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1",
              "useSystemAssignedIdentity": false
            }
          },
          "storageAccounts": [
            {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Storage/storageAccounts/contososportsstore",
              "type": "Primary",
              "identity": {
                "userAssignedIdentity": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1",
                "useSystemAssignedIdentity": false
              }
            }
          ],
          "storageAuthentication": "ManagedIdentity",
          "publicNetworkAccess": "Enabled",
          "keyDelivery": {
            "accessControl": {
              "defaultAction": "Allow"
            }
          },
          "privateEndpointConnections": [
            {
              "name": "00000000-0000-0000-0000-000000000001",
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosotv/privateEndpointConnections/00000000-0000-0000-0000-000000000001",
              "type": "Microsoft.Media/mediaservices/privateEndpointConnections",
              "properties": {
                "provisioningState": "Succeeded",
                "privateLinkServiceConnectionState": {
                  "status": "Approved",
                  "description": "test description"
                },
                "privateEndpoint": {
                  "id": "/subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/reosuceGroup1/providers/Microsoft.Network/privateEndpoints/pe1"
                }
              }
            },
            {
              "name": "00000000-0000-0000-0000-000000000002",
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosotv/privateEndpointConnections/00000000-0000-0000-0000-000000000002",
              "type": "Microsoft.Media/mediaservices/privateEndpointConnections",
              "properties": {
                "provisioningState": "Succeeded",
                "privateLinkServiceConnectionState": {
                  "status": "Pending",
                  "description": "test description"
                },
                "privateEndpoint": {
                  "id": "/subscriptions/22222222-2222-2222-2222-222222222222/resourceGroups/reosuceGroup2/providers/Microsoft.Network/privateEndpoints/pe2"
                }
              }
            }
          ]
        }
      }
security: []
metadata:
  description: >
    Learn more about Media Services service - Get operation result.

    Get media service operation result.
errorCodes: []
