{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "version": "2018-07-01",
    "title": "Azure Media Services",
    "description": "This Swagger was generated by the API Framework."
  },
  "host": "management.azure.com",
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      }
    }
  },
  "definitions": {
    "TrackPropertyCondition": {
      "properties": {
        "property": {
          "type": "string",
          "enum": [
            "Unknown",
            "FourCC"
          ],
          "x-ms-enum": {
            "name": "TrackPropertyType",
            "values": [
              {
                "value": "Unknown",
                "description": "Unknown track property"
              },
              {
                "value": "FourCC",
                "description": "Track FourCC"
              }
            ],
            "modelAsString": true
          },
          "description": "Track property type"
        },
        "operation": {
          "type": "string",
          "enum": [
            "Unknown",
            "Equal"
          ],
          "x-ms-enum": {
            "name": "TrackPropertyCompareOperation",
            "values": [
              {
                "value": "Unknown",
                "description": "Unknown track property compare operation"
              },
              {
                "value": "Equal",
                "description": "Equal operation"
              }
            ],
            "modelAsString": true
          },
          "description": "Track property condition operation"
        },
        "value": {
          "type": "string",
          "description": "Track property value"
        }
      },
      "type": "object",
      "required": [
        "property",
        "operation"
      ],
      "description": "Class to specify one track property condition"
    },
    "TrackSelection": {
      "properties": {
        "trackSelections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackPropertyCondition"
          },
          "description": "TrackSelections is a track property condition list which can specify track(s)"
        }
      },
      "type": "object",
      "description": "Class to select a track"
    },
    "DefaultKey": {
      "properties": {
        "label": {
          "type": "string",
          "description": "Label can be used to specify Content Key when creating a Streaming Locator"
        },
        "policyName": {
          "type": "string",
          "description": "Policy used by Default Key"
        }
      },
      "type": "object",
      "description": "Class to specify properties of default content key for each encryption scheme"
    },
    "StreamingPolicyContentKey": {
      "properties": {
        "label": {
          "type": "string",
          "description": "Label can be used to specify Content Key when creating a Streaming Locator"
        },
        "policyName": {
          "type": "string",
          "description": "Policy used by Content Key"
        },
        "tracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackSelection"
          },
          "description": "Tracks which use this content key"
        }
      },
      "type": "object",
      "description": "Class to specify properties of content key"
    },
    "StreamingPolicyContentKeys": {
      "properties": {
        "defaultKey": {
          "$ref": "#/definitions/DefaultKey",
          "description": "Default content key for an encryption scheme"
        },
        "keyToTrackMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StreamingPolicyContentKey"
          },
          "description": "Representing tracks needs separate content key"
        }
      },
      "type": "object",
      "description": "Class to specify properties of all content keys in Streaming Policy"
    },
    "StreamingPolicyPlayReadyConfiguration": {
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
        },
        "playReadyCustomAttributes": {
          "type": "string",
          "description": "Custom attributes for PlayReady"
        }
      },
      "type": "object",
      "description": "Class to specify configurations of PlayReady in Streaming Policy"
    },
    "StreamingPolicyWidevineConfiguration": {
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
        }
      },
      "type": "object",
      "description": "Class to specify configurations of Widevine in Streaming Policy"
    },
    "StreamingPolicyFairPlayConfiguration": {
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
        },
        "allowPersistentLicense": {
          "type": "boolean",
          "description": "All license to be persistent or not"
        }
      },
      "type": "object",
      "required": [
        "allowPersistentLicense"
      ],
      "description": "Class to specify configurations of FairPlay in Streaming Policy"
    },
    "CbcsDrmConfiguration": {
      "properties": {
        "fairPlay": {
          "$ref": "#/definitions/StreamingPolicyFairPlayConfiguration",
          "description": "FairPlay configurations"
        },
        "playReady": {
          "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration",
          "description": "PlayReady configurations"
        },
        "widevine": {
          "$ref": "#/definitions/StreamingPolicyWidevineConfiguration",
          "description": "Widevine configurations"
        }
      },
      "type": "object",
      "description": "Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy"
    },
    "CencDrmConfiguration": {
      "properties": {
        "playReady": {
          "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration",
          "description": "PlayReady configurations"
        },
        "widevine": {
          "$ref": "#/definitions/StreamingPolicyWidevineConfiguration",
          "description": "Widevine configurations"
        }
      },
      "type": "object",
      "description": "Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy"
    },
    "EnabledProtocols": {
      "properties": {
        "download": {
          "type": "boolean",
          "description": "Enable Download protocol or not"
        },
        "dash": {
          "type": "boolean",
          "description": "Enable DASH protocol or not"
        },
        "hls": {
          "type": "boolean",
          "description": "Enable HLS protocol or not"
        },
        "smoothStreaming": {
          "type": "boolean",
          "description": "Enable SmoothStreaming protocol or not"
        }
      },
      "type": "object",
      "required": [
        "download",
        "dash",
        "hls",
        "smoothStreaming"
      ],
      "description": "Class to specify which protocols are enabled"
    },
    "NoEncryption": {
      "properties": {
        "enabledProtocols": {
          "$ref": "#/definitions/EnabledProtocols",
          "description": "Representing supported protocols"
        }
      },
      "type": "object",
      "description": "Class for NoEncryption scheme"
    },
    "EnvelopeEncryption": {
      "properties": {
        "enabledProtocols": {
          "$ref": "#/definitions/EnabledProtocols",
          "description": "Representing supported protocols"
        },
        "clearTracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackSelection"
          },
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "$ref": "#/definitions/StreamingPolicyContentKeys",
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks"
        },
        "customKeyAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering keys to end user players.  Not required when using Azure Media Services for issuing keys.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
        }
      },
      "type": "object",
      "description": "Class for EnvelopeEncryption encryption scheme"
    },
    "CommonEncryptionCenc": {
      "properties": {
        "enabledProtocols": {
          "$ref": "#/definitions/EnabledProtocols",
          "description": "Representing supported protocols"
        },
        "clearTracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackSelection"
          },
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "$ref": "#/definitions/StreamingPolicyContentKeys",
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks"
        },
        "drm": {
          "$ref": "#/definitions/CencDrmConfiguration",
          "description": "Configuration of DRMs for CommonEncryptionCenc encryption scheme"
        }
      },
      "type": "object",
      "description": "Class for envelope encryption scheme"
    },
    "CommonEncryptionCbcs": {
      "properties": {
        "enabledProtocols": {
          "$ref": "#/definitions/EnabledProtocols",
          "description": "Representing supported protocols"
        },
        "clearTracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackSelection"
          },
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "$ref": "#/definitions/StreamingPolicyContentKeys",
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks"
        },
        "drm": {
          "$ref": "#/definitions/CbcsDrmConfiguration",
          "description": "Configuration of DRMs for current encryption scheme"
        }
      },
      "type": "object",
      "description": "Class for CommonEncryptionCbcs encryption scheme"
    },
    "StreamingPolicyProperties": {
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Creation time of Streaming Policy",
          "readOnly": true,
          "x-nullable": false
        },
        "defaultContentKeyPolicyName": {
          "type": "string",
          "description": "Default ContentKey used by current Streaming Policy"
        },
        "envelopeEncryption": {
          "$ref": "#/definitions/EnvelopeEncryption",
          "description": "Configuration of EnvelopeEncryption"
        },
        "commonEncryptionCenc": {
          "$ref": "#/definitions/CommonEncryptionCenc",
          "description": "Configuration of CommonEncryptionCenc"
        },
        "commonEncryptionCbcs": {
          "$ref": "#/definitions/CommonEncryptionCbcs",
          "description": "Configuration of CommonEncryptionCbcs"
        },
        "noEncryption": {
          "$ref": "#/definitions/NoEncryption",
          "description": "Configurations of NoEncryption"
        }
      },
      "type": "object",
      "description": "Class to specify properties of Streaming Policy"
    },
    "StreamingPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StreamingPolicyProperties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "description": "A Streaming Policy resource"
    },
    "StreamingLocatorContentKey": {
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "ID of Content Key"
        },
        "type": {
          "type": "string",
          "enum": [
            "CommonEncryptionCenc",
            "CommonEncryptionCbcs",
            "EnvelopeEncryption"
          ],
          "x-ms-enum": {
            "name": "StreamingLocatorContentKeyType",
            "values": [
              {
                "value": "CommonEncryptionCenc",
                "description": "Common Encryption using CENC"
              },
              {
                "value": "CommonEncryptionCbcs",
                "description": "Common Encryption using CBCS"
              },
              {
                "value": "EnvelopeEncryption",
                "description": "Envelope Encryption"
              }
            ],
            "modelAsString": true
          },
          "description": "Encryption type of Content Key",
          "readOnly": true,
          "x-nullable": false
        },
        "labelReferenceInStreamingPolicy": {
          "type": "string",
          "description": "Label of Content Key as specified in the Streaming Policy"
        },
        "value": {
          "type": "string",
          "description": "Value of Content Key"
        },
        "policyName": {
          "type": "string",
          "description": "ContentKeyPolicy used by Content Key",
          "readOnly": true
        },
        "tracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackSelection"
          },
          "description": "Tracks which use this Content Key",
          "readOnly": true
        }
      },
      "type": "object",
      "required": [
        "id"
      ],
      "description": "Class for content key in Streaming Locator"
    },
    "StreamingPath": {
      "properties": {
        "streamingProtocol": {
          "type": "string",
          "enum": [
            "Hls",
            "Dash",
            "SmoothStreaming",
            "Download"
          ],
          "x-ms-enum": {
            "name": "StreamingPolicyStreamingProtocol",
            "values": [
              {
                "value": "Hls",
                "description": "HLS protocol"
              },
              {
                "value": "Dash",
                "description": "DASH protocol"
              },
              {
                "value": "SmoothStreaming",
                "description": "SmoothStreaming protocol"
              },
              {
                "value": "Download",
                "description": "Download protocol"
              }
            ],
            "modelAsString": true
          },
          "description": "Streaming protocol"
        },
        "encryptionScheme": {
          "type": "string",
          "enum": [
            "NoEncryption",
            "EnvelopeEncryption",
            "CommonEncryptionCenc",
            "CommonEncryptionCbcs"
          ],
          "x-ms-enum": {
            "name": "EncryptionScheme",
            "values": [
              {
                "value": "NoEncryption",
                "description": "NoEncryption scheme"
              },
              {
                "value": "EnvelopeEncryption",
                "description": "EnvelopeEncryption scheme"
              },
              {
                "value": "CommonEncryptionCenc",
                "description": "CommonEncryptionCenc scheme"
              },
              {
                "value": "CommonEncryptionCbcs",
                "description": "CommonEncryptionCbcs scheme"
              }
            ],
            "modelAsString": true
          },
          "description": "Encryption scheme"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Streaming paths for each protocol and encryptionScheme pair"
        }
      },
      "type": "object",
      "required": [
        "streamingProtocol",
        "encryptionScheme"
      ],
      "description": "Class of paths for streaming"
    },
    "StreamingLocatorProperties": {
      "properties": {
        "assetName": {
          "type": "string",
          "description": "Asset Name"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the Streaming Locator.",
          "readOnly": true,
          "x-nullable": false
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the Streaming Locator."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the Streaming Locator."
        },
        "streamingLocatorId": {
          "type": "string",
          "format": "uuid",
          "description": "The StreamingLocatorId of the Streaming Locator."
        },
        "streamingPolicyName": {
          "type": "string",
          "description": "Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'"
        },
        "defaultContentKeyPolicyName": {
          "type": "string",
          "description": "Name of the default ContentKeyPolicy used by this Streaming Locator."
        },
        "contentKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StreamingLocatorContentKey"
          },
          "description": "The ContentKeys used by this Streaming Locator."
        },
        "alternativeMediaId": {
          "type": "string",
          "description": "Alternative Media ID of this Streaming Locator"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of asset or account filters which apply to this streaming locator"
        }
      },
      "type": "object",
      "required": [
        "assetName",
        "streamingPolicyName"
      ],
      "description": "Properties of the Streaming Locator."
    },
    "ListContentKeysResponse": {
      "properties": {
        "contentKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StreamingLocatorContentKey"
          },
          "description": "ContentKeys used by current Streaming Locator"
        }
      },
      "type": "object",
      "description": "Class of response for listContentKeys action"
    },
    "ListPathsResponse": {
      "properties": {
        "streamingPaths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StreamingPath"
          },
          "description": "Streaming Paths supported by current Streaming Locator"
        },
        "downloadPaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Download Paths supported by current Streaming Locator"
        }
      },
      "type": "object",
      "description": "Class of response for listPaths action"
    },
    "StreamingLocator": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StreamingLocatorProperties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "description": "A Streaming Locator resource"
    },
    "ODataError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "A language-independent error name."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "type": "string",
          "description": "The target of the error (for example, the name of the property in error)."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ODataError"
          },
          "description": "The error details."
        }
      },
      "type": "object",
      "description": "Information about an error."
    },
    "ApiError": {
      "properties": {
        "error": {
          "$ref": "#/definitions/ODataError",
          "description": "The error properties."
        }
      },
      "type": "object",
      "description": "The API error."
    },
    "StreamingPolicyCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StreamingPolicy"
          },
          "description": "A collection of StreamingPolicy items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of StreamingPolicy items."
    },
    "StreamingLocatorCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StreamingLocator"
          },
          "description": "A collection of StreamingLocator items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of StreamingLocator items."
    },
    "ProxyResource": {
      "description": "The resource model definition for a ARM proxy resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "TrackedResource": {
      "description": "The resource model definition for a ARM tracked resource.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The Azure Region of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "description": "The core properties of ARM resources.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource."
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators/{streamingLocatorName}/listContentKeys": {
      "post": {
        "summary": "List Content Keys",
        "description": "List Content Keys used by this Streaming Locator",
        "operationId": "StreamingLocators_ListContentKeys",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListContentKeysResponse"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "streamingLocatorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Streaming Locator name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "List Content Keys": {
            "parameters": {
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "resourceGroupName": "contoso",
              "accountName": "contosomedia",
              "streamingLocatorName": "secureStreamingLocator",
              "api-version": "2018-07-01"
            },
            "responses": {
              "200": {
                "body": {
                  "contentKeys": [
                    {
                      "id": "9259eb06-eeee-4f77-987f-48f4ea5c649f",
                      "type": "EnvelopeEncryption",
                      "labelReferenceInStreamingPolicy": "aesDefaultKey",
                      "value": "QpiqeQROdN5xamnfUF2Wdw==",
                      "policyName": "PolicyWithMultipleOptions",
                      "tracks": []
                    },
                    {
                      "id": "06bfeff1-2bb6-4f58-af27-a2767f058bca",
                      "type": "CommonEncryptionCenc",
                      "labelReferenceInStreamingPolicy": "cencDefaultKey",
                      "value": "ZjgWhNnqnqcov/h+wrYusw==",
                      "policyName": "PolicyWithMultipleOptions",
                      "tracks": []
                    },
                    {
                      "id": "799e78a0-ed6f-4179-9222-ed4ec4223cec",
                      "type": "CommonEncryptionCbcs",
                      "labelReferenceInStreamingPolicy": "cbcsDefaultKey",
                      "value": "FjZ3n3yRcVxRFftdYFbe9g==",
                      "policyName": "PolicyWithMultipleOptions",
                      "tracks": []
                    }
                  ]
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "List Content Keys"
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The unique identifier for a Microsoft Azure subscription."
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group within the Azure subscription.",
      "x-ms-parameter-location": "method"
    },
    "MediaServicesAccountName": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Media Services account name.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The Version of the API to be used with the client request."
    }
  },
  "x-internal-service-id": "media",
  "x-internal-service-name": "Media Services",
  "x-internal-toc-name": "Streaming Locators",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "ListContentKeys",
  "x-internal-operation-name": "List Content Keys"
}