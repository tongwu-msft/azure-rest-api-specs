### YamlMime:RESTOperation
uid: management.azure.com.media.assets.liststreaminglocators
name: List Streaming Locators
service: Media Services
groupName: Assets
apiVersion: 2021-11-01
summary: "List Streaming Locators  \nLists Streaming Locators which are associated with this asset."
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/listStreamingLocators?api-version=2021-11-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The unique identifier for a Microsoft Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the Azure subscription.
  types:
  - uid: string
- name: accountName
  in: path
  isRequired: true
  description: The Media Services account name.
  types:
  - uid: string
- name: assetName
  in: path
  isRequired: true
  description: The Asset name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: ListStreamingLocatorsResponse
- name: Other Status Codes
  description: Detailed error information.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: ListStreamingLocatorsResponse
  description: The Streaming Locators associated with this Asset.
  kind: object
  properties:
  - name: streamingLocators
    isReadyOnly: true
    description: The list of Streaming Locators.
    types:
    - uid: AssetStreamingLocator
      isArray: true
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: AssetStreamingLocator
  description: Properties of the Streaming Locator.
  kind: object
  properties:
  - name: name
    isReadyOnly: true
    description: Streaming Locator name.
    types:
    - uid: string
  - name: assetName
    isReadyOnly: true
    description: Asset Name.
    types:
    - uid: string
  - name: created
    isReadyOnly: true
    description: The creation time of the Streaming Locator.
    types:
    - uid: string
  - name: startTime
    isReadyOnly: true
    description: The start time of the Streaming Locator.
    types:
    - uid: string
  - name: endTime
    isReadyOnly: true
    description: The end time of the Streaming Locator.
    types:
    - uid: string
  - name: streamingLocatorId
    isReadyOnly: true
    description: StreamingLocatorId of the Streaming Locator.
    types:
    - uid: string
  - name: streamingPolicyName
    isReadyOnly: true
    description: Name of the Streaming Policy used by this Streaming Locator.
    types:
    - uid: string
  - name: defaultContentKeyPolicyName
    isReadyOnly: true
    description: Name of the default ContentKeyPolicy used by this Streaming Locator.
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: List Asset SAS URLs
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaServices/contosomedia/assets/ClimbingMountSaintHelens/listStreamingLocators?api-version=2021-11-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaServices/contosomedia/assets/ClimbingMountSaintHelens/listStreamingLocators?api-version=2021-11-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for Assets ListStreamingLocators. */
      public final class Main {
          /*
           * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2021-11-01/examples/assets-list-streaming-locators.json
           */
          /**
           * Sample code: List Asset SAS URLs.
           *
           * @param manager Entry point to MediaServicesManager.
           */
          public static void listAssetSASURLs(com.azure.resourcemanager.mediaservices.MediaServicesManager manager) {
              manager
                  .assets()
                  .listStreamingLocatorsWithResponse("contoso", "contosomedia", "ClimbingMountSaintHelens", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-mediaservices_2.1.0/sdk/mediaservices/azure-resourcemanager-mediaservices/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armmediaservices_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/mediaservices/armmediaservices/v3"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/mediaservices/resource-manager/Microsoft.Media/stable/2021-11-01/examples/assets-list-streaming-locators.json
      func ExampleAssetsClient_ListStreamingLocators() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armmediaservices.NewAssetsClient("00000000-0000-0000-0000-000000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.ListStreamingLocators(ctx,
      		"contoso",
      		"contosomedia",
      		"ClimbingMountSaintHelens",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fmediaservices%2Farmmediaservices%2Fv3.0.0/sdk/resourcemanager/mediaservices/armmediaservices/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AzureMediaServices } = require("@azure/arm-mediaservices");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Lists Streaming Locators which are associated with this asset.
       *
       * @summary Lists Streaming Locators which are associated with this asset.
       * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2021-11-01/examples/assets-list-streaming-locators.json
       */
      async function listAssetSasUrLs() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "contoso";
        const accountName = "contosomedia";
        const assetName = "ClimbingMountSaintHelens";
        const credential = new DefaultAzureCredential();
        const client = new AzureMediaServices(credential, subscriptionId);
        const result = await client.assets.listStreamingLocators(
          resourceGroupName,
          accountName,
          assetName
        );
        console.log(result);
      }

      listAssetSasUrLs().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-mediaservices_12.1.0/sdk/mediaservices/arm-mediaservices/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "streamingLocators": [
          {
            "name": "secureStreamingLocator",
            "assetName": "ClimbingMountSaintHelens",
            "created": "2018-08-08T18:29:26.9729344Z",
            "endTime": "9999-12-31T23:59:59.9999999Z",
            "streamingLocatorId": "36b74ce3-20b4-4de0-84f1-97e9138e886c",
            "streamingPolicyName": "secureStreamingPolicy"
          },
          {
            "name": "clearStreamingLocator",
            "assetName": "ClimbingMountSaintHelens",
            "created": "2018-08-08T18:29:26.9487636Z",
            "endTime": "9999-12-31T23:59:59.9999999Z",
            "streamingLocatorId": "3e8d9ac3-50f6-4f6d-8482-078ceb56f23a",
            "streamingPolicyName": "clearStreamingPolicy"
          }
        ]
      }
security: []
metadata:
  description: >
    Learn more about Media Services service - List Streaming Locators

    Lists Streaming Locators which are associated with this asset.
errorCodes: []
