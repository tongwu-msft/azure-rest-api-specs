### YamlMime:RESTOperation
uid: management.azure.com.media.mediaservices.listedgepolicies
name: List Edge Policies
service: Media Services
groupName: Mediaservices
apiVersion: 2021-11-01
summary: "List the media edge policies associated with the Media Services account.  \nList all the media edge policies associated with the Media Services account."
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/listEdgePolicies?api-version=2021-11-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The unique identifier for a Microsoft Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the Azure subscription.
  types:
  - uid: string
- name: accountName
  in: path
  isRequired: true
  description: The Media Services account name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: EdgePolicies
- name: Other Status Codes
  description: Detailed error information.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: deviceId
    in: body
    description: Unique identifier of the edge device.
    types:
    - uid: string
requestHeader: []
definitions:
- name: EdgePolicies
  kind: object
  properties:
  - name: usageDataCollectionPolicy
    description: ''
    types:
    - uid: EdgeUsageDataCollectionPolicy
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: ListEdgePoliciesInput
  kind: object
  properties:
  - name: deviceId
    description: Unique identifier of the edge device.
    types:
    - uid: string
- name: EdgeUsageDataCollectionPolicy
  kind: object
  properties:
  - name: dataCollectionFrequency
    description: Usage data collection frequency in ISO 8601 duration format e.g. PT10M , PT5H.
    types:
    - uid: string
  - name: dataReportingFrequency
    description: Usage data reporting frequency in ISO 8601 duration format e.g. PT10M , PT5H.
    types:
    - uid: string
  - name: maxAllowedUnreportedUsageDuration
    description: Maximum time for which the functionality of the device will not be hampered for not reporting the usage data.
    types:
    - uid: string
  - name: eventHubDetails
    description: Details of Event Hub where the usage will be reported.
    types:
    - uid: EdgeUsageDataEventHub
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: EdgeUsageDataEventHub
  kind: object
  properties:
  - name: name
    description: Name of the Event Hub where usage will be reported.
    types:
    - uid: string
  - name: namespace
    description: Namespace of the Event Hub where usage will be reported.
    types:
    - uid: string
  - name: token
    description: SAS token needed to interact with Event Hub.
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: List the media edge policies.
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contososports/listEdgePolicies?api-version=2021-11-01
    body: >-
      {
        "deviceId": "contosiothubhost_contosoiotdevice"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contososports/listEdgePolicies?api-version=2021-11-01

      {
        "deviceId": "contosiothubhost_contosoiotdevice"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.mediaservices.models.ListEdgePoliciesInput;

      /** Samples for Mediaservices ListEdgePolicies. */
      public final class Main {
          /*
           * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2021-11-01/examples/accounts-list-media-edge-policies.json
           */
          /**
           * Sample code: List the media edge policies.
           *
           * @param manager Entry point to MediaServicesManager.
           */
          public static void listTheMediaEdgePolicies(com.azure.resourcemanager.mediaservices.MediaServicesManager manager) {
              manager
                  .mediaservices()
                  .listEdgePoliciesWithResponse(
                      "contoso",
                      "contososports",
                      new ListEdgePoliciesInput().withDeviceId("contosiothubhost_contosoiotdevice"),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-mediaservices_2.2.0-beta.1/sdk/mediaservices/azure-resourcemanager-mediaservices/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armmediaservices_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/mediaservices/armmediaservices/v3"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/mediaservices/resource-manager/Microsoft.Media/stable/2021-11-01/examples/accounts-list-media-edge-policies.json
      func ExampleClient_ListEdgePolicies() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armmediaservices.NewClient("00000000-0000-0000-0000-000000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.ListEdgePolicies(ctx, "contoso", "contososports", armmediaservices.ListEdgePoliciesInput{
      		DeviceID: to.Ptr("contosiothubhost_contosoiotdevice"),
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fmediaservices%2Farmmediaservices%2Fv3.1.0/sdk/resourcemanager/mediaservices/armmediaservices/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AzureMediaServices } = require("@azure/arm-mediaservices");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to List all the media edge policies associated with the Media Services account.
       *
       * @summary List all the media edge policies associated with the Media Services account.
       * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2021-11-01/examples/accounts-list-media-edge-policies.json
       */
      async function listTheMediaEdgePolicies() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "contoso";
        const accountName = "contososports";
        const parameters = {
          deviceId: "contosiothubhost_contosoiotdevice",
        };
        const credential = new DefaultAzureCredential();
        const client = new AzureMediaServices(credential, subscriptionId);
        const result = await client.mediaservices.listEdgePolicies(
          resourceGroupName,
          accountName,
          parameters
        );
        console.log(result);
      }

      listTheMediaEdgePolicies().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-mediaservices_13.0.0/sdk/mediaservices/arm-mediaservices/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "usageDataCollectionPolicy": {
          "dataCollectionFrequency": "PT10M",
          "dataReportingFrequency": "PT1H",
          "maxAllowedUnreportedUsageDuration": "PT36H",
          "eventHubDetails": {
            "name": "ams-x",
            "namespace": "ams-y-1-1",
            "token": "SharedAccessSignature sr=sb%3a%2f%2fams-x.servicebus.windows.net%2fams-y-1-1%2fPublishers%2f96a510a1-0565-492a-a67f-83d1aed1d1f6_SampleDeviceId&sig=signature_value%3d&se=1584073736&skn=EdgeUsageData"
          }
        }
      }
security: []
metadata:
  description: >
    List the media edge policies associated with the Media Services account.

    List all the media edge policies associated with the Media Services account.
errorCodes: []
