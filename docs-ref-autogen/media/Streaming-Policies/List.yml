### YamlMime:RESTOperation
uid: management.azure.com.media.streamingpolicies.list
name: List
service: Media Services
groupName: Streaming Policies
apiVersion: 2022-08-01
summary: "List Streaming Policies  \nLists the Streaming Policies in the account"
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingPolicies?api-version=2022-08-01
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingPolicies?api-version=2022-08-01&$filter={$filter}&$top={$top}&$orderby={$orderby}
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The unique identifier for a Microsoft Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the Azure subscription.
  types:
  - uid: string
- name: accountName
  in: path
  isRequired: true
  description: The Media Services account name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The version of the API to be used with the client request.
  types:
  - uid: string
- name: $filter
  in: query
  description: Restricts the set of items returned.
  types:
  - uid: string
- name: $top
  in: query
  description: Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.
  types:
  - uid: integer
  format: int32
- name: $orderby
  in: query
  description: Specifies the key by which the result collection should be ordered.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: StreamingPolicyCollection
- name: Other Status Codes
  description: Detailed error information.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: StreamingPolicyCollection
  description: A collection of StreamingPolicy items.
  kind: object
  properties:
  - name: value
    description: A collection of StreamingPolicy items.
    types:
    - uid: StreamingPolicy
      isArray: true
  - name: '@odata.nextLink'
    description: A link to the next page of the collection (when the collection contains too many results to return in one response).
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: StreamingPolicy
  description: A Streaming Policy resource
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: The system metadata relating to this resource.
    types:
    - uid: systemData
  - name: properties.created
    isReadyOnly: true
    description: Creation time of Streaming Policy
    types:
    - uid: string
  - name: properties.defaultContentKeyPolicyName
    description: Default ContentKey used by current Streaming Policy
    types:
    - uid: string
  - name: properties.envelopeEncryption
    description: Configuration of EnvelopeEncryption
    types:
    - uid: EnvelopeEncryption
  - name: properties.commonEncryptionCenc
    description: Configuration of CommonEncryptionCenc
    types:
    - uid: CommonEncryptionCenc
  - name: properties.commonEncryptionCbcs
    description: Configuration of CommonEncryptionCbcs
    types:
    - uid: CommonEncryptionCbcs
  - name: properties.noEncryption
    description: Configurations of NoEncryption
    types:
    - uid: NoEncryption
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: EnvelopeEncryption
  description: Class for EnvelopeEncryption encryption scheme
  kind: object
  properties:
  - name: enabledProtocols
    description: Representing supported protocols
    types:
    - uid: EnabledProtocols
  - name: clearTracks
    description: Representing which tracks should not be encrypted
    types:
    - uid: TrackSelection
      isArray: true
  - name: contentKeys
    description: Representing default content key for each encryption scheme and separate content keys for specific tracks
    types:
    - uid: StreamingPolicyContentKeys
  - name: customKeyAcquisitionUrlTemplate
    description: Template for the URL of the custom service delivering keys to end user players.  Not required when using Azure Media Services for issuing keys.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
    types:
    - uid: string
- name: CommonEncryptionCenc
  description: Class for envelope encryption scheme
  kind: object
  properties:
  - name: enabledProtocols
    description: Representing supported protocols
    types:
    - uid: EnabledProtocols
  - name: clearTracks
    description: Representing which tracks should not be encrypted
    types:
    - uid: TrackSelection
      isArray: true
  - name: contentKeys
    description: Representing default content key for each encryption scheme and separate content keys for specific tracks
    types:
    - uid: StreamingPolicyContentKeys
  - name: drm
    description: Configuration of DRMs for CommonEncryptionCenc encryption scheme
    types:
    - uid: CencDrmConfiguration
  - name: clearKeyEncryptionConfiguration
    description: Optional configuration supporting ClearKey in CommonEncryptionCenc encryption scheme.
    types:
    - uid: ClearKeyEncryptionConfiguration
- name: CommonEncryptionCbcs
  description: Class for CommonEncryptionCbcs encryption scheme
  kind: object
  properties:
  - name: enabledProtocols
    description: Representing supported protocols
    types:
    - uid: EnabledProtocols
  - name: clearTracks
    description: Representing which tracks should not be encrypted
    types:
    - uid: TrackSelection
      isArray: true
  - name: contentKeys
    description: Representing default content key for each encryption scheme and separate content keys for specific tracks
    types:
    - uid: StreamingPolicyContentKeys
  - name: drm
    description: Configuration of DRMs for current encryption scheme
    types:
    - uid: CbcsDrmConfiguration
  - name: clearKeyEncryptionConfiguration
    description: Optional configuration supporting ClearKey in CommonEncryptionCbcs encryption scheme.
    types:
    - uid: ClearKeyEncryptionConfiguration
- name: NoEncryption
  description: Class for NoEncryption scheme
  kind: object
  properties:
  - name: enabledProtocols
    description: Representing supported protocols
    types:
    - uid: EnabledProtocols
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: EnabledProtocols
  description: Class to specify which protocols are enabled
  kind: object
  properties:
  - name: download
    description: Enable Download protocol or not
    types:
    - uid: boolean
  - name: dash
    description: Enable DASH protocol or not
    types:
    - uid: boolean
  - name: hls
    description: Enable HLS protocol or not
    types:
    - uid: boolean
  - name: smoothStreaming
    description: Enable SmoothStreaming protocol or not
    types:
    - uid: boolean
- name: TrackSelection
  description: Class to select a track
  kind: object
  properties:
  - name: trackSelections
    description: TrackSelections is a track property condition list which can specify track(s)
    types:
    - uid: TrackPropertyCondition
      isArray: true
- name: StreamingPolicyContentKeys
  description: Class to specify properties of all content keys in Streaming Policy
  kind: object
  properties:
  - name: defaultKey
    description: Default content key for an encryption scheme
    types:
    - uid: DefaultKey
  - name: keyToTrackMappings
    description: Representing tracks needs separate content key
    types:
    - uid: StreamingPolicyContentKey
      isArray: true
- name: CencDrmConfiguration
  description: Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy
  kind: object
  properties:
  - name: playReady
    description: PlayReady configurations
    types:
    - uid: StreamingPolicyPlayReadyConfiguration
  - name: widevine
    description: Widevine configurations
    types:
    - uid: StreamingPolicyWidevineConfiguration
- name: ClearKeyEncryptionConfiguration
  description: Class to specify ClearKey configuration of common encryption schemes in Streaming Policy
  kind: object
  properties:
  - name: customKeysAcquisitionUrlTemplate
    description: Template for the URL of the custom service delivering content keys to end user players. Not required when using Azure Media Services for issuing licenses. The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token value is {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId.
    types:
    - uid: string
- name: CbcsDrmConfiguration
  description: Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy
  kind: object
  properties:
  - name: fairPlay
    description: FairPlay configurations
    types:
    - uid: StreamingPolicyFairPlayConfiguration
  - name: playReady
    description: PlayReady configurations
    types:
    - uid: StreamingPolicyPlayReadyConfiguration
  - name: widevine
    description: Widevine configurations
    types:
    - uid: StreamingPolicyWidevineConfiguration
- name: TrackPropertyCondition
  description: Class to specify one track property condition
  kind: object
  properties:
  - name: property
    description: Track property type
    types:
    - uid: TrackPropertyType
  - name: operation
    description: Track property condition operation
    types:
    - uid: TrackPropertyCompareOperation
  - name: value
    description: Track property value
    types:
    - uid: string
- name: DefaultKey
  description: Class to specify properties of default content key for each encryption scheme
  kind: object
  properties:
  - name: label
    description: Label can be used to specify Content Key when creating a Streaming Locator
    types:
    - uid: string
  - name: policyName
    description: Policy used by Default Key
    types:
    - uid: string
- name: StreamingPolicyContentKey
  description: Class to specify properties of content key
  kind: object
  properties:
  - name: label
    description: Label can be used to specify Content Key when creating a Streaming Locator
    types:
    - uid: string
  - name: policyName
    description: Policy used by Content Key
    types:
    - uid: string
  - name: tracks
    description: Tracks which use this content key
    types:
    - uid: TrackSelection
      isArray: true
- name: StreamingPolicyPlayReadyConfiguration
  description: Class to specify configurations of PlayReady in Streaming Policy
  kind: object
  properties:
  - name: customLicenseAcquisitionUrlTemplate
    description: Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
    types:
    - uid: string
  - name: playReadyCustomAttributes
    description: Custom attributes for PlayReady
    types:
    - uid: string
- name: StreamingPolicyWidevineConfiguration
  description: Class to specify configurations of Widevine in Streaming Policy
  kind: object
  properties:
  - name: customLicenseAcquisitionUrlTemplate
    description: Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
    types:
    - uid: string
- name: StreamingPolicyFairPlayConfiguration
  description: Class to specify configurations of FairPlay in Streaming Policy
  kind: object
  properties:
  - name: customLicenseAcquisitionUrlTemplate
    description: Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
    types:
    - uid: string
  - name: allowPersistentLicense
    description: All license to be persistent or not
    types:
    - uid: boolean
- name: TrackPropertyType
  description: Track property type
  kind: enum
  properties:
  - name: Unknown
    description: Unknown track property
    types:
    - uid: string
  - name: FourCC
    description: Track FourCC
    types:
    - uid: string
- name: TrackPropertyCompareOperation
  description: Track property condition operation
  kind: enum
  properties:
  - name: Unknown
    description: Unknown track property compare operation
    types:
    - uid: string
  - name: Equal
    description: Equal operation
    types:
    - uid: string
examples:
- name: Lists Streaming Policies
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaServices/contosomedia/streamingPolicies?api-version=2022-08-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaServices/contosomedia/streamingPolicies?api-version=2022-08-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for StreamingPolicies List. */
      public final class Main {
          /*
           * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2022-08-01/examples/streaming-policies-list.json
           */
          /**
           * Sample code: Lists Streaming Policies.
           *
           * @param manager Entry point to MediaServicesManager.
           */
          public static void listsStreamingPolicies(com.azure.resourcemanager.mediaservices.MediaServicesManager manager) {
              manager.streamingPolicies().list("contoso", "contosomedia", null, null, null, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-mediaservices_2.2.0/sdk/mediaservices/azure-resourcemanager-mediaservices/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armmediaservices_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/mediaservices/armmediaservices/v3"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/mediaservices/resource-manager/Microsoft.Media/stable/2022-08-01/examples/streaming-policies-list.json
      func ExampleStreamingPoliciesClient_NewListPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armmediaservices.NewStreamingPoliciesClient("00000000-0000-0000-0000-000000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListPager("contoso", "contosomedia", &armmediaservices.StreamingPoliciesClientListOptions{Filter: nil,
      		Top:     nil,
      		Orderby: nil,
      	})
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fmediaservices%2Farmmediaservices%2Fv3.1.0/sdk/resourcemanager/mediaservices/armmediaservices/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AzureMediaServices } = require("@azure/arm-mediaservices");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Lists the Streaming Policies in the account
       *
       * @summary Lists the Streaming Policies in the account
       * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2022-08-01/examples/streaming-policies-list.json
       */
      async function listsStreamingPolicies() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "contoso";
        const accountName = "contosomedia";
        const credential = new DefaultAzureCredential();
        const client = new AzureMediaServices(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.streamingPolicies.list(resourceGroupName, accountName)) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      listsStreamingPolicies().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-mediaservices_13.0.0/sdk/mediaservices/arm-mediaservices/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "name": "clearStreamingPolicy",
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosomedia/streamingPolicies/clearStreamingPolicy",
            "type": "Microsoft.Media/mediaservices/streamingPolicies",
            "properties": {
              "created": "2018-08-08T18:29:30.676067Z",
              "noEncryption": {
                "enabledProtocols": {
                  "download": true,
                  "dash": true,
                  "hls": true,
                  "smoothStreaming": true
                }
              }
            }
          },
          {
            "name": "secureStreamingPolicy",
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosomedia/streamingPolicies/secureStreamingPolicy",
            "type": "Microsoft.Media/mediaservices/streamingPolicies",
            "properties": {
              "created": "2018-08-08T18:29:30.6781134Z",
              "defaultContentKeyPolicyName": "PolicyWithMultipleOptions",
              "envelopeEncryption": {
                "enabledProtocols": {
                  "download": false,
                  "dash": true,
                  "hls": true,
                  "smoothStreaming": true
                },
                "clearTracks": [],
                "contentKeys": {
                  "defaultKey": {
                    "label": "aesDefaultKey"
                  },
                  "keyToTrackMappings": []
                },
                "customKeyAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/envelope/{ContentKeyId}"
              },
              "commonEncryptionCenc": {
                "enabledProtocols": {
                  "download": false,
                  "dash": true,
                  "hls": false,
                  "smoothStreaming": true
                },
                "clearTracks": [
                  {
                    "trackSelections": [
                      {
                        "property": "FourCC",
                        "operation": "Unknown",
                        "value": "hev1"
                      }
                    ]
                  }
                ],
                "contentKeys": {
                  "defaultKey": {
                    "label": "cencDefaultKey"
                  },
                  "keyToTrackMappings": []
                },
                "drm": {
                  "playReady": {
                    "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/playready/{ContentKeyId}",
                    "playReadyCustomAttributes": "PlayReady CustomAttributes"
                  },
                  "widevine": {
                    "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/widevine/{ContentKeyId"
                  }
                }
              },
              "commonEncryptionCbcs": {
                "enabledProtocols": {
                  "download": false,
                  "dash": false,
                  "hls": true,
                  "smoothStreaming": false
                },
                "clearTracks": [],
                "contentKeys": {
                  "defaultKey": {
                    "label": "cbcsDefaultKey"
                  },
                  "keyToTrackMappings": []
                },
                "drm": {
                  "fairPlay": {
                    "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/fairplay/{ContentKeyId}",
                    "allowPersistentLicense": true
                  }
                }
              }
            }
          },
          {
            "name": "secureStreamingPolicyWithCommonEncryptionCbcsOnly",
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosomedia/streamingPolicies/secureStreamingPolicyWithCommonEncryptionCbcsOnly",
            "type": "Microsoft.Media/mediaservices/streamingPolicies",
            "properties": {
              "created": "2018-08-08T18:29:30.6781134Z",
              "defaultContentKeyPolicyName": "PolicyWithMultipleOptions",
              "commonEncryptionCbcs": {
                "enabledProtocols": {
                  "download": false,
                  "dash": false,
                  "hls": true,
                  "smoothStreaming": false
                },
                "clearTracks": [],
                "contentKeys": {
                  "defaultKey": {
                    "label": "cbcsDefaultKey"
                  },
                  "keyToTrackMappings": []
                },
                "drm": {
                  "fairPlay": {
                    "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/fairplay/{ContentKeyId}",
                    "allowPersistentLicense": true
                  }
                }
              }
            }
          },
          {
            "name": "secureStreamingPolicyWithCommonEncryptionCencOnly",
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosomedia/streamingPolicies/secureStreamingPolicyWithCommonEncryptionCencOnly",
            "type": "Microsoft.Media/mediaservices/streamingPolicies",
            "properties": {
              "created": "2018-08-08T18:29:30.6781134Z",
              "defaultContentKeyPolicyName": "PolicyWithMultipleOptions",
              "commonEncryptionCenc": {
                "enabledProtocols": {
                  "download": false,
                  "dash": true,
                  "hls": false,
                  "smoothStreaming": true
                },
                "clearTracks": [
                  {
                    "trackSelections": [
                      {
                        "property": "FourCC",
                        "operation": "Unknown",
                        "value": "hev1"
                      }
                    ]
                  }
                ],
                "contentKeys": {
                  "defaultKey": {
                    "label": "cencDefaultKey"
                  },
                  "keyToTrackMappings": []
                },
                "drm": {
                  "playReady": {
                    "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/playready/{ContentKeyId}",
                    "playReadyCustomAttributes": "PlayReady CustomAttributes"
                  },
                  "widevine": {
                    "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/widevine/{ContentKeyId"
                  }
                }
              }
            }
          },
          {
            "name": "secureStreamingPolicyWithEnvelopeEncryptionOnly",
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosomedia/streamingPolicies/secureStreamingPolicyWithEnvelopeEncryptionOnly",
            "type": "Microsoft.Media/mediaservices/streamingPolicies",
            "properties": {
              "created": "2018-08-08T18:29:30.6781134Z",
              "defaultContentKeyPolicyName": "PolicyWithClearKeyOptionAndTokenRestriction",
              "envelopeEncryption": {
                "enabledProtocols": {
                  "download": false,
                  "dash": true,
                  "hls": true,
                  "smoothStreaming": true
                },
                "clearTracks": [],
                "contentKeys": {
                  "defaultKey": {
                    "label": "aesDefaultKey"
                  },
                  "keyToTrackMappings": []
                },
                "customKeyAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/envelope/{ContentKeyId}"
              }
            }
          }
        ],
        "@odata.nextLink": "http://server/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaServices/contosomedia/streamingPolicies?api-version=2022-08-01&$skiptoken=secureStreamingPolicyWithEnvelopeEncryptionOnly"
      }
security: []
metadata:
  description: >
    Learn more about Media Services service - List Streaming Policies

    Lists the Streaming Policies in the account
errorCodes: []
