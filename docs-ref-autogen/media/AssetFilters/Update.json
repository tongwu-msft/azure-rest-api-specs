{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "version": "2018-07-01",
    "title": "Azure Media Services",
    "description": "This Swagger was generated by the API Framework."
  },
  "host": "management.azure.com",
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      }
    }
  },
  "definitions": {
    "AssetProperties": {
      "properties": {
        "assetId": {
          "type": "string",
          "format": "uuid",
          "description": "The Asset ID.",
          "readOnly": true,
          "x-nullable": false
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the Asset.",
          "readOnly": true,
          "x-nullable": false
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The last modified date of the Asset.",
          "readOnly": true,
          "x-nullable": false
        },
        "alternateId": {
          "type": "string",
          "description": "The alternate ID of the Asset."
        },
        "description": {
          "type": "string",
          "description": "The Asset description."
        },
        "container": {
          "type": "string",
          "description": "The name of the asset blob container."
        },
        "storageAccountName": {
          "type": "string",
          "description": "The name of the storage account."
        },
        "storageEncryptionFormat": {
          "type": "string",
          "enum": [
            "None",
            "MediaStorageClientEncryption"
          ],
          "x-ms-enum": {
            "name": "AssetStorageEncryptionFormat",
            "values": [
              {
                "value": "None",
                "description": "The Asset does not use client-side storage encryption (this is the only allowed value for new Assets)."
              },
              {
                "value": "MediaStorageClientEncryption",
                "description": "The Asset is encrypted with Media Services client-side encryption."
              }
            ],
            "modelAsString": true
          },
          "description": "The Asset encryption format. One of None or MediaStorageEncryption.",
          "readOnly": true,
          "x-nullable": false
        }
      },
      "type": "object",
      "description": "The Asset properties."
    },
    "AssetContainerSas": {
      "properties": {
        "assetContainerSasUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of Asset container SAS URLs."
        }
      },
      "type": "object",
      "description": "The Asset Storage container SAS URLs."
    },
    "AssetFileEncryptionMetadata": {
      "properties": {
        "initializationVector": {
          "type": "string",
          "description": "The Asset File initialization vector."
        },
        "assetFileName": {
          "type": "string",
          "description": "The Asset File name."
        },
        "assetFileId": {
          "type": "string",
          "format": "uuid",
          "description": "The Asset File Id."
        }
      },
      "type": "object",
      "required": [
        "assetFileId"
      ],
      "description": "The Asset File Storage encryption metadata."
    },
    "StorageEncryptedAssetDecryptionData": {
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "The Asset File storage encryption key."
        },
        "assetFileEncryptionMetadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetFileEncryptionMetadata"
          },
          "description": "Asset File encryption metadata."
        }
      },
      "type": "object",
      "description": "Data needed to decrypt asset files encrypted with legacy storage encryption."
    },
    "ListStreamingLocatorsResponse": {
      "properties": {
        "streamingLocators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetStreamingLocator"
          },
          "description": "The list of Streaming Locators.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "The Streaming Locators associated with this Asset."
    },
    "AssetStreamingLocator": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Streaming Locator name.",
          "readOnly": true
        },
        "assetName": {
          "type": "string",
          "description": "Asset Name.",
          "readOnly": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the Streaming Locator.",
          "readOnly": true,
          "x-nullable": false
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the Streaming Locator.",
          "readOnly": true,
          "x-nullable": false
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the Streaming Locator.",
          "readOnly": true,
          "x-nullable": false
        },
        "streamingLocatorId": {
          "type": "string",
          "format": "uuid",
          "description": "StreamingLocatorId of the Streaming Locator.",
          "readOnly": true,
          "x-nullable": false
        },
        "streamingPolicyName": {
          "type": "string",
          "description": "Name of the Streaming Policy used by this Streaming Locator.",
          "readOnly": true
        },
        "defaultContentKeyPolicyName": {
          "type": "string",
          "description": "Name of the default ContentKeyPolicy used by this Streaming Locator.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Properties of the Streaming Locator."
    },
    "Asset": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AssetProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "description": "An Asset."
    },
    "PresentationTimeRange": {
      "properties": {
        "startTimestamp": {
          "type": "integer",
          "format": "int64",
          "description": "The absolute start time boundary."
        },
        "endTimestamp": {
          "type": "integer",
          "format": "int64",
          "description": "The absolute end time boundary."
        },
        "presentationWindowDuration": {
          "type": "integer",
          "format": "int64",
          "description": "The relative to end sliding window."
        },
        "liveBackoffDuration": {
          "type": "integer",
          "format": "int64",
          "description": "The relative to end right edge."
        },
        "timescale": {
          "type": "integer",
          "format": "int64",
          "description": "The time scale of time stamps."
        },
        "forceEndTimestamp": {
          "type": "boolean",
          "description": "The indicator of forcing existing of end time stamp."
        }
      },
      "type": "object",
      "description": "The presentation time range, this is asset related and not recommended for Account Filter."
    },
    "FilterTrackPropertyCondition": {
      "properties": {
        "property": {
          "type": "string",
          "enum": [
            "Unknown",
            "Type",
            "Name",
            "Language",
            "FourCC",
            "Bitrate"
          ],
          "x-ms-enum": {
            "name": "FilterTrackPropertyType",
            "values": [
              {
                "value": "Unknown",
                "description": "The unknown track property type."
              },
              {
                "value": "Type",
                "description": "The type."
              },
              {
                "value": "Name",
                "description": "The name."
              },
              {
                "value": "Language",
                "description": "The language."
              },
              {
                "value": "FourCC",
                "description": "The fourCC."
              },
              {
                "value": "Bitrate",
                "description": "The bitrate."
              }
            ],
            "modelAsString": true
          },
          "description": "The track property type."
        },
        "value": {
          "type": "string",
          "description": "The track property value."
        },
        "operation": {
          "type": "string",
          "enum": [
            "Equal",
            "NotEqual"
          ],
          "x-ms-enum": {
            "name": "FilterTrackPropertyCompareOperation",
            "values": [
              {
                "value": "Equal",
                "description": "The equal operation."
              },
              {
                "value": "NotEqual",
                "description": "The not equal operation."
              }
            ],
            "modelAsString": true
          },
          "description": "The track property condition operation."
        }
      },
      "type": "object",
      "required": [
        "property",
        "value",
        "operation"
      ],
      "description": "The class to specify one track property condition."
    },
    "FirstQuality": {
      "properties": {
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The first quality bitrate."
        }
      },
      "type": "object",
      "required": [
        "bitrate"
      ],
      "description": "Filter First Quality"
    },
    "FilterTrackSelection": {
      "properties": {
        "trackSelections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterTrackPropertyCondition"
          },
          "description": "The track selections."
        }
      },
      "type": "object",
      "required": [
        "trackSelections"
      ],
      "description": "Representing a list of FilterTrackPropertyConditions to select a track.  The filters are combined using a logical AND operation."
    },
    "MediaFilterProperties": {
      "properties": {
        "presentationTimeRange": {
          "$ref": "#/definitions/PresentationTimeRange",
          "description": "The presentation time range."
        },
        "firstQuality": {
          "$ref": "#/definitions/FirstQuality",
          "description": "The first quality."
        },
        "tracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterTrackSelection"
          },
          "description": "The tracks selection conditions."
        }
      },
      "type": "object",
      "description": "The Media Filter properties."
    },
    "AssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MediaFilterProperties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "description": "An Asset Filter."
    },
    "ODataError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "A language-independent error name."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "type": "string",
          "description": "The target of the error (for example, the name of the property in error)."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ODataError"
          },
          "description": "The error details."
        }
      },
      "type": "object",
      "description": "Information about an error."
    },
    "ApiError": {
      "properties": {
        "error": {
          "$ref": "#/definitions/ODataError",
          "description": "The error properties."
        }
      },
      "type": "object",
      "description": "The API error."
    },
    "AssetCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          },
          "description": "A collection of Asset items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of Asset items."
    },
    "ListContainerSasInput": {
      "description": "The parameters to the list SAS request.",
      "properties": {
        "permissions": {
          "description": "The permissions to set on the SAS URL.",
          "type": "string",
          "enum": [
            "Read",
            "ReadWrite",
            "ReadWriteDelete"
          ],
          "x-ms-enum": {
            "name": "AssetContainerPermission",
            "values": [
              {
                "value": "Read",
                "description": "The SAS URL will allow read access to the container."
              },
              {
                "value": "ReadWrite",
                "description": "The SAS URL will allow read and write access to the container."
              },
              {
                "value": "ReadWriteDelete",
                "description": "The SAS URL will allow read, write and delete access to the container."
              }
            ],
            "modelAsString": true
          }
        },
        "expiryTime": {
          "description": "The SAS URL expiration time.  This must be less than 24 hours from the current time.",
          "type": "string",
          "format": "date-time"
        }
      },
      "type": "object"
    },
    "AssetFilterCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetFilter"
          },
          "description": "A collection of AssetFilter items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of AssetFilter items."
    },
    "ProxyResource": {
      "description": "The resource model definition for a ARM proxy resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "TrackedResource": {
      "description": "The resource model definition for a ARM tracked resource.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The Azure Region of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "description": "The core properties of ARM resources.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource."
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/assetFilters/{filterName}": {
      "patch": {
        "summary": "Update an Asset Filter",
        "description": "Updates an existing Asset Filter associated with the specified Asset.",
        "operationId": "AssetFilters_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssetFilter"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "assetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Asset name."
          },
          {
            "name": "filterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Asset Filter name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetFilter"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Update an Asset Filter": {
            "parameters": {
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "resourceGroupName": "contoso",
              "accountName": "contosomedia",
              "assetName": "ClimbingMountRainer",
              "filterName": "assetFilterWithTimeWindowAndTrack",
              "api-version": "2018-07-01",
              "parameters": {
                "properties": {
                  "presentationTimeRange": {
                    "startTimestamp": 10,
                    "endTimestamp": 170000000,
                    "presentationWindowDuration": 9223372036854776000,
                    "liveBackoffDuration": 0,
                    "timescale": 10000000,
                    "forceEndTimestamp": false
                  },
                  "firstQuality": {
                    "bitrate": 128000
                  }
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "name": "assetFilterWithTimeWindowAndTrack",
                  "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosomedia/assets/ClimbingMountRainer/assetFilters/assetFilterWithTimeWindowAndTrack",
                  "type": "Microsoft.Media/mediaservices/assets/assetFilters",
                  "properties": {
                    "presentationTimeRange": {
                      "startTimestamp": 10,
                      "endTimestamp": 170000000,
                      "presentationWindowDuration": 9223372036854776000,
                      "liveBackoffDuration": 0,
                      "timescale": 10000000,
                      "forceEndTimestamp": false
                    },
                    "firstQuality": {
                      "bitrate": 128000
                    },
                    "tracks": [
                      {
                        "trackSelections": [
                          {
                            "property": "Type",
                            "value": "Audio",
                            "operation": "Equal"
                          },
                          {
                            "property": "Language",
                            "value": "en",
                            "operation": "NotEqual"
                          },
                          {
                            "property": "FourCC",
                            "value": "EC-3",
                            "operation": "NotEqual"
                          }
                        ]
                      },
                      {
                        "trackSelections": [
                          {
                            "property": "Type",
                            "value": "Video",
                            "operation": "Equal"
                          },
                          {
                            "property": "Bitrate",
                            "value": "3000000-5000000",
                            "operation": "Equal"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Update"
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The unique identifier for a Microsoft Azure subscription."
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group within the Azure subscription.",
      "x-ms-parameter-location": "method"
    },
    "MediaServicesAccountName": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Media Services account name.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The Version of the API to be used with the client request."
    }
  },
  "x-internal-service-id": "media",
  "x-internal-service-name": "Media Services",
  "x-internal-toc-name": "Asset Filters",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "Update",
  "x-internal-operation-name": "Update"
}