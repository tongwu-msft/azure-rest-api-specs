### YamlMime:RESTOperation
uid: management.azure.com.media.streamingpolicies.create
name: Create
service: Media Services
groupName: Streaming Policies
apiVersion: 2020-05-01
summary: "Create a Streaming Policy  \nCreate a Streaming Policy in the Media Services account"
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingPolicies/{streamingPolicyName}?api-version=2020-05-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The unique identifier for a Microsoft Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the Azure subscription.
  types:
  - uid: string
- name: accountName
  in: path
  isRequired: true
  description: The Media Services account name.
  types:
  - uid: string
- name: streamingPolicyName
  in: path
  isRequired: true
  description: The Streaming Policy name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 201 Created
  description: Created
  types:
  - uid: StreamingPolicy
- name: Other Status Codes
  description: Detailed error information.
  types:
  - uid: ApiError
requestBody:
- name: default
  parameters:
  - name: properties.defaultContentKeyPolicyName
    in: body
    description: Default ContentKey used by current Streaming Policy
    types:
    - uid: string
  - name: properties.envelopeEncryption
    in: body
    description: Configuration of EnvelopeEncryption
    types:
    - uid: EnvelopeEncryption
  - name: properties.commonEncryptionCenc
    in: body
    description: Configuration of CommonEncryptionCenc
    types:
    - uid: CommonEncryptionCenc
  - name: properties.commonEncryptionCbcs
    in: body
    description: Configuration of CommonEncryptionCbcs
    types:
    - uid: CommonEncryptionCbcs
  - name: properties.noEncryption
    in: body
    description: Configurations of NoEncryption
    types:
    - uid: NoEncryption
requestHeader: []
definitions:
- name: EnvelopeEncryption
  description: Class for EnvelopeEncryption encryption scheme
  kind: object
  properties:
  - name: enabledProtocols
    description: Representing supported protocols
    types:
    - uid: EnabledProtocols
  - name: clearTracks
    description: Representing which tracks should not be encrypted
    types:
    - uid: TrackSelection
      isArray: true
  - name: contentKeys
    description: Representing default content key for each encryption scheme and separate content keys for specific tracks
    types:
    - uid: StreamingPolicyContentKeys
  - name: customKeyAcquisitionUrlTemplate
    description: Template for the URL of the custom service delivering keys to end user players.  Not required when using Azure Media Services for issuing keys.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
    types:
    - uid: string
- name: CommonEncryptionCenc
  description: Class for envelope encryption scheme
  kind: object
  properties:
  - name: enabledProtocols
    description: Representing supported protocols
    types:
    - uid: EnabledProtocols
  - name: clearTracks
    description: Representing which tracks should not be encrypted
    types:
    - uid: TrackSelection
      isArray: true
  - name: contentKeys
    description: Representing default content key for each encryption scheme and separate content keys for specific tracks
    types:
    - uid: StreamingPolicyContentKeys
  - name: drm
    description: Configuration of DRMs for CommonEncryptionCenc encryption scheme
    types:
    - uid: CencDrmConfiguration
- name: CommonEncryptionCbcs
  description: Class for CommonEncryptionCbcs encryption scheme
  kind: object
  properties:
  - name: enabledProtocols
    description: Representing supported protocols
    types:
    - uid: EnabledProtocols
  - name: clearTracks
    description: Representing which tracks should not be encrypted
    types:
    - uid: TrackSelection
      isArray: true
  - name: contentKeys
    description: Representing default content key for each encryption scheme and separate content keys for specific tracks
    types:
    - uid: StreamingPolicyContentKeys
  - name: drm
    description: Configuration of DRMs for current encryption scheme
    types:
    - uid: CbcsDrmConfiguration
- name: NoEncryption
  description: Class for NoEncryption scheme
  kind: object
  properties:
  - name: enabledProtocols
    description: Representing supported protocols
    types:
    - uid: EnabledProtocols
- name: StreamingPolicy
  description: A Streaming Policy resource
  kind: object
  properties:
  - name: properties.created
    isReadyOnly: true
    description: Creation time of Streaming Policy
    types:
    - uid: string
  - name: properties.defaultContentKeyPolicyName
    description: Default ContentKey used by current Streaming Policy
    types:
    - uid: string
  - name: properties.envelopeEncryption
    description: Configuration of EnvelopeEncryption
    types:
    - uid: EnvelopeEncryption
  - name: properties.commonEncryptionCenc
    description: Configuration of CommonEncryptionCenc
    types:
    - uid: CommonEncryptionCenc
  - name: properties.commonEncryptionCbcs
    description: Configuration of CommonEncryptionCbcs
    types:
    - uid: CommonEncryptionCbcs
  - name: properties.noEncryption
    description: Configurations of NoEncryption
    types:
    - uid: NoEncryption
  - name: id
    isReadyOnly: true
    description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
    types:
    - uid: string
- name: ApiError
  description: The API error.
  kind: object
  properties:
  - name: error
    description: The error properties.
    types:
    - uid: ODataError
- name: EnabledProtocols
  description: Class to specify which protocols are enabled
  kind: object
  properties:
  - name: download
    description: Enable Download protocol or not
    types:
    - uid: boolean
  - name: dash
    description: Enable DASH protocol or not
    types:
    - uid: boolean
  - name: hls
    description: Enable HLS protocol or not
    types:
    - uid: boolean
  - name: smoothStreaming
    description: Enable SmoothStreaming protocol or not
    types:
    - uid: boolean
- name: TrackSelection
  description: Class to select a track
  kind: object
  properties:
  - name: trackSelections
    description: TrackSelections is a track property condition list which can specify track(s)
    types:
    - uid: TrackPropertyCondition
      isArray: true
- name: StreamingPolicyContentKeys
  description: Class to specify properties of all content keys in Streaming Policy
  kind: object
  properties:
  - name: defaultKey
    description: Default content key for an encryption scheme
    types:
    - uid: DefaultKey
  - name: keyToTrackMappings
    description: Representing tracks needs separate content key
    types:
    - uid: StreamingPolicyContentKey
      isArray: true
- name: CencDrmConfiguration
  description: Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy
  kind: object
  properties:
  - name: playReady
    description: PlayReady configurations
    types:
    - uid: StreamingPolicyPlayReadyConfiguration
  - name: widevine
    description: Widevine configurations
    types:
    - uid: StreamingPolicyWidevineConfiguration
- name: CbcsDrmConfiguration
  description: Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy
  kind: object
  properties:
  - name: fairPlay
    description: FairPlay configurations
    types:
    - uid: StreamingPolicyFairPlayConfiguration
  - name: playReady
    description: PlayReady configurations
    types:
    - uid: StreamingPolicyPlayReadyConfiguration
  - name: widevine
    description: Widevine configurations
    types:
    - uid: StreamingPolicyWidevineConfiguration
- name: ODataError
  description: Information about an error.
  kind: object
  properties:
  - name: code
    description: A language-independent error name.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
  - name: target
    description: The target of the error (for example, the name of the property in error).
    types:
    - uid: string
  - name: details
    description: The error details.
    types:
    - uid: ODataError
      isArray: true
- name: TrackPropertyCondition
  description: Class to specify one track property condition
  kind: object
  properties:
  - name: property
    description: Track property type
    types:
    - uid: TrackPropertyType
  - name: operation
    description: Track property condition operation
    types:
    - uid: TrackPropertyCompareOperation
  - name: value
    description: Track property value
    types:
    - uid: string
- name: DefaultKey
  description: Class to specify properties of default content key for each encryption scheme
  kind: object
  properties:
  - name: label
    description: Label can be used to specify Content Key when creating a Streaming Locator
    types:
    - uid: string
  - name: policyName
    description: Policy used by Default Key
    types:
    - uid: string
- name: StreamingPolicyContentKey
  description: Class to specify properties of content key
  kind: object
  properties:
  - name: label
    description: Label can be used to specify Content Key when creating a Streaming Locator
    types:
    - uid: string
  - name: policyName
    description: Policy used by Content Key
    types:
    - uid: string
  - name: tracks
    description: Tracks which use this content key
    types:
    - uid: TrackSelection
      isArray: true
- name: StreamingPolicyPlayReadyConfiguration
  description: Class to specify configurations of PlayReady in Streaming Policy
  kind: object
  properties:
  - name: customLicenseAcquisitionUrlTemplate
    description: Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
    types:
    - uid: string
  - name: playReadyCustomAttributes
    description: Custom attributes for PlayReady
    types:
    - uid: string
- name: StreamingPolicyWidevineConfiguration
  description: Class to specify configurations of Widevine in Streaming Policy
  kind: object
  properties:
  - name: customLicenseAcquisitionUrlTemplate
    description: Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
    types:
    - uid: string
- name: StreamingPolicyFairPlayConfiguration
  description: Class to specify configurations of FairPlay in Streaming Policy
  kind: object
  properties:
  - name: customLicenseAcquisitionUrlTemplate
    description: Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.
    types:
    - uid: string
  - name: allowPersistentLicense
    description: All license to be persistent or not
    types:
    - uid: boolean
- name: TrackPropertyType
  description: Track property type
  kind: enum
  properties:
  - name: Unknown
    description: Unknown track property
    types:
    - uid: string
  - name: FourCC
    description: Track FourCC
    types:
    - uid: string
- name: TrackPropertyCompareOperation
  description: Track property condition operation
  kind: enum
  properties:
  - name: Unknown
    description: Unknown track property compare operation
    types:
    - uid: string
  - name: Equal
    description: Equal operation
    types:
    - uid: string
examples:
- name: Creates a Streaming Policy with clear streaming
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaServices/contosomedia/streamingPolicies/UserCreatedClearStreamingPolicy?api-version=2020-05-01
    body: >-
      {
        "properties": {
          "noEncryption": {
            "enabledProtocols": {
              "download": true,
              "dash": true,
              "hls": true,
              "smoothStreaming": true
            }
          }
        }
      }
  responses:
  - statusCode: "201"
    body: >-
      {
        "name": "UserCreatedClearStreamingPolicy",
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosomedia/streamingPolicies/UserCreatedClearStreamingPolicy",
        "type": "Microsoft.Media/mediaservices/streamingPolicies",
        "properties": {
          "created": "2018-08-08T18:29:31.1535417Z",
          "noEncryption": {
            "enabledProtocols": {
              "download": true,
              "dash": true,
              "hls": true,
              "smoothStreaming": true
            }
          }
        }
      }
- name: Creates a Streaming Policy with envelopeEncryption only
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaServices/contosomedia/streamingPolicies/UserCreatedSecureStreamingPolicyWithEnvelopeEncryptionOnly?api-version=2020-05-01
    body: >-
      {
        "properties": {
          "defaultContentKeyPolicyName": "PolicyWithClearKeyOptionAndTokenRestriction",
          "envelopeEncryption": {
            "enabledProtocols": {
              "download": false,
              "dash": true,
              "hls": true,
              "smoothStreaming": true
            },
            "contentKeys": {
              "defaultKey": {
                "label": "aesDefaultKey"
              }
            },
            "customKeyAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/envelope/{ContentKeyId}"
          }
        }
      }
  responses:
  - statusCode: "201"
    body: >-
      {
        "name": "UserCreatedSecureStreamingPolicyWithEnvelopeEncryptionOnly",
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosomedia/streamingPolicies/UserCreatedSecureStreamingPolicyWithEnvelopeEncryptionOnly",
        "type": "Microsoft.Media/mediaservices/streamingPolicies",
        "properties": {
          "created": "2018-08-08T18:29:31.3055712Z",
          "defaultContentKeyPolicyName": "PolicyWithClearKeyOptionAndTokenRestriction",
          "envelopeEncryption": {
            "enabledProtocols": {
              "download": false,
              "dash": true,
              "hls": true,
              "smoothStreaming": true
            },
            "clearTracks": [],
            "contentKeys": {
              "defaultKey": {
                "label": "aesDefaultKey"
              },
              "keyToTrackMappings": []
            },
            "customKeyAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/envelope/{ContentKeyId}"
          }
        }
      }
- name: Creates a Streaming Policy with commonEncryptionCenc only
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaServices/contosomedia/streamingPolicies/UserCreatedSecureStreamingPolicyWithCommonEncryptionCencOnly?api-version=2020-05-01
    body: >-
      {
        "properties": {
          "defaultContentKeyPolicyName": "PolicyWithPlayReadyOptionAndOpenRestriction",
          "commonEncryptionCenc": {
            "enabledProtocols": {
              "download": false,
              "dash": true,
              "hls": false,
              "smoothStreaming": true
            },
            "clearTracks": [
              {
                "trackSelections": [
                  {
                    "property": "FourCC",
                    "operation": "Equal",
                    "value": "hev1"
                  }
                ]
              }
            ],
            "contentKeys": {
              "defaultKey": {
                "label": "cencDefaultKey"
              }
            },
            "drm": {
              "playReady": {
                "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/playready/{ContentKeyId}",
                "playReadyCustomAttributes": "PlayReady CustomAttributes"
              },
              "widevine": {
                "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/widevine/{ContentKeyId"
              }
            }
          }
        }
      }
  responses:
  - statusCode: "201"
    body: >-
      {
        "name": "UserCreatedSecureStreamingPolicyWithCommonEncryptionCencOnly",
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosomedia/streamingPolicies/UserCreatedSecureStreamingPolicyWithCommonEncryptionCencOnly",
        "type": "Microsoft.Media/mediaservices/streamingPolicies",
        "properties": {
          "created": "2018-08-08T18:29:31.4678543Z",
          "defaultContentKeyPolicyName": "PolicyWithPlayReadyOptionAndOpenRestriction",
          "commonEncryptionCenc": {
            "enabledProtocols": {
              "download": false,
              "dash": true,
              "hls": false,
              "smoothStreaming": true
            },
            "clearTracks": [
              {
                "trackSelections": [
                  {
                    "property": "FourCC",
                    "operation": "Equal",
                    "value": "hev1"
                  }
                ]
              }
            ],
            "contentKeys": {
              "defaultKey": {
                "label": "cencDefaultKey"
              },
              "keyToTrackMappings": []
            },
            "drm": {
              "playReady": {
                "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/playready/{ContentKeyId}",
                "playReadyCustomAttributes": "PlayReady CustomAttributes"
              },
              "widevine": {
                "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/widevine/{ContentKeyId"
              }
            }
          }
        }
      }
- name: Creates a Streaming Policy with commonEncryptionCbcs only
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaServices/contosomedia/streamingPolicies/UserCreatedSecureStreamingPolicyWithCommonEncryptionCbcsOnly?api-version=2020-05-01
    body: >-
      {
        "properties": {
          "defaultContentKeyPolicyName": "PolicyWithMultipleOptions",
          "commonEncryptionCbcs": {
            "enabledProtocols": {
              "download": false,
              "dash": false,
              "hls": true,
              "smoothStreaming": false
            },
            "contentKeys": {
              "defaultKey": {
                "label": "cbcsDefaultKey"
              }
            },
            "drm": {
              "fairPlay": {
                "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/fairplay/{ContentKeyId}",
                "allowPersistentLicense": true
              }
            }
          }
        }
      }
  responses:
  - statusCode: "201"
    body: >-
      {
        "name": "UserCreatedSecureStreamingPolicyWithCommonEncryptionCbcsOnly",
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosomedia/streamingPolicies/UserCreatedSecureStreamingPolicyWithCommonEncryptionCbcsOnly",
        "type": "Microsoft.Media/mediaservices/streamingPolicies",
        "properties": {
          "created": "2018-08-08T18:29:31.6197199Z",
          "defaultContentKeyPolicyName": "PolicyWithMultipleOptions",
          "commonEncryptionCbcs": {
            "enabledProtocols": {
              "download": false,
              "dash": false,
              "hls": true,
              "smoothStreaming": false
            },
            "clearTracks": [],
            "contentKeys": {
              "defaultKey": {
                "label": "cbcsDefaultKey"
              },
              "keyToTrackMappings": []
            },
            "drm": {
              "fairPlay": {
                "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/fairplay/{ContentKeyId}",
                "allowPersistentLicense": true
              }
            }
          }
        }
      }
- name: Creates a Streaming Policy with secure streaming
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaServices/contosomedia/streamingPolicies/UserCreatedSecureStreamingPolicy?api-version=2020-05-01
    body: >-
      {
        "properties": {
          "defaultContentKeyPolicyName": "PolicyWithMultipleOptions",
          "envelopeEncryption": {
            "enabledProtocols": {
              "download": false,
              "dash": true,
              "hls": true,
              "smoothStreaming": true
            },
            "contentKeys": {
              "defaultKey": {
                "label": "aesDefaultKey"
              }
            },
            "customKeyAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/envelope/{ContentKeyId}"
          },
          "commonEncryptionCenc": {
            "enabledProtocols": {
              "download": false,
              "dash": true,
              "hls": false,
              "smoothStreaming": true
            },
            "clearTracks": [
              {
                "trackSelections": [
                  {
                    "property": "FourCC",
                    "operation": "Equal",
                    "value": "hev1"
                  }
                ]
              }
            ],
            "contentKeys": {
              "defaultKey": {
                "label": "cencDefaultKey"
              }
            },
            "drm": {
              "playReady": {
                "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/playready/{ContentKeyId}",
                "playReadyCustomAttributes": "PlayReady CustomAttributes"
              },
              "widevine": {
                "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/widevine/{ContentKeyId"
              }
            }
          },
          "commonEncryptionCbcs": {
            "enabledProtocols": {
              "download": false,
              "dash": false,
              "hls": true,
              "smoothStreaming": false
            },
            "contentKeys": {
              "defaultKey": {
                "label": "cbcsDefaultKey"
              }
            },
            "drm": {
              "fairPlay": {
                "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/fairplay/{ContentKeyId}",
                "allowPersistentLicense": true
              }
            }
          }
        }
      }
  responses:
  - statusCode: "201"
    body: >-
      {
        "name": "UserCreatedSecureStreamingPolicy",
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosomedia/streamingPolicies/UserCreatedSecureStreamingPolicy",
        "type": "Microsoft.Media/mediaservices/streamingPolicies",
        "properties": {
          "created": "2018-08-08T18:29:31.7715696Z",
          "defaultContentKeyPolicyName": "PolicyWithMultipleOptions",
          "envelopeEncryption": {
            "enabledProtocols": {
              "download": false,
              "dash": true,
              "hls": true,
              "smoothStreaming": true
            },
            "clearTracks": [],
            "contentKeys": {
              "defaultKey": {
                "label": "aesDefaultKey"
              },
              "keyToTrackMappings": []
            },
            "customKeyAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/envelope/{ContentKeyId}"
          },
          "commonEncryptionCenc": {
            "enabledProtocols": {
              "download": false,
              "dash": true,
              "hls": false,
              "smoothStreaming": true
            },
            "clearTracks": [
              {
                "trackSelections": [
                  {
                    "property": "FourCC",
                    "operation": "Equal",
                    "value": "hev1"
                  }
                ]
              }
            ],
            "contentKeys": {
              "defaultKey": {
                "label": "cencDefaultKey"
              },
              "keyToTrackMappings": []
            },
            "drm": {
              "playReady": {
                "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/playready/{ContentKeyId}",
                "playReadyCustomAttributes": "PlayReady CustomAttributes"
              },
              "widevine": {
                "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/widevine/{ContentKeyId"
              }
            }
          },
          "commonEncryptionCbcs": {
            "enabledProtocols": {
              "download": false,
              "dash": false,
              "hls": true,
              "smoothStreaming": false
            },
            "clearTracks": [],
            "contentKeys": {
              "defaultKey": {
                "label": "cbcsDefaultKey"
              },
              "keyToTrackMappings": []
            },
            "drm": {
              "fairPlay": {
                "customLicenseAcquisitionUrlTemplate": "https://contoso.com/{AssetAlternativeId}/fairplay/{ContentKeyId}",
                "allowPersistentLicense": true
              }
            }
          }
        }
      }
security: []
errorCodes: []
