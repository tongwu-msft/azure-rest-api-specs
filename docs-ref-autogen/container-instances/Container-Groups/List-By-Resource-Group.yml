### YamlMime:RESTOperation
uid: management.azure.com.container-instances.containergroups.listbyresourcegroup
name: List By Resource Group
service: Container Instances
groupName: Container Groups
apiVersion: 2021-10-01
summary: "Get a list of container groups in the specified subscription and resource group.  \nGet a list of container groups in a specified subscription and resource group. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes."
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups?api-version=2021-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: ContainerGroupListResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: ContainerGroupListResult
  description: The container group list response that contains the container group properties.
  kind: object
  properties:
  - name: value
    description: The list of container groups.
    types:
    - uid: ContainerGroup
      isArray: true
  - name: nextLink
    description: The URI to fetch the next page of container groups.
    types:
    - uid: string
- name: CloudError
  description: An error response from the Container Instance service.
  kind: object
  properties:
  - name: error
    description: An error response from the Container Instance service.
    types:
    - uid: CloudErrorBody
- name: ContainerGroup
  description: A container group.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The resource id.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The resource type.
    types:
    - uid: string
  - name: location
    description: The resource location.
    types:
    - uid: string
  - name: tags
    description: The resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: zones
    description: The zones for the container group.
    types:
    - uid: string
      isArray: true
  - name: identity
    description: The identity of the container group, if configured.
    types:
    - uid: ContainerGroupIdentity
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the container group. This only appears in the response.
    types:
    - uid: string
  - name: properties.containers
    description: The containers within the container group.
    types:
    - uid: Container
      isArray: true
  - name: properties.imageRegistryCredentials
    description: The image registry credentials by which the container group is created from.
    types:
    - uid: ImageRegistryCredential
      isArray: true
  - name: properties.restartPolicy
    description: "Restart policy for all containers within the container group. \n- `Always` Always restart\n- `OnFailure` Restart on failure\n- `Never` Never restart"
    types:
    - uid: ContainerGroupRestartPolicy
  - name: properties.ipAddress
    description: The IP address type of the container group.
    types:
    - uid: IpAddress
  - name: properties.osType
    description: The operating system type required by the containers in the container group.
    types:
    - uid: OperatingSystemTypes
  - name: properties.volumes
    description: The list of volumes that can be mounted by containers in this container group.
    types:
    - uid: Volume
      isArray: true
  - name: properties.instanceView
    isReadyOnly: true
    description: The instance view of the container group. Only valid in response.
    types:
    - uid: ContainerGroupProperties.properties.InstanceView
  - name: properties.diagnostics
    description: The diagnostic information for a container group.
    types:
    - uid: ContainerGroupDiagnostics
  - name: properties.subnetIds
    description: The subnet resource IDs for a container group.
    types:
    - uid: ContainerGroupSubnetId
      isArray: true
  - name: properties.dnsConfig
    description: The DNS config information for a container group.
    types:
    - uid: DnsConfiguration
  - name: properties.sku
    description: The SKU for a container group.
    types:
    - uid: ContainerGroupSku
  - name: properties.encryptionProperties
    description: The encryption properties for a container group.
    types:
    - uid: EncryptionProperties
  - name: properties.initContainers
    description: The init containers for a container group.
    types:
    - uid: InitContainerDefinition
      isArray: true
- name: CloudErrorBody
  description: An error response from the Container Instance service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: ContainerGroupIdentity
  description: Identity for the container group.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal id of the container group identity. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant id associated with the container group. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: type
    description: The type of identity used for the container group. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the container group.
    types:
    - uid: ResourceIdentityType
  - name: userAssignedIdentities
    description: The list of user identities associated with the container group.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: UserAssignedIdentities
- name: Container
  description: A container instance.
  kind: object
  properties:
  - name: name
    description: The user-provided name of the container instance.
    types:
    - uid: string
  - name: properties.image
    description: The name of the image used to create the container instance.
    types:
    - uid: string
  - name: properties.command
    description: The commands to execute within the container instance in exec form.
    types:
    - uid: string
      isArray: true
  - name: properties.ports
    description: The exposed ports on the container instance.
    types:
    - uid: ContainerPort
      isArray: true
  - name: properties.environmentVariables
    description: The environment variables to set in the container instance.
    types:
    - uid: EnvironmentVariable
      isArray: true
  - name: properties.instanceView
    isReadyOnly: true
    description: The instance view of the container instance. Only valid in response.
    types:
    - uid: InstanceView
  - name: properties.resources
    description: The resource requirements of the container instance.
    types:
    - uid: ResourceRequirements
  - name: properties.volumeMounts
    description: The volume mounts available to the container instance.
    types:
    - uid: VolumeMount
      isArray: true
  - name: properties.livenessProbe
    description: The liveness probe.
    types:
    - uid: ContainerProbe
  - name: properties.readinessProbe
    description: The readiness probe.
    types:
    - uid: ContainerProbe
- name: ImageRegistryCredential
  description: Image registry credential.
  kind: object
  properties:
  - name: server
    description: The Docker image registry server without a protocol such as "http" and "https".
    types:
    - uid: string
  - name: username
    description: The username for the private registry.
    types:
    - uid: string
  - name: password
    description: The password for the private registry.
    types:
    - uid: string
  - name: identity
    description: The identity for the private registry.
    types:
    - uid: string
  - name: identityUrl
    description: The identity URL for the private registry.
    types:
    - uid: string
- name: ContainerGroupRestartPolicy
  description: "Restart policy for all containers within the container group. \n- `Always` Always restart\n- `OnFailure` Restart on failure\n- `Never` Never restart\n"
  kind: enum
  properties:
  - name: Always
    types:
    - uid: string
  - name: OnFailure
    types:
    - uid: string
  - name: Never
    types:
    - uid: string
- name: IpAddress
  description: IP address for the container group.
  kind: object
  properties:
  - name: ports
    description: The list of ports exposed on the container group.
    types:
    - uid: Port
      isArray: true
  - name: type
    description: Specifies if the IP is exposed to the public internet or private VNET.
    types:
    - uid: ContainerGroupIpAddressType
  - name: ip
    description: The IP exposed to the public internet.
    types:
    - uid: string
  - name: dnsNameLabel
    description: The Dns name label for the IP.
    types:
    - uid: string
  - name: autoGeneratedDomainNameLabelScope
    description: The value representing the security enum.
    types:
    - uid: dnsNameLabelReusePolicy
    defaultValue: Unsecure
  - name: fqdn
    isReadyOnly: true
    description: The FQDN for the IP.
    types:
    - uid: string
- name: OperatingSystemTypes
  description: The operating system type required by the containers in the container group.
  kind: enum
  properties:
  - name: Windows
    types:
    - uid: string
  - name: Linux
    types:
    - uid: string
- name: Volume
  description: The properties of the volume.
  kind: object
  properties:
  - name: name
    description: The name of the volume.
    types:
    - uid: string
  - name: azureFile
    description: The Azure File volume.
    types:
    - uid: AzureFileVolume
  - name: emptyDir
    description: The empty directory volume.
    types:
    - uid: EmptyDirVolume
  - name: secret
    description: The secret volume.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: gitRepo
    description: The git repo volume.
    types:
    - uid: GitRepoVolume
- name: InstanceView
  description: The instance view of the container instance. Only valid in response.
  kind: object
  properties:
  - name: restartCount
    isReadyOnly: true
    description: The number of times that the container instance has been restarted.
    types:
    - uid: integer
  - name: currentState
    isReadyOnly: true
    description: Current container instance state.
    types:
    - uid: ContainerState
  - name: previousState
    isReadyOnly: true
    description: Previous container instance state.
    types:
    - uid: ContainerState
  - name: events
    isReadyOnly: true
    description: The events of the container instance.
    types:
    - uid: Event
      isArray: true
- name: InitContainerPropertiesDefinition.InstanceView
  description: The instance view of the init container. Only valid in response.
  kind: object
  properties:
  - name: restartCount
    isReadyOnly: true
    description: The number of times that the init container has been restarted.
    types:
    - uid: integer
  - name: currentState
    isReadyOnly: true
    description: The current state of the init container.
    types:
    - uid: ContainerState
  - name: previousState
    isReadyOnly: true
    description: The previous state of the init container.
    types:
    - uid: ContainerState
  - name: events
    isReadyOnly: true
    description: The events of the init container.
    types:
    - uid: Event
      isArray: true
- name: ContainerGroupProperties.properties.InstanceView
  description: The instance view of the container group. Only valid in response.
  kind: object
  properties:
  - name: events
    isReadyOnly: true
    description: The events of this container group.
    types:
    - uid: Event
      isArray: true
  - name: state
    isReadyOnly: true
    description: The state of the container group. Only valid in response.
    types:
    - uid: string
- name: ContainerGroupDiagnostics
  description: Container group diagnostic information.
  kind: object
  properties:
  - name: logAnalytics
    description: Container group log analytics information.
    types:
    - uid: LogAnalytics
- name: ContainerGroupSubnetId
  description: Container group subnet information.
  kind: object
  properties:
  - name: id
    description: Resource ID of virtual network and subnet.
    types:
    - uid: string
  - name: name
    description: Friendly name for the subnet.
    types:
    - uid: string
- name: DnsConfiguration
  description: DNS configuration for the container group.
  kind: object
  properties:
  - name: nameServers
    description: The DNS servers for the container group.
    types:
    - uid: string
      isArray: true
  - name: searchDomains
    description: The DNS search domains for hostname lookup in the container group.
    types:
    - uid: string
  - name: options
    description: The DNS options for the container group.
    types:
    - uid: string
- name: ContainerGroupSku
  description: The container group SKU.
  kind: enum
  properties:
  - name: Standard
    types:
    - uid: string
  - name: Dedicated
    types:
    - uid: string
- name: EncryptionProperties
  description: The container group encryption properties.
  kind: object
  properties:
  - name: vaultBaseUrl
    description: The keyvault base url.
    types:
    - uid: string
  - name: keyName
    description: The encryption key name.
    types:
    - uid: string
  - name: keyVersion
    description: The encryption key version.
    types:
    - uid: string
- name: InitContainerDefinition
  description: The init container definition.
  kind: object
  properties:
  - name: name
    description: The name for the init container.
    types:
    - uid: string
  - name: properties.image
    description: The image of the init container.
    types:
    - uid: string
  - name: properties.command
    description: The command to execute within the init container in exec form.
    types:
    - uid: string
      isArray: true
  - name: properties.environmentVariables
    description: The environment variables to set in the init container.
    types:
    - uid: EnvironmentVariable
      isArray: true
  - name: properties.instanceView
    isReadyOnly: true
    description: The instance view of the init container. Only valid in response.
    types:
    - uid: InitContainerPropertiesDefinition.InstanceView
  - name: properties.volumeMounts
    description: The volume mounts available to the init container.
    types:
    - uid: VolumeMount
      isArray: true
- name: ResourceIdentityType
  description: The type of identity used for the container group. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the container group.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
  - name: UserAssigned
    types:
    - uid: string
  - name: SystemAssigned, UserAssigned
    types:
    - uid: string
  - name: None
    types:
    - uid: string
- name: UserAssignedIdentities
  description: "The list of user identities associated with the container group. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal id of user assigned identity.
    types:
    - uid: string
  - name: clientId
    isReadyOnly: true
    description: The client id of user assigned identity.
    types:
    - uid: string
- name: ContainerPort
  description: The port exposed on the container instance.
  kind: object
  properties:
  - name: protocol
    description: The protocol associated with the port.
    types:
    - uid: ContainerNetworkProtocol
  - name: port
    description: The port number exposed within the container group.
    types:
    - uid: integer
- name: EnvironmentVariable
  description: The environment variable to set within the container instance.
  kind: object
  properties:
  - name: name
    description: The name of the environment variable.
    types:
    - uid: string
  - name: value
    description: The value of the environment variable.
    types:
    - uid: string
  - name: secureValue
    description: The value of the secure environment variable.
    types:
    - uid: string
- name: ResourceRequirements
  description: The resource requirements.
  kind: object
  properties:
  - name: requests
    description: The resource requests of this container instance.
    types:
    - uid: ResourceRequests
  - name: limits
    description: The resource limits of this container instance.
    types:
    - uid: ResourceLimits
- name: VolumeMount
  description: The properties of the volume mount.
  kind: object
  properties:
  - name: name
    description: The name of the volume mount.
    types:
    - uid: string
  - name: mountPath
    description: The path within the container where the volume should be mounted. Must not contain colon (:).
    types:
    - uid: string
  - name: readOnly
    description: The flag indicating whether the volume mount is read-only.
    types:
    - uid: boolean
- name: ContainerProbe
  description: The container probe, for liveness or readiness
  kind: object
  properties:
  - name: exec
    description: The execution command to probe
    types:
    - uid: ContainerExec
  - name: httpGet
    description: The Http Get settings to probe
    types:
    - uid: ContainerHttpGet
  - name: initialDelaySeconds
    description: The initial delay seconds.
    types:
    - uid: integer
  - name: periodSeconds
    description: The period seconds.
    types:
    - uid: integer
  - name: failureThreshold
    description: The failure threshold.
    types:
    - uid: integer
  - name: successThreshold
    description: The success threshold.
    types:
    - uid: integer
  - name: timeoutSeconds
    description: The timeout seconds.
    types:
    - uid: integer
- name: Port
  description: The port exposed on the container group.
  kind: object
  properties:
  - name: protocol
    description: The protocol associated with the port.
    types:
    - uid: ContainerGroupNetworkProtocol
  - name: port
    description: The port number.
    types:
    - uid: integer
- name: ContainerGroupIpAddressType
  description: Specifies if the IP is exposed to the public internet or private VNET.
  kind: enum
  properties:
  - name: Public
    types:
    - uid: string
  - name: Private
    types:
    - uid: string
- name: dnsNameLabelReusePolicy
  description: The value representing the security enum.
  kind: enum
  properties:
  - name: Unsecure
    types:
    - uid: string
  - name: TenantReuse
    types:
    - uid: string
  - name: SubscriptionReuse
    types:
    - uid: string
  - name: ResourceGroupReuse
    types:
    - uid: string
  - name: Noreuse
    types:
    - uid: string
- name: AzureFileVolume
  description: The properties of the Azure File volume. Azure File shares are mounted as volumes.
  kind: object
  properties:
  - name: shareName
    description: The name of the Azure File share to be mounted as a volume.
    types:
    - uid: string
  - name: readOnly
    description: The flag indicating whether the Azure File shared mounted as a volume is read-only.
    types:
    - uid: boolean
  - name: storageAccountName
    description: The name of the storage account that contains the Azure File share.
    types:
    - uid: string
  - name: storageAccountKey
    description: The storage account access key used to access the Azure File share.
    types:
    - uid: string
- name: EmptyDirVolume
  description: The empty directory volume.
  kind: object
  properties: []
- name: GitRepoVolume
  description: Represents a volume that is populated with the contents of a git repository
  kind: object
  properties:
  - name: directory
    description: Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
    types:
    - uid: string
  - name: repository
    description: Repository URL
    types:
    - uid: string
  - name: revision
    description: Commit hash for the specified revision.
    types:
    - uid: string
- name: Event
  description: A container group or container instance event.
  kind: object
  properties:
  - name: count
    isReadyOnly: true
    description: The count of the event.
    types:
    - uid: integer
  - name: firstTimestamp
    isReadyOnly: true
    description: The date-time of the earliest logged event.
    types:
    - uid: string
  - name: lastTimestamp
    isReadyOnly: true
    description: The date-time of the latest logged event.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The event name.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The event message.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The event type.
    types:
    - uid: string
- name: LogAnalytics
  description: Container group log analytics information.
  kind: object
  properties:
  - name: workspaceId
    description: The workspace id for log analytics
    types:
    - uid: string
  - name: workspaceKey
    description: The workspace key for log analytics
    types:
    - uid: string
  - name: logType
    description: The log type to be used.
    types:
    - uid: LogAnalyticsLogType
  - name: metadata
    description: Metadata for log analytics.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: workspaceResourceId
    description: The workspace resource id for log analytics
    types:
    - uid: string
- name: ContainerNetworkProtocol
  description: The protocol associated with the port.
  kind: enum
  properties:
  - name: TCP
    types:
    - uid: string
  - name: UDP
    types:
    - uid: string
- name: ContainerState
  description: The container instance state.
  kind: object
  properties:
  - name: state
    isReadyOnly: true
    description: The state of the container instance.
    types:
    - uid: string
  - name: startTime
    isReadyOnly: true
    description: The date-time when the container instance state started.
    types:
    - uid: string
  - name: exitCode
    isReadyOnly: true
    description: The container instance exit codes correspond to those from the `docker run` command.
    types:
    - uid: integer
  - name: finishTime
    isReadyOnly: true
    description: The date-time when the container instance state finished.
    types:
    - uid: string
  - name: detailStatus
    isReadyOnly: true
    description: The human-readable status of the container instance state.
    types:
    - uid: string
- name: ResourceRequests
  description: The resource requests.
  kind: object
  properties:
  - name: memoryInGB
    description: The memory request in GB of this container instance.
    types:
    - uid: number
  - name: cpu
    description: The CPU request of this container instance.
    types:
    - uid: number
  - name: gpu
    description: The GPU request of this container instance.
    types:
    - uid: GpuResource
- name: ResourceLimits
  description: The resource limits.
  kind: object
  properties:
  - name: memoryInGB
    description: The memory limit in GB of this container instance.
    types:
    - uid: number
  - name: cpu
    description: The CPU limit of this container instance.
    types:
    - uid: number
  - name: gpu
    description: The GPU limit of this container instance.
    types:
    - uid: GpuResource
- name: ContainerExec
  description: The container execution command, for liveness or readiness probe
  kind: object
  properties:
  - name: command
    description: The commands to execute within the container.
    types:
    - uid: string
      isArray: true
- name: ContainerHttpGet
  description: The container Http Get settings, for liveness or readiness probe
  kind: object
  properties:
  - name: path
    description: The path to probe.
    types:
    - uid: string
  - name: port
    description: The port number to probe.
    types:
    - uid: integer
  - name: scheme
    description: The scheme.
    types:
    - uid: Scheme
  - name: httpHeaders
    description: The HTTP headers.
    types:
    - uid: HttpHeader
      isArray: true
- name: ContainerGroupNetworkProtocol
  description: The protocol associated with the port.
  kind: enum
  properties:
  - name: TCP
    types:
    - uid: string
  - name: UDP
    types:
    - uid: string
- name: LogAnalyticsLogType
  description: The log type to be used.
  kind: enum
  properties:
  - name: ContainerInsights
    types:
    - uid: string
  - name: ContainerInstanceLogs
    types:
    - uid: string
- name: GpuResource
  description: The GPU resource.
  kind: object
  properties:
  - name: count
    description: The count of the GPU resource.
    types:
    - uid: integer
  - name: sku
    description: The SKU of the GPU resource.
    types:
    - uid: GpuSku
- name: Scheme
  description: The scheme.
  kind: enum
  properties:
  - name: http
    types:
    - uid: string
  - name: https
    types:
    - uid: string
- name: HttpHeader
  description: The HTTP header.
  kind: object
  properties:
  - name: name
    description: The header name.
    types:
    - uid: string
  - name: value
    description: The header value.
    types:
    - uid: string
- name: GpuSku
  description: The SKU of the GPU resource.
  kind: enum
  properties:
  - name: K80
    types:
    - uid: string
  - name: P100
    types:
    - uid: string
  - name: V100
    types:
    - uid: string
examples:
- name: ContainerGroupsListByResourceGroup
  request:
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups?api-version=2021-10-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups?api-version=2021-10-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for ContainerGroups ListByResourceGroup. */
      public final class Main {
          /*
           * x-ms-original-file: specification/containerinstance/resource-manager/Microsoft.ContainerInstance/stable/2021-10-01/examples/ContainerGroupsListByResourceGroup.json
           */
          /**
           * Sample code: ContainerGroupsListByResourceGroup.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void containerGroupsListByResourceGroup(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .containerGroups()
                  .manager()
                  .serviceClient()
                  .getContainerGroups()
                  .listByResourceGroup("demo", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armcontainerinstance_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/containerinstance/armcontainerinstance"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/containerinstance/resource-manager/Microsoft.ContainerInstance/stable/2021-10-01/examples/ContainerGroupsListByResourceGroup.json
      func ExampleContainerGroupsClient_NewListByResourceGroupPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armcontainerinstance.NewContainerGroupsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListByResourceGroupPager("demo",
      		nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fcontainerinstance%2Farmcontainerinstance%2Fv1.0.0/sdk/resourcemanager/containerinstance/armcontainerinstance/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { ContainerInstanceManagementClient } = require("@azure/arm-containerinstance");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Get a list of container groups in a specified subscription and resource group. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
       *
       * @summary Get a list of container groups in a specified subscription and resource group. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
       * x-ms-original-file: specification/containerinstance/resource-manager/Microsoft.ContainerInstance/stable/2021-10-01/examples/ContainerGroupsListByResourceGroup.json
       */
      async function containerGroupsListByResourceGroup() {
        const subscriptionId = "subid";
        const resourceGroupName = "demo";
        const credential = new DefaultAzureCredential();
        const client = new ContainerInstanceManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.containerGroups.listByResourceGroup(resourceGroupName)) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      containerGroupsListByResourceGroup().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-containerinstance_8.2.0/sdk/containerinstance/arm-containerinstance/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1",
            "location": "WestUs",
            "zones": [
              "1"
            ],
            "name": "demo1",
            "properties": {
              "containers": [
                {
                  "name": "demo1",
                  "properties": {
                    "command": [],
                    "environmentVariables": [],
                    "image": "nginx",
                    "ports": [
                      {
                        "port": 80
                      }
                    ],
                    "resources": {
                      "requests": {
                        "cpu": 1,
                        "memoryInGB": 1.5
                      }
                    },
                    "volumeMounts": [
                      {
                        "mountPath": "/mnt/volume1",
                        "name": "volume1",
                        "readOnly": false
                      }
                    ]
                  }
                }
              ],
              "imageRegistryCredentials": [
                {
                  "server": "azcloudconsoleregistry.azurecr.io",
                  "username": "azcloudconsoleregistry"
                }
              ],
              "ipAddress": {
                "ip": "10.0.0.1",
                "ports": [
                  {
                    "port": 80,
                    "protocol": "TCP"
                  }
                ],
                "type": "Public"
              },
              "osType": "Linux",
              "provisioningState": "Succeeded",
              "volumes": [
                {
                  "azureFile": {
                    "readOnly": false,
                    "shareName": "share1",
                    "storageAccountName": "storage1"
                  },
                  "name": "volume1"
                }
              ]
            },
            "type": "Microsoft.ContainerInstance/containerGroups"
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Impersonate your user account
metadata:
  description: "Get a list of container groups in the specified subscription and resource group.  \nGet a list of container groups in a specified subscription and resource group"
errorCodes: []
