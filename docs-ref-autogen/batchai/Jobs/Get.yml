### YamlMime:RESTOperation
uid: management.azure.com.batchai.jobs.get
name: Get
service: Batch AI
groupName: Jobs
apiVersion: 2018-05-01
summary: Gets information about a Job.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}/jobs/{jobName}?api-version=2018-05-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscriptionID for the Azure user.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the resource group to which the resource belongs.
  types:
  - uid: string
  pattern: ^[-\w\._]+$
- name: workspaceName
  in: path
  isRequired: true
  description: The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.
  types:
  - uid: string
  pattern: ^[-\w_]+$
- name: experimentName
  in: path
  isRequired: true
  description: The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.
  types:
  - uid: string
  pattern: ^[-\w_]+$
- name: jobName
  in: path
  isRequired: true
  description: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.
  types:
  - uid: string
  pattern: ^[-\w_]+$
- name: api-version
  in: query
  isRequired: true
  description: Specifies the version of API used for this request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The operation was successful. The response contains the Job entity.
  types:
  - uid: Job
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: Job
  description: Information about a Job.
  kind: object
  properties:
  - name: properties.schedulingPriority
    description: "Scheduling priority.  \nScheduling priority associated with the job."
    types:
    - uid: JobPriority
  - name: properties.cluster
    description: "Cluster.  \nResource ID of the cluster associated with the job."
    types:
    - uid: ResourceId
  - name: properties.mountVolumes
    description: "Mount volumes.  \nCollection of mount volumes available to the job during execution. These volumes are mounted before the job execution and unmouted after the job completion. The volumes are mounted at location specified by $AZ_BATCHAI_JOB_MOUNT_ROOT environment variable."
    types:
    - uid: MountVolumes
  - name: properties.nodeCount
    description: "Number of compute nodes to run the job on.  \nThe job will be gang scheduled on that many compute nodes"
    types:
    - uid: integer
  - name: properties.containerSettings
    description: "If provided the job will run in the specified container.  \nIf the container was downloaded as part of cluster setup then the same container image will be used. If not provided, the job will run on the VM."
    types:
    - uid: ContainerSettings
  - name: properties.toolType
    description: "The toolkit type of this job.  \nPossible values are: cntk, tensorflow, caffe, caffe2, chainer, pytorch, custom, custommpi, horovod."
    types:
    - uid: ToolType
  - name: properties.cntkSettings
    description: "Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.  \nCNTK (aka Microsoft Cognitive Toolkit) job settings."
    types:
    - uid: CNTKsettings
  - name: properties.pyTorchSettings
    description: "Specifies the settings for pyTorch job.  \npyTorch job settings."
    types:
    - uid: PyTorchSettings
  - name: properties.tensorFlowSettings
    description: "Specifies the settings for Tensor Flow job.  \nTensorFlow job settings."
    types:
    - uid: TensorFlowSettings
  - name: properties.caffeSettings
    description: "Specifies the settings for Caffe job.  \nCaffe job settings."
    types:
    - uid: CaffeSettings
  - name: properties.caffe2Settings
    description: "Specifies the settings for Caffe2 job.  \nCaffe2 job settings."
    types:
    - uid: Caffe2Settings
  - name: properties.chainerSettings
    description: "Specifies the settings for Chainer job.  \nChainer job settings."
    types:
    - uid: ChainerSettings
  - name: properties.customToolkitSettings
    description: "Specifies the settings for custom tool kit job.  \nCustom tool kit job settings."
    types:
    - uid: CustomToolkitSettings
  - name: properties.customMpiSettings
    description: "Specifies the settings for custom MPI job.  \nCustom MPI job settings."
    types:
    - uid: CustomMpiSettings
  - name: properties.horovodSettings
    description: "Specifies the settings for Horovod job.  \nSpecifies the settings for Horovod job."
    types:
    - uid: HorovodSettings
  - name: properties.jobPreparation
    description: "Specifies the actions to be performed before tool kit is launched.  \nThe specified actions will run on all the nodes that are part of the job"
    types:
    - uid: JobPreparation
  - name: properties.jobOutputDirectoryPathSegment
    isReadyOnly: true
    description: "Output directory path segment.  \nA segment of job's output directories path created by Batch AI. Batch AI creates job's output directories under an unique path to avoid conflicts between jobs. This value contains a path segment generated by Batch AI to make the path unique and can be used to find the output directory on the node or mounted filesystem."
    types:
    - uid: string
  - name: properties.stdOutErrPathPrefix
    description: "Standard output directory path prefix.  \nThe path where the Batch AI service stores stdout, stderror and execution log of the job."
    types:
    - uid: string
  - name: properties.inputDirectories
    description: "Input directories.  \nA list of input directories for the job."
    types:
    - uid: InputDirectory
      isArray: true
  - name: properties.outputDirectories
    description: "Output directories.  \nA list of output directories for the job."
    types:
    - uid: OutputDirectory
      isArray: true
  - name: properties.environmentVariables
    description: "Environment variables.  \nA collection of user defined environment variables to be setup for the job."
    types:
    - uid: EnvironmentVariable
      isArray: true
  - name: properties.secrets
    description: "Secrets.  \nA collection of user defined environment variables with secret values to be setup for the job. Server will never report values of these variables back."
    types:
    - uid: EnvironmentVariableWithSecretValue
      isArray: true
  - name: properties.constraints
    description: Constraints associated with the Job.
    types:
    - uid: Constraints
  - name: properties.creationTime
    isReadyOnly: true
    description: "Creation time.  \nThe creation time of the job."
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: "Provisioning state.  \nThe provisioned state of the Batch AI job"
    types:
    - uid: ProvisioningState
  - name: properties.provisioningStateTransitionTime
    isReadyOnly: true
    description: "Provisioning state transition time.  \nThe time at which the job entered its current provisioning state."
    types:
    - uid: string
  - name: properties.executionState
    isReadyOnly: true
    description: "Execution state.  \nThe current state of the job. Possible values are: queued - The job is queued and able to run. A job enters this state when it is created, or when it is awaiting a retry after a failed run. running - The job is running on a compute cluster. This includes job-level preparation such as downloading resource files or set up container specified on the job - it does not necessarily mean that the job command line has started executing. terminating - The job is terminated by the user, the terminate operation is in progress. succeeded - The job has completed running succesfully and exited with exit code 0. failed - The job has finished unsuccessfully (failed with a non-zero exit code) and has exhausted its retry limit. A job is also marked as failed if an error occurred launching the job."
    types:
    - uid: ExecutionState
  - name: properties.executionStateTransitionTime
    isReadyOnly: true
    description: "Execution state transition time.  \nThe time at which the job entered its current execution state."
    types:
    - uid: string
  - name: properties.executionInfo
    description: Information about the execution of a job.
    types:
    - uid: ExecutionInfo
  - name: id
    isReadyOnly: true
    description: The ID of the resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
- name: CloudError
  description: An error response from the Batch AI service.
  kind: object
  properties:
  - name: error
    isReadyOnly: true
    description: An error response from the Batch AI service.
    types:
    - uid: CloudErrorBody
- name: JobPriority
  description: Scheduling priority.
  kind: enum
  properties:
  - name: low
    types:
    - uid: string
  - name: normal
    types:
    - uid: string
  - name: high
    types:
    - uid: string
- name: ResourceId
  description: Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
  kind: object
  properties:
  - name: id
    description: The ID of the resource
    types:
    - uid: string
- name: MountVolumes
  description: Details of volumes to mount on the cluster.
  kind: object
  properties:
  - name: azureFileShares
    description: "Azure File Shares.  \nA collection of Azure File Shares that are to be mounted to the cluster nodes."
    types:
    - uid: AzureFileShareReference
      isArray: true
  - name: azureBlobFileSystems
    description: "Azure Blob file systems.  \nA collection of Azure Blob Containers that are to be mounted to the cluster nodes."
    types:
    - uid: AzureBlobFileSystemReference
      isArray: true
  - name: fileServers
    description: "File Servers.  \nA collection of Batch AI File Servers that are to be mounted to the cluster nodes."
    types:
    - uid: FileServerReference
      isArray: true
  - name: unmanagedFileSystems
    description: "Unmanaged file systems.  \nA collection of unmanaged file systems that are to be mounted to the cluster nodes."
    types:
    - uid: UnmanagedFileSystemReference
      isArray: true
- name: ContainerSettings
  description: Docker container settings.
  kind: object
  properties:
  - name: imageSourceRegistry
    description: "Image source registry.  \nInformation about docker image and docker registry to download the container from."
    types:
    - uid: ImageSourceRegistry
  - name: shmSize
    description: "/dev/shm size.  \nSize of /dev/shm. Please refer to docker documentation for supported argument formats."
    types:
    - uid: string
- name: ToolType
  description: Toolkit type.
  kind: enum
  properties:
  - name: cntk
    types:
    - uid: string
  - name: tensorflow
    types:
    - uid: string
  - name: caffe
    types:
    - uid: string
  - name: caffe2
    types:
    - uid: string
  - name: chainer
    types:
    - uid: string
  - name: horovod
    types:
    - uid: string
  - name: custommpi
    types:
    - uid: string
  - name: custom
    types:
    - uid: string
- name: CNTKsettings
  description: CNTK (aka Microsoft Cognitive Toolkit) job settings.
  kind: object
  properties:
  - name: languageType
    description: "Language type.  \nThe language to use for launching CNTK (aka Microsoft Cognitive Toolkit) job. Valid values are 'BrainScript' or 'Python'."
    types:
    - uid: string
  - name: configFilePath
    description: "Config file path.  \nSpecifies the path of the BrainScript config file. This property can be specified only if the languageType is 'BrainScript'."
    types:
    - uid: string
  - name: pythonScriptFilePath
    description: "Python script file path.  \nPython script to execute. This property can be specified only if the languageType is 'Python'."
    types:
    - uid: string
  - name: pythonInterpreterPath
    description: "Python interpreter path.  \nThe path to the Python interpreter. This property can be specified only if the languageType is 'Python'."
    types:
    - uid: string
  - name: commandLineArgs
    description: "Command line arguments.  \nCommand line arguments that need to be passed to the python script or cntk executable."
    types:
    - uid: string
  - name: processCount
    description: "Process count.  \nNumber of processes to launch for the job execution. The default value for this property is equal to nodeCount property"
    types:
    - uid: integer
- name: PyTorchSettings
  description: pyTorch job settings.
  kind: object
  properties:
  - name: pythonScriptFilePath
    description: "Python script file path.  \nThe python script to execute."
    types:
    - uid: string
  - name: pythonInterpreterPath
    description: "Python interpreter path.  \nThe path to the Python interpreter."
    types:
    - uid: string
  - name: commandLineArgs
    description: "Command line arguments.  \nCommand line arguments that need to be passed to the python script."
    types:
    - uid: string
  - name: processCount
    description: "Process count.  \nNumber of processes to launch for the job execution. The default value for this property is equal to nodeCount property"
    types:
    - uid: integer
  - name: communicationBackend
    description: "Communication backend.  \nType of the communication backend for distributed jobs. Valid values are 'TCP', 'Gloo' or 'MPI'. Not required for non-distributed jobs."
    types:
    - uid: string
- name: TensorFlowSettings
  description: TensorFlow job settings.
  kind: object
  properties:
  - name: pythonScriptFilePath
    description: "Python script file path.  \nThe python script to execute."
    types:
    - uid: string
  - name: pythonInterpreterPath
    description: "Python interpreter path.  \nThe path to the Python interpreter."
    types:
    - uid: string
  - name: masterCommandLineArgs
    description: "Master command line arguments.  \nCommand line arguments that need to be passed to the python script for the master task."
    types:
    - uid: string
  - name: workerCommandLineArgs
    description: "Worker command line arguments.  \nCommand line arguments that need to be passed to the python script for the worker task. Optional for single process jobs."
    types:
    - uid: string
  - name: parameterServerCommandLineArgs
    description: "Parameter server command line arguments.  \nCommand line arguments that need to be passed to the python script for the parameter server. Optional for single process jobs."
    types:
    - uid: string
  - name: workerCount
    description: "Worker count.  \nThe number of worker tasks. If specified, the value must be less than or equal to (nodeCount * numberOfGPUs per VM). If not specified, the default value is equal to nodeCount. This property can be specified only for distributed TensorFlow training."
    types:
    - uid: integer
  - name: parameterServerCount
    description: "Parameter server count.  \nThe number of parameter server tasks. If specified, the value must be less than or equal to nodeCount. If not specified, the default value is equal to 1 for distributed TensorFlow training. This property can be specified only for distributed TensorFlow training."
    types:
    - uid: integer
- name: CaffeSettings
  description: Caffe job settings.
  kind: object
  properties:
  - name: configFilePath
    description: "Config file path.  \nPath of the config file for the job. This property cannot be specified if pythonScriptFilePath is specified."
    types:
    - uid: string
  - name: pythonScriptFilePath
    description: "Python script file path.  \nPython script to execute. This property cannot be specified if configFilePath is specified."
    types:
    - uid: string
  - name: pythonInterpreterPath
    description: "Python interpreter path.  \nThe path to the Python interpreter. The property can be specified only if the pythonScriptFilePath is specified."
    types:
    - uid: string
  - name: commandLineArgs
    description: "Command line arguments.  \nCommand line arguments that need to be passed to the Caffe job."
    types:
    - uid: string
  - name: processCount
    description: "Process count.  \nNumber of processes to launch for the job execution. The default value for this property is equal to nodeCount property"
    types:
    - uid: integer
- name: Caffe2Settings
  description: Caffe2 job settings.
  kind: object
  properties:
  - name: pythonScriptFilePath
    description: "Python script file path.  \nThe python script to execute."
    types:
    - uid: string
  - name: pythonInterpreterPath
    description: "Python interpreter path.  \nThe path to the Python interpreter."
    types:
    - uid: string
  - name: commandLineArgs
    description: "Command line arguments.  \nCommand line arguments that need to be passed to the python script."
    types:
    - uid: string
- name: ChainerSettings
  description: Chainer job settings.
  kind: object
  properties:
  - name: pythonScriptFilePath
    description: "Python script file path.  \nThe python script to execute."
    types:
    - uid: string
  - name: pythonInterpreterPath
    description: "Python interpreter path.  \nThe path to the Python interpreter."
    types:
    - uid: string
  - name: commandLineArgs
    description: "Command line arguments.  \nCommand line arguments that need to be passed to the python script."
    types:
    - uid: string
  - name: processCount
    description: "Process count.  \nNumber of processes to launch for the job execution. The default value for this property is equal to nodeCount property"
    types:
    - uid: integer
- name: CustomToolkitSettings
  description: Custom tool kit job settings.
  kind: object
  properties:
  - name: commandLine
    description: "Command line.  \nThe command line to execute on the master node."
    types:
    - uid: string
- name: CustomMpiSettings
  description: Custom MPI job settings.
  kind: object
  properties:
  - name: commandLine
    description: "Command line.  \nThe command line to be executed by mpi runtime on each compute node."
    types:
    - uid: string
  - name: processCount
    description: "Process count.  \nNumber of processes to launch for the job execution. The default value for this property is equal to nodeCount property"
    types:
    - uid: integer
- name: HorovodSettings
  description: Specifies the settings for Horovod job.
  kind: object
  properties:
  - name: pythonScriptFilePath
    description: "Python script file path.  \nThe python script to execute."
    types:
    - uid: string
  - name: pythonInterpreterPath
    description: "Python interpreter path.  \nThe path to the Python interpreter."
    types:
    - uid: string
  - name: commandLineArgs
    description: "Command line arguments.  \nCommand line arguments that need to be passed to the python script."
    types:
    - uid: string
  - name: processCount
    description: "Process count.  \nNumber of processes to launch for the job execution. The default value for this property is equal to nodeCount property"
    types:
    - uid: integer
- name: JobPreparation
  description: Job preparation settings.
  kind: object
  properties:
  - name: commandLine
    description: "Command line.  \nThe command line to execute. If containerSettings is specified on the job, this commandLine will be executed in the same container as job. Otherwise it will be executed on the node."
    types:
    - uid: string
- name: InputDirectory
  description: Input directory for the job.
  kind: object
  properties:
  - name: id
    description: "ID.  \nThe ID for the input directory. The job can use AZ_BATCHAI_INPUT_<id> environment variable to find the directory path, where <id> is the value of id attribute."
    types:
    - uid: string
  - name: path
    description: "Path.  \nThe path to the input directory."
    types:
    - uid: string
- name: OutputDirectory
  description: Output directory for the job.
  kind: object
  properties:
  - name: id
    description: "ID.  \nThe ID of the output directory. The job can use AZ_BATCHAI_OUTPUT_<id> environment variale to find the directory path, where <id> is the value of id attribute."
    types:
    - uid: string
  - name: pathPrefix
    description: "Path prefix.  \nThe prefix path where the output directory will be created. Note, this is an absolute path to prefix. E.g. $AZ_BATCHAI_MOUNT_ROOT/MyNFS/MyLogs. The full path to the output directory by combining pathPrefix, jobOutputDirectoryPathSegment (reported by get job) and pathSuffix."
    types:
    - uid: string
  - name: pathSuffix
    description: "Path suffix.  \nThe suffix path where the output directory will be created. E.g. models. You can find the full path to the output directory by combining pathPrefix, jobOutputDirectoryPathSegment (reported by get job) and pathSuffix."
    types:
    - uid: string
- name: EnvironmentVariable
  description: An environment variable definition.
  kind: object
  properties:
  - name: name
    description: "Name.  \nThe name of the environment variable."
    types:
    - uid: string
  - name: value
    description: "Value.  \nThe value of the environment variable."
    types:
    - uid: string
- name: EnvironmentVariableWithSecretValue
  description: An environment variable with secret value definition.
  kind: object
  properties:
  - name: name
    description: "Name.  \nThe name of the environment variable to store the secret value."
    types:
    - uid: string
  - name: value
    description: "Value.  \nThe value of the environment variable. This value will never be reported back by Batch AI."
    types:
    - uid: string
  - name: valueSecretReference
    description: "KeyVault secret reference.  \nKeyVault store and secret which contains the value for the environment variable. One of value or valueSecretReference must be provided."
    types:
    - uid: KeyVaultSecretReference
- name: Constraints
  description: Constraints associated with the Job.
  kind: object
  properties:
  - name: maxWallClockTime
    description: "Max wall clock time.  \nMax time the job can run. Default value: 1 week."
    types:
    - uid: string
- name: ProvisioningState
  description: Provisioning state.
  kind: enum
  properties:
  - name: creating
    types:
    - uid: string
  - name: succeeded
    types:
    - uid: string
  - name: failed
    types:
    - uid: string
  - name: deleting
    types:
    - uid: string
- name: ExecutionState
  description: Execution state.
  kind: enum
  properties:
  - name: queued
    types:
    - uid: string
  - name: running
    types:
    - uid: string
  - name: terminating
    types:
    - uid: string
  - name: succeeded
    types:
    - uid: string
  - name: failed
    types:
    - uid: string
- name: ExecutionInfo
  description: Information about the execution of a job.
  kind: object
  properties:
  - name: startTime
    isReadyOnly: true
    description: "Start time.  \nThe time at which the job started running. 'Running' corresponds to the running state. If the job has been restarted or retried, this is the most recent time at which the job started running. This property is present only for job that are in the running or completed state."
    types:
    - uid: string
  - name: endTime
    isReadyOnly: true
    description: "End time.  \nThe time at which the job completed. This property is only returned if the job is in completed state."
    types:
    - uid: string
  - name: exitCode
    isReadyOnly: true
    description: "Exit code.  \nThe exit code of the job. This property is only returned if the job is in completed state."
    types:
    - uid: integer
  - name: errors
    isReadyOnly: true
    description: "Errors.  \nA collection of errors encountered by the service during job execution."
    types:
    - uid: BatchAIError
      isArray: true
- name: CloudErrorBody
  description: An error response from the Batch AI service.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: AzureFileShareReference
  description: Azure File Share mounting configuration.
  kind: object
  properties:
  - name: accountName
    description: "Account name.  \nName of the Azure storage account."
    types:
    - uid: string
  - name: azureFileUrl
    description: "Azure File URL.  \nURL to access the Azure File."
    types:
    - uid: string
  - name: credentials
    description: "Credentials.  \nInformation about the Azure storage credentials."
    types:
    - uid: AzureStorageCredentialsInfo
  - name: relativeMountPath
    description: "Relative mount path.  \nThe relative path on the compute node where the Azure File share will be mounted. Note that all cluster level file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level file shares will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT."
    types:
    - uid: string
  - name: fileMode
    description: "File mode.  \nFile mode for files on the mounted file share. Default value: 0777."
    types:
    - uid: string
  - name: directoryMode
    description: "Directory mode.  \nFile mode for directories on the mounted file share. Default value: 0777."
    types:
    - uid: string
- name: AzureBlobFileSystemReference
  description: Azure Blob Storage Container mounting configuration.
  kind: object
  properties:
  - name: accountName
    description: "Account name.  \nName of the Azure storage account."
    types:
    - uid: string
  - name: containerName
    description: "Container name.  \nName of the Azure Blob Storage container to mount on the cluster."
    types:
    - uid: string
  - name: credentials
    description: "Credentials.  \nInformation about the Azure storage credentials."
    types:
    - uid: AzureStorageCredentialsInfo
  - name: relativeMountPath
    description: "Relative mount path.  \nThe relative path on the compute node where the Azure File container will be mounted. Note that all cluster level containers will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level containers will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT."
    types:
    - uid: string
  - name: mountOptions
    description: "Mount options.  \nMount options for mounting blobfuse file system."
    types:
    - uid: string
- name: FileServerReference
  description: File Server mounting configuration.
  kind: object
  properties:
  - name: fileServer
    description: "File server.  \nResource ID of the existing File Server to be mounted."
    types:
    - uid: ResourceId
  - name: sourceDirectory
    description: "Source directory.  \nFile Server directory that needs to be mounted. If this property is not specified, the entire File Server will be mounted."
    types:
    - uid: string
  - name: relativeMountPath
    description: "Relative mount path.  \nThe relative path on the compute node where the File Server will be mounted. Note that all cluster level file servers will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level file servers will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT."
    types:
    - uid: string
  - name: mountOptions
    description: "Mount options.  \nMount options to be passed to mount command."
    types:
    - uid: string
- name: UnmanagedFileSystemReference
  description: Unmananged file system mounting configuration.
  kind: object
  properties:
  - name: mountCommand
    description: "Mount command.  \nMount command line. Note, Batch AI will append mount path to the command on its own."
    types:
    - uid: string
  - name: relativeMountPath
    description: "Relative mount path.  \nThe relative path on the compute node where the unmanaged file system will be mounted. Note that all cluster level unmanaged file systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level unmanaged file systems will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT."
    types:
    - uid: string
- name: ImageSourceRegistry
  description: Information about docker image for the job.
  kind: object
  properties:
  - name: serverUrl
    description: "Server URL.  \nURL for image repository."
    types:
    - uid: string
  - name: image
    description: "Image.  \nThe name of the image in the image repository."
    types:
    - uid: string
  - name: credentials
    description: "Credentials.  \nCredentials to access the private docker repository."
    types:
    - uid: PrivateRegistryCredentials
- name: KeyVaultSecretReference
  description: Key Vault Secret reference.
  kind: object
  properties:
  - name: sourceVault
    description: "Key Vault resource identifier.  \nFully qualified resource indentifier of the Key Vault."
    types:
    - uid: ResourceId
  - name: secretUrl
    description: "Secret URL.  \nThe URL referencing a secret in the Key Vault."
    types:
    - uid: string
- name: BatchAIError
  description: An error response from the Batch AI service.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: An identifier of the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: A list of additional details about the error.
    types:
    - uid: NameValuePair
      isArray: true
- name: AzureStorageCredentialsInfo
  description: Azure storage account credentials.
  kind: object
  properties:
  - name: accountKey
    description: "Account key.  \nStorage account key. One of accountKey or accountKeySecretReference must be specified."
    types:
    - uid: string
  - name: accountKeySecretReference
    description: "Account key secret reference.  \nInformation about KeyVault secret storing the storage account key. One of accountKey or accountKeySecretReference must be specified."
    types:
    - uid: KeyVaultSecretReference
- name: PrivateRegistryCredentials
  description: Credentials to access a container image in a private repository.
  kind: object
  properties:
  - name: username
    description: "User name.  \nUser name to login to the repository."
    types:
    - uid: string
  - name: password
    description: "Password.  \nUser password to login to the docker repository. One of password or passwordSecretReference must be specified."
    types:
    - uid: string
  - name: passwordSecretReference
    description: "Password secret reference.  \nKeyVault Secret storing the password. Users can store their secrets in Azure KeyVault and pass it to the Batch AI service to integrate with KeyVault. One of password or passwordSecretReference must be specified."
    types:
    - uid: KeyVaultSecretReference
- name: NameValuePair
  description: Name-value pair.
  kind: object
  properties:
  - name: name
    description: "Name.  \nThe name in the name-value pair."
    types:
    - uid: string
  - name: value
    description: "Value.  \nThe value in the name-value pair."
    types:
    - uid: string
examples:
- name: Get job's information
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/experiments/demo_experiment/jobs/demo_job?api-version=2018-05-01
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/experiments/demo_experiment/jobs/demo_job",
        "name": "demo_job",
        "type": "Microsoft.BatchAI/Jobs",
        "properties": {
          "schedulingPriority": "normal",
          "cluster": {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/clusters/demo_cluster"
          },
          "nodeCount": 1,
          "containerSettings": {
            "imageSourceRegistry": {
              "image": "ubuntu"
            }
          },
          "toolType": "custom",
          "customToolkitSettings": {
            "commandLine": "echo hi | tee $AZ_BATCHAI_OUTPUT_OUTPUTS/hi.txt"
          },
          "stdOutErrPathPrefix": "$AZ_BATCHAI_MOUNT_ROOT/azfiles",
          "jobOutputDirectoryPathSegment": "00000000-0000-0000-0000-000000000000/demo_resource_group/workspaces/demo_workspace/experiments/demo_experiment/jobs/demo_job/00000000-0000-0000-0000-000000000000",
          "inputDirectories": [
            {
              "id": "INPUT",
              "path": "$AZ_BATCHAI_MOUNT_ROOT/azfiles/input"
            }
          ],
          "outputDirectories": [
            {
              "id": "OUTPUTS",
              "pathPrefix": "$AZ_BATCHAI_MOUNT_ROOT/azfiles/",
              "pathSuffix": "files"
            }
          ],
          "constraints": {
            "maxWallClockTime": "P7D"
          },
          "creationTime": "2017-09-27T23:36:52.611Z",
          "provisioningState": "succeeded",
          "provisioningStateTransitionTime": "2017-09-27T23:36:53.701Z",
          "executionState": "running",
          "executionStateTransitionTime": "2017-09-27T23:36:56.395Z",
          "executionInfo": {
            "startTime": "2017-09-27T23:36:54.115Z"
          }
        }
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
