{
  "swagger": "2.0",
  "info": {
    "version": "2017-09-01-preview",
    "title": "DataFactoryManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets/{datasetName}": {
      "get": {
        "tags": [
          "datasets"
        ],
        "operationId": "Datasets_Get",
        "x-ms-examples": {
          "Datasets_Get": {
            "parameters": {
              "subscriptionId": "12345678-1234-1234-12345678abc",
              "resourceGroupName": "exampleResourceGroup",
              "factoryName": "exampleFactoryName",
              "datasetName": "exampleDataset",
              "api-version": "2017-09-01-preview"
            },
            "responses": {
              "200": {
                "headers": {
                  "Date": "Wed, 13 Sep 2017 17:55:55 GMT",
                  "x-ms-request-id": "a60fc528-1652-4619-9477-f00ab05e9a24",
                  "X-Content-Type-Options": "nosniff",
                  "x-ms-ratelimit-remaining-subscription-reads": "14912",
                  "x-ms-correlation-request-id": "949f7936-4ad4-49bc-8d2a-5f56a8938fba"
                },
                "body": {
                  "id": "/subscriptions/12345678-1234-1234-12345678abc/resourceGroups/exampleResourceGroup/providers/Microsoft.DataFactory/factories/exampleFactoryName/datasets/exampleDataset",
                  "name": "exampleDataset",
                  "properties": {
                    "type": "AzureBlob",
                    "typeProperties": {
                      "folderPath": {
                        "value": "@dataset().MyFolderPath",
                        "type": "Expression"
                      },
                      "fileName": {
                        "value": "@dataset().MyFileName",
                        "type": "Expression"
                      },
                      "format": {
                        "type": "TextFormat"
                      }
                    },
                    "description": "Example description",
                    "linkedServiceName": {
                      "referenceName": "exampleLinkedService",
                      "type": "LinkedServiceReference"
                    },
                    "parameters": {
                      "MyFolderPath": {
                        "type": "String"
                      },
                      "MyFileName": {
                        "type": "String"
                      }
                    }
                  },
                  "etag": "280320a7-0000-0000-0000-59b9712a0000"
                }
              }
            }
          }
        },
        "description": "Gets a dataset.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/datasetName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/DatasetResource"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Get"
      }
    }
  },
  "definitions": {
    "Resource": {
      "x-ms-azure-resource": true,
      "description": "Azure Data Factory top-level resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        }
      }
    },
    "SubResource": {
      "description": "Azure Data Factory nested resource, which belongs to a factory.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "Expression": {
      "description": "Azure Data Factory expression definition.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Expression type.",
          "enum": [
            "Expression"
          ]
        },
        "value": {
          "type": "string",
          "description": "Expression value."
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "SecureString": {
      "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "SecureString type.",
          "enum": [
            "SecureString"
          ]
        },
        "value": {
          "type": "string",
          "description": "Value of secure string."
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "FactoryListResponse": {
      "description": "A list of factory resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of factories.",
          "items": {
            "$ref": "#/definitions/Factory"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "IntegrationRuntimeListResponse": {
      "description": "A list of integration runtime resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of integration runtimes.",
          "items": {
            "$ref": "#/definitions/IntegrationRuntimeResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "IntegrationRuntimeReference": {
      "description": "Integration runtime reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of integration runtime.",
          "enum": [
            "IntegrationRuntimeReference"
          ]
        },
        "referenceName": {
          "type": "string",
          "description": "Reference integration runtime name."
        },
        "parameters": {
          "$ref": "#/definitions/ParameterValueSpecification",
          "description": "Arguments for integration runtime."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "IntegrationRuntimeResource": {
      "description": "Integration runtime resource type.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationRuntime",
          "description": "Integration runtime properties."
        }
      },
      "required": [
        "properties"
      ]
    },
    "IntegrationRuntimeStatusResponse": {
      "description": "Integration runtime status response.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The integration runtime name.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/IntegrationRuntimeStatus",
          "description": "Integration runtime properties."
        }
      },
      "required": [
        "properties"
      ]
    },
    "IntegrationRuntimeStatusListResponse": {
      "description": "A list of integration runtime status.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of integration runtime status.",
          "items": {
            "$ref": "#/definitions/IntegrationRuntimeStatusResponse"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "LinkedServiceListResponse": {
      "description": "A list of linked service resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of linked services.",
          "items": {
            "$ref": "#/definitions/LinkedServiceResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "DatasetListResponse": {
      "description": "A list of dataset resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of datasets.",
          "items": {
            "$ref": "#/definitions/DatasetResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "PipelineListResponse": {
      "description": "A list of pipeline resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of pipelines.",
          "items": {
            "$ref": "#/definitions/PipelineResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "TriggerListResponse": {
      "description": "A list of trigger resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of triggers.",
          "items": {
            "$ref": "#/definitions/TriggerResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "CreateRunResponse": {
      "description": "Response body with a run identifier.",
      "type": "object",
      "properties": {
        "runId": {
          "description": "Identifier of a run.",
          "type": "string"
        }
      },
      "required": [
        "runId"
      ]
    },
    "ErrorResponse": {
      "description": "The object that defines the structure of an Azure Data Factory response.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message.",
          "type": "string"
        },
        "target": {
          "description": "Property name/path in request associated with error.",
          "type": "string"
        },
        "details": {
          "description": "Array with additional error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ParameterDefinitionSpecification": {
      "description": "Definition of all parameters for an entity.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ParameterSpecification"
      }
    },
    "ParameterSpecification": {
      "description": "Definition of a single parameter for an entity.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Parameter type.",
          "enum": [
            "Object",
            "String",
            "Int",
            "Float",
            "Bool",
            "Array"
          ],
          "x-ms-enum": {
            "name": "ParameterType",
            "modelAsString": true
          }
        },
        "defaultValue": {
          "type": "object",
          "description": "Default value of parameter."
        }
      },
      "required": [
        "type"
      ]
    },
    "ParameterValueSpecification": {
      "description": "An object mapping parameter names to argument values.",
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "FactoryProperties": {
      "description": "Factory resource properties.",
      "properties": {
        "provisioningState": {
          "description": "Factory provisioning state, example Succeeded.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "Time the factory was created in ISO8601 format.",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "version": {
          "description": "Version of the factory.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PipelineResource": {
      "description": "Pipeline resource type.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/Pipeline",
          "description": "Properties of the pipeline."
        }
      },
      "required": [
        "properties"
      ]
    },
    "PipelineReference": {
      "description": "Pipeline reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Pipeline reference type.",
          "enum": [
            "PipelineReference"
          ]
        },
        "referenceName": {
          "type": "string",
          "description": "Reference pipeline name."
        },
        "name": {
          "type": "string",
          "description": "Reference name."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "TriggerPipelineReference": {
      "description": "Pipeline that needs to be triggered with the given parameters.",
      "properties": {
        "pipelineReference": {
          "description": "Pipeline reference.",
          "$ref": "#/definitions/PipelineReference"
        },
        "parameters": {
          "description": "Pipeline parameters.",
          "$ref": "#/definitions/ParameterValueSpecification"
        }
      }
    },
    "TriggerResource": {
      "description": "Trigger resource type.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/Trigger",
          "description": "Properties of the trigger."
        }
      },
      "required": [
        "properties"
      ]
    },
    "Factory": {
      "description": "Factory resource type.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "identity": {
          "$ref": "#/definitions/FactoryIdentity",
          "description": "Managed service identity of the factory."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FactoryProperties",
          "description": "Properties of the factory."
        }
      }
    },
    "FactoryUpdateParameters": {
      "description": "Parameters for updating a factory resource.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "identity": {
          "$ref": "#/definitions/FactoryIdentity",
          "description": "Managed service identity of the factory."
        }
      }
    },
    "FactoryIdentity": {
      "description": "Identity properties of the factory resource.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The identity type. Currently the only supported type is 'SystemAssigned'.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "FactoryIdentityType",
            "modelAsString": false
          }
        },
        "principalId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The principal id of the identity."
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The client tenant id of the identity."
        }
      },
      "required": [
        "type"
      ]
    },
    "DatasetReference": {
      "description": "Dataset reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Dataset reference type.",
          "enum": [
            "DatasetReference"
          ]
        },
        "referenceName": {
          "type": "string",
          "description": "Reference dataset name."
        },
        "parameters": {
          "$ref": "#/definitions/ParameterValueSpecification",
          "description": "Arguments for dataset."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "DatasetResource": {
      "description": "Dataset resource type.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/Dataset",
          "description": "Dataset properties."
        }
      },
      "required": [
        "properties"
      ]
    },
    "LinkedServiceReference": {
      "description": "Linked service reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Linked service reference type.",
          "enum": [
            "LinkedServiceReference"
          ]
        },
        "referenceName": {
          "type": "string",
          "description": "Reference LinkedService name."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "LinkedServiceResource": {
      "description": "Linked service resource type.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/LinkedService",
          "description": "Properties of linked service."
        }
      },
      "required": [
        "properties"
      ]
    },
    "PipelineRunFilterParameters": {
      "description": "Query parameters for listing pipeline runs.",
      "type": "object",
      "properties": {
        "continuationToken": {
          "description": "The continuation token for getting the next page of results. Null for first page.",
          "type": "string"
        },
        "lastUpdatedAfter": {
          "description": "The time at or after which the pipeline run event was updated in 'ISO 8601' format.",
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBefore": {
          "description": "The time at or before which the pipeline run event was updated in 'ISO 8601' format.",
          "type": "string",
          "format": "date-time"
        },
        "filters": {
          "type": "array",
          "description": "List of filters.",
          "items": {
            "$ref": "#/definitions/PipelineRunQueryFilter"
          }
        },
        "orderBy": {
          "type": "array",
          "description": "List of OrderBy option.",
          "items": {
            "$ref": "#/definitions/PipelineRunQueryOrderBy"
          }
        }
      },
      "required": [
        "lastUpdatedAfter",
        "lastUpdatedBefore"
      ]
    },
    "PipelineRunQueryFilter": {
      "description": "Query filter option for listing pipeline runs.",
      "type": "object",
      "properties": {
        "operand": {
          "description": "Parameter name to be used for filter.",
          "type": "string",
          "enum": [
            "PipelineName",
            "Status",
            "RunStart",
            "RunEnd"
          ],
          "x-ms-enum": {
            "name": "PipelineRunQueryFilterOperand",
            "modelAsString": true
          }
        },
        "operator": {
          "description": "Operator to be used for filter.",
          "type": "string",
          "enum": [
            "Equals",
            "NotEquals",
            "In",
            "NotIn"
          ],
          "x-ms-enum": {
            "name": "PipelineRunQueryFilterOperator",
            "modelAsString": true
          }
        },
        "values": {
          "type": "array",
          "description": "List of filter values.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "operand",
        "operator",
        "values"
      ]
    },
    "PipelineRunQueryOrderBy": {
      "description": "An object to provide order by options for listing pipeline runs.",
      "type": "object",
      "properties": {
        "orderBy": {
          "description": "Parameter name to be used for order by.",
          "type": "string",
          "enum": [
            "RunStart",
            "RunEnd"
          ],
          "x-ms-enum": {
            "name": "PipelineRunQueryOrderByField",
            "modelAsString": true
          }
        },
        "order": {
          "description": "Sorting order of the parameter.",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ],
          "x-ms-enum": {
            "name": "PipelineRunQueryOrder",
            "modelAsString": true
          }
        }
      },
      "required": [
        "orderBy",
        "order"
      ]
    },
    "PipelineRunQueryResponse": {
      "description": "A list pipeline runs.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of pipeline runs.",
          "items": {
            "$ref": "#/definitions/PipelineRun"
          }
        },
        "continuationToken": {
          "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
          "type": "string"
        }
      }
    },
    "PipelineRun": {
      "description": "Information about a pipeline run.",
      "type": "object",
      "properties": {
        "runId": {
          "description": "Identifier of a run.",
          "type": "string",
          "readOnly": true
        },
        "pipelineName": {
          "description": "The pipeline name.",
          "type": "string",
          "readOnly": true
        },
        "parameters": {
          "description": "The full or partial list of parameter name, value pair used in the pipeline run.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "invokedBy": {
          "description": "Entity that started the pipeline run.",
          "$ref": "#/definitions/PipelineRunInvokedBy",
          "readOnly": true
        },
        "lastUpdated": {
          "description": "The last updated timestamp for the pipeline run event in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "runStart": {
          "description": "The start time of a pipeline run in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "runEnd": {
          "description": "The end time of a pipeline run in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "durationInMs": {
          "description": "The duration of a pipeline run.",
          "type": "integer",
          "readOnly": true
        },
        "status": {
          "description": "The status of a pipeline run.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The message from a pipeline run.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PipelineRunInvokedBy": {
      "description": "Provides entity name and id that started the pipeline run.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the entity that started the pipeline run.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "The ID of the entity that started the run.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ActivityRunsListResponse": {
      "description": "A list activity runs.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of activity runs.",
          "items": {
            "$ref": "#/definitions/ActivityRun"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "ActivityRun": {
      "description": "Information about an activity run in a pipeline.",
      "type": "object",
      "properties": {
        "pipelineName": {
          "description": "The name of the pipeline.",
          "type": "string",
          "readOnly": true
        },
        "pipelineRunId": {
          "description": "The id of the pipeline run.",
          "type": "string",
          "readOnly": true
        },
        "activityName": {
          "description": "The name of the activity.",
          "type": "string",
          "readOnly": true
        },
        "activityType": {
          "description": "The type of the activity.",
          "type": "string",
          "readOnly": true
        },
        "activityRunId": {
          "description": "The id of the activity run.",
          "type": "string",
          "readOnly": true
        },
        "linkedServiceName": {
          "description": "The name of the compute linked service.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the activity run.",
          "type": "string",
          "readOnly": true
        },
        "activityRunStart": {
          "description": "The start time of the activity run in 'ISO 8601' format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "activityRunEnd": {
          "description": "The end time of the activity run in 'ISO 8601' format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "durationInMs": {
          "description": "The duration of the activity run.",
          "type": "integer",
          "readOnly": true
        },
        "input": {
          "description": "The input for the activity.",
          "type": "object",
          "readOnly": true
        },
        "output": {
          "description": "The output for the activity.",
          "type": "object",
          "readOnly": true
        },
        "error": {
          "description": "The error if any from the activity run.",
          "type": "object",
          "readOnly": true
        }
      }
    },
    "TriggerRunListResponse": {
      "description": "A list of trigger runs.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of trigger runs.",
          "items": {
            "$ref": "#/definitions/TriggerRun"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "TriggerRun": {
      "description": "Trigger runs.",
      "type": "object",
      "properties": {
        "triggerRunId": {
          "type": "string",
          "description": "Trigger run id.",
          "readOnly": true
        },
        "triggerName": {
          "type": "string",
          "description": "Trigger name.",
          "readOnly": true
        },
        "triggerType": {
          "type": "string",
          "description": "Trigger type.",
          "readOnly": true
        },
        "triggerRunTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Trigger run start time.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Inprogress"
          ],
          "x-ms-enum": {
            "name": "TriggerRunStatus",
            "modelAsString": true
          },
          "description": "Trigger run status.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Trigger error message.",
          "readOnly": true
        },
        "properties": {
          "description": "List of property name and value related to trigger run. Name, value pair depends on type of trigger.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "triggeredPipelines": {
          "description": "List of pipeline name and run Id triggered by the trigger run.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "OperationListResponse": {
      "description": "A list of operations that can be performed by the Data Factory service.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of Data Factory operations supported by the Data Factory resource provider."
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of results, if any remaining results exist."
        }
      }
    },
    "Operation": {
      "description": "Azure Data Factory API operation definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "origin": {
          "description": "The intended executor of the operation.",
          "type": "string"
        },
        "display": {
          "description": "Metadata associated with the operation.",
          "properties": {
            "description": {
              "description": "The description of the operation.",
              "type": "string"
            },
            "provider": {
              "description": "The name of the provider.",
              "type": "string"
            },
            "resource": {
              "description": "The name of the resource type on which the operation is performed.",
              "type": "string"
            },
            "operation": {
              "description": "The type of operation: get, read, delete, etc.",
              "type": "string"
            }
          }
        },
        "properties": {
          "description": "Additional details about the operation.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationProperties"
        }
      }
    },
    "OperationProperties": {
      "description": "Additional details about an operation.",
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "serviceSpecification": {
          "description": "Details about a service operation.",
          "$ref": "#/definitions/OperationServiceSpecification"
        }
      }
    },
    "OperationServiceSpecification": {
      "description": "Details about a service operation.",
      "type": "object",
      "properties": {
        "logSpecifications": {
          "description": "Details about operations related to logs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationLogSpecification"
          }
        },
        "metricSpecifications": {
          "description": "Details about operations related to metrics.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationMetricSpecification"
          }
        }
      }
    },
    "OperationLogSpecification": {
      "description": "Details about an operation related to logs.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the log category.",
          "type": "string"
        },
        "displayName": {
          "description": "Localized display name.",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blobs created in the customer storage account, per hour.",
          "type": "string"
        }
      }
    },
    "OperationMetricSpecification": {
      "description": "Details about an operation related to metrics.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the metric.",
          "type": "string"
        },
        "displayName": {
          "description": "Localized display name of the metric.",
          "type": "string"
        },
        "displayDescription": {
          "description": "The description of the metric.",
          "type": "string"
        },
        "unit": {
          "description": "The unit that the metric is measured in.",
          "type": "string"
        },
        "aggregationType": {
          "description": "The type of metric aggregation.",
          "type": "string"
        },
        "enableRegionalMdmAccount": {
          "description": "Whether or not the service is using regional MDM accounts.",
          "type": "string"
        },
        "sourceMdmAccount": {
          "description": "The name of the MDM account.",
          "type": "string"
        },
        "sourceMdmNamespace": {
          "description": "The name of the MDM namespace.",
          "type": "string"
        },
        "availabilities": {
          "description": "Defines how often data for metrics becomes available.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationMetricAvailability"
          }
        }
      }
    },
    "OperationMetricAvailability": {
      "description": "Defines how often data for a metric becomes available.",
      "type": "object",
      "properties": {
        "timeGrain": {
          "description": "The granularity for the metric.",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blob created in the customer storage account, per hour.",
          "type": "string"
        }
      }
    },
    "AzureDataLakeAnalyticsLinkedServiceTypeProperties": {
      "description": "Azure Data Lake Analytics linked service properties.",
      "properties": {
        "accountName": {
          "type": "object",
          "description": "The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "description": "The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "description": "The Key of the application used to authenticate against the Azure Data Lake Analytics account.",
          "$ref": "#/definitions/SecureString"
        },
        "tenant": {
          "type": "object",
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "subscriptionId": {
          "type": "object",
          "description": "Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "resourceGroupName": {
          "type": "object",
          "description": "Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "dataLakeAnalyticsUri": {
          "type": "object",
          "description": "Azure Data Lake Analytics URI Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "accountName",
        "tenant"
      ]
    },
    "AzureDataLakeAnalyticsLinkedService": {
      "x-ms-discriminator-value": "AzureDataLakeAnalytics",
      "description": "Azure Data Lake Analytics linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Data Lake Analytics linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureDataLakeAnalyticsLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightOnDemandLinkedServiceTypeProperties": {
      "description": "HDInsight ondemand linked service properties.",
      "properties": {
        "clusterSize": {
          "type": "object",
          "description": "Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string)."
        },
        "timeToLive": {
          "type": "object",
          "description": "The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string)."
        },
        "version": {
          "type": "object",
          "description": "Version of the HDInsight cluster.  Type: string (or Expression with resultType string)."
        },
        "linkedServiceName": {
          "description": "Azure Storage linked service to be used by the on-demand cluster for storing and processing data.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "hostSubscriptionId": {
          "type": "object",
          "description": "The customer’s subscription to host the cluster. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "description": "The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "description": "The key for the service principal id.",
          "$ref": "#/definitions/SecureString"
        },
        "tenant": {
          "type": "object",
          "description": "The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "clusterResourceGroup": {
          "type": "object",
          "description": "The resource group where the cluster belongs. Type: string (or Expression with resultType string)."
        },
        "clusterNamePrefix": {
          "type": "object",
          "description": "The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string)."
        },
        "clusterUserName": {
          "type": "object",
          "description": "The username to access the cluster. Type: string (or Expression with resultType string)."
        },
        "clusterPassword": {
          "description": "The password to access the cluster.",
          "$ref": "#/definitions/SecureString"
        },
        "clusterSshUserName": {
          "type": "object",
          "description": "The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string)."
        },
        "clusterSshPassword": {
          "description": "The password to SSH remotely connect cluster’s node (for Linux).",
          "$ref": "#/definitions/SecureString"
        },
        "additionalLinkedServiceNames": {
          "description": "Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedServiceReference"
          }
        },
        "hcatalogLinkedServiceName": {
          "description": "The name of Azure SQL linked service that point to the HCatalog database. The on-demand HDInsight cluster is created by using the Azure SQL database as the metastore.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "clusterType": {
          "type": "object",
          "description": "The cluster type. Type: string (or Expression with resultType string)."
        },
        "sparkVersion": {
          "type": "object",
          "description": "The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string)."
        },
        "coreConfiguration": {
          "description": "Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.",
          "type": "object"
        },
        "hBaseConfiguration": {
          "description": "Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "hdfsConfiguration": {
          "description": "Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "hiveConfiguration": {
          "description": "Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "mapReduceConfiguration": {
          "description": "Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "oozieConfiguration": {
          "description": "Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "stormConfiguration": {
          "description": "Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "yarnConfiguration": {
          "description": "Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "clusterSize",
        "timeToLive",
        "version",
        "linkedServiceName",
        "hostSubscriptionId",
        "tenant",
        "clusterResourceGroup"
      ]
    },
    "HDInsightOnDemandLinkedService": {
      "x-ms-discriminator-value": "HDInsightOnDemand",
      "description": "HDInsight ondemand linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "HDInsight ondemand linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HDInsightOnDemandLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SapHanaLinkedServiceProperties": {
      "description": "Properties specific to this linked service type.",
      "properties": {
        "server": {
          "type": "object",
          "description": "Host name of the SAP HANA server. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "The authentication type to be used to connect to the SAP HANA server.",
          "type": "string",
          "enum": [
            "Basic",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "SapHanaAuthenticationType",
            "modelAsString": true
          }
        },
        "userName": {
          "type": "object",
          "description": "Username to access the SAP HANA server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password to access the SAP HANA server.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server"
      ]
    },
    "SapHanaLinkedService": {
      "x-ms-discriminator-value": "SapHana",
      "description": "SAP HANA Linked Service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Properties specific to this linked service type.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SapHanaLinkedServiceProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SapBWLinkedServiceTypeProperties": {
      "description": "Properties specific to this linked service type.",
      "properties": {
        "server": {
          "type": "object",
          "description": "Host name of the SAP BW instance. Type: string (or Expression with resultType string)."
        },
        "systemNumber": {
          "type": "object",
          "description": "System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string)."
        },
        "clientId": {
          "type": "object",
          "description": "Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "description": "Username to access the SAP BW server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password to access the SAP BW server.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "systemNumber",
        "clientId"
      ]
    },
    "SapBWLinkedService": {
      "x-ms-discriminator-value": "SapBW",
      "description": "SAP Business Warehouse Linked Service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Properties specific to this linked service type.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SapBWLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SftpServerLinkedServiceTypeProperties": {
      "description": "Properties specific to this linked service type.",
      "properties": {
        "host": {
          "type": "object",
          "description": "The SFTP server host name. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "description": "The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "authenticationType": {
          "description": "The authentication type to be used to connect to the FTP server.",
          "type": "string",
          "enum": [
            "Basic",
            "SshPublicKey"
          ],
          "x-ms-enum": {
            "name": "SftpAuthenticationType",
            "modelAsString": true
          }
        },
        "userName": {
          "type": "object",
          "description": "The username used to log on to the SFTP server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password to logon the SFTP server for Basic authentication.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "privateKeyPath": {
          "type": "object",
          "description": "The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string)."
        },
        "privateKeyContent": {
          "description": "Base64 encoded SSH private key content for SshPublicKey authentication. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format.",
          "$ref": "#/definitions/SecureString"
        },
        "passPhrase": {
          "description": "The password to decrypt the SSH private key if the SSH private key is encrypted.",
          "$ref": "#/definitions/SecureString"
        },
        "skipHostKeyValidation": {
          "type": "object",
          "description": "If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "hostKeyFingerprint": {
          "type": "object",
          "description": "The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ]
    },
    "SftpServerLinkedService": {
      "x-ms-discriminator-value": "Sftp",
      "description": "A linked service for an SSH File Transfer Protocol (SFTP) server. ",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Properties specific to this linked service type.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SftpServerLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "FtpServerLinkedServiceTypeProperties": {
      "description": "Properties specific to this linked service type.",
      "properties": {
        "host": {
          "type": "object",
          "description": "Host name of the FTP server. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "description": "The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "authenticationType": {
          "description": "The authentication type to be used to connect to the FTP server.",
          "type": "string",
          "enum": [
            "Basic",
            "Anonymous"
          ],
          "x-ms-enum": {
            "name": "FtpAuthenticationType",
            "modelAsString": true
          }
        },
        "userName": {
          "type": "object",
          "description": "Username to logon the FTP server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password to logon the FTP server.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "enableSsl": {
          "type": "object",
          "description": "If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "enableServerCertificateValidation": {
          "type": "object",
          "description": "If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "host"
      ]
    },
    "FtpServerLinkedService": {
      "x-ms-discriminator-value": "FtpServer",
      "description": "A FTP server Linked Service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Properties specific to this linked service type.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FtpServerLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HttpLinkedServiceTypeProperties": {
      "description": "Properties specific to this linked service type.",
      "properties": {
        "url": {
          "type": "object",
          "description": "The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "The authentication type to be used to connect to the HTTP server.",
          "type": "string",
          "enum": [
            "Basic",
            "Anonymous",
            "Digest",
            "Windows",
            "ClientCertificate"
          ],
          "x-ms-enum": {
            "name": "HttpAuthenticationType",
            "modelAsString": true
          }
        },
        "userName": {
          "type": "object",
          "description": "User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for Basic, Digest, Windows, or ClientCertificate with EmbeddedCertData authentication.",
          "$ref": "#/definitions/SecureString"
        },
        "embeddedCertData": {
          "type": "object",
          "description": "Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string)."
        },
        "certThumbprint": {
          "type": "object",
          "description": "Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "enableServerCertificateValidation": {
          "type": "object",
          "description": "If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "url"
      ]
    },
    "HttpLinkedService": {
      "x-ms-discriminator-value": "HttpServer",
      "description": "Linked service for an HTTP source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Properties specific to this linked service type.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HttpLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureSearchLinkedServiceTypeProperties": {
      "description": "Windows Azure Search Service linked service properties.",
      "properties": {
        "url": {
          "type": "object",
          "description": "URL for Azure Search service. Type: string (or Expression with resultType string)."
        },
        "key": {
          "description": "Admin Key for Azure Search service",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ]
    },
    "AzureSearchLinkedService": {
      "x-ms-discriminator-value": "AzureSearch",
      "description": "Linked service for Windows Azure Search Service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Windows Azure Search Service linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureSearchLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "CustomDataSourceLinkedService": {
      "x-ms-discriminator-value": "CustomDataSource",
      "description": "Custom linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Custom linked service properties.",
          "x-ms-client-flatten": true,
          "type": "object"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AmazonRedshiftLinkedServiceTypeProperties": {
      "description": "Amazon Redshift linked service properties.",
      "properties": {
        "server": {
          "type": "object",
          "description": "The name of the Amazon Redshift server. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "description": "The username of the Amazon Redshift source. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "The password of the Amazon Redshift source.",
          "$ref": "#/definitions/SecureString"
        },
        "database": {
          "type": "object",
          "description": "The database name of the Amazon Redshift source. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "description": "The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "database"
      ]
    },
    "AmazonRedshiftLinkedService": {
      "x-ms-discriminator-value": "AmazonRedshift",
      "description": "Linked service for Amazon Redshift.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Amazon Redshift linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AmazonRedshiftLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AmazonS3LinkedServiceTypeProperties": {
      "description": "Amazon S3 linked service properties.",
      "properties": {
        "accessKeyId": {
          "type": "object",
          "description": "The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string)."
        },
        "secretAccessKey": {
          "description": "The secret access key of the Amazon S3 Identity and Access Management (IAM) user.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AmazonS3LinkedService": {
      "x-ms-discriminator-value": "AmazonS3",
      "description": "Linked service for Amazon S3.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Amazon S3 linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AmazonS3LinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SalesforceLinkedServiceTypeProperties": {
      "description": "Salesforce linked service properties.",
      "properties": {
        "environmentUrl": {
          "type": "object",
          "description": "The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "description": "The username for Basic authentication of the Salesforce source. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "The password for Basic authentication of the Salesforce source.",
          "$ref": "#/definitions/SecureString"
        },
        "securityToken": {
          "description": "The security token is required to remotely access Salesforce source.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      }
    },
    "SalesforceLinkedService": {
      "x-ms-discriminator-value": "Salesforce",
      "description": "Linked service for Salesforce.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Salesforce linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SalesforceLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureDataLakeStoreLinkedServiceTypeProperties": {
      "description": "Azure Data Lake Store linked service properties.",
      "properties": {
        "dataLakeStoreUri": {
          "type": "object",
          "description": "Data Lake Store service URI. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "description": "The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "description": "The Key of the application used to authenticate against the Azure Data Lake Store account.",
          "$ref": "#/definitions/SecureString"
        },
        "tenant": {
          "type": "object",
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "accountName": {
          "type": "object",
          "description": "Data Lake Store account name. Type: string (or Expression with resultType string)."
        },
        "subscriptionId": {
          "type": "object",
          "description": "Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "resourceGroupName": {
          "type": "object",
          "description": "Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "dataLakeStoreUri"
      ]
    },
    "AzureDataLakeStoreLinkedService": {
      "x-ms-discriminator-value": "AzureDataLakeStore",
      "description": "Azure Data Lake Store linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Data Lake Store linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureDataLakeStoreLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "MongoDbLinkedServiceTypeProperties": {
      "description": "MongoDB linked service properties.",
      "properties": {
        "server": {
          "type": "object",
          "description": "The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "The authentication type to be used to connect to the MongoDB database.",
          "type": "string",
          "enum": [
            "Basic",
            "Anonymous"
          ],
          "x-ms-enum": {
            "name": "MongoDbAuthenticationType",
            "modelAsString": true
          }
        },
        "databaseName": {
          "type": "object",
          "description": "The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for authentication.",
          "$ref": "#/definitions/SecureString"
        },
        "authSource": {
          "type": "object",
          "description": "Database to verify the username and password. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "description": "The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "databaseName"
      ]
    },
    "MongoDbLinkedService": {
      "x-ms-discriminator-value": "MongoDb",
      "description": "Linked service for MongoDb data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "MongoDB linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MongoDbLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "CassandraLinkedServiceTypeProperties": {
      "description": "Cassandra linked service properties.",
      "properties": {
        "host": {
          "type": "object",
          "description": "Host name for connection. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "type": "object",
          "description": "AuthenticationType to be used for connection. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "description": "The port for the connection. Type: integer (or Expression with resultType integer)."
        },
        "username": {
          "type": "object",
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for authentication.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ]
    },
    "CassandraLinkedService": {
      "x-ms-discriminator-value": "Cassandra",
      "description": "Linked service for Cassandra data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Cassandra linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CassandraLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "WebClientCertificateAuthentication": {
      "description": "A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client.",
      "x-ms-discriminator-value": "ClientCertificate",
      "allOf": [
        {
          "$ref": "#/definitions/WebLinkedServiceTypeProperties"
        }
      ],
      "properties": {
        "pfx": {
          "description": "Base64-encoded contents of a PFX file.",
          "$ref": "#/definitions/SecureString"
        },
        "password": {
          "description": "Password for the PFX file.",
          "$ref": "#/definitions/SecureString"
        }
      },
      "required": [
        "pfx",
        "password"
      ]
    },
    "WebBasicAuthentication": {
      "description": "A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint.",
      "x-ms-discriminator-value": "Basic",
      "allOf": [
        {
          "$ref": "#/definitions/WebLinkedServiceTypeProperties"
        }
      ],
      "properties": {
        "username": {
          "type": "object",
          "description": "User name for Basic authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "The password for Basic authentication.",
          "$ref": "#/definitions/SecureString"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "WebAnonymousAuthentication": {
      "description": "A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint.",
      "x-ms-discriminator-value": "Anonymous",
      "allOf": [
        {
          "$ref": "#/definitions/WebLinkedServiceTypeProperties"
        }
      ]
    },
    "WebLinkedServiceTypeProperties": {
      "description": "Base definition of WebLinkedServiceTypeProperties, this typeProperties is polymorphic based on authenticationType, so not flattened in SDK models.",
      "discriminator": "authenticationType",
      "type": "object",
      "properties": {
        "url": {
          "type": "object",
          "description": "The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "Type of authentication used to connect to the web table source.",
          "type": "string",
          "enum": [
            "Basic",
            "Anonymous",
            "ClientCertificate"
          ],
          "x-ms-enum": {
            "name": "WebAuthenticationType",
            "modelAsString": true
          }
        }
      },
      "required": [
        "authenticationType",
        "url"
      ]
    },
    "WebLinkedService": {
      "x-ms-discriminator-value": "Web",
      "description": "Web linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Web linked service properties.",
          "$ref": "#/definitions/WebLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ODataLinkedServiceTypeProperties": {
      "description": "OData linked service properties.",
      "properties": {
        "url": {
          "type": "object",
          "description": "The URL of the OData service endpoint. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "Type of authentication used to connect to the OData service.",
          "type": "string",
          "enum": [
            "Basic",
            "Anonymous"
          ],
          "x-ms-enum": {
            "name": "ODataAuthenticationType",
            "modelAsString": true
          }
        },
        "userName": {
          "type": "object",
          "description": "User name of the OData service. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password of the OData service.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ]
    },
    "ODataLinkedService": {
      "x-ms-discriminator-value": "OData",
      "description": "Open Data Protocol (OData) linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "OData linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ODataLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HdfsLinkedServiceTypeProperties": {
      "description": "HDFS linked service properties.",
      "properties": {
        "url": {
          "type": "object",
          "description": "The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "type": "object",
          "description": "Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "description": "User name for Windows authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for Windows authentication.",
          "$ref": "#/definitions/SecureString"
        }
      },
      "required": [
        "url"
      ]
    },
    "HdfsLinkedService": {
      "x-ms-discriminator-value": "Hdfs",
      "description": "Hadoop Distributed File System (HDFS) linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "HDFS linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HdfsLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "OdbcLinkedServiceTypeProperties": {
      "description": "ODBC linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The non-access credential portion of the connection string as well as an optional encrypted credential.",
          "$ref": "#/definitions/SecureString"
        },
        "authenticationType": {
          "type": "object",
          "description": "Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string)."
        },
        "credential": {
          "description": "The access credential portion of the connection string specified in driver-specific property-value format.",
          "$ref": "#/definitions/SecureString"
        },
        "userName": {
          "type": "object",
          "description": "User name for Basic authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for Basic authentication.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "OdbcLinkedService": {
      "x-ms-discriminator-value": "Odbc",
      "description": "Open Database Connectivity (ODBC) linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "ODBC linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OdbcLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureMLLinkedServiceTypeProperties": {
      "description": "Azure ML Web Service linked service properties.",
      "properties": {
        "mlEndpoint": {
          "type": "object",
          "description": "The Batch Execution REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string)."
        },
        "apiKey": {
          "description": "The API key for accessing the Azure ML model endpoint.",
          "$ref": "#/definitions/SecureString"
        },
        "updateResourceEndpoint": {
          "type": "object",
          "description": "The Update Resource REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "description": "The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "$ref": "#/definitions/SecureString",
          "description": "The key of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service."
        },
        "tenant": {
          "type": "object",
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "mlEndpoint",
        "apiKey"
      ]
    },
    "AzureMLLinkedService": {
      "x-ms-discriminator-value": "AzureML",
      "description": "Azure ML Web Service linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure ML Web Service linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureMLLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "TeradataLinkedServiceTypeProperties": {
      "description": "Teradata linked service properties.",
      "properties": {
        "server": {
          "type": "object",
          "description": "Server name for connection. Type: string (or Expression with resultType string)."
        },
        "schema": {
          "type": "object",
          "description": "Schema name for connection. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "AuthenticationType to be used for connection.",
          "type": "string",
          "enum": [
            "Basic",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "TeradataAuthenticationType",
            "modelAsString": true
          }
        },
        "username": {
          "type": "object",
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for authentication.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server"
      ]
    },
    "TeradataLinkedService": {
      "x-ms-discriminator-value": "Teradata",
      "description": "Linked service for Teradata data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Teradata linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TeradataLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "Db2LinkedServiceTypeProperties": {
      "description": "DB2 linked service properties.",
      "properties": {
        "server": {
          "type": "object",
          "description": "Server name for connection. Type: string (or Expression with resultType string)."
        },
        "database": {
          "type": "object",
          "description": "Database name for connection. Type: string (or Expression with resultType string)."
        },
        "schema": {
          "type": "object",
          "description": "Schema name for connection. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "AuthenticationType to be used for connection.",
          "type": "string",
          "enum": [
            "Basic"
          ],
          "x-ms-enum": {
            "name": "Db2AuthenticationType",
            "modelAsString": true
          }
        },
        "username": {
          "type": "object",
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for authentication.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "database"
      ]
    },
    "Db2LinkedService": {
      "x-ms-discriminator-value": "Db2",
      "description": "Linked service for DB2 data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "DB2 linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/Db2LinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SybaseLinkedServiceTypeProperties": {
      "description": "Sybase linked service properties.",
      "properties": {
        "server": {
          "type": "object",
          "description": "Server name for connection. Type: string (or Expression with resultType string)."
        },
        "database": {
          "type": "object",
          "description": "Database name for connection. Type: string (or Expression with resultType string)."
        },
        "schema": {
          "type": "object",
          "description": "Schema name for connection. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "AuthenticationType to be used for connection.",
          "type": "string",
          "enum": [
            "Basic",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "SybaseAuthenticationType",
            "modelAsString": true
          }
        },
        "username": {
          "type": "object",
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for authentication.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "database"
      ]
    },
    "SybaseLinkedService": {
      "x-ms-discriminator-value": "Sybase",
      "description": "Linked service for Sybase data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Sybase linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SybaseLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "PostgreSqlLinkedServiceTypeProperties": {
      "description": "PostgreSQL linked service properties.",
      "properties": {
        "server": {
          "type": "object",
          "description": "Server name for connection. Type: string (or Expression with resultType string)."
        },
        "database": {
          "type": "object",
          "description": "Database name for connection. Type: string (or Expression with resultType string)."
        },
        "schema": {
          "type": "object",
          "description": "Schema name for connection. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for authentication.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "database"
      ]
    },
    "PostgreSqlLinkedService": {
      "x-ms-discriminator-value": "PostgreSql",
      "description": "Linked service for PostgreSQL data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "PostgreSQL linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PostgreSqlLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "MySqlLinkedServiceTypeProperties": {
      "description": "MySQL linked service properties.",
      "properties": {
        "server": {
          "type": "object",
          "description": "Server name for connection. Type: string (or Expression with resultType string)."
        },
        "database": {
          "type": "object",
          "description": "Database name for connection. Type: string (or Expression with resultType string)."
        },
        "schema": {
          "type": "object",
          "description": "Schema name for connection. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for authentication.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "database"
      ]
    },
    "MySqlLinkedService": {
      "x-ms-discriminator-value": "MySql",
      "description": "Linked service for MySQL data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "MySQL linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MySqlLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "OracleLinkedServiceTypeProperties": {
      "description": "Oracle database linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "OracleLinkedService": {
      "x-ms-discriminator-value": "Oracle",
      "description": "Oracle database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Oracle database linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OracleLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "FileServerLinkedServiceTypeProperties": {
      "description": "File system linked service properties.",
      "properties": {
        "host": {
          "type": "object",
          "description": "Host name of the server. Type: string (or Expression with resultType string)."
        },
        "userId": {
          "type": "object",
          "description": "User ID to logon the server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password to logon the server.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ]
    },
    "FileServerLinkedService": {
      "x-ms-discriminator-value": "FileServer",
      "description": "File system linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "File system linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FileServerLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightLinkedServiceTypeProperties": {
      "description": "HDInsight linked service properties.",
      "properties": {
        "clusterUri": {
          "type": "object",
          "description": "HDInsight cluster URI. Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "description": "HDInsight cluster user name. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "HDInsight cluster password.",
          "$ref": "#/definitions/SecureString"
        },
        "linkedServiceName": {
          "description": "The Azure Storage linked service reference.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "hcatalogLinkedServiceName": {
          "description": "A reference to the Azure SQL linked service that points to the HCatalog database.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "clusterUri"
      ]
    },
    "HDInsightLinkedService": {
      "x-ms-discriminator-value": "HDInsight",
      "description": "HDInsight linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "HDInsight linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HDInsightLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureKeyVaultSecretReference": {
      "description": "Azure Key Vault Secret properties.",
      "x-ms-discriminator-value": "AzureKeyVaultSecret",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureKeyVaultReference"
        }
      ],
      "properties": {
        "secretName": {
          "type": "object",
          "description": "The name of secret in Azure Key Vault. Type: string (or Expression with resultType string)."
        },
        "secretVersion": {
          "type": "object",
          "description": "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "secretName"
      ]
    },
    "AzureKeyVaultReference": {
      "type": "object",
      "description": "A reference to an object in Azure Key Vault.",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the Azure Key Vault object to reference."
        },
        "store": {
          "description": "The Azure Key Vault LinkedService.",
          "$ref": "#/definitions/LinkedServiceReference"
        }
      },
      "required": [
        "type",
        "store"
      ]
    },
    "DynamicsLinkedServiceTypeProperties": {
      "description": "Dynamics linked service properties.",
      "properties": {
        "deploymentType": {
          "x-ms-enum": {
            "name": "DynamicsDeploymentType",
            "modelAsString": true
          },
          "enum": [
            "Online",
            "OnPremisesWithIfd"
          ],
          "type": "object",
          "description": "The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string)."
        },
        "hostName": {
          "type": "object",
          "description": "The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "description": "The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "organizationName": {
          "type": "object",
          "description": "The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "x-ms-enum": {
            "name": "DynamicsAuthenticationType",
            "modelAsString": true
          },
          "enum": [
            "Office365",
            "Ifd"
          ],
          "type": "object",
          "description": "The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "description": "User name to access the Dynamics instance. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password to access the Dynamics instance.",
          "$ref": "#/definitions/AzureKeyVaultSecretReference"
        }
      },
      "required": [
        "deploymentType",
        "authenticationType",
        "username",
        "password"
      ]
    },
    "DynamicsLinkedService": {
      "x-ms-discriminator-value": "Dynamics",
      "description": "Dynamics linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Dynamics linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DynamicsLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "CosmosDbLinkedServiceTypeProperties": {
      "description": "CosmosDB linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "CosmosDbLinkedService": {
      "x-ms-discriminator-value": "CosmosDb",
      "description": "Microsoft Azure Cosmos Database (CosmosDB) linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "CosmosDB linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CosmosDbLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureKeyVaultLinkedServiceTypeProperties": {
      "description": "Azure Key Vault linked service properties.",
      "properties": {
        "baseUrl": {
          "type": "object",
          "description": "The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "baseUrl"
      ]
    },
    "AzureKeyVaultLinkedService": {
      "x-ms-discriminator-value": "AzureKeyVault",
      "description": "Azure Key Vault linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Key Vault linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureKeyVaultLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureBatchLinkedServiceTypeProperties": {
      "description": "Azure Batch linked service properties.",
      "properties": {
        "accountName": {
          "type": "object",
          "description": "The Azure Batch account name. Type: string (or Expression with resultType string)."
        },
        "accessKey": {
          "description": "The Azure Batch account access key.",
          "$ref": "#/definitions/SecureString"
        },
        "batchUri": {
          "type": "object",
          "description": "The Azure Batch URI. Type: string (or Expression with resultType string)."
        },
        "poolName": {
          "type": "object",
          "description": "The Azure Batch pool name. Type: string (or Expression with resultType string)."
        },
        "linkedServiceName": {
          "description": "The Azure Storage linked service reference.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "accountName",
        "batchUri",
        "poolName",
        "linkedServiceName"
      ]
    },
    "AzureBatchLinkedService": {
      "x-ms-discriminator-value": "AzureBatch",
      "description": "Azure Batch linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Batch linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureBatchLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureSqlDatabaseLinkedServiceTypeProperties": {
      "description": "Azure SQL Database linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "AzureSqlDatabaseLinkedService": {
      "x-ms-discriminator-value": "AzureSqlDatabase",
      "description": "Microsoft Azure SQL Database linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure SQL Database linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureSqlDatabaseLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SqlServerLinkedServiceTypeProperties": {
      "description": "SQL Server linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string.",
          "$ref": "#/definitions/SecureString"
        },
        "userName": {
          "type": "object",
          "description": "The on-premises Windows authentication user name. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "The on-premises Windows authentication password.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "SqlServerLinkedService": {
      "x-ms-discriminator-value": "SqlServer",
      "description": "SQL Server linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "SQL Server linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SqlServerLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureSqlDWLinkedServiceTypeProperties": {
      "description": "Azure SQL Data Warehouse linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "AzureSqlDWLinkedService": {
      "x-ms-discriminator-value": "AzureSqlDW",
      "description": "Azure SQL Data Warehouse linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure SQL Data Warehouse linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureSqlDWLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureStorageLinkedServiceTypeProperties": {
      "description": "Azure Storage linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string. It is mutually exclusive with sasUri property.",
          "$ref": "#/definitions/SecureString"
        },
        "sasUri": {
          "description": "SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property.",
          "$ref": "#/definitions/SecureString"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzureStorageLinkedService": {
      "x-ms-discriminator-value": "AzureStorage",
      "description": "The storage account linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Storage linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureStorageLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "LinkedService": {
      "description": "The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource.",
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of linked service."
        },
        "connectVia": {
          "description": "The integration runtime reference.",
          "$ref": "#/definitions/IntegrationRuntimeReference"
        },
        "description": {
          "description": "Linked service description.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "CompressionLevel": {
      "title": "Microsoft.Azure.Management.DataFactories.Models.CompressionLevel",
      "description": "All available compression levels.",
      "type": "string",
      "enum": [
        "Optimal",
        "Fastest"
      ],
      "x-ms-enum": {
        "name": "DatasetCompressionLevel",
        "modelAsString": true
      }
    },
    "DatasetDeflateCompression": {
      "x-ms-discriminator-value": "Deflate",
      "description": "The Deflate compression method used on a dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetCompression"
        }
      ],
      "properties": {
        "level": {
          "description": "The Deflate compression level.",
          "$ref": "#/definitions/CompressionLevel"
        }
      }
    },
    "DatasetGZipCompression": {
      "x-ms-discriminator-value": "GZip",
      "description": "The GZip compression method used on a dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetCompression"
        }
      ],
      "properties": {
        "level": {
          "description": "The GZip compression level.",
          "$ref": "#/definitions/CompressionLevel"
        }
      }
    },
    "DatasetBZip2Compression": {
      "x-ms-discriminator-value": "BZip2",
      "description": "The BZip2 compression method used on a dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetCompression"
        }
      ],
      "properties": {}
    },
    "DatasetCompression": {
      "discriminator": "type",
      "description": "The compression method used on a dataset.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of dataset compression."
        }
      },
      "required": [
        "type"
      ]
    },
    "ParquetFormat": {
      "description": "The data stored in Parquet format.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetStorageFormat"
        }
      ]
    },
    "OrcFormat": {
      "description": "The data stored in Optimized Row Columnar (ORC) format.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetStorageFormat"
        }
      ]
    },
    "AvroFormat": {
      "description": "The data stored in Avro format.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetStorageFormat"
        }
      ]
    },
    "JsonFormatFilePattern": {
      "description": "JSON format file pattern. A property of JsonFormat.",
      "type": "string",
      "enum": [
        "setOfObjects",
        "arrayOfObjects"
      ],
      "x-ms-enum": {
        "name": "JsonFormatFilePattern",
        "modelAsString": true
      }
    },
    "JsonFormat": {
      "description": "The data stored in JSON format.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetStorageFormat"
        }
      ],
      "properties": {
        "filePattern": {
          "description": "File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive.",
          "$ref": "#/definitions/JsonFormatFilePattern"
        },
        "nestingSeparator": {
          "type": "object",
          "description": "The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string)."
        },
        "encodingName": {
          "type": "object",
          "description": "The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://msdn.microsoft.com/library/system.text.encoding.aspx#Anchor_5. Type: string (or Expression with resultType string)."
        }
      }
    },
    "TextFormat": {
      "description": "The data stored in text format.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetStorageFormat"
        }
      ],
      "properties": {
        "columnDelimiter": {
          "type": "object",
          "description": "The column delimiter. Type: string (or Expression with resultType string)."
        },
        "rowDelimiter": {
          "type": "object",
          "description": "The row delimiter. Type: string (or Expression with resultType string)."
        },
        "escapeChar": {
          "type": "object",
          "description": "The escape character. Type: string (or Expression with resultType string)."
        },
        "quoteChar": {
          "type": "object",
          "description": "The quote character. Type: string (or Expression with resultType string)."
        },
        "nullValue": {
          "type": "object",
          "description": "The null value string. Type: string (or Expression with resultType string)."
        },
        "encodingName": {
          "type": "object",
          "description": "The code page name of the preferred encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string)."
        },
        "treatEmptyAsNull": {
          "type": "object",
          "description": "Treat empty column values in the text file as null. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "skipLineCount": {
          "type": "object",
          "description": "The number of lines/rows to be skipped when parsing text files. The default value is 0. Type: integer (or Expression with resultType integer)."
        },
        "firstRowAsHeader": {
          "type": "object",
          "description": "When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "DatasetStorageFormat": {
      "discriminator": "type",
      "description": "The format definition of a storage.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of dataset storage format."
        },
        "serializer": {
          "type": "object",
          "description": "Serializer. Type: string (or Expression with resultType string)."
        },
        "deserializer": {
          "type": "object",
          "description": "Deserializer. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type"
      ]
    },
    "DatasetDateTimePartitionValue": {
      "x-ms-discriminator-value": "DateTime",
      "description": "The date/time value of a partition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetPartitionValue"
        }
      ],
      "properties": {
        "date": {
          "type": "object",
          "description": "Name of variable containing date. Type: string (or Expression with resultType string)."
        },
        "format": {
          "type": "object",
          "description": "Format string for the Date value. Type: string (or Expression with resultType string)."
        }
      }
    },
    "DatasetPartitionValue": {
      "discriminator": "type",
      "description": "The value of a partition.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of partition value."
        }
      },
      "required": [
        "type"
      ]
    },
    "DatasetPartition": {
      "description": "The partition definition.",
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "description": "Name of the partition. Type: string (or Expression with resultType string)."
        },
        "value": {
          "description": "Value of the partition.",
          "$ref": "#/definitions/DatasetPartitionValue"
        }
      }
    },
    "HttpDatasetTypeProperties": {
      "description": "Properties specific to this dataset type.",
      "properties": {
        "relativeUrl": {
          "type": "object",
          "description": "The relative URL based on the URL in the HttpLinkedService refers to an HTTP file Type: string (or Expression with resultType string)."
        },
        "requestMethod": {
          "type": "object",
          "description": "The HTTP method for the HTTP request. Type: string (or Expression with resultType string)."
        },
        "requestBody": {
          "type": "object",
          "description": "The body for the HTTP request. Type: string (or Expression with resultType string)."
        },
        "additionalHeaders": {
          "type": "object",
          "description": "The headers for the HTTP Request. e.g. request-header-name-1:request-header-value-1\r\n...\r\nrequest-header-name-n:request-header-value-n Type: string (or Expression with resultType string)."
        },
        "partitionedBy": {
          "description": "The HTTP method for the HTTP request.",
          "$ref": "#/definitions/DatasetPartition"
        },
        "format": {
          "description": "The format of files.",
          "$ref": "#/definitions/DatasetStorageFormat"
        },
        "compression": {
          "description": "The data compression method used on files.",
          "$ref": "#/definitions/DatasetCompression"
        }
      }
    },
    "HttpDataset": {
      "x-ms-discriminator-value": "HttpFile",
      "description": "A file in an HTTP web server.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Properties specific to this dataset type.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HttpDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureSearchIndexDatasetTypeProperties": {
      "description": "Properties specific to this dataset type.",
      "properties": {
        "indexName": {
          "type": "object",
          "description": "The name of the Azure Search Index. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "indexName"
      ]
    },
    "AzureSearchIndexDataset": {
      "x-ms-discriminator-value": "AzureSearchIndex",
      "description": "The Azure Search Index.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Properties specific to this dataset type.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureSearchIndexDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "WebTableDatasetTypeProperties": {
      "description": "Web table dataset properties.",
      "properties": {
        "index": {
          "type": "object",
          "description": "The zero-based index of the table in the web page. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "path": {
          "type": "object",
          "description": "The relative URL to the web page from the linked service URL. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "index"
      ]
    },
    "WebTableDataset": {
      "x-ms-discriminator-value": "WebTable",
      "description": "The dataset points to a HTML table in the web page.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Web table dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WebTableDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SqlServerTableDatasetTypeProperties": {
      "description": "On-premises SQL Server dataset properties.",
      "properties": {
        "tableName": {
          "type": "object",
          "description": "The table name of the SQL Server dataset. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "tableName"
      ]
    },
    "SqlServerTableDataset": {
      "x-ms-discriminator-value": "SqlServerTable",
      "description": "The on-premises SQL Server dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "On-premises SQL Server dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SqlServerTableDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "RelationalTableDatasetTypeProperties": {
      "description": "Relational table dataset properties.",
      "properties": {
        "tableName": {
          "type": "object",
          "description": "The relational table name. Type: string (or Expression with resultType string)."
        }
      }
    },
    "RelationalTableDataset": {
      "x-ms-discriminator-value": "RelationalTable",
      "description": "The relational table dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Relational table dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RelationalTableDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "OracleTableDatasetTypeProperties": {
      "description": "On-premises Oracle dataset properties.",
      "properties": {
        "tableName": {
          "type": "object",
          "description": "The table name of the on-premises Oracle database. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "tableName"
      ]
    },
    "OracleTableDataset": {
      "x-ms-discriminator-value": "OracleTable",
      "description": "The on-premises Oracle database dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "On-premises Oracle dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OracleTableDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ODataResourceDatasetTypeProperties": {
      "description": "OData dataset properties.",
      "properties": {
        "path": {
          "type": "object",
          "description": "The OData resource path. Type: string (or Expression with resultType string)."
        }
      }
    },
    "ODataResourceDataset": {
      "x-ms-discriminator-value": "ODataResource",
      "description": "The Open Data Protocol (OData) resource dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "OData dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ODataResourceDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "MongoDbCollectionDatasetTypeProperties": {
      "description": "MongoDB database dataset properties.",
      "properties": {
        "collectionName": {
          "type": "object",
          "description": "The table name of the MongoDB database. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "collectionName"
      ]
    },
    "MongoDbCollectionDataset": {
      "x-ms-discriminator-value": "MongoDbCollection",
      "description": "The MongoDB database dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "MongoDB database dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MongoDbCollectionDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "FileShareDatasetTypeProperties": {
      "description": "On-premises file system dataset properties.",
      "properties": {
        "folderPath": {
          "type": "object",
          "description": "The path of the on-premises file system. Type: string (or Expression with resultType string)."
        },
        "fileName": {
          "type": "object",
          "description": "The name of the on-premises file system. Type: string (or Expression with resultType string)."
        },
        "format": {
          "description": "The format of the files.",
          "$ref": "#/definitions/DatasetStorageFormat"
        },
        "fileFilter": {
          "type": "object",
          "description": "Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string)."
        },
        "compression": {
          "description": "The data compression method used for the file system.",
          "$ref": "#/definitions/DatasetCompression"
        }
      }
    },
    "FileShareDataset": {
      "x-ms-discriminator-value": "FileShare",
      "description": "An on-premises file system dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "On-premises file system dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FileShareDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureDataLakeStoreDatasetTypeProperties": {
      "description": "Azure Data Lake Store dataset properties.",
      "properties": {
        "folderPath": {
          "type": "object",
          "description": "Path to the folder in the Azure Data Lake Store. Type: string (or Expression with resultType string)."
        },
        "fileName": {
          "type": "object",
          "description": "The name of the file in the Azure Data Lake Store. Type: string (or Expression with resultType string)."
        },
        "format": {
          "description": "The format of the Data Lake Store.",
          "$ref": "#/definitions/DatasetStorageFormat"
        },
        "compression": {
          "description": "The data compression method used for the item(s) in the Azure Data Lake Store.",
          "$ref": "#/definitions/DatasetCompression"
        },
        "partitionedBy": {
          "description": "Specify a dynamic path and filename for time series data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatasetPartition"
          }
        }
      },
      "required": [
        "folderPath"
      ]
    },
    "AzureDataLakeStoreDataset": {
      "x-ms-discriminator-value": "AzureDataLakeStoreFile",
      "description": "Azure Data Lake Store dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Data Lake Store dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureDataLakeStoreDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "DynamicsEntityDatasetTypeProperties": {
      "description": "Dynamics entity dataset properties.",
      "properties": {
        "entityName": {
          "type": "object",
          "description": "The logical name of the entity. Type: string (or Expression with resultType string)."
        }
      }
    },
    "DynamicsEntityDataset": {
      "x-ms-discriminator-value": "DynamicsEntity",
      "description": "The Dynamics entity dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Dynamics entity dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DynamicsEntityDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "DocumentDbCollectionDatasetTypeProperties": {
      "description": "DocumentDB Collection dataset properties.",
      "properties": {
        "collectionName": {
          "type": "object",
          "description": "Document Database collection name. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "collectionName"
      ]
    },
    "DocumentDbCollectionDataset": {
      "x-ms-discriminator-value": "DocumentDbCollection",
      "description": "Microsoft Azure Document Database Collection dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "DocumentDB Collection dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DocumentDbCollectionDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "CustomDataset": {
      "description": "The custom dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Custom dataset properties.",
          "x-ms-client-flatten": true,
          "type": "object"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "CassandraTableDatasetTypeProperties": {
      "description": "Cassandra dataset properties.",
      "properties": {
        "tableName": {
          "type": "object",
          "description": "The table name of the Cassandra database. Type: string (or Expression with resultType string)."
        },
        "keyspace": {
          "type": "object",
          "description": "The keyspace of the Cassandra database. Type: string (or Expression with resultType string)."
        }
      }
    },
    "CassandraTableDataset": {
      "x-ms-discriminator-value": "CassandraTable",
      "description": "The Cassandra database dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Cassandra dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CassandraTableDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureSqlDWTableDatasetTypeProperties": {
      "description": "Azure SQL Data Warehouse dataset properties.",
      "properties": {
        "tableName": {
          "type": "object",
          "description": "The table name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "tableName"
      ]
    },
    "AzureSqlDWTableDataset": {
      "x-ms-discriminator-value": "AzureSqlDWTable",
      "description": "The Azure SQL Data Warehouse dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure SQL Data Warehouse dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureSqlDWTableDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureSqlTableDatasetTypeProperties": {
      "description": "Azure SQL dataset properties.",
      "properties": {
        "tableName": {
          "type": "object",
          "description": "The table name of the Azure SQL database. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "tableName"
      ]
    },
    "AzureSqlTableDataset": {
      "x-ms-discriminator-value": "AzureSqlTable",
      "description": "The Azure SQL Server database dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure SQL dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureSqlTableDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureTableDatasetTypeProperties": {
      "description": "Azure Table dataset properties.",
      "properties": {
        "tableName": {
          "type": "object",
          "description": "The table name of the Azure Table storage. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "tableName"
      ]
    },
    "AzureTableDataset": {
      "x-ms-discriminator-value": "AzureTable",
      "description": "The Azure Table storage dataset.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Table dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureTableDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureBlobDatasetTypeProperties": {
      "description": "Azure Blob dataset properties.",
      "properties": {
        "folderPath": {
          "type": "object",
          "description": "The path of the Azure Blob storage. Type: string (or Expression with resultType string)."
        },
        "tableRootLocation": {
          "type": "object",
          "description": "The root of blob path. Type: string (or Expression with resultType string)."
        },
        "fileName": {
          "type": "object",
          "description": "The name of the Azure Blob. Type: string (or Expression with resultType string)."
        },
        "format": {
          "description": "The format of the Azure Blob storage.",
          "$ref": "#/definitions/DatasetStorageFormat"
        },
        "compression": {
          "description": "The data compression method used for the blob storage.",
          "$ref": "#/definitions/DatasetCompression"
        }
      }
    },
    "AzureBlobDataset": {
      "x-ms-discriminator-value": "AzureBlob",
      "description": "The Azure Blob storage.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Blob dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureBlobDatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AmazonS3DatasetTypeProperties": {
      "description": "Amazon S3 dataset properties.",
      "properties": {
        "bucketName": {
          "type": "object",
          "description": "The name of the Amazon S3 bucket. Type: string (or Expression with resultType string)."
        },
        "key": {
          "type": "object",
          "description": "The key of the Amazon S3 object. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "description": "The prefix filter for the S3 object name. Type: string (or Expression with resultType string)."
        },
        "version": {
          "type": "object",
          "description": "The version for the S3 object. Type: string (or Expression with resultType string)."
        },
        "format": {
          "description": "The format of files.",
          "$ref": "#/definitions/DatasetStorageFormat"
        },
        "compression": {
          "description": "The data compression method used for the Amazon S3 object.",
          "$ref": "#/definitions/DatasetCompression"
        }
      },
      "required": [
        "bucketName"
      ]
    },
    "AmazonS3Dataset": {
      "x-ms-discriminator-value": "AmazonS3Object",
      "description": "A single Amazon Simple Storage Service (S3) object or a set of S3 objects.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dataset"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Amazon S3 dataset properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AmazonS3DatasetTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "Dataset": {
      "description": "The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents.",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of dataset."
        },
        "description": {
          "description": "Dataset description.",
          "type": "string"
        },
        "structure": {
          "type": "object",
          "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
        },
        "linkedServiceName": {
          "description": "Linked service reference.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "parameters": {
          "$ref": "#/definitions/ParameterDefinitionSpecification",
          "description": "Parameters for dataset."
        }
      },
      "required": [
        "type",
        "linkedServiceName"
      ]
    },
    "TriggerRuntimeState": {
      "type": "string",
      "description": "Enumerates possible state of Triggers.",
      "enum": [
        "Started",
        "Stopped",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "TriggerRuntimeState",
        "modelAsString": true
      }
    },
    "BlobTrigger": {
      "description": "Trigger that runs everytime the selected Blob container changes.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Blob Trigger properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "folderPath": {
              "description": "The path of the container/folder that will trigger the pipeline.",
              "type": "string"
            },
            "maxConcurrency": {
              "description": "The max number of parallel files to handle when it is triggered.",
              "type": "integer"
            },
            "linkedService": {
              "description": "The Azure Storage linked service reference.",
              "$ref": "#/definitions/LinkedServiceReference"
            }
          },
          "required": [
            "folderPath",
            "maxConcurrency",
            "linkedService"
          ]
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "DayOfWeek": {
      "type": "string",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "x-ms-enum": {
        "name": "DayOfWeek",
        "modelAsString": false
      },
      "description": "The days of the week."
    },
    "RecurrenceScheduleOccurrence": {
      "type": "object",
      "properties": {
        "day": {
          "$ref": "#/definitions/DayOfWeek",
          "description": "The day of the week."
        },
        "occurrence": {
          "type": "integer",
          "format": "int32",
          "description": "The occurrence."
        }
      },
      "description": "The recurrence schedule occurence."
    },
    "RecurrenceSchedule": {
      "type": "object",
      "properties": {
        "minutes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The minutes."
        },
        "hours": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The hours."
        },
        "weekDays": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ms-enum": {
              "name": "DaysOfWeek",
              "modelAsString": false
            }
          },
          "description": "The days of the week."
        },
        "monthDays": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The month days."
        },
        "monthlyOccurrences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecurrenceScheduleOccurrence"
          },
          "description": "The monthly occurrences."
        }
      },
      "description": "The recurrence schedule."
    },
    "RecurrenceFrequency": {
      "description": "Enumerates possible frequency option for the schedule trigger.",
      "type": "string",
      "enum": [
        "NotSpecified",
        "Minute",
        "Hour",
        "Day",
        "Week",
        "Month",
        "Year"
      ],
      "x-ms-enum": {
        "name": "RecurrenceFrequency",
        "modelAsString": true
      }
    },
    "ScheduleTriggerRecurrence": {
      "type": "object",
      "properties": {
        "frequency": {
          "$ref": "#/definitions/RecurrenceFrequency",
          "description": "The frequency."
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "The interval."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone."
        },
        "schedule": {
          "$ref": "#/definitions/RecurrenceSchedule",
          "description": "The recurrence schedule."
        }
      },
      "description": "The workflow trigger recurrence."
    },
    "ScheduleTrigger": {
      "description": "Trigger that creates pipeline runs periodically, on schedule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Schedule Trigger properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "recurrence": {
              "$ref": "#/definitions/ScheduleTriggerRecurrence",
              "description": "Recurrence schedule configuration."
            }
          },
          "required": [
            "recurrence"
          ]
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "Trigger": {
      "description": "Azure data factory nested object which contains information about creating pipeline run",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "description": "Trigger type."
        },
        "description": {
          "description": "Trigger description.",
          "type": "string"
        },
        "pipelines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggerPipelineReference"
          },
          "description": "Pipelines that need to be started."
        },
        "runtimeState": {
          "$ref": "#/definitions/TriggerRuntimeState",
          "description": "Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.",
          "readOnly": true
        }
      },
      "required": [
        "type"
      ]
    },
    "ActivityDependency": {
      "description": "Activity dependency information.",
      "properties": {
        "activity": {
          "description": "Activity name.",
          "type": "string"
        },
        "dependencyConditions": {
          "type": "array",
          "description": "Match-Condition for the dependency.",
          "items": {
            "type": "string",
            "enum": [
              "Succeeded",
              "Failed",
              "Skipped",
              "Completed"
            ],
            "x-ms-enum": {
              "name": "DependencyCondition",
              "modelAsString": true
            }
          }
        }
      },
      "required": [
        "activity",
        "dependencyConditions"
      ]
    },
    "ActivityPolicy": {
      "description": "Execution policy for an activity.",
      "properties": {
        "timeout": {
          "type": "object",
          "description": "Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "retry": {
          "type": "object",
          "description": "Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "retryIntervalInSeconds": {
          "type": "integer",
          "description": "Interval between each retry attempt (in seconds). The default is 30 sec.",
          "minimum": 30,
          "maximum": 86400
        }
      }
    },
    "DataLakeAnalyticsUSQLActivityTypeProperties": {
      "description": "DataLakeAnalyticsU-SQL activity properties.",
      "properties": {
        "scriptPath": {
          "type": "object",
          "description": "Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string)."
        },
        "scriptLinkedService": {
          "description": "Script linked service reference.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "degreeOfParallelism": {
          "type": "object",
          "description": "The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1."
        },
        "priority": {
          "type": "object",
          "description": "Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1."
        },
        "parameters": {
          "description": "Parameters for U-SQL job request.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "runtimeVersion": {
          "type": "object",
          "description": "Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string)."
        },
        "compilationMode": {
          "type": "object",
          "description": "Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "scriptPath",
        "scriptLinkedService"
      ]
    },
    "DataLakeAnalyticsUSQLActivity": {
      "description": "Data Lake Analytics U-SQL activity.",
      "x-ms-discriminator-value": "DataLakeAnalyticsU-SQL",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Data Lake Analytics U-SQL activity properties.",
          "$ref": "#/definitions/DataLakeAnalyticsUSQLActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureMLUpdateResourceActivityTypeProperties": {
      "description": "Azure ML Update Resource activity properties.",
      "properties": {
        "trainedModelName": {
          "type": "object",
          "description": "Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string)."
        },
        "trainedModelLinkedServiceName": {
          "description": "Name of Azure Storage linked service holding the .ilearner file that will be uploaded by the update operation.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "trainedModelFilePath": {
          "type": "object",
          "description": "The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "trainedModelName",
        "trainedModelLinkedServiceName",
        "trainedModelFilePath"
      ]
    },
    "AzureMLUpdateResourceActivity": {
      "description": "Azure ML Update Resource management activity.",
      "x-ms-discriminator-value": "AzureMLUpdateResource",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Azure ML Update Resource management activity properties.",
          "$ref": "#/definitions/AzureMLUpdateResourceActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureMLWebServiceFile": {
      "description": "Azure ML WebService Input/Output file",
      "type": "object",
      "properties": {
        "filePath": {
          "type": "object",
          "description": "The relative file path, including container name, in the Azure Blob Storage specified by the LinkedService. Type: string (or Expression with resultType string)."
        },
        "linkedServiceName": {
          "description": "Reference to an Azure Storage LinkedService, where Azure ML WebService Input/Output file located.",
          "$ref": "#/definitions/LinkedServiceReference"
        }
      },
      "required": [
        "linkedServiceName",
        "filePath"
      ]
    },
    "AzureMLBatchExecutionActivityTypeProperties": {
      "description": "Azure ML Batch Execution activity properties.",
      "properties": {
        "globalParameters": {
          "description": "Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "webServiceOutputs": {
          "description": "Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AzureMLWebServiceFile"
          }
        },
        "webServiceInputs": {
          "description": "Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AzureMLWebServiceFile"
          }
        }
      }
    },
    "AzureMLBatchExecutionActivity": {
      "description": "Azure ML Batch Execution activity.",
      "x-ms-discriminator-value": "AzureMLBatchExecution",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Azure ML Batch Execution activity properties.",
          "$ref": "#/definitions/AzureMLBatchExecutionActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "GetMetadataActivityTypeProperties": {
      "description": "GetMetadata activity properties.",
      "properties": {
        "dataset": {
          "description": "GetMetadata activity dataset reference.",
          "$ref": "#/definitions/DatasetReference"
        },
        "fieldList": {
          "description": "Fields of metadata to get from dataset.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        }
      },
      "required": [
        "dataset"
      ]
    },
    "GetMetadataActivity": {
      "x-ms-discriminator-value": "GetMetadata",
      "description": "Activity to get metadata of dataset",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "GetMetadata activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GetMetadataActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "WebActivityAuthentication": {
      "description": "Web activity authentication properties.",
      "properties": {
        "type": {
          "description": "Web activity authentication (Basic/ClientCertificate)",
          "type": "string"
        },
        "pfx": {
          "description": "Base64-encoded contents of a PFX file.",
          "$ref": "#/definitions/SecureString"
        },
        "username": {
          "description": "Web activity authentication user name for basic authentication.",
          "type": "string"
        },
        "password": {
          "description": "Password for the PFX file or basic authentication.",
          "$ref": "#/definitions/SecureString"
        }
      },
      "required": [
        "type"
      ]
    },
    "WebActivityMethod": {
      "description": "The list of HTTP methods supported by a WebActivity.",
      "type": "string",
      "enum": [
        "GET",
        "POST",
        "PUT"
      ],
      "x-ms-enum": {
        "name": "WebActivityMethod",
        "modelAsString": true
      }
    },
    "WebActivityTypeProperties": {
      "description": "Web activity type properties.",
      "properties": {
        "method": {
          "description": "Rest API method for target endpoint.",
          "$ref": "#/definitions/WebActivityMethod"
        },
        "url": {
          "type": "object",
          "description": "Web activity target endpoint and path. Type: string (or Expression with resultType string)."
        },
        "headers": {
          "type": "object",
          "description": "Represents the headers that will be sent to the request. For example, to set the language and type on a request: \"headers\" : { \"Accept-Language\": \"en-us\", \"Content-Type\": \"application/json\" }. Type: string (or Expression with resultType string)."
        },
        "body": {
          "type": "object",
          "description": "Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string)."
        },
        "authentication": {
          "description": "Authentication method used for calling the endpoint.",
          "$ref": "#/definitions/WebActivityAuthentication"
        },
        "datasets": {
          "type": "array",
          "description": "List of datasets passed to web endpoint.",
          "items": {
            "$ref": "#/definitions/DatasetReference"
          }
        },
        "linkedServices": {
          "type": "array",
          "description": "List of linked services passed to web endpoint.",
          "items": {
            "$ref": "#/definitions/LinkedServiceReference"
          }
        }
      },
      "required": [
        "method",
        "url"
      ]
    },
    "WebActivity": {
      "x-ms-discriminator-value": "WebActivity",
      "description": "Web activity.",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Web activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WebActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "RedshiftUnloadSettings": {
      "description": "The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.",
      "type": "object",
      "properties": {
        "s3LinkedServiceName": {
          "description": "The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "bucketName": {
          "type": "object",
          "description": "The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "s3LinkedServiceName",
        "bucketName"
      ]
    },
    "AmazonRedshiftSource": {
      "description": "A copy activity source for Amazon Redshift Source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "redshiftUnloadSettings": {
          "description": "The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.",
          "$ref": "#/definitions/RedshiftUnloadSettings"
        }
      }
    },
    "HttpSource": {
      "description": "A copy activity source for an HTTP file.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "httpRequestTimeout": {
          "type": "object",
          "description": "Specifies the timeout for a HTTP client to get HTTP response from HTTP server. The default value is equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      }
    },
    "AzureDataLakeStoreSource": {
      "description": "A copy activity Azure Data Lake source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "MongoDbSource": {
      "description": "A copy activity source for a MongoDB database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "description": "Database query. Should be a SQL-92 query expression. Type: string (or Expression with resultType string)."
        }
      }
    },
    "CassandraSource": {
      "description": "A copy activity source for a Cassandra database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "description": "Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string)."
        },
        "consistencyLevel": {
          "description": "The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive.",
          "type": "string",
          "enum": [
            "ALL",
            "EACH_QUORUM",
            "QUORUM",
            "LOCAL_QUORUM",
            "ONE",
            "TWO",
            "THREE",
            "LOCAL_ONE",
            "SERIAL",
            "LOCAL_SERIAL"
          ],
          "x-ms-enum": {
            "name": "CassandraSourceReadConsistencyLevels",
            "modelAsString": true
          }
        }
      }
    },
    "WebSource": {
      "description": "A copy activity source for web page table.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {}
    },
    "OracleSource": {
      "description": "A copy activity Oracle source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "oracleReaderQuery": {
          "type": "object",
          "description": "Oracle reader query. Type: string (or Expression with resultType string)."
        },
        "queryTimeout": {
          "type": "object",
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      }
    },
    "DistcpSettings": {
      "description": "Distcp settings.",
      "type": "object",
      "properties": {
        "resourceManagerEndpoint": {
          "type": "object",
          "description": "Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string)."
        },
        "tempScriptPath": {
          "type": "object",
          "description": "Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string)."
        },
        "distcpOptions": {
          "type": "object",
          "description": "Specifies the Distcp options. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "resourceManagerEndpoint",
        "tempScriptPath"
      ]
    },
    "HdfsSource": {
      "description": "A copy activity source for HDFS source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "distcpSettings": {
          "description": "Specifies Distcp-related settings.",
          "$ref": "#/definitions/DistcpSettings"
        }
      }
    },
    "FileSystemSource": {
      "description": "A copy activity file system source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "SqlDWSource": {
      "description": "A copy activity SQL Data Warehouse source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "sqlReaderQuery": {
          "type": "object",
          "description": "SQL Data Warehouse reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "description": "Name of the stored procedure for a SQL Data Warehouse source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "type": "object",
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\". Type: object (or Expression with resultType object), itemType: StoredProcedureParameter."
        }
      }
    },
    "StoredProcedureParameterType": {
      "description": "Stored procedure parameter type.",
      "type": "string",
      "enum": [
        "String",
        "Int",
        "Decimal",
        "Guid",
        "Boolean",
        "Date"
      ],
      "x-ms-enum": {
        "name": "StoredProcedureParameterType",
        "modelAsString": true
      }
    },
    "StoredProcedureParameter": {
      "description": "SQL stored procedure parameter.",
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "description": "Stored procedure parameter value. Type: string (or Expression with resultType string)."
        },
        "type": {
          "description": "Stored procedure parameter type.",
          "$ref": "#/definitions/StoredProcedureParameterType"
        }
      },
      "required": [
        "value"
      ]
    },
    "SqlSource": {
      "description": "A copy activity SQL source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "sqlReaderQuery": {
          "type": "object",
          "description": "SQL reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "description": "Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\".",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StoredProcedureParameter"
          }
        }
      }
    },
    "RelationalSource": {
      "description": "A copy activity source for various relational databases.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "description": "Database query. Type: string (or Expression with resultType string)."
        }
      }
    },
    "DynamicsSource": {
      "description": "A copy activity Dynamics entity source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "description": "FetchXML is a proprietary query language that is used in Microsoft Dynamics (online & on-premises). Type: string (or Expression with resultType string)."
        }
      }
    },
    "DocumentDbCollectionSource": {
      "description": "A copy activity Document Database Collection source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "description": "Documents query. Type: string (or Expression with resultType string)."
        },
        "nestingSeparator": {
          "type": "object",
          "description": "Nested properties separator. Type: string (or Expression with resultType string)."
        }
      }
    },
    "BlobSource": {
      "description": "A copy activity Azure Blob source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "treatEmptyAsNull": {
          "type": "object",
          "description": "Treat empty as null. Type: boolean (or Expression with resultType boolean)."
        },
        "skipHeaderLineCount": {
          "type": "object",
          "description": "Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer)."
        },
        "recursive": {
          "type": "object",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "AzureTableSource": {
      "description": "A copy activity Azure Table source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "azureTableSourceQuery": {
          "type": "object",
          "description": "Azure Table source query. Type: string (or Expression with resultType string)."
        },
        "azureTableSourceIgnoreTableNotFound": {
          "type": "object",
          "description": "Azure Table source ignore table not found. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "CopySource": {
      "discriminator": "type",
      "description": "A copy activity source.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Copy source type."
        },
        "sourceRetryCount": {
          "type": "object",
          "description": "Source retry count. Type: integer (or Expression with resultType integer)."
        },
        "sourceRetryWait": {
          "type": "object",
          "description": "Source retry wait. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      },
      "required": [
        "type"
      ]
    },
    "LookupActivityTypeProperties": {
      "description": "Lookup activity properties.",
      "properties": {
        "source": {
          "description": "Dataset-specific source properties, same as copy activity source.",
          "$ref": "#/definitions/CopySource"
        },
        "dataset": {
          "description": "Lookup activity dataset reference.",
          "$ref": "#/definitions/DatasetReference"
        },
        "firstRowOnly": {
          "type": "object",
          "description": "Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "source",
        "dataset"
      ]
    },
    "LookupActivity": {
      "x-ms-discriminator-value": "Lookup",
      "description": "Lookup activity.",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Lookup activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LookupActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SqlServerStoredProcedureActivityTypeProperties": {
      "description": "SQL stored procedure activity properties.",
      "properties": {
        "storedProcedureName": {
          "type": "object",
          "description": "Stored procedure name. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\".",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StoredProcedureParameter"
          }
        }
      },
      "required": [
        "storedProcedureName"
      ]
    },
    "SqlServerStoredProcedureActivity": {
      "description": "SQL stored procedure activity type.",
      "x-ms-discriminator-value": "SqlServerStoredProcedure",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "SQL stored procedure activity properties.",
          "$ref": "#/definitions/SqlServerStoredProcedureActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties",
        "linkedServiceName"
      ]
    },
    "CustomActivityReferenceObject": {
      "description": "Reference objects for custom activity",
      "properties": {
        "linkedServices": {
          "description": "Linked service references.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedServiceReference"
          }
        },
        "datasets": {
          "description": "Dataset references.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatasetReference"
          }
        }
      }
    },
    "CustomActivityTypeProperties": {
      "description": "Custom activity properties.",
      "properties": {
        "command": {
          "type": "object",
          "description": "Command for custom activity Type: string (or Expression with resultType string)."
        },
        "resourceLinkedService": {
          "description": "Resource linked service reference.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "folderPath": {
          "type": "object",
          "description": "Folder path for resource files Type: string (or Expression with resultType string)."
        },
        "referenceObjects": {
          "description": "Reference objects",
          "$ref": "#/definitions/CustomActivityReferenceObject"
        },
        "extendedProperties": {
          "description": "User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        }
      },
      "required": [
        "command"
      ]
    },
    "CustomActivity": {
      "description": "Custom activity type.",
      "x-ms-discriminator-value": "Custom",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Custom activity properties.",
          "$ref": "#/definitions/CustomActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightActivityDebugInfoOption": {
      "description": "The HDInsightActivityDebugInfoOption settings to use.",
      "type": "string",
      "enum": [
        "None",
        "Always",
        "Failure"
      ],
      "x-ms-enum": {
        "name": "HDInsightActivityDebugInfoOption",
        "modelAsString": true
      }
    },
    "HDInsightSparkActivityTypeProperties": {
      "description": "HDInsight spark activity properties.",
      "properties": {
        "rootPath": {
          "type": "object",
          "description": "The root path in 'sparkJobLinkedService' for all the job’s files. Type: string (or Expression with resultType string)."
        },
        "entryFilePath": {
          "type": "object",
          "description": "The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string)."
        },
        "arguments": {
          "description": "The user-specified arguments to HDInsightSparkActivity.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "getDebugInfo": {
          "$ref": "#/definitions/HDInsightActivityDebugInfoOption",
          "description": "Debug info option."
        },
        "sparkJobLinkedService": {
          "description": "The storage linked service for uploading the entry file and dependencies, and for receiving logs.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "className": {
          "description": "The application's Java/Spark main class.",
          "type": "string"
        },
        "proxyUser": {
          "type": "object",
          "description": "The user to impersonate that will execute the job. Type: string (or Expression with resultType string)."
        },
        "sparkConfig": {
          "description": "Spark configuration property.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        }
      },
      "required": [
        "rootPath",
        "entryFilePath"
      ]
    },
    "HDInsightSparkActivity": {
      "description": "HDInsight Spark activity.",
      "x-ms-discriminator-value": "HDInsightSpark",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "HDInsight spark activity properties.",
          "$ref": "#/definitions/HDInsightSparkActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightStreamingActivityTypeProperties": {
      "description": "HDInsight streaming activity properties.",
      "properties": {
        "storageLinkedServices": {
          "description": "Storage linked service references.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedServiceReference"
          }
        },
        "arguments": {
          "description": "User specified arguments to HDInsightActivity.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "getDebugInfo": {
          "$ref": "#/definitions/HDInsightActivityDebugInfoOption",
          "description": "Debug info option."
        },
        "mapper": {
          "type": "object",
          "description": "Mapper executable name. Type: string (or Expression with resultType string)."
        },
        "reducer": {
          "type": "object",
          "description": "Reducer executable name. Type: string (or Expression with resultType string)."
        },
        "input": {
          "type": "object",
          "description": "Input blob path. Type: string (or Expression with resultType string)."
        },
        "output": {
          "type": "object",
          "description": "Output blob path. Type: string (or Expression with resultType string)."
        },
        "filePaths": {
          "description": "Paths to streaming job files. Can be directories.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "fileLinkedService": {
          "description": "Linked service reference where the files are located.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "combiner": {
          "type": "object",
          "description": "Combiner executable name. Type: string (or Expression with resultType string)."
        },
        "commandEnvironment": {
          "description": "Command line environment values.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "defines": {
          "description": "Allows user to specify defines for streaming job request.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        }
      },
      "required": [
        "mapper",
        "reducer",
        "input",
        "output",
        "filePaths"
      ]
    },
    "HDInsightStreamingActivity": {
      "description": "HDInsight streaming activity type.",
      "x-ms-discriminator-value": "HDInsightStreaming",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "HDInsight streaming activity properties.",
          "$ref": "#/definitions/HDInsightStreamingActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightMapReduceActivityTypeProperties": {
      "description": "HDInsight MapReduce activity properties.",
      "properties": {
        "storageLinkedServices": {
          "description": "Storage linked service references.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedServiceReference"
          }
        },
        "arguments": {
          "description": "User specified arguments to HDInsightActivity.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "getDebugInfo": {
          "$ref": "#/definitions/HDInsightActivityDebugInfoOption",
          "description": "Debug info option."
        },
        "className": {
          "type": "object",
          "description": "Class name. Type: string (or Expression with resultType string)."
        },
        "jarFilePath": {
          "type": "object",
          "description": "Jar path. Type: string (or Expression with resultType string)."
        },
        "jarLinkedService": {
          "description": "Jar linked service reference.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "jarLibs": {
          "description": "Jar libs.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "defines": {
          "description": "Allows user to specify defines for the MapReduce job request.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        }
      },
      "required": [
        "className",
        "jarFilePath"
      ]
    },
    "HDInsightMapReduceActivity": {
      "description": "HDInsight MapReduce activity type.",
      "x-ms-discriminator-value": "HDInsightMapReduce",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "HDInsight MapReduce activity properties.",
          "$ref": "#/definitions/HDInsightMapReduceActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightPigActivityTypeProperties": {
      "description": "HDInsight Pig activity properties.",
      "properties": {
        "storageLinkedServices": {
          "description": "Storage linked service references.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedServiceReference"
          }
        },
        "arguments": {
          "description": "User specified arguments to HDInsightActivity.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "getDebugInfo": {
          "$ref": "#/definitions/HDInsightActivityDebugInfoOption",
          "description": "Debug info option."
        },
        "scriptPath": {
          "type": "object",
          "description": "Script path. Type: string (or Expression with resultType string)."
        },
        "scriptLinkedService": {
          "description": "Script linked service reference.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "defines": {
          "description": "Allows user to specify defines for Pig job request.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        }
      }
    },
    "HDInsightPigActivity": {
      "description": "HDInsight Pig activity type.",
      "x-ms-discriminator-value": "HDInsightPig",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "HDInsight Pig activity properties.",
          "$ref": "#/definitions/HDInsightPigActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightHiveActivityTypeProperties": {
      "description": "HDInsight Hive activity properties.",
      "properties": {
        "storageLinkedServices": {
          "description": "Storage linked service references.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedServiceReference"
          }
        },
        "arguments": {
          "description": "User specified arguments to HDInsightActivity.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "getDebugInfo": {
          "$ref": "#/definitions/HDInsightActivityDebugInfoOption",
          "description": "Debug info option."
        },
        "scriptPath": {
          "type": "object",
          "description": "Script path. Type: string (or Expression with resultType string)."
        },
        "scriptLinkedService": {
          "description": "Script linked service reference.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "defines": {
          "description": "Allows user to specify defines for Hive job request.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        }
      }
    },
    "HDInsightHiveActivity": {
      "description": "HDInsight Hive activity type.",
      "x-ms-discriminator-value": "HDInsightHive",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "HDInsight Hive activity properties.",
          "$ref": "#/definitions/HDInsightHiveActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "RedirectIncompatibleRowSettings": {
      "description": "Redirect incompatible row settings",
      "type": "object",
      "properties": {
        "linkedServiceName": {
          "type": "object",
          "description": "Name of the Azure Storage or Storage SAS linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string)."
        },
        "path": {
          "type": "object",
          "description": "The path to storage for storing the redirect incompatible row data Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "linkedServiceName"
      ]
    },
    "StagingSettings": {
      "description": "Staging settings.",
      "type": "object",
      "properties": {
        "linkedServiceName": {
          "description": "Staging linked service reference.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "path": {
          "type": "object",
          "description": "The path to storage for storing the interim data. Type: string (or Expression with resultType string)."
        },
        "enableCompression": {
          "type": "object",
          "description": "Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "linkedServiceName"
      ]
    },
    "TabularTranslator": {
      "description": "A copy activity tabular translator.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopyTranslator"
        }
      ],
      "properties": {
        "columnMappings": {
          "type": "object",
          "description": "Column mappings. Type: string (or Expression with resultType string)."
        }
      }
    },
    "CopyTranslator": {
      "discriminator": "type",
      "description": "A copy activity translator.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Copy translator type."
        }
      },
      "required": [
        "type"
      ]
    },
    "OdbcSink": {
      "description": "A copy activity ODBC sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "preCopyScript": {
          "type": "object",
          "description": "A query to execute before starting the copy. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzureSearchIndexSink": {
      "description": "A copy activity Azure Search Index sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "description": "Specify the write behavior when upserting documents into Azure Search Index.",
          "type": "string",
          "enum": [
            "Merge",
            "Upload"
          ],
          "x-ms-enum": {
            "name": "AzureSearchIndexWriteBehaviorType",
            "modelAsString": true
          }
        }
      }
    },
    "CopyBehaviorType": {
      "description": "All available types of copy behavior.",
      "type": "string",
      "enum": [
        "PreserveHierarchy",
        "FlattenHierarchy",
        "MergeFiles"
      ],
      "x-ms-enum": {
        "name": "CopyBehaviorType",
        "modelAsString": true
      }
    },
    "AzureDataLakeStoreSink": {
      "description": "A copy activity Azure Data Lake Store sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "copyBehavior": {
          "description": "The type of copy behavior for copy sink.",
          "$ref": "#/definitions/CopyBehaviorType"
        }
      }
    },
    "OracleSink": {
      "description": "A copy activity Oracle sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "preCopyScript": {
          "type": "object",
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        }
      }
    },
    "PolybaseSettingsRejectType": {
      "description": "Indicates whether the RejectValue property is specified as a literal value or a percentage.",
      "type": "string",
      "enum": [
        "value",
        "percentage"
      ],
      "x-ms-enum": {
        "name": "PolybaseSettingsRejectType",
        "modelAsString": true
      }
    },
    "PolybaseSettings": {
      "description": "PolyBase settings.",
      "type": "object",
      "properties": {
        "rejectType": {
          "$ref": "#/definitions/PolybaseSettingsRejectType",
          "description": "Reject type."
        },
        "rejectValue": {
          "type": "object",
          "description": "Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0."
        },
        "rejectSampleValue": {
          "type": "object",
          "description": "Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "useTypeDefault": {
          "type": "object",
          "description": "Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "SqlDWSink": {
      "description": "A copy activity SQL Data Warehouse sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "preCopyScript": {
          "type": "object",
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "allowPolyBase": {
          "type": "object",
          "description": "Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean)."
        },
        "polyBaseSettings": {
          "description": "Specifies PolyBase-related settings when allowPolyBase is true.",
          "$ref": "#/definitions/PolybaseSettings"
        }
      }
    },
    "SqlSink": {
      "description": "A copy activity SQL sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "sqlWriterStoredProcedureName": {
          "type": "object",
          "description": "SQL writer stored procedure name. Type: string (or Expression with resultType string)."
        },
        "sqlWriterTableType": {
          "type": "object",
          "description": "SQL writer table type. Type: string (or Expression with resultType string)."
        },
        "preCopyScript": {
          "type": "object",
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "description": "SQL stored procedure parameters.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StoredProcedureParameter"
          }
        }
      }
    },
    "DocumentDbCollectionSink": {
      "description": "A copy activity Document Database Collection sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "nestingSeparator": {
          "type": "object",
          "description": "Nested properties separator. Default is . (dot). Type: string (or Expression with resultType string)."
        }
      }
    },
    "FileSystemSink": {
      "description": "A copy activity file system sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "copyBehavior": {
          "description": "The type of copy behavior for copy sink.",
          "$ref": "#/definitions/CopyBehaviorType"
        }
      }
    },
    "BlobSink": {
      "description": "A copy activity Azure Blob sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "blobWriterOverwriteFiles": {
          "type": "object",
          "description": "Blob writer overwrite files. Type: boolean (or Expression with resultType boolean)."
        },
        "blobWriterDateTimeFormat": {
          "type": "object",
          "description": "Blob writer date time format. Type: string (or Expression with resultType string)."
        },
        "blobWriterAddHeader": {
          "type": "object",
          "description": "Blob writer add header. Type: boolean (or Expression with resultType boolean)."
        },
        "copyBehavior": {
          "description": "The type of copy behavior for copy sink.",
          "$ref": "#/definitions/CopyBehaviorType"
        }
      }
    },
    "AzureTableSink": {
      "description": "A copy activity Azure Table sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "azureTableDefaultPartitionKeyValue": {
          "type": "object",
          "description": "Azure Table default partition key value. Type: string (or Expression with resultType string)."
        },
        "azureTablePartitionKeyName": {
          "type": "object",
          "description": "Azure Table partition key name. Type: string (or Expression with resultType string)."
        },
        "azureTableRowKeyName": {
          "type": "object",
          "description": "Azure Table row key name. Type: string (or Expression with resultType string)."
        },
        "azureTableInsertType": {
          "type": "object",
          "description": "Azure Table insert type. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzureQueueSink": {
      "description": "A copy activity Azure Queue sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {}
    },
    "CopySink": {
      "discriminator": "type",
      "description": "A copy activity sink.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Copy sink type."
        },
        "writeBatchSize": {
          "type": "object",
          "description": "Write batch size. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "writeBatchTimeout": {
          "type": "object",
          "description": "Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "sinkRetryCount": {
          "type": "object",
          "description": "Sink retry count. Type: integer (or Expression with resultType integer)."
        },
        "sinkRetryWait": {
          "type": "object",
          "description": "Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      },
      "required": [
        "type"
      ]
    },
    "CopyActivityTypeProperties": {
      "description": "Copy activity properties.",
      "properties": {
        "source": {
          "description": "Copy activity source.",
          "$ref": "#/definitions/CopySource"
        },
        "sink": {
          "description": "Copy activity sink.",
          "$ref": "#/definitions/CopySink"
        },
        "translator": {
          "description": "Copy activity translator. If not specificed, tabular translator is used.",
          "$ref": "#/definitions/CopyTranslator"
        },
        "enableStaging": {
          "type": "object",
          "description": "Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "stagingSettings": {
          "description": "Specifies interim staging settings when EnableStaging is true.",
          "$ref": "#/definitions/StagingSettings"
        },
        "parallelCopies": {
          "type": "object",
          "description": "Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "cloudDataMovementUnits": {
          "type": "object",
          "description": "Maximum number of cloud data movement units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "enableSkipIncompatibleRow": {
          "type": "object",
          "description": "Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "redirectIncompatibleRowSettings": {
          "description": "Redirect incompatible row settings when EnableSkipIncompatibleRow is true.",
          "$ref": "#/definitions/RedirectIncompatibleRowSettings"
        }
      },
      "required": [
        "source",
        "sink"
      ]
    },
    "CopyActivity": {
      "x-ms-discriminator-value": "Copy",
      "description": "Copy activity.",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Copy activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CopyActivityTypeProperties"
        },
        "inputs": {
          "type": "array",
          "description": "List of inputs for the activity.",
          "items": {
            "$ref": "#/definitions/DatasetReference"
          }
        },
        "outputs": {
          "type": "array",
          "description": "List of outputs for the activity.",
          "items": {
            "$ref": "#/definitions/DatasetReference"
          }
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ExecutionActivity": {
      "x-ms-discriminator-value": "Execution",
      "description": "Base class for all execution activities.",
      "allOf": [
        {
          "$ref": "#/definitions/Activity"
        }
      ],
      "properties": {
        "linkedServiceName": {
          "description": "Linked service reference.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "policy": {
          "$ref": "#/definitions/ActivityPolicy",
          "description": "Activity policy."
        }
      }
    },
    "UntilActivityTypeProperties": {
      "description": "Until activity properties.",
      "properties": {
        "expression": {
          "description": "An expression that would evaluate to Boolean. The loop will continue until this expression evaluates to true",
          "$ref": "#/definitions/Expression"
        },
        "timeout": {
          "type": "object",
          "description": "Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "activities": {
          "type": "array",
          "description": "List of activities to execute.",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        }
      },
      "required": [
        "expression",
        "activities"
      ]
    },
    "UntilActivity": {
      "x-ms-discriminator-value": "Until",
      "description": "This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Until activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UntilActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "WaitActivityTypeProperties": {
      "description": "Wait activity properties.",
      "properties": {
        "waitTimeInSeconds": {
          "description": "Duration in seconds.",
          "type": "integer"
        }
      },
      "required": [
        "waitTimeInSeconds"
      ]
    },
    "WaitActivity": {
      "x-ms-discriminator-value": "Wait",
      "description": "This activity suspends pipeline execution for the specified interval.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Wait activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WaitActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ForEachActivityTypeProperties": {
      "description": "ForEach activity properties.",
      "properties": {
        "isSequential": {
          "description": "Should the loop be executed in sequence or in parallel (max 20)",
          "type": "boolean"
        },
        "items": {
          "description": "Collection to iterate.",
          "$ref": "#/definitions/Expression"
        },
        "activities": {
          "type": "array",
          "description": "List of activities to execute .",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        }
      },
      "required": [
        "items",
        "activities"
      ]
    },
    "ForEachActivity": {
      "x-ms-discriminator-value": "ForEach",
      "description": "This activity is used for iterating over a collection and execute given activities.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "ForEach activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ForEachActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "IfConditionActivityTypeProperties": {
      "description": "IfCondition activity properties.",
      "properties": {
        "expression": {
          "description": "An expression that would evaluate to Boolean. This is used to determine the block of activities (ifTrueActivities or ifFalseActivities) that will be executed.",
          "$ref": "#/definitions/Expression"
        },
        "ifTrueActivities": {
          "type": "array",
          "description": "List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action.",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        },
        "ifFalseActivities": {
          "type": "array",
          "description": "List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action.",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        }
      },
      "required": [
        "expression"
      ]
    },
    "IfConditionActivity": {
      "x-ms-discriminator-value": "IfCondition",
      "description": "This activity evaluates a boolean expression and executes either the activities under the ifTrueActivities property or the ifFalseActivities property depending on the result of the expression.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "IfCondition activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IfConditionActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ExecutePipelineActivityTypeProperties": {
      "description": "Execute pipeline activity properties.",
      "properties": {
        "pipeline": {
          "description": "Pipeline reference.",
          "$ref": "#/definitions/PipelineReference"
        },
        "parameters": {
          "description": "Pipeline parameters.",
          "$ref": "#/definitions/ParameterValueSpecification"
        },
        "waitOnCompletion": {
          "description": "Defines whether activity execution will wait for the dependent pipeline execution to finish. Default is false.",
          "type": "boolean"
        }
      },
      "required": [
        "pipeline"
      ]
    },
    "ExecutePipelineActivity": {
      "x-ms-discriminator-value": "ExecutePipeline",
      "description": "Execute pipeline activity.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Execute pipeline activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExecutePipelineActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ControlActivity": {
      "x-ms-discriminator-value": "Container",
      "description": "Base class for all control activities like IfCondition, ForEach , Until.",
      "allOf": [
        {
          "$ref": "#/definitions/Activity"
        }
      ],
      "properties": {}
    },
    "Activity": {
      "discriminator": "type",
      "description": "A pipeline activity.",
      "properties": {
        "name": {
          "description": "Activity name.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Type of activity."
        },
        "description": {
          "description": "Activity description.",
          "type": "string"
        },
        "dependsOn": {
          "type": "array",
          "description": "Activity depends on condition.",
          "items": {
            "$ref": "#/definitions/ActivityDependency"
          }
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "Pipeline": {
      "description": "A data factory pipeline.",
      "properties": {
        "description": {
          "description": "The description of the pipeline.",
          "type": "string"
        },
        "activities": {
          "type": "array",
          "description": "List of activities in pipeline.",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        },
        "parameters": {
          "$ref": "#/definitions/ParameterDefinitionSpecification",
          "description": "List of parameters for pipeline."
        },
        "concurrency": {
          "type": "integer",
          "minimum": 1,
          "description": "The max number of concurrent runs for the pipeline."
        }
      }
    },
    "IntegrationRuntimeState": {
      "description": "The state of integration runtime.",
      "type": "string",
      "readOnly": true,
      "enum": [
        "Initial",
        "Stopped",
        "Started",
        "Starting",
        "Stopping",
        "NeedRegistration",
        "Online",
        "Limited",
        "Offline"
      ],
      "x-ms-enum": {
        "name": "IntegrationRuntimeState",
        "modelAsString": true
      }
    },
    "SelfHostedIntegrationRuntimeNode": {
      "description": "Properties of Self-hosted integration runtime node.",
      "properties": {
        "nodeName": {
          "description": "Name of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "machineName": {
          "description": "Machine name of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "hostServiceUri": {
          "description": "URI for the host machine of the integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the integration runtime node.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "NeedRegistration",
            "Online",
            "Limited",
            "Offline",
            "Upgrading",
            "Initializing",
            "InitializeFailed"
          ],
          "x-ms-enum": {
            "name": "SelfHostedIntegrationRuntimeNodeStatus",
            "modelAsString": true
          }
        },
        "capabilities": {
          "description": "The integration runtime capabilities dictionary",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "versionStatus": {
          "description": "Status of the integration runtime node version.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Version of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "registerTime": {
          "description": "The time at which the integration runtime node was registered in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastConnectTime": {
          "description": "The most recent time at which the integration runtime was connected in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "expiryTime": {
          "description": "The time at which the integration runtime will expire in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastStartTime": {
          "description": "The time the node last started up.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastStopTime": {
          "description": "The integration runtime node last stop time.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastUpdateResult": {
          "description": "The result of the last integration runtime node update.",
          "type": "string",
          "enum": [
            "Succeed",
            "Fail"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeUpdateResult",
            "modelAsString": true
          },
          "readOnly": true
        },
        "lastStartUpdateTime": {
          "description": "The last time for the integration runtime node update start.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastEndUpdateTime": {
          "description": "The last time for the integration runtime node update end.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "isActiveDispatcher": {
          "description": "Indicates whether this node is the active dispatcher for integration runtime requests.",
          "type": "boolean",
          "readOnly": true
        },
        "concurrentJobsLimit": {
          "description": "Maximum concurrent jobs on the integration runtime node.",
          "type": "integer",
          "readOnly": true
        },
        "maxConcurrentJobs": {
          "description": "The maximum concurrent jobs in this integration runtime.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SelfHostedIntegrationRuntimeStatusTypeProperties": {
      "description": "Self-hosted integration runtime status type properties.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time at which the integration runtime was created, in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "taskQueueId": {
          "description": "The task queue id of the integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "internalChannelEncryption": {
          "description": "It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist).",
          "type": "string",
          "readOnly": true,
          "enum": [
            "NotSet",
            "SslEncrypted",
            "NotEncrypted"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeInternalChannelEncryptionMode",
            "modelAsString": true
          }
        },
        "version": {
          "description": "Version of the integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "nodes": {
          "description": "The list of nodes for this integration runtime.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelfHostedIntegrationRuntimeNode"
          }
        },
        "scheduledUpdateDate": {
          "description": "The date at which the integration runtime will be scheduled to update, in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updateDelayOffset": {
          "description": "The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours",
          "type": "string",
          "readOnly": true
        },
        "localTimeZoneOffset": {
          "description": "The local time zone offset in hours.",
          "type": "string",
          "readOnly": true
        },
        "capabilities": {
          "description": "Object with additional information about integration runtime capabilities.",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "serviceUrls": {
          "description": "The URLs for the services used in integration runtime backend service.",
          "type": "array",
          "items": {
            "description": "The service URL",
            "type": "string"
          },
          "readOnly": true
        },
        "autoUpdate": {
          "description": "Whether Self-hosted integration runtime auto update has been turned on.",
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeAutoUpdate",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "SelfHostedIntegrationRuntimeStatus": {
      "x-ms-discriminator-value": "SelfHosted",
      "description": "Self-hosted integration runtime status.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IntegrationRuntimeStatus"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Self-hosted integration runtime status type properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SelfHostedIntegrationRuntimeStatusTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ManagedIntegrationRuntimeOperationResult": {
      "description": "Properties of managed integration runtime operation result.",
      "properties": {
        "type": {
          "description": "The operation type. Could be start or stop.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "description": "The start time of the operation.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "result": {
          "description": "The operation result.",
          "type": "string",
          "readOnly": true
        },
        "errorCode": {
          "description": "The error code.",
          "type": "string",
          "readOnly": true
        },
        "parameters": {
          "description": "Managed integration runtime error parameters.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "Error message parameters."
          },
          "readOnly": true
        }
      }
    },
    "ManagedIntegrationRuntimeError": {
      "description": "Error definition for managed integration runtime.",
      "properties": {
        "time": {
          "description": "The time when the error occurred.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "code": {
          "description": "Error code.",
          "type": "string",
          "readOnly": true
        },
        "parameters": {
          "description": "Managed integration runtime error parameters.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "Error message parameters."
          },
          "readOnly": true
        },
        "message": {
          "description": "Error message.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ManagedIntegrationRuntimeNode": {
      "description": "Properties of integration runtime node.",
      "properties": {
        "nodeId": {
          "description": "The managed integration runtime node id.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The managed integration runtime node status.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Starting",
            "Available",
            "Recycling",
            "Unavailable"
          ],
          "x-ms-enum": {
            "name": "ManagedIntegrationRuntimeNodeStatus",
            "modelAsString": true
          }
        },
        "errors": {
          "description": "The errors that occurred on this integration runtime node.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedIntegrationRuntimeError"
          }
        }
      }
    },
    "ManagedIntegrationRuntimeStatusTypeProperties": {
      "description": "Managed integration runtime status type properties.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time at which the integration runtime was created, in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "nodes": {
          "description": "The list of nodes for managed integration runtime.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedIntegrationRuntimeNode"
          },
          "readOnly": true
        },
        "otherErrors": {
          "description": "The errors that occurred on this integration runtime.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedIntegrationRuntimeError"
          },
          "readOnly": true
        },
        "lastOperation": {
          "description": "The last operation result that occurred on this integration runtime.",
          "$ref": "#/definitions/ManagedIntegrationRuntimeOperationResult",
          "readOnly": true
        }
      }
    },
    "ManagedIntegrationRuntimeStatus": {
      "x-ms-discriminator-value": "Managed",
      "description": "Managed integration runtime status.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IntegrationRuntimeStatus"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Managed integration runtime status type properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ManagedIntegrationRuntimeStatusTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "IntegrationRuntimeStatus": {
      "description": "Integration runtime status.",
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "description": "Type of integration runtime.",
          "type": "string"
        },
        "state": {
          "description": "The state of integration runtime.",
          "$ref": "#/definitions/IntegrationRuntimeState",
          "readOnly": true
        }
      }
    },
    "SelfHostedIntegrationRuntime": {
      "x-ms-discriminator-value": "SelfHosted",
      "description": "Self-hosted integration runtime.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IntegrationRuntime"
        }
      ]
    },
    "IntegrationRuntimeSsisCatalogInfo": {
      "description": "Catalog information for managed dedicated integration runtime.",
      "type": "object",
      "properties": {
        "catalogServerEndpoint": {
          "description": "The catalog database server URL.",
          "type": "string"
        },
        "catalogAdminUserName": {
          "description": "The administrator user name of catalog database.",
          "type": "string"
        },
        "catalogAdminPassword": {
          "description": "The password of the administrator user account of the catalog database.",
          "$ref": "#/definitions/SecureString"
        },
        "catalogPricingTier": {
          "description": "The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/",
          "type": "string",
          "enum": [
            "Basic",
            "Standard",
            "Premium",
            "PremiumRS"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeSsisCatalogPricingTier",
            "modelAsString": true
          }
        }
      }
    },
    "IntegrationRuntimeSsisProperties": {
      "description": "SSIS properties for managed integration runtime.",
      "type": "object",
      "properties": {
        "catalogInfo": {
          "description": "Catalog information for managed dedicated integration runtime.",
          "$ref": "#/definitions/IntegrationRuntimeSsisCatalogInfo"
        }
      }
    },
    "IntegrationRuntimeVNetProperties": {
      "description": "VNet properties for managed integration runtime.",
      "type": "object",
      "properties": {
        "vNetId": {
          "description": "The ID of the VNet that this integration runtime will join.",
          "type": "string"
        },
        "subnet": {
          "description": "The name of the subnet this integration runtime will join.",
          "type": "string"
        }
      }
    },
    "IntegrationRuntimeComputeProperties": {
      "description": "The compute resource properties for managed integration runtime.",
      "type": "object",
      "properties": {
        "location": {
          "description": "The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities",
          "type": "string"
        },
        "nodeSize": {
          "description": "The node size requirement to managed integration runtime.",
          "type": "string"
        },
        "numberOfNodes": {
          "description": "The required number of nodes for managed integration runtime.",
          "type": "integer",
          "minimum": 1
        },
        "maxParallelExecutionsPerNode": {
          "description": "Maximum parallel executions count per node for managed integration runtime.",
          "type": "integer",
          "minimum": 1,
          "maximum": 8
        },
        "vNetProperties": {
          "description": "VNet properties for managed integration runtime.",
          "$ref": "#/definitions/IntegrationRuntimeVNetProperties"
        }
      }
    },
    "ManagedIntegrationRuntimeTypeProperties": {
      "description": "Managed integration runtime type properties.",
      "type": "object",
      "properties": {
        "computeProperties": {
          "description": "The compute resource for managed integration runtime.",
          "$ref": "#/definitions/IntegrationRuntimeComputeProperties"
        },
        "ssisProperties": {
          "description": "SSIS properties for managed integration runtime.",
          "$ref": "#/definitions/IntegrationRuntimeSsisProperties"
        }
      }
    },
    "ManagedIntegrationRuntime": {
      "x-ms-discriminator-value": "Managed",
      "description": "Managed integration runtime, including managed elastic and managed dedicated integration runtimes.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IntegrationRuntime"
        }
      ],
      "properties": {
        "state": {
          "description": "Integration runtime state, only valid for managed dedicated integration runtime.",
          "$ref": "#/definitions/IntegrationRuntimeState",
          "readOnly": true
        },
        "typeProperties": {
          "description": "Managed integration runtime properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ManagedIntegrationRuntimeTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "IntegrationRuntime": {
      "description": "Azure Data Factory nested object which serves as a compute resource for activities.",
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "description": "Type of integration runtime.",
          "type": "string"
        },
        "description": {
          "description": "Integration runtime description.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "IntegrationRuntimeNodeMonitoringData": {
      "description": "Monitoring data for integration runtime node.",
      "type": "object",
      "properties": {
        "nodeName": {
          "description": "Name of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "availableMemoryInMB": {
          "description": "Available memory (MB) on the integration runtime node.",
          "type": "integer",
          "readOnly": true
        },
        "cpuUtilization": {
          "description": "CPU percentage on the integration runtime node.",
          "type": "number",
          "readOnly": true
        },
        "concurrentJobsLimit": {
          "description": "Maximum concurrent jobs on the integration runtime node.",
          "type": "integer",
          "readOnly": true
        },
        "concurrentJobsRunning": {
          "description": "The number of jobs currently running on the integration runtime node.",
          "type": "integer",
          "readOnly": true
        },
        "maxConcurrentJobs": {
          "description": "The maximum concurrent jobs in this integration runtime.",
          "type": "integer",
          "readOnly": true
        },
        "sentBytes": {
          "description": "Sent bytes on the integration runtime node.",
          "type": "number",
          "readOnly": true
        },
        "receivedBytes": {
          "description": "Received bytes on the integration runtime node.",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "IntegrationRuntimeMonitoringData": {
      "description": "Get monitoring data response.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Integration runtime name."
        },
        "nodes": {
          "type": "array",
          "description": "Integration runtime node monitoring data.",
          "items": {
            "$ref": "#/definitions/IntegrationRuntimeNodeMonitoringData"
          }
        }
      }
    },
    "IntegrationRuntimeRemoveNodeRequest": {
      "description": "Request to remove a node.",
      "type": "object",
      "properties": {
        "nodeName": {
          "description": "The name of the node to be removed.",
          "type": "string"
        }
      }
    },
    "IntegrationRuntimeAuthKeys": {
      "description": "The integration runtime authentication keys.",
      "type": "object",
      "properties": {
        "authKey1": {
          "type": "string",
          "description": "The primary integration runtime authentication key."
        },
        "authKey2": {
          "type": "string",
          "description": "The secondary integration runtime authentication key."
        }
      }
    },
    "IntegrationRuntimeRegenerateKeyParameters": {
      "description": "Parameters to regenerate the authentication key.",
      "type": "object",
      "properties": {
        "keyName": {
          "description": "The name of the authentication key to regenerate.",
          "type": "string",
          "enum": [
            "authKey1",
            "authKey2"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeAuthKeyName",
            "modelAsString": true
          }
        }
      }
    },
    "IntegrationRuntimeConnectionInfo": {
      "description": "Connection information for encrypting the on-premises data source credentials.",
      "type": "object",
      "properties": {
        "serviceToken": {
          "description": "The token generated in service. Callers use this token to authenticate to integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "identityCertThumbprint": {
          "description": "The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation.",
          "type": "string",
          "readOnly": true
        },
        "hostServiceUri": {
          "description": "The on-premises integration runtime host URL.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "The integration runtime version.",
          "type": "string",
          "readOnly": true
        },
        "publicKey": {
          "description": "The public key for encrypting a credential when transferring the credential to the integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "isIdentityCertExprired": {
          "description": "Whether the identity certificate is expired.",
          "type": "boolean",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "description": "The subscription identifier.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "description": "The resource group name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "factoryName": {
      "name": "factoryName",
      "description": "The factory name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    },
    "linkedServiceName": {
      "name": "linkedServiceName",
      "description": "The linked service name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "datasetName": {
      "name": "datasetName",
      "description": "The dataset name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "pipelineName": {
      "name": "pipelineName",
      "description": "The pipeline name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "triggerName": {
      "name": "triggerName",
      "description": "The trigger name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "runId": {
      "name": "runId",
      "description": "The pipeline run identifier.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "referencePipelineRunId": {
      "name": "referencePipelineRunId",
      "description": "The pipeline run identifier.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "integrationRuntimeName": {
      "name": "integrationRuntimeName",
      "description": "The integration runtime name.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "api-version": {
      "name": "api-version",
      "description": "The API version.",
      "in": "query",
      "required": true,
      "type": "string"
    }
  },
  "x-internal-service-name": "Data Factory",
  "x-internal-toc-name": "Datasets",
  "x-internal-split-type": "Operation"
}