### YamlMime:RESTOperation
uid: management.azure.com.policy.policyassignments.deletebyid
name: Delete By Id
service: Policy
groupName: Policy Assignments
apiVersion: 2021-06-01
summary: "Deletes a policy assignment.  \nThis operation deletes the policy with the given ID. Policy assignment IDs have this format: '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. Valid formats for {scope} are: '/providers/Microsoft.Management/managementGroups/{managementGroup}' (management group), '/subscriptions/{subscriptionId}' (subscription), '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' (resource group), or '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}' (resource)."
consumes:
- application/json
produces:
- application/json
paths:
- content: DELETE https://management.azure.com/{policyAssignmentId}?api-version=2021-06-01
uriParameters:
- name: policyAssignmentId
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The ID of the policy assignment to delete. Use the format '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK - Returns information about the policy assignment.
  types:
  - uid: PolicyAssignment
- name: 204 No Content
  description: No Content - the policy assignment doesn't exist.
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: PolicyAssignment
  description: The policy assignment.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The ID of the policy assignment.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the policy assignment.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the policy assignment.
    types:
    - uid: string
  - name: location
    description: The location of the policy assignment. Only required when utilizing managed identity.
    types:
    - uid: string
  - name: identity
    description: The managed identity associated with the policy assignment.
    types:
    - uid: Identity
  - name: systemData
    isReadyOnly: true
    description: The system metadata relating to this resource.
    types:
    - uid: systemData
  - name: properties.displayName
    description: The display name of the policy assignment.
    types:
    - uid: string
  - name: properties.policyDefinitionId
    description: The ID of the policy definition or policy set definition being assigned.
    types:
    - uid: string
  - name: properties.scope
    isReadyOnly: true
    description: The scope for the policy assignment.
    types:
    - uid: string
  - name: properties.notScopes
    description: The policy's excluded scopes.
    types:
    - uid: string
      isArray: true
  - name: properties.parameters
    description: The parameter values for the assigned policy rule. The keys are the parameter names.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: ParameterValuesValue
  - name: properties.description
    description: This message will be part of response in case of policy violation.
    types:
    - uid: string
  - name: properties.metadata
    description: The policy assignment metadata. Metadata is an open ended object and is typically a collection of key value pairs.
    types:
    - uid: object
  - name: properties.enforcementMode
    description: The policy assignment enforcement mode. Possible values are Default and DoNotEnforce.
    types:
    - uid: enforcementMode
    defaultValue: Default
  - name: properties.nonComplianceMessages
    description: The messages that describe why a resource is non-compliant with the policy.
    types:
    - uid: NonComplianceMessage
      isArray: true
- name: CloudError
  description: An error response from a policy operation.
  kind: object
  properties:
  - name: error
    description: "Error Response  \nCommon error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)"
    types:
    - uid: ErrorResponse
- name: Identity
  description: Identity for the resource.  Policy assignments support a maximum of one identity.  That is either a system assigned identity or a single user assigned identity.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal ID of the resource identity.  This property will only be provided for a system assigned identity
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant ID of the resource identity.  This property will only be provided for a system assigned identity
    types:
    - uid: string
  - name: type
    description: The identity type. This is the only required field when adding a system or user assigned identity to a resource.
    types:
    - uid: ResourceIdentityType
  - name: userAssignedIdentities
    description: "The user identity associated with the policy. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
    types:
    - uid: UserAssignedIdentities
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: ParameterValuesValue
  description: The value of a parameter.
  kind: object
  properties:
  - name: value
    description: The value of the parameter.
    types:
    - uid: object
- name: enforcementMode
  description: The policy assignment enforcement mode. Possible values are Default and DoNotEnforce.
  kind: enum
  properties:
  - name: Default
    description: The policy effect is enforced during resource creation or update.
    types:
    - uid: string
  - name: DoNotEnforce
    description: The policy effect is not enforced during resource creation or update.
    types:
    - uid: string
- name: NonComplianceMessage
  description: A message that describes why a resource is non-compliant with the policy. This is shown in 'deny' error messages and on resource's non-compliant compliance results.
  kind: object
  properties:
  - name: message
    description: A message that describes why a resource is non-compliant with the policy. This is shown in 'deny' error messages and on resource's non-compliant compliance results.
    types:
    - uid: string
  - name: policyDefinitionReferenceId
    description: The policy definition reference ID within a policy set definition the message is intended for. This is only applicable if the policy assignment assigns a policy set definition. If this is not provided the message applies to all policies assigned by this policy assignment.
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ResourceIdentityType
  description: The identity type. This is the only required field when adding a system or user assigned identity to a resource.
  kind: enum
  properties:
  - name: SystemAssigned
    description: Indicates that a system assigned identity is associated with the resource.
    types:
    - uid: string
  - name: UserAssigned
    description: Indicates that a system assigned identity is associated with the resource.
    types:
    - uid: string
  - name: None
    description: Indicates that no identity is associated with the resource or that the existing identity should be removed.
    types:
    - uid: string
- name: UserAssignedIdentities
  description: "The user identity associated with the policy. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
  kind: object
  properties:
  - name: ''
    description: ''
    types:
    - uid: ''
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Delete a policy assignment by ID
  request:
    uri: DELETE https://management.azure.com/providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage?api-version=2021-06-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      DELETE https://management.azure.com/providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage?api-version=2021-06-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for PolicyAssignments DeleteById. */
      public final class Main {
          /*
           * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/deletePolicyAssignmentById.json
           */
          /**
           * Sample code: Delete a policy assignment by ID.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void deleteAPolicyAssignmentByID(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .genericResources()
                  .manager()
                  .policyClient()
                  .getPolicyAssignments()
                  .deleteByIdWithResponse(
                      "providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage",
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpolicy_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armpolicy"
      )

      // x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/deletePolicyAssignmentById.json
      func ExamplePolicyAssignmentsClient_DeleteByID() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client := armpolicy.NewPolicyAssignmentsClient("<subscription-id>", cred, nil)
      	res, err := client.DeleteByID(ctx,
      		"<policy-assignment-id>",
      		nil)
      	if err != nil {
      		log.Fatal(err)
      	}
      	log.Printf("PolicyAssignment.ID: %s\n", *res.ID)
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fresources%2Farmpolicy%2Fv0.1.1/sdk/resourcemanager/resources/armpolicy/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { PolicyClient } = require("@azure/arm-policy");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to This operation deletes the policy with the given ID. Policy assignment IDs have this format: '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. Valid formats for {scope} are: '/providers/Microsoft.Management/managementGroups/{managementGroup}' (management group), '/subscriptions/{subscriptionId}' (subscription), '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' (resource group), or '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}' (resource).
       *
       * @summary This operation deletes the policy with the given ID. Policy assignment IDs have this format: '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. Valid formats for {scope} are: '/providers/Microsoft.Management/managementGroups/{managementGroup}' (management group), '/subscriptions/{subscriptionId}' (subscription), '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' (resource group), or '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}' (resource).
       * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/deletePolicyAssignmentById.json
       */
      async function deleteAPolicyAssignmentById() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const policyAssignmentId =
          "providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage";
        const credential = new DefaultAzureCredential();
        const client = new PolicyClient(credential, subscriptionId);
        const result = await client.policyAssignments.deleteById(policyAssignmentId);
        console.log(result);
      }

      deleteAPolicyAssignmentById().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-policy_5.0.2/sdk/policy/arm-policy/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "displayName": "Enforce storage account SKU",
          "description": "Allow only storage accounts of SKU Standard_GRS or Standard_LRS to be created",
          "metadata": {
            "assignedBy": "Cheapskate Boss"
          },
          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
          "notScopes": [],
          "parameters": {
            "listOfAllowedSKUs": {
              "value": [
                "Standard_GRS",
                "Standard_LRS"
              ]
            }
          }
        },
        "id": "/providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage",
        "type": "Microsoft.Authorization/policyAssignments",
        "name": "LowCostStorage"
      }
  - statusCode: "204"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: "Deletes a policy assignment.  \nThis operation deletes the policy with the given ID. Policy assignment IDs have this format: '{scope}/providers/Microsoft."
errorCodes: []
