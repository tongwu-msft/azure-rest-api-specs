### YamlMime:RESTOperation
uid: management.azure.com.policy.policyassignments.create
name: Create
service: Policy
groupName: Policy Assignments
apiVersion: 2021-06-01
summary: " This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group."
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}?api-version=2021-06-01
uriParameters:
- name: scope
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: "The scope of the policy assignment. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'"
  types:
  - uid: string
- name: policyAssignmentName
  in: path
  isRequired: true
  description: The name of the policy assignment.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the operation.
  types:
  - uid: string
responses:
- name: 201 Created
  description: Created - Returns information about the new policy assignment.
  types:
  - uid: PolicyAssignment
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: location
    in: body
    description: The location of the policy assignment. Only required when utilizing managed identity.
    types:
    - uid: string
  - name: identity
    in: body
    description: The managed identity associated with the policy assignment.
    types:
    - uid: Identity
  - name: properties.displayName
    in: body
    description: The display name of the policy assignment.
    types:
    - uid: string
  - name: properties.policyDefinitionId
    in: body
    description: The ID of the policy definition or policy set definition being assigned.
    types:
    - uid: string
  - name: properties.notScopes
    in: body
    description: The policy's excluded scopes.
    types:
    - uid: string
      isArray: true
  - name: properties.parameters
    in: body
    description: The parameter values for the assigned policy rule. The keys are the parameter names.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: ParameterValuesValue
  - name: properties.description
    in: body
    description: This message will be part of response in case of policy violation.
    types:
    - uid: string
  - name: properties.metadata
    in: body
    description: The policy assignment metadata. Metadata is an open ended object and is typically a collection of key value pairs.
    types:
    - uid: object
  - name: properties.enforcementMode
    in: body
    description: The policy assignment enforcement mode. Possible values are Default and DoNotEnforce.
    types:
    - uid: enforcementMode
  - name: properties.nonComplianceMessages
    in: body
    description: The messages that describe why a resource is non-compliant with the policy.
    types:
    - uid: NonComplianceMessage
      isArray: true
requestHeader: []
definitions:
- name: Identity
  description: Identity for the resource.  Policy assignments support a maximum of one identity.  That is either a system assigned identity or a single user assigned identity.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal ID of the resource identity.  This property will only be provided for a system assigned identity
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant ID of the resource identity.  This property will only be provided for a system assigned identity
    types:
    - uid: string
  - name: type
    description: The identity type. This is the only required field when adding a system or user assigned identity to a resource.
    types:
    - uid: ResourceIdentityType
  - name: userAssignedIdentities
    description: "The user identity associated with the policy. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
    types:
    - uid: UserAssignedIdentities
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: ParameterValuesValue
  description: The value of a parameter.
  kind: object
  properties:
  - name: value
    description: The value of the parameter.
    types:
    - uid: object
- name: NonComplianceMessage
  description: A message that describes why a resource is non-compliant with the policy. This is shown in 'deny' error messages and on resource's non-compliant compliance results.
  kind: object
  properties:
  - name: message
    description: A message that describes why a resource is non-compliant with the policy. This is shown in 'deny' error messages and on resource's non-compliant compliance results.
    types:
    - uid: string
  - name: policyDefinitionReferenceId
    description: The policy definition reference ID within a policy set definition the message is intended for. This is only applicable if the policy assignment assigns a policy set definition. If this is not provided the message applies to all policies assigned by this policy assignment.
    types:
    - uid: string
- name: PolicyAssignment
  description: The policy assignment.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The ID of the policy assignment.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the policy assignment.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the policy assignment.
    types:
    - uid: string
  - name: location
    description: The location of the policy assignment. Only required when utilizing managed identity.
    types:
    - uid: string
  - name: identity
    description: The managed identity associated with the policy assignment.
    types:
    - uid: Identity
  - name: systemData
    isReadyOnly: true
    description: The system metadata relating to this resource.
    types:
    - uid: systemData
  - name: properties.displayName
    description: The display name of the policy assignment.
    types:
    - uid: string
  - name: properties.policyDefinitionId
    description: The ID of the policy definition or policy set definition being assigned.
    types:
    - uid: string
  - name: properties.scope
    isReadyOnly: true
    description: The scope for the policy assignment.
    types:
    - uid: string
  - name: properties.notScopes
    description: The policy's excluded scopes.
    types:
    - uid: string
      isArray: true
  - name: properties.parameters
    description: The parameter values for the assigned policy rule. The keys are the parameter names.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: ParameterValuesValue
  - name: properties.description
    description: This message will be part of response in case of policy violation.
    types:
    - uid: string
  - name: properties.metadata
    description: The policy assignment metadata. Metadata is an open ended object and is typically a collection of key value pairs.
    types:
    - uid: object
  - name: properties.enforcementMode
    description: The policy assignment enforcement mode. Possible values are Default and DoNotEnforce.
    types:
    - uid: enforcementMode
    defaultValue: Default
  - name: properties.nonComplianceMessages
    description: The messages that describe why a resource is non-compliant with the policy.
    types:
    - uid: NonComplianceMessage
      isArray: true
- name: CloudError
  description: An error response from a policy operation.
  kind: object
  properties:
  - name: error
    description: "Error Response  \nCommon error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)"
    types:
    - uid: ErrorResponse
- name: ResourceIdentityType
  description: The identity type. This is the only required field when adding a system or user assigned identity to a resource.
  kind: enum
  properties:
  - name: SystemAssigned
    description: Indicates that a system assigned identity is associated with the resource.
    types:
    - uid: string
  - name: UserAssigned
    description: Indicates that a system assigned identity is associated with the resource.
    types:
    - uid: string
  - name: None
    description: Indicates that no identity is associated with the resource or that the existing identity should be removed.
    types:
    - uid: string
- name: UserAssignedIdentities
  description: "The user identity associated with the policy. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
  kind: object
  properties:
  - name: ''
    description: ''
    types:
    - uid: ''
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: enforcementMode
  description: The policy assignment enforcement mode. Possible values are Default and DoNotEnforce.
  kind: enum
  properties:
  - name: Default
    description: The policy effect is enforced during resource creation or update.
    types:
    - uid: string
  - name: DoNotEnforce
    description: The policy effect is not enforced during resource creation or update.
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Create or update a policy assignment
  request:
    uri: PUT https://management.azure.com/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming?api-version=2021-06-01
    body: >-
      {
        "properties": {
          "displayName": "Enforce resource naming rules",
          "description": "Force resource names to begin with given DeptA and end with -LC",
          "metadata": {
            "assignedBy": "Special Someone"
          },
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
          "parameters": {
            "prefix": {
              "value": "DeptA"
            },
            "suffix": {
              "value": "-LC"
            }
          },
          "nonComplianceMessages": [
            {
              "message": "Resource names must start with 'DeptA' and end with '-LC'."
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming?api-version=2021-06-01

      {
        "properties": {
          "displayName": "Enforce resource naming rules",
          "description": "Force resource names to begin with given DeptA and end with -LC",
          "metadata": {
            "assignedBy": "Special Someone"
          },
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
          "parameters": {
            "prefix": {
              "value": "DeptA"
            },
            "suffix": {
              "value": "-LC"
            }
          },
          "nonComplianceMessages": [
            {
              "message": "Resource names must start with 'DeptA' and end with '-LC'."
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.serializer.SerializerFactory;
      import com.azure.core.util.Context;
      import com.azure.core.util.serializer.SerializerEncoding;
      import com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner;
      import com.azure.resourcemanager.resources.models.NonComplianceMessage;
      import com.azure.resourcemanager.resources.models.ParameterValuesValue;
      import java.io.IOException;
      import java.util.Arrays;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for PolicyAssignments Create. */
      public final class Main {
          /*
           * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/createPolicyAssignment.json
           */
          /**
           * Sample code: Create or update a policy assignment.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createOrUpdateAPolicyAssignment(com.azure.resourcemanager.AzureResourceManager azure)
              throws IOException {
              azure
                  .genericResources()
                  .manager()
                  .policyClient()
                  .getPolicyAssignments()
                  .createWithResponse(
                      "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
                      "EnforceNaming",
                      new PolicyAssignmentInner()
                          .withDisplayName("Enforce resource naming rules")
                          .withPolicyDefinitionId(
                              "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming")
                          .withParameters(
                              mapOf(
                                  "prefix",
                                  new ParameterValuesValue().withValue("DeptA"),
                                  "suffix",
                                  new ParameterValuesValue().withValue("-LC")))
                          .withDescription("Force resource names to begin with given DeptA and end with -LC")
                          .withMetadata(
                              SerializerFactory
                                  .createDefaultManagementSerializerAdapter()
                                  .deserialize("{\"assignedBy\":\"Special Someone\"}", Object.class, SerializerEncoding.JSON))
                          .withNonComplianceMessages(
                              Arrays
                                  .asList(
                                      new NonComplianceMessage()
                                          .withMessage("Resource names must start with 'DeptA' and end with '-LC'."))),
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpolicy_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armpolicy"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/createPolicyAssignment.json
      func ExampleAssignmentsClient_Create() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpolicy.NewAssignmentsClient("<subscription-id>", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	_, err = client.Create(ctx,
      		"subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
      		"EnforceNaming",
      		armpolicy.Assignment{
      			Properties: &armpolicy.AssignmentProperties{
      				Description: to.Ptr("Force resource names to begin with given DeptA and end with -LC"),
      				DisplayName: to.Ptr("Enforce resource naming rules"),
      				Metadata: map[string]interface{}{
      					"assignedBy": "Special Someone",
      				},
      				NonComplianceMessages: []*armpolicy.NonComplianceMessage{
      					{
      						Message: to.Ptr("Resource names must start with 'DeptA' and end with '-LC'."),
      					}},
      				Parameters: map[string]*armpolicy.ParameterValuesValue{
      					"prefix": {
      						Value: "DeptA",
      					},
      					"suffix": {
      						Value: "-LC",
      					},
      				},
      				PolicyDefinitionID: to.Ptr("/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming"),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fresources%2Farmpolicy%2Fv0.6.0/sdk/resourcemanager/resources/armpolicy/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { PolicyClient } = require("@azure/arm-policy");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to  This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.
       *
       * @summary  This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.
       * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/createPolicyAssignment.json
       */
      async function createOrUpdateAPolicyAssignment() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2";
        const policyAssignmentName = "EnforceNaming";
        const parameters = {
          description: "Force resource names to begin with given DeptA and end with -LC",
          displayName: "Enforce resource naming rules",
          metadata: { assignedBy: "Special Someone" },
          nonComplianceMessages: [
            { message: "Resource names must start with 'DeptA' and end with '-LC'." },
          ],
          parameters: { prefix: { value: "DeptA" }, suffix: { value: "-LC" } },
          policyDefinitionId:
            "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
        };
        const credential = new DefaultAzureCredential();
        const client = new PolicyClient(credential, subscriptionId);
        const result = await client.policyAssignments.create(scope, policyAssignmentName, parameters);
        console.log(result);
      }

      createOrUpdateAPolicyAssignment().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-policy_5.0.2/sdk/policy/arm-policy/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "displayName": "Enforce resource naming rules",
          "description": "Force resource names to begin with given DeptA and end with -LC",
          "metadata": {
            "assignedBy": "Special Someone"
          },
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
          "notScopes": [],
          "parameters": {
            "prefix": {
              "value": "DeptA"
            },
            "suffix": {
              "value": "-LC"
            }
          },
          "enforcementMode": "Default",
          "scope": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
          "nonComplianceMessages": [
            {
              "message": "Resource names must start with 'DeptA' and end with '-LC'."
            }
          ]
        },
        "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming",
        "type": "Microsoft.Authorization/policyAssignments",
        "name": "EnforceNaming"
      }
- name: Create or update a policy assignment with multiple non-compliance messages
  request:
    uri: PUT https://management.azure.com/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/securityInitAssignment?api-version=2021-06-01
    body: >-
      {
        "properties": {
          "displayName": "Enforce security policies",
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/securityInitiative",
          "nonComplianceMessages": [
            {
              "message": "Resources must comply with all internal security policies. See <internal site URL> for more info."
            },
            {
              "message": "Resource names must start with 'DeptA' and end with '-LC'.",
              "policyDefinitionReferenceId": "10420126870854049575"
            },
            {
              "message": "Storage accounts must have firewall rules configured.",
              "policyDefinitionReferenceId": "8572513655450389710"
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/securityInitAssignment?api-version=2021-06-01

      {
        "properties": {
          "displayName": "Enforce security policies",
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/securityInitiative",
          "nonComplianceMessages": [
            {
              "message": "Resources must comply with all internal security policies. See <internal site URL> for more info."
            },
            {
              "message": "Resource names must start with 'DeptA' and end with '-LC'.",
              "policyDefinitionReferenceId": "10420126870854049575"
            },
            {
              "message": "Storage accounts must have firewall rules configured.",
              "policyDefinitionReferenceId": "8572513655450389710"
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner;
      import com.azure.resourcemanager.resources.models.NonComplianceMessage;
      import java.util.Arrays;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for PolicyAssignments Create. */
      public final class Main {
          /*
           * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/createPolicyAssignmentNonComplianceMessages.json
           */
          /**
           * Sample code: Create or update a policy assignment with multiple non-compliance messages.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createOrUpdateAPolicyAssignmentWithMultipleNonComplianceMessages(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .genericResources()
                  .manager()
                  .policyClient()
                  .getPolicyAssignments()
                  .createWithResponse(
                      "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
                      "securityInitAssignment",
                      new PolicyAssignmentInner()
                          .withDisplayName("Enforce security policies")
                          .withPolicyDefinitionId(
                              "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/securityInitiative")
                          .withNonComplianceMessages(
                              Arrays
                                  .asList(
                                      new NonComplianceMessage()
                                          .withMessage(
                                              "Resources must comply with all internal security policies. See <internal site"
                                                  + " URL> for more info."),
                                      new NonComplianceMessage()
                                          .withMessage("Resource names must start with 'DeptA' and end with '-LC'.")
                                          .withPolicyDefinitionReferenceId("10420126870854049575"),
                                      new NonComplianceMessage()
                                          .withMessage("Storage accounts must have firewall rules configured.")
                                          .withPolicyDefinitionReferenceId("8572513655450389710"))),
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { PolicyClient } = require("@azure/arm-policy");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to  This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.
       *
       * @summary  This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.
       * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/createPolicyAssignmentNonComplianceMessages.json
       */
      async function createOrUpdateAPolicyAssignmentWithMultipleNonComplianceMessages() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2";
        const policyAssignmentName = "securityInitAssignment";
        const parameters = {
          displayName: "Enforce security policies",
          nonComplianceMessages: [
            {
              message:
                "Resources must comply with all internal security policies. See <internal site URL> for more info.",
            },
            {
              message: "Resource names must start with 'DeptA' and end with '-LC'.",
              policyDefinitionReferenceId: "10420126870854049575",
            },
            {
              message: "Storage accounts must have firewall rules configured.",
              policyDefinitionReferenceId: "8572513655450389710",
            },
          ],
          policyDefinitionId:
            "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/securityInitiative",
        };
        const credential = new DefaultAzureCredential();
        const client = new PolicyClient(credential, subscriptionId);
        const result = await client.policyAssignments.create(scope, policyAssignmentName, parameters);
        console.log(result);
      }

      createOrUpdateAPolicyAssignmentWithMultipleNonComplianceMessages().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-policy_5.0.2/sdk/policy/arm-policy/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "displayName": "Enforce security policies",
          "metadata": {
            "assignedBy": "User 1"
          },
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/securityInitiative",
          "notScopes": [],
          "enforcementMode": "Default",
          "scope": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
          "nonComplianceMessages": [
            {
              "message": "Resources must comply with all internal security policies. See <internal site URL> for more info."
            },
            {
              "message": "Resource names must start with 'DeptA' and end with '-LC'.",
              "policyDefinitionReferenceId": "10420126870854049575"
            },
            {
              "message": "Storage accounts must have firewall rules configured.",
              "policyDefinitionReferenceId": "8572513655450389710"
            }
          ]
        },
        "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/securityInitAssignment",
        "type": "Microsoft.Authorization/policyAssignments",
        "name": "securityInitAssignment"
      }
- name: Create or update a policy assignment with a system assigned identity
  request:
    uri: PUT https://management.azure.com/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming?api-version=2021-06-01
    body: >-
      {
        "location": "eastus",
        "identity": {
          "type": "SystemAssigned"
        },
        "properties": {
          "displayName": "Enforce resource naming rules",
          "description": "Force resource names to begin with given DeptA and end with -LC",
          "metadata": {
            "assignedBy": "Foo Bar"
          },
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
          "parameters": {
            "prefix": {
              "value": "DeptA"
            },
            "suffix": {
              "value": "-LC"
            }
          },
          "enforcementMode": "Default"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming?api-version=2021-06-01

      {
        "location": "eastus",
        "identity": {
          "type": "SystemAssigned"
        },
        "properties": {
          "displayName": "Enforce resource naming rules",
          "description": "Force resource names to begin with given DeptA and end with -LC",
          "metadata": {
            "assignedBy": "Foo Bar"
          },
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
          "parameters": {
            "prefix": {
              "value": "DeptA"
            },
            "suffix": {
              "value": "-LC"
            }
          },
          "enforcementMode": "Default"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.serializer.SerializerFactory;
      import com.azure.core.util.Context;
      import com.azure.core.util.serializer.SerializerEncoding;
      import com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner;
      import com.azure.resourcemanager.resources.models.EnforcementMode;
      import com.azure.resourcemanager.resources.models.Identity;
      import com.azure.resourcemanager.resources.models.ParameterValuesValue;
      import com.azure.resourcemanager.resources.models.ResourceIdentityType;
      import java.io.IOException;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for PolicyAssignments Create. */
      public final class Main {
          /*
           * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/createPolicyAssignmentWithIdentity.json
           */
          /**
           * Sample code: Create or update a policy assignment with a system assigned identity.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createOrUpdateAPolicyAssignmentWithASystemAssignedIdentity(
              com.azure.resourcemanager.AzureResourceManager azure) throws IOException {
              azure
                  .genericResources()
                  .manager()
                  .policyClient()
                  .getPolicyAssignments()
                  .createWithResponse(
                      "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
                      "EnforceNaming",
                      new PolicyAssignmentInner()
                          .withLocation("eastus")
                          .withIdentity(new Identity().withType(ResourceIdentityType.SYSTEM_ASSIGNED))
                          .withDisplayName("Enforce resource naming rules")
                          .withPolicyDefinitionId(
                              "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming")
                          .withParameters(
                              mapOf(
                                  "prefix",
                                  new ParameterValuesValue().withValue("DeptA"),
                                  "suffix",
                                  new ParameterValuesValue().withValue("-LC")))
                          .withDescription("Force resource names to begin with given DeptA and end with -LC")
                          .withMetadata(
                              SerializerFactory
                                  .createDefaultManagementSerializerAdapter()
                                  .deserialize("{\"assignedBy\":\"Foo Bar\"}", Object.class, SerializerEncoding.JSON))
                          .withEnforcementMode(EnforcementMode.DEFAULT),
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { PolicyClient } = require("@azure/arm-policy");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to  This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.
       *
       * @summary  This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.
       * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/createPolicyAssignmentWithIdentity.json
       */
      async function createOrUpdateAPolicyAssignmentWithASystemAssignedIdentity() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2";
        const policyAssignmentName = "EnforceNaming";
        const parameters = {
          description: "Force resource names to begin with given DeptA and end with -LC",
          displayName: "Enforce resource naming rules",
          enforcementMode: "Default",
          identity: { type: "SystemAssigned" },
          location: "eastus",
          metadata: { assignedBy: "Foo Bar" },
          parameters: { prefix: { value: "DeptA" }, suffix: { value: "-LC" } },
          policyDefinitionId:
            "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
        };
        const credential = new DefaultAzureCredential();
        const client = new PolicyClient(credential, subscriptionId);
        const result = await client.policyAssignments.create(scope, policyAssignmentName, parameters);
        console.log(result);
      }

      createOrUpdateAPolicyAssignmentWithASystemAssignedIdentity().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-policy_5.0.2/sdk/policy/arm-policy/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "displayName": "Enforce resource naming rules",
          "description": "Force resource names to begin with given DeptA and end with -LC",
          "metadata": {
            "assignedBy": "Special Someone"
          },
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
          "notScopes": [],
          "parameters": {
            "prefix": {
              "value": "DeptA"
            },
            "suffix": {
              "value": "-LC"
            }
          },
          "enforcementMode": "Default",
          "scope": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2"
        },
        "identity": {
          "type": "SystemAssigned",
          "principalId": "e6d23f8d-af97-4fbc-bda6-00604e4e3d0a",
          "tenantId": "4bee2b8a-1bee-47c2-90e9-404241551135"
        },
        "location": "eastus",
        "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming",
        "type": "Microsoft.Authorization/policyAssignments",
        "name": "EnforceNaming"
      }
- name: Create or update a policy assignment with a user assigned identity
  request:
    uri: PUT https://management.azure.com/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming?api-version=2021-06-01
    body: >-
      {
        "location": "eastus",
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
            "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/testResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-identity": {}
          }
        },
        "properties": {
          "displayName": "Enforce resource naming rules",
          "description": "Force resource names to begin with given DeptA and end with -LC",
          "metadata": {
            "assignedBy": "Foo Bar"
          },
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
          "parameters": {
            "prefix": {
              "value": "DeptA"
            },
            "suffix": {
              "value": "-LC"
            }
          },
          "enforcementMode": "Default"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming?api-version=2021-06-01

      {
        "location": "eastus",
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
            "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/testResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-identity": {}
          }
        },
        "properties": {
          "displayName": "Enforce resource naming rules",
          "description": "Force resource names to begin with given DeptA and end with -LC",
          "metadata": {
            "assignedBy": "Foo Bar"
          },
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
          "parameters": {
            "prefix": {
              "value": "DeptA"
            },
            "suffix": {
              "value": "-LC"
            }
          },
          "enforcementMode": "Default"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.serializer.SerializerFactory;
      import com.azure.core.util.Context;
      import com.azure.core.util.serializer.SerializerEncoding;
      import com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner;
      import com.azure.resourcemanager.resources.models.EnforcementMode;
      import com.azure.resourcemanager.resources.models.Identity;
      import com.azure.resourcemanager.resources.models.IdentityUserAssignedIdentitiesValue;
      import com.azure.resourcemanager.resources.models.ParameterValuesValue;
      import com.azure.resourcemanager.resources.models.ResourceIdentityType;
      import java.io.IOException;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for PolicyAssignments Create. */
      public final class Main {
          /*
           * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/createPolicyAssignmentWithUserAssignedIdentity.json
           */
          /**
           * Sample code: Create or update a policy assignment with a user assigned identity.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createOrUpdateAPolicyAssignmentWithAUserAssignedIdentity(
              com.azure.resourcemanager.AzureResourceManager azure) throws IOException {
              azure
                  .genericResources()
                  .manager()
                  .policyClient()
                  .getPolicyAssignments()
                  .createWithResponse(
                      "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
                      "EnforceNaming",
                      new PolicyAssignmentInner()
                          .withLocation("eastus")
                          .withIdentity(
                              new Identity()
                                  .withType(ResourceIdentityType.USER_ASSIGNED)
                                  .withUserAssignedIdentities(
                                      mapOf(
                                          "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/testResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-identity",
                                          new IdentityUserAssignedIdentitiesValue())))
                          .withDisplayName("Enforce resource naming rules")
                          .withPolicyDefinitionId(
                              "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming")
                          .withParameters(
                              mapOf(
                                  "prefix",
                                  new ParameterValuesValue().withValue("DeptA"),
                                  "suffix",
                                  new ParameterValuesValue().withValue("-LC")))
                          .withDescription("Force resource names to begin with given DeptA and end with -LC")
                          .withMetadata(
                              SerializerFactory
                                  .createDefaultManagementSerializerAdapter()
                                  .deserialize("{\"assignedBy\":\"Foo Bar\"}", Object.class, SerializerEncoding.JSON))
                          .withEnforcementMode(EnforcementMode.DEFAULT),
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { PolicyClient } = require("@azure/arm-policy");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to  This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.
       *
       * @summary  This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.
       * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/createPolicyAssignmentWithUserAssignedIdentity.json
       */
      async function createOrUpdateAPolicyAssignmentWithAUserAssignedIdentity() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2";
        const policyAssignmentName = "EnforceNaming";
        const parameters = {
          description: "Force resource names to begin with given DeptA and end with -LC",
          displayName: "Enforce resource naming rules",
          enforcementMode: "Default",
          identity: {
            type: "UserAssigned",
            userAssignedIdentities: {
              "/subscriptions/ae640e6bBa3e42569d622993eecfa6f2/resourceGroups/testResourceGroup/providers/MicrosoftManagedIdentity/userAssignedIdentities/testIdentity":
                {},
            },
          },
          location: "eastus",
          metadata: { assignedBy: "Foo Bar" },
          parameters: { prefix: { value: "DeptA" }, suffix: { value: "-LC" } },
          policyDefinitionId:
            "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
        };
        const credential = new DefaultAzureCredential();
        const client = new PolicyClient(credential, subscriptionId);
        const result = await client.policyAssignments.create(scope, policyAssignmentName, parameters);
        console.log(result);
      }

      createOrUpdateAPolicyAssignmentWithAUserAssignedIdentity().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-policy_5.0.2/sdk/policy/arm-policy/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "displayName": "Enforce resource naming rules",
          "description": "Force resource names to begin with given DeptA and end with -LC",
          "metadata": {
            "assignedBy": "Special Someone"
          },
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
          "notScopes": [],
          "parameters": {
            "prefix": {
              "value": "DeptA"
            },
            "suffix": {
              "value": "-LC"
            }
          },
          "enforcementMode": "Default",
          "scope": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2"
        },
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
            "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/testResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-identity": {
              "principalId": "e6d23f8d-af97-4fbc-bda6-00604e4e3d0a",
              "clientId": "4bee2b8a-1bee-47c2-90e9-404241551135"
            }
          }
        },
        "location": "eastus",
        "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming",
        "type": "Microsoft.Authorization/policyAssignments",
        "name": "EnforceNaming"
      }
- name: Create or update a policy assignment without enforcing policy effect during resource creation or update.
  request:
    uri: PUT https://management.azure.com/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming?api-version=2021-06-01
    body: >-
      {
        "properties": {
          "displayName": "Enforce resource naming rules",
          "description": "Force resource names to begin with given DeptA and end with -LC",
          "metadata": {
            "assignedBy": "Special Someone"
          },
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
          "parameters": {
            "prefix": {
              "value": "DeptA"
            },
            "suffix": {
              "value": "-LC"
            }
          },
          "enforcementMode": "DoNotEnforce"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming?api-version=2021-06-01

      {
        "properties": {
          "displayName": "Enforce resource naming rules",
          "description": "Force resource names to begin with given DeptA and end with -LC",
          "metadata": {
            "assignedBy": "Special Someone"
          },
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
          "parameters": {
            "prefix": {
              "value": "DeptA"
            },
            "suffix": {
              "value": "-LC"
            }
          },
          "enforcementMode": "DoNotEnforce"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.serializer.SerializerFactory;
      import com.azure.core.util.Context;
      import com.azure.core.util.serializer.SerializerEncoding;
      import com.azure.resourcemanager.resources.fluent.models.PolicyAssignmentInner;
      import com.azure.resourcemanager.resources.models.EnforcementMode;
      import com.azure.resourcemanager.resources.models.ParameterValuesValue;
      import java.io.IOException;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for PolicyAssignments Create. */
      public final class Main {
          /*
           * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/createPolicyAssignmentWithoutEnforcement.json
           */
          /**
           * Sample code: Create or update a policy assignment without enforcing policy effect during resource creation or
           * update.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createOrUpdateAPolicyAssignmentWithoutEnforcingPolicyEffectDuringResourceCreationOrUpdate(
              com.azure.resourcemanager.AzureResourceManager azure) throws IOException {
              azure
                  .genericResources()
                  .manager()
                  .policyClient()
                  .getPolicyAssignments()
                  .createWithResponse(
                      "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
                      "EnforceNaming",
                      new PolicyAssignmentInner()
                          .withDisplayName("Enforce resource naming rules")
                          .withPolicyDefinitionId(
                              "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming")
                          .withParameters(
                              mapOf(
                                  "prefix",
                                  new ParameterValuesValue().withValue("DeptA"),
                                  "suffix",
                                  new ParameterValuesValue().withValue("-LC")))
                          .withDescription("Force resource names to begin with given DeptA and end with -LC")
                          .withMetadata(
                              SerializerFactory
                                  .createDefaultManagementSerializerAdapter()
                                  .deserialize("{\"assignedBy\":\"Special Someone\"}", Object.class, SerializerEncoding.JSON))
                          .withEnforcementMode(EnforcementMode.DO_NOT_ENFORCE),
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { PolicyClient } = require("@azure/arm-policy");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to  This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.
       *
       * @summary  This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.
       * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/createPolicyAssignmentWithoutEnforcement.json
       */
      async function createOrUpdateAPolicyAssignmentWithoutEnforcingPolicyEffectDuringResourceCreationOrUpdate() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2";
        const policyAssignmentName = "EnforceNaming";
        const parameters = {
          description: "Force resource names to begin with given DeptA and end with -LC",
          displayName: "Enforce resource naming rules",
          enforcementMode: "DoNotEnforce",
          metadata: { assignedBy: "Special Someone" },
          parameters: { prefix: { value: "DeptA" }, suffix: { value: "-LC" } },
          policyDefinitionId:
            "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
        };
        const credential = new DefaultAzureCredential();
        const client = new PolicyClient(credential, subscriptionId);
        const result = await client.policyAssignments.create(scope, policyAssignmentName, parameters);
        console.log(result);
      }

      createOrUpdateAPolicyAssignmentWithoutEnforcingPolicyEffectDuringResourceCreationOrUpdate().catch(
        console.error
      );

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-policy_5.0.2/sdk/policy/arm-policy/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "displayName": "Enforce resource naming rules",
          "description": "Force resource names to begin with given DeptA and end with -LC",
          "metadata": {
            "assignedBy": "Special Someone"
          },
          "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
          "notScopes": [],
          "parameters": {
            "prefix": {
              "value": "DeptA"
            },
            "suffix": {
              "value": "-LC"
            }
          },
          "enforcementMode": "DoNotEnforce",
          "scope": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2"
        },
        "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming",
        "type": "Microsoft.Authorization/policyAssignments",
        "name": "EnforceNaming"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope.
errorCodes: []
