### YamlMime:RESTOperation
uid: management.azure.com.policy.policydefinitions.getbuiltin
name: Get Built In
service: Policy
groupName: Policy Definitions
apiVersion: 2021-06-01
summary: "Retrieves a built-in policy definition.  \nThis operation retrieves the built-in policy definition with the given name."
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}?api-version=2021-06-01
uriParameters:
- name: policyDefinitionName
  in: path
  isRequired: true
  description: The name of the built-in policy definition to get.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK - Returns information about the built-in policy definition.
  types:
  - uid: PolicyDefinition
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: PolicyDefinition
  description: The policy definition.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The ID of the policy definition.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the policy definition.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource (Microsoft.Authorization/policyDefinitions).
    types:
    - uid: string
  - name: systemData
    isReadyOnly: true
    description: The system metadata relating to this resource.
    types:
    - uid: systemData
  - name: properties.policyType
    description: The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
    types:
    - uid: policyType
  - name: properties.mode
    description: The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
    types:
    - uid: string
    defaultValue: Indexed
  - name: properties.displayName
    description: The display name of the policy definition.
    types:
    - uid: string
  - name: properties.description
    description: The policy definition description.
    types:
    - uid: string
  - name: properties.policyRule
    description: The policy rule.
    types:
    - uid: object
  - name: properties.metadata
    description: The policy definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
    types:
    - uid: object
  - name: properties.parameters
    description: The parameter definitions for parameters used in the policy rule. The keys are the parameter names.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: ParameterDefinitionsValue
- name: CloudError
  description: An error response from a policy operation.
  kind: object
  properties:
  - name: error
    description: "Error Response  \nCommon error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)"
    types:
    - uid: ErrorResponse
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: policyType
  description: The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
  kind: enum
  properties:
  - name: NotSpecified
    types:
    - uid: string
  - name: BuiltIn
    types:
    - uid: string
  - name: Custom
    types:
    - uid: string
  - name: Static
    types:
    - uid: string
- name: ParameterDefinitionsValue
  description: The definition of a parameter that can be provided to the policy.
  kind: object
  properties:
  - name: type
    description: The data type of the parameter.
    types:
    - uid: parameterType
  - name: allowedValues
    description: The allowed values for the parameter.
    types:
    - uid: object
      isArray: true
  - name: defaultValue
    description: The default value for the parameter if no value is provided.
    types:
    - uid: object
  - name: metadata
    description: General metadata for the parameter.
    types:
    - uid: Metadata
- name: ErrorResponse
  description: Error Response
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: parameterType
  description: The data type of the parameter.
  kind: enum
  properties:
  - name: String
    types:
    - uid: string
  - name: Array
    types:
    - uid: string
  - name: Object
    types:
    - uid: string
  - name: Boolean
    types:
    - uid: string
  - name: Integer
    types:
    - uid: string
  - name: Float
    types:
    - uid: string
  - name: DateTime
    types:
    - uid: string
- name: Metadata
  description: General metadata for the parameter.
  kind: object
  properties:
  - name: displayName
    description: The display name for the parameter.
    types:
    - uid: string
  - name: description
    description: The description of the parameter.
    types:
    - uid: string
  - name: strongType
    description: Used when assigning the policy definition through the portal. Provides a context aware list of values for the user to choose from.
    types:
    - uid: string
  - name: assignPermissions
    description: Set to true to have Azure portal create role assignments on the resource ID or resource scope value of this parameter during policy assignment. This property is useful in case you wish to assign permissions outside the assignment scope.
    types:
    - uid: boolean
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Retrieve a built-in policy definition
  request:
    uri: GET https://management.azure.com/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1?api-version=2021-06-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1?api-version=2021-06-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for PolicyDefinitions GetBuiltIn. */
      public final class Main {
          /*
           * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/getBuiltinPolicyDefinition.json
           */
          /**
           * Sample code: Retrieve a built-in policy definition.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void retrieveABuiltInPolicyDefinition(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .genericResources()
                  .manager()
                  .policyClient()
                  .getPolicyDefinitions()
                  .getBuiltInWithResponse("7433c107-6db4-4ad1-b57a-a76dce0154a1", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpolicy_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armpolicy"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/getBuiltinPolicyDefinition.json
      func ExampleDefinitionsClient_GetBuiltIn() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpolicy.NewDefinitionsClient("<subscription-id>", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.GetBuiltIn(ctx,
      		"7433c107-6db4-4ad1-b57a-a76dce0154a1",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fresources%2Farmpolicy%2Fv0.6.0/sdk/resourcemanager/resources/armpolicy/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { PolicyClient } = require("@azure/arm-policy");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to This operation retrieves the built-in policy definition with the given name.
       *
       * @summary This operation retrieves the built-in policy definition with the given name.
       * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/stable/2021-06-01/examples/getBuiltinPolicyDefinition.json
       */
      async function retrieveABuiltInPolicyDefinition() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const policyDefinitionName = "7433c107-6db4-4ad1-b57a-a76dce0154a1";
        const credential = new DefaultAzureCredential();
        const client = new PolicyClient(credential, subscriptionId);
        const result = await client.policyDefinitions.getBuiltIn(policyDefinitionName);
        console.log(result);
      }

      retrieveABuiltInPolicyDefinition().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-policy_5.0.2/sdk/policy/arm-policy/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "mode": "All",
          "displayName": "Allowed storage account SKUs",
          "policyType": "BuiltIn",
          "description": "This policy enables you to specify a set of storage account SKUs that your organization can deploy.",
          "parameters": {
            "listOfAllowedSKUs": {
              "type": "Array",
              "metadata": {
                "description": "The list of SKUs that can be specified for storage accounts.",
                "displayName": "Allowed SKUs",
                "strongType": "StorageSKUs"
              }
            }
          },
          "policyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                {
                  "not": {
                    "field": "Microsoft.Storage/storageAccounts/sku.name",
                    "in": "[parameters('listOfAllowedSKUs')]"
                  }
                }
              ]
            },
            "then": {
              "effect": "Deny"
            }
          }
        },
        "id": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
        "type": "Microsoft.Authorization/policyDefinitions",
        "name": "7433c107-6db4-4ad1-b57a-a76dce0154a1"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: "Retrieves a built-in policy definition.  \nThis operation retrieves the built-in policy definition with the given name."
errorCodes: []
