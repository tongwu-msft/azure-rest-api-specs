### YamlMime:RESTOperation
uid: management.azure.com.policy.operations.list
name: List
service: Policy
groupName: Operations
apiVersion: 2019-10-01
summary: Lists available operations.
produces:
- application/json
paths:
- content: GET https://management.azure.com/providers/Microsoft.PolicyInsights/operations?api-version=2019-10-01
uriParameters:
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: List of available operations.
  types:
  - uid: OperationsListResults
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: QueryFailure
requestHeader: []
definitions:
- name: OperationsListResults
  description: List of available operations.
  kind: object
  properties:
  - name: '@odata.count'
    description: OData entity count; represents the number of operations returned.
    types:
    - uid: integer
  - name: value
    description: List of available operations.
    types:
    - uid: Operation
      isArray: true
- name: QueryFailure
  description: Error response.
  kind: object
  properties:
  - name: error
    description: Error definition.
    types:
    - uid: Error
- name: Operation
  description: Operation definition.
  kind: object
  properties:
  - name: name
    description: Operation name.
    types:
    - uid: string
  - name: display
    description: Display metadata associated with the operation.
    types:
    - uid: Display
- name: Error
  description: Error definition.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Service specific error code which serves as the substatus for the HTTP error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Description of the error.
    types:
    - uid: string
- name: Display
  description: Display metadata associated with the operation.
  kind: object
  properties:
  - name: provider
    description: Resource provider name.
    types:
    - uid: string
  - name: resource
    description: Resource name on which the operation is performed.
    types:
    - uid: string
  - name: operation
    description: Operation name.
    types:
    - uid: string
  - name: description
    description: Operation description.
    types:
    - uid: string
examples:
- name: List operations
  request:
    uri: GET https://management.azure.com/providers/Microsoft.PolicyInsights/operations?api-version=2019-10-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/providers/Microsoft.PolicyInsights/operations?api-version=2019-10-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for Operations List. */
      public final class Main {
          /*
           * x-ms-original-file: specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_ListOperations.json
           */
          /**
           * Sample code: List operations.
           *
           * @param manager Entry point to PolicyInsightsManager.
           */
          public static void listOperations(com.azure.resourcemanager.policyinsights.PolicyInsightsManager manager) {
              manager.operations().listWithResponse(Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-policyinsights_1.0.0-beta.3/sdk/policyinsights/azure-resourcemanager-policyinsights/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpolicyinsights_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/policyinsights/armpolicyinsights"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_ListOperations.json
      func ExampleOperationsClient_List() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpolicyinsights.NewOperationsClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.List(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fpolicyinsights%2Farmpolicyinsights%2Fv0.6.0/sdk/resourcemanager/policyinsights/armpolicyinsights/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { PolicyInsightsClient } = require("@azure/arm-policyinsights");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Lists available operations.
       *
       * @summary Lists available operations.
       * x-ms-original-file: specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_ListOperations.json
       */
      async function listOperations() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const credential = new DefaultAzureCredential();
        const client = new PolicyInsightsClient(credential, subscriptionId);
        const result = await client.operations.list();
        console.log(result);
      }

      listOperations().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-policyinsights_6.0.0-beta.2/sdk/policyinsights/arm-policyinsights/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "@odata.count": 3,
        "value": [
          {
            "name": "Microsoft.PolicyInsights/policyEvents/queryResults/action",
            "display": {
              "provider": "Microsoft Policy Insights",
              "resource": "Policy Events",
              "operation": "Query Policy Events",
              "description": "Query information about policy events."
            }
          },
          {
            "name": "Microsoft.PolicyInsights/policyStates/queryResults/action",
            "display": {
              "provider": "Microsoft Policy Insights",
              "resource": "Policy States",
              "operation": "Query Policy States",
              "description": "Query information about policy states."
            }
          },
          {
            "name": "Microsoft.PolicyInsights/policyStates/summarize/action",
            "display": {
              "provider": "Microsoft Policy Insights",
              "resource": "Policy States",
              "operation": "Query Policy Latest States Summary",
              "description": "Query summary information about policy latest states."
            }
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Policy service - Lists available operations.
errorCodes: []
