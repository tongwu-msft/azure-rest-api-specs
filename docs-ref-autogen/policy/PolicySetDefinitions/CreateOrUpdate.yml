### YamlMime:RESTOperation
uid: management.azure.com.policy.policysetdefinitions.createorupdate
name: Create Or Update
service: Policy
groupName: Policy Set Definitions
apiVersion: 2020-09-01
summary: "Creates or updates a policy set definition.  \nThis operation creates or updates a policy set definition in the given subscription with the given name."
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}?api-version=2020-09-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: policySetDefinitionName
  in: path
  isRequired: true
  description: The name of the policy set definition to create.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the operation.
  types:
  - uid: string
responses:
- name: 201 Created
  description: Created - Returns information about the policy set definition.
  types:
  - uid: PolicySetDefinition
- name: 200 OK
  description: OK - Returns information about the policy set definition.
  types:
  - uid: PolicySetDefinition
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: properties.policyType
    in: body
    description: The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
    types:
    - uid: policyType
  - name: properties.displayName
    in: body
    description: The display name of the policy set definition.
    types:
    - uid: string
  - name: properties.description
    in: body
    description: The policy set definition description.
    types:
    - uid: string
  - name: properties.metadata
    in: body
    description: The policy set definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
    types:
    - uid: object
  - name: properties.parameters
    in: body
    description: The policy set definition parameters that can be used in policy definition references.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: ParameterDefinitionsValue
  - name: properties.policyDefinitions
    in: body
    isRequired: true
    description: An array of policy definition references.
    types:
    - uid: PolicyDefinitionReference
      isArray: true
  - name: properties.policyDefinitionGroups
    in: body
    description: The metadata describing groups of policy definition references within the policy set definition.
    types:
    - uid: PolicyDefinitionGroup
      isArray: true
requestHeader: []
definitions:
- name: ParameterDefinitionsValue
  description: The definition of a parameter that can be provided to the policy.
  kind: object
  properties:
  - name: type
    description: The data type of the parameter.
    types:
    - uid: parameterType
  - name: allowedValues
    description: The allowed values for the parameter.
    types:
    - uid: object
      isArray: true
  - name: defaultValue
    description: The default value for the parameter if no value is provided.
    types:
    - uid: object
  - name: metadata
    description: General metadata for the parameter.
    types:
    - uid: Metadata
- name: PolicyDefinitionReference
  description: The policy definition reference.
  kind: object
  properties:
  - name: policyDefinitionId
    description: The ID of the policy definition or policy set definition.
    types:
    - uid: string
  - name: parameters
    description: The parameter values for the referenced policy rule. The keys are the parameter names.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: ParameterValuesValue
  - name: policyDefinitionReferenceId
    description: A unique id (within the policy set definition) for this policy definition reference.
    types:
    - uid: string
  - name: groupNames
    description: The name of the groups that this policy definition reference belongs to.
    types:
    - uid: string
      isArray: true
- name: PolicyDefinitionGroup
  description: The policy definition group.
  kind: object
  properties:
  - name: name
    description: The name of the group.
    types:
    - uid: string
  - name: displayName
    description: The group's display name.
    types:
    - uid: string
  - name: category
    description: The group's category.
    types:
    - uid: string
  - name: description
    description: The group's description.
    types:
    - uid: string
  - name: additionalMetadataId
    description: A resource ID of a resource that contains additional metadata about the group.
    types:
    - uid: string
- name: PolicySetDefinition
  description: The policy set definition.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The ID of the policy set definition.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the policy set definition.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource (Microsoft.Authorization/policySetDefinitions).
    types:
    - uid: string
  - name: properties.policyType
    description: The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
    types:
    - uid: policyType
  - name: properties.displayName
    description: The display name of the policy set definition.
    types:
    - uid: string
  - name: properties.description
    description: The policy set definition description.
    types:
    - uid: string
  - name: properties.metadata
    description: The policy set definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
    types:
    - uid: object
  - name: properties.parameters
    description: The policy set definition parameters that can be used in policy definition references.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: ParameterDefinitionsValue
  - name: properties.policyDefinitions
    description: An array of policy definition references.
    types:
    - uid: PolicyDefinitionReference
      isArray: true
  - name: properties.policyDefinitionGroups
    description: The metadata describing groups of policy definition references within the policy set definition.
    types:
    - uid: PolicyDefinitionGroup
      isArray: true
- name: CloudError
  description: An error response from a policy operation.
  kind: object
  properties:
  - name: error
    description: "Error Response  \nCommon error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)"
    types:
    - uid: ErrorResponse
- name: parameterType
  description: The data type of the parameter.
  kind: enum
  properties:
  - name: String
    types:
    - uid: string
  - name: Array
    types:
    - uid: string
  - name: Object
    types:
    - uid: string
  - name: Boolean
    types:
    - uid: string
  - name: Integer
    types:
    - uid: string
  - name: Float
    types:
    - uid: string
  - name: DateTime
    types:
    - uid: string
- name: Metadata
  description: General metadata for the parameter.
  kind: object
  properties:
  - name: displayName
    description: The display name for the parameter.
    types:
    - uid: string
  - name: description
    description: The description of the parameter.
    types:
    - uid: string
  - name: strongType
    description: Used when assigning the policy definition through the portal. Provides a context aware list of values for the user to choose from.
    types:
    - uid: string
  - name: assignPermissions
    description: Set to true to have Azure portal create role assignments on the resource ID or resource scope value of this parameter during policy assignment. This property is useful in case you wish to assign permissions outside the assignment scope.
    types:
    - uid: boolean
- name: ParameterValuesValue
  description: The value of a parameter.
  kind: object
  properties:
  - name: value
    description: The value of the parameter.
    types:
    - uid: object
- name: policyType
  description: The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
  kind: enum
  properties:
  - name: NotSpecified
    types:
    - uid: string
  - name: BuiltIn
    types:
    - uid: string
  - name: Custom
    types:
    - uid: string
  - name: Static
    types:
    - uid: string
- name: ErrorResponse
  description: Error Response
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: Create or update a policy set definition
  request:
    uri: PUT https://management.azure.com/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/CostManagement?api-version=2020-09-01
    body: >-
      {
        "properties": {
          "displayName": "Cost Management",
          "description": "Policies to enforce low cost storage SKUs",
          "metadata": {
            "category": "Cost Management"
          },
          "parameters": {
            "namePrefix": {
              "type": "String",
              "defaultValue": "myPrefix",
              "metadata": {
                "displayName": "Prefix to enforce on resource names"
              }
            }
          },
          "policyDefinitions": [
            {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
              "policyDefinitionReferenceId": "Limit_Skus",
              "parameters": {
                "listOfAllowedSKUs": {
                  "value": [
                    "Standard_GRS",
                    "Standard_LRS"
                  ]
                }
              }
            },
            {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
              "policyDefinitionReferenceId": "Resource_Naming",
              "parameters": {
                "prefix": {
                  "value": "[parameters('namePrefix')]"
                },
                "suffix": {
                  "value": "-LC"
                }
              }
            }
          ]
        }
      }
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/CostManagement",
        "type": "Microsoft.Authorization/policySetDefinitions",
        "name": "CostManagement",
        "properties": {
          "displayName": "Cost Management",
          "description": "Policies to enforce low cost storage SKUs",
          "metadata": {
            "category": "Cost Management"
          },
          "parameters": {
            "namePrefix": {
              "type": "String",
              "defaultValue": "myPrefix",
              "metadata": {
                "displayName": "Prefix to enforce on resource names"
              }
            }
          },
          "policyDefinitions": [
            {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
              "policyDefinitionReferenceId": "Limit_Skus",
              "parameters": {
                "listOfAllowedSKUs": {
                  "value": [
                    "Standard_GRS",
                    "Standard_LRS"
                  ]
                }
              }
            },
            {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
              "policyDefinitionReferenceId": "Resource_Naming",
              "parameters": {
                "prefix": {
                  "value": "[parameters('namePrefix')]"
                },
                "suffix": {
                  "value": "-LC"
                }
              }
            }
          ]
        }
      }
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/CostManagement",
        "type": "Microsoft.Authorization/policySetDefinitions",
        "name": "CostManagement",
        "properties": {
          "displayName": "Cost Management",
          "description": "Policies to enforce low cost storage SKUs",
          "metadata": {
            "category": "Cost Management"
          },
          "parameters": {
            "namePrefix": {
              "type": "String",
              "defaultValue": "myPrefix",
              "metadata": {
                "displayName": "Prefix to enforce on resource names"
              }
            }
          },
          "policyDefinitions": [
            {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
              "policyDefinitionReferenceId": "Limit_Skus",
              "parameters": {
                "listOfAllowedSKUs": {
                  "value": [
                    "Standard_GRS",
                    "Standard_LRS"
                  ]
                }
              }
            },
            {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
              "policyDefinitionReferenceId": "Resource_Naming",
              "parameters": {
                "prefix": {
                  "value": "[parameters('namePrefix')]"
                },
                "suffix": {
                  "value": "-LC"
                }
              }
            }
          ]
        }
      }
- name: Create or update a policy set definition with groups
  request:
    uri: PUT https://management.azure.com/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/CostManagement?api-version=2020-09-01
    body: >-
      {
        "properties": {
          "displayName": "Cost Management",
          "description": "Policies to enforce low cost storage SKUs",
          "metadata": {
            "category": "Cost Management"
          },
          "policyDefinitionGroups": [
            {
              "name": "CostSaving",
              "displayName": "Cost Management Policies",
              "description": "Policies designed to control spend within a subscription."
            },
            {
              "name": "Organizational",
              "displayName": "Organizational Policies",
              "description": "Policies that help enforce resource organization standards within a subscription."
            }
          ],
          "policyDefinitions": [
            {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
              "policyDefinitionReferenceId": "Limit_Skus",
              "groupNames": [
                "CostSaving"
              ],
              "parameters": {
                "listOfAllowedSKUs": {
                  "value": [
                    "Standard_GRS",
                    "Standard_LRS"
                  ]
                }
              }
            },
            {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
              "policyDefinitionReferenceId": "Resource_Naming",
              "groupNames": [
                "Organizational"
              ],
              "parameters": {
                "prefix": {
                  "value": "DeptA"
                },
                "suffix": {
                  "value": "-LC"
                }
              }
            }
          ]
        }
      }
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/CostManagement",
        "type": "Microsoft.Authorization/policySetDefinitions",
        "name": "CostManagement",
        "properties": {
          "displayName": "Cost Management",
          "description": "Policies to enforce low cost storage SKUs",
          "metadata": {
            "category": "Cost Management"
          },
          "policyDefinitionGroups": [
            {
              "name": "CostSaving",
              "displayName": "Cost Management Policies",
              "description": "Policies designed to control spend within a subscription."
            },
            {
              "name": "Organizational",
              "displayName": "Organizational Policies",
              "description": "Policies that help enforce resource organization standards within a subscription."
            }
          ],
          "policyDefinitions": [
            {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
              "policyDefinitionReferenceId": "Limit_Skus",
              "groupNames": [
                "CostSaving"
              ],
              "parameters": {
                "listOfAllowedSKUs": {
                  "value": [
                    "Standard_GRS",
                    "Standard_LRS"
                  ]
                }
              }
            },
            {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
              "policyDefinitionReferenceId": "Resource_Naming",
              "groupNames": [
                "Organizational"
              ],
              "parameters": {
                "prefix": {
                  "value": "DeptA"
                },
                "suffix": {
                  "value": "-LC"
                }
              }
            }
          ]
        }
      }
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/CostManagement",
        "type": "Microsoft.Authorization/policySetDefinitions",
        "name": "CostManagement",
        "properties": {
          "displayName": "Cost Management",
          "description": "Policies to enforce low cost storage SKUs",
          "metadata": {
            "category": "Cost Management"
          },
          "policyDefinitionGroups": [
            {
              "name": "CostSaving",
              "displayName": "Cost Management Policies",
              "description": "Policies designed to control spend within a subscription."
            },
            {
              "name": "Organizational",
              "displayName": "Organizational Policies",
              "description": "Policies that help enforce resource organization standards within a subscription."
            }
          ],
          "policyDefinitions": [
            {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
              "policyDefinitionReferenceId": "Limit_Skus",
              "groupNames": [
                "CostSaving"
              ],
              "parameters": {
                "listOfAllowedSKUs": {
                  "value": [
                    "Standard_GRS",
                    "Standard_LRS"
                  ]
                }
              }
            },
            {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
              "policyDefinitionReferenceId": "Resource_Naming",
              "groupNames": [
                "Organizational"
              ],
              "parameters": {
                "prefix": {
                  "value": "DeptA"
                },
                "suffix": {
                  "value": "-LC"
                }
              }
            }
          ]
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
errorCodes: []
