### YamlMime:RESTOperation
uid: management.azure.com.policy.remediations.createorupdateatresource
name: Create Or Update At Resource
service: Policy
groupName: Remediations
apiVersion: 2021-10-01
summary: Creates or updates a remediation at resource scope.
produces:
- application/json
paths:
- content: PUT https://management.azure.com/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}?api-version=2021-10-01
uriParameters:
- name: resourceId
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: Resource ID.
  types:
  - uid: string
- name: remediationName
  in: path
  isRequired: true
  description: The name of the remediation.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The updated remediation.
  types:
  - uid: Remediation
- name: 201 Created
  description: The created remediation.
  types:
  - uid: Remediation
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.policyAssignmentId
    in: body
    description: The resource ID of the policy assignment that should be remediated.
    types:
    - uid: string
  - name: properties.policyDefinitionReferenceId
    in: body
    description: The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
    types:
    - uid: string
  - name: properties.resourceDiscoveryMode
    in: body
    description: The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
    types:
    - uid: ResourceDiscoveryMode
  - name: properties.filters
    in: body
    description: The filters that will be applied to determine which resources to remediate.
    types:
    - uid: RemediationFilters
  - name: properties.resourceCount
    in: body
    description: Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used.
    types:
    - uid: integer
  - name: properties.parallelDeployments
    in: body
    description: Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used.
    types:
    - uid: integer
  - name: properties.failureThreshold
    in: body
    description: The remediation failure threshold settings
    types:
    - uid: FailureThreshold
requestHeader: []
definitions:
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: RemediationFilters
  description: The filters that will be applied to determine which resources to remediate.
  kind: object
  properties:
  - name: locations
    description: The resource locations that will be remediated.
    types:
    - uid: string
      isArray: true
- name: RemediationDeploymentSummary
  description: The deployment status summary for all deployments created by the remediation.
  kind: object
  properties:
  - name: totalDeployments
    isReadyOnly: true
    description: The number of deployments required by the remediation.
    types:
    - uid: integer
  - name: successfulDeployments
    isReadyOnly: true
    description: The number of deployments required by the remediation that have succeeded.
    types:
    - uid: integer
  - name: failedDeployments
    isReadyOnly: true
    description: The number of deployments required by the remediation that have failed.
    types:
    - uid: integer
- name: FailureThreshold
  description: The remediation failure threshold settings
  kind: object
  properties:
  - name: percentage
    description: A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold.
    types:
    - uid: number
- name: Remediation
  description: The remediation definition.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The ID of the remediation.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the remediation.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the remediation.
    types:
    - uid: string
  - name: systemData
    isReadyOnly: true
    description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
    types:
    - uid: systemData
  - name: properties.policyAssignmentId
    description: The resource ID of the policy assignment that should be remediated.
    types:
    - uid: string
  - name: properties.policyDefinitionReferenceId
    description: The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
    types:
    - uid: string
  - name: properties.resourceDiscoveryMode
    description: The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
    types:
    - uid: ResourceDiscoveryMode
  - name: properties.provisioningState
    isReadyOnly: true
    description: The status of the remediation.
    types:
    - uid: string
  - name: properties.createdOn
    isReadyOnly: true
    description: The time at which the remediation was created.
    types:
    - uid: string
  - name: properties.lastUpdatedOn
    isReadyOnly: true
    description: The time at which the remediation was last updated.
    types:
    - uid: string
  - name: properties.filters
    description: The filters that will be applied to determine which resources to remediate.
    types:
    - uid: RemediationFilters
  - name: properties.deploymentStatus
    isReadyOnly: true
    description: The deployment status summary for all deployments created by the remediation.
    types:
    - uid: RemediationDeploymentSummary
  - name: properties.statusMessage
    isReadyOnly: true
    description: The remediation status message. Provides additional details regarding the state of the remediation.
    types:
    - uid: string
  - name: properties.correlationId
    isReadyOnly: true
    description: The remediation correlation Id. Can be used to find events related to the remediation in the activity log.
    types:
    - uid: string
  - name: properties.resourceCount
    description: Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used.
    types:
    - uid: integer
  - name: properties.parallelDeployments
    description: Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used.
    types:
    - uid: integer
  - name: properties.failureThreshold
    description: The remediation failure threshold settings
    types:
    - uid: FailureThreshold
- name: ErrorResponse
  description: Error response.
  kind: object
  properties:
  - name: error
    description: The error details.
    types:
    - uid: ErrorDefinition
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: ResourceDiscoveryMode
  description: The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
  kind: enum
  properties:
  - name: ExistingNonCompliant
    description: Remediate resources that are already known to be non-compliant.
    types:
    - uid: string
  - name: ReEvaluateCompliance
    description: Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant.
    types:
    - uid: string
- name: ErrorDefinition
  description: Error definition.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Service specific error code which serves as the substatus for the HTTP error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Description of the error.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The target of the error.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: Internal error details.
    types:
    - uid: ErrorDefinition
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: Additional scenario specific error details.
    types:
    - uid: TypedErrorInfo
      isArray: true
- name: TypedErrorInfo
  description: Scenario specific error details.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The type of included error details.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The scenario specific error details.
    types:
    - {}
examples:
- name: Create remediation at individual resource scope
  request:
    uri: PUT https://management.azure.com/subscriptions/35ee058e-5fa0-414c-8145-3ebb8d09b6e2/resourcegroups/myResourceGroup/providers/microsoft.storage/storageaccounts/storAc1/providers/Microsoft.PolicyInsights/remediations/storageRemediation?api-version=2021-10-01
    body: >-
      {
        "properties": {
          "policyAssignmentId": "/subscriptions/35ee058e-5fa0-414c-8145-3ebb8d09b6e2/resourceGroups/myResourceGroup/providers/microsoft.authorization/policyassignments/b101830944f246d8a14088c5"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/35ee058e-5fa0-414c-8145-3ebb8d09b6e2/resourcegroups/myResourceGroup/providers/microsoft.storage/storageaccounts/storAc1/providers/Microsoft.PolicyInsights/remediations/storageRemediation?api-version=2021-10-01

      {
        "properties": {
          "policyAssignmentId": "/subscriptions/35ee058e-5fa0-414c-8145-3ebb8d09b6e2/resourceGroups/myResourceGroup/providers/microsoft.authorization/policyassignments/b101830944f246d8a14088c5"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.policyinsights.fluent.models.RemediationInner;

      /** Samples for Remediations CreateOrUpdateAtResource. */
      public final class Main {
          /*
           * x-ms-original-file: specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2021-10-01/examples/Remediations_CreateResourceScope.json
           */
          /**
           * Sample code: Create remediation at individual resource scope.
           *
           * @param manager Entry point to PolicyInsightsManager.
           */
          public static void createRemediationAtIndividualResourceScope(
              com.azure.resourcemanager.policyinsights.PolicyInsightsManager manager) {
              manager
                  .remediations()
                  .createOrUpdateAtResourceWithResponse(
                      "subscriptions/35ee058e-5fa0-414c-8145-3ebb8d09b6e2/resourcegroups/myResourceGroup/providers/microsoft.storage/storageaccounts/storAc1",
                      "storageRemediation",
                      new RemediationInner()
                          .withPolicyAssignmentId(
                              "/subscriptions/35ee058e-5fa0-414c-8145-3ebb8d09b6e2/resourceGroups/myResourceGroup/providers/microsoft.authorization/policyassignments/b101830944f246d8a14088c5"),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-policyinsights_1.0.0-beta.3/sdk/policyinsights/azure-resourcemanager-policyinsights/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpolicyinsights_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/policyinsights/armpolicyinsights"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2021-10-01/examples/Remediations_CreateResourceScope.json
      func ExampleRemediationsClient_CreateOrUpdateAtResource() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpolicyinsights.NewRemediationsClient("<subscription-id>", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CreateOrUpdateAtResource(ctx, "subscriptions/35ee058e-5fa0-414c-8145-3ebb8d09b6e2/resourcegroups/myResourceGroup/providers/microsoft.storage/storageaccounts/storAc1", "storageRemediation", armpolicyinsights.Remediation{
      		Properties: &armpolicyinsights.RemediationProperties{
      			PolicyAssignmentID: to.Ptr("/subscriptions/35ee058e-5fa0-414c-8145-3ebb8d09b6e2/resourceGroups/myResourceGroup/providers/microsoft.authorization/policyassignments/b101830944f246d8a14088c5"),
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fpolicyinsights%2Farmpolicyinsights%2Fv0.6.0/sdk/resourcemanager/policyinsights/armpolicyinsights/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "policyAssignmentId": "/subscriptions/35ee058e-5fa0-414c-8145-3ebb8d09b6e2/resourceGroups/myResourceGroup/providers/microsoft.authorization/policyassignments/b101830944f246d8a14088c5",
          "provisioningState": "Accepted",
          "createdOn": "2018-09-12T20:58:58.7531298Z",
          "lastUpdatedOn": "2018-09-12T20:58:58.7531298Z",
          "resourceDiscoveryMode": "ExistingNonCompliant",
          "deploymentStatus": {
            "totalDeployments": 2,
            "successfulDeployments": 0,
            "failedDeployments": 0
          },
          "statusMessage": "Remediation extended status",
          "correlationId": "a14e1d60-dae9-4771-b4be-a556d69e77a6"
        },
        "id": "/subscriptions/35ee058e-5fa0-414c-8145-3ebb8d09b6e2/resourcegroups/myResourceGroup/providers/microsoft.storage/storageaccounts/storAc1/providers/microsoft.policyinsights/remediations/storageRemediation",
        "name": "storageRemediation",
        "type": "Microsoft.PolicyInsights/remediations",
        "systemData": {
          "createdBy": "b69a9388-9488-4534-b470-7ec6d41beef6",
          "createdByType": "User",
          "createdAt": "2018-09-12T20:58:58.7531298Z",
          "lastModifiedBy": "b69a9388-9488-4534-b470-7ec6d41beef6",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2018-09-12T20:58:58.7531298Z"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "policyAssignmentId": "/subscriptions/35ee058e-5fa0-414c-8145-3ebb8d09b6e2/resourceGroups/myResourceGroup/providers/microsoft.authorization/policyassignments/b101830944f246d8a14088c5",
          "provisioningState": "Accepted",
          "createdOn": "2018-09-12T20:58:58.7531298Z",
          "lastUpdatedOn": "2018-09-12T20:58:58.7531298Z",
          "resourceDiscoveryMode": "ExistingNonCompliant",
          "deploymentStatus": {
            "totalDeployments": 2,
            "successfulDeployments": 0,
            "failedDeployments": 0
          },
          "statusMessage": "Remediation extended status",
          "correlationId": "a14e1d60-dae9-4771-b4be-a556d69e77a6"
        },
        "id": "/subscriptions/35ee058e-5fa0-414c-8145-3ebb8d09b6e2/resourcegroups/myResourceGroup/providers/microsoft.storage/storageaccounts/storAc1/providers/microsoft.policyinsights/remediations/storageRemediation",
        "name": "storageRemediation",
        "type": "Microsoft.PolicyInsights/remediations",
        "systemData": {
          "createdBy": "b69a9388-9488-4534-b470-7ec6d41beef6",
          "createdByType": "User",
          "createdAt": "2018-09-12T20:58:58.7531298Z",
          "lastModifiedBy": "b69a9388-9488-4534-b470-7ec6d41beef6",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2018-09-12T20:58:58.7531298Z"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Policy service - Creates or updates a remediation at resource scope.
errorCodes: []
