### YamlMime:RESTOperation
uid: management.azure.com.policy.policystates.listqueryresultsforsubscription
name: List Query Results For Subscription
service: Policy
groupName: Policy States
apiVersion: 2019-10-01
summary: Queries policy states for the resources under the subscription.
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults?api-version=2019-10-01
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults?api-version=2019-10-01&$top={$top}&$orderby={$orderby}&$select={$select}&$from={$from}&$to={$to}&$filter={$filter}&$apply={$apply}&$skiptoken={$skiptoken}
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Microsoft Azure subscription ID.
  types:
  - uid: string
- name: policyStatesResource
  in: path
  isRequired: true
  description: The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s).
  types:
  - uid: PolicyStatesResource
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
- name: $top
  in: query
  description: Maximum number of records to return.
  types:
  - uid: integer
  format: int32
- name: $orderby
  in: query
  description: Ordering expression using OData notation. One or more comma-separated column names with an optional "desc" (the default) or "asc", e.g. "$orderby=PolicyAssignmentId, ResourceId asc".
  types:
  - uid: string
- name: $select
  in: query
  description: Select expression using OData notation. Limits the columns on each record to just those requested, e.g. "$select=PolicyAssignmentId, ResourceId".
  types:
  - uid: string
- name: $from
  in: query
  description: ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day).
  types:
  - uid: string
  format: date-time
- name: $to
  in: query
  description: ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time.
  types:
  - uid: string
  format: date-time
- name: $filter
  in: query
  description: OData filter expression.
  types:
  - uid: string
- name: $apply
  in: query
  description: OData apply expression for aggregations.
  types:
  - uid: string
- name: $skiptoken
  in: query
  description: Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Query results.
  types:
  - uid: PolicyStatesQueryResults
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: QueryFailure
requestHeader: []
definitions:
- name: PolicyStatesResource
  description: The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s).
  kind: enum
  properties:
  - name: default
    types:
    - uid: string
  - name: latest
    types:
    - uid: string
- name: PolicyStatesQueryResults
  description: Query results.
  kind: object
  properties:
  - name: '@odata.context'
    description: OData context string; used by OData clients to resolve type information based on metadata.
    types:
    - uid: string
  - name: '@odata.count'
    description: OData entity count; represents the number of policy state records returned.
    types:
    - uid: integer
  - name: '@odata.nextLink'
    description: Odata next link; URL to get the next set of results.
    types:
    - uid: string
  - name: value
    description: Query results.
    types:
    - uid: PolicyState
      isArray: true
- name: QueryFailure
  description: Error response.
  kind: object
  properties:
  - name: error
    description: Error definition.
    types:
    - uid: Error
- name: PolicyState
  description: Policy state record.
  kind: object
  properties:
  - name: '@odata.id'
    description: OData entity ID; always set to null since policy state records do not have an entity ID.
    types:
    - uid: string
  - name: '@odata.context'
    description: OData context string; used by OData clients to resolve type information based on metadata.
    types:
    - uid: string
  - name: timestamp
    description: Timestamp for the policy state record.
    types:
    - uid: string
  - name: resourceId
    description: Resource ID.
    types:
    - uid: string
  - name: policyAssignmentId
    description: Policy assignment ID.
    types:
    - uid: string
  - name: policyDefinitionId
    description: Policy definition ID.
    types:
    - uid: string
  - name: effectiveParameters
    description: Effective parameters for the policy assignment.
    types:
    - uid: string
  - name: isCompliant
    description: Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead.
    types:
    - uid: boolean
  - name: subscriptionId
    description: Subscription ID.
    types:
    - uid: string
  - name: resourceType
    description: Resource type.
    types:
    - uid: string
  - name: resourceLocation
    description: Resource location.
    types:
    - uid: string
  - name: resourceGroup
    description: Resource group name.
    types:
    - uid: string
  - name: resourceTags
    description: List of resource tags.
    types:
    - uid: string
  - name: policyAssignmentName
    description: Policy assignment name.
    types:
    - uid: string
  - name: policyAssignmentOwner
    description: Policy assignment owner.
    types:
    - uid: string
  - name: policyAssignmentParameters
    description: Policy assignment parameters.
    types:
    - uid: string
  - name: policyAssignmentScope
    description: Policy assignment scope.
    types:
    - uid: string
  - name: policyDefinitionName
    description: Policy definition name.
    types:
    - uid: string
  - name: policyDefinitionAction
    description: Policy definition action, i.e. effect.
    types:
    - uid: string
  - name: policyDefinitionCategory
    description: Policy definition category.
    types:
    - uid: string
  - name: policySetDefinitionId
    description: Policy set definition ID, if the policy assignment is for a policy set.
    types:
    - uid: string
  - name: policySetDefinitionName
    description: Policy set definition name, if the policy assignment is for a policy set.
    types:
    - uid: string
  - name: policySetDefinitionOwner
    description: Policy set definition owner, if the policy assignment is for a policy set.
    types:
    - uid: string
  - name: policySetDefinitionCategory
    description: Policy set definition category, if the policy assignment is for a policy set.
    types:
    - uid: string
  - name: policySetDefinitionParameters
    description: Policy set definition parameters, if the policy assignment is for a policy set.
    types:
    - uid: string
  - name: managementGroupIds
    description: Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under.
    types:
    - uid: string
  - name: policyDefinitionReferenceId
    description: Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set.
    types:
    - uid: string
  - name: complianceState
    description: Compliance state of the resource.
    types:
    - uid: string
  - name: policyEvaluationDetails
    description: Policy evaluation details.
    types:
    - uid: PolicyEvaluationDetails
  - name: policyDefinitionGroupNames
    description: Policy definition group names.
    types:
    - uid: string
      isArray: true
  - name: components
    description: Components state compliance records populated only when URL contains $expand=components clause.
    types:
    - uid: ComponentStateDetails
      isArray: true
  - name: policyDefinitionVersion
    isReadyOnly: true
    description: Evaluated policy definition version.
    types:
    - uid: string
  - name: policySetDefinitionVersion
    isReadyOnly: true
    description: Evaluated policy set definition version.
    types:
    - uid: string
  - name: policyAssignmentVersion
    isReadyOnly: true
    description: Evaluated policy assignment version.
    types:
    - uid: string
- name: Error
  description: Error definition.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Service specific error code which serves as the substatus for the HTTP error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Description of the error.
    types:
    - uid: string
- name: PolicyEvaluationDetails
  description: Policy evaluation details.
  kind: object
  properties:
  - name: evaluatedExpressions
    description: Details of the evaluated expressions.
    types:
    - uid: ExpressionEvaluationDetails
      isArray: true
  - name: ifNotExistsDetails
    description: Evaluation details of IfNotExists effect.
    types:
    - uid: IfNotExistsEvaluationDetails
- name: ComponentStateDetails
  description: Component state details.
  kind: object
  properties:
  - name: id
    description: Component Id.
    types:
    - uid: string
  - name: type
    description: Component type.
    types:
    - uid: string
  - name: name
    description: Component name.
    types:
    - uid: string
  - name: timestamp
    description: Component compliance evaluation timestamp.
    types:
    - uid: string
  - name: complianceState
    description: Component compliance state.
    types:
    - uid: string
- name: ExpressionEvaluationDetails
  description: Evaluation details of policy language expressions.
  kind: object
  properties:
  - name: result
    description: Evaluation result.
    types:
    - uid: string
  - name: expression
    description: Expression evaluated.
    types:
    - uid: string
  - name: expressionKind
    isReadyOnly: true
    description: The kind of expression that was evaluated.
    types:
    - uid: string
  - name: path
    description: Property path if the expression is a field or an alias.
    types:
    - uid: string
  - name: expressionValue
    description: Value of the expression.
    types:
    - uid: object
  - name: targetValue
    description: Target value to be compared with the expression value.
    types:
    - uid: object
  - name: operator
    description: Operator to compare the expression value and the target value.
    types:
    - uid: string
- name: IfNotExistsEvaluationDetails
  description: Evaluation details of IfNotExists effect.
  kind: object
  properties:
  - name: resourceId
    description: ID of the last evaluated resource for IfNotExists effect.
    types:
    - uid: string
  - name: totalResources
    description: Total number of resources to which the existence condition is applicable.
    types:
    - uid: integer
examples:
- name: Query latest at subscription scope
  request:
    uri: POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.policyinsights.models.PolicyStatesResource;

      /** Samples for PolicyStates ListQueryResultsForSubscription. */
      public final class Main {
          /*
           * x-ms-original-file: specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_QuerySubscriptionScope.json
           */
          /**
           * Sample code: Query latest at subscription scope.
           *
           * @param manager Entry point to PolicyInsightsManager.
           */
          public static void queryLatestAtSubscriptionScope(
              com.azure.resourcemanager.policyinsights.PolicyInsightsManager manager) {
              manager
                  .policyStates()
                  .listQueryResultsForSubscription(
                      PolicyStatesResource.LATEST,
                      "fffedd8f-ffff-fffd-fffd-fffed2f84852",
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-policyinsights_1.0.0-beta.3/sdk/policyinsights/azure-resourcemanager-policyinsights/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpolicyinsights_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/policyinsights/armpolicyinsights"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_QuerySubscriptionScope.json
      func ExamplePolicyStatesClient_NewListQueryResultsForSubscriptionPager_queryLatestAtSubscriptionScope() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpolicyinsights.NewPolicyStatesClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListQueryResultsForSubscriptionPager(armpolicyinsights.PolicyStatesResourceLatest, "fffedd8f-ffff-fffd-fffd-fffed2f84852", &armpolicyinsights.QueryOptions{Top: nil,
      		Filter:    nil,
      		OrderBy:   nil,
      		Select:    nil,
      		From:      nil,
      		To:        nil,
      		Apply:     nil,
      		SkipToken: nil,
      		Expand:    nil,
      	}, nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fpolicyinsights%2Farmpolicyinsights%2Fv0.6.0/sdk/resourcemanager/policyinsights/armpolicyinsights/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "@odata.nextLink": null,
        "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest",
        "@odata.count": 2,
        "value": [
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "timestamp": "2019-10-09T17:48:05Z",
            "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourceGroups/myrg1/providers/Microsoft.Network/publicIPAddresses/mypubip1",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.Authorization/policyAssignments/Enable Monitoring in Azure Security Center",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6",
            "effectiveParameters": null,
            "isCompliant": false,
            "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
            "resourceType": "/Microsoft.Network/publicIPAddresses",
            "resourceLocation": "eastus",
            "resourceGroup": "myrg1",
            "resourceTags": "tbd",
            "policyAssignmentName": "Enable Monitoring in Azure Security Center",
            "policyAssignmentOwner": "tbd",
            "policyAssignmentParameters": "{}",
            "policyAssignmentScope": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852",
            "policyDefinitionName": "9daedab3-fb2d-461e-b861-71790eead4f6",
            "policyDefinitionAction": "AuditIfNotExists",
            "policyDefinitionCategory": "tbd",
            "policySetDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
            "policySetDefinitionName": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
            "policySetDefinitionOwner": null,
            "policySetDefinitionCategory": null,
            "policySetDefinitionParameters": null,
            "managementGroupIds": "mymg,fff988bf-fff1-ffff-fffb-fffcd011db47",
            "policyDefinitionReferenceId": null,
            "complianceState": "NonCompliant",
            "policyDefinitionGroupNames": [
              "myGroup"
            ],
            "policyDefinitionVersion": "1.0.0-preview",
            "policySetDefinitionVersion": "2.0.1",
            "policyAssignmentVersion": "1.0.0"
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "timestamp": "2019-10-09T17:48:05Z",
            "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourceGroups/myrg1/providers/Microsoft.Network/publicIPAddresses/mypubip1",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.Authorization/policyAssignments/9ac09b0657d942e5ad4041a6",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6",
            "effectiveParameters": null,
            "isCompliant": false,
            "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
            "resourceType": "/Microsoft.Network/publicIPAddresses",
            "resourceLocation": "eastus",
            "resourceGroup": "myrg1",
            "resourceTags": "tbd",
            "policyAssignmentName": "9ac09b0657d942e5ad4041a6",
            "policyAssignmentOwner": "tbd",
            "policyAssignmentParameters": "{}",
            "policyAssignmentScope": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852",
            "policyDefinitionName": "9daedab3-fb2d-461e-b861-71790eead4f6",
            "policyDefinitionAction": "AuditIfNotExists",
            "policyDefinitionCategory": "tbd",
            "policySetDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
            "policySetDefinitionName": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
            "policySetDefinitionOwner": null,
            "policySetDefinitionCategory": null,
            "policySetDefinitionParameters": null,
            "managementGroupIds": "mymg,fff988bf-fff1-ffff-fffb-fffcd011db47",
            "policyDefinitionReferenceId": null,
            "complianceState": "NonCompliant",
            "policyDefinitionGroupNames": [
              "myGroup"
            ],
            "policyDefinitionVersion": "1.0.0-preview",
            "policySetDefinitionVersion": "2.0.1",
            "policyAssignmentVersion": "1.0.0"
          }
        ]
      }
- name: Query latest at subscription scope with next link
  request:
    uri: POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01&$skiptoken=WpmWfBSvPhkAK6QD
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01&$skiptoken=WpmWfBSvPhkAK6QD
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.policyinsights.models.PolicyStatesResource;

      /** Samples for PolicyStates ListQueryResultsForSubscription. */
      public final class Main {
          /*
           * x-ms-original-file: specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_QuerySubscriptionScopeNextLink.json
           */
          /**
           * Sample code: Query latest at subscription scope with next link.
           *
           * @param manager Entry point to PolicyInsightsManager.
           */
          public static void queryLatestAtSubscriptionScopeWithNextLink(
              com.azure.resourcemanager.policyinsights.PolicyInsightsManager manager) {
              manager
                  .policyStates()
                  .listQueryResultsForSubscription(
                      PolicyStatesResource.LATEST,
                      "fffedd8f-ffff-fffd-fffd-fffed2f84852",
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      "WpmWfBSvPhkAK6QD",
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-policyinsights_1.0.0-beta.3/sdk/policyinsights/azure-resourcemanager-policyinsights/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpolicyinsights_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/policyinsights/armpolicyinsights"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_QuerySubscriptionScopeNextLink.json
      func ExamplePolicyStatesClient_NewListQueryResultsForSubscriptionPager_queryLatestAtSubscriptionScopeWithNextLink() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpolicyinsights.NewPolicyStatesClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListQueryResultsForSubscriptionPager(armpolicyinsights.PolicyStatesResourceLatest, "fffedd8f-ffff-fffd-fffd-fffed2f84852", &armpolicyinsights.QueryOptions{Top: nil,
      		Filter:    nil,
      		OrderBy:   nil,
      		Select:    nil,
      		From:      nil,
      		To:        nil,
      		Apply:     nil,
      		SkipToken: to.Ptr("WpmWfBSvPhkAK6QD"),
      		Expand:    nil,
      	}, nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fpolicyinsights%2Farmpolicyinsights%2Fv0.6.0/sdk/resourcemanager/policyinsights/armpolicyinsights/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "@odata.nextLink": null,
        "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest",
        "@odata.count": 2,
        "value": [
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "timestamp": "2019-10-09T17:48:05Z",
            "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourceGroups/myrg1/providers/Microsoft.Network/publicIPAddresses/mypubip1",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.Authorization/policyAssignments/Enable Monitoring in Azure Security Center",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6",
            "effectiveParameters": null,
            "isCompliant": false,
            "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
            "resourceType": "/Microsoft.Network/publicIPAddresses",
            "resourceLocation": "eastus",
            "resourceGroup": "myrg1",
            "resourceTags": "tbd",
            "policyAssignmentName": "Enable Monitoring in Azure Security Center",
            "policyAssignmentOwner": "tbd",
            "policyAssignmentParameters": "{}",
            "policyAssignmentScope": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852",
            "policyDefinitionName": "9daedab3-fb2d-461e-b861-71790eead4f6",
            "policyDefinitionAction": "AuditIfNotExists",
            "policyDefinitionCategory": "tbd",
            "policySetDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
            "policySetDefinitionName": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
            "policySetDefinitionOwner": null,
            "policySetDefinitionCategory": null,
            "policySetDefinitionParameters": null,
            "managementGroupIds": "mymg,fff988bf-fff1-ffff-fffb-fffcd011db47",
            "policyDefinitionReferenceId": null,
            "complianceState": "NonCompliant",
            "policyDefinitionGroupNames": [
              "myGroup"
            ]
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "timestamp": "2019-10-09T17:48:05Z",
            "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourceGroups/myrg1/providers/Microsoft.Network/publicIPAddresses/mypubip1",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.Authorization/policyAssignments/9ac09b0657d942e5ad4041a6",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6",
            "effectiveParameters": null,
            "isCompliant": false,
            "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
            "resourceType": "/Microsoft.Network/publicIPAddresses",
            "resourceLocation": "eastus",
            "resourceGroup": "myrg1",
            "resourceTags": "tbd",
            "policyAssignmentName": "9ac09b0657d942e5ad4041a6",
            "policyAssignmentOwner": "tbd",
            "policyAssignmentParameters": "{}",
            "policyAssignmentScope": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852",
            "policyDefinitionName": "9daedab3-fb2d-461e-b861-71790eead4f6",
            "policyDefinitionAction": "AuditIfNotExists",
            "policyDefinitionCategory": "tbd",
            "policySetDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
            "policySetDefinitionName": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
            "policySetDefinitionOwner": null,
            "policySetDefinitionCategory": null,
            "policySetDefinitionParameters": null,
            "managementGroupIds": "mymg,fff988bf-fff1-ffff-fffb-fffcd011db47",
            "policyDefinitionReferenceId": null,
            "complianceState": "NonCompliant",
            "policyDefinitionGroupNames": [
              "myGroup"
            ]
          }
        ]
      }
- name: Time range; sort, select and limit
  request:
    uri: POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01&$top=2&$orderby=Timestamp desc, PolicyAssignmentId asc, SubscriptionId asc, ResourceGroup asc, ResourceId&$select=Timestamp, PolicyAssignmentId, PolicyDefinitionId, SubscriptionId, ResourceGroup, ResourceId, policyDefinitionGroupNames&$from=2019-10-05T18:00:00Z&$to=2019-10-06T18:00:00Z
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01&$top=2&$orderby=Timestamp desc, PolicyAssignmentId asc, SubscriptionId asc, ResourceGroup asc, ResourceId&$select=Timestamp, PolicyAssignmentId, PolicyDefinitionId, SubscriptionId, ResourceGroup, ResourceId, policyDefinitionGroupNames&$from=2019-10-05T18:00:00Z&$to=2019-10-06T18:00:00Z
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.policyinsights.models.PolicyStatesResource;
      import java.time.OffsetDateTime;

      /** Samples for PolicyStates ListQueryResultsForSubscription. */
      public final class Main {
          /*
           * x-ms-original-file: specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_TimeRangeSortSelectTop.json
           */
          /**
           * Sample code: Time range; sort, select and limit.
           *
           * @param manager Entry point to PolicyInsightsManager.
           */
          public static void timeRangeSortSelectAndLimit(
              com.azure.resourcemanager.policyinsights.PolicyInsightsManager manager) {
              manager
                  .policyStates()
                  .listQueryResultsForSubscription(
                      PolicyStatesResource.LATEST,
                      "fffedd8f-ffff-fffd-fffd-fffed2f84852",
                      2,
                      "Timestamp desc, PolicyAssignmentId asc, SubscriptionId asc, ResourceGroup asc, ResourceId",
                      "Timestamp, PolicyAssignmentId, PolicyDefinitionId, SubscriptionId, ResourceGroup, ResourceId,"
                          + " policyDefinitionGroupNames",
                      OffsetDateTime.parse("2019-10-05T18:00:00Z"),
                      OffsetDateTime.parse("2019-10-06T18:00:00Z"),
                      null,
                      null,
                      null,
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-policyinsights_1.0.0-beta.3/sdk/policyinsights/azure-resourcemanager-policyinsights/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpolicyinsights_test

      import (
      	"context"
      	"log"

      	"time"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/policyinsights/armpolicyinsights"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_TimeRangeSortSelectTop.json
      func ExamplePolicyStatesClient_NewListQueryResultsForSubscriptionPager_timeRangeSortSelectAndLimit() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpolicyinsights.NewPolicyStatesClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListQueryResultsForSubscriptionPager(armpolicyinsights.PolicyStatesResourceLatest, "fffedd8f-ffff-fffd-fffd-fffed2f84852", &armpolicyinsights.QueryOptions{Top: to.Ptr[int32](2),
      		Filter:    nil,
      		OrderBy:   to.Ptr("Timestamp desc, PolicyAssignmentId asc, SubscriptionId asc, ResourceGroup asc, ResourceId"),
      		Select:    to.Ptr("Timestamp, PolicyAssignmentId, PolicyDefinitionId, SubscriptionId, ResourceGroup, ResourceId, policyDefinitionGroupNames"),
      		From:      to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2019-10-05T18:00:00Z"); return t }()),
      		To:        to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2019-10-06T18:00:00Z"); return t }()),
      		Apply:     nil,
      		SkipToken: nil,
      		Expand:    nil,
      	}, nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fpolicyinsights%2Farmpolicyinsights%2Fv0.6.0/sdk/resourcemanager/policyinsights/armpolicyinsights/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest",
        "@odata.count": 2,
        "value": [
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "timestamp": "2019-10-06T17:58:00Z",
            "policyAssignmentId": "/providers/Microsoft.Management/managementGroups/8cb1e007-947f-423a-ad0c-7ab7dc7d0255/providers/Microsoft.Authorization/policyAssignments/1654a0254ab34920a60f94eb",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/655cb504-bcee-4362-bd4c-402e6aa38759",
            "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
            "resourceGroup": "myrg1",
            "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourceGroups/myrg1/providers/Microsoft.Storage/storageAccounts/mysa1",
            "policyDefinitionGroupNames": [
              "myGroup"
            ]
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "timestamp": "2019-10-06T17:58:00Z",
            "policyAssignmentId": "/providers/Microsoft.Management/managementGroups/8cb1e007-947f-423a-ad0c-7ab7dc7d0255/providers/Microsoft.Authorization/policyAssignments/1654a0254ab34920a60f94eb",
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/655cb504-bcee-4362-bd4c-402e6aa38759",
            "subscriptionId": "fffedd8f-ffff-fffd-fffd-fffed2f84852",
            "resourceGroup": "myrg2",
            "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourceGroups/myrg2/providers/Microsoft.Storage/storageAccounts/mysa2",
            "policyDefinitionGroupNames": []
          }
        ]
      }
- name: Filter and group with aggregate
  request:
    uri: POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01&$top=2&$orderby=NumAuditDenyNonComplianceRecords desc&$from=2019-10-05T18:00:00Z&$filter=IsCompliant eq false and (PolicyDefinitionAction eq 'audit' or PolicyDefinitionAction eq 'deny')&$apply=groupby((PolicyAssignmentId, PolicyDefinitionId, PolicyDefinitionAction, ResourceId), aggregate($count as NumAuditDenyNonComplianceRecords))
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01&$top=2&$orderby=NumAuditDenyNonComplianceRecords desc&$from=2019-10-05T18:00:00Z&$filter=IsCompliant eq false and (PolicyDefinitionAction eq 'audit' or PolicyDefinitionAction eq 'deny')&$apply=groupby((PolicyAssignmentId, PolicyDefinitionId, PolicyDefinitionAction, ResourceId), aggregate($count as NumAuditDenyNonComplianceRecords))
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.policyinsights.models.PolicyStatesResource;
      import java.time.OffsetDateTime;

      /** Samples for PolicyStates ListQueryResultsForSubscription. */
      public final class Main {
          /*
           * x-ms-original-file: specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_FilterAndGroupByWithAggregate.json
           */
          /**
           * Sample code: Filter and group with aggregate.
           *
           * @param manager Entry point to PolicyInsightsManager.
           */
          public static void filterAndGroupWithAggregate(
              com.azure.resourcemanager.policyinsights.PolicyInsightsManager manager) {
              manager
                  .policyStates()
                  .listQueryResultsForSubscription(
                      PolicyStatesResource.LATEST,
                      "fffedd8f-ffff-fffd-fffd-fffed2f84852",
                      2,
                      "NumAuditDenyNonComplianceRecords desc",
                      null,
                      OffsetDateTime.parse("2019-10-05T18:00:00Z"),
                      null,
                      "IsCompliant eq false and (PolicyDefinitionAction eq 'audit' or PolicyDefinitionAction eq 'deny')",
                      "groupby((PolicyAssignmentId, PolicyDefinitionId, PolicyDefinitionAction, ResourceId), aggregate($count"
                          + " as NumAuditDenyNonComplianceRecords))",
                      null,
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-policyinsights_1.0.0-beta.3/sdk/policyinsights/azure-resourcemanager-policyinsights/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpolicyinsights_test

      import (
      	"context"
      	"log"

      	"time"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/policyinsights/armpolicyinsights"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_FilterAndGroupByWithAggregate.json
      func ExamplePolicyStatesClient_NewListQueryResultsForSubscriptionPager_filterAndGroupWithAggregate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpolicyinsights.NewPolicyStatesClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListQueryResultsForSubscriptionPager(armpolicyinsights.PolicyStatesResourceLatest, "fffedd8f-ffff-fffd-fffd-fffed2f84852", &armpolicyinsights.QueryOptions{Top: to.Ptr[int32](2),
      		Filter:    to.Ptr("IsCompliant eq false and (PolicyDefinitionAction eq 'audit' or PolicyDefinitionAction eq 'deny')"),
      		OrderBy:   to.Ptr("NumAuditDenyNonComplianceRecords desc"),
      		Select:    nil,
      		From:      to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2019-10-05T18:00:00Z"); return t }()),
      		To:        nil,
      		Apply:     to.Ptr("groupby((PolicyAssignmentId, PolicyDefinitionId, PolicyDefinitionAction, ResourceId), aggregate($count as NumAuditDenyNonComplianceRecords))"),
      		SkipToken: nil,
      		Expand:    nil,
      	}, nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fpolicyinsights%2Farmpolicyinsights%2Fv0.6.0/sdk/resourcemanager/policyinsights/armpolicyinsights/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest",
        "@odata.count": 2,
        "value": [
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/e46af646ebdb461dba708e01",
            "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/c8b79b49-a579-4045-984e-1b249ab8b474",
            "policyDefinitionAction": "audit",
            "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourcegroups/myrg/providers/microsoft.classiccompute/domainnames/myDomainName",
            "NumAuditDenyNonComplianceRecords": 10
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/ddd8ef92e3714a5ea3d208c1",
            "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
            "policyDefinitionAction": "audit",
            "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourcegroups/myrg/providers/microsoft.classiccompute/domainnames/myDomainName",
            "NumAuditDenyNonComplianceRecords": 10
          }
        ]
      }
- name: Filter and group without aggregate
  request:
    uri: POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01&$top=2&$from=2019-10-05T18:00:00Z&$filter=IsCompliant eq false and (PolicyDefinitionAction ne 'audit' and PolicyDefinitionAction ne 'append')&$apply=groupby((PolicyAssignmentId, PolicyDefinitionId, PolicyDefinitionAction, ResourceId))
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01&$top=2&$from=2019-10-05T18:00:00Z&$filter=IsCompliant eq false and (PolicyDefinitionAction ne 'audit' and PolicyDefinitionAction ne 'append')&$apply=groupby((PolicyAssignmentId, PolicyDefinitionId, PolicyDefinitionAction, ResourceId))
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.policyinsights.models.PolicyStatesResource;
      import java.time.OffsetDateTime;

      /** Samples for PolicyStates ListQueryResultsForSubscription. */
      public final class Main {
          /*
           * x-ms-original-file: specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_FilterAndGroupByWithoutAggregate.json
           */
          /**
           * Sample code: Filter and group without aggregate.
           *
           * @param manager Entry point to PolicyInsightsManager.
           */
          public static void filterAndGroupWithoutAggregate(
              com.azure.resourcemanager.policyinsights.PolicyInsightsManager manager) {
              manager
                  .policyStates()
                  .listQueryResultsForSubscription(
                      PolicyStatesResource.LATEST,
                      "fffedd8f-ffff-fffd-fffd-fffed2f84852",
                      2,
                      null,
                      null,
                      OffsetDateTime.parse("2019-10-05T18:00:00Z"),
                      null,
                      "IsCompliant eq false and (PolicyDefinitionAction ne 'audit' and PolicyDefinitionAction ne 'append')",
                      "groupby((PolicyAssignmentId, PolicyDefinitionId, PolicyDefinitionAction, ResourceId))",
                      null,
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-policyinsights_1.0.0-beta.3/sdk/policyinsights/azure-resourcemanager-policyinsights/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpolicyinsights_test

      import (
      	"context"
      	"log"

      	"time"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/policyinsights/armpolicyinsights"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_FilterAndGroupByWithoutAggregate.json
      func ExamplePolicyStatesClient_NewListQueryResultsForSubscriptionPager_filterAndGroupWithoutAggregate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpolicyinsights.NewPolicyStatesClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListQueryResultsForSubscriptionPager(armpolicyinsights.PolicyStatesResourceLatest, "fffedd8f-ffff-fffd-fffd-fffed2f84852", &armpolicyinsights.QueryOptions{Top: to.Ptr[int32](2),
      		Filter:    to.Ptr("IsCompliant eq false and (PolicyDefinitionAction ne 'audit' and PolicyDefinitionAction ne 'append')"),
      		OrderBy:   nil,
      		Select:    nil,
      		From:      to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2019-10-05T18:00:00Z"); return t }()),
      		To:        nil,
      		Apply:     to.Ptr("groupby((PolicyAssignmentId, PolicyDefinitionId, PolicyDefinitionAction, ResourceId))"),
      		SkipToken: nil,
      		Expand:    nil,
      	}, nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fpolicyinsights%2Farmpolicyinsights%2Fv0.6.0/sdk/resourcemanager/policyinsights/armpolicyinsights/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest",
        "@odata.count": 2,
        "value": [
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/enable monitoring in azure security center",
            "policyDefinitionId": "/providers/microsoft.authorization/policydefinitions/44452482-524f-4bf4-b852-0bff7cc4a3ed",
            "policyDefinitionAction": "auditifnotexists",
            "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourcegroups/myrg/providers/microsoft.network/virtualnetworks/vnet"
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/89b27f38-e9e4-4468-ab81-801c84b8c017",
            "policyDefinitionId": "/providers/microsoft.authorization/policydefinitions/44452482-524f-4bf4-b852-0bff7cc4a3ed",
            "policyDefinitionAction": "auditifnotexists",
            "resourceId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/resourcegroups/myrg/providers/microsoft.network/virtualnetworks/vnet"
          }
        ]
      }
- name: Filter and aggregate only
  request:
    uri: POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01&$from=2019-10-05T18:00:00Z&$filter=PolicyDefinitionAction eq 'deny'&$apply=aggregate($count as NumDenyStates)
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01&$from=2019-10-05T18:00:00Z&$filter=PolicyDefinitionAction eq 'deny'&$apply=aggregate($count as NumDenyStates)
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.policyinsights.models.PolicyStatesResource;
      import java.time.OffsetDateTime;

      /** Samples for PolicyStates ListQueryResultsForSubscription. */
      public final class Main {
          /*
           * x-ms-original-file: specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_FilterAndAggregateOnly.json
           */
          /**
           * Sample code: Filter and aggregate only.
           *
           * @param manager Entry point to PolicyInsightsManager.
           */
          public static void filterAndAggregateOnly(com.azure.resourcemanager.policyinsights.PolicyInsightsManager manager) {
              manager
                  .policyStates()
                  .listQueryResultsForSubscription(
                      PolicyStatesResource.LATEST,
                      "fffedd8f-ffff-fffd-fffd-fffed2f84852",
                      null,
                      null,
                      null,
                      OffsetDateTime.parse("2019-10-05T18:00:00Z"),
                      null,
                      "PolicyDefinitionAction eq 'deny'",
                      "aggregate($count as NumDenyStates)",
                      null,
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-policyinsights_1.0.0-beta.3/sdk/policyinsights/azure-resourcemanager-policyinsights/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpolicyinsights_test

      import (
      	"context"
      	"log"

      	"time"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/policyinsights/armpolicyinsights"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_FilterAndAggregateOnly.json
      func ExamplePolicyStatesClient_NewListQueryResultsForSubscriptionPager_filterAndAggregateOnly() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpolicyinsights.NewPolicyStatesClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListQueryResultsForSubscriptionPager(armpolicyinsights.PolicyStatesResourceLatest, "fffedd8f-ffff-fffd-fffd-fffed2f84852", &armpolicyinsights.QueryOptions{Top: nil,
      		Filter:    to.Ptr("PolicyDefinitionAction eq 'deny'"),
      		OrderBy:   nil,
      		Select:    nil,
      		From:      to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2019-10-05T18:00:00Z"); return t }()),
      		To:        nil,
      		Apply:     to.Ptr("aggregate($count as NumDenyStates)"),
      		SkipToken: nil,
      		Expand:    nil,
      	}, nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fpolicyinsights%2Farmpolicyinsights%2Fv0.6.0/sdk/resourcemanager/policyinsights/armpolicyinsights/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest",
        "@odata.count": 1,
        "value": [
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "NumDenyStates": 6
          }
        ]
      }
- name: Filter and multiple groups
  request:
    uri: POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01&$top=10&$orderby=NumNonCompliantResources desc&$filter=IsCompliant eq false&$apply=groupby((PolicyAssignmentId, PolicySetDefinitionId, PolicyDefinitionId, PolicyDefinitionReferenceId, ResourceId))/groupby((PolicyAssignmentId, PolicySetDefinitionId, PolicyDefinitionId, PolicyDefinitionReferenceId), aggregate($count as NumNonCompliantResources))
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01&$top=10&$orderby=NumNonCompliantResources desc&$filter=IsCompliant eq false&$apply=groupby((PolicyAssignmentId, PolicySetDefinitionId, PolicyDefinitionId, PolicyDefinitionReferenceId, ResourceId))/groupby((PolicyAssignmentId, PolicySetDefinitionId, PolicyDefinitionId, PolicyDefinitionReferenceId), aggregate($count as NumNonCompliantResources))
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.policyinsights.models.PolicyStatesResource;

      /** Samples for PolicyStates ListQueryResultsForSubscription. */
      public final class Main {
          /*
           * x-ms-original-file: specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_FilterAndMultipleGroups.json
           */
          /**
           * Sample code: Filter and multiple groups.
           *
           * @param manager Entry point to PolicyInsightsManager.
           */
          public static void filterAndMultipleGroups(com.azure.resourcemanager.policyinsights.PolicyInsightsManager manager) {
              manager
                  .policyStates()
                  .listQueryResultsForSubscription(
                      PolicyStatesResource.LATEST,
                      "fffedd8f-ffff-fffd-fffd-fffed2f84852",
                      10,
                      "NumNonCompliantResources desc",
                      null,
                      null,
                      null,
                      "IsCompliant eq false",
                      "groupby((PolicyAssignmentId, PolicySetDefinitionId, PolicyDefinitionId, PolicyDefinitionReferenceId,"
                          + " ResourceId))/groupby((PolicyAssignmentId, PolicySetDefinitionId, PolicyDefinitionId,"
                          + " PolicyDefinitionReferenceId), aggregate($count as NumNonCompliantResources))",
                      null,
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-policyinsights_1.0.0-beta.3/sdk/policyinsights/azure-resourcemanager-policyinsights/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpolicyinsights_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/policyinsights/armpolicyinsights"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/policyinsights/resource-manager/Microsoft.PolicyInsights/stable/2019-10-01/examples/PolicyStates_FilterAndMultipleGroups.json
      func ExamplePolicyStatesClient_NewListQueryResultsForSubscriptionPager_filterAndMultipleGroups() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpolicyinsights.NewPolicyStatesClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListQueryResultsForSubscriptionPager(armpolicyinsights.PolicyStatesResourceLatest, "fffedd8f-ffff-fffd-fffd-fffed2f84852", &armpolicyinsights.QueryOptions{Top: to.Ptr[int32](10),
      		Filter:    to.Ptr("IsCompliant eq false"),
      		OrderBy:   to.Ptr("NumNonCompliantResources desc"),
      		Select:    nil,
      		From:      nil,
      		To:        nil,
      		Apply:     to.Ptr("groupby((PolicyAssignmentId, PolicySetDefinitionId, PolicyDefinitionId, PolicyDefinitionReferenceId, ResourceId))/groupby((PolicyAssignmentId, PolicySetDefinitionId, PolicyDefinitionId, PolicyDefinitionReferenceId), aggregate($count as NumNonCompliantResources))"),
      		SkipToken: nil,
      		Expand:    nil,
      	}, nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fpolicyinsights%2Farmpolicyinsights%2Fv0.6.0/sdk/resourcemanager/policyinsights/armpolicyinsights/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest",
        "@odata.count": 10,
        "value": [
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/f4cc58b7db524a9799381531",
            "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/12b58873-e0f8-4b95-936c-86cbe7c9d697",
            "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
            "policyDefinitionReferenceId": "14799174781370023846",
            "NumNonCompliantResources": 557
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/f4cc58b7db524a9799381531",
            "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/12b58873-e0f8-4b95-936c-86cbe7c9d697",
            "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
            "policyDefinitionReferenceId": "1679708035638239273",
            "NumNonCompliantResources": 557
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/ddd8ef92e3714a5ea3d208c1",
            "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/12b58873-e0f8-4b95-936c-86cbe7c9d697",
            "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
            "policyDefinitionReferenceId": "14799174781370023846",
            "NumNonCompliantResources": 557
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/ddd8ef92e3714a5ea3d208c1",
            "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/12b58873-e0f8-4b95-936c-86cbe7c9d697",
            "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
            "policyDefinitionReferenceId": "1679708035638239273",
            "NumNonCompliantResources": 557
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/d9da7e80af6344ab9d342aa7",
            "policySetDefinitionId": "",
            "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
            "policyDefinitionReferenceId": "",
            "NumNonCompliantResources": 557
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/dcda79d769674aea8bfcaa49",
            "policySetDefinitionId": "",
            "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/c8b79b49-a579-4045-984e-1b249ab8b474",
            "policyDefinitionReferenceId": "",
            "NumNonCompliantResources": 557
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/3f3c4330183b4e218fe6fd29",
            "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/3e3807c1-65c9-49e0-a406-82d8ae3e338c",
            "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/24813039-7534-408a-9842-eb99f45721b1",
            "policyDefinitionReferenceId": "",
            "NumNonCompliantResources": 552
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/e46af646ebdb461dba708e01",
            "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/a03db67e-a286-43c3-9098-b2da83d361ad",
            "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/c8b79b49-a579-4045-984e-1b249ab8b474",
            "policyDefinitionReferenceId": "8935913113203900114",
            "NumNonCompliantResources": 544
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/providers/microsoft.management/managementgroups/mymg/providers/microsoft.authorization/policyassignments/8174043a1e2849179635b874",
            "policySetDefinitionId": "",
            "policyDefinitionId": "/providers/microsoft.management/managementgroups/mymg/providers/microsoft.authorization/policydefinitions/72c0c41a-c752-4bc0-9c61-0d6adc567066",
            "policyDefinitionReferenceId": "",
            "NumNonCompliantResources": 526
          },
          {
            "@odata.id": null,
            "@odata.context": "https://management.azure.com/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/Microsoft.PolicyInsights/policyStates/$metadata#latest/$entity",
            "policyAssignmentId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policyassignments/ddd8ef92e3714a5ea3d208c1",
            "policySetDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policysetdefinitions/12b58873-e0f8-4b95-936c-86cbe7c9d697",
            "policyDefinitionId": "/subscriptions/fffedd8f-ffff-fffd-fffd-fffed2f84852/providers/microsoft.authorization/policydefinitions/c8b79b49-a579-4045-984e-1b249ab8b474",
            "policyDefinitionReferenceId": "2124621540977569058",
            "NumNonCompliantResources": 509
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Policy service - Queries policy states for the resources under the subscription.
errorCodes: []
