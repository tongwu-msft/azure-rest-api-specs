### YamlMime:RESTOperation
uid: management.azure.com.policy.policyexemptions.listformanagementgroup
name: List For Management Group
service: Policy
groupName: Policy Exemptions
apiVersion: 2020-07-01-preview
summary: "Retrieves all policy exemptions that apply to a management group.  \nThis operation retrieves the list of all policy exemptions applicable to the management group that match the given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq '{value}''. If $filter=atScope() is provided, the returned list includes all policy exemptions that are assigned to the management group or the management group's ancestors."
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Authorization/policyExemptions?api-version=2020-07-01-preview
- content: GET https://management.azure.com/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Authorization/policyExemptions?$filter={$filter}&api-version=2020-07-01-preview
  isOptional: true
uriParameters:
- name: managementGroupId
  in: path
  isRequired: true
  description: The ID of the management group.
  types:
  - uid: string
- name: $filter
  in: query
  description: "The filter to apply on the operation. Valid values for $filter are: 'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq '{value}''. If $filter is not provided, no filtering is performed. If $filter is not provided, the unfiltered list includes all policy exemptions associated with the scope, including those that apply directly or apply from containing scopes. If $filter=atScope() is provided, the returned list only includes all policy exemptions that apply to the scope, which is everything in the unfiltered list except those applied to sub scopes contained within the given scope. If $filter=atExactScope() is provided, the returned list only includes all policy exemptions that at the given scope. If $filter=excludeExpired() is provided, the returned list only includes all policy exemptions that either haven't expired or didn't set expiration date. If $filter=policyAssignmentId eq '{value}' is provided. the returned list only includes all policy exemptions that are associated with the give policyAssignmentId."
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK - Returns an array of policy exemptions.
  types:
  - uid: PolicyExemptionListResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: PolicyExemptionListResult
  description: List of policy exemptions.
  kind: object
  properties:
  - name: value
    description: An array of policy exemptions.
    types:
    - uid: PolicyExemption
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: The URL to use for getting the next set of results.
    types:
    - uid: string
- name: CloudError
  description: An error response from a policy operation.
  kind: object
  properties:
  - name: error
    description: "Error Response  \nCommon error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)"
    types:
    - uid: ErrorResponse
- name: PolicyExemption
  description: The policy exemption.
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
    types:
    - uid: systemData
  - name: id
    isReadyOnly: true
    description: The ID of the policy exemption.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the policy exemption.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource (Microsoft.Authorization/policyExemptions).
    types:
    - uid: string
  - name: properties.policyAssignmentId
    description: The ID of the policy assignment that is being exempted.
    types:
    - uid: string
  - name: properties.policyDefinitionReferenceIds
    description: The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition.
    types:
    - uid: string
      isArray: true
  - name: properties.exemptionCategory
    description: The policy exemption category. Possible values are Waiver and Mitigated.
    types:
    - uid: exemptionCategory
  - name: properties.expiresOn
    description: The expiration date and time (in UTC ISO 8601 format yyyy-MM-ddTHH:mm:ssZ) of the policy exemption.
    types:
    - uid: string
  - name: properties.displayName
    description: The display name of the policy exemption.
    types:
    - uid: string
  - name: properties.description
    description: The description of the policy exemption.
    types:
    - uid: string
  - name: properties.metadata
    description: The policy exemption metadata. Metadata is an open ended object and is typically a collection of key value pairs.
    types:
    - uid: object
- name: ErrorResponse
  description: Error Response
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorResponse
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: exemptionCategory
  description: The policy exemption category. Possible values are Waiver and Mitigated.
  kind: enum
  properties:
  - name: Waiver
    description: This category of exemptions usually means the scope is not applicable for the policy.
    types:
    - uid: string
  - name: Mitigated
    description: This category of exemptions usually means the mitigation actions have been applied to the scope.
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
examples:
- name: List policy exemptions that apply to a management group
  request:
    uri: GET https://management.azure.com/providers/Microsoft.Management/managementGroups/DevOrg/providers/Microsoft.Authorization/policyExemptions?$filter=atScope()&api-version=2020-07-01-preview
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/providers/Microsoft.Management/managementGroups/DevOrg/providers/Microsoft.Authorization/policyExemptions?$filter=atScope()&api-version=2020-07-01-preview
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for PolicyExemptions ListForManagementGroup. */
      public final class Main {
          /*
           * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/preview/2020-07-01-preview/examples/listPolicyExemptionsForManagementGroup.json
           */
          /**
           * Sample code: List policy exemptions that apply to a management group.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void listPolicyExemptionsThatApplyToAManagementGroup(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .genericResources()
                  .manager()
                  .policyClient()
                  .getPolicyExemptions()
                  .listForManagementGroup("DevOrg", "atScope()", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.19.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armpolicy_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armpolicy"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/resources/resource-manager/Microsoft.Authorization/preview/2020-07-01-preview/examples/listPolicyExemptionsForManagementGroup.json
      func ExampleExemptionsClient_NewListForManagementGroupPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armpolicy.NewExemptionsClient("<subscription-id>", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListForManagementGroupPager("DevOrg",
      		&armpolicy.ExemptionsClientListForManagementGroupOptions{Filter: to.Ptr("atScope()")})
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fresources%2Farmpolicy%2Fv0.6.0/sdk/resourcemanager/resources/armpolicy/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { PolicyClient } = require("@azure/arm-policy");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to This operation retrieves the list of all policy exemptions applicable to the management group that match the given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq '{value}''. If $filter=atScope() is provided, the returned list includes all policy exemptions that are assigned to the management group or the management group's ancestors.
       *
       * @summary This operation retrieves the list of all policy exemptions applicable to the management group that match the given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq '{value}''. If $filter=atScope() is provided, the returned list includes all policy exemptions that are assigned to the management group or the management group's ancestors.
       * x-ms-original-file: specification/resources/resource-manager/Microsoft.Authorization/preview/2020-07-01-preview/examples/listPolicyExemptionsForManagementGroup.json
       */
      async function listPolicyExemptionsThatApplyToAManagementGroup() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const managementGroupId = "DevOrg";
        const filter = "atScope()";
        const options = {
          filter,
        };
        const credential = new DefaultAzureCredential();
        const client = new PolicyClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.policyExemptions.listForManagementGroup(
          managementGroupId,
          options
        )) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      listPolicyExemptionsThatApplyToAManagementGroup().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-policy_5.0.2/sdk/policy/arm-policy/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "properties": {
              "policyAssignmentId": "/providers/Microsoft.Management/managementGroups/HardwareDivision/providers/Microsoft.Authorization/policyAssignments/CostManagement",
              "policyDefinitionReferenceIds": [
                "Limit_Skus"
              ],
              "exemptionCategory": "Waiver",
              "displayName": "Exempt demo cluster",
              "description": "Exempt demo cluster from limit sku",
              "metadata": {
                "reason": "Temporary exemption for a expensive VM demo"
              }
            },
            "systemData": {
              "createdBy": "string",
              "createdByType": "User",
              "createdAt": "2020-07-01T01:01:01.1075056Z",
              "lastModifiedBy": "string",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2020-07-01T02:01:01.1075056Z"
            },
            "id": "/providers/Microsoft.Management/managementGroups/DevOrg/providers/Microsoft.Authorization/policyExemptions/ResearchBudgetExemption",
            "type": "Microsoft.Authorization/policyExemptions",
            "name": "ResearchBudgetExemption"
          },
          {
            "properties": {
              "policyAssignmentId": "/providers/Microsoft.Management/managementGroups/HardwareDivision/providers/Microsoft.Authorization/policyAssignments/LimitPorts",
              "exemptionCategory": "Mitigated",
              "displayName": "Exempt jump box open ports",
              "description": "Exempt jump box open ports from limit ports policy",
              "metadata": {
                "reason": "Need to open RDP port to corp net"
              }
            },
            "systemData": {
              "createdBy": "string",
              "createdByType": "User",
              "createdAt": "2020-07-01T01:01:01.1075056Z",
              "lastModifiedBy": "string",
              "lastModifiedByType": "User",
              "lastModifiedAt": "2020-07-01T02:01:01.1075056Z"
            },
            "id": "/providers/Microsoft.Management/managementGroups/DevOrg/providers/Microsoft.Authorization/policyExemptions/VNetIsMonitored",
            "type": "Microsoft.Authorization/policyExemptions",
            "name": "VNetIsMonitored"
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: "Retrieves all policy exemptions that apply to a management group.\nThis operation retrieves the list of all policy exemptions applicable to the management group "
errorCodes: []
