### YamlMime:RESTOperation
uid: management.azure.com.deploymentmanager.steps.get
name: Get
service: Deployment Manager
groupName: Steps
apiVersion: 2019-11-01-preview
summary: Gets the step.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/steps/{stepName}?api-version=2019-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: stepName
  in: path
  isRequired: true
  description: The name of the deployment step.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: StepResource
- name: Other Status Codes
  description: All non-success conditions are handled using the standard error contract.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: StepResource
  description: The resource representation of a rollout step.
  kind: object
  properties:
  - name: properties
    description: The properties that define the step.
    types:
    - uid: HealthCheckStepProperties
    - uid: WaitStepProperties
    typesTitle: StepProperties
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: CloudError
  description: The error information object.
  kind: object
  properties:
  - name: error
    description: The properties that define the error.
    types:
    - uid: CloudErrorBody
- name: CloudErrorBody
  description: Detailed error information of any failure.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Error code string.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Descriptive error information.
    types:
    - uid: string
  - name: target
    description: Error target
    types:
    - uid: string
  - name: details
    description: More detailed error information.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: HealthCheckStepProperties
  description: Defines the properties of a health check step.
  kind: object
  properties:
  - name: attributes
    description: The health check step attributes
    types:
    - uid: RestHealthCheckStepAttributes
    typesTitle: HealthCheckStepAttributes
  - name: stepType
    description: The type of step.
    types:
    - uid: HealthCheck
    typesTitle: string
- name: WaitStepProperties
  description: Defines the properties of a Wait step.
  kind: object
  properties:
  - name: attributes
    description: The Wait attributes
    types:
    - uid: WaitStepAttributes
  - name: stepType
    description: The type of step.
    types:
    - uid: Wait
    typesTitle: string
- name: WaitStepAttributes
  description: The parameters for the wait step.
  kind: object
  properties:
  - name: duration
    description: The duration in ISO 8601 format of how long the wait should be.
    types:
    - uid: string
- name: RestHealthCheckStepAttributes
  description: Defines the REST health check step properties.
  kind: object
  properties:
  - name: properties.healthChecks
    description: The list of checks that form the health check step.
    types:
    - uid: RestHealthCheck
      isArray: true
  - name: type
    description: The type of health check.
    types:
    - uid: REST
    typesTitle: string
  - name: waitDuration
    description: The duration in ISO 8601 format for which health check waits idly without any checks.
    types:
    - uid: string
  - name: maxElasticDuration
    description: The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
    types:
    - uid: string
  - name: healthyStateDuration
    description: The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.
    types:
    - uid: string
- name: RestHealthCheck
  description: A REST based health check
  kind: object
  properties:
  - name: name
    description: A unique name for this check.
    types:
    - uid: string
  - name: request
    description: The request to the health provider.
    types:
    - uid: RestRequest
  - name: response
    description: The expected response from the health provider. If no expected response is provided, the default is to expect the received response to have an HTTP status code of 200 OK.
    types:
    - uid: RestResponse
- name: RestRequest
  description: The properties that make up a REST request
  kind: object
  properties:
  - name: method
    description: The HTTP method to use for the request.
    types:
    - uid: RestRequestMethod
  - name: uri
    description: The HTTP URI to use for the request.
    types:
    - uid: string
  - name: authentication
    description: The authentication information required in the request to the health provider.
    types:
    - uid: RolloutIdentityAuthentication
    - uid: ApiKeyAuthentication
    typesTitle: RestRequestAuthentication
- name: RestResponse
  description: The properties that make up the expected REST response
  kind: object
  properties:
  - name: successStatusCodes
    description: The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.
    types:
    - uid: string
      isArray: true
  - name: regex
    description: The regular expressions to match the response content with.
    types:
    - uid: Regex
- name: RestRequestMethod
  description: The HTTP method to use for the request.
  kind: enum
  properties:
  - name: GET
    types:
    - uid: string
  - name: POST
    types:
    - uid: string
- name: Regex
  description: The regular expressions to match the response content with.
  kind: object
  properties:
  - name: matches
    description: The list of regular expressions.
    types:
    - uid: string
      isArray: true
  - name: matchQuantifier
    description: Indicates whether any or all of the expressions should match with the response content.
    types:
    - uid: RestMatchQuantifier
- name: RolloutIdentityAuthentication
  description: RolloutIdentity uses the user-assigned managed identity authentication context specified in the Identity property during rollout creation.
  kind: object
  properties:
  - name: type
    description: The authentication type.
    types:
    - uid: RolloutIdentity
    typesTitle: string
- name: ApiKeyAuthentication
  description: ApiKey authentication gives a name and a value that can be included in either the request header or query parameters.
  kind: object
  properties:
  - name: name
    description: The key name of the authentication key/value pair.
    types:
    - uid: string
  - name: in
    description: The location of the authentication key/value pair in the request.
    types:
    - uid: RestAuthLocation
  - name: value
    description: The value of the authentication key/value pair.
    types:
    - uid: string
  - name: type
    description: The authentication type.
    types:
    - uid: ApiKey
    typesTitle: string
- name: RestMatchQuantifier
  description: Indicates whether any or all of the expressions should match with the response content.
  kind: enum
  properties:
  - name: All
    types:
    - uid: string
  - name: Any
    types:
    - uid: string
- name: RestAuthLocation
  description: The location of the authentication key/value pair in the request.
  kind: enum
  properties:
  - name: Query
    types:
    - uid: string
  - name: Header
    types:
    - uid: string
examples:
- name: Get deployment step
  request:
    uri: GET https://management.azure.com/subscriptions/caac1590-e859-444f-a9e0-62091c0f5929/resourceGroups/myResourceGroup/providers/Microsoft.DeploymentManager/steps/waitStep?api-version=2019-11-01-preview
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "deploymentStep1",
        "type": "Microsoft.DeploymentManager/steps",
        "location": "centralus",
        "tags": {},
        "properties": {
          "stepType": "Wait",
          "attributes": {
            "duration": "PT20M"
          }
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about <Deployment Manager> service - Gets the step.
errorCodes: []
