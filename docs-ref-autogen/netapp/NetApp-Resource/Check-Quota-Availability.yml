### YamlMime:RESTOperation
uid: management.azure.com.netapp.netappresource.checkquotaavailability
name: Check Quota Availability
service: Azure NetApp Files
groupName: NetApp Resource
apiVersion: 2021-10-01
summary: "Check quota availability  \nCheck if a quota is available."
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkQuotaAvailability?api-version=2021-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: location
  in: path
  isRequired: true
  description: The location
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: CheckAvailabilityResponse
- name: Other Status Codes
  description: Error response describing why the operation failed.
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    isRequired: true
    description: Name of the resource to verify.
    types:
    - uid: string
  - name: type
    in: body
    isRequired: true
    description: Resource type used for verification.
    types:
    - uid: CheckQuotaNameResourceTypes
  - name: resourceGroup
    in: body
    isRequired: true
    description: Resource group name.
    types:
    - uid: string
requestHeader: []
definitions:
- name: CheckAvailabilityResponse
  description: Information regarding availability of a resource.
  kind: object
  properties:
  - name: isAvailable
    description: <code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both.
    types:
    - uid: boolean
  - name: reason
    description: <code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.
    types:
    - uid: InAvailabilityReasonType
  - name: message
    description: If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name.
    types:
    - uid: string
- name: QuotaAvailabilityRequest
  description: Quota availability request content.
  kind: object
  properties:
  - name: name
    description: Name of the resource to verify.
    types:
    - uid: string
  - name: type
    description: Resource type used for verification.
    types:
    - uid: CheckQuotaNameResourceTypes
  - name: resourceGroup
    description: Resource group name.
    types:
    - uid: string
- name: InAvailabilityReasonType
  description: <code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.
  kind: enum
  properties:
  - name: Invalid
    types:
    - uid: string
  - name: AlreadyExists
    types:
    - uid: string
- name: CheckQuotaNameResourceTypes
  description: Resource type used for verification.
  kind: enum
  properties:
  - name: Microsoft.NetApp/netAppAccounts
    types:
    - uid: string
  - name: Microsoft.NetApp/netAppAccounts/capacityPools
    types:
    - uid: string
  - name: Microsoft.NetApp/netAppAccounts/capacityPools/volumes
    types:
    - uid: string
  - name: Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots
    types:
    - uid: string
examples:
- name: CheckQuotaAvailability
  request:
    uri: POST https://management.azure.com/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/providers/Microsoft.NetApp/locations/eastus/checkQuotaAvailability?api-version=2021-10-01
    body: >-
      {
        "name": "resource1",
        "type": "Microsoft.NetApp/netAppAccounts",
        "resourceGroup": "myRG"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/providers/Microsoft.NetApp/locations/eastus/checkQuotaAvailability?api-version=2021-10-01

      {
        "name": "resource1",
        "type": "Microsoft.NetApp/netAppAccounts",
        "resourceGroup": "myRG"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.netapp.models.CheckQuotaNameResourceTypes;
      import com.azure.resourcemanager.netapp.models.QuotaAvailabilityRequest;

      /** Samples for NetAppResource CheckQuotaAvailability. */
      public final class Main {
          /*
           * x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/CheckQuotaAvailability.json
           */
          /**
           * Sample code: CheckQuotaAvailability.
           *
           * @param manager Entry point to NetAppFilesManager.
           */
          public static void checkQuotaAvailability(com.azure.resourcemanager.netapp.NetAppFilesManager manager) {
              manager
                  .netAppResources()
                  .checkQuotaAvailabilityWithResponse(
                      "eastus",
                      new QuotaAvailabilityRequest()
                          .withName("resource1")
                          .withType(CheckQuotaNameResourceTypes.MICROSOFT_NET_APP_NET_APP_ACCOUNTS)
                          .withResourceGroup("myRG"),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-netapp_1.0.0-beta.8/sdk/netapp/azure-resourcemanager-netapp/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetapp_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/netapp/armnetapp"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/CheckQuotaAvailability.json
      func ExampleResourceClient_CheckQuotaAvailability() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetapp.NewResourceClient("D633CC2E-722B-4AE1-B636-BBD9E4C60ED9", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CheckQuotaAvailability(ctx,
      		"eastus",
      		armnetapp.QuotaAvailabilityRequest{
      			Name:          to.Ptr("resource1"),
      			Type:          to.Ptr(armnetapp.CheckQuotaNameResourceTypesMicrosoftNetAppNetAppAccounts),
      			ResourceGroup: to.Ptr("myRG"),
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetapp%2Farmnetapp%2Fv1.0.0/sdk/resourcemanager/netapp/armnetapp/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { NetAppManagementClient } = require("@azure/arm-netapp");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Check if a quota is available.
       *
       * @summary Check if a quota is available.
       * x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/CheckQuotaAvailability.json
       */
      async function checkQuotaAvailability() {
        const subscriptionId = "D633CC2E-722B-4AE1-B636-BBD9E4C60ED9";
        const location = "eastus";
        const name = "resource1";
        const typeParam = "Microsoft.NetApp/netAppAccounts";
        const resourceGroup = "myRG";
        const credential = new DefaultAzureCredential();
        const client = new NetAppManagementClient(credential, subscriptionId);
        const result = await client.netAppResource.checkQuotaAvailability(
          location,
          name,
          typeParam,
          resourceGroup
        );
        console.log(result);
      }

      checkQuotaAvailability().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-netapp_15.1.1/sdk/netapp/arm-netapp/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "isAvailable": true
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: "Learn more about Azure NetApp Files service - Check quota availability  \nCheck if a quota is available."
errorCodes: []
