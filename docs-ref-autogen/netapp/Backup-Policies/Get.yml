### YamlMime:RESTOperation
uid: management.azure.com.netapp.backuppolicies.get
name: Get
service: Azure NetApp Files
groupName: Backup Policies
apiVersion: 2021-10-01
summary: "Get a backup Policy  \nGet a particular backup Policy"
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies/{backupPolicyName}?api-version=2021-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: accountName
  in: path
  isRequired: true
  description: The name of the NetApp account
  types:
  - uid: string
- name: backupPolicyName
  in: path
  isRequired: true
  description: Backup policy Name which uniquely identify backup policy.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: backupPolicy
- name: Other Status Codes
  description: Error response describing why the operation failed.
requestHeader: []
definitions:
- name: backupPolicy
  description: Backup policy information
  kind: object
  properties:
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.backupPolicyId
    isReadyOnly: true
    description: Backup Policy Resource ID
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: Azure lifecycle management
    types:
    - uid: string
  - name: properties.dailyBackupsToKeep
    description: Daily backups count to keep
    types:
    - uid: integer
  - name: properties.weeklyBackupsToKeep
    description: Weekly backups count to keep
    types:
    - uid: integer
  - name: properties.monthlyBackupsToKeep
    description: Monthly backups count to keep
    types:
    - uid: integer
  - name: properties.volumesAssigned
    isReadyOnly: true
    description: Volumes using current backup policy
    types:
    - uid: integer
  - name: properties.enabled
    description: The property to decide policy is enabled or not
    types:
    - uid: boolean
  - name: properties.volumeBackups
    isReadyOnly: true
    description: A list of volumes assigned to this policy
    types:
    - uid: volumeBackups
      isArray: true
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: volumeBackups
  description: Volume details using the backup policy
  kind: object
  properties:
  - name: volumeName
    description: Volume name
    types:
    - uid: string
  - name: backupsCount
    description: Total count of backups for volume
    types:
    - uid: integer
  - name: policyEnabled
    description: Policy enabled
    types:
    - uid: boolean
examples:
- name: Backups_Get
  request:
    uri: GET https://management.azure.com/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupPolicies/backupPolicyName?api-version=2021-10-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupPolicies/backupPolicyName?api-version=2021-10-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for BackupPolicies Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/BackupPolicies_Get.json
           */
          /**
           * Sample code: Backups_Get.
           *
           * @param manager Entry point to NetAppFilesManager.
           */
          public static void backupsGet(com.azure.resourcemanager.netapp.NetAppFilesManager manager) {
              manager.backupPolicies().getWithResponse("myRG", "account1", "backupPolicyName", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-netapp_1.0.0-beta.8/sdk/netapp/azure-resourcemanager-netapp/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetapp_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/netapp/armnetapp"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/BackupPolicies_Get.json
      func ExampleBackupPoliciesClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetapp.NewBackupPoliciesClient("D633CC2E-722B-4AE1-B636-BBD9E4C60ED9", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"myRG",
      		"account1",
      		"backupPolicyName",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetapp%2Farmnetapp%2Fv1.0.0/sdk/resourcemanager/netapp/armnetapp/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { NetAppManagementClient } = require("@azure/arm-netapp");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Get a particular backup Policy
       *
       * @summary Get a particular backup Policy
       * x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/BackupPolicies_Get.json
       */
      async function backupsGet() {
        const subscriptionId = "D633CC2E-722B-4AE1-B636-BBD9E4C60ED9";
        const resourceGroupName = "myRG";
        const accountName = "account1";
        const backupPolicyName = "backupPolicyName";
        const credential = new DefaultAzureCredential();
        const client = new NetAppManagementClient(credential, subscriptionId);
        const result = await client.backupPolicies.get(resourceGroupName, accountName, backupPolicyName);
        console.log(result);
      }

      backupsGet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-netapp_15.1.1/sdk/netapp/arm-netapp/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupPolocies/backupPolicyName",
        "name": "account1/backupPolicyName",
        "type": "Microsoft.NetApp/netAppAccounts/backupPolicies",
        "location": "eastus",
        "properties": {
          "dailyBackupsToKeep": 10,
          "weeklyBackupsToKeep": 10,
          "monthlyBackupsToKeep": 10,
          "volumesAssigned": 0,
          "enabled": true,
          "volumeBackups": [
            {
              "volumeName": "volume 1",
              "backupsCount": 5,
              "policyEnabled": true
            }
          ]
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: "Learn more about Azure NetApp Files service - Get a backup Policy  \nGet a particular backup Policy"
errorCodes: []
