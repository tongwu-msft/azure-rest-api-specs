### YamlMime:RESTOperation
uid: management.azure.com.netapp.accounts.createorupdate
name: Create Or Update
service: Azure NetApp Files
groupName: Accounts
apiVersion: 2021-10-01
summary: "Create or update a NetApp account  \nCreate or update the specified NetApp account within the resource group"
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}?api-version=2021-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: accountName
  in: path
  isRequired: true
  description: The name of the NetApp account
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK - account updated
  types:
  - uid: netAppAccount
- name: 201 Created
  description: Account created
  types:
  - uid: netAppAccount
- name: Other Status Codes
  description: Error response describing why the operation failed.
requestBody:
- name: default
  parameters:
  - name: location
    in: body
    isRequired: true
    description: Resource location
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.activeDirectories
    in: body
    description: Active Directories
    types:
    - uid: activeDirectory
      isArray: true
  - name: properties.encryption
    in: body
    description: Encryption settings
    types:
    - uid: accountEncryption
requestHeader: []
definitions:
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: activeDirectory
  description: Active Directory
  kind: object
  properties:
  - name: activeDirectoryId
    description: Id of the Active Directory
    types:
    - uid: string
  - name: username
    description: Username of Active Directory domain administrator
    types:
    - uid: string
  - name: password
    description: Plain text password of Active Directory domain administrator, value is masked in the response
    types:
    - uid: string
  - name: domain
    description: Name of the Active Directory domain
    types:
    - uid: string
  - name: dns
    description: Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain
    types:
    - uid: string
  - name: status
    isReadyOnly: true
    description: Status of the Active Directory
    types:
    - uid: ActiveDirectoryStatus
  - name: statusDetails
    isReadyOnly: true
    description: Any details in regards to the Status of the Active Directory
    types:
    - uid: string
  - name: smbServerName
    description: NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
    types:
    - uid: string
  - name: organizationalUnit
    description: The Organizational Unit (OU) within the Windows Active Directory
    types:
    - uid: string
    defaultValue: CN=Computers
  - name: site
    description: The Active Directory site the service will limit Domain Controller discovery to
    types:
    - uid: string
  - name: backupOperators
    description: Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier
    types:
    - uid: string
      isArray: true
  - name: administrators
    description: Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier
    types:
    - uid: string
      isArray: true
  - name: kdcIP
    description: kdc server IP addresses for the active directory machine. This optional parameter is used only while creating kerberos volume.
    types:
    - uid: string
  - name: adName
    description: Name of the active directory machine. This optional parameter is used only while creating kerberos volume
    types:
    - uid: string
  - name: serverRootCACertificate
    description: When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.
    types:
    - uid: string
  - name: aesEncryption
    description: If enabled, AES encryption will be enabled for SMB communication.
    types:
    - uid: boolean
  - name: ldapSigning
    description: Specifies whether or not the LDAP traffic needs to be signed.
    types:
    - uid: boolean
  - name: securityOperators
    description: Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier
    types:
    - uid: string
      isArray: true
  - name: ldapOverTLS
    description: Specifies whether or not the LDAP traffic needs to be secured via TLS.
    types:
    - uid: boolean
  - name: allowLocalNfsUsersWithLdap
    description: " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
    types:
    - uid: boolean
  - name: encryptDCConnections
    description: If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted.
    types:
    - uid: boolean
  - name: ldapSearchScope
    description: LDAP Search scope options
    types:
    - uid: ldapSearchScopeOpt
- name: accountEncryption
  description: Encryption settings
  kind: object
  properties:
  - name: keySource
    description: "Encryption Key Source. Possible values are: 'Microsoft.NetApp'."
    types:
    - uid: string
- name: netAppAccount
  description: NetApp account resource
  kind: object
  properties:
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: systemData
    isReadyOnly: true
    description: The system meta data relating to this resource.
    types:
    - uid: systemData
  - name: properties.provisioningState
    isReadyOnly: true
    description: Azure lifecycle management
    types:
    - uid: string
  - name: properties.activeDirectories
    description: Active Directories
    types:
    - uid: activeDirectory
      isArray: true
  - name: properties.encryption
    description: Encryption settings
    types:
    - uid: accountEncryption
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: ActiveDirectoryStatus
  description: Status of the Active Directory
  kind: enum
  properties:
  - name: Created
    description: Active Directory created but not in use
    types:
    - uid: string
  - name: Updating
    description: Active Directory Updating
    types:
    - uid: string
  - name: InUse
    description: Active Directory in use by SMB Volume
    types:
    - uid: string
  - name: Deleted
    description: Active Directory Deleted
    types:
    - uid: string
  - name: Error
    description: Error with the Active Directory
    types:
    - uid: string
- name: ldapSearchScopeOpt
  description: 'LDAP search scope '
  kind: object
  properties:
  - name: userDN
    description: This specifies the user DN, which overrides the base DN for user lookups.
    types:
    - uid: string
  - name: groupDN
    description: This specifies the group DN, which overrides the base DN for group lookups.
    types:
    - uid: string
  - name: groupMembershipFilter
    description: This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.
    types:
    - uid: string
examples:
- name: Accounts_CreateOrUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1?api-version=2021-10-01
    body: >-
      {
        "location": "eastus",
        "properties": {
          "activeDirectories": [
            {
              "site": "SiteName",
              "username": "ad_user_name",
              "password": "ad_password",
              "domain": "10.10.10.3",
              "dns": "10.10.10.3, 10.10.10.4",
              "smbServerName": "SMBServer",
              "organizationalUnit": "OU=Engineering",
              "aesEncryption": true,
              "ldapSigning": false,
              "ldapOverTLS": false
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1?api-version=2021-10-01

      {
        "location": "eastus",
        "properties": {
          "activeDirectories": [
            {
              "site": "SiteName",
              "username": "ad_user_name",
              "password": "ad_password",
              "domain": "10.10.10.3",
              "dns": "10.10.10.3, 10.10.10.4",
              "smbServerName": "SMBServer",
              "organizationalUnit": "OU=Engineering",
              "aesEncryption": true,
              "ldapSigning": false,
              "ldapOverTLS": false
            }
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.resourcemanager.netapp.models.ActiveDirectory;
      import java.util.Arrays;

      /** Samples for Accounts CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/Accounts_CreateOrUpdate.json
           */
          /**
           * Sample code: Accounts_CreateOrUpdate.
           *
           * @param manager Entry point to NetAppFilesManager.
           */
          public static void accountsCreateOrUpdate(com.azure.resourcemanager.netapp.NetAppFilesManager manager) {
              manager
                  .accounts()
                  .define("account1")
                  .withRegion("eastus")
                  .withExistingResourceGroup("myRG")
                  .withActiveDirectories(
                      Arrays
                          .asList(
                              new ActiveDirectory()
                                  .withUsername("ad_user_name")
                                  .withPassword("ad_password")
                                  .withDomain("10.10.10.3")
                                  .withDns("10.10.10.3, 10.10.10.4")
                                  .withSmbServerName("SMBServer")
                                  .withOrganizationalUnit("OU=Engineering")
                                  .withSite("SiteName")
                                  .withAesEncryption(true)
                                  .withLdapSigning(false)
                                  .withLdapOverTls(false)))
                  .create();
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-netapp_1.0.0-beta.8/sdk/netapp/azure-resourcemanager-netapp/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetapp_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/netapp/armnetapp"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/Accounts_CreateOrUpdate.json
      func ExampleAccountsClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetapp.NewAccountsClient("D633CC2E-722B-4AE1-B636-BBD9E4C60ED9", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"myRG",
      		"account1",
      		armnetapp.Account{
      			Location: to.Ptr("eastus"),
      			Properties: &armnetapp.AccountProperties{
      				ActiveDirectories: []*armnetapp.ActiveDirectory{
      					{
      						AesEncryption:      to.Ptr(true),
      						DNS:                to.Ptr("10.10.10.3, 10.10.10.4"),
      						Domain:             to.Ptr("10.10.10.3"),
      						LdapOverTLS:        to.Ptr(false),
      						LdapSigning:        to.Ptr(false),
      						OrganizationalUnit: to.Ptr("OU=Engineering"),
      						Password:           to.Ptr("ad_password"),
      						Site:               to.Ptr("SiteName"),
      						SmbServerName:      to.Ptr("SMBServer"),
      						Username:           to.Ptr("ad_user_name"),
      					}},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetapp%2Farmnetapp%2Fv1.0.0/sdk/resourcemanager/netapp/armnetapp/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetAppManagementClient } = require("@azure/arm-netapp");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Create or update the specified NetApp account within the resource group
       *
       * @summary Create or update the specified NetApp account within the resource group
       * x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/Accounts_CreateOrUpdate.json
       */
      async function accountsCreateOrUpdate() {
        const subscriptionId = "D633CC2E-722B-4AE1-B636-BBD9E4C60ED9";
        const resourceGroupName = "myRG";
        const accountName = "account1";
        const body = {
          activeDirectories: [
            {
              aesEncryption: true,
              dns: "10.10.10.3, 10.10.10.4",
              domain: "10.10.10.3",
              ldapOverTLS: false,
              ldapSigning: false,
              organizationalUnit: "OU=Engineering",
              password: "ad_password",
              site: "SiteName",
              smbServerName: "SMBServer",
              username: "ad_user_name",
            },
          ],
          location: "eastus",
        };
        const credential = new DefaultAzureCredential();
        const client = new NetAppManagementClient(credential, subscriptionId);
        const result = await client.accounts.beginCreateOrUpdateAndWait(
          resourceGroupName,
          accountName,
          body
        );
        console.log(result);
      }

      accountsCreateOrUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-netapp_15.1.1/sdk/netapp/arm-netapp/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1",
        "name": "account1",
        "type": "Microsoft.NetApp/netAppAccounts",
        "location": "eastus",
        "properties": {
          "provisioningState": "Succeeded"
        }
      }
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1",
        "name": "account1",
        "type": "Microsoft.NetApp/netAppAccounts",
        "location": "eastus",
        "properties": {
          "provisioningState": "Succeeded"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Create or update a NetApp account

    Create or update the specified NetApp account within the resource group
errorCodes: []
