### YamlMime:RESTOperation
uid: management.azure.com.netapp.snapshotpolicies.update
name: Update
service: Azure NetApp Files
groupName: Snapshot Policies
apiVersion: 2021-10-01
summary: Patch a snapshot policy
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}?api-version=2021-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: accountName
  in: path
  isRequired: true
  description: The name of the NetApp account
  types:
  - uid: string
- name: snapshotPolicyName
  in: path
  isRequired: true
  description: The name of the snapshot policy
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: snapshotPolicy
- name: 202 Accepted
  description: Accepted -- Create or update request accepted; operation will complete asynchronously
  types:
  - uid: snapshotPolicy
- name: Other Status Codes
  description: Error response describing why the operation failed.
requestBody:
- name: default
  parameters:
  - name: location
    in: body
    description: Resource location
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.hourlySchedule
    in: body
    description: "hourlySchedule  \nSchedule for hourly snapshots"
    types:
    - uid: hourlySchedule
  - name: properties.dailySchedule
    in: body
    description: "dailySchedule  \nSchedule for daily snapshots"
    types:
    - uid: dailySchedule
  - name: properties.weeklySchedule
    in: body
    description: "weeklySchedule  \nSchedule for weekly snapshots"
    types:
    - uid: weeklySchedule
  - name: properties.monthlySchedule
    in: body
    description: "monthlySchedule  \nSchedule for monthly snapshots"
    types:
    - uid: monthlySchedule
  - name: properties.enabled
    in: body
    description: The property to decide policy is enabled or not
    types:
    - uid: boolean
requestHeader: []
definitions:
- name: hourlySchedule
  description: Hourly Schedule properties
  kind: object
  properties:
  - name: snapshotsToKeep
    description: Hourly snapshot count to keep
    types:
    - uid: integer
  - name: minute
    description: Indicates which minute snapshot should be taken
    types:
    - uid: integer
  - name: usedBytes
    description: Resource size in bytes, current storage usage for the volume in bytes
    types:
    - uid: integer
- name: dailySchedule
  description: Daily Schedule properties
  kind: object
  properties:
  - name: snapshotsToKeep
    description: Daily snapshot count to keep
    types:
    - uid: integer
  - name: hour
    description: Indicates which hour in UTC timezone a snapshot should be taken
    types:
    - uid: integer
  - name: minute
    description: Indicates which minute snapshot should be taken
    types:
    - uid: integer
  - name: usedBytes
    description: Resource size in bytes, current storage usage for the volume in bytes
    types:
    - uid: integer
- name: weeklySchedule
  description: Weekly Schedule properties, make a snapshot every week at a specific day or days
  kind: object
  properties:
  - name: snapshotsToKeep
    description: Weekly snapshot count to keep
    types:
    - uid: integer
  - name: day
    description: Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english
    types:
    - uid: string
  - name: hour
    description: Indicates which hour in UTC timezone a snapshot should be taken
    types:
    - uid: integer
  - name: minute
    description: Indicates which minute snapshot should be taken
    types:
    - uid: integer
  - name: usedBytes
    description: Resource size in bytes, current storage usage for the volume in bytes
    types:
    - uid: integer
- name: monthlySchedule
  description: Monthly Schedule properties
  kind: object
  properties:
  - name: snapshotsToKeep
    description: Monthly snapshot count to keep
    types:
    - uid: integer
  - name: daysOfMonth
    description: Indicates which days of the month snapshot should be taken. A comma delimited string.
    types:
    - uid: string
  - name: hour
    description: Indicates which hour in UTC timezone a snapshot should be taken
    types:
    - uid: integer
  - name: minute
    description: Indicates which minute snapshot should be taken
    types:
    - uid: integer
  - name: usedBytes
    description: Resource size in bytes, current storage usage for the volume in bytes
    types:
    - uid: integer
- name: snapshotPolicy
  description: Snapshot policy information
  kind: object
  properties:
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.hourlySchedule
    description: "hourlySchedule  \nSchedule for hourly snapshots"
    types:
    - uid: hourlySchedule
  - name: properties.dailySchedule
    description: "dailySchedule  \nSchedule for daily snapshots"
    types:
    - uid: dailySchedule
  - name: properties.weeklySchedule
    description: "weeklySchedule  \nSchedule for weekly snapshots"
    types:
    - uid: weeklySchedule
  - name: properties.monthlySchedule
    description: "monthlySchedule  \nSchedule for monthly snapshots"
    types:
    - uid: monthlySchedule
  - name: properties.enabled
    description: The property to decide policy is enabled or not
    types:
    - uid: boolean
  - name: properties.provisioningState
    isReadyOnly: true
    description: Azure lifecycle management
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: snapshotPolicyPatch
  description: Snapshot policy Details for create and update
  kind: object
  properties:
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.hourlySchedule
    description: "hourlySchedule  \nSchedule for hourly snapshots"
    types:
    - uid: hourlySchedule
  - name: properties.dailySchedule
    description: "dailySchedule  \nSchedule for daily snapshots"
    types:
    - uid: dailySchedule
  - name: properties.weeklySchedule
    description: "weeklySchedule  \nSchedule for weekly snapshots"
    types:
    - uid: weeklySchedule
  - name: properties.monthlySchedule
    description: "monthlySchedule  \nSchedule for monthly snapshots"
    types:
    - uid: monthlySchedule
  - name: properties.enabled
    description: The property to decide policy is enabled or not
    types:
    - uid: boolean
  - name: properties.provisioningState
    isReadyOnly: true
    description: Azure lifecycle management
    types:
    - uid: string
examples:
- name: SnapshotPolicies_Update
  request:
    uri: PATCH https://management.azure.com/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/snapshotPolicies/snapshotPolicyName?api-version=2021-10-01
    body: >-
      {
        "location": "eastus",
        "properties": {
          "enabled": true,
          "hourlySchedule": {
            "snapshotsToKeep": 2,
            "minute": 50
          },
          "dailySchedule": {
            "snapshotsToKeep": 4,
            "hour": 14,
            "minute": 30
          },
          "weeklySchedule": {
            "snapshotsToKeep": 3,
            "day": "Wednesday",
            "hour": 14,
            "minute": 45
          },
          "monthlySchedule": {
            "snapshotsToKeep": 5,
            "daysOfMonth": "10,11,12",
            "hour": 14,
            "minute": 15
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/snapshotPolicies/snapshotPolicyName?api-version=2021-10-01

      {
        "location": "eastus",
        "properties": {
          "enabled": true,
          "hourlySchedule": {
            "snapshotsToKeep": 2,
            "minute": 50
          },
          "dailySchedule": {
            "snapshotsToKeep": 4,
            "hour": 14,
            "minute": 30
          },
          "weeklySchedule": {
            "snapshotsToKeep": 3,
            "day": "Wednesday",
            "hour": 14,
            "minute": 45
          },
          "monthlySchedule": {
            "snapshotsToKeep": 5,
            "daysOfMonth": "10,11,12",
            "hour": 14,
            "minute": 15
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.netapp.models.DailySchedule;
      import com.azure.resourcemanager.netapp.models.HourlySchedule;
      import com.azure.resourcemanager.netapp.models.MonthlySchedule;
      import com.azure.resourcemanager.netapp.models.SnapshotPolicy;
      import com.azure.resourcemanager.netapp.models.WeeklySchedule;

      /** Samples for SnapshotPolicies Update. */
      public final class Main {
          /*
           * x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/SnapshotPolicies_Update.json
           */
          /**
           * Sample code: SnapshotPolicies_Update.
           *
           * @param manager Entry point to NetAppFilesManager.
           */
          public static void snapshotPoliciesUpdate(com.azure.resourcemanager.netapp.NetAppFilesManager manager) {
              SnapshotPolicy resource =
                  manager
                      .snapshotPolicies()
                      .getWithResponse("myRG", "account1", "snapshotPolicyName", Context.NONE)
                      .getValue();
              resource
                  .update()
                  .withHourlySchedule(new HourlySchedule().withSnapshotsToKeep(2).withMinute(50))
                  .withDailySchedule(new DailySchedule().withSnapshotsToKeep(4).withHour(14).withMinute(30))
                  .withWeeklySchedule(
                      new WeeklySchedule().withSnapshotsToKeep(3).withDay("Wednesday").withHour(14).withMinute(45))
                  .withMonthlySchedule(
                      new MonthlySchedule().withSnapshotsToKeep(5).withDaysOfMonth("10,11,12").withHour(14).withMinute(15))
                  .withEnabled(true)
                  .apply();
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-netapp_1.0.0-beta.8/sdk/netapp/azure-resourcemanager-netapp/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetapp_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/netapp/armnetapp"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/SnapshotPolicies_Update.json
      func ExampleSnapshotPoliciesClient_BeginUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetapp.NewSnapshotPoliciesClient("D633CC2E-722B-4AE1-B636-BBD9E4C60ED9", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginUpdate(ctx,
      		"myRG",
      		"account1",
      		"snapshotPolicyName",
      		armnetapp.SnapshotPolicyPatch{
      			Location: to.Ptr("eastus"),
      			Properties: &armnetapp.SnapshotPolicyProperties{
      				DailySchedule: &armnetapp.DailySchedule{
      					Hour:            to.Ptr[int32](14),
      					Minute:          to.Ptr[int32](30),
      					SnapshotsToKeep: to.Ptr[int32](4),
      				},
      				Enabled: to.Ptr(true),
      				HourlySchedule: &armnetapp.HourlySchedule{
      					Minute:          to.Ptr[int32](50),
      					SnapshotsToKeep: to.Ptr[int32](2),
      				},
      				MonthlySchedule: &armnetapp.MonthlySchedule{
      					DaysOfMonth:     to.Ptr("10,11,12"),
      					Hour:            to.Ptr[int32](14),
      					Minute:          to.Ptr[int32](15),
      					SnapshotsToKeep: to.Ptr[int32](5),
      				},
      				WeeklySchedule: &armnetapp.WeeklySchedule{
      					Day:             to.Ptr("Wednesday"),
      					Hour:            to.Ptr[int32](14),
      					Minute:          to.Ptr[int32](45),
      					SnapshotsToKeep: to.Ptr[int32](3),
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetapp%2Farmnetapp%2Fv1.0.0/sdk/resourcemanager/netapp/armnetapp/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetAppManagementClient } = require("@azure/arm-netapp");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Patch a snapshot policy
       *
       * @summary Patch a snapshot policy
       * x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/SnapshotPolicies_Update.json
       */
      async function snapshotPoliciesUpdate() {
        const subscriptionId = "D633CC2E-722B-4AE1-B636-BBD9E4C60ED9";
        const resourceGroupName = "myRG";
        const accountName = "account1";
        const snapshotPolicyName = "snapshotPolicyName";
        const body = {
          dailySchedule: { hour: 14, minute: 30, snapshotsToKeep: 4 },
          enabled: true,
          hourlySchedule: { minute: 50, snapshotsToKeep: 2 },
          location: "eastus",
          monthlySchedule: {
            daysOfMonth: "10,11,12",
            hour: 14,
            minute: 15,
            snapshotsToKeep: 5,
          },
          weeklySchedule: {
            day: "Wednesday",
            hour: 14,
            minute: 45,
            snapshotsToKeep: 3,
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new NetAppManagementClient(credential, subscriptionId);
        const result = await client.snapshotPolicies.beginUpdateAndWait(
          resourceGroupName,
          accountName,
          snapshotPolicyName,
          body
        );
        console.log(result);
      }

      snapshotPoliciesUpdate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-netapp_15.1.1/sdk/netapp/arm-netapp/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/snapshotPolicies/snapshotPolicy1",
        "name": "account1/snapshotPolicy1",
        "type": "Microsoft.NetApp/netAppAccounts/snapshotPolicies",
        "location": "eastus",
        "properties": {
          "enabled": true,
          "hourlySchedule": {
            "snapshotsToKeep": 2,
            "minute": 50
          },
          "dailySchedule": {
            "snapshotsToKeep": 4,
            "hour": 14,
            "minute": 30
          },
          "weeklySchedule": {
            "snapshotsToKeep": 3,
            "day": "Wednesday",
            "hour": 14,
            "minute": 45
          },
          "monthlySchedule": {
            "snapshotsToKeep": 5,
            "daysOfMonth": "10,11,12",
            "hour": 14,
            "minute": 15
          },
          "provisioningState": "Succeeded"
        }
      }
  - statusCode: "202"
    headers:
    - name: Location
      value: https://management.azure.com/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/providers/Microsoft.NetApp/locations/eastus/operationResults/18c499e1-2a3c-441c-950e-4b456c991c18?api-version=2021-08-01&operationResultResponseType=Location
    body: >-
      {
        "id": "/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/snapshotPolicies/snapshotPolicy1",
        "name": "account1/snapshotPolicy1",
        "type": "Microsoft.NetApp/netAppAccounts/snapshotPolicies",
        "location": "eastus",
        "properties": {
          "enabled": true,
          "hourlySchedule": {
            "snapshotsToKeep": 2,
            "minute": 50
          },
          "dailySchedule": {
            "snapshotsToKeep": 4,
            "hour": 14,
            "minute": 30
          },
          "weeklySchedule": {
            "snapshotsToKeep": 3,
            "day": "Wednesday",
            "hour": 14,
            "minute": 45
          },
          "monthlySchedule": {
            "snapshotsToKeep": 5,
            "daysOfMonth": "10,11,12",
            "hour": 14,
            "minute": 15
          },
          "provisioningState": "Succeeded"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Azure NetApp Files service - Patch a snapshot policy
errorCodes: []
