### YamlMime:RESTOperation
uid: management.azure.com.netapp.backups.list
name: List
service: Azure NetApp Files
groupName: Backups
apiVersion: 2021-10-01
summary: "List Backups  \nList all backups for a volume"
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/backups?api-version=2021-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: accountName
  in: path
  isRequired: true
  description: The name of the NetApp account
  types:
  - uid: string
- name: poolName
  in: path
  isRequired: true
  description: The name of the capacity pool
  types:
  - uid: string
  pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$
- name: volumeName
  in: path
  isRequired: true
  description: The name of the volume
  types:
  - uid: string
  pattern: ^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: backupsList
- name: Other Status Codes
  description: Error response describing why the operation failed.
requestHeader: []
definitions:
- name: backupsList
  description: List of Backups
  kind: object
  properties:
  - name: value
    description: A list of Backups
    types:
    - uid: backup
      isArray: true
- name: backup
  description: Backup of a Volume
  kind: object
  properties:
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: properties.backupId
    isReadyOnly: true
    description: "backupId  \nUUID v4 used to identify the Backup"
    types:
    - uid: string
  - name: properties.creationDate
    isReadyOnly: true
    description: "creationDate  \nThe creation date of the backup"
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: Azure lifecycle management
    types:
    - uid: string
  - name: properties.size
    isReadyOnly: true
    description: Size of backup
    types:
    - uid: integer
  - name: properties.label
    description: Label for backup
    types:
    - uid: string
  - name: properties.backupType
    isReadyOnly: true
    description: "backupType  \nType of backup Manual or Scheduled"
    types:
    - uid: backupType
  - name: properties.failureReason
    isReadyOnly: true
    description: Failure reason
    types:
    - uid: string
  - name: properties.volumeName
    isReadyOnly: true
    description: Volume name
    types:
    - uid: string
  - name: properties.useExistingSnapshot
    description: Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups
    types:
    - uid: boolean
    defaultValue: false
- name: backupType
  description: backupType
  kind: enum
  properties:
  - name: Manual
    description: Manual backup
    types:
    - uid: string
  - name: Scheduled
    description: Scheduled backup
    types:
    - uid: string
examples:
- name: Backups_List
  request:
    uri: GET https://management.azure.com/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/backups?api-version=2021-10-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/backups?api-version=2021-10-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for Backups List. */
      public final class Main {
          /*
           * x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/Backups_List.json
           */
          /**
           * Sample code: Backups_List.
           *
           * @param manager Entry point to NetAppFilesManager.
           */
          public static void backupsList(com.azure.resourcemanager.netapp.NetAppFilesManager manager) {
              manager.backups().list("myRG", "account1", "pool1", "volume1", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-netapp_1.0.0-beta.8/sdk/netapp/azure-resourcemanager-netapp/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetapp_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/netapp/armnetapp"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/Backups_List.json
      func ExampleBackupsClient_NewListPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetapp.NewBackupsClient("D633CC2E-722B-4AE1-B636-BBD9E4C60ED9", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListPager("myRG",
      		"account1",
      		"pool1",
      		"volume1",
      		nil)
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetapp%2Farmnetapp%2Fv1.0.0/sdk/resourcemanager/netapp/armnetapp/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { NetAppManagementClient } = require("@azure/arm-netapp");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to List all backups for a volume
       *
       * @summary List all backups for a volume
       * x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2021-10-01/examples/Backups_List.json
       */
      async function backupsList() {
        const subscriptionId = "D633CC2E-722B-4AE1-B636-BBD9E4C60ED9";
        const resourceGroupName = "myRG";
        const accountName = "account1";
        const poolName = "pool1";
        const volumeName = "volume1";
        const credential = new DefaultAzureCredential();
        const client = new NetAppManagementClient(credential, subscriptionId);
        const resArray = new Array();
        for await (let item of client.backups.list(
          resourceGroupName,
          accountName,
          poolName,
          volumeName
        )) {
          resArray.push(item);
        }
        console.log(resArray);
      }

      backupsList().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-netapp_15.1.1/sdk/netapp/arm-netapp/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/backups/backup1",
            "name": "account1/pool1/volume1/backup1",
            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/backups",
            "location": "eastus",
            "properties": {
              "creationDate": "2017-08-15T13:23:33Z",
              "provisioningState": "Succeeded",
              "size": 10011,
              "label": "myLabel",
              "backupType": "Manual"
            }
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: "Learn more about Azure NetApp Files service - List Backups  \nList all backups for a volume"
errorCodes: []
