### YamlMime:RESTOperation
uid: management.azure.com.eventhub.stable.schemaregistry.get
name: Get
service: Event Hubs
groupName: Schema Registry
apiVersion: 2021-11-01
summary: ''
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/schemagroups/{schemaGroupName}?api-version=2021-11-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the resource group within the azure subscription.
  types:
  - uid: string
- name: namespaceName
  in: path
  isRequired: true
  description: The Namespace name
  types:
  - uid: string
- name: schemaGroupName
  in: path
  isRequired: true
  description: 'The Schema Group name '
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved the Schema Group description.
  types:
  - uid: SchemaGroup
- name: Other Status Codes
  description: Eventhub error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: SchemaGroup
  description: Single item in List or Get Schema Group operation
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: The system meta data relating to this resource.
    types:
    - uid: systemData
  - name: properties.updatedAtUtc
    isReadyOnly: true
    description: Exact time the Schema Group was updated
    types:
    - uid: string
  - name: properties.createdAtUtc
    isReadyOnly: true
    description: Exact time the Schema Group was created.
    types:
    - uid: string
  - name: properties.eTag
    isReadyOnly: true
    description: The ETag value.
    types:
    - uid: string
  - name: properties.groupProperties
    description: dictionary object for SchemaGroup group properties
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.schemaCompatibility
    description: ''
    types:
    - uid: SchemaCompatibility
  - name: properties.schemaType
    description: ''
    types:
    - uid: SchemaType
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
    types:
    - uid: string
  - name: location
    isReadyOnly: true
    description: The geo-location where the resource lives
    types:
    - uid: string
- name: ErrorResponse
  description: Error response indicates Event Hub service is not able to process the incoming request. The reason is provided in the error message.
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The type of identity that last modified the resource.
    types:
    - uid: string
- name: SchemaCompatibility
  description: ''
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: Backward
    types:
    - uid: string
  - name: Forward
    types:
    - uid: string
- name: SchemaType
  description: ''
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: Avro
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: SchemaRegistryGet
  request:
    uri: GET https://management.azure.com/subscriptions/e8baea74-64ce-459b-bee3-5aa4c47b3ae3/resourceGroups/alitest/providers/Microsoft.EventHub/namespaces/ali-ua-test-eh-system-1/schemagroups/testSchemaGroup1?api-version=2021-11-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/e8baea74-64ce-459b-bee3-5aa4c47b3ae3/resourceGroups/alitest/providers/Microsoft.EventHub/namespaces/ali-ua-test-eh-system-1/schemagroups/testSchemaGroup1?api-version=2021-11-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for SchemaRegistry Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/eventhub/resource-manager/Microsoft.EventHub/stable/2021-11-01/examples/SchemaRegistry/SchemaRegistryGet.json
           */
          /**
           * Sample code: SchemaRegistryGet.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void schemaRegistryGet(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .eventHubs()
                  .manager()
                  .serviceClient()
                  .getSchemaRegistries()
                  .getWithResponse("alitest", "ali-ua-test-eh-system-1", "testSchemaGroup1", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armeventhub_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/eventhub/armeventhub"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/eventhub/resource-manager/Microsoft.EventHub/stable/2021-11-01/examples/SchemaRegistry/SchemaRegistryGet.json
      func ExampleSchemaRegistryClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armeventhub.NewSchemaRegistryClient("e8baea74-64ce-459b-bee3-5aa4c47b3ae3", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"alitest",
      		"ali-ua-test-eh-system-1",
      		"testSchemaGroup1",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Feventhub%2Farmeventhub%2Fv1.0.0/sdk/resourcemanager/eventhub/armeventhub/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { EventHubManagementClient } = require("@azure/arm-eventhub");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to
       *
       * @summary
       * x-ms-original-file: specification/eventhub/resource-manager/Microsoft.EventHub/stable/2021-11-01/examples/SchemaRegistry/SchemaRegistryGet.json
       */
      async function schemaRegistryGet() {
        const subscriptionId = "e8baea74-64ce-459b-bee3-5aa4c47b3ae3";
        const resourceGroupName = "alitest";
        const namespaceName = "ali-ua-test-eh-system-1";
        const schemaGroupName = "testSchemaGroup1";
        const credential = new DefaultAzureCredential();
        const client = new EventHubManagementClient(credential, subscriptionId);
        const result = await client.schemaRegistry.get(resourceGroupName, namespaceName, schemaGroupName);
        console.log(result);
      }

      schemaRegistryGet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-eventhub_5.0.1/sdk/eventhub/arm-eventhub/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/e8baea74-64ce-459b-bee3-5aa4c47b3ae3/resourceGroups/alitest/providers/Microsoft.EventHub/namespaces/ali-ua-test-eh-system-1/schemagroups/testSchemaGroup1",
        "name": "testSchemaGroup1",
        "type": "Microsoft.EventHub/Namespaces/SchemaGroups",
        "location": "EAST US 2 EUAP",
        "properties": {
          "updatedAtUtc": "2021-10-13T03:08:11.1671879Z",
          "createdAtUtc": "2021-10-13T03:08:11.1671879Z",
          "eTag": "51ddcff4-a287-423c-b194-7a8ebbfd8366",
          "groupProperties": {},
          "schemaCompatibility": "Forward",
          "schemaType": "Avro"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Event Hubs service
errorCodes: []
