### YamlMime:RESTOperation
uid: management.azure.com.eventhub.stable.checknameavailability-namespaces.checknameavailability
name: Check Name Availability
service: Event Hubs
groupName: Check Name Availability - Namespaces
apiVersion: 2021-11-01
summary: Check the give Namespace name availability.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/checkNameAvailability?api-version=2021-11-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: check availability returned successfully.
  types:
  - uid: CheckNameAvailabilityResult
- name: Other Status Codes
  description: Eventhub error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    isRequired: true
    description: Name to check the namespace name availability
    types:
    - uid: string
requestHeader: []
definitions:
- name: CheckNameAvailabilityResult
  description: The Result of the CheckNameAvailability operation
  kind: object
  properties:
  - name: message
    isReadyOnly: true
    description: The detailed info regarding the reason associated with the Namespace.
    types:
    - uid: string
  - name: nameAvailable
    description: Value indicating Namespace is availability, true if the Namespace is available; otherwise, false.
    types:
    - uid: boolean
  - name: reason
    description: The reason for unavailability of a Namespace.
    types:
    - uid: UnavailableReason
- name: ErrorResponse
  description: Error response indicates Event Hub service is not able to process the incoming request. The reason is provided in the error message.
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: CheckNameAvailabilityParameter
  description: 'Parameter supplied to check Namespace name availability operation '
  kind: object
  properties:
  - name: name
    description: Name to check the namespace name availability
    types:
    - uid: string
- name: UnavailableReason
  description: Specifies the reason for the unavailability of the service.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: InvalidName
    types:
    - uid: string
  - name: SubscriptionIsDisabled
    types:
    - uid: string
  - name: NameInUse
    types:
    - uid: string
  - name: NameInLockdown
    types:
    - uid: string
  - name: TooManyNamespaceInCurrentSubscription
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: NamespacesCheckNameAvailability
  request:
    uri: POST https://management.azure.com/subscriptions/5f750a97-50d9-4e36-8081-c9ee4c0210d4/providers/Microsoft.EventHub/checkNameAvailability?api-version=2021-11-01
    body: >-
      {
        "name": "sdk-Namespace-8458"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/5f750a97-50d9-4e36-8081-c9ee4c0210d4/providers/Microsoft.EventHub/checkNameAvailability?api-version=2021-11-01

      {
        "name": "sdk-Namespace-8458"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.eventhubs.models.CheckNameAvailabilityParameter;

      /** Samples for Namespaces CheckNameAvailability. */
      public final class Main {
          /*
           * x-ms-original-file: specification/eventhub/resource-manager/Microsoft.EventHub/stable/2021-11-01/examples/NameSpaces/EHNameSpaceCheckNameAvailability.json
           */
          /**
           * Sample code: NamespacesCheckNameAvailability.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void namespacesCheckNameAvailability(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .eventHubs()
                  .manager()
                  .serviceClient()
                  .getNamespaces()
                  .checkNameAvailabilityWithResponse(
                      new CheckNameAvailabilityParameter().withName("sdk-Namespace-8458"), Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armeventhub_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/eventhub/armeventhub"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/eventhub/resource-manager/Microsoft.EventHub/stable/2021-11-01/examples/NameSpaces/EHNameSpaceCheckNameAvailability.json
      func ExampleNamespacesClient_CheckNameAvailability() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armeventhub.NewNamespacesClient("5f750a97-50d9-4e36-8081-c9ee4c0210d4", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CheckNameAvailability(ctx,
      		armeventhub.CheckNameAvailabilityParameter{
      			Name: to.Ptr("sdk-Namespace-8458"),
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Feventhub%2Farmeventhub%2Fv1.0.0/sdk/resourcemanager/eventhub/armeventhub/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { EventHubManagementClient } = require("@azure/arm-eventhub");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Check the give Namespace name availability.
       *
       * @summary Check the give Namespace name availability.
       * x-ms-original-file: specification/eventhub/resource-manager/Microsoft.EventHub/stable/2021-11-01/examples/NameSpaces/EHNameSpaceCheckNameAvailability.json
       */
      async function namespacesCheckNameAvailability() {
        const subscriptionId = "5f750a97-50d9-4e36-8081-c9ee4c0210d4";
        const parameters = {
          name: "sdk-Namespace-8458",
        };
        const credential = new DefaultAzureCredential();
        const client = new EventHubManagementClient(credential, subscriptionId);
        const result = await client.namespaces.checkNameAvailability(parameters);
        console.log(result);
      }

      namespacesCheckNameAvailability().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-eventhub_5.0.1/sdk/eventhub/arm-eventhub/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "nameAvailable": true,
        "reason": "None",
        "message": ""
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Event Hubs service - Check the give Namespace name availability.
errorCodes: []
