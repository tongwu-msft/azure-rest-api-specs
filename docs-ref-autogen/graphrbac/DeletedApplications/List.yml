### YamlMime:RESTOperation
uid: graph.windows.net.graphrbac.deletedapplications.list
name: List
service: Graph RBAC
groupName: Deleted Applications
apiVersion: "1.6"
summary: Gets a list of deleted applications in the directory.
consumes:
- application/json
- text/json
produces:
- application/json
- text/json
paths:
- content: GET https://graph.windows.net/{tenantID}/deletedApplications?api-version=1.6
- content: GET https://graph.windows.net/{tenantID}/deletedApplications?$filter={$filter}&api-version=1.6
  isOptional: true
uriParameters:
- name: tenantID
  in: path
  isRequired: true
  description: The tenant ID.
  types:
  - uid: string
- name: $filter
  in: query
  description: The filter to apply to the operation.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The applications were retrieved successfully.
  types:
  - uid: ApplicationListResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: GraphError
requestHeader: []
definitions:
- name: ApplicationListResult
  description: Application list operation result.
  kind: object
  properties:
  - name: value
    description: A collection of applications.
    types:
    - uid: Application
      isArray: true
  - name: odata.nextLink
    description: The URL to get the next set of results.
    types:
    - uid: string
- name: GraphError
  description: Active Directory error information.
  kind: object
  properties:
  - name: odata.error.code
    description: Error code.
    types:
    - uid: string
  - name: odata.error.message.value
    description: Error message value.
    types:
    - uid: string
- name: Application
  description: Active Directory application information.
  kind: object
  properties:
  - name: appId
    description: The application ID.
    types:
    - uid: string
  - name: appRoles
    description: The collection of application roles that an application may declare. These roles can be assigned to users, groups or service principals.
    types:
    - uid: AppRole
      isArray: true
  - name: appPermissions
    description: The application permissions.
    types:
    - uid: string
      isArray: true
  - name: availableToOtherTenants
    description: Whether the application is be available to other tenants.
    types:
    - uid: boolean
  - name: displayName
    description: The display name of the application.
    types:
    - uid: string
  - name: identifierUris
    description: A collection of URIs for the application.
    types:
    - uid: string
      isArray: true
  - name: replyUrls
    description: A collection of reply URLs for the application.
    types:
    - uid: string
      isArray: true
  - name: homepage
    description: The home page of the application.
    types:
    - uid: string
  - name: oauth2AllowImplicitFlow
    description: Whether to allow implicit grant flow for OAuth2
    types:
    - uid: boolean
  - name: requiredResourceAccess
    description: Specifies resources that this application requires access to and the set of OAuth permission scopes and application roles that it needs under each of those resources. This pre-configuration of required resource access drives the consent experience.
    types:
    - uid: RequiredResourceAccess
      isArray: true
  - name: objectId
    isReadyOnly: true
    description: The object ID.
    types:
    - uid: string
  - name: objectType
    isReadyOnly: true
    description: The object type.
    types:
    - uid: string
  - name: deletionTimestamp
    isReadyOnly: true
    description: The time at which the directory object was deleted.
    types:
    - uid: string
- name: AppRole
  kind: object
  properties:
  - name: id
    description: Unique role identifier inside the appRoles collection.
    types:
    - uid: string
  - name: allowedMemberTypes
    description: "Specifies whether this app role definition can be assigned to users and groups by setting to 'User', or to other applications (that are accessing this application in daemon service scenarios) by setting to 'Application', or to both. "
    types:
    - uid: string
      isArray: true
  - name: description
    description: Permission help text that appears in the admin app assignment and consent experiences.
    types:
    - uid: string
  - name: displayName
    description: Display name for the permission that appears in the admin consent and app assignment experiences.
    types:
    - uid: string
  - name: isEnabled
    description: When creating or updating a role definition, this must be set to true (which is the default). To delete a role, this must first be set to false. At that point, in a subsequent call, this role may be removed.
    types:
    - uid: boolean
  - name: value
    description: Specifies the value of the roles claim that the application should expect in the authentication and access tokens.
    types:
    - uid: string
- name: RequiredResourceAccess
  description: Specifies the set of OAuth 2.0 permission scopes and app roles under the specified resource that an application requires access to. The specified OAuth 2.0 permission scopes may be requested by client applications (through the requiredResourceAccess collection) when calling a resource application. The requiredResourceAccess property of the Application entity is a collection of ReqiredResourceAccess.
  kind: object
  properties:
  - name: resourceAccess
    description: The list of OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
    types:
    - uid: ResourceAccess
      isArray: true
  - name: resourceAppId
    description: The unique identifier for the resource that the application requires access to. This should be equal to the appId declared on the target resource application.
    types:
    - uid: string
- name: ResourceAccess
  description: Specifies an OAuth 2.0 permission scope or an app role that an application requires. The resourceAccess property of the RequiredResourceAccess type is a collection of ResourceAccess.
  kind: object
  properties:
  - name: id
    description: The unique identifier for one of the OAuth2Permission or AppRole instances that the resource application exposes.
    types:
    - uid: string
  - name: type
    description: Specifies whether the id property references an OAuth2Permission or an AppRole. Possible values are "scope" or "role".
    types:
    - uid: string
examples: []
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
