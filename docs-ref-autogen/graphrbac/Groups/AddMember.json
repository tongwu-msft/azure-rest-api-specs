{
  "swagger": "2.0",
  "info": {
    "version": "1.6",
    "title": "GraphRbacManagementClient",
    "description": "The Graph RBAC Management Client"
  },
  "host": "graph.windows.net",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{tenantID}/groups/{groupObjectId}/$links/members": {
      "post": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_AddMember",
        "description": "Add a member to a group.",
        "parameters": [
          {
            "name": "groupObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID of the group to which to add the member.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupAddMemberParameters"
            },
            "description": "The URL of the member object, such as https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content. Indicates success. No response body is returned."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "produces": [
          "application/json",
          "text/json"
        ],
        "consumes": [
          "application/json",
          "text/json"
        ],
        "x-internal-toc-name": "Add Member"
      }
    }
  },
  "x-ms-paths": {
    "/{tenantID}/{nextLink}?Groups_ListNext": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_ListNext",
        "description": "Gets a list of groups for the current tenant.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for the list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/GroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "Groups_ListNext"
        },
        "produces": [
          "application/json",
          "text/json"
        ],
        "consumes": [
          "application/json",
          "text/json"
        ]
      }
    },
    "/{tenantID}/{nextLink}?Groups_GetGroupMembersNext": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_GetGroupMembersNext",
        "description": "Gets the members of a group.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for the list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/GetObjectsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "Groups_GetGroupMembersNext"
        },
        "produces": [
          "application/json",
          "text/json"
        ],
        "consumes": [
          "application/json",
          "text/json"
        ]
      }
    },
    "/{tenantID}/{nextLink}?Applications_ListNext": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "Applications_ListNext",
        "description": "Gets a list of applications from the current tenant.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for the list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/ApplicationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "Applications_ListNext"
        },
        "produces": [
          "application/json",
          "text/json"
        ],
        "consumes": [
          "application/json",
          "text/json"
        ]
      }
    },
    "/{tenantID}/{nextLink}?ServicePrincipals_ListNext": {
      "get": {
        "tags": [
          "ServicePrincipal"
        ],
        "operationId": "ServicePrincipals_ListNext",
        "description": "Gets a list of service principals from the current tenant.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for the list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/ServicePrincipalListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "ServicePrincipals_ListNext"
        },
        "produces": [
          "application/json",
          "text/json"
        ],
        "consumes": [
          "application/json",
          "text/json"
        ]
      }
    },
    "/{tenantID}/{nextLink}?Users_ListNext": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "Users_ListNext",
        "description": "Gets a list of users for the current tenant.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for the list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/UserListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "Users_ListNext"
        },
        "produces": [
          "application/json",
          "text/json"
        ],
        "consumes": [
          "application/json",
          "text/json"
        ]
      }
    },
    "/{tenantID}/{nextLink}?Objects_GetObjectsByObjectIdsNext": {
      "post": {
        "tags": [
          "Objects"
        ],
        "operationId": "Objects_GetObjectsByObjectIdsNext",
        "description": "Gets AD group membership for the specified AD object IDs.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for the list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/GetObjectsResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "Objects_GetObjectsByObjectIdsNext"
        },
        "produces": [
          "application/json",
          "text/json"
        ],
        "consumes": [
          "application/json",
          "text/json"
        ]
      }
    }
  },
  "definitions": {
    "GraphError": {
      "properties": {
        "odata.error": {
          "type": "object",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OdataError",
          "description": "A Graph API error."
        }
      },
      "description": "Active Directory error information."
    },
    "OdataError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "object",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ErrorMessage",
          "description": "Error Message."
        }
      },
      "description": "Active Directory OData error information."
    },
    "ErrorMessage": {
      "properties": {
        "value": {
          "type": "string",
          "x-ms-client-name": "message",
          "description": "Error message value."
        }
      },
      "description": "Active Directory error message."
    },
    "KeyCredential": {
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Start date."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "End date."
        },
        "value": {
          "type": "string",
          "description": "Key value."
        },
        "keyId": {
          "type": "string",
          "description": "Key ID."
        },
        "usage": {
          "type": "string",
          "description": "Usage. Acceptable values are 'Verify' and 'Sign'."
        },
        "type": {
          "type": "string",
          "description": "Type. Acceptable values are 'AsymmetricX509Cert' and 'Symmetric'."
        }
      },
      "description": "Active Directory Key Credential information."
    },
    "PasswordCredential": {
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Start date."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "End date."
        },
        "keyId": {
          "type": "string",
          "description": "Key ID."
        },
        "value": {
          "type": "string",
          "description": "Key value."
        }
      },
      "description": "Active Directory Password Credential information."
    },
    "RequiredResourceAccess": {
      "properties": {
        "resourceAccess": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceAccess"
          },
          "description": "The list of OAuth2.0 permission scopes and app roles that the application requires from the specified resource."
        },
        "resourceAppId": {
          "type": "string",
          "description": "The unique identifier for the resource that the application requires access to. This should be equal to the appId declared on the target resource application."
        }
      },
      "required": [
        "resourceAccess"
      ],
      "description": "Specifies the set of OAuth 2.0 permission scopes and app roles under the specified resource that an application requires access to. The specified OAuth 2.0 permission scopes may be requested by client applications (through the requiredResourceAccess collection) when calling a resource application. The requiredResourceAccess property of the Application entity is a collection of ReqiredResourceAccess."
    },
    "ResourceAccess": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for one of the OAuth2Permission or AppRole instances that the resource application exposes."
        },
        "type": {
          "type": "string",
          "description": "Specifies whether the id property references an OAuth2Permission or an AppRole. Possible values are \"scope\" or \"role\"."
        }
      },
      "required": [
        "id"
      ],
      "description": "Specifies an OAuth 2.0 permission scope or an app role that an application requires. The resourceAccess property of the RequiredResourceAccess type is a collection of ResourceAccess."
    },
    "ApplicationCreateParameters": {
      "properties": {
        "availableToOtherTenants": {
          "type": "boolean",
          "description": "Whether the application is available to other tenants."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the application."
        },
        "homepage": {
          "type": "string",
          "description": "The home page of the application."
        },
        "identifierUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of URIs for the application."
        },
        "replyUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of reply URLs for the application."
        },
        "keyCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyCredential"
          },
          "description": "The list of KeyCredential objects."
        },
        "passwordCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordCredential"
          },
          "description": "The list of PasswordCredential objects."
        },
        "oauth2AllowImplicitFlow": {
          "type": "boolean",
          "description": "Whether to allow implicit grant flow for OAuth2"
        },
        "requiredResourceAccess": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequiredResourceAccess"
          },
          "description": "Specifies resources that this application requires access to and the set of OAuth permission scopes and application roles that it needs under each of those resources. This pre-configuration of required resource access drives the consent experience."
        }
      },
      "required": [
        "availableToOtherTenants",
        "displayName",
        "identifierUris"
      ],
      "description": "Request parameters for creating a new application."
    },
    "ApplicationUpdateParameters": {
      "properties": {
        "availableToOtherTenants": {
          "type": "boolean",
          "description": "Whether the application is available to other tenants"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the application."
        },
        "homepage": {
          "type": "string",
          "description": "The home page of the application."
        },
        "identifierUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of URIs for the application."
        },
        "replyUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of reply URLs for the application."
        },
        "keyCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyCredential"
          },
          "description": "The list of KeyCredential objects."
        },
        "passwordCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordCredential"
          },
          "description": "The list of PasswordCredential objects."
        },
        "oauth2AllowImplicitFlow": {
          "type": "boolean",
          "description": "Whether to allow implicit grant flow for OAuth2"
        },
        "requiredResourceAccess": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequiredResourceAccess"
          },
          "description": "Specifies resources that this application requires access to and the set of OAuth permission scopes and application roles that it needs under each of those resources. This pre-configuration of required resource access drives the consent experience."
        }
      },
      "description": "Request parameters for updating an existing application."
    },
    "Application": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "The object ID."
        },
        "objectType": {
          "type": "string",
          "description": "The object type."
        },
        "appId": {
          "type": "string",
          "description": "The application ID."
        },
        "appPermissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The application permissions."
        },
        "availableToOtherTenants": {
          "type": "boolean",
          "description": "Whether the application is be available to other tenants."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the application."
        },
        "identifierUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of URIs for the application."
        },
        "replyUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of reply URLs for the application."
        },
        "homepage": {
          "type": "string",
          "description": "The home page of the application."
        },
        "oauth2AllowImplicitFlow": {
          "type": "boolean",
          "description": "Whether to allow implicit grant flow for OAuth2"
        }
      },
      "description": "Active Directory application information."
    },
    "ApplicationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Application"
          },
          "description": "A collection of applications."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Application list operation result."
    },
    "KeyCredentialListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyCredential"
          },
          "description": "A collection of KeyCredentials."
        }
      },
      "description": "KeyCredential list operation result."
    },
    "KeyCredentialsUpdateParameters": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyCredential"
          },
          "description": "A collection of KeyCredentials."
        }
      },
      "required": [
        "value"
      ],
      "description": "Request parameters for a KeyCredentials update operation"
    },
    "PasswordCredentialListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordCredential"
          },
          "description": "A collection of PasswordCredentials."
        }
      },
      "description": "PasswordCredential list operation result."
    },
    "PasswordCredentialsUpdateParameters": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordCredential"
          },
          "description": "A collection of PasswordCredentials."
        }
      },
      "required": [
        "value"
      ],
      "description": "Request parameters for a PasswordCredentials update operation."
    },
    "AADObject": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "The ID of the object."
        },
        "objectType": {
          "type": "string",
          "description": "The type of AAD object."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the object."
        },
        "userPrincipalName": {
          "type": "string",
          "description": "The principal name of the object."
        },
        "mail": {
          "type": "string",
          "description": "The primary email address of the object."
        },
        "mailEnabled": {
          "type": "boolean",
          "description": "Whether the AAD object is mail-enabled."
        },
        "mailNickname": {
          "type": "string",
          "description": "The mail alias for the user.",
          "readOnly": true
        },
        "securityEnabled": {
          "type": "boolean",
          "description": "Whether the AAD object is security-enabled."
        },
        "signInName": {
          "type": "string",
          "description": "The sign-in name of the object."
        },
        "servicePrincipalNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of service principal names associated with the object."
        },
        "userType": {
          "type": "string",
          "description": "The user type of the object."
        },
        "usageLocation": {
          "type": "string",
          "description": "A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. Examples include: \"US\", \"JP\", and \"GB\".",
          "readOnly": true
        },
        "appId": {
          "type": "string",
          "description": "The application ID.",
          "readOnly": true
        },
        "appPermissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The application permissions.",
          "readOnly": true
        },
        "availableToOtherTenants": {
          "type": "boolean",
          "description": "Whether the application is be available to other tenants.",
          "readOnly": true
        },
        "identifierUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of URIs for the application.",
          "readOnly": true
        },
        "replyUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of reply URLs for the application.",
          "readOnly": true
        },
        "homepage": {
          "type": "string",
          "description": "The home page of the application.",
          "readOnly": true
        }
      },
      "description": "The properties of an Active Directory object."
    },
    "GetObjectsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AADObject"
          },
          "description": "A collection of Active Directory objects."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The response to an Active Directory object inquiry API request."
    },
    "GroupAddMemberParameters": {
      "properties": {
        "url": {
          "type": "string",
          "description": "A member object URL, such as \"https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd\", where \"0b1f9851-1bf0-433f-aec3-cb9272f093dc\" is the tenantId and \"f260bbc4-c254-447b-94cf-293b5ec434dd\" is the objectId of the member (user, application, servicePrincipal, group) to be added."
        }
      },
      "required": [
        "url"
      ],
      "description": "Request parameters for adding a member to a group."
    },
    "GroupCreateParameters": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Group display name"
        },
        "mailEnabled": {
          "type": "boolean",
          "description": "Whether the group is mail-enabled. Must be false. This is because only pure security groups can be created using the Graph API.",
          "enum": [
            false
          ]
        },
        "mailNickname": {
          "type": "string",
          "description": "Mail nickname"
        },
        "securityEnabled": {
          "type": "boolean",
          "description": "Whether the group is a security group. Must be true. This is because only pure security groups can be created using the Graph API.",
          "enum": [
            true
          ]
        }
      },
      "required": [
        "displayName",
        "mailEnabled",
        "mailNickname",
        "securityEnabled"
      ],
      "description": "Request parameters for creating a new group."
    },
    "ADGroup": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "The object ID."
        },
        "objectType": {
          "type": "string",
          "description": "The object type."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the group."
        },
        "securityEnabled": {
          "type": "boolean",
          "description": "Whether the group is security-enable."
        },
        "mail": {
          "type": "string",
          "description": "The primary email address of the group."
        }
      },
      "description": "Active Directory group information."
    },
    "GroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ADGroup"
          },
          "description": "A collection of Active Directory groups."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Server response for Get tenant groups API call"
    },
    "GroupGetMemberGroupsParameters": {
      "properties": {
        "securityEnabledOnly": {
          "type": "boolean",
          "description": "If true, only membership in security-enabled groups should be checked. Otherwise, membership in all groups should be checked."
        }
      },
      "required": [
        "securityEnabledOnly"
      ],
      "description": "Request parameters for GetMemberGroups API call."
    },
    "GroupGetMemberGroupsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of group IDs of which the group is a member."
        }
      },
      "description": "Server response for GetMemberGroups API call."
    },
    "CheckGroupMembershipParameters": {
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The object ID of the group to check."
        },
        "memberId": {
          "type": "string",
          "description": "The object ID of the contact, group, user, or service principal to check for membership in the specified group."
        }
      },
      "required": [
        "groupId",
        "memberId"
      ],
      "description": "Request parameters for IsMemberOf API call."
    },
    "CheckGroupMembershipResult": {
      "properties": {
        "value": {
          "type": "boolean",
          "description": "True if the specified user, group, contact, or service principal has either direct or transitive membership in the specified group; otherwise, false."
        }
      },
      "description": "Server response for IsMemberOf API call"
    },
    "ServicePrincipalCreateParameters": {
      "properties": {
        "appId": {
          "type": "string",
          "description": "application Id"
        },
        "accountEnabled": {
          "type": "boolean",
          "description": "Whether the account is enabled"
        },
        "keyCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyCredential"
          },
          "description": "A collection of KeyCredential objects."
        },
        "passwordCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordCredential"
          },
          "description": "A collection of PasswordCredential objects"
        }
      },
      "required": [
        "appId",
        "accountEnabled"
      ],
      "description": "Request parameters for creating a new service principal."
    },
    "ServicePrincipal": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "The object ID."
        },
        "objectType": {
          "type": "string",
          "description": "The object type."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the service principal."
        },
        "appId": {
          "type": "string",
          "description": "The application ID."
        },
        "servicePrincipalNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of service principal names."
        }
      },
      "description": "Active Directory service principal information."
    },
    "ServicePrincipalListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServicePrincipal"
          },
          "description": "the list of service principals."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "the URL to get the next set of results."
        }
      },
      "description": "Server response for get tenant service principals API call."
    },
    "PasswordProfile": {
      "properties": {
        "password": {
          "type": "string",
          "description": "Password"
        },
        "forceChangePasswordNextLogin": {
          "type": "boolean",
          "description": "Whether to force a password change on next login."
        }
      },
      "required": [
        "password"
      ],
      "description": "The password profile associated with a user."
    },
    "UserBase": {
      "properties": {
        "immutableId": {
          "type": "string",
          "description": "This must be specified if you are using a federated domain for the user's userPrincipalName (UPN) property when creating a new user account. It is used to associate an on-premises Active Directory user account with their Azure AD user object."
        },
        "usageLocation": {
          "type": "string",
          "description": "A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. Examples include: \"US\", \"JP\", and \"GB\"."
        },
        "givenName": {
          "type": "string",
          "description": "The given name for the user."
        },
        "surname": {
          "type": "string",
          "description": "The user's surname (family name or last name)."
        },
        "userType": {
          "type": "string",
          "description": "A string value that can be used to classify user types in your directory, such as 'Member' and 'Guest'.",
          "enum": [
            "Member",
            "Guest"
          ],
          "x-ms-enum": {
            "name": "UserType",
            "modelAsString": true
          }
        }
      }
    },
    "UserCreateParameters": {
      "allOf": [
        {
          "$ref": "#/definitions/UserBase"
        }
      ],
      "properties": {
        "accountEnabled": {
          "type": "boolean",
          "description": "Whether the account is enabled."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the user."
        },
        "passwordProfile": {
          "$ref": "#/definitions/PasswordProfile",
          "description": "Password Profile"
        },
        "userPrincipalName": {
          "type": "string",
          "description": "The user principal name (someuser@contoso.com). It must contain one of the verified domains for the tenant."
        },
        "mailNickname": {
          "type": "string",
          "description": "The mail alias for the user."
        },
        "mail": {
          "type": "string",
          "description": "The primary email address of the user."
        }
      },
      "required": [
        "accountEnabled",
        "displayName",
        "passwordProfile",
        "userPrincipalName",
        "mailNickname"
      ],
      "description": "Request parameters for creating a new work or school account user."
    },
    "UserUpdateParameters": {
      "allOf": [
        {
          "$ref": "#/definitions/UserBase"
        }
      ],
      "properties": {
        "accountEnabled": {
          "type": "boolean",
          "description": "Whether the account is enabled."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the user."
        },
        "passwordProfile": {
          "$ref": "#/definitions/PasswordProfile",
          "description": "The password profile of the user."
        },
        "userPrincipalName": {
          "type": "string",
          "description": "The user principal name (someuser@contoso.com). It must contain one of the verified domains for the tenant."
        },
        "mailNickname": {
          "type": "string",
          "description": "The mail alias for the user."
        }
      },
      "description": "Request parameters for updating an existing work or school account user."
    },
    "User": {
      "allOf": [
        {
          "$ref": "#/definitions/UserBase"
        }
      ],
      "properties": {
        "accountEnabled": {
          "type": "boolean",
          "description": "Whether the account is enabled."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the user."
        },
        "userPrincipalName": {
          "type": "string",
          "description": "The principal name of the user."
        },
        "mailNickname": {
          "type": "string",
          "description": "The mail alias for the user."
        },
        "mail": {
          "type": "string",
          "description": "The primary email address of the user."
        },
        "objectId": {
          "type": "string",
          "description": "The object ID."
        },
        "objectType": {
          "type": "string",
          "description": "The object type."
        },
        "signInNames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SignInName"
          },
          "description": "The sign-in names of the user."
        }
      },
      "description": "Active Directory user information."
    },
    "SignInName": {
      "properties": {
        "type": {
          "type": "string",
          "description": "A string value that can be used to classify user sign-in types in your directory, such as 'emailAddress' or 'userName'."
        },
        "value": {
          "type": "string",
          "description": "The sign-in used by the local account. Must be unique across the company/tenant. For example, 'johnc@example.com'."
        }
      },
      "description": "Contains information about a sign-in name of a local account user in an Azure Active Directory B2C tenant."
    },
    "UserGetMemberGroupsParameters": {
      "properties": {
        "securityEnabledOnly": {
          "type": "boolean",
          "description": "If true, only membership in security-enabled groups should be checked. Otherwise, membership in all groups should be checked."
        }
      },
      "required": [
        "securityEnabledOnly"
      ],
      "description": "Request parameters for GetMemberGroups API call."
    },
    "UserGetMemberGroupsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of group IDs of which the user is a member."
        }
      },
      "description": "Server response for GetMemberGroups API call."
    },
    "UserListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          },
          "description": "the list of users."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Server response for Get tenant users API call."
    },
    "GetObjectsParameters": {
      "properties": {
        "objectIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The requested object IDs."
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The requested object types."
        },
        "includeDirectoryObjectReferences": {
          "type": "boolean",
          "description": "If true, also searches for object IDs in the partner tenant."
        }
      },
      "required": [
        "includeDirectoryObjectReferences"
      ],
      "description": "Request parameters for the GetObjectsByObjectIds API."
    },
    "Domain": {
      "properties": {
        "authenticationType": {
          "type": "string",
          "description": "the type of the authentication into the domain.",
          "readOnly": true
        },
        "isDefault": {
          "type": "boolean",
          "description": "if this is the default domain in the tenant.",
          "readOnly": true
        },
        "isVerified": {
          "type": "boolean",
          "description": "if this domain's ownership is verified.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "the domain name."
        }
      },
      "required": [
        "name"
      ],
      "description": "Active Directory Domain information."
    },
    "DomainListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Domain"
          },
          "description": "the list of domains."
        }
      },
      "description": "Server response for Get tenant domains API call."
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    },
    "tenantIDInPath": {
      "name": "tenantID",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The tenant ID."
    }
  },
  "x-internal-service-name": "Graph RBAC",
  "x-internal-toc-name": "Groups",
  "x-internal-split-type": "Operation"
}