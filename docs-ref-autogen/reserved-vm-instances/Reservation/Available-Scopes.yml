### YamlMime:RESTOperation
uid: management.azure.com.reserved-vm-instances.reservation.availablescopes
name: Available Scopes
service: Reserved VM Instances
groupName: Reservation
apiVersion: 2022-03-01
summary: >
  Get Available Scopes for `Reservation`.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/availableScopes?api-version=2022-03-01
uriParameters:
- name: reservationOrderId
  in: path
  isRequired: true
  description: Order Id of the reservation
  types:
  - uid: string
- name: reservationId
  in: path
  isRequired: true
  description: Id of the Reservation Item
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Supported version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: List of `Subscription`s created after the filter.
  types:
  - uid: AvailableScopeProperties
- name: Other Status Codes
  description: Unexpected error
  types:
  - uid: Error
requestBody:
- name: default
  parameters:
  - name: properties
    in: body
    description: Available scope request properties
    types:
    - uid: AvailableScopeRequestProperties
requestHeader: []
definitions:
- name: AvailableScopeRequestProperties
  description: Available scope request properties
  kind: object
  properties:
  - name: scopes
    description: ''
    types:
    - uid: string
      isArray: true
- name: AvailableScopeProperties
  kind: object
  properties:
  - name: properties
    description: ''
    types:
    - uid: SubscriptionScopeProperties
- name: Error
  kind: object
  properties:
  - name: error
    description: ''
    types:
    - uid: ExtendedErrorInfo
- name: AvailableScopeRequest
  description: Available scope
  kind: object
  properties:
  - name: properties
    description: Available scope request properties
    types:
    - uid: AvailableScopeRequestProperties
- name: SubscriptionScopeProperties
  kind: object
  properties:
  - name: scopes
    description: ''
    types:
    - uid: ScopeProperties
      isArray: true
- name: ExtendedErrorInfo
  kind: object
  properties:
  - name: code
    description: ''
    types:
    - uid: ErrorResponseCode
  - name: message
    description: ''
    types:
    - uid: string
- name: ScopeProperties
  kind: object
  properties:
  - name: scope
    description: ''
    types:
    - uid: string
  - name: valid
    description: ''
    types:
    - uid: boolean
- name: ErrorResponseCode
  kind: enum
  properties:
  - name: NotSpecified
    types:
    - uid: string
  - name: InternalServerError
    types:
    - uid: string
  - name: ServerTimeout
    types:
    - uid: string
  - name: AuthorizationFailed
    types:
    - uid: string
  - name: BadRequest
    types:
    - uid: string
  - name: ClientCertificateThumbprintNotSet
    types:
    - uid: string
  - name: InvalidRequestContent
    types:
    - uid: string
  - name: OperationFailed
    types:
    - uid: string
  - name: HttpMethodNotSupported
    types:
    - uid: string
  - name: InvalidRequestUri
    types:
    - uid: string
  - name: MissingTenantId
    types:
    - uid: string
  - name: InvalidTenantId
    types:
    - uid: string
  - name: InvalidReservationOrderId
    types:
    - uid: string
  - name: InvalidReservationId
    types:
    - uid: string
  - name: ReservationIdNotInReservationOrder
    types:
    - uid: string
  - name: ReservationOrderNotFound
    types:
    - uid: string
  - name: InvalidSubscriptionId
    types:
    - uid: string
  - name: InvalidAccessToken
    types:
    - uid: string
  - name: InvalidLocationId
    types:
    - uid: string
  - name: UnauthenticatedRequestsThrottled
    types:
    - uid: string
  - name: InvalidHealthCheckType
    types:
    - uid: string
  - name: Forbidden
    types:
    - uid: string
  - name: BillingScopeIdCannotBeChanged
    types:
    - uid: string
  - name: AppliedScopesNotAssociatedWithCommerceAccount
    types:
    - uid: string
  - name: PatchValuesSameAsExisting
    types:
    - uid: string
  - name: RoleAssignmentCreationFailed
    types:
    - uid: string
  - name: ReservationOrderCreationFailed
    types:
    - uid: string
  - name: ReservationOrderNotEnabled
    types:
    - uid: string
  - name: CapacityUpdateScopesFailed
    types:
    - uid: string
  - name: UnsupportedReservationTerm
    types:
    - uid: string
  - name: ReservationOrderIdAlreadyExists
    types:
    - uid: string
  - name: RiskCheckFailed
    types:
    - uid: string
  - name: CreateQuoteFailed
    types:
    - uid: string
  - name: ActivateQuoteFailed
    types:
    - uid: string
  - name: NonsupportedAccountId
    types:
    - uid: string
  - name: PaymentInstrumentNotFound
    types:
    - uid: string
  - name: MissingAppliedScopesForSingle
    types:
    - uid: string
  - name: NoValidReservationsToReRate
    types:
    - uid: string
  - name: ReRateOnlyAllowedForEA
    types:
    - uid: string
  - name: OperationCannotBePerformedInCurrentState
    types:
    - uid: string
  - name: InvalidSingleAppliedScopesCount
    types:
    - uid: string
  - name: InvalidFulfillmentRequestParameters
    types:
    - uid: string
  - name: NotSupportedCountry
    types:
    - uid: string
  - name: InvalidRefundQuantity
    types:
    - uid: string
  - name: PurchaseError
    types:
    - uid: string
  - name: BillingCustomerInputError
    types:
    - uid: string
  - name: BillingPaymentInstrumentSoftError
    types:
    - uid: string
  - name: BillingPaymentInstrumentHardError
    types:
    - uid: string
  - name: BillingTransientError
    types:
    - uid: string
  - name: BillingError
    types:
    - uid: string
  - name: FulfillmentConfigurationError
    types:
    - uid: string
  - name: FulfillmentOutOfStockError
    types:
    - uid: string
  - name: FulfillmentTransientError
    types:
    - uid: string
  - name: FulfillmentError
    types:
    - uid: string
  - name: CalculatePriceFailed
    types:
    - uid: string
  - name: AppliedScopesSameAsExisting
    types:
    - uid: string
  - name: SelfServiceRefundNotSupported
    types:
    - uid: string
  - name: RefundLimitExceeded
    types:
    - uid: string
examples:
- name: AvailableScopes
  request:
    uri: POST https://management.azure.com/providers/Microsoft.Capacity/reservationOrders/276e7ae4-84d0-4da6-ab4b-d6b94f3557da/reservations/356e7ae4-84d0-4da6-ab4b-d6b94f3557da/availableScopes?api-version=2022-03-01
    body: >-
      {
        "properties": {
          "scopes": [
            "/subscriptions/efc7c997-7700-4a74-b731-55aec16c15e9"
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/providers/Microsoft.Capacity/reservationOrders/276e7ae4-84d0-4da6-ab4b-d6b94f3557da/reservations/356e7ae4-84d0-4da6-ab4b-d6b94f3557da/availableScopes?api-version=2022-03-01

      {
        "properties": {
          "scopes": [
            "/subscriptions/efc7c997-7700-4a74-b731-55aec16c15e9"
          ]
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armreservations_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/reservations/armreservations"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/reservations/resource-manager/Microsoft.Capacity/stable/2022-03-01/examples/GetAvailableScope.json
      func ExampleReservationClient_BeginAvailableScopes() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armreservations.NewReservationClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginAvailableScopes(ctx, "276e7ae4-84d0-4da6-ab4b-d6b94f3557da", "356e7ae4-84d0-4da6-ab4b-d6b94f3557da", armreservations.AvailableScopeRequest{
      		Properties: &armreservations.AvailableScopeRequestProperties{
      			Scopes: []*string{
      				to.Ptr("/subscriptions/efc7c997-7700-4a74-b731-55aec16c15e9")},
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Freservations%2Farmreservations%2Fv1.1.0/sdk/resourcemanager/reservations/armreservations/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AzureReservationAPI } = require("@azure/arm-reservations");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Get Available Scopes for `Reservation`.

       *
       * @summary Get Available Scopes for `Reservation`.

       * x-ms-original-file: specification/reservations/resource-manager/Microsoft.Capacity/stable/2022-03-01/examples/GetAvailableScope.json
       */
      async function availableScopes() {
        const reservationOrderId = "276e7ae4-84d0-4da6-ab4b-d6b94f3557da";
        const reservationId = "356e7ae4-84d0-4da6-ab4b-d6b94f3557da";
        const body = {
          properties: {
            scopes: ["/subscriptions/efc7c997-7700-4a74-b731-55aec16c15e9"],
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new AzureReservationAPI(credential);
        const result = await client.reservation.beginAvailableScopesAndWait(
          reservationOrderId,
          reservationId,
          body
        );
        console.log(result);
      }

      availableScopes().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-reservations_7.2.0/sdk/reservations/arm-reservations/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "scopes": [
            {
              "scope": "/subscriptions/efc7c997-7700-4a74-b731-55aec16c15e9",
              "valid": true
            }
          ]
        }
      }
security: []
metadata:
  description: >
    Learn more about Reserved VM Instances service - Get Available Scopes for Reservation.
errorCodes: []
