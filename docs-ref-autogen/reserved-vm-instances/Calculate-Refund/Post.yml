### YamlMime:RESTOperation
uid: management.azure.com.reserved-vm-instances.calculaterefund.post
name: Post
service: Reserved VM Instances
groupName: Calculate Refund
apiVersion: 2022-03-01
summary: "Calculate the refund amount of a reservation order.  \nCalculate price for returning `Reservations` if there are no policy errors."
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/calculateRefund?api-version=2022-03-01
uriParameters:
- name: reservationOrderId
  in: path
  isRequired: true
  description: Order Id of the reservation
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Supported version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Detailed refund info of a reservation
  types:
  - uid: CalculateRefundResponse
- name: Other Status Codes
  description: Unexpected error
  types:
  - uid: Error
requestBody:
- name: default
  parameters:
  - name: id
    in: body
    description: Fully qualified identifier of the reservation order being returned
    types:
    - uid: string
  - name: properties
    in: body
    description: ''
    types:
    - uid: CalculateRefundRequestProperties
requestHeader: []
definitions:
- name: CalculateRefundRequestProperties
  kind: object
  properties:
  - name: scope
    description: The scope of the refund, e.g. Reservation
    types:
    - uid: string
  - name: reservationToReturn
    description: Reservation to return
    types:
    - uid: ReservationToReturn
- name: CalculateRefundResponse
  kind: object
  properties:
  - name: id
    description: Fully qualified identifier of the reservation being returned
    types:
    - uid: string
  - name: properties
    description: ''
    types:
    - uid: RefundResponseProperties
- name: Error
  kind: object
  properties:
  - name: error
    description: ''
    types:
    - uid: ExtendedErrorInfo
- name: CalculateRefundRequest
  kind: object
  properties:
  - name: id
    description: Fully qualified identifier of the reservation order being returned
    types:
    - uid: string
  - name: properties
    description: ''
    types:
    - uid: CalculateRefundRequestProperties
- name: ReservationToReturn
  description: Reservation to return
  kind: object
  properties:
  - name: reservationId
    description: Fully qualified identifier of the Reservation being returned
    types:
    - uid: string
  - name: quantity
    description: Quantity to be returned. Must be greater than zero.
    types:
    - uid: integer
- name: RefundResponseProperties
  kind: object
  properties:
  - name: sessionId
    description: Refund session identifier
    types:
    - uid: string
  - name: quantity
    description: Quantity to be returned
    types:
    - uid: integer
  - name: billingRefundAmount
    description: ''
    types:
    - uid: Price
  - name: pricingRefundAmount
    description: ''
    types:
    - uid: Price
  - name: policyResult
    description: Refund policy result
    types:
    - uid: RefundPolicyResult
  - name: billingInformation
    description: billing information
    types:
    - uid: RefundBillingInformation
- name: ExtendedErrorInfo
  kind: object
  properties:
  - name: code
    description: ''
    types:
    - uid: ErrorResponseCode
  - name: message
    description: ''
    types:
    - uid: string
- name: Price
  kind: object
  properties:
  - name: currencyCode
    description: The ISO 4217 3-letter currency code for the currency used by this purchase record.
    types:
    - uid: string
  - name: amount
    description: ''
    types:
    - uid: number
- name: RefundPolicyResult
  description: Refund policy result
  kind: object
  properties:
  - name: properties
    description: Refund policy result property
    types:
    - uid: RefundPolicyResultProperty
- name: RefundBillingInformation
  description: billing information
  kind: object
  properties:
  - name: billingPlan
    description: Represent the billing plans.
    types:
    - uid: ReservationBillingPlan
  - name: completedTransactions
    description: The number of completed transactions in this reservation's payment
    types:
    - uid: integer
  - name: totalTransactions
    description: The number of total transactions in this reservation's payment
    types:
    - uid: integer
  - name: billingCurrencyTotalPaidAmount
    description: ''
    types:
    - uid: Price
  - name: billingCurrencyProratedAmount
    description: ''
    types:
    - uid: Price
  - name: billingCurrencyRemainingCommitmentAmount
    description: ''
    types:
    - uid: Price
- name: ErrorResponseCode
  kind: enum
  properties:
  - name: NotSpecified
    types:
    - uid: string
  - name: InternalServerError
    types:
    - uid: string
  - name: ServerTimeout
    types:
    - uid: string
  - name: AuthorizationFailed
    types:
    - uid: string
  - name: BadRequest
    types:
    - uid: string
  - name: ClientCertificateThumbprintNotSet
    types:
    - uid: string
  - name: InvalidRequestContent
    types:
    - uid: string
  - name: OperationFailed
    types:
    - uid: string
  - name: HttpMethodNotSupported
    types:
    - uid: string
  - name: InvalidRequestUri
    types:
    - uid: string
  - name: MissingTenantId
    types:
    - uid: string
  - name: InvalidTenantId
    types:
    - uid: string
  - name: InvalidReservationOrderId
    types:
    - uid: string
  - name: InvalidReservationId
    types:
    - uid: string
  - name: ReservationIdNotInReservationOrder
    types:
    - uid: string
  - name: ReservationOrderNotFound
    types:
    - uid: string
  - name: InvalidSubscriptionId
    types:
    - uid: string
  - name: InvalidAccessToken
    types:
    - uid: string
  - name: InvalidLocationId
    types:
    - uid: string
  - name: UnauthenticatedRequestsThrottled
    types:
    - uid: string
  - name: InvalidHealthCheckType
    types:
    - uid: string
  - name: Forbidden
    types:
    - uid: string
  - name: BillingScopeIdCannotBeChanged
    types:
    - uid: string
  - name: AppliedScopesNotAssociatedWithCommerceAccount
    types:
    - uid: string
  - name: PatchValuesSameAsExisting
    types:
    - uid: string
  - name: RoleAssignmentCreationFailed
    types:
    - uid: string
  - name: ReservationOrderCreationFailed
    types:
    - uid: string
  - name: ReservationOrderNotEnabled
    types:
    - uid: string
  - name: CapacityUpdateScopesFailed
    types:
    - uid: string
  - name: UnsupportedReservationTerm
    types:
    - uid: string
  - name: ReservationOrderIdAlreadyExists
    types:
    - uid: string
  - name: RiskCheckFailed
    types:
    - uid: string
  - name: CreateQuoteFailed
    types:
    - uid: string
  - name: ActivateQuoteFailed
    types:
    - uid: string
  - name: NonsupportedAccountId
    types:
    - uid: string
  - name: PaymentInstrumentNotFound
    types:
    - uid: string
  - name: MissingAppliedScopesForSingle
    types:
    - uid: string
  - name: NoValidReservationsToReRate
    types:
    - uid: string
  - name: ReRateOnlyAllowedForEA
    types:
    - uid: string
  - name: OperationCannotBePerformedInCurrentState
    types:
    - uid: string
  - name: InvalidSingleAppliedScopesCount
    types:
    - uid: string
  - name: InvalidFulfillmentRequestParameters
    types:
    - uid: string
  - name: NotSupportedCountry
    types:
    - uid: string
  - name: InvalidRefundQuantity
    types:
    - uid: string
  - name: PurchaseError
    types:
    - uid: string
  - name: BillingCustomerInputError
    types:
    - uid: string
  - name: BillingPaymentInstrumentSoftError
    types:
    - uid: string
  - name: BillingPaymentInstrumentHardError
    types:
    - uid: string
  - name: BillingTransientError
    types:
    - uid: string
  - name: BillingError
    types:
    - uid: string
  - name: FulfillmentConfigurationError
    types:
    - uid: string
  - name: FulfillmentOutOfStockError
    types:
    - uid: string
  - name: FulfillmentTransientError
    types:
    - uid: string
  - name: FulfillmentError
    types:
    - uid: string
  - name: CalculatePriceFailed
    types:
    - uid: string
  - name: AppliedScopesSameAsExisting
    types:
    - uid: string
  - name: SelfServiceRefundNotSupported
    types:
    - uid: string
  - name: RefundLimitExceeded
    types:
    - uid: string
- name: RefundPolicyResultProperty
  description: Refund policy result property
  kind: object
  properties:
  - name: consumedRefundsTotal
    description: ''
    types:
    - uid: Price
  - name: maxRefundLimit
    description: ''
    types:
    - uid: Price
  - name: policyErrors
    description: Refund Policy errors
    types:
    - uid: RefundPolicyError
      isArray: true
- name: ReservationBillingPlan
  description: Represent the billing plans.
  kind: enum
  properties:
  - name: Upfront
    types:
    - uid: string
  - name: Monthly
    types:
    - uid: string
- name: RefundPolicyError
  description: error details
  kind: object
  properties:
  - name: code
    description: ''
    types:
    - uid: ErrorResponseCode
  - name: message
    description: ''
    types:
    - uid: string
examples:
- name: Purchase
  request:
    uri: POST https://management.azure.com/providers/Microsoft.Capacity/reservationOrders/276e7ae4-84d0-4da6-ab4b-d6b94f3557da/calculateRefund?api-version=2022-03-01
    body: >-
      {
        "id": "/providers/microsoft.capacity/reservationOrders/50000000-aaaa-bbbb-cccc-100000000004",
        "properties": {
          "scope": "Reservation",
          "reservationToReturn": {
            "reservationId": "/providers/microsoft.capacity/reservationOrders/50000000-aaaa-bbbb-cccc-100000000004/reservations/40000000-aaaa-bbbb-cccc-100000000000",
            "quantity": 1
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/providers/Microsoft.Capacity/reservationOrders/276e7ae4-84d0-4da6-ab4b-d6b94f3557da/calculateRefund?api-version=2022-03-01

      {
        "id": "/providers/microsoft.capacity/reservationOrders/50000000-aaaa-bbbb-cccc-100000000004",
        "properties": {
          "scope": "Reservation",
          "reservationToReturn": {
            "reservationId": "/providers/microsoft.capacity/reservationOrders/50000000-aaaa-bbbb-cccc-100000000004/reservations/40000000-aaaa-bbbb-cccc-100000000000",
            "quantity": 1
          }
        }
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armreservations_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/reservations/armreservations"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/reservations/resource-manager/Microsoft.Capacity/stable/2022-03-01/examples/CalculateRefund.json
      func ExampleCalculateRefundClient_Post() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armreservations.NewCalculateRefundClient(cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Post(ctx, "276e7ae4-84d0-4da6-ab4b-d6b94f3557da", armreservations.CalculateRefundRequest{
      		ID: to.Ptr("/providers/microsoft.capacity/reservationOrders/50000000-aaaa-bbbb-cccc-100000000004"),
      		Properties: &armreservations.CalculateRefundRequestProperties{
      			ReservationToReturn: &armreservations.ReservationToReturn{
      				Quantity:      to.Ptr[int32](1),
      				ReservationID: to.Ptr("/providers/microsoft.capacity/reservationOrders/50000000-aaaa-bbbb-cccc-100000000004/reservations/40000000-aaaa-bbbb-cccc-100000000000"),
      			},
      			Scope: to.Ptr("Reservation"),
      		},
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Freservations%2Farmreservations%2Fv1.1.0/sdk/resourcemanager/reservations/armreservations/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { AzureReservationAPI } = require("@azure/arm-reservations");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Calculate price for returning `Reservations` if there are no policy errors.

       *
       * @summary Calculate price for returning `Reservations` if there are no policy errors.

       * x-ms-original-file: specification/reservations/resource-manager/Microsoft.Capacity/stable/2022-03-01/examples/CalculateRefund.json
       */
      async function purchase() {
        const reservationOrderId = "276e7ae4-84d0-4da6-ab4b-d6b94f3557da";
        const body = {
          id: "/providers/microsoft.capacity/reservationOrders/50000000-aaaa-bbbb-cccc-100000000004",
          properties: {
            reservationToReturn: {
              quantity: 1,
              reservationId:
                "/providers/microsoft.capacity/reservationOrders/50000000-aaaa-bbbb-cccc-100000000004/reservations/40000000-aaaa-bbbb-cccc-100000000000",
            },
            scope: "Reservation",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new AzureReservationAPI(credential);
        const result = await client.calculateRefund.post(reservationOrderId, body);
        console.log(result);
      }

      purchase().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-reservations_7.2.0/sdk/reservations/arm-reservations/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/providers/Microsoft.Capacity/reservationOrders/50000000-aaaa-bbbb-cccc-100000000004/reservations/40000000-aaaa-bbbb-cccc-100000000000",
        "properties": {
          "sessionId": "10000000-aaaa-bbbb-cccc-200000000000",
          "quantity": 1,
          "billingRefundAmount": {
            "currencyCode": "GBP",
            "amount": 20.72
          },
          "pricingRefundAmount": {
            "currencyCode": "USD",
            "amount": 24.92
          },
          "policyResult": {
            "properties": {
              "consumedRefundsTotal": {
                "currencyCode": "USD",
                "amount": 83.69
              },
              "maxRefundLimit": {
                "currencyCode": "USD",
                "amount": 50000
              },
              "policyErrors": [
                {
                  "code": "SelfServiceRefundNotSupported",
                  "message": "Self Service refunds are currently not supported for this resource, please contact support."
                }
              ]
            }
          },
          "billingInformation": {
            "billingPlan": "Upfront",
            "completedTransactions": 1,
            "totalTransactions": 1,
            "billingCurrencyTotalPaidAmount": {
              "currencyCode": "GBP",
              "amount": 24
            },
            "billingCurrencyProratedAmount": {
              "currencyCode": "GBP",
              "amount": 3.28
            },
            "billingCurrencyRemainingCommitmentAmount": {
              "currencyCode": "GBP",
              "amount": 0
            }
          }
        }
      }
security: []
metadata:
  description: >
    Calculate the refund amount of a reservation order.

    Calculate price for returning Reservations if there are no policy errors.
errorCodes: []
