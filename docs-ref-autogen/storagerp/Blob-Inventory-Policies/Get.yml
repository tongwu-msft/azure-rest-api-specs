### YamlMime:RESTOperation
uid: management.azure.com.storagerp.blobinventorypolicies.get
name: Get
service: Storage Resource Provider
groupName: Blob Inventory Policies
apiVersion: 2021-09-01
summary: Gets the blob inventory policy associated with the specified storage account.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/default?api-version=2021-09-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the user's subscription. The name is case insensitive.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: accountName
  in: path
  isRequired: true
  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
  types:
  - uid: string
- name: blobInventoryPolicyName
  in: path
  isRequired: true
  description: The name of the storage account blob inventory policy. It should always be 'default'
  types:
  - uid: BlobInventoryPolicyName
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK -- Get the blob inventory policy successfully.
  types:
  - uid: BlobInventoryPolicy
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: BlobInventoryPolicyName
  description: The name of the storage account blob inventory policy. It should always be 'default'
  kind: enum
  properties:
  - name: default
    types:
    - uid: string
- name: BlobInventoryPolicy
  description: The storage account blob inventory policy.
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: Metadata pertaining to creation and last modification of the resource.
    types:
    - uid: systemData
  - name: properties.lastModifiedTime
    isReadyOnly: true
    description: Returns the last modified date and time of the blob inventory policy.
    types:
    - uid: string
  - name: properties.policy
    description: The storage account blob inventory policy object. It is composed of policy rules.
    types:
    - uid: BlobInventoryPolicySchema
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: CloudError
  description: An error response from the Storage service.
  kind: object
  properties:
  - name: error
    description: An error response from the Storage service.
    types:
    - uid: CloudErrorBody
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: BlobInventoryPolicySchema
  description: The storage account blob inventory policy rules.
  kind: object
  properties:
  - name: enabled
    description: Policy is enabled if set to true.
    types:
    - uid: boolean
  - name: destination
    isReadyOnly: true
    description: Deprecated Property from API version 2021-04-01 onwards, the required destination container name must be specified at the rule level 'policy.rule.destination'
    types:
    - uid: string
  - name: type
    description: The valid value is Inventory
    types:
    - uid: InventoryRuleType
  - name: rules
    description: The storage account blob inventory policy rules. The rule is applied when it is enabled.
    types:
    - uid: BlobInventoryPolicyRule
      isArray: true
- name: CloudErrorBody
  description: An error response from the Storage service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: InventoryRuleType
  description: The valid value is Inventory
  kind: enum
  properties:
  - name: Inventory
    types:
    - uid: string
- name: BlobInventoryPolicyRule
  description: An object that wraps the blob inventory rule. Each rule is uniquely defined by name.
  kind: object
  properties:
  - name: enabled
    description: Rule is enabled when set to true.
    types:
    - uid: boolean
  - name: name
    description: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
    types:
    - uid: string
  - name: destination
    description: Container name where blob inventory files are stored. Must be pre-created.
    types:
    - uid: string
  - name: definition
    description: An object that defines the blob inventory policy rule.
    types:
    - uid: BlobInventoryPolicyDefinition
- name: BlobInventoryPolicyDefinition
  description: An object that defines the blob inventory rule.
  kind: object
  properties:
  - name: filters
    description: An object that defines the filter set.
    types:
    - uid: BlobInventoryPolicyFilter
  - name: format
    description: This is a required field, it specifies the format for the inventory files.
    types:
    - uid: format
  - name: schedule
    description: This is a required field. This field is used to schedule an inventory formation.
    types:
    - uid: schedule
  - name: objectType
    description: This is a required field. This field specifies the scope of the inventory created either at the blob or container level.
    types:
    - uid: objectType
  - name: schemaFields
    description: This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid for Non-Hns accounts.
    types:
    - uid: string
      isArray: true
- name: BlobInventoryPolicyFilter
  description: An object that defines the blob inventory rule filter conditions. For 'Blob' definition.objectType all filter properties are applicable, 'blobTypes' is required and others are optional. For 'Container' definition.objectType only prefixMatch is applicable and is optional.
  kind: object
  properties:
  - name: prefixMatch
    description: An array of strings with maximum 10 blob prefixes to be included in the inventory.
    types:
    - uid: string
      isArray: true
  - name: excludePrefix
    description: An array of strings with maximum 10 blob prefixes to be excluded from the inventory.
    types:
    - uid: string
      isArray: true
  - name: blobTypes
    description: An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'.
    types:
    - uid: string
      isArray: true
  - name: includeBlobVersions
    description: Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and IsCurrentVersion' are required if this property is set to true, else they must be excluded.
    types:
    - uid: boolean
  - name: includeSnapshots
    description: Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required if this property is set to true, else it must be excluded.
    types:
    - uid: boolean
  - name: includeDeleted
    description: For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'. For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId, Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include 'Deleted and RemainingRetentionDays', else it must be excluded.
    types:
    - uid: boolean
- name: format
  description: This is a required field, it specifies the format for the inventory files.
  kind: enum
  properties:
  - name: Csv
    types:
    - uid: string
  - name: Parquet
    types:
    - uid: string
- name: schedule
  description: This is a required field. This field is used to schedule an inventory formation.
  kind: enum
  properties:
  - name: Daily
    types:
    - uid: string
  - name: Weekly
    types:
    - uid: string
- name: objectType
  description: This is a required field. This field specifies the scope of the inventory created either at the blob or container level.
  kind: enum
  properties:
  - name: Blob
    types:
    - uid: string
  - name: Container
    types:
    - uid: string
examples:
- name: StorageAccountGetBlobInventoryPolicy
  request:
    uri: GET https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/sto9699/inventoryPolicies/default?api-version=2021-09-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/sto9699/inventoryPolicies/default?api-version=2021-09-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.storage.models.BlobInventoryPolicyName;

      /** Samples for BlobInventoryPolicies Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountGetBlobInventoryPolicy.json
           */
          /**
           * Sample code: StorageAccountGetBlobInventoryPolicy.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void storageAccountGetBlobInventoryPolicy(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .storageAccounts()
                  .manager()
                  .serviceClient()
                  .getBlobInventoryPolicies()
                  .getWithResponse("res7687", "sto9699", BlobInventoryPolicyName.DEFAULT, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armstorage_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountGetBlobInventoryPolicy.json
      func ExampleBlobInventoryPoliciesClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorage.NewBlobInventoryPoliciesClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"res7687",
      		"sto9699",
      		armstorage.BlobInventoryPolicyNameDefault,
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorage%2Farmstorage%2Fv1.0.0/sdk/resourcemanager/storage/armstorage/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { StorageManagementClient } = require("@azure/arm-storage");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets the blob inventory policy associated with the specified storage account.
       *
       * @summary Gets the blob inventory policy associated with the specified storage account.
       * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountGetBlobInventoryPolicy.json
       */
      async function storageAccountGetBlobInventoryPolicy() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "res7687";
        const accountName = "sto9699";
        const blobInventoryPolicyName = "default";
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = await client.blobInventoryPolicies.get(
          resourceGroupName,
          accountName,
          blobInventoryPolicyName
        );
        console.log(result);
      }

      storageAccountGetBlobInventoryPolicy().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storage_17.2.1/sdk/storage/arm-storage/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/sto9699/inventoryPolicies/default",
        "name": "DefaultInventoryPolicy",
        "type": "Microsoft.Storage/storageAccounts/inventoryPolicies",
        "properties": {
          "policy": {
            "enabled": true,
            "type": "Inventory",
            "rules": [
              {
                "enabled": true,
                "name": "inventoryPolicyRule1",
                "destination": "container1",
                "definition": {
                  "filters": {
                    "blobTypes": [
                      "blockBlob",
                      "appendBlob",
                      "pageBlob"
                    ],
                    "prefixMatch": [
                      "inventoryprefix1",
                      "inventoryprefix2"
                    ],
                    "includeSnapshots": true,
                    "includeBlobVersions": true
                  },
                  "format": "Csv",
                  "schedule": "Daily",
                  "objectType": "Blob",
                  "schemaFields": [
                    "Name",
                    "Creation-Time",
                    "Last-Modified",
                    "Content-Length",
                    "Content-MD5",
                    "BlobType",
                    "AccessTier",
                    "AccessTierChangeTime",
                    "Snapshot",
                    "VersionId",
                    "IsCurrentVersion",
                    "Metadata"
                  ]
                }
              }
            ]
          },
          "lastModifiedTime": "2020-10-05T02:53:39.0932539Z"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Storage Resource Provider service - Gets the blob inventory policy associated with the specified storage account.
errorCodes: []
