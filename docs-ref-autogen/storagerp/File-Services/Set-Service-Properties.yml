### YamlMime:RESTOperation
uid: management.azure.com.storagerp.fileservices.setserviceproperties
name: Set Service Properties
service: Storage Resource Provider
groupName: File Services
apiVersion: 2021-09-01
summary: 'Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules. '
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default?api-version=2021-09-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the user's subscription. The name is case insensitive.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: accountName
  in: path
  isRequired: true
  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
  types:
  - uid: string
- name: FileServicesName
  in: path
  isRequired: true
  description: The name of the file Service within the specified storage account. File Service Name must be "default"
  types:
  - uid: FileServicesName
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK -- Sets The properties of a storage accountâ€™s File service successfully.
  types:
  - uid: FileServiceProperties
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: properties.cors
    in: body
    description: Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.
    types:
    - uid: CorsRules
  - name: properties.shareDeleteRetentionPolicy
    in: body
    description: The file service properties for share soft delete.
    types:
    - uid: DeleteRetentionPolicy
  - name: properties.protocolSettings
    in: body
    description: Protocol settings for file service
    types:
    - uid: ProtocolSettings
requestHeader: []
definitions:
- name: FileServicesName
  description: The name of the file Service within the specified storage account. File Service Name must be "default"
  kind: enum
  properties:
  - name: default
    types:
    - uid: string
- name: Sku
  description: The SKU of the storage account.
  kind: object
  properties:
  - name: name
    description: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
    types:
    - uid: SkuName
  - name: tier
    isReadyOnly: true
    description: The SKU tier. This is based on the SKU name.
    types:
    - uid: SkuTier
- name: CorsRules
  description: 'Sets the CORS rules. You can include up to five CorsRule elements in the request. '
  kind: object
  properties:
  - name: corsRules
    description: 'The List of CORS rules. You can include up to five CorsRule elements in the request. '
    types:
    - uid: CorsRule
      isArray: true
- name: DeleteRetentionPolicy
  description: The service properties for soft delete.
  kind: object
  properties:
  - name: enabled
    description: Indicates whether DeleteRetentionPolicy is enabled.
    types:
    - uid: boolean
  - name: days
    description: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.
    types:
    - uid: integer
  - name: allowPermanentDelete
    description: This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
    types:
    - uid: boolean
- name: ProtocolSettings
  description: Protocol settings for file service
  kind: object
  properties:
  - name: smb
    description: Setting for SMB protocol
    types:
    - uid: SmbSetting
- name: FileServiceProperties
  description: The properties of File services in storage account.
  kind: object
  properties:
  - name: sku
    isReadyOnly: true
    description: Sku name and tier.
    types:
    - uid: Sku
  - name: properties.cors
    description: Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.
    types:
    - uid: CorsRules
  - name: properties.shareDeleteRetentionPolicy
    description: The file service properties for share soft delete.
    types:
    - uid: DeleteRetentionPolicy
  - name: properties.protocolSettings
    description: Protocol settings for file service
    types:
    - uid: ProtocolSettings
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: CloudError
  description: An error response from the Storage service.
  kind: object
  properties:
  - name: error
    description: An error response from the Storage service.
    types:
    - uid: CloudErrorBody
- name: SkuName
  description: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
  kind: enum
  properties:
  - name: Standard_LRS
    types:
    - uid: string
  - name: Standard_GRS
    types:
    - uid: string
  - name: Standard_RAGRS
    types:
    - uid: string
  - name: Standard_ZRS
    types:
    - uid: string
  - name: Premium_LRS
    types:
    - uid: string
  - name: Premium_ZRS
    types:
    - uid: string
  - name: Standard_GZRS
    types:
    - uid: string
  - name: Standard_RAGZRS
    types:
    - uid: string
- name: SkuTier
  description: The SKU tier. This is based on the SKU name.
  kind: enum
  properties:
  - name: Standard
    types:
    - uid: string
  - name: Premium
    types:
    - uid: string
- name: CorsRule
  description: Specifies a CORS rule for the Blob service.
  kind: object
  properties:
  - name: allowedOrigins
    description: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
    types:
    - uid: string
      isArray: true
  - name: allowedMethods
    description: Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
    types:
    - uid: string
      isArray: true
  - name: maxAgeInSeconds
    description: Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
    types:
    - uid: integer
  - name: exposedHeaders
    description: Required if CorsRule element is present. A list of response headers to expose to CORS clients.
    types:
    - uid: string
      isArray: true
  - name: allowedHeaders
    description: Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
    types:
    - uid: string
      isArray: true
- name: SmbSetting
  description: Setting for SMB protocol
  kind: object
  properties:
  - name: multichannel
    description: Multichannel setting. Applies to Premium FileStorage only.
    types:
    - uid: Multichannel
  - name: versions
    description: SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.
    types:
    - uid: string
  - name: authenticationMethods
    description: SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.
    types:
    - uid: string
  - name: kerberosTicketEncryption
    description: Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'
    types:
    - uid: string
  - name: channelEncryption
    description: SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the Storage service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: Multichannel
  description: Multichannel setting. Applies to Premium FileStorage only.
  kind: object
  properties:
  - name: enabled
    description: Indicates whether multichannel is enabled
    types:
    - uid: boolean
examples:
- name: PutFileServices
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res4410/providers/Microsoft.Storage/storageAccounts/sto8607/fileServices/default?api-version=2021-09-01
    body: >-
      {
        "properties": {
          "cors": {
            "corsRules": [
              {
                "allowedOrigins": [
                  "http://www.contoso.com",
                  "http://www.fabrikam.com"
                ],
                "allowedMethods": [
                  "GET",
                  "HEAD",
                  "POST",
                  "OPTIONS",
                  "MERGE",
                  "PUT"
                ],
                "maxAgeInSeconds": 100,
                "exposedHeaders": [
                  "x-ms-meta-*"
                ],
                "allowedHeaders": [
                  "x-ms-meta-abc",
                  "x-ms-meta-data*",
                  "x-ms-meta-target*"
                ]
              },
              {
                "allowedOrigins": [
                  "*"
                ],
                "allowedMethods": [
                  "GET"
                ],
                "maxAgeInSeconds": 2,
                "exposedHeaders": [
                  "*"
                ],
                "allowedHeaders": [
                  "*"
                ]
              },
              {
                "allowedOrigins": [
                  "http://www.abc23.com",
                  "https://www.fabrikam.com/*"
                ],
                "allowedMethods": [
                  "GET",
                  "PUT"
                ],
                "maxAgeInSeconds": 2000,
                "exposedHeaders": [
                  "x-ms-meta-abc",
                  "x-ms-meta-data*",
                  "x-ms-meta-target*"
                ],
                "allowedHeaders": [
                  "x-ms-meta-12345675754564*"
                ]
              }
            ]
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res4410/providers/Microsoft.Storage/storageAccounts/sto8607/fileServices/default?api-version=2021-09-01

      {
        "properties": {
          "cors": {
            "corsRules": [
              {
                "allowedOrigins": [
                  "http://www.contoso.com",
                  "http://www.fabrikam.com"
                ],
                "allowedMethods": [
                  "GET",
                  "HEAD",
                  "POST",
                  "OPTIONS",
                  "MERGE",
                  "PUT"
                ],
                "maxAgeInSeconds": 100,
                "exposedHeaders": [
                  "x-ms-meta-*"
                ],
                "allowedHeaders": [
                  "x-ms-meta-abc",
                  "x-ms-meta-data*",
                  "x-ms-meta-target*"
                ]
              },
              {
                "allowedOrigins": [
                  "*"
                ],
                "allowedMethods": [
                  "GET"
                ],
                "maxAgeInSeconds": 2,
                "exposedHeaders": [
                  "*"
                ],
                "allowedHeaders": [
                  "*"
                ]
              },
              {
                "allowedOrigins": [
                  "http://www.abc23.com",
                  "https://www.fabrikam.com/*"
                ],
                "allowedMethods": [
                  "GET",
                  "PUT"
                ],
                "maxAgeInSeconds": 2000,
                "exposedHeaders": [
                  "x-ms-meta-abc",
                  "x-ms-meta-data*",
                  "x-ms-meta-target*"
                ],
                "allowedHeaders": [
                  "x-ms-meta-12345675754564*"
                ]
              }
            ]
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.storage.fluent.models.FileServicePropertiesInner;
      import com.azure.resourcemanager.storage.models.CorsRule;
      import com.azure.resourcemanager.storage.models.CorsRuleAllowedMethodsItem;
      import com.azure.resourcemanager.storage.models.CorsRules;
      import java.util.Arrays;

      /** Samples for FileServices SetServiceProperties. */
      public final class Main {
          /*
           * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/FileServicesPut.json
           */
          /**
           * Sample code: PutFileServices.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void putFileServices(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .storageAccounts()
                  .manager()
                  .serviceClient()
                  .getFileServices()
                  .setServicePropertiesWithResponse(
                      "res4410",
                      "sto8607",
                      new FileServicePropertiesInner()
                          .withCors(
                              new CorsRules()
                                  .withCorsRules(
                                      Arrays
                                          .asList(
                                              new CorsRule()
                                                  .withAllowedOrigins(
                                                      Arrays.asList("http://www.contoso.com", "http://www.fabrikam.com"))
                                                  .withAllowedMethods(
                                                      Arrays
                                                          .asList(
                                                              CorsRuleAllowedMethodsItem.GET,
                                                              CorsRuleAllowedMethodsItem.HEAD,
                                                              CorsRuleAllowedMethodsItem.POST,
                                                              CorsRuleAllowedMethodsItem.OPTIONS,
                                                              CorsRuleAllowedMethodsItem.MERGE,
                                                              CorsRuleAllowedMethodsItem.PUT))
                                                  .withMaxAgeInSeconds(100)
                                                  .withExposedHeaders(Arrays.asList("x-ms-meta-*"))
                                                  .withAllowedHeaders(
                                                      Arrays.asList("x-ms-meta-abc", "x-ms-meta-data*", "x-ms-meta-target*")),
                                              new CorsRule()
                                                  .withAllowedOrigins(Arrays.asList("*"))
                                                  .withAllowedMethods(Arrays.asList(CorsRuleAllowedMethodsItem.GET))
                                                  .withMaxAgeInSeconds(2)
                                                  .withExposedHeaders(Arrays.asList("*"))
                                                  .withAllowedHeaders(Arrays.asList("*")),
                                              new CorsRule()
                                                  .withAllowedOrigins(
                                                      Arrays.asList("http://www.abc23.com", "https://www.fabrikam.com/*"))
                                                  .withAllowedMethods(
                                                      Arrays
                                                          .asList(
                                                              CorsRuleAllowedMethodsItem.GET, CorsRuleAllowedMethodsItem.PUT))
                                                  .withMaxAgeInSeconds(2000)
                                                  .withExposedHeaders(
                                                      Arrays.asList("x-ms-meta-abc", "x-ms-meta-data*", "x-ms-meta-target*"))
                                                  .withAllowedHeaders(Arrays.asList("x-ms-meta-12345675754564*"))))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armstorage_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/FileServicesPut.json
      func ExampleFileServicesClient_SetServiceProperties() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorage.NewFileServicesClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.SetServiceProperties(ctx,
      		"res4410",
      		"sto8607",
      		armstorage.FileServiceProperties{
      			FileServiceProperties: &armstorage.FileServicePropertiesProperties{
      				Cors: &armstorage.CorsRules{
      					CorsRules: []*armstorage.CorsRule{
      						{
      							AllowedHeaders: []*string{
      								to.Ptr("x-ms-meta-abc"),
      								to.Ptr("x-ms-meta-data*"),
      								to.Ptr("x-ms-meta-target*")},
      							AllowedMethods: []*armstorage.CorsRuleAllowedMethodsItem{
      								to.Ptr(armstorage.CorsRuleAllowedMethodsItemGET),
      								to.Ptr(armstorage.CorsRuleAllowedMethodsItemHEAD),
      								to.Ptr(armstorage.CorsRuleAllowedMethodsItemPOST),
      								to.Ptr(armstorage.CorsRuleAllowedMethodsItemOPTIONS),
      								to.Ptr(armstorage.CorsRuleAllowedMethodsItemMERGE),
      								to.Ptr(armstorage.CorsRuleAllowedMethodsItemPUT)},
      							AllowedOrigins: []*string{
      								to.Ptr("http://www.contoso.com"),
      								to.Ptr("http://www.fabrikam.com")},
      							ExposedHeaders: []*string{
      								to.Ptr("x-ms-meta-*")},
      							MaxAgeInSeconds: to.Ptr[int32](100),
      						},
      						{
      							AllowedHeaders: []*string{
      								to.Ptr("*")},
      							AllowedMethods: []*armstorage.CorsRuleAllowedMethodsItem{
      								to.Ptr(armstorage.CorsRuleAllowedMethodsItemGET)},
      							AllowedOrigins: []*string{
      								to.Ptr("*")},
      							ExposedHeaders: []*string{
      								to.Ptr("*")},
      							MaxAgeInSeconds: to.Ptr[int32](2),
      						},
      						{
      							AllowedHeaders: []*string{
      								to.Ptr("x-ms-meta-12345675754564*")},
      							AllowedMethods: []*armstorage.CorsRuleAllowedMethodsItem{
      								to.Ptr(armstorage.CorsRuleAllowedMethodsItemGET),
      								to.Ptr(armstorage.CorsRuleAllowedMethodsItemPUT)},
      							AllowedOrigins: []*string{
      								to.Ptr("http://www.abc23.com"),
      								to.Ptr("https://www.fabrikam.com/*")},
      							ExposedHeaders: []*string{
      								to.Ptr("x-ms-meta-abc"),
      								to.Ptr("x-ms-meta-data*"),
      								to.Ptr("x-ms-meta-target*")},
      							MaxAgeInSeconds: to.Ptr[int32](2000),
      						}},
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorage%2Farmstorage%2Fv1.0.0/sdk/resourcemanager/storage/armstorage/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { StorageManagementClient } = require("@azure/arm-storage");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
       *
       * @summary Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
       * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/FileServicesPut.json
       */
      async function putFileServices() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "res4410";
        const accountName = "sto8607";
        const parameters = {
          cors: {
            corsRules: [
              {
                allowedHeaders: ["x-ms-meta-abc", "x-ms-meta-data*", "x-ms-meta-target*"],
                allowedMethods: ["GET", "HEAD", "POST", "OPTIONS", "MERGE", "PUT"],
                allowedOrigins: ["http://www.contoso.com", "http://www.fabrikam.com"],
                exposedHeaders: ["x-ms-meta-*"],
                maxAgeInSeconds: 100,
              },
              {
                allowedHeaders: ["*"],
                allowedMethods: ["GET"],
                allowedOrigins: ["*"],
                exposedHeaders: ["*"],
                maxAgeInSeconds: 2,
              },
              {
                allowedHeaders: ["x-ms-meta-12345675754564*"],
                allowedMethods: ["GET", "PUT"],
                allowedOrigins: ["http://www.abc23.com", "https://www.fabrikam.com/*"],
                exposedHeaders: ["x-ms-meta-abc", "x-ms-meta-data*", "x-ms-meta-target*"],
                maxAgeInSeconds: 2000,
              },
            ],
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = await client.fileServices.setServiceProperties(
          resourceGroupName,
          accountName,
          parameters
        );
        console.log(result);
      }

      putFileServices().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storage_17.2.1/sdk/storage/arm-storage/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/res4410/providers/Microsoft.Storage/storageAccounts/sto8607/fileServices/default",
        "name": "default",
        "type": "Microsoft.Storage/storageAccounts/fileServices",
        "properties": {
          "cors": {
            "corsRules": [
              {
                "allowedOrigins": [
                  "http://www.contoso.com",
                  "http://www.fabrikam.com"
                ],
                "allowedMethods": [
                  "GET",
                  "HEAD",
                  "POST",
                  "OPTIONS",
                  "MERGE",
                  "PUT"
                ],
                "maxAgeInSeconds": 100,
                "exposedHeaders": [
                  "x-ms-meta-*"
                ],
                "allowedHeaders": [
                  "x-ms-meta-abc",
                  "x-ms-meta-data*",
                  "x-ms-meta-target*"
                ]
              },
              {
                "allowedOrigins": [
                  "*"
                ],
                "allowedMethods": [
                  "GET"
                ],
                "maxAgeInSeconds": 2,
                "exposedHeaders": [
                  "*"
                ],
                "allowedHeaders": [
                  "*"
                ]
              },
              {
                "allowedOrigins": [
                  "http://www.abc23.com",
                  "https://www.fabrikam.com/*"
                ],
                "allowedMethods": [
                  "GET",
                  "PUT"
                ],
                "maxAgeInSeconds": 2000,
                "exposedHeaders": [
                  "x-ms-meta-abc",
                  "x-ms-meta-data*",
                  "x-ms-meta-target*"
                ],
                "allowedHeaders": [
                  "x-ms-meta-12345675754564*"
                ]
              }
            ]
          }
        },
        "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
        }
      }
- name: PutFileServices_EnableSMBMultichannel
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res4410/providers/Microsoft.Storage/storageAccounts/sto8607/fileServices/default?api-version=2021-09-01
    body: >-
      {
        "properties": {
          "protocolSettings": {
            "smb": {
              "multichannel": {
                "enabled": true
              }
            }
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res4410/providers/Microsoft.Storage/storageAccounts/sto8607/fileServices/default?api-version=2021-09-01

      {
        "properties": {
          "protocolSettings": {
            "smb": {
              "multichannel": {
                "enabled": true
              }
            }
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.storage.fluent.models.FileServicePropertiesInner;
      import com.azure.resourcemanager.storage.models.Multichannel;
      import com.azure.resourcemanager.storage.models.ProtocolSettings;
      import com.azure.resourcemanager.storage.models.SmbSetting;

      /** Samples for FileServices SetServiceProperties. */
      public final class Main {
          /*
           * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/FileServicesPut_EnableSMBMultichannel.json
           */
          /**
           * Sample code: PutFileServices_EnableSMBMultichannel.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void putFileServicesEnableSMBMultichannel(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .storageAccounts()
                  .manager()
                  .serviceClient()
                  .getFileServices()
                  .setServicePropertiesWithResponse(
                      "res4410",
                      "sto8607",
                      new FileServicePropertiesInner()
                          .withProtocolSettings(
                              new ProtocolSettings()
                                  .withSmb(new SmbSetting().withMultichannel(new Multichannel().withEnabled(true)))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { StorageManagementClient } = require("@azure/arm-storage");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
       *
       * @summary Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
       * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/FileServicesPut_EnableSMBMultichannel.json
       */
      async function putFileServicesEnableSmbMultichannel() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "res4410";
        const accountName = "sto8607";
        const parameters = {
          protocolSettings: { smb: { multichannel: { enabled: true } } },
        };
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = await client.fileServices.setServiceProperties(
          resourceGroupName,
          accountName,
          parameters
        );
        console.log(result);
      }

      putFileServicesEnableSmbMultichannel().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storage_17.2.1/sdk/storage/arm-storage/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/res4410/providers/Microsoft.Storage/storageAccounts/sto8607/fileServices/default",
        "name": "default",
        "type": "Microsoft.Storage/storageAccounts/fileServices",
        "properties": {
          "protocolSettings": {
            "smb": {
              "multichannel": {
                "enabled": true
              }
            }
          }
        },
        "sku": {
          "name": "Premium_LRS",
          "tier": "Premium"
        }
      }
- name: PutFileServices_EnableSecureSmbFeatures
  request:
    uri: PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res4410/providers/Microsoft.Storage/storageAccounts/sto8607/fileServices/default?api-version=2021-09-01
    body: >-
      {
        "properties": {
          "protocolSettings": {
            "smb": {
              "versions": "SMB2.1;SMB3.0;SMB3.1.1",
              "authenticationMethods": "NTLMv2;Kerberos",
              "kerberosTicketEncryption": "RC4-HMAC;AES-256",
              "channelEncryption": "AES-128-CCM;AES-128-GCM;AES-256-GCM"
            }
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res4410/providers/Microsoft.Storage/storageAccounts/sto8607/fileServices/default?api-version=2021-09-01

      {
        "properties": {
          "protocolSettings": {
            "smb": {
              "versions": "SMB2.1;SMB3.0;SMB3.1.1",
              "authenticationMethods": "NTLMv2;Kerberos",
              "kerberosTicketEncryption": "RC4-HMAC;AES-256",
              "channelEncryption": "AES-128-CCM;AES-128-GCM;AES-256-GCM"
            }
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.storage.fluent.models.FileServicePropertiesInner;
      import com.azure.resourcemanager.storage.models.ProtocolSettings;
      import com.azure.resourcemanager.storage.models.SmbSetting;

      /** Samples for FileServices SetServiceProperties. */
      public final class Main {
          /*
           * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/FileServicesPut_EnableSecureSmbFeatures.json
           */
          /**
           * Sample code: PutFileServices_EnableSecureSmbFeatures.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void putFileServicesEnableSecureSmbFeatures(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .storageAccounts()
                  .manager()
                  .serviceClient()
                  .getFileServices()
                  .setServicePropertiesWithResponse(
                      "res4410",
                      "sto8607",
                      new FileServicePropertiesInner()
                          .withProtocolSettings(
                              new ProtocolSettings()
                                  .withSmb(
                                      new SmbSetting()
                                          .withVersions("SMB2.1;SMB3.0;SMB3.1.1")
                                          .withAuthenticationMethods("NTLMv2;Kerberos")
                                          .withKerberosTicketEncryption("RC4-HMAC;AES-256")
                                          .withChannelEncryption("AES-128-CCM;AES-128-GCM;AES-256-GCM"))),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { StorageManagementClient } = require("@azure/arm-storage");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
       *
       * @summary Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
       * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/FileServicesPut_EnableSecureSmbFeatures.json
       */
      async function putFileServicesEnableSecureSmbFeatures() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "res4410";
        const accountName = "sto8607";
        const parameters = {
          protocolSettings: {
            smb: {
              authenticationMethods: "NTLMv2;Kerberos",
              channelEncryption: "AES-128-CCM;AES-128-GCM;AES-256-GCM",
              kerberosTicketEncryption: "RC4-HMAC;AES-256",
              versions: "SMB2.1;SMB3.0;SMB3.1.1",
            },
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = await client.fileServices.setServiceProperties(
          resourceGroupName,
          accountName,
          parameters
        );
        console.log(result);
      }

      putFileServicesEnableSecureSmbFeatures().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storage_17.2.1/sdk/storage/arm-storage/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/res4410/providers/Microsoft.Storage/storageAccounts/sto8607/fileServices/default",
        "name": "default",
        "type": "Microsoft.Storage/storageAccounts/fileServices",
        "properties": {
          "protocolSettings": {
            "smb": {
              "versions": "SMB2.1;SMB3.0;SMB3.1.1",
              "authenticationMethods": "NTLMv2;Kerberos",
              "kerberosTicketEncryption": "RC4-HMAC;AES-256",
              "channelEncryption": "AES-128-CCM;AES-128-GCM;AES-256-GCM"
            }
          }
        },
        "sku": {
          "name": "Premium_LRS",
          "tier": "Premium"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: 'Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules. '
errorCodes: []
