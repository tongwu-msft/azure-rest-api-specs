### YamlMime:RESTOperation
uid: management.azure.com.storagerp.encryptionscopes.patch
name: Patch
service: Storage Resource Provider
groupName: Encryption Scopes
apiVersion: 2021-09-01
summary: Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}?api-version=2021-09-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the user's subscription. The name is case insensitive.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: accountName
  in: path
  isRequired: true
  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
  types:
  - uid: string
- name: encryptionScopeName
  in: path
  isRequired: true
  description: The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK -- Update encryption scope operation completed successfully.
  types:
  - uid: EncryptionScope
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: properties.source
    in: body
    description: 'The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.'
    types:
    - uid: EncryptionScopeSource
  - name: properties.state
    in: body
    description: 'The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.'
    types:
    - uid: EncryptionScopeState
  - name: properties.keyVaultProperties
    in: body
    description: The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.
    types:
    - uid: EncryptionScopeKeyVaultProperties
  - name: properties.requireInfrastructureEncryption
    in: body
    description: A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
    types:
    - uid: boolean
requestHeader: []
definitions:
- name: EncryptionScopeKeyVaultProperties
  description: The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.
  kind: object
  properties:
  - name: keyUri
    description: The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
    types:
    - uid: string
  - name: currentVersionedKeyIdentifier
    isReadyOnly: true
    description: The object identifier of the current versioned Key Vault Key in use.
    types:
    - uid: string
  - name: lastKeyRotationTimestamp
    isReadyOnly: true
    description: Timestamp of last rotation of the Key Vault Key.
    types:
    - uid: string
- name: EncryptionScope
  description: The Encryption Scope resource.
  kind: object
  properties:
  - name: properties.source
    description: 'The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.'
    types:
    - uid: EncryptionScopeSource
  - name: properties.state
    description: 'The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.'
    types:
    - uid: EncryptionScopeState
  - name: properties.creationTime
    isReadyOnly: true
    description: Gets the creation date and time of the encryption scope in UTC.
    types:
    - uid: string
  - name: properties.lastModifiedTime
    isReadyOnly: true
    description: Gets the last modification date and time of the encryption scope in UTC.
    types:
    - uid: string
  - name: properties.keyVaultProperties
    description: The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.
    types:
    - uid: EncryptionScopeKeyVaultProperties
  - name: properties.requireInfrastructureEncryption
    description: A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
    types:
    - uid: boolean
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ErrorResponse
  description: An error response from the storage resource provider.
  kind: object
  properties:
  - name: error
    description: Azure Storage Resource Provider error response body.
    types:
    - uid: ErrorResponseBody
- name: EncryptionScopeSource
  description: 'The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.'
  kind: enum
  properties:
  - name: Microsoft.Storage
    types:
    - uid: string
  - name: Microsoft.KeyVault
    types:
    - uid: string
- name: EncryptionScopeState
  description: 'The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.'
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: ErrorResponseBody
  description: Error response body contract.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
examples:
- name: StorageAccountPatchEncryptionScope
  request:
    uri: PATCH https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/resource-group-name/providers/Microsoft.Storage/storageAccounts/{storage-account-name}/encryptionScopes/{encryption-scope-name}?api-version=2021-09-01
    body: >-
      {
        "properties": {
          "source": "Microsoft.KeyVault",
          "keyVaultProperties": {
            "keyUri": "https://testvault.vault.core.windows.net/keys/key1/863425f1358359c"
          }
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/resource-group-name/providers/Microsoft.Storage/storageAccounts/{storage-account-name}/encryptionScopes/{encryption-scope-name}?api-version=2021-09-01

      {
        "properties": {
          "source": "Microsoft.KeyVault",
          "keyVaultProperties": {
            "keyUri": "https://testvault.vault.core.windows.net/keys/key1/863425f1358359c"
          }
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.storage.fluent.models.EncryptionScopeInner;
      import com.azure.resourcemanager.storage.models.EncryptionScopeKeyVaultProperties;
      import com.azure.resourcemanager.storage.models.EncryptionScopeSource;

      /** Samples for EncryptionScopes Patch. */
      public final class Main {
          /*
           * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountPatchEncryptionScope.json
           */
          /**
           * Sample code: StorageAccountPatchEncryptionScope.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void storageAccountPatchEncryptionScope(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .storageAccounts()
                  .manager()
                  .serviceClient()
                  .getEncryptionScopes()
                  .patchWithResponse(
                      "resource-group-name",
                      "{storage-account-name}",
                      "{encryption-scope-name}",
                      new EncryptionScopeInner()
                          .withSource(EncryptionScopeSource.MICROSOFT_KEY_VAULT)
                          .withKeyVaultProperties(
                              new EncryptionScopeKeyVaultProperties()
                                  .withKeyUri("https://testvault.vault.core.windows.net/keys/key1/863425f1358359c")),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armstorage_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountPatchEncryptionScope.json
      func ExampleEncryptionScopesClient_Patch() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorage.NewEncryptionScopesClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Patch(ctx,
      		"resource-group-name",
      		"{storage-account-name}",
      		"{encryption-scope-name}",
      		armstorage.EncryptionScope{
      			EncryptionScopeProperties: &armstorage.EncryptionScopeProperties{
      				KeyVaultProperties: &armstorage.EncryptionScopeKeyVaultProperties{
      					KeyURI: to.Ptr("https://testvault.vault.core.windows.net/keys/key1/863425f1358359c"),
      				},
      				Source: to.Ptr(armstorage.EncryptionScopeSourceMicrosoftKeyVault),
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorage%2Farmstorage%2Fv1.0.0/sdk/resourcemanager/storage/armstorage/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { StorageManagementClient } = require("@azure/arm-storage");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.
       *
       * @summary Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.
       * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountPatchEncryptionScope.json
       */
      async function storageAccountPatchEncryptionScope() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "resource-group-name";
        const accountName = "{storage-account-name}";
        const encryptionScopeName = "{encryption-scope-name}";
        const encryptionScope = {
          keyVaultProperties: {
            keyUri: "https://testvault.vault.core.windows.net/keys/key1/863425f1358359c",
          },
          source: "Microsoft.KeyVault",
        };
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = await client.encryptionScopes.patch(
          resourceGroupName,
          accountName,
          encryptionScopeName,
          encryptionScope
        );
        console.log(result);
      }

      storageAccountPatchEncryptionScope().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storage_17.2.1/sdk/storage/arm-storage/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/resource-group-name/providers/Microsoft.Storage/storageAccounts/{storage-account-name}/encryptionScopes/{encryption-scope-name}",
        "name": "{encryption-scope-name}",
        "type": "Microsoft.Storage/storageAccounts/encryptionScopes",
        "properties": {
          "source": "Microsoft.KeyVault",
          "state": "Enabled",
          "keyVaultProperties": {
            "keyUri": "https://testvault.vault.core.windows.net/keys/key1/863425f1358359c",
            "currentVersionedKeyIdentifier": "https://testvault.vault.core.windows.net/keys/key1/863425f1358359c",
            "lastKeyRotationTimestamp": "2019-12-13T20:36:23.7023290Z"
          },
          "creationTime": "2018-10-16T02:42:41.7633306Z",
          "lastModifiedTime": "2018-10-17T06:23:14.4513306Z"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.
errorCodes: []
