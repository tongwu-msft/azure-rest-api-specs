### YamlMime:RESTOperation
uid: management.azure.com.storagerp.storageaccounts.update
name: Update
service: Storage Resource Provider
groupName: Storage Accounts
apiVersion: 2019-06-01
summary: The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}?api-version=2019-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the user's subscription. The name is case insensitive.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: accountName
  in: path
  isRequired: true
  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK -- storage account properties updated successfully.
  types:
  - uid: StorageAccount
requestBody:
- name: default
  parameters:
  - name: sku
    in: body
    description: Gets or sets the SKU name. Note that the SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of those SKU names be updated to any other value.
    types:
    - uid: Sku
  - name: tags
    in: body
    description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: identity
    in: body
    description: The identity of the resource.
    types:
    - uid: Identity
  - name: kind
    in: body
    description: Optional. Indicates the type of storage account. Currently only StorageV2 value supported by server.
    types:
    - uid: Kind
  - name: properties.customDomain
    in: body
    description: Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.
    types:
    - uid: CustomDomain
  - name: properties.encryption
    in: body
    description: Provides the encryption settings on the account. The default setting is unencrypted.
    types:
    - uid: Encryption
  - name: properties.accessTier
    in: body
    description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
    types:
    - uid: AccessTier
  - name: properties.azureFilesIdentityBasedAuthentication
    in: body
    description: Provides the identity based authentication settings for Azure Files.
    types:
    - uid: AzureFilesIdentityBasedAuthentication
  - name: properties.supportsHttpsTrafficOnly
    in: body
    description: Allows https traffic only to storage service if sets to true.
    types:
    - uid: boolean
  - name: properties.networkAcls
    in: body
    description: Network rule set
    types:
    - uid: NetworkRuleSet
  - name: properties.largeFileSharesState
    in: body
    description: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.
    types:
    - uid: LargeFileSharesState
  - name: properties.routingPreference
    in: body
    description: Maintains information about the network routing choice opted by the user for data transfer
    types:
    - uid: RoutingPreference
  - name: properties.allowBlobPublicAccess
    in: body
    description: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.
    types:
    - uid: boolean
  - name: properties.minimumTlsVersion
    in: body
    description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.
    types:
    - uid: MinimumTlsVersion
requestHeader: []
definitions:
- name: Sku
  description: The SKU of the storage account.
  kind: object
  properties:
  - name: name
    description: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
    types:
    - uid: SkuName
  - name: tier
    isReadyOnly: true
    description: The SKU tier. This is based on the SKU name.
    types:
    - uid: SkuTier
- name: Identity
  description: Identity for the resource.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal ID of resource identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant ID of resource.
    types:
    - uid: string
  - name: type
    description: The identity type.
    types:
    - uid: IdentityType
- name: CustomDomain
  description: The custom domain assigned to this storage account. This can be set via Update.
  kind: object
  properties:
  - name: name
    description: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
    types:
    - uid: string
  - name: useSubDomainName
    description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
    types:
    - uid: boolean
- name: Encryption
  description: The encryption settings on the storage account.
  kind: object
  properties:
  - name: services
    description: List of services which support encryption.
    types:
    - uid: EncryptionServices
  - name: keySource
    description: 'The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault'
    types:
    - uid: KeySource
  - name: requireInfrastructureEncryption
    description: A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
    types:
    - uid: boolean
  - name: keyvaultproperties
    description: Properties provided by key vault.
    types:
    - uid: KeyVaultProperties
- name: AzureFilesIdentityBasedAuthentication
  description: Settings for Azure Files identity based authentication.
  kind: object
  properties:
  - name: directoryServiceOptions
    description: Indicates the directory service used.
    types:
    - uid: DirectoryServiceOptions
  - name: activeDirectoryProperties
    description: Required if choose AD.
    types:
    - uid: ActiveDirectoryProperties
- name: NetworkRuleSet
  description: Network rule set
  kind: object
  properties:
  - name: bypass
    description: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
    types:
    - uid: Bypass
  - name: virtualNetworkRules
    description: Sets the virtual network rules
    types:
    - uid: VirtualNetworkRule
      isArray: true
  - name: ipRules
    description: Sets the IP ACL rules
    types:
    - uid: IPRule
      isArray: true
  - name: defaultAction
    description: Specifies the default action of allow or deny when no other rules match.
    types:
    - uid: DefaultAction
- name: RoutingPreference
  description: Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing
  kind: object
  properties:
  - name: routingChoice
    description: Routing Choice defines the kind of network routing opted by the user.
    types:
    - uid: RoutingChoice
  - name: publishMicrosoftEndpoints
    description: A boolean flag which indicates whether microsoft routing storage endpoints are to be published
    types:
    - uid: boolean
  - name: publishInternetEndpoints
    description: A boolean flag which indicates whether internet routing storage endpoints are to be published
    types:
    - uid: boolean
- name: StorageAccount
  description: The storage account.
  kind: object
  properties:
  - name: sku
    isReadyOnly: true
    description: Gets the SKU.
    types:
    - uid: Sku
  - name: kind
    isReadyOnly: true
    description: Gets the Kind.
    types:
    - uid: Kind
  - name: identity
    description: The identity of the resource.
    types:
    - uid: Identity
  - name: properties.provisioningState
    isReadyOnly: true
    description: Gets the status of the storage account at the time the operation was called.
    types:
    - uid: ProvisioningState
  - name: properties.primaryEndpoints
    isReadyOnly: true
    description: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.
    types:
    - uid: Endpoints
  - name: properties.primaryLocation
    isReadyOnly: true
    description: Gets the location of the primary data center for the storage account.
    types:
    - uid: string
  - name: properties.statusOfPrimary
    isReadyOnly: true
    description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
    types:
    - uid: AccountStatus
  - name: properties.lastGeoFailoverTime
    isReadyOnly: true
    description: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
    types:
    - uid: string
  - name: properties.secondaryLocation
    isReadyOnly: true
    description: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
    types:
    - uid: string
  - name: properties.statusOfSecondary
    isReadyOnly: true
    description: Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
    types:
    - uid: AccountStatus
  - name: properties.creationTime
    isReadyOnly: true
    description: Gets the creation date and time of the storage account in UTC.
    types:
    - uid: string
  - name: properties.customDomain
    isReadyOnly: true
    description: Gets the custom domain the user assigned to this storage account.
    types:
    - uid: CustomDomain
  - name: properties.secondaryEndpoints
    isReadyOnly: true
    description: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.
    types:
    - uid: Endpoints
  - name: properties.encryption
    isReadyOnly: true
    description: Gets the encryption settings on the account. If unspecified, the account is unencrypted.
    types:
    - uid: Encryption
  - name: properties.accessTier
    isReadyOnly: true
    description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
    types:
    - uid: AccessTier
  - name: properties.azureFilesIdentityBasedAuthentication
    description: Provides the identity based authentication settings for Azure Files.
    types:
    - uid: AzureFilesIdentityBasedAuthentication
  - name: properties.supportsHttpsTrafficOnly
    description: Allows https traffic only to storage service if sets to true.
    types:
    - uid: boolean
  - name: properties.networkAcls
    isReadyOnly: true
    description: Network rule set
    types:
    - uid: NetworkRuleSet
  - name: properties.isHnsEnabled
    description: Account HierarchicalNamespace enabled if sets to true.
    types:
    - uid: boolean
  - name: properties.geoReplicationStats
    isReadyOnly: true
    description: Geo Replication Stats
    types:
    - uid: GeoReplicationStats
  - name: properties.failoverInProgress
    isReadyOnly: true
    description: If the failover is in progress, the value will be true, otherwise, it will be null.
    types:
    - uid: boolean
  - name: properties.largeFileSharesState
    description: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.
    types:
    - uid: LargeFileSharesState
  - name: properties.privateEndpointConnections
    isReadyOnly: true
    description: List of private endpoint connection associated with the specified storage account
    types:
    - uid: PrivateEndpointConnection
      isArray: true
  - name: properties.routingPreference
    description: Maintains information about the network routing choice opted by the user for data transfer
    types:
    - uid: RoutingPreference
  - name: properties.blobRestoreStatus
    isReadyOnly: true
    description: Blob restore status
    types:
    - uid: BlobRestoreStatus
  - name: properties.allowBlobPublicAccess
    description: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.
    types:
    - uid: boolean
  - name: properties.minimumTlsVersion
    description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.
    types:
    - uid: MinimumTlsVersion
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: StorageAccountUpdateParameters
  description: The parameters that can be provided when updating the storage account properties.
  kind: object
  properties:
  - name: sku
    description: Gets or sets the SKU name. Note that the SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of those SKU names be updated to any other value.
    types:
    - uid: Sku
  - name: tags
    description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: identity
    description: The identity of the resource.
    types:
    - uid: Identity
  - name: kind
    description: Optional. Indicates the type of storage account. Currently only StorageV2 value supported by server.
    types:
    - uid: Kind
  - name: properties.customDomain
    description: Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.
    types:
    - uid: CustomDomain
  - name: properties.encryption
    description: Provides the encryption settings on the account. The default setting is unencrypted.
    types:
    - uid: Encryption
  - name: properties.accessTier
    description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
    types:
    - uid: AccessTier
  - name: properties.azureFilesIdentityBasedAuthentication
    description: Provides the identity based authentication settings for Azure Files.
    types:
    - uid: AzureFilesIdentityBasedAuthentication
  - name: properties.supportsHttpsTrafficOnly
    description: Allows https traffic only to storage service if sets to true.
    types:
    - uid: boolean
  - name: properties.networkAcls
    description: Network rule set
    types:
    - uid: NetworkRuleSet
  - name: properties.largeFileSharesState
    description: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.
    types:
    - uid: LargeFileSharesState
  - name: properties.routingPreference
    description: Maintains information about the network routing choice opted by the user for data transfer
    types:
    - uid: RoutingPreference
  - name: properties.allowBlobPublicAccess
    description: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.
    types:
    - uid: boolean
  - name: properties.minimumTlsVersion
    description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.
    types:
    - uid: MinimumTlsVersion
- name: SkuName
  description: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
  kind: enum
  properties:
  - name: Standard_LRS
    types:
    - uid: string
  - name: Standard_GRS
    types:
    - uid: string
  - name: Standard_RAGRS
    types:
    - uid: string
  - name: Standard_ZRS
    types:
    - uid: string
  - name: Premium_LRS
    types:
    - uid: string
  - name: Premium_ZRS
    types:
    - uid: string
  - name: Standard_GZRS
    types:
    - uid: string
  - name: Standard_RAGZRS
    types:
    - uid: string
- name: SkuTier
  description: The SKU tier. This is based on the SKU name.
  kind: enum
  properties:
  - name: Standard
    types:
    - uid: string
  - name: Premium
    types:
    - uid: string
- name: IdentityType
  description: The identity type.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
- name: EncryptionServices
  description: A list of services that support encryption.
  kind: object
  properties:
  - name: blob
    description: The encryption function of the blob storage service.
    types:
    - uid: EncryptionService
  - name: file
    description: The encryption function of the file storage service.
    types:
    - uid: EncryptionService
  - name: table
    description: The encryption function of the table storage service.
    types:
    - uid: EncryptionService
  - name: queue
    description: The encryption function of the queue storage service.
    types:
    - uid: EncryptionService
- name: KeySource
  description: 'The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault'
  kind: enum
  properties:
  - name: Microsoft.Storage
    types:
    - uid: string
  - name: Microsoft.Keyvault
    types:
    - uid: string
- name: KeyVaultProperties
  description: Properties of key vault.
  kind: object
  properties:
  - name: keyname
    description: The name of KeyVault key.
    types:
    - uid: string
  - name: keyversion
    description: The version of KeyVault key.
    types:
    - uid: string
  - name: keyvaulturi
    description: The Uri of KeyVault.
    types:
    - uid: string
  - name: currentVersionedKeyIdentifier
    isReadyOnly: true
    description: The object identifier of the current versioned Key Vault Key in use.
    types:
    - uid: string
  - name: lastKeyRotationTimestamp
    isReadyOnly: true
    description: Timestamp of last rotation of the Key Vault Key.
    types:
    - uid: string
- name: DirectoryServiceOptions
  description: Indicates the directory service used.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: AADDS
    types:
    - uid: string
  - name: AD
    types:
    - uid: string
- name: ActiveDirectoryProperties
  description: Settings properties for Active Directory (AD).
  kind: object
  properties:
  - name: domainName
    description: Specifies the primary domain that the AD DNS server is authoritative for.
    types:
    - uid: string
  - name: netBiosDomainName
    description: Specifies the NetBIOS domain name.
    types:
    - uid: string
  - name: forestName
    description: Specifies the Active Directory forest to get.
    types:
    - uid: string
  - name: domainGuid
    description: Specifies the domain GUID.
    types:
    - uid: string
  - name: domainSid
    description: Specifies the security identifier (SID).
    types:
    - uid: string
  - name: azureStorageSid
    description: Specifies the security identifier (SID) for Azure Storage.
    types:
    - uid: string
- name: Bypass
  description: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: Logging
    types:
    - uid: string
  - name: Metrics
    types:
    - uid: string
  - name: AzureServices
    types:
    - uid: string
- name: VirtualNetworkRule
  description: Virtual Network rule.
  kind: object
  properties:
  - name: id
    description: 'Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'
    types:
    - uid: string
  - name: action
    description: The action of virtual network rule.
    types:
    - uid: Action
  - name: state
    description: Gets the state of virtual network rule.
    types:
    - uid: State
- name: IPRule
  description: IP rule with specific IP or IP range in CIDR format.
  kind: object
  properties:
  - name: value
    description: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
    types:
    - uid: string
  - name: action
    description: The action of IP ACL rule.
    types:
    - uid: Action
- name: DefaultAction
  description: Specifies the default action of allow or deny when no other rules match.
  kind: enum
  properties:
  - name: Allow
    types:
    - uid: string
  - name: Deny
    types:
    - uid: string
- name: RoutingChoice
  description: Routing Choice defines the kind of network routing opted by the user.
  kind: enum
  properties:
  - name: MicrosoftRouting
    types:
    - uid: string
  - name: InternetRouting
    types:
    - uid: string
- name: Kind
  description: Indicates the type of storage account.
  kind: enum
  properties:
  - name: Storage
    types:
    - uid: string
  - name: StorageV2
    types:
    - uid: string
  - name: BlobStorage
    types:
    - uid: string
  - name: FileStorage
    types:
    - uid: string
  - name: BlockBlobStorage
    types:
    - uid: string
- name: ProvisioningState
  description: Gets the status of the storage account at the time the operation was called.
  kind: enum
  properties:
  - name: Creating
    types:
    - uid: string
  - name: ResolvingDNS
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
- name: Endpoints
  description: The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.
  kind: object
  properties:
  - name: blob
    isReadyOnly: true
    description: Gets the blob endpoint.
    types:
    - uid: string
  - name: queue
    isReadyOnly: true
    description: Gets the queue endpoint.
    types:
    - uid: string
  - name: table
    isReadyOnly: true
    description: Gets the table endpoint.
    types:
    - uid: string
  - name: file
    isReadyOnly: true
    description: Gets the file endpoint.
    types:
    - uid: string
  - name: web
    isReadyOnly: true
    description: Gets the web endpoint.
    types:
    - uid: string
  - name: dfs
    isReadyOnly: true
    description: Gets the dfs endpoint.
    types:
    - uid: string
  - name: microsoftEndpoints
    description: Gets the microsoft routing storage endpoints.
    types:
    - uid: StorageAccountMicrosoftEndpoints
  - name: internetEndpoints
    description: Gets the internet routing storage endpoints
    types:
    - uid: StorageAccountInternetEndpoints
- name: AccountStatus
  description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
  kind: enum
  properties:
  - name: available
    types:
    - uid: string
  - name: unavailable
    types:
    - uid: string
- name: AccessTier
  description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
  kind: enum
  properties:
  - name: Hot
    types:
    - uid: string
  - name: Cool
    types:
    - uid: string
- name: GeoReplicationStats
  description: Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.
  kind: object
  properties:
  - name: status
    isReadyOnly: true
    description: 'The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.'
    types:
    - uid: GeoReplicationStatus
  - name: lastSyncTime
    isReadyOnly: true
    description: All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
    types:
    - uid: string
  - name: canFailover
    isReadyOnly: true
    description: A boolean flag which indicates whether or not account failover is supported for the account.
    types:
    - uid: boolean
- name: LargeFileSharesState
  description: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.
  kind: enum
  properties:
  - name: Disabled
    types:
    - uid: string
  - name: Enabled
    types:
    - uid: string
- name: PrivateEndpointConnection
  description: The Private Endpoint Connection resource.
  kind: object
  properties:
  - name: properties.privateEndpoint
    description: The resource of private end point.
    types:
    - uid: PrivateEndpoint
  - name: properties.privateLinkServiceConnectionState
    description: A collection of information about the state of the connection between service consumer and provider.
    types:
    - uid: PrivateLinkServiceConnectionState
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the private endpoint connection resource.
    types:
    - uid: PrivateEndpointConnectionProvisioningState
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: BlobRestoreStatus
  description: Blob restore status.
  kind: object
  properties:
  - name: status
    isReadyOnly: true
    description: 'The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.'
    types:
    - uid: BlobRestoreProgressStatus
  - name: failureReason
    isReadyOnly: true
    description: Failure reason when blob restore is failed.
    types:
    - uid: string
  - name: restoreId
    isReadyOnly: true
    description: Id for tracking blob restore request.
    types:
    - uid: string
  - name: parameters
    isReadyOnly: true
    description: Blob restore request parameters.
    types:
    - uid: BlobRestoreParameters
- name: MinimumTlsVersion
  description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.
  kind: enum
  properties:
  - name: TLS1_0
    types:
    - uid: string
  - name: TLS1_1
    types:
    - uid: string
  - name: TLS1_2
    types:
    - uid: string
- name: EncryptionService
  description: A service that allows server-side encryption to be used.
  kind: object
  properties:
  - name: enabled
    description: A boolean indicating whether or not the service encrypts the data as it is stored.
    types:
    - uid: boolean
  - name: lastEnabledTime
    isReadyOnly: true
    description: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
    types:
    - uid: string
  - name: keyType
    description: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
    types:
    - uid: KeyType
- name: Action
  description: The action of virtual network rule.
  kind: enum
  properties:
  - name: Allow
    types:
    - uid: string
- name: State
  description: Gets the state of virtual network rule.
  kind: enum
  properties:
  - name: provisioning
    types:
    - uid: string
  - name: deprovisioning
    types:
    - uid: string
  - name: succeeded
    types:
    - uid: string
  - name: failed
    types:
    - uid: string
  - name: networkSourceDeleted
    types:
    - uid: string
- name: StorageAccountMicrosoftEndpoints
  description: The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing endpoint.
  kind: object
  properties:
  - name: blob
    isReadyOnly: true
    description: Gets the blob endpoint.
    types:
    - uid: string
  - name: queue
    isReadyOnly: true
    description: Gets the queue endpoint.
    types:
    - uid: string
  - name: table
    isReadyOnly: true
    description: Gets the table endpoint.
    types:
    - uid: string
  - name: file
    isReadyOnly: true
    description: Gets the file endpoint.
    types:
    - uid: string
  - name: web
    isReadyOnly: true
    description: Gets the web endpoint.
    types:
    - uid: string
  - name: dfs
    isReadyOnly: true
    description: Gets the dfs endpoint.
    types:
    - uid: string
- name: StorageAccountInternetEndpoints
  description: The URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint.
  kind: object
  properties:
  - name: blob
    isReadyOnly: true
    description: Gets the blob endpoint.
    types:
    - uid: string
  - name: file
    isReadyOnly: true
    description: Gets the file endpoint.
    types:
    - uid: string
  - name: web
    isReadyOnly: true
    description: Gets the web endpoint.
    types:
    - uid: string
  - name: dfs
    isReadyOnly: true
    description: Gets the dfs endpoint.
    types:
    - uid: string
- name: GeoReplicationStatus
  description: 'The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.'
  kind: enum
  properties:
  - name: Live
    types:
    - uid: string
  - name: Bootstrap
    types:
    - uid: string
  - name: Unavailable
    types:
    - uid: string
- name: PrivateEndpoint
  description: The Private Endpoint resource.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The ARM identifier for Private Endpoint
    types:
    - uid: string
- name: PrivateLinkServiceConnectionState
  description: A collection of information about the state of the connection between service consumer and provider.
  kind: object
  properties:
  - name: status
    description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
    types:
    - uid: PrivateEndpointServiceConnectionStatus
  - name: description
    description: The reason for approval/rejection of the connection.
    types:
    - uid: string
  - name: actionRequired
    description: A message indicating if changes on the service provider require any updates on the consumer.
    types:
    - uid: string
- name: PrivateEndpointConnectionProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: BlobRestoreProgressStatus
  description: 'The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.'
  kind: enum
  properties:
  - name: InProgress
    types:
    - uid: string
  - name: Complete
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: BlobRestoreParameters
  description: Blob restore parameters
  kind: object
  properties:
  - name: timeToRestore
    description: Restore blob to the specified time.
    types:
    - uid: string
  - name: blobRanges
    description: Blob ranges to restore.
    types:
    - uid: BlobRestoreRange
      isArray: true
- name: KeyType
  description: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
  kind: enum
  properties:
  - name: Service
    types:
    - uid: string
  - name: Account
    types:
    - uid: string
- name: PrivateEndpointServiceConnectionStatus
  description: The private endpoint connection status.
  kind: enum
  properties:
  - name: Pending
    types:
    - uid: string
  - name: Approved
    types:
    - uid: string
  - name: Rejected
    types:
    - uid: string
- name: BlobRestoreRange
  description: Blob range
  kind: object
  properties:
  - name: startRange
    description: Blob start range. This is inclusive. Empty means account start.
    types:
    - uid: string
  - name: endRange
    description: Blob end range. This is exclusive. Empty means account end.
    types:
    - uid: string
examples:
- name: StorageAccountUpdate
  request:
    uri: PATCH https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596?api-version=2019-06-01
    body: >-
      {
        "properties": {
          "allowBlobPublicAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "networkAcls": {
            "defaultAction": "Allow"
          },
          "routingPreference": {
            "routingChoice": "MicrosoftRouting",
            "publishMicrosoftEndpoints": true,
            "publishInternetEndpoints": true
          },
          "encryption": {
            "services": {
              "file": {
                "keyType": "Account",
                "enabled": true
              },
              "blob": {
                "keyType": "Account",
                "enabled": true
              }
            },
            "keySource": "Microsoft.Storage"
          }
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
        "kind": "Storage",
        "location": "eastus2(stage)",
        "name": "sto8596",
        "properties": {
          "isHnsEnabled": true,
          "allowBlobPublicAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "creationTime": "2017-06-01T02:42:41.7633306Z",
          "networkAcls": {
            "bypass": "AzureServices",
            "defaultAction": "Allow",
            "ipRules": [],
            "virtualNetworkRules": []
          },
          "primaryEndpoints": {
            "web": "https://sto8596.web.core.windows.net/",
            "dfs": "https://sto8596.dfs.core.windows.net/",
            "blob": "https://sto8596.blob.core.windows.net/",
            "file": "https://sto8596.file.core.windows.net/",
            "queue": "https://sto8596.queue.core.windows.net/",
            "table": "https://sto8596.table.core.windows.net/",
            "microsoftEndpoints": {
              "web": "https://sto8596-microsoftrouting.web.core.windows.net/",
              "dfs": "https://sto8596-microsoftrouting.dfs.core.windows.net/",
              "blob": "https://sto8596-microsoftrouting.blob.core.windows.net/",
              "file": "https://sto8596-microsoftrouting.file.core.windows.net/",
              "queue": "https://sto8596-microsoftrouting.queue.core.windows.net/",
              "table": "https://sto8596-microsoftrouting.table.core.windows.net/"
            },
            "internetEndpoints": {
              "web": "https://sto8596-internetrouting.web.core.windows.net/",
              "dfs": "https://sto8596-internetrouting.dfs.core.windows.net/",
              "blob": "https://sto8596-internetrouting.blob.core.windows.net/",
              "file": "https://sto8596-internetrouting.file.core.windows.net/"
            }
          },
          "primaryLocation": "eastus2(stage)",
          "provisioningState": "Succeeded",
          "routingPreference": {
            "routingChoice": "MicrosoftRouting",
            "publishMicrosoftEndpoints": true,
            "publishInternetEndpoints": true
          },
          "encryption": {
            "services": {
              "file": {
                "keyType": "Account",
                "enabled": true,
                "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
              },
              "blob": {
                "keyType": "Account",
                "enabled": true,
                "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
              }
            },
            "keySource": "Microsoft.Storage"
          },
          "secondaryLocation": "northcentralus(stage)",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": false
        },
        "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
        },
        "tags": {
          "key1": "value1",
          "key2": "value2"
        },
        "type": "Microsoft.Storage/storageAccounts"
      }
- name: StorageAccountEnableAD
  request:
    uri: PATCH https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596?api-version=2019-06-01
    body: >-
      {
        "properties": {
          "azureFilesIdentityBasedAuthentication": {
            "directoryServiceOptions": "AD",
            "activeDirectoryProperties": {
              "domainName": "adtest.com",
              "netBiosDomainName": "adtest.com",
              "forestName": "adtest.com",
              "domainGuid": "aebfc118-9fa9-4732-a21f-d98e41a77ae1",
              "domainSid": "S-1-5-21-2400535526-2334094090-2402026252",
              "azureStorageSid": "S-1-5-21-2400535526-2334094090-2402026252-0012"
            }
          }
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
        "kind": "Storage",
        "location": "eastus2(stage)",
        "name": "sto8596",
        "properties": {
          "creationTime": "2017-06-01T02:42:41.7633306Z",
          "azureFilesIdentityBasedAuthentication": {
            "directoryServiceOptions": "AD",
            "activeDirectoryProperties": {
              "domainName": "adtest.com",
              "netBiosDomainName": "adtest.com",
              "forestName": "adtest.com",
              "domainGuid": "aebfc118-9fa9-4732-a21f-d98e41a77ae1",
              "domainSid": "S-1-5-21-2400535526-2334094090-2402026252",
              "azureStorageSid": "S-1-5-21-2400535526-2334094090-2402026252-0012"
            }
          },
          "primaryEndpoints": {
            "web": "https://sto8596.web.core.windows.net/",
            "dfs": "https://sto8596.dfs.core.windows.net/",
            "blob": "https://sto8596.blob.core.windows.net/",
            "file": "https://sto8596.file.core.windows.net/",
            "queue": "https://sto8596.queue.core.windows.net/",
            "table": "https://sto8596.table.core.windows.net/"
          },
          "primaryLocation": "eastus2(stage)",
          "provisioningState": "Succeeded",
          "secondaryLocation": "northcentralus(stage)",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": false
        },
        "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
        },
        "tags": {
          "key1": "value1",
          "key2": "value2"
        },
        "type": "Microsoft.Storage/storageAccounts"
      }
- name: StorageAccountEnableCMK
  request:
    uri: PATCH https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596?api-version=2019-06-01
    body: >-
      {
        "properties": {
          "encryption": {
            "services": {
              "file": {
                "keyType": "Account",
                "enabled": true
              },
              "blob": {
                "keyType": "Account",
                "enabled": true
              }
            },
            "keySource": "Microsoft.Keyvault",
            "keyvaultproperties": {
              "keyvaulturi": "https://myvault8569.vault.azure.net",
              "keyname": "wrappingKey",
              "keyversion": ""
            }
          }
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
        "identity": {
          "principalId": "911871cc-ffd1-4fc4-ac11-7a316433ea66",
          "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
          "type": "SystemAssigned"
        },
        "kind": "Storage",
        "location": "eastus2(stage)",
        "name": "sto8596",
        "properties": {
          "creationTime": "2017-06-01T02:42:41.7633306Z",
          "encryption": {
            "services": {
              "file": {
                "keyType": "Account",
                "enabled": true,
                "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
              },
              "blob": {
                "keyType": "Account",
                "enabled": true,
                "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
              }
            },
            "keySource": "Microsoft.Keyvault",
            "keyvaultproperties": {
              "keyvaulturi": "https://myvault8569.vault.azure.net",
              "keyname": "wrappingKey",
              "keyversion": "",
              "currentVersionedKeyIdentifier": "https://myvault8569.vault.azure.net/keys/wrappingKey/0682afdd9c104f4285df20107e956cad",
              "lastKeyRotationTimestamp": "2019-12-13T20:36:23.7023290Z"
            }
          },
          "primaryEndpoints": {
            "web": "https://sto8596.web.core.windows.net/",
            "dfs": "https://sto8596.dfs.core.windows.net/",
            "blob": "https://sto8596.blob.core.windows.net/",
            "file": "https://sto8596.file.core.windows.net/",
            "queue": "https://sto8596.queue.core.windows.net/",
            "table": "https://sto8596.table.core.windows.net/"
          },
          "primaryLocation": "eastus2(stage)",
          "provisioningState": "Succeeded",
          "secondaryLocation": "northcentralus(stage)",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": false
        },
        "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
        },
        "tags": {
          "key1": "value1",
          "key2": "value2"
        },
        "type": "Microsoft.Storage/storageAccounts"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
errorCodes: []
