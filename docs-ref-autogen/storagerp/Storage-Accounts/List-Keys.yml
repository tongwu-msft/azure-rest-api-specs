### YamlMime:RESTOperation
uid: management.azure.com.storagerp.storageaccounts.listkeys
name: List Keys
service: Storage Resource Provider
groupName: Storage Accounts
apiVersion: 2021-09-01
summary: Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys?api-version=2021-09-01
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys?api-version=2021-09-01&$expand=kerb
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the user's subscription. The name is case insensitive.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: accountName
  in: path
  isRequired: true
  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
- name: $expand
  in: query
  description: Specifies type of the key to be listed. Possible value is kerb.
  types:
  - uid: ListKeyExpand
responses:
- name: 200 OK
  description: OK -- list of keys retrieved and returned successfully.
  types:
  - uid: StorageAccountListKeysResult
requestHeader: []
definitions:
- name: ListKeyExpand
  description: Specifies type of the key to be listed. Possible value is kerb.
  kind: enum
  properties:
  - name: kerb
    types:
    - uid: string
- name: StorageAccountListKeysResult
  description: The response from the ListKeys operation.
  kind: object
  properties:
  - name: keys
    isReadyOnly: true
    description: Gets the list of storage account keys and their properties for the specified storage account.
    types:
    - uid: StorageAccountKey
      isArray: true
- name: StorageAccountKey
  description: An access key for the storage account.
  kind: object
  properties:
  - name: keyName
    isReadyOnly: true
    description: Name of the key.
    types:
    - uid: string
  - name: value
    isReadyOnly: true
    description: Base 64-encoded value of the key.
    types:
    - uid: string
  - name: permissions
    isReadyOnly: true
    description: Permissions for the key -- read-only or full permissions.
    types:
    - uid: KeyPermission
  - name: creationTime
    isReadyOnly: true
    description: Creation time of the key, in round trip date format.
    types:
    - uid: string
- name: KeyPermission
  description: Permissions for the key -- read-only or full permissions.
  kind: enum
  properties:
  - name: Read
    types:
    - uid: string
  - name: Full
    types:
    - uid: string
examples:
- name: StorageAccountListKeys
  request:
    uri: POST https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res418/providers/Microsoft.Storage/storageAccounts/sto2220/listKeys?api-version=2021-09-01&$expand=kerb
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res418/providers/Microsoft.Storage/storageAccounts/sto2220/listKeys?api-version=2021-09-01&$expand=kerb
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for StorageAccounts ListKeys. */
      public final class Main {
          /*
           * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountListKeys.json
           */
          /**
           * Sample code: StorageAccountListKeys.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void storageAccountListKeys(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .storageAccounts()
                  .manager()
                  .serviceClient()
                  .getStorageAccounts()
                  .listKeysWithResponse("res418", "sto2220", null, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armstorage_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountListKeys.json
      func ExampleAccountsClient_ListKeys() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorage.NewAccountsClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.ListKeys(ctx,
      		"res418",
      		"sto2220",
      		&armstorage.AccountsClientListKeysOptions{Expand: nil})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorage%2Farmstorage%2Fv1.0.0/sdk/resourcemanager/storage/armstorage/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { StorageManagementClient } = require("@azure/arm-storage");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.
       *
       * @summary Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.
       * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountListKeys.json
       */
      async function storageAccountListKeys() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "res418";
        const accountName = "sto2220";
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = await client.storageAccounts.listKeys(resourceGroupName, accountName);
        console.log(result);
      }

      storageAccountListKeys().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storage_17.2.1/sdk/storage/arm-storage/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "keys": [
          {
            "keyName": "key1",
            "permissions": "Full",
            "value": "<value>"
          },
          {
            "keyName": "key2",
            "permissions": "Full",
            "value": "<value>"
          }
        ]
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.
errorCodes: []
