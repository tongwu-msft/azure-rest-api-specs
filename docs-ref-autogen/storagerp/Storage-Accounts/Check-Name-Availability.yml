### YamlMime:RESTOperation
uid: management.azure.com.storagerp.storageaccounts.checknameavailability
name: Check Name Availability
service: Storage Resource Provider
groupName: Storage Accounts
apiVersion: 2021-09-01
summary: Checks that the storage account name is valid and is not already in use.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability?api-version=2021-09-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK -- Operation to check the storage account name availability was successful.
  types:
  - uid: CheckNameAvailabilityResult
requestBody:
- name: default
  parameters:
  - name: name
    in: body
    isRequired: true
    description: The storage account name.
    types:
    - uid: string
  - name: type
    in: body
    isRequired: true
    description: The type of resource, Microsoft.Storage/storageAccounts
    types:
    - uid: Type
requestHeader: []
definitions:
- name: CheckNameAvailabilityResult
  description: The CheckNameAvailability operation response.
  kind: object
  properties:
  - name: nameAvailable
    isReadyOnly: true
    description: Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.
    types:
    - uid: boolean
  - name: reason
    isReadyOnly: true
    description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
    types:
    - uid: Reason
  - name: message
    isReadyOnly: true
    description: Gets an error message explaining the Reason value in more detail.
    types:
    - uid: string
- name: StorageAccountCheckNameAvailabilityParameters
  description: The parameters used to check the availability of the storage account name.
  kind: object
  properties:
  - name: name
    description: The storage account name.
    types:
    - uid: string
  - name: type
    description: The type of resource, Microsoft.Storage/storageAccounts
    types:
    - uid: Type
- name: Reason
  description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
  kind: enum
  properties:
  - name: AccountNameInvalid
    types:
    - uid: string
  - name: AlreadyExists
    types:
    - uid: string
- name: Type
  description: The type of resource, Microsoft.Storage/storageAccounts
  kind: enum
  properties:
  - name: Microsoft.Storage/storageAccounts
    types:
    - uid: string
examples:
- name: StorageAccountCheckNameAvailability
  request:
    uri: POST https://management.azure.com/subscriptions/{subscription-id}/providers/Microsoft.Storage/checkNameAvailability?api-version=2021-09-01
    body: >-
      {
        "name": "sto3363",
        "type": "Microsoft.Storage/storageAccounts"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/{subscription-id}/providers/Microsoft.Storage/checkNameAvailability?api-version=2021-09-01

      {
        "name": "sto3363",
        "type": "Microsoft.Storage/storageAccounts"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.storage.models.StorageAccountCheckNameAvailabilityParameters;

      /** Samples for StorageAccounts CheckNameAvailability. */
      public final class Main {
          /*
           * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountCheckNameAvailability.json
           */
          /**
           * Sample code: StorageAccountCheckNameAvailability.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void storageAccountCheckNameAvailability(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .storageAccounts()
                  .manager()
                  .serviceClient()
                  .getStorageAccounts()
                  .checkNameAvailabilityWithResponse(
                      new StorageAccountCheckNameAvailabilityParameters().withName("sto3363"), Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armstorage_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountCheckNameAvailability.json
      func ExampleAccountsClient_CheckNameAvailability() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorage.NewAccountsClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CheckNameAvailability(ctx,
      		armstorage.AccountCheckNameAvailabilityParameters{
      			Name: to.Ptr("sto3363"),
      			Type: to.Ptr("Microsoft.Storage/storageAccounts"),
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorage%2Farmstorage%2Fv1.0.0/sdk/resourcemanager/storage/armstorage/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { StorageManagementClient } = require("@azure/arm-storage");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Checks that the storage account name is valid and is not already in use.
       *
       * @summary Checks that the storage account name is valid and is not already in use.
       * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountCheckNameAvailability.json
       */
      async function storageAccountCheckNameAvailability() {
        const subscriptionId = "{subscription-id}";
        const accountName = {
          name: "sto3363",
          type: "Microsoft.Storage/storageAccounts",
        };
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = await client.storageAccounts.checkNameAvailability(accountName);
        console.log(result);
      }

      storageAccountCheckNameAvailability().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storage_17.2.1/sdk/storage/arm-storage/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "nameAvailable": true
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Storage Resource Provider service - Checks that the storage account name is valid and is not already in use.
errorCodes: []
