### YamlMime:RESTOperation
uid: management.azure.com.storagerp.blobcontainers.clearlegalhold
name: Clear Legal Hold
service: Storage Resource Provider
groupName: Blob Containers
apiVersion: 2021-09-01
summary: Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/clearLegalHold?api-version=2021-09-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the user's subscription. The name is case insensitive.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: accountName
  in: path
  isRequired: true
  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
  types:
  - uid: string
- name: containerName
  in: path
  isRequired: true
  description: The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK -- Clear legal hold tags for Container completed successfully.
  types:
  - uid: LegalHold
requestBody:
- name: default
  parameters:
  - name: tags
    in: body
    isRequired: true
    description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
    types:
    - uid: string
      isArray: true
  - name: allowProtectedAppendWritesAll
    in: body
    description: When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.
    types:
    - uid: boolean
requestHeader: []
definitions:
- name: LegalHold
  description: The LegalHold property of a blob container.
  kind: object
  properties:
  - name: hasLegalHold
    isReadyOnly: true
    description: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
    types:
    - uid: boolean
  - name: tags
    description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
    types:
    - uid: string
      isArray: true
  - name: allowProtectedAppendWritesAll
    description: When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.
    types:
    - uid: boolean
examples:
- name: ClearLegalHoldContainers
  request:
    uri: POST https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res4303/providers/Microsoft.Storage/storageAccounts/sto7280/blobServices/default/containers/container8723/clearLegalHold?api-version=2021-09-01
    body: >-
      {
        "tags": [
          "tag1",
          "tag2",
          "tag3"
        ]
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res4303/providers/Microsoft.Storage/storageAccounts/sto7280/blobServices/default/containers/container8723/clearLegalHold?api-version=2021-09-01

      {
        "tags": [
          "tag1",
          "tag2",
          "tag3"
        ]
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.storage.fluent.models.LegalHoldInner;
      import java.util.Arrays;

      /** Samples for BlobContainers ClearLegalHold. */
      public final class Main {
          /*
           * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/BlobContainersClearLegalHold.json
           */
          /**
           * Sample code: ClearLegalHoldContainers.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void clearLegalHoldContainers(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .storageAccounts()
                  .manager()
                  .serviceClient()
                  .getBlobContainers()
                  .clearLegalHoldWithResponse(
                      "res4303",
                      "sto7280",
                      "container8723",
                      new LegalHoldInner().withTags(Arrays.asList("tag1", "tag2", "tag3")),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armstorage_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/BlobContainersClearLegalHold.json
      func ExampleBlobContainersClient_ClearLegalHold() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorage.NewBlobContainersClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.ClearLegalHold(ctx,
      		"res4303",
      		"sto7280",
      		"container8723",
      		armstorage.LegalHold{
      			Tags: []*string{
      				to.Ptr("tag1"),
      				to.Ptr("tag2"),
      				to.Ptr("tag3")},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorage%2Farmstorage%2Fv1.0.0/sdk/resourcemanager/storage/armstorage/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { StorageManagementClient } = require("@azure/arm-storage");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
       *
       * @summary Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
       * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/BlobContainersClearLegalHold.json
       */
      async function clearLegalHoldContainers() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "res4303";
        const accountName = "sto7280";
        const containerName = "container8723";
        const legalHold = { tags: ["tag1", "tag2", "tag3"] };
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = await client.blobContainers.clearLegalHold(
          resourceGroupName,
          accountName,
          containerName,
          legalHold
        );
        console.log(result);
      }

      clearLegalHoldContainers().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storage_17.2.1/sdk/storage/arm-storage/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "hasLegalHold": false,
        "tags": []
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the reque
errorCodes: []
