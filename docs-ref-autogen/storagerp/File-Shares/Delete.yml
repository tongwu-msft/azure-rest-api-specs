### YamlMime:RESTOperation
uid: management.azure.com.storagerp.fileshares.delete
name: Delete
service: Storage Resource Provider
groupName: File Shares
apiVersion: 2021-09-01
summary: Deletes specified share under its account.
consumes:
- application/json
produces:
- application/json
paths:
- content: DELETE https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}?api-version=2021-09-01
- content: DELETE https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}?api-version=2021-09-01&$include={$include}
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the user's subscription. The name is case insensitive.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: accountName
  in: path
  isRequired: true
  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
  types:
  - uid: string
- name: shareName
  in: path
  isRequired: true
  description: The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
- name: $include
  in: query
  description: "Optional. Valid values are: snapshots, leased-snapshots, none. The default value is snapshots. For 'snapshots', the file share is deleted including all of its file share snapshots. If the file share contains leased-snapshots, the deletion fails. For 'leased-snapshots', the file share is deleted included all of its file share snapshots (leased/unleased). For 'none', the file share is deleted if it has no share snapshots. If the file share contains any snapshots (leased or unleased), the deletion fails."
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK -- Delete Share operation completed successfully.
- name: 204 No Content
  description: No Content -- The Share not exist.
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader:
- name: x-ms-snapshot
  in: header
  description: Optional, used to delete a snapshot.
  types:
  - uid: string
definitions:
- name: CloudError
  description: An error response from the Storage service.
  kind: object
  properties:
  - name: error
    description: An error response from the Storage service.
    types:
    - uid: CloudErrorBody
- name: CloudErrorBody
  description: An error response from the Storage service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: DeleteShares
  request:
    uri: DELETE https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res4079/providers/Microsoft.Storage/storageAccounts/sto4506/fileServices/default/shares/share9689?api-version=2021-09-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      DELETE https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res4079/providers/Microsoft.Storage/storageAccounts/sto4506/fileServices/default/shares/share9689?api-version=2021-09-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for FileShares Delete. */
      public final class Main {
          /*
           * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/FileSharesDelete.json
           */
          /**
           * Sample code: DeleteShares.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void deleteShares(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .storageAccounts()
                  .manager()
                  .serviceClient()
                  .getFileShares()
                  .deleteWithResponse("res4079", "sto4506", "share9689", null, null, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.17.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armstorage_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/FileSharesDelete.json
      func ExampleFileSharesClient_Delete() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorage.NewFileSharesClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	_, err = client.Delete(ctx,
      		"res4079",
      		"sto4506",
      		"share9689",
      		&armstorage.FileSharesClientDeleteOptions{XMSSnapshot: nil,
      			Include: nil,
      		})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorage%2Farmstorage%2Fv1.0.0/sdk/resourcemanager/storage/armstorage/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { StorageManagementClient } = require("@azure/arm-storage");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Deletes specified share under its account.
       *
       * @summary Deletes specified share under its account.
       * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/FileSharesDelete.json
       */
      async function deleteShares() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "res4079";
        const accountName = "sto4506";
        const shareName = "share9689";
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = await client.fileShares.delete(resourceGroupName, accountName, shareName);
        console.log(result);
      }

      deleteShares().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storage_17.2.1/sdk/storage/arm-storage/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
  - statusCode: "204"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Storage Resource Provider service - Deletes specified share under its account.
errorCodes: []
