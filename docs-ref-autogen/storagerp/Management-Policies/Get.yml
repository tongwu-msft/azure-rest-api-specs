### YamlMime:RESTOperation
uid: management.azure.com.storagerp.managementpolicies.get
name: Get
service: Storage Resource Provider
groupName: Management Policies
apiVersion: 2021-09-01
summary: Gets the managementpolicy associated with the specified storage account.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/default?api-version=2021-09-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group within the user's subscription. The name is case insensitive.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: accountName
  in: path
  isRequired: true
  description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
  types:
  - uid: string
- name: managementPolicyName
  in: path
  isRequired: true
  description: The name of the Storage Account Management Policy. It should always be 'default'
  types:
  - uid: ManagementPolicyName
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK -- Get the managementpolicy successfully.
  types:
  - uid: ManagementPolicy
requestHeader: []
definitions:
- name: ManagementPolicyName
  description: The name of the Storage Account Management Policy. It should always be 'default'
  kind: enum
  properties:
  - name: default
    types:
    - uid: string
- name: ManagementPolicy
  description: The Get Storage Account ManagementPolicies operation response.
  kind: object
  properties:
  - name: properties.lastModifiedTime
    isReadyOnly: true
    description: Returns the date and time the ManagementPolicies was last modified.
    types:
    - uid: string
  - name: properties.policy
    description: 'The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
    types:
    - uid: ManagementPolicySchema
  - name: id
    isReadyOnly: true
    description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
    types:
    - uid: string
- name: ManagementPolicySchema
  description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
  kind: object
  properties:
  - name: rules
    description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'
    types:
    - uid: ManagementPolicyRule
      isArray: true
- name: ManagementPolicyRule
  description: An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
  kind: object
  properties:
  - name: enabled
    description: Rule is enabled if set to true.
    types:
    - uid: boolean
  - name: name
    description: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
    types:
    - uid: string
  - name: type
    description: The valid value is Lifecycle
    types:
    - uid: RuleType
  - name: definition
    description: An object that defines the Lifecycle rule.
    types:
    - uid: ManagementPolicyDefinition
- name: RuleType
  description: The valid value is Lifecycle
  kind: enum
  properties:
  - name: Lifecycle
    types:
    - uid: string
- name: ManagementPolicyDefinition
  description: An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
  kind: object
  properties:
  - name: actions
    description: An object that defines the action set.
    types:
    - uid: ManagementPolicyAction
  - name: filters
    description: An object that defines the filter set.
    types:
    - uid: ManagementPolicyFilter
- name: ManagementPolicyAction
  description: Actions are applied to the filtered blobs when the execution condition is met.
  kind: object
  properties:
  - name: baseBlob
    description: The management policy action for base blob
    types:
    - uid: ManagementPolicyBaseBlob
  - name: snapshot
    description: The management policy action for snapshot
    types:
    - uid: ManagementPolicySnapShot
  - name: version
    description: The management policy action for version
    types:
    - uid: ManagementPolicyVersion
- name: ManagementPolicyFilter
  description: 'Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. '
  kind: object
  properties:
  - name: prefixMatch
    description: An array of strings for prefixes to be match.
    types:
    - uid: string
      isArray: true
  - name: blobTypes
    description: An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.
    types:
    - uid: string
      isArray: true
  - name: blobIndexMatch
    description: An array of blob index tag based filters, there can be at most 10 tag filters
    types:
    - uid: TagFilter
      isArray: true
- name: ManagementPolicyBaseBlob
  description: Management policy action for base blob.
  kind: object
  properties:
  - name: tierToCool
    description: The function to tier blobs to cool storage. Support blobs currently at Hot tier
    types:
    - uid: DateAfterModification
  - name: tierToArchive
    description: The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
    types:
    - uid: DateAfterModification
  - name: delete
    description: The function to delete the blob
    types:
    - uid: DateAfterModification
  - name: enableAutoTierToHotFromCool
    description: This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
    types:
    - uid: boolean
- name: ManagementPolicySnapShot
  description: Management policy action for snapshot.
  kind: object
  properties:
  - name: tierToCool
    description: The function to tier blob snapshot to cool storage. Support blob snapshot currently at Hot tier
    types:
    - uid: DateAfterCreation
  - name: tierToArchive
    description: The function to tier blob snapshot to archive storage. Support blob snapshot currently at Hot or Cool tier
    types:
    - uid: DateAfterCreation
  - name: delete
    description: The function to delete the blob snapshot
    types:
    - uid: DateAfterCreation
- name: ManagementPolicyVersion
  description: Management policy action for blob version.
  kind: object
  properties:
  - name: tierToCool
    description: The function to tier blob version to cool storage. Support blob version currently at Hot tier
    types:
    - uid: DateAfterCreation
  - name: tierToArchive
    description: The function to tier blob version to archive storage. Support blob version currently at Hot or Cool tier
    types:
    - uid: DateAfterCreation
  - name: delete
    description: The function to delete the blob version
    types:
    - uid: DateAfterCreation
- name: TagFilter
  description: Blob index tag based filtering for blob objects
  kind: object
  properties:
  - name: name
    description: This is the filter tag name, it can have 1 - 128 characters
    types:
    - uid: string
  - name: op
    description: This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported
    types:
    - uid: string
  - name: value
    description: This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
    types:
    - uid: string
- name: DateAfterModification
  description: Object to define the base blob action conditions. Properties daysAfterModificationGreaterThan, daysAfterLastAccessTimeGreaterThan and daysAfterCreationGreaterThan are mutually exclusive. The daysAfterLastTierChangeGreaterThan property is only applicable for tierToArchive actions which requires daysAfterModificationGreaterThan to be set, also it cannot be used in conjunction with daysAfterLastAccessTimeGreaterThan or daysAfterCreationGreaterThan.
  kind: object
  properties:
  - name: daysAfterModificationGreaterThan
    description: Value indicating the age in days after last modification
    types:
    - uid: number
  - name: daysAfterLastAccessTimeGreaterThan
    description: Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
    types:
    - uid: number
  - name: daysAfterLastTierChangeGreaterThan
    description: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied.
    types:
    - uid: number
  - name: daysAfterCreationGreaterThan
    description: Value indicating the age in days after blob creation.
    types:
    - uid: number
- name: DateAfterCreation
  description: Object to define snapshot and version action conditions.
  kind: object
  properties:
  - name: daysAfterCreationGreaterThan
    description: Value indicating the age in days after creation
    types:
    - uid: number
  - name: daysAfterLastTierChangeGreaterThan
    description: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
    types:
    - uid: number
examples:
- name: StorageAccountGetManagementPolicies
  request:
    uri: GET https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/managementPolicies/default?api-version=2021-09-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/managementPolicies/default?api-version=2021-09-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.storage.models.ManagementPolicyName;

      /** Samples for ManagementPolicies Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountGetManagementPolicy.json
           */
          /**
           * Sample code: StorageAccountGetManagementPolicies.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void storageAccountGetManagementPolicies(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .storageAccounts()
                  .manager()
                  .serviceClient()
                  .getManagementPolicies()
                  .getWithResponse("res6977", "sto2527", ManagementPolicyName.DEFAULT, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armstorage_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountGetManagementPolicy.json
      func ExampleManagementPoliciesClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstorage.NewManagementPoliciesClient("{subscription-id}", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"res6977",
      		"sto2527",
      		armstorage.ManagementPolicyNameDefault,
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstorage%2Farmstorage%2Fv1.0.0/sdk/resourcemanager/storage/armstorage/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { StorageManagementClient } = require("@azure/arm-storage");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets the managementpolicy associated with the specified storage account.
       *
       * @summary Gets the managementpolicy associated with the specified storage account.
       * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2021-09-01/examples/StorageAccountGetManagementPolicy.json
       */
      async function storageAccountGetManagementPolicies() {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "res6977";
        const accountName = "sto2527";
        const managementPolicyName = "default";
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = await client.managementPolicies.get(
          resourceGroupName,
          accountName,
          managementPolicyName
        );
        console.log(result);
      }

      storageAccountGetManagementPolicies().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-storage_17.2.1/sdk/storage/arm-storage/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/managementPolicies/default",
        "name": "DefaultManagementPolicy",
        "type": "Microsoft.Storage/storageAccounts/managementPolicies",
        "properties": {
          "policy": {
            "rules": [
              {
                "enabled": true,
                "name": "olcmtest",
                "type": "Lifecycle",
                "definition": {
                  "filters": {
                    "blobTypes": [
                      "blockBlob"
                    ],
                    "prefixMatch": [
                      "olcmtestcontainer"
                    ]
                  },
                  "actions": {
                    "baseBlob": {
                      "tierToCool": {
                        "daysAfterModificationGreaterThan": 30
                      },
                      "tierToArchive": {
                        "daysAfterModificationGreaterThan": 90
                      },
                      "delete": {
                        "daysAfterModificationGreaterThan": 1000
                      }
                    },
                    "snapshot": {
                      "delete": {
                        "daysAfterCreationGreaterThan": 30
                      }
                    }
                  }
                }
              }
            ]
          },
          "lastModifiedTime": "2018-06-08T03:01:55.7168089Z"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Storage Resource Provider service - Gets the managementpolicy associated with the specified storage account.
errorCodes: []
