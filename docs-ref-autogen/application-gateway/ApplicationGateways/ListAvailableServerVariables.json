{
  "swagger": "2.0",
  "info": {
    "version": "2019-09-01",
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableServerVariables": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAvailableServerVariables",
        "x-ms-examples": {
          "Get Available Server Variables": {
            "parameters": {
              "api-version": "2019-09-01",
              "subscriptionId": "72f988bf-86f1-41af-91ab-2d7cd0dddd4"
            },
            "responses": {
              "200": {
                "body": [
                  "request_query"
                ]
              }
            }
          }
        },
        "description": "Lists all available server variables.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all available server variables.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayAvailableServerVariablesResult"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "List Available Server Variables"
      }
    }
  },
  "definitions": {
    "ApplicationGatewayOnDemandProbe": {
      "properties": {
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "The protocol used for the probe."
        },
        "host": {
          "type": "string",
          "description": "Host name to send the probe to."
        },
        "path": {
          "type": "string",
          "description": "Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>."
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds."
        },
        "pickHostNameFromBackendHttpSettings": {
          "type": "boolean",
          "description": "Whether the host header should be picked from the backend http settings. Default value is false."
        },
        "match": {
          "$ref": "#/definitions/ApplicationGatewayProbeHealthResponseMatch",
          "description": "Criterion for classifying a healthy probe response."
        },
        "backendAddressPool": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference of backend pool of application gateway to which probe request will be sent."
        },
        "backendHttpSettings": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference of backend http setting of application gateway to be used for test probe."
        }
      },
      "description": "Details of on demand test probe request."
    },
    "ApplicationGatewayBackendHealthOnDemand": {
      "properties": {
        "backendAddressPool": {
          "$ref": "#/definitions/ApplicationGatewayBackendAddressPool",
          "description": "Reference of an ApplicationGatewayBackendAddressPool resource."
        },
        "backendHealthHttpSettings": {
          "$ref": "#/definitions/ApplicationGatewayBackendHealthHttpSettings",
          "description": "Application gateway BackendHealthHttp settings."
        }
      },
      "description": "Result of on demand test probe."
    },
    "ApplicationGatewayBackendHealth": {
      "properties": {
        "backendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendHealthPool"
          },
          "description": "A list of ApplicationGatewayBackendHealthPool resources."
        }
      },
      "description": "Response for ApplicationGatewayBackendHealth API service call."
    },
    "ApplicationGatewayBackendHealthPool": {
      "properties": {
        "backendAddressPool": {
          "$ref": "#/definitions/ApplicationGatewayBackendAddressPool",
          "description": "Reference of an ApplicationGatewayBackendAddressPool resource."
        },
        "backendHttpSettingsCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendHealthHttpSettings"
          },
          "description": "List of ApplicationGatewayBackendHealthHttpSettings resources."
        }
      },
      "description": "Application gateway BackendHealth pool."
    },
    "ApplicationGatewayBackendHealthHttpSettings": {
      "properties": {
        "backendHttpSettings": {
          "$ref": "#/definitions/ApplicationGatewayBackendHttpSettings",
          "description": "Reference of an ApplicationGatewayBackendHttpSettings resource."
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendHealthServer"
          },
          "description": "List of ApplicationGatewayBackendHealthServer resources."
        }
      },
      "description": "Application gateway BackendHealthHttp settings."
    },
    "ApplicationGatewayBackendHealthServer": {
      "properties": {
        "address": {
          "type": "string",
          "description": "IP address or FQDN of backend server."
        },
        "ipConfiguration": {
          "$ref": "#/definitions/NetworkInterfaceIPConfiguration",
          "description": "Reference of IP configuration of backend server."
        },
        "health": {
          "type": "string",
          "description": "Health of backend server.",
          "enum": [
            "Unknown",
            "Up",
            "Down",
            "Partial",
            "Draining"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayBackendHealthServerHealth",
            "modelAsString": true
          }
        },
        "healthProbeLog": {
          "type": "string",
          "description": "Health Probe Log."
        }
      },
      "description": "Application gateway backendhealth http settings."
    },
    "ApplicationGatewaySku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of an application gateway SKU.",
          "enum": [
            "Standard_Small",
            "Standard_Medium",
            "Standard_Large",
            "WAF_Medium",
            "WAF_Large",
            "Standard_v2",
            "WAF_v2"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewaySkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Tier of an application gateway.",
          "enum": [
            "Standard",
            "WAF",
            "Standard_v2",
            "WAF_v2"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity (instance count) of an application gateway."
        }
      },
      "description": "SKU of an application gateway."
    },
    "ApplicationGatewaySslPolicy": {
      "properties": {
        "disabledSslProtocols": {
          "type": "array",
          "description": "Ssl protocols to be disabled on application gateway.",
          "items": {
            "type": "string",
            "$ref": "#/definitions/ProtocolsEnum"
          }
        },
        "policyType": {
          "type": "string",
          "description": "Type of Ssl Policy.",
          "enum": [
            "Predefined",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewaySslPolicyType",
            "modelAsString": true
          }
        },
        "policyName": {
          "$ref": "#/definitions/PolicyNameEnum",
          "description": "Name of Ssl predefined policy."
        },
        "cipherSuites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CipherSuitesEnum"
          },
          "description": "Ssl cipher suites to be enabled in the specified order to application gateway."
        },
        "minProtocolVersion": {
          "$ref": "#/definitions/ProtocolsEnum",
          "description": "Minimum version of Ssl protocol to be supported on application gateway."
        }
      },
      "description": "Application Gateway Ssl policy."
    },
    "ApplicationGatewayIPConfigurationPropertiesFormat": {
      "properties": {
        "subnet": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference of the subnet resource. A subnet from where application gateway gets its private address."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the application gateway IP configuration resource."
        }
      },
      "description": "Properties of IP configuration of an application gateway."
    },
    "ApplicationGatewayIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayIPConfigurationPropertiesFormat",
          "description": "Properties of the application gateway IP configuration."
        },
        "name": {
          "type": "string",
          "description": "Name of the IP configuration that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed."
    },
    "ApplicationGatewayAuthenticationCertificatePropertiesFormat": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Certificate public data."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the authentication certificate resource."
        }
      },
      "description": "Authentication certificates properties of an application gateway."
    },
    "ApplicationGatewayAuthenticationCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayAuthenticationCertificatePropertiesFormat",
          "description": "Properties of the application gateway authentication certificate."
        },
        "name": {
          "type": "string",
          "description": "Name of the authentication certificate that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Authentication certificates of an application gateway."
    },
    "ApplicationGatewayTrustedRootCertificatePropertiesFormat": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Certificate public data."
        },
        "keyVaultSecretId": {
          "type": "string",
          "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the trusted root certificate resource."
        }
      },
      "description": "Trusted Root certificates properties of an application gateway."
    },
    "ApplicationGatewayTrustedRootCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayTrustedRootCertificatePropertiesFormat",
          "description": "Properties of the application gateway trusted root certificate."
        },
        "name": {
          "type": "string",
          "description": "Name of the trusted root certificate that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Trusted Root certificates of an application gateway."
    },
    "ApplicationGatewaySslCertificatePropertiesFormat": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Base-64 encoded pfx certificate. Only applicable in PUT Request."
        },
        "password": {
          "type": "string",
          "description": "Password for the pfx file specified in data. Only applicable in PUT request."
        },
        "publicCertData": {
          "readOnly": true,
          "type": "string",
          "description": "Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request."
        },
        "keyVaultSecretId": {
          "type": "string",
          "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the SSL certificate resource."
        }
      },
      "description": "Properties of SSL certificates of an application gateway."
    },
    "ApplicationGatewaySslCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewaySslCertificatePropertiesFormat",
          "description": "Properties of the application gateway SSL certificate."
        },
        "name": {
          "type": "string",
          "description": "Name of the SSL certificate that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "SSL certificates of an application gateway."
    },
    "ApplicationGatewayFrontendIPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "PrivateIPAddress of the network interface IP Configuration."
        },
        "privateIPAllocationMethod": {
          "$ref": "#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method."
        },
        "subnet": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference of the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference of the PublicIP resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the frontend IP configuration resource."
        }
      },
      "description": "Properties of Frontend IP configuration of an application gateway."
    },
    "ApplicationGatewayFrontendIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayFrontendIPConfigurationPropertiesFormat",
          "description": "Properties of the application gateway frontend IP configuration."
        },
        "name": {
          "type": "string",
          "description": "Name of the frontend IP configuration that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Frontend IP configuration of an application gateway."
    },
    "ApplicationGatewayFrontendPortPropertiesFormat": {
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Frontend port."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the frontend port resource."
        }
      },
      "description": "Properties of Frontend port of an application gateway."
    },
    "ApplicationGatewayFrontendPort": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayFrontendPortPropertiesFormat",
          "description": "Properties of the application gateway frontend port."
        },
        "name": {
          "type": "string",
          "description": "Name of the frontend port that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Frontend port of an application gateway."
    },
    "ApplicationGatewayBackendAddress": {
      "properties": {
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name (FQDN)."
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address."
        }
      },
      "description": "Backend address of an application gateway."
    },
    "ApplicationGatewayBackendAddressPoolPropertiesFormat": {
      "properties": {
        "backendIPConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "Collection of references to IPs defined in network interfaces."
        },
        "backendAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddress"
          },
          "description": "Backend addresses."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the backend address pool resource."
        }
      },
      "description": "Properties of Backend Address Pool of an application gateway."
    },
    "ApplicationGatewayBackendAddressPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayBackendAddressPoolPropertiesFormat",
          "description": "Properties of the application gateway backend address pool."
        },
        "name": {
          "type": "string",
          "description": "Name of the backend address pool that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Backend Address Pool of an application gateway."
    },
    "ApplicationGatewayBackendHttpSettingsPropertiesFormat": {
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The destination port on the backend."
        },
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "The protocol used to communicate with the backend."
        },
        "cookieBasedAffinity": {
          "type": "string",
          "description": "Cookie based affinity.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayCookieBasedAffinity",
            "modelAsString": true
          }
        },
        "requestTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds."
        },
        "probe": {
          "$ref": "#/definitions/SubResource",
          "description": "Probe resource of an application gateway."
        },
        "authenticationCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Array of references to application gateway authentication certificates."
        },
        "trustedRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Array of references to application gateway trusted root certificates."
        },
        "connectionDraining": {
          "$ref": "#/definitions/ApplicationGatewayConnectionDraining",
          "description": "Connection draining of the backend http settings resource."
        },
        "hostName": {
          "type": "string",
          "description": "Host header to be sent to the backend servers."
        },
        "pickHostNameFromBackendAddress": {
          "type": "boolean",
          "description": "Whether to pick host header should be picked from the host name of the backend server. Default value is false."
        },
        "affinityCookieName": {
          "type": "string",
          "description": "Cookie name to use for the affinity cookie."
        },
        "probeEnabled": {
          "type": "boolean",
          "description": "Whether the probe is enabled. Default value is false."
        },
        "path": {
          "type": "string",
          "description": "Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the backend HTTP settings resource."
        }
      },
      "description": "Properties of Backend address pool settings of an application gateway."
    },
    "ApplicationGatewayBackendHttpSettings": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayBackendHttpSettingsPropertiesFormat",
          "description": "Properties of the application gateway backend HTTP settings."
        },
        "name": {
          "type": "string",
          "description": "Name of the backend http settings that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Backend address pool settings of an application gateway."
    },
    "ApplicationGatewayHttpListenerPropertiesFormat": {
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "#/definitions/SubResource",
          "description": "Frontend IP configuration resource of an application gateway."
        },
        "frontendPort": {
          "$ref": "#/definitions/SubResource",
          "description": "Frontend port resource of an application gateway."
        },
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "Protocol of the HTTP listener."
        },
        "hostName": {
          "type": "string",
          "description": "Host name of HTTP listener."
        },
        "sslCertificate": {
          "$ref": "#/definitions/SubResource",
          "description": "SSL certificate resource of an application gateway."
        },
        "requireServerNameIndication": {
          "type": "boolean",
          "description": "Applicable only if protocol is https. Enables SNI for multi-hosting."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the HTTP listener resource."
        },
        "customErrorConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayCustomError"
          },
          "description": "Custom error configurations of the HTTP listener."
        },
        "firewallPolicy": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference to the FirewallPolicy resource."
        },
        "hostnames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Host names for HTTP Listener that allows special wildcard characters as well."
        }
      },
      "description": "Properties of HTTP listener of an application gateway."
    },
    "ApplicationGatewayHttpListener": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayHttpListenerPropertiesFormat",
          "description": "Properties of the application gateway HTTP listener."
        },
        "name": {
          "type": "string",
          "description": "Name of the HTTP listener that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Http listener of an application gateway."
    },
    "ApplicationGatewayPathRulePropertiesFormat": {
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Path rules of URL path map."
        },
        "backendAddressPool": {
          "$ref": "#/definitions/SubResource",
          "description": "Backend address pool resource of URL path map path rule."
        },
        "backendHttpSettings": {
          "$ref": "#/definitions/SubResource",
          "description": "Backend http settings resource of URL path map path rule."
        },
        "redirectConfiguration": {
          "$ref": "#/definitions/SubResource",
          "description": "Redirect configuration resource of URL path map path rule."
        },
        "rewriteRuleSet": {
          "$ref": "#/definitions/SubResource",
          "description": "Rewrite rule set resource of URL path map path rule."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the path rule resource."
        },
        "firewallPolicy": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference to the FirewallPolicy resource."
        }
      },
      "description": "Properties of path rule of an application gateway."
    },
    "ApplicationGatewayPathRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPathRulePropertiesFormat",
          "description": "Properties of the application gateway path rule."
        },
        "name": {
          "type": "string",
          "description": "Name of the path rule that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Path rule of URL path map of an application gateway."
    },
    "ApplicationGatewayProbePropertiesFormat": {
      "properties": {
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "The protocol used for the probe."
        },
        "host": {
          "type": "string",
          "description": "Host name to send the probe to."
        },
        "path": {
          "type": "string",
          "description": "Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>."
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds."
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds."
        },
        "unhealthyThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20."
        },
        "pickHostNameFromBackendHttpSettings": {
          "type": "boolean",
          "description": "Whether the host header should be picked from the backend http settings. Default value is false."
        },
        "minServers": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of servers that are always marked healthy. Default value is 0."
        },
        "match": {
          "$ref": "#/definitions/ApplicationGatewayProbeHealthResponseMatch",
          "description": "Criterion for classifying a healthy probe response."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the probe resource."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.",
          "minimum": 1,
          "maximum": 65535
        }
      },
      "description": "Properties of probe of an application gateway."
    },
    "ApplicationGatewayProbeHealthResponseMatch": {
      "properties": {
        "body": {
          "type": "string",
          "description": "Body that must be contained in the health response. Default value is empty."
        },
        "statusCodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399."
        }
      },
      "description": "Application gateway probe health response match."
    },
    "ApplicationGatewayProbe": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayProbePropertiesFormat",
          "description": "Properties of the application gateway probe."
        },
        "name": {
          "type": "string",
          "description": "Name of the probe that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Probe of the application gateway."
    },
    "ApplicationGatewayRequestRoutingRulePropertiesFormat": {
      "properties": {
        "ruleType": {
          "type": "string",
          "description": "Rule type.",
          "enum": [
            "Basic",
            "PathBasedRouting"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayRequestRoutingRuleType",
            "modelAsString": true
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "exclusiveMinimum": false,
          "maximum": 20000,
          "exclusiveMaximum": false,
          "description": "Priority of the request routing rule."
        },
        "backendAddressPool": {
          "$ref": "#/definitions/SubResource",
          "description": "Backend address pool resource of the application gateway."
        },
        "backendHttpSettings": {
          "$ref": "#/definitions/SubResource",
          "description": "Backend http settings resource of the application gateway."
        },
        "httpListener": {
          "$ref": "#/definitions/SubResource",
          "description": "Http listener resource of the application gateway."
        },
        "urlPathMap": {
          "$ref": "#/definitions/SubResource",
          "description": "URL path map resource of the application gateway."
        },
        "rewriteRuleSet": {
          "$ref": "#/definitions/SubResource",
          "description": "Rewrite Rule Set resource in Basic rule of the application gateway."
        },
        "redirectConfiguration": {
          "$ref": "#/definitions/SubResource",
          "description": "Redirect configuration resource of the application gateway."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the request routing rule resource."
        }
      },
      "description": "Properties of request routing rule of the application gateway."
    },
    "ApplicationGatewayRequestRoutingRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayRequestRoutingRulePropertiesFormat",
          "description": "Properties of the application gateway request routing rule."
        },
        "name": {
          "type": "string",
          "description": "Name of the request routing rule that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Request routing rule of an application gateway."
    },
    "ApplicationGatewayRewriteRuleSet": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayRewriteRuleSetPropertiesFormat",
          "description": "Properties of the application gateway rewrite rule set."
        },
        "name": {
          "type": "string",
          "description": "Name of the rewrite rule set that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Rewrite rule set of an application gateway."
    },
    "ApplicationGatewayRewriteRuleSetPropertiesFormat": {
      "properties": {
        "rewriteRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRewriteRule"
          },
          "description": "Rewrite rules in the rewrite rule set."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the rewrite rule set resource."
        }
      },
      "description": "Properties of rewrite rule set of the application gateway."
    },
    "ApplicationGatewayRewriteRule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the rewrite rule that is unique within an Application Gateway."
        },
        "ruleSequence": {
          "type": "integer",
          "description": "Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRewriteRuleCondition"
          },
          "description": "Conditions based on which the action set execution will be evaluated."
        },
        "actionSet": {
          "type": "object",
          "$ref": "#/definitions/ApplicationGatewayRewriteRuleActionSet",
          "description": "Set of actions to be done as part of the rewrite Rule."
        }
      },
      "description": "Rewrite rule of an application gateway."
    },
    "ApplicationGatewayRewriteRuleCondition": {
      "properties": {
        "variable": {
          "type": "string",
          "description": "The condition parameter of the RewriteRuleCondition."
        },
        "pattern": {
          "type": "string",
          "description": "The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition."
        },
        "ignoreCase": {
          "type": "boolean",
          "description": "Setting this paramter to truth value with force the pattern to do a case in-sensitive comparison."
        },
        "negate": {
          "type": "boolean",
          "description": "Setting this value as truth will force to check the negation of the condition given by the user."
        }
      },
      "description": "Set of conditions in the Rewrite Rule in Application Gateway."
    },
    "ApplicationGatewayRewriteRuleActionSet": {
      "properties": {
        "requestHeaderConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayHeaderConfiguration"
          },
          "description": "Request Header Actions in the Action Set."
        },
        "responseHeaderConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayHeaderConfiguration"
          },
          "description": "Response Header Actions in the Action Set."
        }
      },
      "description": "Set of actions in the Rewrite Rule in Application Gateway."
    },
    "ApplicationGatewayHeaderConfiguration": {
      "properties": {
        "headerName": {
          "type": "string",
          "description": "Header name of the header configuration."
        },
        "headerValue": {
          "type": "string",
          "description": "Header value of the header configuration."
        }
      },
      "description": "Header configuration of the Actions set in Application Gateway."
    },
    "ApplicationGatewayRedirectConfigurationPropertiesFormat": {
      "properties": {
        "redirectType": {
          "type": "string",
          "$ref": "#/definitions/RedirectTypeEnum",
          "description": "HTTP redirection type."
        },
        "targetListener": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference to a listener to redirect the request to."
        },
        "targetUrl": {
          "type": "string",
          "description": "Url to redirect the request to."
        },
        "includePath": {
          "type": "boolean",
          "description": "Include path in the redirected url."
        },
        "includeQueryString": {
          "type": "boolean",
          "description": "Include query string in the redirected url."
        },
        "requestRoutingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Request routing specifying redirect configuration."
        },
        "urlPathMaps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Url path maps specifying default redirect configuration."
        },
        "pathRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Path rules specifying redirect configuration."
        }
      },
      "description": "Properties of redirect configuration of the application gateway."
    },
    "ApplicationGatewayRedirectConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayRedirectConfigurationPropertiesFormat",
          "description": "Properties of the application gateway redirect configuration."
        },
        "name": {
          "type": "string",
          "description": "Name of the redirect configuration that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Redirect configuration of an application gateway."
    },
    "ApplicationGatewayPropertiesFormat": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/ApplicationGatewaySku",
          "description": "SKU of the application gateway resource."
        },
        "sslPolicy": {
          "$ref": "#/definitions/ApplicationGatewaySslPolicy",
          "description": "SSL policy of the application gateway resource."
        },
        "operationalState": {
          "readOnly": true,
          "type": "string",
          "description": "Operational state of the application gateway resource.",
          "enum": [
            "Stopped",
            "Starting",
            "Running",
            "Stopping"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayOperationalState",
            "modelAsString": true
          }
        },
        "gatewayIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayIPConfiguration"
          },
          "description": "Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "authenticationCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayAuthenticationCertificate"
          },
          "description": "Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "trustedRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayTrustedRootCertificate"
          },
          "description": "Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "sslCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewaySslCertificate"
          },
          "description": "SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "frontendIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFrontendIPConfiguration"
          },
          "description": "Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "frontendPorts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFrontendPort"
          },
          "description": "Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "probes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayProbe"
          },
          "description": "Probes of the application gateway resource."
        },
        "backendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddressPool"
          },
          "description": "Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "backendHttpSettingsCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendHttpSettings"
          },
          "description": "Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "httpListeners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayHttpListener"
          },
          "description": "Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "urlPathMaps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayUrlPathMap"
          },
          "description": "URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "requestRoutingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRequestRoutingRule"
          },
          "description": "Request routing rules of the application gateway resource."
        },
        "rewriteRuleSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRewriteRuleSet"
          },
          "description": "Rewrite rules for the application gateway resource."
        },
        "redirectConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRedirectConfiguration"
          },
          "description": "Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "webApplicationFirewallConfiguration": {
          "$ref": "#/definitions/ApplicationGatewayWebApplicationFirewallConfiguration",
          "description": "Web application firewall configuration."
        },
        "firewallPolicy": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference of the FirewallPolicy resource."
        },
        "enableHttp2": {
          "type": "boolean",
          "description": "Whether HTTP2 is enabled on the application gateway resource."
        },
        "enableFips": {
          "type": "boolean",
          "description": "Whether FIPS is enabled on the application gateway resource."
        },
        "autoscaleConfiguration": {
          "$ref": "#/definitions/ApplicationGatewayAutoscaleConfiguration",
          "description": "Autoscale Configuration."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the application gateway resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the application gateway resource."
        },
        "customErrorConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayCustomError"
          },
          "description": "Custom error configurations of the application gateway resource."
        }
      },
      "description": "Properties of the application gateway."
    },
    "ApplicationGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPropertiesFormat",
          "description": "Properties of the application gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting where the resource needs to come from."
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "The identity of the application gateway, if configured."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Application gateway resource."
    },
    "ApplicationGatewayListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGateway"
          },
          "description": "List of an application gateways in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListApplicationGateways API service call."
    },
    "ApplicationGatewayUrlPathMapPropertiesFormat": {
      "properties": {
        "defaultBackendAddressPool": {
          "$ref": "#/definitions/SubResource",
          "description": "Default backend address pool resource of URL path map."
        },
        "defaultBackendHttpSettings": {
          "$ref": "#/definitions/SubResource",
          "description": "Default backend http settings resource of URL path map."
        },
        "defaultRewriteRuleSet": {
          "$ref": "#/definitions/SubResource",
          "description": "Default Rewrite rule set resource of URL path map."
        },
        "defaultRedirectConfiguration": {
          "$ref": "#/definitions/SubResource",
          "description": "Default redirect configuration resource of URL path map."
        },
        "pathRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPathRule"
          },
          "description": "Path rule of URL path map resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the URL path map resource."
        }
      },
      "description": "Properties of UrlPathMap of the application gateway."
    },
    "ApplicationGatewayUrlPathMap": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayUrlPathMapPropertiesFormat",
          "description": "Properties of the application gateway URL path map."
        },
        "name": {
          "type": "string",
          "description": "Name of the URL path map that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "UrlPathMaps give a url path to the backend mapping information for PathBasedRouting."
    },
    "ApplicationGatewayWebApplicationFirewallConfiguration": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the web application firewall is enabled or not."
        },
        "firewallMode": {
          "type": "string",
          "description": "Web application firewall mode.",
          "enum": [
            "Detection",
            "Prevention"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayFirewallMode",
            "modelAsString": true
          }
        },
        "ruleSetType": {
          "type": "string",
          "description": "The type of the web application firewall rule set. Possible values are: 'OWASP'."
        },
        "ruleSetVersion": {
          "type": "string",
          "description": "The version of the rule set type."
        },
        "disabledRuleGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallDisabledRuleGroup"
          },
          "description": "The disabled rule groups."
        },
        "requestBodyCheck": {
          "type": "boolean",
          "description": "Whether allow WAF to check request Body."
        },
        "maxRequestBodySize": {
          "type": "integer",
          "format": "int32",
          "maximum": 128,
          "exclusiveMaximum": false,
          "minimum": 8,
          "exclusiveMinimum": false,
          "description": "Maximum request body size for WAF."
        },
        "maxRequestBodySizeInKb": {
          "type": "integer",
          "format": "int32",
          "maximum": 128,
          "exclusiveMaximum": false,
          "minimum": 8,
          "exclusiveMinimum": false,
          "description": "Maximum request body size in Kb for WAF."
        },
        "fileUploadLimitInMb": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Maximum file upload size in Mb for WAF."
        },
        "exclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallExclusion"
          },
          "description": "The exclusion list."
        }
      },
      "required": [
        "enabled",
        "firewallMode",
        "ruleSetType",
        "ruleSetVersion"
      ],
      "description": "Application gateway web application firewall configuration."
    },
    "ApplicationGatewayAutoscaleConfiguration": {
      "properties": {
        "minCapacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Lower bound on number of Application Gateway capacity."
        },
        "maxCapacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 2,
          "exclusiveMinimum": false,
          "description": "Upper bound on number of Application Gateway capacity."
        }
      },
      "required": [
        "minCapacity"
      ],
      "description": "Application Gateway autoscale configuration."
    },
    "ApplicationGatewayConnectionDraining": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether connection draining is enabled or not."
        },
        "drainTimeoutInSec": {
          "type": "integer",
          "format": "int32",
          "maximum": 3600,
          "exclusiveMaximum": false,
          "minimum": 1,
          "exclusiveMinimum": false,
          "description": "The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds."
        }
      },
      "required": [
        "enabled",
        "drainTimeoutInSec"
      ],
      "description": "Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration."
    },
    "ApplicationGatewayFirewallDisabledRuleGroup": {
      "properties": {
        "ruleGroupName": {
          "type": "string",
          "description": "The name of the rule group that will be disabled."
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "x-nullable": false
          },
          "description": "The list of rules that will be disabled. If null, all rules of the rule group will be disabled."
        }
      },
      "required": [
        "ruleGroupName"
      ],
      "description": "Allows to disable rules within a rule group or an entire rule group."
    },
    "ApplicationGatewayAvailableServerVariablesResult": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Response for ApplicationGatewayAvailableServerVariables API service call."
    },
    "ApplicationGatewayAvailableRequestHeadersResult": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Response for ApplicationGatewayAvailableRequestHeaders API service call."
    },
    "ApplicationGatewayAvailableResponseHeadersResult": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Response for ApplicationGatewayAvailableResponseHeaders API service call."
    },
    "ApplicationGatewayFirewallExclusion": {
      "properties": {
        "matchVariable": {
          "type": "string",
          "description": "The variable to be excluded."
        },
        "selectorMatchOperator": {
          "type": "string",
          "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to."
        },
        "selector": {
          "type": "string",
          "description": "When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to."
        }
      },
      "required": [
        "matchVariable",
        "selectorMatchOperator",
        "selector"
      ],
      "description": "Allow to exclude some variable satisfy the condition for the WAF check."
    },
    "ApplicationGatewayAvailableWafRuleSetsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallRuleSet"
          },
          "description": "The list of application gateway rule sets."
        }
      },
      "description": "Response for ApplicationGatewayAvailableWafRuleSets API service call."
    },
    "ApplicationGatewayFirewallRuleSet": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayFirewallRuleSetPropertiesFormat",
          "description": "Properties of the application gateway firewall rule set."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A web application firewall rule set."
    },
    "ApplicationGatewayFirewallRuleSetPropertiesFormat": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the web application firewall rule set."
        },
        "ruleSetType": {
          "type": "string",
          "description": "The type of the web application firewall rule set."
        },
        "ruleSetVersion": {
          "type": "string",
          "description": "The version of the web application firewall rule set type."
        },
        "ruleGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallRuleGroup"
          },
          "description": "The rule groups of the web application firewall rule set."
        }
      },
      "required": [
        "ruleSetType",
        "ruleSetVersion",
        "ruleGroups"
      ],
      "description": "Properties of the web application firewall rule set."
    },
    "ApplicationGatewayFirewallRuleGroup": {
      "properties": {
        "ruleGroupName": {
          "type": "string",
          "description": "The name of the web application firewall rule group."
        },
        "description": {
          "type": "string",
          "description": "The description of the web application firewall rule group."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallRule"
          },
          "description": "The rules of the web application firewall rule group."
        }
      },
      "required": [
        "ruleGroupName",
        "rules"
      ],
      "description": "A web application firewall rule group."
    },
    "ApplicationGatewayFirewallRule": {
      "properties": {
        "ruleId": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier of the web application firewall rule."
        },
        "description": {
          "type": "string",
          "description": "The description of the web application firewall rule."
        }
      },
      "required": [
        "ruleId"
      ],
      "description": "A web application firewall rule."
    },
    "ApplicationGatewayAvailableSslOptions": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayAvailableSslOptionsPropertiesFormat",
          "description": "Properties of the application gateway available SSL options."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Response for ApplicationGatewayAvailableSslOptions API service call."
    },
    "ApplicationGatewayAvailableSslOptionsPropertiesFormat": {
      "properties": {
        "predefinedPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "List of available Ssl predefined policy."
        },
        "defaultPolicy": {
          "$ref": "#/definitions/PolicyNameEnum",
          "description": "Name of the Ssl predefined policy applied by default to application gateway."
        },
        "availableCipherSuites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CipherSuitesEnum"
          },
          "description": "List of available Ssl cipher suites."
        },
        "availableProtocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtocolsEnum"
          },
          "description": "List of available Ssl protocols."
        }
      },
      "description": "Properties of ApplicationGatewayAvailableSslOptions."
    },
    "ApplicationGatewayAvailableSslPredefinedPolicies": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewaySslPredefinedPolicy"
          },
          "description": "List of available Ssl predefined policy."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ApplicationGatewayAvailableSslOptions API service call."
    },
    "ApplicationGatewaySslPredefinedPolicy": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Ssl predefined policy."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewaySslPredefinedPolicyPropertiesFormat",
          "description": "Properties of the application gateway SSL predefined policy."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "An Ssl predefined policy."
    },
    "ApplicationGatewaySslPredefinedPolicyPropertiesFormat": {
      "properties": {
        "cipherSuites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CipherSuitesEnum"
          },
          "description": "Ssl cipher suites to be enabled in the specified order for application gateway."
        },
        "minProtocolVersion": {
          "$ref": "#/definitions/ProtocolsEnum",
          "description": "Minimum version of Ssl protocol to be supported on application gateway."
        }
      },
      "description": "Properties of ApplicationGatewaySslPredefinedPolicy."
    },
    "ApplicationGatewayCustomError": {
      "properties": {
        "statusCode": {
          "type": "string",
          "description": "Status code of the application gateway customer error.",
          "enum": [
            "HttpStatus403",
            "HttpStatus502"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayCustomErrorStatusCode",
            "modelAsString": true
          }
        },
        "customErrorPageUrl": {
          "type": "string",
          "description": "Error page URL of the application gateway customer error."
        }
      },
      "description": "Customer error of an application gateway."
    },
    "PolicyNameEnum": {
      "type": "string",
      "description": "Ssl predefined policy name enums.",
      "enum": [
        "AppGwSslPolicy20150501",
        "AppGwSslPolicy20170401",
        "AppGwSslPolicy20170401S"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewaySslPolicyName",
        "modelAsString": true
      }
    },
    "ProtocolsEnum": {
      "type": "string",
      "description": "Ssl protocol enums.",
      "enum": [
        "TLSv1_0",
        "TLSv1_1",
        "TLSv1_2"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewaySslProtocol",
        "modelAsString": true
      }
    },
    "CipherSuitesEnum": {
      "type": "string",
      "description": "Ssl cipher suites enums.",
      "enum": [
        "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
        "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
        "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
        "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
        "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
        "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
        "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",
        "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
        "TLS_RSA_WITH_AES_256_GCM_SHA384",
        "TLS_RSA_WITH_AES_128_GCM_SHA256",
        "TLS_RSA_WITH_AES_256_CBC_SHA256",
        "TLS_RSA_WITH_AES_128_CBC_SHA256",
        "TLS_RSA_WITH_AES_256_CBC_SHA",
        "TLS_RSA_WITH_AES_128_CBC_SHA",
        "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
        "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
        "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
        "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
        "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
        "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
        "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256",
        "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256",
        "TLS_DHE_DSS_WITH_AES_256_CBC_SHA",
        "TLS_DHE_DSS_WITH_AES_128_CBC_SHA",
        "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
        "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA",
        "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
        "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewaySslCipherSuite",
        "modelAsString": true
      }
    },
    "RedirectTypeEnum": {
      "type": "string",
      "description": "Redirect type enum.",
      "enum": [
        "Permanent",
        "Found",
        "SeeOther",
        "Temporary"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewayRedirectType",
        "modelAsString": true
      }
    },
    "ApplicationGatewayProtocol": {
      "type": "string",
      "description": "Application Gateway protocol.",
      "enum": [
        "Http",
        "Https"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewayProtocol",
        "modelAsString": true
      }
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "description": "Reference to another subresource.",
      "x-ms-azure-resource": true
    },
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Common resource representation.",
      "x-ms-azure-resource": true
    },
    "ProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Updating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ManagedServiceIdentity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
        },
        "type": {
          "type": "string",
          "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal id of user assigned identity."
              },
              "clientId": {
                "readOnly": true,
                "type": "string",
                "description": "The client id of user assigned identity."
              }
            }
          },
          "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        }
      },
      "description": "Identity for the resource."
    },
    "NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties": {
      "properties": {
        "groupId": {
          "type": "string",
          "readOnly": true,
          "description": "The group ID for current private link connection."
        },
        "requiredMemberName": {
          "type": "string",
          "readOnly": true,
          "description": "The required member name for current private link connection."
        },
        "fqdns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "List of FQDNs for current private link connection."
        }
      },
      "description": "PrivateLinkConnection properties for the network interface."
    },
    "ApplicationSecurityGroupPropertiesFormat": {
      "properties": {
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the application security group resource."
        }
      },
      "description": "Application security group properties."
    },
    "ApplicationSecurityGroup": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationSecurityGroupPropertiesFormat",
          "description": "Properties of the application security group."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "An application security group in a resource group."
    },
    "IpTag": {
      "properties": {
        "ipTagType": {
          "type": "string",
          "description": "The IP tag type. Example: FirstPartyUsage."
        },
        "tag": {
          "type": "string",
          "description": "The value of the IP tag associated with the public IP. Example: SQL."
        }
      },
      "description": "Contains the IpTag associated with the object."
    },
    "DdosSettings": {
      "properties": {
        "ddosCustomPolicy": {
          "readOnly": false,
          "$ref": "#/definitions/SubResource",
          "description": "The DDoS custom policy associated with the public IP."
        },
        "protectionCoverage": {
          "readOnly": false,
          "type": "string",
          "enum": [
            "Basic",
            "Standard"
          ],
          "x-ms-enum": {
            "name": "DdosSettingsProtectionCoverage",
            "modelAsString": true
          },
          "description": "The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized."
        }
      },
      "description": "Contains the DDoS protection settings of the public IP."
    },
    "PublicIPAddressDnsSettings": {
      "properties": {
        "domainNameLabel": {
          "type": "string",
          "description": "The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."
        },
        "fqdn": {
          "type": "string",
          "description": "The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."
        },
        "reverseFqdn": {
          "type": "string",
          "description": "The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN."
        }
      },
      "description": "Contains FQDN of the DNS record associated with the public IP address."
    },
    "ServiceDelegationPropertiesFormat": {
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers)."
        },
        "actions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Describes the actions permitted to the service upon delegation."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the service delegation resource."
        }
      },
      "description": "Properties of a service delegation."
    },
    "Delegation": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ServiceDelegationPropertiesFormat",
          "description": "Properties of the subnet."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a subnet. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Details the service to which the subnet is delegated."
    },
    "ServiceAssociationLinkPropertiesFormat": {
      "properties": {
        "linkedResourceType": {
          "type": "string",
          "description": "Resource type of the linked resource."
        },
        "link": {
          "type": "string",
          "description": "Link to the external resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the service association link resource."
        },
        "allowDelete": {
          "type": "boolean",
          "description": "If true, the resource can be deleted."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations."
        }
      },
      "description": "Properties of ServiceAssociationLink."
    },
    "ServiceAssociationLink": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ServiceAssociationLinkPropertiesFormat",
          "description": "Resource navigation link properties format."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "ServiceAssociationLink resource."
    },
    "ResourceNavigationLinkFormat": {
      "properties": {
        "linkedResourceType": {
          "type": "string",
          "description": "Resource type of the linked resource."
        },
        "link": {
          "type": "string",
          "description": "Link to the external resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource navigation link resource."
        }
      },
      "description": "Properties of ResourceNavigationLink."
    },
    "ResourceNavigationLink": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ResourceNavigationLinkFormat",
          "description": "Resource navigation link properties format."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource navigation link identifier."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "ResourceNavigationLink resource."
    },
    "IPConfigurationProfilePropertiesFormat": {
      "properties": {
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "The reference of the subnet resource to create a container network interface ip configuration."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the IP configuration profile resource."
        }
      },
      "description": "IP configuration profile properties."
    },
    "IPConfigurationProfile": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IPConfigurationProfilePropertiesFormat",
          "description": "Properties of the IP configuration profile."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Sub Resource type."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IP configuration profile child resource."
    },
    "PrivateLinkServiceConnectionState": {
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      },
      "description": "A collection of information about the state of the connection between service consumer and provider."
    },
    "PrivateLinkServiceConnectionProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the private link service connection resource."
        },
        "privateLinkServiceId": {
          "type": "string",
          "description": "The resource id of private link service."
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to."
        },
        "requestMessage": {
          "type": "string",
          "description": "A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of read-only information about the state of the connection to the remote resource."
        }
      },
      "description": "Properties of the PrivateLinkServiceConnection."
    },
    "PrivateLinkServiceConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PrivateLinkServiceConnectionProperties",
          "description": "Properties of the private link service connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "PrivateLinkServiceConnection resource."
    },
    "NetworkInterfaceDnsSettings": {
      "properties": {
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection."
        },
        "appliedDnsServers": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs."
        },
        "internalDnsNameLabel": {
          "type": "string",
          "description": "Relative DNS name for this NIC used for internal communications between VMs in the same virtual network."
        },
        "internalFqdn": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified DNS name supporting internal communications between VMs in the same virtual network."
        },
        "internalDomainNameSuffix": {
          "readOnly": true,
          "type": "string",
          "description": "Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix."
        }
      },
      "description": "DNS settings of a network interface."
    },
    "IPVersion": {
      "type": "string",
      "description": "IP address version.",
      "enum": [
        "IPv4",
        "IPv6"
      ],
      "x-ms-enum": {
        "name": "IPVersion",
        "modelAsString": true
      }
    },
    "IPAllocationMethod": {
      "type": "string",
      "description": "IP address allocation method.",
      "enum": [
        "Static",
        "Dynamic"
      ],
      "x-ms-enum": {
        "name": "IPAllocationMethod",
        "modelAsString": true
      }
    },
    "FrontendIPConfigurationPropertiesFormat": {
      "properties": {
        "inboundNatRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "An array of references to inbound rules that use this frontend IP."
        },
        "inboundNatPools": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "An array of references to inbound pools that use this frontend IP."
        },
        "outboundRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "An array of references to outbound rules that use this frontend IP."
        },
        "loadBalancingRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "An array of references to load balancing rules that use this frontend IP."
        },
        "privateIPAddress": {
          "type": "string",
          "description": "The private IP address of the IP configuration."
        },
        "privateIPAllocationMethod": {
          "$ref": "#/definitions/IPAllocationMethod",
          "description": "The Private IP allocation method."
        },
        "privateIPAddressVersion": {
          "$ref": "#/definitions/IPVersion",
          "description": "Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4."
        },
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "The reference of the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "#/definitions/PublicIPAddress",
          "description": "The reference of the Public IP resource."
        },
        "publicIPPrefix": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of the Public IP Prefix resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the frontend IP configuration resource."
        }
      },
      "description": "Properties of Frontend IP Configuration of the load balancer."
    },
    "FrontendIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FrontendIPConfigurationPropertiesFormat",
          "description": "Properties of the load balancer probe."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting the IP allocated for the resource needs to come from."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Frontend IP address of the load balancer."
    },
    "VirtualNetworkTapPropertiesFormat": {
      "description": "Virtual Network Tap properties.",
      "properties": {
        "networkInterfaceTapConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceTapConfiguration",
            "description": "The reference of the Network Interface."
          },
          "description": "Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "The resource GUID property of the virtual network tap resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual network tap resource."
        },
        "destinationNetworkInterfaceIPConfiguration": {
          "$ref": "#/definitions/NetworkInterfaceIPConfiguration",
          "description": "The reference to the private IP Address of the collector nic that will receive the tap."
        },
        "destinationLoadBalancerFrontEndIPConfiguration": {
          "$ref": "#/definitions/FrontendIPConfiguration",
          "description": "The reference to the private IP address on the internal Load Balancer that will receive the tap."
        },
        "destinationPort": {
          "type": "integer",
          "description": "The VXLAN destination port that will receive the tapped traffic."
        }
      }
    },
    "VirtualNetworkTap": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkTapPropertiesFormat",
          "description": "Virtual Network Tap Properties."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Virtual Network Tap resource."
    },
    "NetworkInterfaceTapConfigurationPropertiesFormat": {
      "properties": {
        "virtualNetworkTap": {
          "$ref": "#/definitions/VirtualNetworkTap",
          "description": "The reference of the Virtual Network Tap resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the network interface tap configuration resource."
        }
      },
      "description": "Properties of Virtual Network Tap configuration."
    },
    "NetworkInterfaceTapConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkInterfaceTapConfigurationPropertiesFormat",
          "description": "Properties of the Virtual Network Tap configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Sub Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Tap configuration in a Network Interface."
    },
    "SecurityRuleDirection": {
      "type": "string",
      "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.",
      "enum": [
        "Inbound",
        "Outbound"
      ],
      "x-ms-enum": {
        "name": "SecurityRuleDirection",
        "modelAsString": true
      }
    },
    "SecurityRuleAccess": {
      "type": "string",
      "description": "Whether network traffic is allowed or denied.",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "SecurityRuleAccess",
        "modelAsString": true
      }
    },
    "SecurityRulePropertiesFormat": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for this rule. Restricted to 140 chars."
        },
        "protocol": {
          "type": "string",
          "description": "Network protocol this rule applies to.",
          "enum": [
            "Tcp",
            "Udp",
            "Icmp",
            "Esp",
            "*",
            "Ah"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleProtocol",
            "modelAsString": true
          }
        },
        "sourcePortRange": {
          "type": "string",
          "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
        },
        "sourceAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The CIDR or source IP ranges."
        },
        "sourceApplicationSecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationSecurityGroup"
          },
          "description": "The application security group specified as source."
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
        },
        "destinationAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The destination address prefixes. CIDR or destination IP ranges."
        },
        "destinationApplicationSecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationSecurityGroup"
          },
          "description": "The application security group specified as destination."
        },
        "sourcePortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The source port."
          },
          "description": "The source port ranges."
        },
        "destinationPortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The destination port."
          },
          "description": "The destination port ranges."
        },
        "access": {
          "$ref": "#/definitions/SecurityRuleAccess",
          "description": "The network traffic is allowed or denied."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."
        },
        "direction": {
          "$ref": "#/definitions/SecurityRuleDirection",
          "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the security rule resource."
        }
      },
      "required": [
        "protocol",
        "access",
        "direction"
      ],
      "description": "Security rule resource."
    },
    "SecurityRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityRulePropertiesFormat",
          "description": "Properties of the security rule."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Network security rule."
    },
    "NetworkSecurityGroupPropertiesFormat": {
      "properties": {
        "securityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "A collection of security rules of the network security group."
        },
        "defaultSecurityRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "The default security rules of network security group."
        },
        "networkInterfaces": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterface"
          },
          "description": "A collection of references to network interfaces."
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "A collection of references to subnets."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the network security group resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the network security group resource."
        }
      },
      "description": "Network Security Group resource."
    },
    "NetworkSecurityGroup": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkSecurityGroupPropertiesFormat",
          "description": "Properties of the network security group."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "NetworkSecurityGroup resource."
    },
    "NetworkInterfacePropertiesFormat": {
      "properties": {
        "virtualMachine": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of a virtual machine.",
          "readOnly": true
        },
        "networkSecurityGroup": {
          "$ref": "#/definitions/NetworkSecurityGroup",
          "description": "The reference of the NetworkSecurityGroup resource."
        },
        "privateEndpoint": {
          "readOnly": true,
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "A reference to the private endpoint to which the network interface is linked."
        },
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "A list of IPConfigurations of the network interface."
        },
        "tapConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceTapConfiguration"
          },
          "description": "A list of TapConfigurations of the network interface."
        },
        "dnsSettings": {
          "$ref": "#/definitions/NetworkInterfaceDnsSettings",
          "description": "The DNS settings in network interface."
        },
        "macAddress": {
          "readOnly": true,
          "type": "string",
          "description": "The MAC address of the network interface."
        },
        "primary": {
          "readOnly": true,
          "type": "boolean",
          "description": "Whether this is a primary network interface on a virtual machine."
        },
        "enableAcceleratedNetworking": {
          "type": "boolean",
          "description": "If the network interface is accelerated networking enabled."
        },
        "enableIPForwarding": {
          "type": "boolean",
          "description": "Indicates whether IP forwarding is enabled on this network interface."
        },
        "hostedWorkloads": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "A list of references to linked BareMetal resources."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the network interface resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the network interface resource."
        }
      },
      "description": "NetworkInterface properties."
    },
    "NetworkInterface": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkInterfacePropertiesFormat",
          "description": "Properties of the network interface."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A network interface in a resource group."
    },
    "PrivateEndpointProperties": {
      "properties": {
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "The ID of the subnet from which the private IP will be allocated."
        },
        "networkInterfaces": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/NetworkInterface"
          },
          "description": "An array of references to the network interfaces created for this private endpoint."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the private endpoint resource."
        },
        "privateLinkServiceConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkServiceConnection"
          },
          "description": "A grouping of information about the connection to the remote resource."
        },
        "manualPrivateLinkServiceConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkServiceConnection"
          },
          "description": "A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource."
        }
      },
      "description": "Properties of the private endpoint."
    },
    "PrivateEndpoint": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PrivateEndpointProperties",
          "description": "Properties of the private endpoint."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Private endpoint resource."
    },
    "ServiceEndpointPolicyDefinitionPropertiesFormat": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for this rule. Restricted to 140 chars."
        },
        "service": {
          "type": "string",
          "description": "Service endpoint name."
        },
        "serviceResources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of service resources."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the service endpoint policy definition resource."
        }
      },
      "description": "Service Endpoint policy definition resource."
    },
    "ServiceEndpointPolicyDefinition": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ServiceEndpointPolicyDefinitionPropertiesFormat",
          "description": "Properties of the service endpoint policy definition."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Service Endpoint policy definitions."
    },
    "ServiceEndpointPolicyPropertiesFormat": {
      "properties": {
        "serviceEndpointPolicyDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpointPolicyDefinition"
          },
          "description": "A collection of service endpoint policy definitions of the service endpoint policy."
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "A collection of references to subnets."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "The resource GUID property of the service endpoint policy resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the service endpoint policy resource."
        }
      },
      "description": "Service Endpoint Policy resource."
    },
    "ServiceEndpointPolicy": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ServiceEndpointPolicyPropertiesFormat",
          "description": "Properties of the service end point policy."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Service End point policy resource."
    },
    "ServiceEndpointPropertiesFormat": {
      "properties": {
        "service": {
          "type": "string",
          "description": "The type of the endpoint service."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the service endpoint resource."
        }
      },
      "description": "The service endpoint properties."
    },
    "RouteNextHopType": {
      "type": "string",
      "description": "The type of Azure hop the packet should be sent to.",
      "enum": [
        "VirtualNetworkGateway",
        "VnetLocal",
        "Internet",
        "VirtualAppliance",
        "None"
      ],
      "x-ms-enum": {
        "name": "RouteNextHopType",
        "modelAsString": true
      }
    },
    "RoutePropertiesFormat": {
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "The destination CIDR to which the route applies."
        },
        "nextHopType": {
          "$ref": "#/definitions/RouteNextHopType",
          "description": "The type of Azure hop the packet should be sent to."
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the route resource."
        }
      },
      "required": [
        "nextHopType"
      ],
      "description": "Route resource."
    },
    "Route": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RoutePropertiesFormat",
          "description": "Properties of the route."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Route resource."
    },
    "RouteTablePropertiesFormat": {
      "properties": {
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Route"
          },
          "description": "Collection of routes contained within a route table."
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "A collection of references to subnets."
        },
        "disableBgpRoutePropagation": {
          "type": "boolean",
          "description": "Whether to disable the routes learned by BGP on that route table. True means disable."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the route table resource."
        }
      },
      "description": "Route Table resource."
    },
    "RouteTable": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteTablePropertiesFormat",
          "description": "Properties of the route table."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Route table resource."
    },
    "SubnetPropertiesFormat": {
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "The address prefix for the subnet."
        },
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of address prefixes for the subnet."
        },
        "networkSecurityGroup": {
          "$ref": "#/definitions/NetworkSecurityGroup",
          "description": "The reference of the NetworkSecurityGroup resource."
        },
        "routeTable": {
          "$ref": "#/definitions/RouteTable",
          "description": "The reference of the RouteTable resource."
        },
        "natGateway": {
          "$ref": "#/definitions/SubResource",
          "description": "Nat gateway associated with this subnet."
        },
        "serviceEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpointPropertiesFormat"
          },
          "description": "An array of service endpoints."
        },
        "serviceEndpointPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpointPolicy"
          },
          "description": "An array of service endpoint policies."
        },
        "privateEndpoints": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpoint"
          },
          "description": "An array of references to private endpoints."
        },
        "ipConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPConfiguration"
          },
          "description": "An array of references to the network interface IP configurations using subnet."
        },
        "ipConfigurationProfiles": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPConfigurationProfile"
          },
          "description": "Array of IP configuration profiles which reference this subnet."
        },
        "resourceNavigationLinks": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceNavigationLink"
          },
          "description": "An array of references to the external resources using subnet."
        },
        "serviceAssociationLinks": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceAssociationLink"
          },
          "description": "An array of references to services injecting into this subnet."
        },
        "delegations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Delegation"
          },
          "description": "An array of references to the delegations on the subnet."
        },
        "purpose": {
          "type": "string",
          "readOnly": true,
          "description": "A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the subnet resource."
        },
        "privateEndpointNetworkPolicies": {
          "type": "string",
          "description": "Enable or Disable apply network policies on private end point in the subnet."
        },
        "privateLinkServiceNetworkPolicies": {
          "type": "string",
          "description": "Enable or Disable apply network policies on private link service in the subnet."
        }
      },
      "description": "Properties of the subnet."
    },
    "Subnet": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SubnetPropertiesFormat",
          "description": "Properties of the subnet."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Subnet in a virtual network resource."
    },
    "IPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "The private IP address of the IP configuration."
        },
        "privateIPAllocationMethod": {
          "$ref": "#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method."
        },
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "The reference of the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "#/definitions/PublicIPAddress",
          "description": "The reference of the public IP resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the IP configuration resource."
        }
      },
      "description": "Properties of IP configuration."
    },
    "IPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IPConfigurationPropertiesFormat",
          "description": "Properties of the IP configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IP configuration."
    },
    "PublicIPAddressPropertiesFormat": {
      "properties": {
        "publicIPAllocationMethod": {
          "$ref": "#/definitions/IPAllocationMethod",
          "description": "The public IP address allocation method."
        },
        "publicIPAddressVersion": {
          "$ref": "#/definitions/IPVersion",
          "description": "The public IP address version."
        },
        "ipConfiguration": {
          "readOnly": true,
          "$ref": "#/definitions/IPConfiguration",
          "description": "The IP configuration associated with the public IP address."
        },
        "dnsSettings": {
          "$ref": "#/definitions/PublicIPAddressDnsSettings",
          "description": "The FQDN of the DNS record associated with the public IP address."
        },
        "ddosSettings": {
          "$ref": "#/definitions/DdosSettings",
          "description": "The DDoS protection custom policy associated with the public IP address."
        },
        "ipTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpTag"
          },
          "description": "The list of tags associated with the public IP address."
        },
        "ipAddress": {
          "type": "string",
          "description": "The IP address associated with the public IP address resource."
        },
        "publicIPPrefix": {
          "$ref": "#/definitions/SubResource",
          "description": "The Public IP Prefix this Public IP Address should be allocated from."
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The idle timeout of the public IP address."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the public IP address resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the public IP address resource."
        }
      },
      "description": "Public IP address properties."
    },
    "PublicIPAddressSku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of a public IP address SKU.",
          "enum": [
            "Basic",
            "Standard"
          ],
          "x-ms-enum": {
            "name": "PublicIPAddressSkuName",
            "modelAsString": true
          }
        }
      },
      "description": "SKU of a public IP address."
    },
    "PublicIPAddress": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/PublicIPAddressSku",
          "description": "The public IP address SKU."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PublicIPAddressPropertiesFormat",
          "description": "Public IP address properties."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting the IP allocated for the resource needs to come from."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Public IP address resource."
    },
    "TransportProtocol": {
      "type": "string",
      "description": "The transport protocol for the endpoint.",
      "enum": [
        "Udp",
        "Tcp",
        "All"
      ],
      "x-ms-enum": {
        "name": "TransportProtocol",
        "modelAsString": true
      }
    },
    "InboundNatRulePropertiesFormat": {
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "#/definitions/SubResource",
          "description": "A reference to frontend IP addresses."
        },
        "backendIPConfiguration": {
          "readOnly": true,
          "$ref": "#/definitions/NetworkInterfaceIPConfiguration",
          "description": "A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP."
        },
        "protocol": {
          "$ref": "#/definitions/TransportProtocol",
          "description": "The reference to the transport protocol used by the load balancing rule."
        },
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for the internal endpoint. Acceptable values range from 1 to 65535."
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."
        },
        "enableFloatingIP": {
          "type": "boolean",
          "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."
        },
        "enableTcpReset": {
          "type": "boolean",
          "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the inbound NAT rule resource."
        }
      },
      "description": "Properties of the inbound NAT rule."
    },
    "InboundNatRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/InboundNatRulePropertiesFormat",
          "description": "Properties of load balancer inbound nat rule."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Inbound NAT rule of the load balancer."
    },
    "BackendAddressPoolPropertiesFormat": {
      "properties": {
        "backendIPConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "An array of references to IP addresses defined in network interfaces."
        },
        "loadBalancingRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "An array of references to load balancing rules that use this backend address pool."
        },
        "outboundRule": {
          "readOnly": true,
          "$ref": "#/definitions/SubResource",
          "description": "A reference to an outbound rule that uses this backend address pool."
        },
        "outboundRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "An array of references to outbound rules that use this backend address pool."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the backend address pool resource."
        }
      },
      "description": "Properties of the backend address pool."
    },
    "BackendAddressPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BackendAddressPoolPropertiesFormat",
          "description": "Properties of load balancer backend address pool."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Pool of backend IP addresses."
    },
    "NetworkInterfaceIPConfigurationPropertiesFormat": {
      "properties": {
        "virtualNetworkTaps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkTap"
          },
          "description": "The reference to Virtual Network Taps."
        },
        "applicationGatewayBackendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddressPool"
          },
          "description": "The reference of ApplicationGatewayBackendAddressPool resource."
        },
        "loadBalancerBackendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackendAddressPool"
          },
          "description": "The reference of LoadBalancerBackendAddressPool resource."
        },
        "loadBalancerInboundNatRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundNatRule"
          },
          "description": "A list of references of LoadBalancerInboundNatRules."
        },
        "privateIPAddress": {
          "type": "string",
          "description": "Private IP address of the IP configuration."
        },
        "privateIPAllocationMethod": {
          "$ref": "#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method."
        },
        "privateIPAddressVersion": {
          "$ref": "#/definitions/IPVersion",
          "description": "Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4."
        },
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "Subnet bound to the IP configuration."
        },
        "primary": {
          "type": "boolean",
          "description": "Whether this is a primary customer address on the network interface."
        },
        "publicIPAddress": {
          "$ref": "#/definitions/PublicIPAddress",
          "description": "Public IP address bound to the IP configuration."
        },
        "applicationSecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationSecurityGroup"
          },
          "description": "Application security groups in which the IP configuration is included."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the network interface IP configuration."
        },
        "privateLinkConnectionProperties": {
          "$ref": "#/definitions/NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties",
          "description": "PrivateLinkConnection properties for the network interface.",
          "readOnly": true
        }
      },
      "description": "Properties of IP configuration."
    },
    "NetworkInterfaceIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkInterfaceIPConfigurationPropertiesFormat",
          "description": "Network interface IP configuration properties."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IPConfiguration in a network interface."
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from the service."
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Cloud error body."
        }
      },
      "description": "An error response from the service."
    },
    "ErrorDetails": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        }
      },
      "description": "Common error details representation."
    },
    "Error": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "description": "Error details."
        },
        "innerError": {
          "type": "string",
          "description": "Inner error message."
        }
      },
      "description": "Common error representation."
    },
    "TagsObject": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Tags object for patch operations."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  },
  "x-internal-service-id": "application-gateway",
  "x-internal-service-name": "Application Gateway",
  "x-internal-toc-name": "Application Gateways",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "ListAvailableServerVariables",
  "x-internal-operation-name": "List Available Server Variables"
}