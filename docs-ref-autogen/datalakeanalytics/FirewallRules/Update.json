{
  "swagger": "2.0",
  "info": {
    "version": "2016-11-01",
    "x-ms-code-generation-settings": {
      "internalConstructors": true
    },
    "title": "DataLakeAnalyticsAccountManagementClient",
    "description": "Creates an Azure Data Lake Analytics account management client."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/firewallRules/{firewallRuleName}": {
      "patch": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Update",
        "description": "Updates the specified firewall rule.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AccountNameParameter"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the firewall rule to update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateFirewallRuleParameters"
            },
            "description": "Parameters supplied to update the firewall rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the specified firewall rule",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        },
        "x-ms-examples": {
          "Updates the specified firewall rule": {
            "parameters": {
              "api-version": "2016-11-01",
              "subscriptionId": "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345",
              "resourceGroupName": "contosorg",
              "accountName": "contosoadla",
              "firewallRuleName": "test_rule",
              "parameters": {
                "properties": {
                  "startIpAddress": "1.1.1.1",
                  "endIpAddress": "2.2.2.2"
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345",
                  "name": "test_rule",
                  "type": "test_type",
                  "properties": {
                    "startIpAddress": "1.1.1.1",
                    "endIpAddress": "2.2.2.2"
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Update"
      }
    }
  },
  "definitions": {
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifer."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        }
      },
      "x-ms-azure-resource": true,
      "description": "The resource model definition."
    },
    "SubResource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        }
      },
      "x-ms-azure-resource": true,
      "description": "The resource model definition for a nested resource."
    },
    "DataLakeAnalyticsAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DataLakeAnalyticsAccountProperties",
          "description": "The properties defined by Data Lake Analytics all properties are specific to each resource provider."
        }
      },
      "description": "A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account."
    },
    "DataLakeAnalyticsAccountBasic": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DataLakeAnalyticsAccountPropertiesBasic",
          "description": "The properties defined by Data Lake Analytics all properties are specific to each resource provider."
        }
      },
      "description": "A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account."
    },
    "DataLakeAnalyticsAccountProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/DataLakeAnalyticsAccountPropertiesBasic"
        }
      ],
      "properties": {
        "defaultDataLakeStoreAccount": {
          "readOnly": true,
          "type": "string",
          "description": "The default Data Lake Store account associated with this account."
        },
        "dataLakeStoreAccounts": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeStoreAccountInformation"
          },
          "description": "The list of Data Lake Store accounts associated with this account."
        },
        "storageAccounts": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountInformation"
          },
          "description": "The list of Azure Blob Storage accounts associated with this account."
        },
        "computePolicies": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputePolicy"
          },
          "description": "The list of compute policies associated with this account."
        },
        "firewallRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "The list of firewall rules associated with this account."
        },
        "firewallState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallState",
            "modelAsString": false
          },
          "description": "The current state of the IP address firewall for this account."
        },
        "firewallAllowAzureIps": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallAllowAzureIpsState",
            "modelAsString": false
          },
          "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
        },
        "newTier": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_100AUHours",
            "Commitment_500AUHours",
            "Commitment_1000AUHours",
            "Commitment_5000AUHours",
            "Commitment_10000AUHours",
            "Commitment_50000AUHours",
            "Commitment_100000AUHours",
            "Commitment_500000AUHours"
          ],
          "x-ms-enum": {
            "name": "TierType",
            "modelAsString": false
          },
          "description": "The commitment tier for the next month."
        },
        "currentTier": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_100AUHours",
            "Commitment_500AUHours",
            "Commitment_1000AUHours",
            "Commitment_5000AUHours",
            "Commitment_10000AUHours",
            "Commitment_50000AUHours",
            "Commitment_100000AUHours",
            "Commitment_500000AUHours"
          ],
          "x-ms-enum": {
            "name": "TierType",
            "modelAsString": false
          },
          "description": "The commitment tier in use for the current month."
        },
        "maxJobCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 3,
          "description": "The maximum supported jobs running under the account at the same time."
        },
        "systemMaxJobCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number of running jobs the user can set for the account."
        },
        "maxDegreeOfParallelism": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 30,
          "description": "The maximum supported degree of parallelism for this account."
        },
        "systemMaxDegreeOfParallelism": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism the user can set for the account."
        },
        "maxDegreeOfParallelismPerJob": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The maximum supported degree of parallelism per job for this account."
        },
        "minPriorityPerJob": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The minimum supported priority per job for this account."
        },
        "queryStoreRetention": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 180,
          "default": 30,
          "description": "The number of days that job metadata is retained."
        }
      },
      "description": "The account specific properties that are associated with an underlying Data Lake Analytics account. Returned only when retrieving a specific account."
    },
    "DataLakeAnalyticsAccountPropertiesBasic": {
      "properties": {
        "accountId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "The unique identifier associated with this Data Lake Analytics account."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Failed",
            "Creating",
            "Running",
            "Succeeded",
            "Patching",
            "Suspending",
            "Resuming",
            "Deleting",
            "Deleted",
            "Undeleting",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "DataLakeAnalyticsAccountStatus",
            "modelAsString": false
          },
          "description": "The provisioning status of the Data Lake Analytics account."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Active",
            "Suspended"
          ],
          "x-ms-enum": {
            "name": "DataLakeAnalyticsAccountState",
            "modelAsString": false
          },
          "description": "The state of the Data Lake Analytics account."
        },
        "creationTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The account creation time."
        },
        "lastModifiedTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The account last modified time."
        },
        "endpoint": {
          "readOnly": true,
          "type": "string",
          "description": "The full CName endpoint for this account."
        }
      },
      "description": "The basic account specific properties that are associated with an underlying Data Lake Analytics account."
    },
    "DataLakeAnalyticsAccountListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeAnalyticsAccountBasic"
          },
          "description": "The results of the list operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "Data Lake Analytics account list information."
    },
    "DataLakeStoreAccountInformation": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DataLakeStoreAccountInformationProperties",
          "description": "The Data Lake Store account properties."
        }
      },
      "description": "Data Lake Store account information."
    },
    "DataLakeStoreAccountInformationProperties": {
      "properties": {
        "suffix": {
          "readOnly": true,
          "type": "string",
          "description": "The optional suffix for the Data Lake Store account."
        }
      },
      "description": "The Data Lake Store account properties."
    },
    "DataLakeStoreAccountInformationListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeStoreAccountInformation"
          },
          "description": "The results of the list operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "Data Lake Store account list information."
    },
    "StorageAccountInformation": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/StorageAccountInformationProperties",
          "description": "The Azure Storage account properties."
        }
      },
      "description": "Azure Storage account information."
    },
    "StorageAccountInformationProperties": {
      "properties": {
        "suffix": {
          "readOnly": true,
          "type": "string",
          "description": "The optional suffix for the storage account."
        }
      },
      "description": "The Azure Storage account properties."
    },
    "StorageAccountInformationListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountInformation"
          },
          "description": "The results of the list operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "Azure Storage account list information."
    },
    "StorageContainer": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/StorageContainerProperties",
          "description": "The properties of the blob container."
        }
      },
      "description": "Azure Storage blob container information."
    },
    "StorageContainerProperties": {
      "properties": {
        "lastModifiedTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The last modified time of the blob container."
        }
      },
      "description": "Azure Storage blob container properties information."
    },
    "StorageContainerListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageContainer"
          },
          "description": "The results of the list operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "The list of blob containers associated with the storage account attached to the Data Lake Analytics account."
    },
    "SasTokenInformation": {
      "properties": {
        "accessToken": {
          "readOnly": true,
          "type": "string",
          "description": "The access token for the associated Azure Storage Container."
        }
      },
      "description": "SAS token information."
    },
    "SasTokenInformationListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SasTokenInformation"
          },
          "description": "The results of the list operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "The SAS response that contains the storage account, container and associated SAS token for connection use."
    },
    "ComputePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ComputePolicyProperties",
          "description": "The compute policy properties."
        }
      },
      "description": "Data Lake Analytics compute policy information."
    },
    "ComputePolicyProperties": {
      "properties": {
        "objectId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "The AAD object identifier for the entity to create a policy for."
        },
        "objectType": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "AADObjectType",
            "modelAsString": true
          },
          "description": "The type of AAD object the object identifier refers to."
        },
        "maxDegreeOfParallelismPerJob": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The maximum degree of parallelism per job this user can use to submit jobs."
        },
        "minPriorityPerJob": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The minimum priority per job this user can use to submit jobs."
        }
      },
      "description": "The compute policy properties."
    },
    "ComputePolicyListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputePolicy"
          },
          "description": "The results of the list operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "The list of compute policies in the account."
    },
    "FirewallRule": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FirewallRuleProperties",
          "description": "The firewall rule properties."
        }
      },
      "description": "Data Lake Analytics firewall rule information."
    },
    "FirewallRuleProperties": {
      "properties": {
        "startIpAddress": {
          "readOnly": true,
          "type": "string",
          "description": "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        },
        "endIpAddress": {
          "readOnly": true,
          "type": "string",
          "description": "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        }
      },
      "description": "The firewall rule properties."
    },
    "FirewallRuleListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "The results of the list operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "Data Lake Analytics firewall rule list information."
    },
    "Operation": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the operation."
        },
        "display": {
          "readOnly": true,
          "$ref": "#/definitions/OperationDisplay",
          "description": "The display information for the operation."
        },
        "origin": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "OperationOrigin",
            "modelAsString": true
          },
          "description": "The intended executor of the operation."
        }
      },
      "description": "An available operation for Data Lake Analytics."
    },
    "OperationDisplay": {
      "properties": {
        "provider": {
          "readOnly": true,
          "type": "string",
          "description": "The resource provider of the operation."
        },
        "resource": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type of the operation."
        },
        "operation": {
          "readOnly": true,
          "type": "string",
          "description": "A friendly name of the operation."
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "A friendly description of the operation."
        }
      },
      "description": "The display information for a particular operation."
    },
    "OperationListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "The results of the list operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "The list of available operations for Data Lake Analytics."
    },
    "CapabilityInformation": {
      "properties": {
        "subscriptionId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "The subscription credentials that uniquely identifies the subscription."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Registered",
            "Suspended",
            "Deleted",
            "Unregistered",
            "Warned"
          ],
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": true
          },
          "description": "The subscription state."
        },
        "maxAccountCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The maximum supported number of accounts under this subscription."
        },
        "accountCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The current number of accounts under this subscription."
        },
        "migrationState": {
          "readOnly": true,
          "type": "boolean",
          "description": "The Boolean value of true or false to indicate the maintenance state."
        }
      },
      "description": "Subscription-level properties and limits for Data Lake Analytics."
    },
    "NameAvailabilityInformation": {
      "properties": {
        "nameAvailable": {
          "readOnly": true,
          "type": "boolean",
          "description": "The Boolean value of true or false to indicate whether the Data Lake Analytics account name is available or not."
        },
        "reason": {
          "readOnly": true,
          "type": "string",
          "description": "The reason why the Data Lake Analytics account name is not available, if nameAvailable is false."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The message describing why the Data Lake Analytics account name is not available, if nameAvailable is false."
        }
      },
      "description": "Data Lake Analytics account name availability result information."
    },
    "CreateDataLakeAnalyticsAccountParameters": {
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateDataLakeAnalyticsAccountProperties",
          "description": "The Data Lake Analytics account properties to use for creating."
        }
      },
      "description": "The parameters to use for creating a Data Lake Analytics account."
    },
    "CreateDataLakeAnalyticsAccountProperties": {
      "required": [
        "defaultDataLakeStoreAccount",
        "dataLakeStoreAccounts"
      ],
      "properties": {
        "defaultDataLakeStoreAccount": {
          "type": "string",
          "description": "The default Data Lake Store account associated with this account."
        },
        "dataLakeStoreAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddDataLakeStoreWithAccountParameters"
          },
          "description": "The list of Data Lake Store accounts associated with this account."
        },
        "storageAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddStorageAccountWithAccountParameters"
          },
          "description": "The list of Azure Blob Storage accounts associated with this account."
        },
        "computePolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateComputePolicyWithAccountParameters"
          },
          "description": "The list of compute policies associated with this account."
        },
        "firewallRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateFirewallRuleWithAccountParameters"
          },
          "description": "The list of firewall rules associated with this account."
        },
        "firewallState": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallState",
            "modelAsString": false
          },
          "description": "The current state of the IP address firewall for this account."
        },
        "firewallAllowAzureIps": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallAllowAzureIpsState",
            "modelAsString": false
          },
          "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
        },
        "newTier": {
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_100AUHours",
            "Commitment_500AUHours",
            "Commitment_1000AUHours",
            "Commitment_5000AUHours",
            "Commitment_10000AUHours",
            "Commitment_50000AUHours",
            "Commitment_100000AUHours",
            "Commitment_500000AUHours"
          ],
          "x-ms-enum": {
            "name": "TierType",
            "modelAsString": false
          },
          "description": "The commitment tier for the next month."
        },
        "maxJobCount": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 3,
          "description": "The maximum supported jobs running under the account at the same time."
        },
        "maxDegreeOfParallelism": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 30,
          "description": "The maximum supported degree of parallelism for this account."
        },
        "maxDegreeOfParallelismPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The maximum supported degree of parallelism per job for this account."
        },
        "minPriorityPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The minimum supported priority per job for this account."
        },
        "queryStoreRetention": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 180,
          "default": 30,
          "description": "The number of days that job metadata is retained."
        }
      }
    },
    "UpdateDataLakeAnalyticsAccountParameters": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateDataLakeAnalyticsAccountProperties",
          "description": "The properties that can be updated in an existing Data Lake Analytics account."
        }
      },
      "description": "The parameters that can be used to update an existing Data Lake Analytics account."
    },
    "UpdateDataLakeAnalyticsAccountProperties": {
      "properties": {
        "dataLakeStoreAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateDataLakeStoreWithAccountParameters"
          },
          "description": "The list of Data Lake Store accounts associated with this account."
        },
        "storageAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateStorageAccountWithAccountParameters"
          },
          "description": "The list of Azure Blob storage accounts associated with this account."
        },
        "computePolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateComputePolicyWithAccountParameters"
          },
          "description": "The list of compute policies associated with this account."
        },
        "firewallRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateFirewallRuleWithAccountParameters"
          },
          "description": "The list of firewall rules associated with this account."
        },
        "firewallState": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallState",
            "modelAsString": false
          },
          "description": "The current state of the IP address firewall for this account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled."
        },
        "firewallAllowAzureIps": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallAllowAzureIpsState",
            "modelAsString": false
          },
          "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
        },
        "newTier": {
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_100AUHours",
            "Commitment_500AUHours",
            "Commitment_1000AUHours",
            "Commitment_5000AUHours",
            "Commitment_10000AUHours",
            "Commitment_50000AUHours",
            "Commitment_100000AUHours",
            "Commitment_500000AUHours"
          ],
          "x-ms-enum": {
            "name": "TierType",
            "modelAsString": false
          },
          "description": "The commitment tier to use for next month."
        },
        "maxJobCount": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The maximum supported jobs running under the account at the same time."
        },
        "maxDegreeOfParallelism": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The maximum supported degree of parallelism for this account."
        },
        "maxDegreeOfParallelismPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The maximum supported degree of parallelism per job for this account."
        },
        "minPriorityPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The minimum supported priority per job for this account."
        },
        "queryStoreRetention": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 180,
          "description": "The number of days that job metadata is retained."
        }
      },
      "description": "The properties to update that are associated with an underlying Data Lake Analytics account."
    },
    "AddDataLakeStoreParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AddDataLakeStoreProperties",
          "description": "The Data Lake Store account properties to use when adding a new Data Lake Store account."
        }
      },
      "description": "The parameters used to add a new Data Lake Store account."
    },
    "AddDataLakeStoreWithAccountParameters": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the Data Lake Store account to add."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AddDataLakeStoreProperties",
          "description": "The Data Lake Store account properties to use when adding a new Data Lake Store account."
        }
      },
      "description": "The parameters used to add a new Data Lake Store account while creating a new Data Lake Analytics account."
    },
    "AddDataLakeStoreProperties": {
      "properties": {
        "suffix": {
          "type": "string",
          "description": "The optional suffix for the Data Lake Store account."
        }
      },
      "description": "The Data Lake Store account properties to use when adding a new Data Lake Store account."
    },
    "UpdateDataLakeStoreWithAccountParameters": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the Data Lake Store account to update."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateDataLakeStoreProperties",
          "description": "The Data Lake Store account properties to use when updating a Data Lake Store account."
        }
      },
      "description": "The parameters used to update a Data Lake Store account while updating a Data Lake Analytics account."
    },
    "UpdateDataLakeStoreProperties": {
      "properties": {
        "suffix": {
          "type": "string",
          "description": "The optional suffix for the Data Lake Store account."
        }
      },
      "description": "The Data Lake Store account properties to use when updating a Data Lake Store account."
    },
    "AddStorageAccountParameters": {
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AddStorageAccountProperties",
          "description": "The Azure Storage account properties to use when adding a new Azure Storage account."
        }
      },
      "description": "The parameters used to add a new Azure Storage account."
    },
    "AddStorageAccountWithAccountParameters": {
      "required": [
        "name",
        "properties"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the Azure Storage account to add."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AddStorageAccountProperties",
          "description": "The Azure Storage account properties to use when adding a new Azure Storage account."
        }
      },
      "description": "The parameters used to add a new Azure Storage account while creating a new Data Lake Analytics account."
    },
    "AddStorageAccountProperties": {
      "required": [
        "accessKey"
      ],
      "properties": {
        "accessKey": {
          "type": "string",
          "description": "The access key associated with this Azure Storage account that will be used to connect to it."
        },
        "suffix": {
          "type": "string",
          "description": "The optional suffix for the storage account."
        }
      },
      "description": "The Azure Storage account properties to use when adding a new Azure Storage account."
    },
    "UpdateStorageAccountParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateStorageAccountProperties",
          "description": "The Azure Storage account properties to use when updating an Azure Storage account."
        }
      },
      "description": "The parameters used to update an Azure Storage account."
    },
    "UpdateStorageAccountWithAccountParameters": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the Azure Storage account to update."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateStorageAccountProperties",
          "description": "The Azure Storage account properties to use when updating an Azure Storage account."
        }
      },
      "description": "The parameters used to update an Azure Storage account while updating a Data Lake Analytics account."
    },
    "UpdateStorageAccountProperties": {
      "properties": {
        "accessKey": {
          "type": "string",
          "description": "The updated access key associated with this Azure Storage account that will be used to connect to it."
        },
        "suffix": {
          "type": "string",
          "description": "The optional suffix for the storage account."
        }
      },
      "description": "The Azure Storage account properties to use when updating an Azure Storage account."
    },
    "CreateOrUpdateComputePolicyParameters": {
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateOrUpdateComputePolicyProperties",
          "description": "The compute policy properties to use when creating a new compute policy."
        }
      },
      "description": "The parameters used to create a new compute policy."
    },
    "CreateComputePolicyWithAccountParameters": {
      "required": [
        "name",
        "properties"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the compute policy to create."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateOrUpdateComputePolicyProperties",
          "description": "The compute policy properties to use when creating a new compute policy."
        }
      },
      "description": "The parameters used to create a new compute policy while creating a new Data Lake Analytics account."
    },
    "CreateOrUpdateComputePolicyProperties": {
      "required": [
        "objectId",
        "objectType"
      ],
      "properties": {
        "objectId": {
          "type": "string",
          "format": "uuid",
          "description": "The AAD object identifier for the entity to create a policy for."
        },
        "objectType": {
          "type": "string",
          "enum": [
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "AADObjectType",
            "modelAsString": true
          },
          "description": "The type of AAD object the object identifier refers to."
        },
        "maxDegreeOfParallelismPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed."
        },
        "minPriorityPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed."
        }
      },
      "description": "The compute policy properties to use when creating a new compute policy."
    },
    "UpdateComputePolicyParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateComputePolicyProperties",
          "description": "The compute policy properties to use when updating a compute policy."
        }
      },
      "description": "The parameters used to update a compute policy."
    },
    "UpdateComputePolicyWithAccountParameters": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the compute policy to update."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateComputePolicyProperties",
          "description": "The compute policy properties to use when updating a compute policy."
        }
      },
      "description": "The parameters used to update a compute policy while updating a Data Lake Analytics account."
    },
    "UpdateComputePolicyProperties": {
      "properties": {
        "objectId": {
          "type": "string",
          "format": "uuid",
          "description": "The AAD object identifier for the entity to create a policy for."
        },
        "objectType": {
          "type": "string",
          "enum": [
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "AADObjectType",
            "modelAsString": true
          },
          "description": "The type of AAD object the object identifier refers to."
        },
        "maxDegreeOfParallelismPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed."
        },
        "minPriorityPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed."
        }
      },
      "description": "The compute policy properties to use when updating a compute policy."
    },
    "CreateOrUpdateFirewallRuleParameters": {
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateOrUpdateFirewallRuleProperties",
          "description": "The firewall rule properties to use when creating a new firewall rule."
        }
      },
      "description": "The parameters used to create a new firewall rule."
    },
    "CreateFirewallRuleWithAccountParameters": {
      "required": [
        "name",
        "properties"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the firewall rule to create."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateOrUpdateFirewallRuleProperties",
          "description": "The firewall rule properties to use when creating a new firewall rule."
        }
      },
      "description": "The parameters used to create a new firewall rule while creating a new Data Lake Analytics account."
    },
    "CreateOrUpdateFirewallRuleProperties": {
      "required": [
        "startIpAddress",
        "endIpAddress"
      ],
      "properties": {
        "startIpAddress": {
          "type": "string",
          "description": "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        },
        "endIpAddress": {
          "type": "string",
          "description": "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        }
      },
      "description": "The firewall rule properties to use when creating a new firewall rule."
    },
    "UpdateFirewallRuleParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateFirewallRuleProperties",
          "description": "The firewall rule properties to use when updating a firewall rule."
        }
      },
      "description": "The parameters used to update a firewall rule."
    },
    "UpdateFirewallRuleWithAccountParameters": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the firewall rule to update."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateFirewallRuleProperties",
          "description": "The firewall rule properties to use when updating a firewall rule."
        }
      },
      "description": "The parameters used to update a firewall rule while updating a Data Lake Analytics account."
    },
    "UpdateFirewallRuleProperties": {
      "properties": {
        "startIpAddress": {
          "type": "string",
          "description": "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        },
        "endIpAddress": {
          "type": "string",
          "description": "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        }
      },
      "description": "The firewall rule properties to use when updating a firewall rule."
    },
    "CheckNameAvailabilityParameters": {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The Data Lake Analytics name to check availability for."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataLakeAnalytics/accounts"
          ],
          "description": "The resource type. Note: This should not be set by the user, as the constant value is Microsoft.DataLakeAnalytics/accounts"
        }
      },
      "description": "Data Lake Analytics account name availability check parameters."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the Azure resource group."
    },
    "AccountNameParameter": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the Data Lake Analytics account."
    }
  },
  "x-internal-service-id": "datalakeanalytics",
  "x-internal-service-name": "Data Lake Analytics",
  "x-internal-toc-name": "Firewall Rules",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "Update",
  "x-internal-operation-name": "Update"
}