### YamlMime:RESTOperation
uid: management.azure.com.authorization.rolemanagementpolicyassignments.create
name: Create
service: Authorization
groupName: Role Management Policy Assignments
apiVersion: 2020-10-01
summary: Create a role management policy assignment
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}?api-version=2020-10-01
uriParameters:
- name: scope
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: The scope of the role management policy assignment to upsert.
  types:
  - uid: string
- name: roleManagementPolicyAssignmentName
  in: path
  isRequired: true
  description: The name of format {guid_guid} the role management policy assignment to upsert.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 201 Created
  description: Created - Returns the created or updated policy assignment.
  types:
  - uid: RoleManagementPolicyAssignment
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: properties.scope
    in: body
    description: The role management policy scope.
    types:
    - uid: string
  - name: properties.roleDefinitionId
    in: body
    description: The role definition of management policy assignment.
    types:
    - uid: string
  - name: properties.policyId
    in: body
    description: The policy id role management policy assignment.
    types:
    - uid: string
requestHeader: []
definitions:
- name: PolicyAssignmentProperties
  description: Expanded info of resource scope, role definition and policy
  kind: object
  properties:
  - name: scope
    description: Details of the resource scope
    types:
    - uid: Scope
  - name: roleDefinition
    description: Details of role definition
    types:
    - uid: RoleDefinition
  - name: policy
    description: Details of the policy
    types:
    - uid: Policy
- name: RoleManagementPolicyAssignment
  description: Role management policy
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The role management policy Id.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The role management policy name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The role management policy type.
    types:
    - uid: string
  - name: properties.scope
    description: The role management policy scope.
    types:
    - uid: string
  - name: properties.roleDefinitionId
    description: The role definition of management policy assignment.
    types:
    - uid: string
  - name: properties.policyId
    description: The policy id role management policy assignment.
    types:
    - uid: string
  - name: properties.effectiveRules
    isReadyOnly: true
    description: The readonly computed rule applied to the policy.
    types:
    - uid: RoleManagementPolicyRule
      isArray: true
  - name: properties.policyAssignmentProperties
    isReadyOnly: true
    description: Additional properties of scope, role definition and policy
    types:
    - uid: PolicyAssignmentProperties
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: An error response from the service.
    types:
    - uid: CloudErrorBody
- name: Scope
  description: Details of the resource scope
  kind: object
  properties:
  - name: id
    description: Scope id of the resource
    types:
    - uid: string
  - name: displayName
    description: Display name of the resource
    types:
    - uid: string
  - name: type
    description: Type of the resource
    types:
    - uid: string
- name: RoleDefinition
  description: Details of role definition
  kind: object
  properties:
  - name: id
    description: Id of the role definition
    types:
    - uid: string
  - name: displayName
    description: Display name of the role definition
    types:
    - uid: string
  - name: type
    description: Type of the role definition
    types:
    - uid: string
- name: Policy
  description: Details of the policy
  kind: object
  properties:
  - name: id
    description: Id of the policy
    types:
    - uid: string
  - name: lastModifiedBy
    isReadyOnly: true
    description: The name of the entity last modified it
    types:
    - uid: Principal
  - name: lastModifiedDateTime
    description: The last modified date time.
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
- name: Principal
  description: The name of the entity last modified it
  kind: object
  properties:
  - name: id
    description: The id of the principal made changes
    types:
    - uid: string
  - name: displayName
    description: The name of the principal made changes
    types:
    - uid: string
  - name: type
    description: Type of principal such as user , group etc
    types:
    - uid: string
  - name: email
    description: Email of principal
    types:
    - uid: string
examples:
- name: PutRoleManagementPolicyAssignment
  request:
    uri: PUT https://management.azure.com/providers/Microsoft.Subscription/subscriptions/129ff972-28f8-46b8-a726-e497be039368/providers/Microsoft.Authorization/roleManagementPolicyAssignments/b959d571-f0b5-4042-88a7-01be6cb22db9_a1705bd2-3a8f-45a5-8683-466fcfd5cc24?api-version=2020-10-01
    body: >-
      {
        "properties": {
          "scope": "/subscriptions/129ff972-28f8-46b8-a726-e497be039368",
          "roleDefinitionId": "/subscriptions/129ff972-28f8-46b8-a726-e497be039368/providers/Microsoft.Authorization/roleDefinitions/a1705bd2-3a8f-45a5-8683-466fcfd5cc24",
          "policyId": "/subscriptions/129ff972-28f8-46b8-a726-e497be039368/providers/Microsoft.Authorization/roleManagementPolicies/b959d571-f0b5-4042-88a7-01be6cb22db9"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/providers/Microsoft.Subscription/subscriptions/129ff972-28f8-46b8-a726-e497be039368/providers/Microsoft.Authorization/roleManagementPolicyAssignments/b959d571-f0b5-4042-88a7-01be6cb22db9_a1705bd2-3a8f-45a5-8683-466fcfd5cc24?api-version=2020-10-01

      {
        "properties": {
          "scope": "/subscriptions/129ff972-28f8-46b8-a726-e497be039368",
          "roleDefinitionId": "/subscriptions/129ff972-28f8-46b8-a726-e497be039368/providers/Microsoft.Authorization/roleDefinitions/a1705bd2-3a8f-45a5-8683-466fcfd5cc24",
          "policyId": "/subscriptions/129ff972-28f8-46b8-a726-e497be039368/providers/Microsoft.Authorization/roleManagementPolicies/b959d571-f0b5-4042-88a7-01be6cb22db9"
        }
      }

      ```

  responses:
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "scope": "/subscriptions/129ff972-28f8-46b8-a726-e497be039368",
          "roleDefinitionId": "/subscriptions/129ff972-28f8-46b8-a726-e497be039368/providers/Microsoft.Authorization/roleDefinitions/a1705bd2-3a8f-45a5-8683-466fcfd5cc24",
          "policyId": "/subscriptions/129ff972-28f8-46b8-a726-e497be039368/providers/Microsoft.Authorization/roleManagementPolicies/b959d571-f0b5-4042-88a7-01be6cb22db9",
          "effectiveRules": [
            {
              "enabledRules": [],
              "id": "Enablement_Admin_Eligibility",
              "ruleType": "RoleManagementPolicyEnablementRule",
              "target": {
                "caller": "Admin",
                "operations": [
                  "All"
                ],
                "level": "Eligibility",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "isExpirationRequired": true,
              "maximumDuration": "P90D",
              "id": "Expiration_Admin_Eligibility",
              "ruleType": "RoleManagementPolicyExpirationRule",
              "target": {
                "caller": "Admin",
                "operations": [
                  "All"
                ],
                "level": "Eligibility",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "notificationType": "Email",
              "recipientType": "Admin",
              "isDefaultRecipientsEnabled": false,
              "notificationLevel": "Critical",
              "notificationRecipients": [
                "admin_admin_eligible@test.com"
              ],
              "id": "Notification_Admin_Admin_Eligibility",
              "ruleType": "RoleManagementPolicyNotificationRule",
              "target": {
                "caller": "Admin",
                "operations": [
                  "All"
                ],
                "level": "Eligibility",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "notificationType": "Email",
              "recipientType": "Requestor",
              "isDefaultRecipientsEnabled": false,
              "notificationLevel": "Critical",
              "notificationRecipients": [
                "requestor_admin_eligible@test.com"
              ],
              "id": "Notification_Requestor_Admin_Eligibility",
              "ruleType": "RoleManagementPolicyNotificationRule",
              "target": {
                "caller": "Admin",
                "operations": [
                  "All"
                ],
                "level": "Eligibility",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "notificationType": "Email",
              "recipientType": "Approver",
              "isDefaultRecipientsEnabled": false,
              "notificationLevel": "Critical",
              "notificationRecipients": [
                "approver_admin_eligible@test.com"
              ],
              "id": "Notification_Approver_Admin_Eligibility",
              "ruleType": "RoleManagementPolicyNotificationRule",
              "target": {
                "caller": "Admin",
                "operations": [
                  "All"
                ],
                "level": "Eligibility",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "enabledRules": [
                "MultiFactorAuthentication",
                "Justification"
              ],
              "id": "Enablement_Admin_Assignment",
              "ruleType": "RoleManagementPolicyEnablementRule",
              "target": {
                "caller": "Admin",
                "operations": [
                  "All"
                ],
                "level": "Assignment",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "isExpirationRequired": false,
              "maximumDuration": "P90D",
              "id": "Expiration_Admin_Assignment",
              "ruleType": "RoleManagementPolicyExpirationRule",
              "target": {
                "caller": "Admin",
                "operations": [
                  "All"
                ],
                "level": "Assignment",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "notificationType": "Email",
              "recipientType": "Admin",
              "isDefaultRecipientsEnabled": false,
              "notificationLevel": "Critical",
              "notificationRecipients": [
                "admin_admin_member@test.com"
              ],
              "id": "Notification_Admin_Admin_Assignment",
              "ruleType": "RoleManagementPolicyNotificationRule",
              "target": {
                "caller": "Admin",
                "operations": [
                  "All"
                ],
                "level": "Assignment",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "notificationType": "Email",
              "recipientType": "Requestor",
              "isDefaultRecipientsEnabled": false,
              "notificationLevel": "Critical",
              "notificationRecipients": [
                "requestor_admin_member@test.com"
              ],
              "id": "Notification_Requestor_Admin_Assignment",
              "ruleType": "RoleManagementPolicyNotificationRule",
              "target": {
                "caller": "Admin",
                "operations": [
                  "All"
                ],
                "level": "Assignment",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "notificationType": "Email",
              "recipientType": "Approver",
              "isDefaultRecipientsEnabled": false,
              "notificationLevel": "Critical",
              "notificationRecipients": [
                "approver_admin_member@test.com"
              ],
              "id": "Notification_Approver_Admin_Assignment",
              "ruleType": "RoleManagementPolicyNotificationRule",
              "target": {
                "caller": "Admin",
                "operations": [
                  "All"
                ],
                "level": "Assignment",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "setting": {
                "isApprovalRequired": true,
                "isApprovalRequiredForExtension": false,
                "isRequestorJustificationRequired": true,
                "approvalMode": "SingleStage",
                "approvalStages": [
                  {
                    "approvalStageTimeOutInDays": 1,
                    "isApproverJustificationRequired": true,
                    "escalationTimeInMinutes": 0,
                    "primaryApprovers": [
                      {
                        "id": "2385b0f3-5fa9-43cf-8ca4-b01dc97298cd",
                        "description": "amansw_new_group",
                        "isBackup": false,
                        "userType": "Group"
                      },
                      {
                        "id": "2f4913c9-d15b-406a-9946-1d66a28f2690",
                        "description": "amansw_group",
                        "isBackup": false,
                        "userType": "Group"
                      }
                    ],
                    "isEscalationEnabled": false,
                    "escalationApprovers": null
                  }
                ]
              },
              "id": "Approval_EndUser_Assignment",
              "ruleType": "RoleManagementPolicyApprovalRule",
              "target": {
                "caller": "EndUser",
                "operations": [
                  "All"
                ],
                "level": "Assignment",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "isEnabled": false,
              "claimValue": "",
              "id": "AuthenticationContext_EndUser_Assignment",
              "ruleType": "RoleManagementPolicyAuthenticationContextRule",
              "target": {
                "caller": "EndUser",
                "operations": [
                  "All"
                ],
                "level": "Assignment",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "enabledRules": [
                "MultiFactorAuthentication",
                "Justification",
                "Ticketing"
              ],
              "id": "Enablement_EndUser_Assignment",
              "ruleType": "RoleManagementPolicyEnablementRule",
              "target": {
                "caller": "EndUser",
                "operations": [
                  "All"
                ],
                "level": "Assignment",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "isExpirationRequired": true,
              "maximumDuration": "PT7H",
              "id": "Expiration_EndUser_Assignment",
              "ruleType": "RoleManagementPolicyExpirationRule",
              "target": {
                "caller": "EndUser",
                "operations": [
                  "All"
                ],
                "level": "Assignment",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "notificationType": "Email",
              "recipientType": "Admin",
              "isDefaultRecipientsEnabled": false,
              "notificationLevel": "Critical",
              "notificationRecipients": [
                "admin_enduser_member@test.com"
              ],
              "id": "Notification_Admin_EndUser_Assignment",
              "ruleType": "RoleManagementPolicyNotificationRule",
              "target": {
                "caller": "EndUser",
                "operations": [
                  "All"
                ],
                "level": "Assignment",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "notificationType": "Email",
              "recipientType": "Requestor",
              "isDefaultRecipientsEnabled": false,
              "notificationLevel": "Critical",
              "notificationRecipients": [
                "requestor_enduser_member@test.com"
              ],
              "id": "Notification_Requestor_EndUser_Assignment",
              "ruleType": "RoleManagementPolicyNotificationRule",
              "target": {
                "caller": "EndUser",
                "operations": [
                  "All"
                ],
                "level": "Assignment",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            },
            {
              "notificationType": "Email",
              "recipientType": "Approver",
              "isDefaultRecipientsEnabled": true,
              "notificationLevel": "Critical",
              "notificationRecipients": null,
              "id": "Notification_Approver_EndUser_Assignment",
              "ruleType": "RoleManagementPolicyNotificationRule",
              "target": {
                "caller": "EndUser",
                "operations": [
                  "All"
                ],
                "level": "Assignment",
                "targetObjects": null,
                "inheritableSettings": null,
                "enforcedSettings": null
              }
            }
          ],
          "policyAssignmentProperties": {
            "scope": {
              "id": "/subscriptions/129ff972-28f8-46b8-a726-e497be039368",
              "displayName": "Pay-As-You-Go",
              "type": "subscription"
            },
            "roleDefinition": {
              "id": "/subscriptions/129ff972-28f8-46b8-a726-e497be039368/providers/Microsoft.Authorization/roleDefinitions/a1705bd2-3a8f-45a5-8683-466fcfd5cc24",
              "displayName": "FHIR Data Converter",
              "type": "BuiltInRole"
            },
            "policy": {
              "id": "/subscriptions/129ff972-28f8-46b8-a726-e497be039368/providers/Microsoft.Authorization/roleManagementPolicies/b959d571-f0b5-4042-88a7-01be6cb22db9",
              "lastModifiedBy": null,
              "lastModifiedDateTime": null
            }
          }
        },
        "name": "b959d571-f0b5-4042-88a7-01be6cb22db9_a1705bd2-3a8f-45a5-8683-466fcfd5cc24",
        "id": "/subscriptions/129ff972-28f8-46b8-a726-e497be039368/providers/Microsoft.Authorization/roleManagementPolicyAssignment/b959d571-f0b5-4042-88a7-01be6cb22db9_a1705bd2-3a8f-45a5-8683-466fcfd5cc24",
        "type": "Microsoft.Authorization/RoleManagementPolicyAssignment"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Authorization service - Create a role management policy assignment
errorCodes: []
