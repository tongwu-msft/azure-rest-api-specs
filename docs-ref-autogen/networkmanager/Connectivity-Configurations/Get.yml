### YamlMime:RESTOperation
uid: management.azure.com.networkmanager.connectivityconfigurations.get
name: Get
service: Network Manager
groupName: Connectivity Configurations
apiVersion: 2022-01-01
summary: Gets a Network Connectivity Configuration, specified by the resource group, network manager name, and connectivity Configuration name
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/connectivityConfigurations/{configurationName}?api-version=2022-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: networkManagerName
  in: path
  isRequired: true
  description: The name of the network manager.
  types:
  - uid: string
- name: configurationName
  in: path
  isRequired: true
  description: The name of the network manager connectivity configuration.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Get successful. The operation returns the specified Managed Network Connectivity Configuration resource.
  types:
  - uid: ConnectivityConfiguration
- name: Other Status Codes
  description: Resource Provider error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: ConnectivityConfiguration
  description: The network manager connectivity configuration resource
  kind: object
  properties:
  - name: systemData
    isReadyOnly: true
    description: The system metadata related to this resource.
    types:
    - uid: SystemData
  - name: properties.description
    description: A description of the connectivity configuration.
    types:
    - uid: string
  - name: properties.connectivityTopology
    description: Connectivity topology type.
    types:
    - uid: ConnectivityTopology
  - name: properties.hubs
    description: List of hubItems
    types:
    - uid: Hub
      isArray: true
  - name: properties.isGlobal
    description: Flag if global mesh is supported.
    types:
    - uid: IsGlobal
  - name: properties.appliesToGroups
    description: Groups for configuration
    types:
    - uid: connectivityGroupItem
      isArray: true
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the connectivity configuration resource.
    types:
    - uid: ProvisioningState
  - name: properties.deleteExistingPeering
    description: Flag if need to remove current existing peerings.
    types:
    - uid: DeleteExistingPeering
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: SystemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The type of identity that last modified the resource.
    types:
    - uid: string
- name: ConnectivityTopology
  description: Connectivity topology type.
  kind: enum
  properties:
  - name: HubAndSpoke
    types:
    - uid: string
  - name: Mesh
    types:
    - uid: string
- name: Hub
  description: Hub Item.
  kind: object
  properties:
  - name: resourceId
    description: Resource Id.
    types:
    - uid: string
  - name: resourceType
    description: Resource Type.
    types:
    - uid: string
- name: IsGlobal
  description: Flag if global mesh is supported.
  kind: enum
  properties:
  - name: "False"
    types:
    - uid: string
  - name: "True"
    types:
    - uid: string
- name: connectivityGroupItem
  description: Connectivity group item.
  kind: object
  properties:
  - name: networkGroupId
    description: Network group Id.
    types:
    - uid: string
  - name: useHubGateway
    description: Flag if need to use hub gateway.
    types:
    - uid: UseHubGateway
  - name: isGlobal
    description: Flag if global is supported.
    types:
    - uid: IsGlobal
  - name: groupConnectivity
    description: Group connectivity type.
    types:
    - uid: GroupConnectivity
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: DeleteExistingPeering
  description: Flag if need to remove current existing peerings.
  kind: enum
  properties:
  - name: "False"
    types:
    - uid: string
  - name: "True"
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: UseHubGateway
  description: Flag if need to use hub gateway.
  kind: enum
  properties:
  - name: "False"
    types:
    - uid: string
  - name: "True"
    types:
    - uid: string
- name: GroupConnectivity
  description: Group connectivity type.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: DirectlyConnected
    types:
    - uid: string
examples:
- name: ConnectivityConfigurationsGet
  request:
    uri: GET https://management.azure.com/subscriptions/subscriptionA/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/connectivityConfigurations/myTestConnectivityConfig?api-version=2022-01-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/subscriptionA/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/connectivityConfigurations/myTestConnectivityConfig?api-version=2022-01-01
      ```

      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/NetworkManagerConnectivityConfigurationGet.json
      func ExampleConnectivityConfigurationsClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewConnectivityConfigurationsClient("subscriptionA", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx, "myResourceGroup", "testNetworkManager", "myTestConnectivityConfig", nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.1.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets a Network Connectivity Configuration, specified by the resource group, network manager name, and connectivity Configuration name
       *
       * @summary Gets a Network Connectivity Configuration, specified by the resource group, network manager name, and connectivity Configuration name
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/NetworkManagerConnectivityConfigurationGet.json
       */
      async function connectivityConfigurationsGet() {
        const subscriptionId = "subscriptionA";
        const resourceGroupName = "myResourceGroup";
        const networkManagerName = "testNetworkManager";
        const configurationName = "myTestConnectivityConfig";
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.connectivityConfigurations.get(
          resourceGroupName,
          networkManagerName,
          configurationName
        );
        console.log(result);
      }

      connectivityConfigurationsGet().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_29.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "myTestConnectivityConfig",
        "id": "/subscriptionA/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/connectivityConfigurations/myTestConnectivityConfig",
        "type": "Microsoft.Network/networkManagers/connectivityConfigurations",
        "systemData": {
          "createdBy": "b69a9388-9488-4534-b470-7ec6d41beef5",
          "createdByType": "User",
          "createdAt": "2021-01-11T18:52:27Z",
          "lastModifiedBy": "b69a9388-9488-4534-b470-7ec6d41beef5",
          "lastModifiedByType": "User",
          "lastModifiedAt": "2021-01-11T18:52:27Z"
        },
        "properties": {
          "description": "Sample Configuration",
          "connectivityTopology": "HubAndSpoke",
          "hubs": [
            {
              "resourceId": "/subscriptionB/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myHubVnet",
              "resourceType": "Microsoft.Network/virtualNetworks"
            }
          ],
          "isGlobal": "True",
          "deleteExistingPeering": "True",
          "appliesToGroups": [
            {
              "networkGroupId": "/subscriptions/subscriptionA/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/networkGroups/group1",
              "useHubGateway": "True",
              "groupConnectivity": "None",
              "isGlobal": "False"
            }
          ],
          "provisioningState": "Succeeded"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Gets a Network Connectivity Configuration, specified by the resource group, network manager name, and connectivity Configuration name
errorCodes: []
