### YamlMime:RESTOperation
uid: management.azure.com.networkmanager.listactiveconnectivityconfigurations.listactiveconnectivityconfigurations
name: List Active Connectivity Configurations
service: Network Manager
groupName: List Active Connectivity Configurations
apiVersion: 2022-05-01
summary: Lists active connectivity configurations in a network manager.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/listActiveConnectivityConfigurations?api-version=2022-05-01
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/listActiveConnectivityConfigurations?api-version=2022-05-01&$top={$top}
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: networkManagerName
  in: path
  isRequired: true
  description: The name of the network manager.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
- name: $top
  in: query
  description: An optional query parameter which specifies the maximum number of records to be returned by the server.
  types:
  - uid: integer
  format: int32
responses:
- name: 200 OK
  description: Post successful. The operation returns the specified Managed Network active connectivity configuration resource.
  types:
  - uid: ActiveConnectivityConfigurationsListResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: regions
    in: body
    description: List of regions.
    types:
    - uid: string
      isArray: true
  - name: skipToken
    in: body
    description: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
    types:
    - uid: string
requestHeader: []
definitions:
- name: ActiveConnectivityConfigurationsListResult
  description: Result of the request to list active connectivity configurations. It contains a list of active connectivity configurations and a skiptoken to get the next set of results.
  kind: object
  properties:
  - name: value
    description: Gets a page of active connectivity configurations.
    types:
    - uid: ActiveConnectivityConfiguration
      isArray: true
  - name: skipToken
    description: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
    types:
    - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: ActiveConfigurationParameter
  description: Effective Virtual Networks Parameter.
  kind: object
  properties:
  - name: regions
    description: List of regions.
    types:
    - uid: string
      isArray: true
  - name: skipToken
    description: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
    types:
    - uid: string
- name: ActiveConnectivityConfiguration
  description: Active connectivity configuration.
  kind: object
  properties:
  - name: commitTime
    description: Deployment time string.
    types:
    - uid: string
  - name: region
    description: Deployment region.
    types:
    - uid: string
  - name: id
    description: Connectivity configuration ID.
    types:
    - uid: string
  - name: configurationGroups
    description: Effective configuration groups.
    types:
    - uid: ConfigurationGroup
      isArray: true
  - name: properties.description
    description: A description of the connectivity configuration.
    types:
    - uid: string
  - name: properties.connectivityTopology
    description: Connectivity topology type.
    types:
    - uid: ConnectivityTopology
  - name: properties.hubs
    description: List of hubItems
    types:
    - uid: Hub
      isArray: true
  - name: properties.isGlobal
    description: Flag if global mesh is supported.
    types:
    - uid: IsGlobal
  - name: properties.appliesToGroups
    description: Groups for configuration
    types:
    - uid: connectivityGroupItem
      isArray: true
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the connectivity configuration resource.
    types:
    - uid: ProvisioningState
  - name: properties.deleteExistingPeering
    description: Flag if need to remove current existing peerings.
    types:
    - uid: DeleteExistingPeering
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: ConfigurationGroup
  description: The network configuration group resource
  kind: object
  properties:
  - name: id
    description: Network group ID.
    types:
    - uid: string
  - name: properties.description
    description: A description of the network group.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the scope assignment resource.
    types:
    - uid: ProvisioningState
- name: ConnectivityTopology
  description: Connectivity topology type.
  kind: enum
  properties:
  - name: HubAndSpoke
    types:
    - uid: string
  - name: Mesh
    types:
    - uid: string
- name: Hub
  description: Hub Item.
  kind: object
  properties:
  - name: resourceId
    description: Resource Id.
    types:
    - uid: string
  - name: resourceType
    description: Resource Type.
    types:
    - uid: string
- name: IsGlobal
  description: Flag if global mesh is supported.
  kind: enum
  properties:
  - name: "False"
    types:
    - uid: string
  - name: "True"
    types:
    - uid: string
- name: connectivityGroupItem
  description: Connectivity group item.
  kind: object
  properties:
  - name: networkGroupId
    description: Network group Id.
    types:
    - uid: string
  - name: useHubGateway
    description: Flag if need to use hub gateway.
    types:
    - uid: UseHubGateway
  - name: isGlobal
    description: Flag if global is supported.
    types:
    - uid: IsGlobal
  - name: groupConnectivity
    description: Group connectivity type.
    types:
    - uid: GroupConnectivity
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: DeleteExistingPeering
  description: Flag if need to remove current existing peerings.
  kind: enum
  properties:
  - name: "False"
    types:
    - uid: string
  - name: "True"
    types:
    - uid: string
- name: UseHubGateway
  description: Flag if need to use hub gateway.
  kind: enum
  properties:
  - name: "False"
    types:
    - uid: string
  - name: "True"
    types:
    - uid: string
- name: GroupConnectivity
  description: Group connectivity type.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: DirectlyConnected
    types:
    - uid: string
examples:
- name: List Active Connectivity Configurations
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/listActiveConnectivityConfigurations?api-version=2022-05-01
    body: >-
      {
        "regions": [
          "westus"
        ],
        "skipToken": "fakeSkipTokenCode"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/listActiveConnectivityConfigurations?api-version=2022-05-01

      {
        "regions": [
          "westus"
        ],
        "skipToken": "fakeSkipTokenCode"
      }

      ```

      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v2"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-05-01/examples/NetworkManagerActiveConnectivityConfigurationsList.json
      func ExampleManagementClient_ListActiveConnectivityConfigurations() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewManagementClient("00000000-0000-0000-0000-000000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.ListActiveConnectivityConfigurations(ctx, "myResourceGroup", "testNetworkManager", armnetwork.ActiveConfigurationParameter{
      		Regions: []*string{
      			to.Ptr("westus")},
      		SkipToken: to.Ptr("fakeSkipTokenCode"),
      	}, &armnetwork.ManagementClientListActiveConnectivityConfigurationsOptions{Top: nil})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv2.0.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Lists active connectivity configurations in a network manager.
       *
       * @summary Lists active connectivity configurations in a network manager.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-05-01/examples/NetworkManagerActiveConnectivityConfigurationsList.json
       */
      async function listActiveConnectivityConfigurations() {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "myResourceGroup";
        const networkManagerName = "testNetworkManager";
        const parameters = {
          regions: ["westus"],
          skipToken: "fakeSkipTokenCode",
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.listActiveConnectivityConfigurations(
          resourceGroupName,
          networkManagerName,
          parameters
        );
        console.log(result);
      }

      listActiveConnectivityConfigurations().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_30.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "region": "westus",
            "commitTime": "2020-07-10T18:03:22.2578238+05:30",
            "id": "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/connectivityConfigurations/myTestConnectivityConfig",
            "properties": {
              "description": "Sample Configuration",
              "connectivityTopology": "HubAndSpoke",
              "hubs": [
                {
                  "resourceId": "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myTestConnectivityConfig",
                  "resourceType": "Microsoft.Network/virtualNetworks"
                }
              ],
              "isGlobal": "True",
              "deleteExistingPeering": "True",
              "appliesToGroups": [
                {
                  "networkGroupId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/networkGroups/group1",
                  "useHubGateway": "True",
                  "groupConnectivity": "None",
                  "isGlobal": "False"
                }
              ],
              "provisioningState": "Succeeded"
            },
            "configurationGroups": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroup/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/networkGroups/group1",
                "properties": {
                  "description": "A group for all test Virtual Networks",
                  "provisioningState": "Succeeded"
                }
              }
            ]
          }
        ],
        "skipToken": "FakeSkipTokenCode"
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Network Manager service - Lists active connectivity configurations in a network manager.
errorCodes: []
