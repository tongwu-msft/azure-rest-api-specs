### YamlMime:RESTOperation
uid: management.azure.com.container-service.containerserviceclient.listorchestrators
name: List Orchestrators
service: Container Service
groupName: Container Service Client
apiVersion: 2017-09-30
summary: "Gets a list of supported orchestrators in the specified subscription.  \nGets a list of supported orchestrators in the specified subscription. The operation returns properties of each orchestrator including verison and available upgrades."
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/locations/{location}/orchestrators?api-version=2017-09-30
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/locations/{location}/orchestrators?api-version=2017-09-30&resource-type={resource-type}
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: location
  in: path
  isRequired: true
  description: The name of a supported Azure region.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
- name: resource-type
  in: query
  description: resource type for which the list of orchestrators needs to be returned
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: OrchestratorVersionProfileListResult
requestHeader: []
definitions:
- name: OrchestratorVersionProfileListResult
  description: The list of versions for supported orchestrators.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: Id of the orchestrator version profile list result.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Name of the orchestrator version profile list result.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Type of the orchestrator version profile list result.
    types:
    - uid: string
  - name: properties.orchestrators
    description: List of orchestrator version profiles.
    types:
    - uid: OrchestratorVersionProfile
      isArray: true
- name: OrchestratorVersionProfile
  description: The profile of an orchestrator and its available versions.
  kind: object
  properties:
  - name: orchestratorType
    description: Orchestrator type.
    types:
    - uid: string
  - name: orchestratorVersion
    description: Orchestrator version (major, minor, patch).
    types:
    - uid: string
  - name: default
    description: Installed by default if version is not specified.
    types:
    - uid: boolean
  - name: upgrades
    description: The list of available upgrade versions.
    types:
    - uid: OrchestratorProfile
      isArray: true
- name: OrchestratorProfile
  description: Contains information about orchestrator.
  kind: object
  properties:
  - name: orchestratorType
    description: Orchestrator type.
    types:
    - uid: string
  - name: orchestratorVersion
    description: Orchestrator version (major, minor, patch).
    types:
    - uid: string
examples:
- name: List Container Service Orchestrators
  request:
    uri: GET https://management.azure.com/subscriptions/subid1/providers/Microsoft.ContainerService/locations/location1/orchestrators?api-version=2017-09-30
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid1/providers/Microsoft.ContainerService/locations/location1/orchestrators",
        "name": "default",
        "type": "Microsoft.ContainerService/locations/orchestrators",
        "properties": {
          "orchestrators": [
            {
              "orchestratorType": "DCOS",
              "orchestratorVersion": "1.10.0"
            },
            {
              "orchestratorType": "DCOS",
              "orchestratorVersion": "1.9.0",
              "default": true
            },
            {
              "orchestratorType": "DCOS",
              "orchestratorVersion": "1.8.8"
            },
            {
              "orchestratorType": "Swarm",
              "orchestratorVersion": "swarm:1.1.0"
            },
            {
              "orchestratorType": "DockerCE",
              "orchestratorVersion": "17.03.*"
            },
            {
              "orchestratorType": "Kubernetes",
              "orchestratorVersion": "1.8.1",
              "upgrades": [
                {
                  "orchestratorVersion": "1.8.4"
                },
                {
                  "orchestratorVersion": "1.8.2"
                }
              ]
            },
            {
              "orchestratorType": "Kubernetes",
              "orchestratorVersion": "1.8.2",
              "upgrades": [
                {
                  "orchestratorVersion": "1.8.4"
                }
              ]
            },
            {
              "orchestratorType": "Kubernetes",
              "orchestratorVersion": "1.6.11",
              "upgrades": [
                {
                  "orchestratorVersion": "1.7.4"
                },
                {
                  "orchestratorVersion": "1.7.9"
                },
                {
                  "orchestratorVersion": "1.6.12"
                },
                {
                  "orchestratorVersion": "1.7.1"
                },
                {
                  "orchestratorVersion": "1.7.0"
                },
                {
                  "orchestratorVersion": "1.7.5"
                },
                {
                  "orchestratorVersion": "1.7.10"
                },
                {
                  "orchestratorVersion": "1.6.13"
                },
                {
                  "orchestratorVersion": "1.7.2"
                },
                {
                  "orchestratorVersion": "1.7.7"
                }
              ]
            },
            {
              "orchestratorType": "Kubernetes",
              "orchestratorVersion": "1.7.7",
              "upgrades": [
                {
                  "orchestratorVersion": "1.7.9"
                },
                {
                  "orchestratorVersion": "1.8.4"
                },
                {
                  "orchestratorVersion": "1.8.0"
                },
                {
                  "orchestratorVersion": "1.7.10"
                },
                {
                  "orchestratorVersion": "1.8.1"
                },
                {
                  "orchestratorVersion": "1.8.2"
                }
              ]
            },
            {
              "orchestratorType": "Kubernetes",
              "orchestratorVersion": "1.5.8",
              "upgrades": [
                {
                  "orchestratorVersion": "1.6.11"
                },
                {
                  "orchestratorVersion": "1.6.13"
                },
                {
                  "orchestratorVersion": "1.6.9"
                },
                {
                  "orchestratorVersion": "1.6.6"
                },
                {
                  "orchestratorVersion": "1.6.12"
                }
              ]
            },
            {
              "orchestratorType": "Kubernetes",
              "orchestratorVersion": "1.6.9",
              "upgrades": [
                {
                  "orchestratorVersion": "1.7.4"
                },
                {
                  "orchestratorVersion": "1.7.9"
                },
                {
                  "orchestratorVersion": "1.6.12"
                },
                {
                  "orchestratorVersion": "1.7.1"
                },
                {
                  "orchestratorVersion": "1.7.0"
                },
                {
                  "orchestratorVersion": "1.7.5"
                },
                {
                  "orchestratorVersion": "1.7.10"
                },
                {
                  "orchestratorVersion": "1.6.11"
                },
                {
                  "orchestratorVersion": "1.6.13"
                },
                {
                  "orchestratorVersion": "1.7.2"
                },
                {
                  "orchestratorVersion": "1.7.7"
                }
              ]
            },
            {
              "orchestratorType": "Kubernetes",
              "orchestratorVersion": "1.7.9",
              "default": true,
              "upgrades": [
                {
                  "orchestratorVersion": "1.8.1"
                },
                {
                  "orchestratorVersion": "1.8.2"
                },
                {
                  "orchestratorVersion": "1.8.4"
                },
                {
                  "orchestratorVersion": "1.8.0"
                },
                {
                  "orchestratorVersion": "1.7.10"
                }
              ]
            }
          ]
        }
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
