### YamlMime:RESTOperation
uid: management.azure.com.notificationhubs.namespaces.createorupdateauthorizationrule
name: Create Or Update Authorization Rule
service: Notification Hubs
groupName: Namespaces
apiVersion: 2017-04-01
summary: Creates an authorization rule for a namespace
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}?api-version=2017-04-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: namespaceName
  in: path
  isRequired: true
  description: The namespace name.
  types:
  - uid: string
- name: authorizationRuleName
  in: path
  isRequired: true
  description: Authorization Rule Name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Namespace Authorization Rule is Created/Updated
  types:
  - uid: SharedAccessAuthorizationRuleResource
requestBody:
- name: default
  parameters:
  - name: properties
    in: body
    isRequired: true
    description: Properties of the Namespace AuthorizationRules.
    types:
    - uid: SharedAccessAuthorizationRuleProperties
requestHeader: []
definitions:
- name: SharedAccessAuthorizationRuleProperties
  description: SharedAccessAuthorizationRule properties.
  kind: object
  properties:
  - name: rights
    description: The rights associated with the rule.
    types:
    - uid: string
      isArray: true
  - name: primaryKey
    isReadyOnly: true
    description: A base64-encoded 256-bit primary key for signing and validating the SAS token.
    types:
    - uid: string
  - name: secondaryKey
    isReadyOnly: true
    description: A base64-encoded 256-bit primary key for signing and validating the SAS token.
    types:
    - uid: string
  - name: keyName
    isReadyOnly: true
    description: A string that describes the authorization rule.
    types:
    - uid: string
  - name: claimType
    isReadyOnly: true
    description: A string that describes the claim type
    types:
    - uid: string
  - name: claimValue
    isReadyOnly: true
    description: A string that describes the claim value
    types:
    - uid: string
  - name: modifiedTime
    isReadyOnly: true
    description: The last modified time for this rule
    types:
    - uid: string
  - name: createdTime
    isReadyOnly: true
    description: The created time for this rule
    types:
    - uid: string
  - name: revision
    isReadyOnly: true
    description: The revision number for the rule
    types:
    - uid: integer
- name: SharedAccessAuthorizationRuleResource
  description: Description of a Namespace AuthorizationRules.
  kind: object
  properties:
  - name: properties.rights
    description: The rights associated with the rule.
    types:
    - uid: string
      isArray: true
  - name: properties.primaryKey
    isReadyOnly: true
    description: A base64-encoded 256-bit primary key for signing and validating the SAS token.
    types:
    - uid: string
  - name: properties.secondaryKey
    isReadyOnly: true
    description: A base64-encoded 256-bit primary key for signing and validating the SAS token.
    types:
    - uid: string
  - name: properties.keyName
    isReadyOnly: true
    description: A string that describes the authorization rule.
    types:
    - uid: string
  - name: properties.claimType
    isReadyOnly: true
    description: A string that describes the claim type
    types:
    - uid: string
  - name: properties.claimValue
    isReadyOnly: true
    description: A string that describes the claim value
    types:
    - uid: string
  - name: properties.modifiedTime
    isReadyOnly: true
    description: The last modified time for this rule
    types:
    - uid: string
  - name: properties.createdTime
    isReadyOnly: true
    description: The created time for this rule
    types:
    - uid: string
  - name: properties.revision
    isReadyOnly: true
    description: The revision number for the rule
    types:
    - uid: integer
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: sku
    description: The sku of the created namespace
    types:
    - uid: Sku
- name: SharedAccessAuthorizationRuleCreateOrUpdateParameters
  description: Parameters supplied to the CreateOrUpdate Namespace AuthorizationRules.
  kind: object
  properties:
  - name: properties
    description: Properties of the Namespace AuthorizationRules.
    types:
    - uid: SharedAccessAuthorizationRuleProperties
- name: Sku
  description: The Sku description for a namespace
  kind: object
  properties:
  - name: name
    description: Name of the notification hub sku
    types:
    - uid: SkuName
  - name: tier
    description: The tier of particular sku
    types:
    - uid: string
  - name: size
    description: The Sku size
    types:
    - uid: string
  - name: family
    description: The Sku Family
    types:
    - uid: string
  - name: capacity
    description: The capacity of the resource
    types:
    - uid: integer
- name: SkuName
  description: Name of the notification hub sku
  kind: enum
  properties:
  - name: Free
    types:
    - uid: string
  - name: Basic
    types:
    - uid: string
  - name: Standard
    types:
    - uid: string
examples:
- name: NameSpaceAuthorizationRuleCreate
  request:
    uri: PUT https://management.azure.com/subscriptions/29cfa613-cbbc-4512-b1d6-1b3a92c7fa40/resourceGroups/5ktrial/providers/Microsoft.NotificationHubs/namespaces/nh-sdk-ns/AuthorizationRules/sdk-AuthRules-1788?api-version=2017-04-01
    body: >-
      {
        "properties": {
          "rights": [
            "Listen",
            "Send"
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/29cfa613-cbbc-4512-b1d6-1b3a92c7fa40/resourceGroups/5ktrial/providers/Microsoft.NotificationHubs/namespaces/nh-sdk-ns/AuthorizationRules/sdk-AuthRules-1788?api-version=2017-04-01

      {
        "properties": {
          "rights": [
            "Listen",
            "Send"
          ]
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.resourcemanager.notificationhubs.fluent.models.SharedAccessAuthorizationRuleProperties;
      import com.azure.resourcemanager.notificationhubs.models.AccessRights;
      import java.util.Arrays;

      /** Samples for Namespaces CreateOrUpdateAuthorizationRule. */
      public final class Main {
          /*
           * x-ms-original-file: specification/notificationhubs/resource-manager/Microsoft.NotificationHubs/stable/2017-04-01/examples/Namespaces/NHNameSpaceAuthorizationRuleCreate.json
           */
          /**
           * Sample code: NameSpaceAuthorizationRuleCreate.
           *
           * @param manager Entry point to NotificationHubsManager.
           */
          public static void nameSpaceAuthorizationRuleCreate(
              com.azure.resourcemanager.notificationhubs.NotificationHubsManager manager) {
              manager
                  .namespaces()
                  .defineAuthorizationRule("sdk-AuthRules-1788")
                  .withExistingNamespace("5ktrial", "nh-sdk-ns")
                  .withProperties(
                      new SharedAccessAuthorizationRuleProperties()
                          .withRights(Arrays.asList(AccessRights.LISTEN, AccessRights.SEND)))
                  .create();
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-notificationhubs_1.0.0-beta.3/sdk/notificationhubs/azure-resourcemanager-notificationhubs/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnotificationhubs_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/notificationhubs/armnotificationhubs"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/notificationhubs/resource-manager/Microsoft.NotificationHubs/stable/2017-04-01/examples/Namespaces/NHNameSpaceAuthorizationRuleCreate.json
      func ExampleNamespacesClient_CreateOrUpdateAuthorizationRule() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnotificationhubs.NewNamespacesClient("29cfa613-cbbc-4512-b1d6-1b3a92c7fa40", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.CreateOrUpdateAuthorizationRule(ctx,
      		"5ktrial",
      		"nh-sdk-ns",
      		"sdk-AuthRules-1788",
      		armnotificationhubs.SharedAccessAuthorizationRuleCreateOrUpdateParameters{
      			Properties: &armnotificationhubs.SharedAccessAuthorizationRuleProperties{
      				Rights: []*armnotificationhubs.AccessRights{
      					to.Ptr(armnotificationhubs.AccessRightsListen),
      					to.Ptr(armnotificationhubs.AccessRightsSend)},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnotificationhubs%2Farmnotificationhubs%2Fv1.0.0/sdk/resourcemanager/notificationhubs/armnotificationhubs/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NotificationHubsManagementClient } = require("@azure/arm-notificationhubs");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates an authorization rule for a namespace
       *
       * @summary Creates an authorization rule for a namespace
       * x-ms-original-file: specification/notificationhubs/resource-manager/Microsoft.NotificationHubs/stable/2017-04-01/examples/Namespaces/NHNameSpaceAuthorizationRuleCreate.json
       */
      async function nameSpaceAuthorizationRuleCreate() {
        const subscriptionId = "29cfa613-cbbc-4512-b1d6-1b3a92c7fa40";
        const resourceGroupName = "5ktrial";
        const namespaceName = "nh-sdk-ns";
        const authorizationRuleName = "sdk-AuthRules-1788";
        const parameters = {
          properties: { rights: ["Listen", "Send"] },
        };
        const credential = new DefaultAzureCredential();
        const client = new NotificationHubsManagementClient(credential, subscriptionId);
        const result = await client.namespaces.createOrUpdateAuthorizationRule(
          resourceGroupName,
          namespaceName,
          authorizationRuleName,
          parameters
        );
        console.log(result);
      }

      nameSpaceAuthorizationRuleCreate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-notificationhubs_2.0.1/sdk/notificationhubs/arm-notificationhubs/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/29cfa613-cbbc-4512-b1d6-1b3a92c7fa40/resourceGroups/ArunMonocle/providers/Microsoft.NotificationHubs/namespaces/sdk-Namespace-6914/AuthorizationRules/sdk-AuthRules-1788",
        "name": "sdk-AuthRules-1788",
        "type": "Microsoft.NotificationHubs/Namespaces/AuthorizationRules",
        "properties": {
          "rights": [
            "Listen",
            "Send"
          ]
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Notification Hubs service - Creates an authorization rule for a namespace
errorCodes: []
