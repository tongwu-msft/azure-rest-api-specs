### YamlMime:RESTOperation
uid: management.azure.com.notificationhubs.notificationhubs.debugsend
name: Debug Send
service: Notification Hubs
groupName: Notification Hubs
apiVersion: 2017-04-01
summary: test send a push notification
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/debugsend?api-version=2017-04-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: namespaceName
  in: path
  isRequired: true
  description: The namespace name.
  types:
  - uid: string
- name: notificationHubName
  in: path
  isRequired: true
  description: The notification hub name.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 201 Created
  description: push send status
  types:
  - uid: DebugSendResponse
requestBody:
- name: default
  parameters:
  - name: parameters
    in: body
    description: Debug send parameters
    types:
    - uid: object
requestHeader: []
definitions:
- name: DebugSendResponse
  description: Description of a NotificationHub Resource.
  kind: object
  properties:
  - name: properties.success
    description: successful send
    types:
    - uid: number
  - name: properties.failure
    description: send failure
    types:
    - uid: number
  - name: properties.results
    description: actual failure description
    types:
    - uid: object
  - name: id
    isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type
    types:
    - uid: string
  - name: location
    description: Resource location
    types:
    - uid: string
  - name: tags
    description: Resource tags
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: sku
    description: The sku of the created namespace
    types:
    - uid: Sku
- name: Sku
  description: The Sku description for a namespace
  kind: object
  properties:
  - name: name
    description: Name of the notification hub sku
    types:
    - uid: SkuName
  - name: tier
    description: The tier of particular sku
    types:
    - uid: string
  - name: size
    description: The Sku size
    types:
    - uid: string
  - name: family
    description: The Sku Family
    types:
    - uid: string
  - name: capacity
    description: The capacity of the resource
    types:
    - uid: integer
- name: SkuName
  description: Name of the notification hub sku
  kind: enum
  properties:
  - name: Free
    types:
    - uid: string
  - name: Basic
    types:
    - uid: string
  - name: Standard
    types:
    - uid: string
examples:
- name: debugsend
  request:
    uri: POST https://management.azure.com/subscriptions/29cfa613-cbbc-4512-b1d6-1b3a92c7fa40/resourceGroups/5ktrial/providers/Microsoft.NotificationHubs/namespaces/nh-sdk-ns/notificationHubs/nh-sdk-hub/debugsend?api-version=2017-04-01
    body: >-
      {
        "data": {
          "message": "Hello"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/29cfa613-cbbc-4512-b1d6-1b3a92c7fa40/resourceGroups/5ktrial/providers/Microsoft.NotificationHubs/namespaces/nh-sdk-ns/notificationHubs/nh-sdk-hub/debugsend?api-version=2017-04-01

      {
        "data": {
          "message": "Hello"
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.serializer.SerializerFactory;
      import com.azure.core.util.Context;
      import com.azure.core.util.serializer.SerializerEncoding;
      import java.io.IOException;

      /** Samples for NotificationHubs DebugSend. */
      public final class Main {
          /*
           * x-ms-original-file: specification/notificationhubs/resource-manager/Microsoft.NotificationHubs/stable/2017-04-01/examples/NotificationHubs/NotificationHubDebugSend.json
           */
          /**
           * Sample code: debugsend.
           *
           * @param manager Entry point to NotificationHubsManager.
           */
          public static void debugsend(com.azure.resourcemanager.notificationhubs.NotificationHubsManager manager)
              throws IOException {
              manager
                  .notificationHubs()
                  .debugSendWithResponse(
                      "5ktrial",
                      "nh-sdk-ns",
                      "nh-sdk-hub",
                      SerializerFactory
                          .createDefaultManagementSerializerAdapter()
                          .deserialize("{\"data\":{\"message\":\"Hello\"}}", Object.class, SerializerEncoding.JSON),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-notificationhubs_1.0.0-beta.3/sdk/notificationhubs/azure-resourcemanager-notificationhubs/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnotificationhubs_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/notificationhubs/armnotificationhubs"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/notificationhubs/resource-manager/Microsoft.NotificationHubs/stable/2017-04-01/examples/NotificationHubs/NotificationHubDebugSend.json
      func ExampleClient_DebugSend() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnotificationhubs.NewClient("29cfa613-cbbc-4512-b1d6-1b3a92c7fa40", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	_, err = client.DebugSend(ctx,
      		"5ktrial",
      		"nh-sdk-ns",
      		"nh-sdk-hub",
      		&armnotificationhubs.ClientDebugSendOptions{Parameters: map[string]interface{}{
      			"data": map[string]interface{}{
      				"message": "Hello",
      			},
      		},
      		})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnotificationhubs%2Farmnotificationhubs%2Fv1.0.0/sdk/resourcemanager/notificationhubs/armnotificationhubs/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NotificationHubsManagementClient } = require("@azure/arm-notificationhubs");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to test send a push notification
       *
       * @summary test send a push notification
       * x-ms-original-file: specification/notificationhubs/resource-manager/Microsoft.NotificationHubs/stable/2017-04-01/examples/NotificationHubs/NotificationHubDebugSend.json
       */
      async function debugsend() {
        const subscriptionId = "29cfa613-cbbc-4512-b1d6-1b3a92c7fa40";
        const resourceGroupName = "5ktrial";
        const namespaceName = "nh-sdk-ns";
        const notificationHubName = "nh-sdk-hub";
        const parameters = { data: { message: "Hello" } };
        const options = { parameters };
        const credential = new DefaultAzureCredential();
        const client = new NotificationHubsManagementClient(credential, subscriptionId);
        const result = await client.notificationHubs.debugSend(
          resourceGroupName,
          namespaceName,
          notificationHubName,
          options
        );
        console.log(result);
      }

      debugsend().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-notificationhubs_2.0.1/sdk/notificationhubs/arm-notificationhubs/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/29cfa613-cbbc-4512-b1d6-1b3a92c7fa40/resourceGroups/sdkresourceGroup/providers/Microsoft.NotificationHubs/namespaces/nh-sdk-ns/notificationHubs/nh-sdk-hub",
        "name": "nh-sdk-hub",
        "type": "Microsoft.NotificationHubs/namespaces/notificationHubs",
        "location": "South Central US",
        "tags": null,
        "properties": {
          "success": 1,
          "failure": 0,
          "results": null
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Notification Hubs service - test send a push notification
errorCodes: []
