### YamlMime:RESTOperation
uid: management.azure.com.datalakestore.locations.getcapability
name: Get Capability
service: Data Lake Storage Gen1
groupName: Locations
apiVersion: 2016-11-01
summary: Gets subscription-level properties and limits for Data Lake Store specified by resource location.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/capability?api-version=2016-11-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: location
  in: path
  isRequired: true
  description: The resource location without whitespace.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successfully retrieved the subscription-level properties and limits for Data Lake Store specified by resource location.
  types:
  - uid: CapabilityInformation
- name: 404 Not Found
  description: Subscription not found.
requestHeader: []
definitions:
- name: CapabilityInformation
  description: Subscription-level properties and limits for Data Lake Store.
  kind: object
  properties:
  - name: subscriptionId
    isReadyOnly: true
    description: The subscription credentials that uniquely identifies the subscription.
    types:
    - uid: string
  - name: state
    isReadyOnly: true
    description: The subscription state.
    types:
    - uid: SubscriptionState
  - name: maxAccountCount
    isReadyOnly: true
    description: The maximum supported number of accounts under this subscription.
    types:
    - uid: integer
  - name: accountCount
    isReadyOnly: true
    description: The current number of accounts under this subscription.
    types:
    - uid: integer
  - name: migrationState
    isReadyOnly: true
    description: The Boolean value of true or false to indicate the maintenance state.
    types:
    - uid: boolean
- name: SubscriptionState
  description: The subscription state.
  kind: enum
  properties:
  - name: Registered
    types:
    - uid: string
  - name: Suspended
    types:
    - uid: string
  - name: Deleted
    types:
    - uid: string
  - name: Unregistered
    types:
    - uid: string
  - name: Warned
    types:
    - uid: string
examples:
- name: Gets subscription-level properties and limits for Data Lake Store specified by resource location
  request:
    uri: GET https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/providers/Microsoft.DataLakeStore/locations/EastUS2/capability?api-version=2016-11-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/providers/Microsoft.DataLakeStore/locations/EastUS2/capability?api-version=2016-11-01
      ```

      # [Go](#tab/Go)
      ``` go
      package armdatalakestore_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/datalake-store/armdatalakestore"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/datalake-store/resource-manager/Microsoft.DataLakeStore/stable/2016-11-01/examples/Locations_GetCapability.json
      func ExampleLocationsClient_GetCapability() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armdatalakestore.NewLocationsClient("34adfa4f-cedf-4dc0-ba29-b6d1a69ab345", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.GetCapability(ctx,
      		"EastUS2",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fdatalake-store%2Farmdatalakestore%2Fv1.0.0/sdk/resourcemanager/datalake-store/armdatalakestore/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "subscriptionId": "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345",
        "state": "Registered",
        "maxAccountCount": 150,
        "accountCount": 100,
        "migrationState": false
      }
  - statusCode: "404"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Data Lake Storage Gen1 service - Gets subscription-level properties and limits for Data Lake Store specified by resource location.
errorCodes: []
