{
  "swagger": "2.0",
  "info": {
    "version": "2016-11-01",
    "x-ms-code-generation-settings": {
      "internalConstructors": true
    },
    "title": "DataLakeStoreAccountManagementClient",
    "description": "Creates an Azure Data Lake Store account management client."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {},
  "definitions": {
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        }
      },
      "x-ms-azure-resource": true,
      "description": "The resource model definition."
    },
    "SubResource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        }
      },
      "x-ms-azure-resource": true,
      "description": "The resource model definition for a nested resource."
    },
    "DataLakeStoreAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "identity": {
          "readOnly": true,
          "$ref": "#/definitions/EncryptionIdentity",
          "description": "The Key Vault encryption identity, if any."
        },
        "properties": {
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DataLakeStoreAccountProperties",
          "description": "The Data Lake Store account properties."
        }
      },
      "description": "Data Lake Store account information."
    },
    "DataLakeStoreAccountBasic": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DataLakeStoreAccountPropertiesBasic",
          "description": "The basic Data Lake Store account properties."
        }
      },
      "description": "Basic Data Lake Store account information, returned on list calls."
    },
    "DataLakeStoreAccountProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/DataLakeStoreAccountPropertiesBasic"
        }
      ],
      "properties": {
        "defaultGroup": {
          "readOnly": true,
          "type": "string",
          "description": "The default owner group for all new folders and files created in the Data Lake Store account."
        },
        "encryptionConfig": {
          "readOnly": true,
          "$ref": "#/definitions/EncryptionConfig",
          "description": "The Key Vault encryption configuration."
        },
        "encryptionState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionState",
            "modelAsString": false
          },
          "description": "The current state of encryption for this Data Lake Store account."
        },
        "encryptionProvisioningState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Creating",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "EncryptionProvisioningState",
            "modelAsString": false
          },
          "description": "The current state of encryption provisioning for this Data Lake Store account."
        },
        "firewallRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "The list of firewall rules associated with this Data Lake Store account."
        },
        "virtualNetworkRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          },
          "description": "The list of virtual network rules associated with this Data Lake Store account."
        },
        "firewallState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallState",
            "modelAsString": false
          },
          "description": "The current state of the IP address firewall for this Data Lake Store account."
        },
        "firewallAllowAzureIps": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallAllowAzureIpsState",
            "modelAsString": false
          },
          "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
        },
        "trustedIdProviders": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrustedIdProvider"
          },
          "description": "The list of trusted identity providers associated with this Data Lake Store account."
        },
        "trustedIdProviderState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "TrustedIdProviderState",
            "modelAsString": false
          },
          "description": "The current state of the trusted identity provider feature for this Data Lake Store account."
        },
        "newTier": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_1TB",
            "Commitment_10TB",
            "Commitment_100TB",
            "Commitment_500TB",
            "Commitment_1PB",
            "Commitment_5PB"
          ],
          "x-ms-enum": {
            "name": "TierType",
            "modelAsString": false
          },
          "description": "The commitment tier to use for next month."
        },
        "currentTier": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_1TB",
            "Commitment_10TB",
            "Commitment_100TB",
            "Commitment_500TB",
            "Commitment_1PB",
            "Commitment_5PB"
          ],
          "x-ms-enum": {
            "name": "TierType",
            "modelAsString": false
          },
          "description": "The commitment tier in use for the current month."
        }
      },
      "description": "Data Lake Store account properties information."
    },
    "DataLakeStoreAccountPropertiesBasic": {
      "properties": {
        "accountId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "The unique identifier associated with this Data Lake Store account."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Failed",
            "Creating",
            "Running",
            "Succeeded",
            "Patching",
            "Suspending",
            "Resuming",
            "Deleting",
            "Deleted",
            "Undeleting",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "DataLakeStoreAccountStatus",
            "modelAsString": false
          },
          "description": "The provisioning status of the Data Lake Store account."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Active",
            "Suspended"
          ],
          "x-ms-enum": {
            "name": "DataLakeStoreAccountState",
            "modelAsString": false
          },
          "description": "The state of the Data Lake Store account."
        },
        "creationTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The account creation time."
        },
        "lastModifiedTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The account last modified time."
        },
        "endpoint": {
          "readOnly": true,
          "type": "string",
          "description": "The full CName endpoint for this account."
        }
      },
      "description": "The basic account specific properties that are associated with an underlying Data Lake Store account."
    },
    "DataLakeStoreAccountListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeStoreAccountBasic"
          },
          "description": "The results of the list operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "Data Lake Store account list information response."
    },
    "EncryptionIdentity": {
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "EncryptionIdentityType",
            "modelAsString": false
          },
          "description": "The type of encryption being used. Currently the only supported type is 'SystemAssigned'."
        },
        "principalId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "The principal identifier associated with the encryption."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "The tenant identifier associated with the encryption."
        }
      },
      "description": "The encryption identity properties."
    },
    "EncryptionConfig": {
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UserManaged",
            "ServiceManaged"
          ],
          "x-ms-enum": {
            "name": "EncryptionConfigType",
            "modelAsString": false
          },
          "description": "The type of encryption configuration being used. Currently the only supported types are 'UserManaged' and 'ServiceManaged'."
        },
        "keyVaultMetaInfo": {
          "$ref": "#/definitions/KeyVaultMetaInfo",
          "description": "The Key Vault information for connecting to user managed encryption keys."
        }
      },
      "description": "The encryption configuration for the account."
    },
    "KeyVaultMetaInfo": {
      "required": [
        "keyVaultResourceId",
        "encryptionKeyName",
        "encryptionKeyVersion"
      ],
      "properties": {
        "keyVaultResourceId": {
          "type": "string",
          "description": "The resource identifier for the user managed Key Vault being used to encrypt."
        },
        "encryptionKeyName": {
          "type": "string",
          "description": "The name of the user managed encryption key."
        },
        "encryptionKeyVersion": {
          "type": "string",
          "description": "The version of the user managed encryption key."
        }
      },
      "description": "Metadata information used by account encryption."
    },
    "FirewallRule": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FirewallRuleProperties",
          "description": "The firewall rule properties."
        }
      },
      "description": "Data Lake Store firewall rule information."
    },
    "FirewallRuleProperties": {
      "properties": {
        "startIpAddress": {
          "readOnly": true,
          "type": "string",
          "description": "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        },
        "endIpAddress": {
          "readOnly": true,
          "type": "string",
          "description": "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        }
      },
      "description": "The firewall rule properties."
    },
    "FirewallRuleListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "The results of the list operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "Data Lake Store firewall rule list information."
    },
    "VirtualNetworkRule": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkRuleProperties",
          "description": "The virtual network rule properties."
        }
      },
      "description": "Data Lake Store virtual network rule information."
    },
    "VirtualNetworkRuleProperties": {
      "properties": {
        "subnetId": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier for the subnet."
        }
      },
      "description": "The virtual network rule properties."
    },
    "VirtualNetworkRuleListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          },
          "description": "The results of the list operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "Data Lake Store virtual network rule list information."
    },
    "TrustedIdProvider": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TrustedIdProviderProperties",
          "description": "The trusted identity provider properties."
        }
      },
      "description": "Data Lake Store trusted identity provider information."
    },
    "TrustedIdProviderProperties": {
      "properties": {
        "idProvider": {
          "readOnly": true,
          "type": "string",
          "description": "The URL of this trusted identity provider."
        }
      },
      "description": "The trusted identity provider properties."
    },
    "TrustedIdProviderListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrustedIdProvider"
          },
          "description": "The results of the list operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "Data Lake Store trusted identity provider list information."
    },
    "Operation": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the operation."
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "The display information for the operation."
        },
        "origin": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "OperationOrigin",
            "modelAsString": true
          },
          "description": "The intended executor of the operation."
        }
      },
      "description": "An available operation for Data Lake Store."
    },
    "OperationDisplay": {
      "properties": {
        "provider": {
          "readOnly": true,
          "type": "string",
          "description": "The resource provider of the operation."
        },
        "resource": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type of the operation."
        },
        "operation": {
          "readOnly": true,
          "type": "string",
          "description": "A friendly name of the operation."
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "A friendly description of the operation."
        }
      },
      "description": "The display information for a particular operation."
    },
    "OperationListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "The results of the list operation."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The link (url) to the next page of results."
        }
      },
      "description": "The list of available operations for Data Lake Store."
    },
    "CapabilityInformation": {
      "properties": {
        "subscriptionId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid",
          "description": "The subscription credentials that uniquely identifies the subscription."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Registered",
            "Suspended",
            "Deleted",
            "Unregistered",
            "Warned"
          ],
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": true
          },
          "description": "The subscription state."
        },
        "maxAccountCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The maximum supported number of accounts under this subscription."
        },
        "accountCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The current number of accounts under this subscription."
        },
        "migrationState": {
          "readOnly": true,
          "type": "boolean",
          "description": "The Boolean value of true or false to indicate the maintenance state."
        }
      },
      "description": "Subscription-level properties and limits for Data Lake Store."
    },
    "UsageName": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "description": "Gets a string describing the resource name."
        },
        "localizedValue": {
          "readOnly": true,
          "type": "string",
          "description": "Gets a localized string describing the resource name."
        }
      },
      "description": "The usage names that can be used."
    },
    "Usage": {
      "properties": {
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the unit of measurement.",
          "enum": [
            "Count",
            "Bytes",
            "Seconds",
            "Percent",
            "CountsPerSecond",
            "BytesPerSecond"
          ],
          "x-ms-enum": {
            "name": "UsageUnit",
            "modelAsString": false
          }
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource identifier."
        },
        "currentValue": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the current count of the allocated resources in the subscription."
        },
        "limit": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the maximum count of the resources that can be allocated in the subscription."
        },
        "name": {
          "$ref": "#/definitions/UsageName",
          "readOnly": true,
          "description": "Gets the name of the type of usage."
        }
      },
      "description": "Describes the Resource Usage."
    },
    "UsageListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "description": "Gets or sets the list of Storage Resource Usages."
        }
      },
      "description": "The response from the List Usages operation."
    },
    "NameAvailabilityInformation": {
      "properties": {
        "nameAvailable": {
          "readOnly": true,
          "type": "boolean",
          "description": "The Boolean value of true or false to indicate whether the Data Lake Store account name is available or not."
        },
        "reason": {
          "readOnly": true,
          "type": "string",
          "description": "The reason why the Data Lake Store account name is not available, if nameAvailable is false."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The message describing why the Data Lake Store account name is not available, if nameAvailable is false."
        }
      },
      "description": "Data Lake Store account name availability result information."
    },
    "CreateDataLakeStoreAccountParameters": {
      "required": [
        "location"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "identity": {
          "$ref": "#/definitions/EncryptionIdentity",
          "description": "The Key Vault encryption identity, if any."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateDataLakeStoreAccountProperties",
          "description": "The Data Lake Store account properties to use for creating."
        }
      }
    },
    "CreateDataLakeStoreAccountProperties": {
      "properties": {
        "defaultGroup": {
          "type": "string",
          "description": "The default owner group for all new folders and files created in the Data Lake Store account."
        },
        "encryptionConfig": {
          "$ref": "#/definitions/EncryptionConfig",
          "description": "The Key Vault encryption configuration."
        },
        "encryptionState": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionState",
            "modelAsString": false
          },
          "description": "The current state of encryption for this Data Lake Store account."
        },
        "firewallRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateFirewallRuleWithAccountParameters"
          },
          "description": "The list of firewall rules associated with this Data Lake Store account."
        },
        "virtualNetworkRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateVirtualNetworkRuleWithAccountParameters"
          },
          "description": "The list of virtual network rules associated with this Data Lake Store account."
        },
        "firewallState": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallState",
            "modelAsString": false
          },
          "description": "The current state of the IP address firewall for this Data Lake Store account."
        },
        "firewallAllowAzureIps": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallAllowAzureIpsState",
            "modelAsString": false
          },
          "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
        },
        "trustedIdProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateTrustedIdProviderWithAccountParameters"
          },
          "description": "The list of trusted identity providers associated with this Data Lake Store account."
        },
        "trustedIdProviderState": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "TrustedIdProviderState",
            "modelAsString": false
          },
          "description": "The current state of the trusted identity provider feature for this Data Lake Store account."
        },
        "newTier": {
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_1TB",
            "Commitment_10TB",
            "Commitment_100TB",
            "Commitment_500TB",
            "Commitment_1PB",
            "Commitment_5PB"
          ],
          "x-ms-enum": {
            "name": "TierType",
            "modelAsString": false
          },
          "description": "The commitment tier to use for next month."
        }
      }
    },
    "UpdateDataLakeStoreAccountParameters": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateDataLakeStoreAccountProperties",
          "description": "The Data Lake Store account properties to update."
        }
      },
      "description": "Data Lake Store account information to update."
    },
    "UpdateDataLakeStoreAccountProperties": {
      "properties": {
        "defaultGroup": {
          "type": "string",
          "description": "The default owner group for all new folders and files created in the Data Lake Store account."
        },
        "encryptionConfig": {
          "$ref": "#/definitions/UpdateEncryptionConfig",
          "description": "Used for rotation of user managed Key Vault keys. Can only be used to rotate a user managed encryption Key Vault key."
        },
        "firewallRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateFirewallRuleWithAccountParameters"
          },
          "description": "The list of firewall rules associated with this Data Lake Store account."
        },
        "virtualNetworkRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateVirtualNetworkRuleWithAccountParameters"
          },
          "description": "The list of virtual network rules associated with this Data Lake Store account."
        },
        "firewallState": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallState",
            "modelAsString": false
          },
          "description": "The current state of the IP address firewall for this Data Lake Store account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled."
        },
        "firewallAllowAzureIps": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallAllowAzureIpsState",
            "modelAsString": false
          },
          "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
        },
        "trustedIdProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateTrustedIdProviderWithAccountParameters"
          },
          "description": "The list of trusted identity providers associated with this Data Lake Store account."
        },
        "trustedIdProviderState": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "TrustedIdProviderState",
            "modelAsString": false
          },
          "description": "The current state of the trusted identity provider feature for this Data Lake Store account. Disabling trusted identity provider functionality does not remove the providers, they will just be ignored until this feature is re-enabled."
        },
        "newTier": {
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_1TB",
            "Commitment_10TB",
            "Commitment_100TB",
            "Commitment_500TB",
            "Commitment_1PB",
            "Commitment_5PB"
          ],
          "x-ms-enum": {
            "name": "TierType",
            "modelAsString": false
          },
          "description": "The commitment tier to use for next month."
        }
      },
      "description": "Data Lake Store account properties information to be updated."
    },
    "UpdateEncryptionConfig": {
      "properties": {
        "keyVaultMetaInfo": {
          "$ref": "#/definitions/UpdateKeyVaultMetaInfo",
          "description": "The updated Key Vault key to use in user managed key rotation."
        }
      },
      "description": "The encryption configuration used to update a user managed Key Vault key."
    },
    "UpdateKeyVaultMetaInfo": {
      "properties": {
        "encryptionKeyVersion": {
          "type": "string",
          "description": "The version of the user managed encryption key to update through a key rotation."
        }
      },
      "description": "The Key Vault update information used for user managed key rotation."
    },
    "CreateOrUpdateFirewallRuleParameters": {
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateOrUpdateFirewallRuleProperties",
          "description": "The firewall rule properties to use when creating a new firewall rule."
        }
      },
      "description": "The parameters used to create a new firewall rule."
    },
    "CreateFirewallRuleWithAccountParameters": {
      "required": [
        "name",
        "properties"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the firewall rule to create."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateOrUpdateFirewallRuleProperties",
          "description": "The firewall rule properties to use when creating a new firewall rule."
        }
      },
      "description": "The parameters used to create a new firewall rule while creating a new Data Lake Store account."
    },
    "CreateOrUpdateFirewallRuleProperties": {
      "required": [
        "startIpAddress",
        "endIpAddress"
      ],
      "properties": {
        "startIpAddress": {
          "type": "string",
          "description": "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        },
        "endIpAddress": {
          "type": "string",
          "description": "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        }
      },
      "description": "The firewall rule properties to use when creating a new firewall rule."
    },
    "UpdateFirewallRuleParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateFirewallRuleProperties",
          "description": "The firewall rule properties to use when updating a firewall rule."
        }
      },
      "description": "The parameters used to update a firewall rule."
    },
    "UpdateFirewallRuleWithAccountParameters": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the firewall rule to update."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateFirewallRuleProperties",
          "description": "The firewall rule properties to use when updating a firewall rule."
        }
      },
      "description": "The parameters used to update a firewall rule while updating a Data Lake Store account."
    },
    "UpdateFirewallRuleProperties": {
      "properties": {
        "startIpAddress": {
          "type": "string",
          "description": "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        },
        "endIpAddress": {
          "type": "string",
          "description": "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        }
      },
      "description": "The firewall rule properties to use when updating a firewall rule."
    },
    "CreateOrUpdateVirtualNetworkRuleParameters": {
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateOrUpdateVirtualNetworkRuleProperties",
          "description": "The virtual network rule properties to use when creating a new virtual network rule."
        }
      },
      "description": "The parameters used to create a new virtual network rule."
    },
    "CreateVirtualNetworkRuleWithAccountParameters": {
      "required": [
        "name",
        "properties"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the virtual network rule to create."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateOrUpdateVirtualNetworkRuleProperties",
          "description": "The virtual network rule properties to use when creating a new virtual network rule."
        }
      },
      "description": "The parameters used to create a new virtual network rule while creating a new Data Lake Store account."
    },
    "CreateOrUpdateVirtualNetworkRuleProperties": {
      "required": [
        "subnetId"
      ],
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "The resource identifier for the subnet."
        }
      },
      "description": "The virtual network rule properties to use when creating a new virtual network rule."
    },
    "UpdateVirtualNetworkRuleParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateVirtualNetworkRuleProperties",
          "description": "The virtual network rule properties to use when updating a virtual network rule."
        }
      },
      "description": "The parameters used to update a virtual network rule."
    },
    "UpdateVirtualNetworkRuleWithAccountParameters": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the virtual network rule to update."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateVirtualNetworkRuleProperties",
          "description": "The virtual network rule properties to use when updating a virtual network rule."
        }
      },
      "description": "The parameters used to update a virtual network rule while updating a Data Lake Store account."
    },
    "UpdateVirtualNetworkRuleProperties": {
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "The resource identifier for the subnet."
        }
      },
      "description": "The virtual network rule properties to use when updating a virtual network rule."
    },
    "CreateOrUpdateTrustedIdProviderParameters": {
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateOrUpdateTrustedIdProviderProperties",
          "description": "The trusted identity provider properties to use when creating a new trusted identity provider."
        }
      },
      "description": "The parameters used to create a new trusted identity provider."
    },
    "CreateTrustedIdProviderWithAccountParameters": {
      "required": [
        "name",
        "properties"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the trusted identity provider to create."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CreateOrUpdateTrustedIdProviderProperties",
          "description": "The trusted identity provider properties to use when creating a new trusted identity provider."
        }
      },
      "description": "The parameters used to create a new trusted identity provider while creating a new Data Lake Store account."
    },
    "CreateOrUpdateTrustedIdProviderProperties": {
      "required": [
        "idProvider"
      ],
      "properties": {
        "idProvider": {
          "type": "string",
          "description": "The URL of this trusted identity provider."
        }
      },
      "description": "The trusted identity provider properties to use when creating a new trusted identity provider."
    },
    "UpdateTrustedIdProviderParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateTrustedIdProviderProperties",
          "description": "The trusted identity provider properties to use when updating a trusted identity provider."
        }
      },
      "description": "The parameters used to update a trusted identity provider."
    },
    "UpdateTrustedIdProviderWithAccountParameters": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the trusted identity provider to update."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UpdateTrustedIdProviderProperties",
          "description": "The trusted identity provider properties to use when updating a trusted identity provider."
        }
      },
      "description": "The parameters used to update a trusted identity provider while updating a Data Lake Store account."
    },
    "UpdateTrustedIdProviderProperties": {
      "properties": {
        "idProvider": {
          "type": "string",
          "description": "The URL of this trusted identity provider."
        }
      },
      "description": "The trusted identity provider properties to use when updating a trusted identity provider."
    },
    "CheckNameAvailabilityParameters": {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The Data Lake Store name to check availability for."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataLakeStore/accounts"
          ],
          "description": "The resource type. Note: This should not be set by the user, as the constant value is Microsoft.DataLakeStore/accounts"
        }
      },
      "description": "Data Lake Store account name availability check parameters."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the Azure resource group."
    },
    "AccountNameParameter": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the Data Lake Store account."
    }
  },
  "x-internal-service-id": "datalakestore",
  "x-internal-service-name": "Data Lake Storage Gen1",
  "x-internal-toc-name": "Operations",
  "x-internal-product-uid": null,
  "x-internal-split-members": [
    {
      "displayName": "List",
      "relativePath": "Operations/List"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}