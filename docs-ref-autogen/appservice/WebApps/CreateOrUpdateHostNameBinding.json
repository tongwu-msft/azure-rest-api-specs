{
  "swagger": "2.0",
  "info": {
    "version": "2016-08-01",
    "title": "WebApps API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a hostname binding for an app.",
        "description": "Creates a hostname binding for an app.",
        "operationId": "WebApps_CreateOrUpdateHostNameBinding",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Hostname in the hostname binding.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostNameBinding",
            "in": "body",
            "description": "Binding details. This is the JSON representation of a HostNameBinding object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          }
        },
        "x-internal-toc-name": "Create Or Update Host Name Binding"
      }
    }
  },
  "definitions": {
    "ApiDefinitionInfo": {
      "description": "Information about the formal API definition for the app.",
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL of the API definition.",
          "type": "string"
        }
      }
    },
    "ApplicationLogsConfig": {
      "description": "Application logs configuration.",
      "type": "object",
      "properties": {
        "fileSystem": {
          "$ref": "#/definitions/FileSystemApplicationLogsConfig",
          "description": "Application logs to file system configuration."
        },
        "azureTableStorage": {
          "$ref": "#/definitions/AzureTableStorageApplicationLogsConfig",
          "description": "Application logs to azure table storage configuration."
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/AzureBlobStorageApplicationLogsConfig",
          "description": "Application logs to blob storage configuration."
        }
      }
    },
    "AutoHealActions": {
      "description": "Actions which to take by the auto-heal module when a rule is triggered.",
      "type": "object",
      "properties": {
        "actionType": {
          "description": "Predefined action to be taken.",
          "enum": [
            "Recycle",
            "LogEvent",
            "CustomAction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AutoHealActionType",
            "modelAsString": false
          }
        },
        "customAction": {
          "$ref": "#/definitions/AutoHealCustomAction",
          "description": "Custom action to be taken."
        },
        "minProcessExecutionTime": {
          "description": "Minimum time the process must execute\n before taking the action",
          "type": "string"
        }
      }
    },
    "AutoHealCustomAction": {
      "description": "Custom action to be executed\n when an auto heal rule is triggered.",
      "type": "object",
      "properties": {
        "exe": {
          "description": "Executable to be run.",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the executable.",
          "type": "string"
        }
      }
    },
    "AutoHealRules": {
      "description": "Rules that can be defined for auto-heal.",
      "type": "object",
      "properties": {
        "triggers": {
          "$ref": "#/definitions/AutoHealTriggers",
          "description": "Conditions that describe when to execute the auto-heal actions."
        },
        "actions": {
          "$ref": "#/definitions/AutoHealActions",
          "description": "Actions to be executed when a rule is triggered."
        }
      }
    },
    "AutoHealTriggers": {
      "description": "Triggers for auto-heal.",
      "type": "object",
      "properties": {
        "requests": {
          "$ref": "#/definitions/RequestsBasedTrigger",
          "description": "A rule based on total requests."
        },
        "privateBytesInKB": {
          "format": "int32",
          "description": "A rule based on private bytes.",
          "type": "integer"
        },
        "statusCodes": {
          "description": "A rule based on status codes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCodesBasedTrigger"
          }
        },
        "slowRequests": {
          "$ref": "#/definitions/SlowRequestsBasedTrigger",
          "description": "A rule based on request execution time."
        }
      }
    },
    "AzureBlobStorageApplicationLogsConfig": {
      "description": "Application logs azure blob storage configuration.",
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        },
        "sasUrl": {
          "description": "SAS url to a azure blob container with read/write/list/delete permissions.",
          "type": "string"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\n Remove blobs older than X days.\n 0 or lower means no retention.",
          "type": "integer"
        }
      }
    },
    "AzureBlobStorageHttpLogsConfig": {
      "description": "Http logs to azure blob storage configuration.",
      "type": "object",
      "properties": {
        "sasUrl": {
          "description": "SAS url to a azure blob container with read/write/list/delete permissions.",
          "type": "string"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\n Remove blobs older than X days.\n 0 or lower means no retention.",
          "type": "integer"
        },
        "enabled": {
          "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
          "type": "boolean"
        }
      }
    },
    "AzureTableStorageApplicationLogsConfig": {
      "description": "Application logs to Azure table storage configuration.",
      "required": [
        "sasUrl"
      ],
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        },
        "sasUrl": {
          "description": "SAS URL to an Azure table with add/query/delete permissions.",
          "type": "string"
        }
      }
    },
    "BackupItem": {
      "description": "Backup description.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "BackupItem resource specific properties",
          "properties": {
            "id": {
              "format": "int32",
              "description": "Id of the backup.",
              "type": "integer",
              "readOnly": true,
              "x-ms-client-name": "BackupId"
            },
            "storageAccountUrl": {
              "description": "SAS URL for the storage account container which contains this backup.",
              "type": "string",
              "readOnly": true
            },
            "blobName": {
              "description": "Name of the blob which contains data for this backup.",
              "type": "string",
              "readOnly": true
            },
            "name": {
              "description": "Name of this backup.",
              "type": "string",
              "readOnly": true
            },
            "status": {
              "description": "Backup status.",
              "enum": [
                "InProgress",
                "Failed",
                "Succeeded",
                "TimedOut",
                "Created",
                "Skipped",
                "PartiallySucceeded",
                "DeleteInProgress",
                "DeleteFailed",
                "Deleted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "BackupItemStatus",
                "modelAsString": false
              }
            },
            "sizeInBytes": {
              "format": "int64",
              "description": "Size of the backup in bytes.",
              "type": "integer",
              "readOnly": true
            },
            "created": {
              "format": "date-time",
              "description": "Timestamp of the backup creation.",
              "type": "string",
              "readOnly": true
            },
            "log": {
              "description": "Details regarding this backup. Might contain an error message.",
              "type": "string",
              "readOnly": true
            },
            "databases": {
              "description": "List of databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              },
              "readOnly": true
            },
            "scheduled": {
              "description": "True if this backup has been created due to a schedule being triggered.",
              "type": "boolean",
              "readOnly": true
            },
            "lastRestoreTimeStamp": {
              "format": "date-time",
              "description": "Timestamp of a last restore operation which used this backup.",
              "type": "string",
              "readOnly": true
            },
            "finishedTimeStamp": {
              "format": "date-time",
              "description": "Timestamp when this backup finished.",
              "type": "string",
              "readOnly": true
            },
            "correlationId": {
              "description": "Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.",
              "type": "string",
              "readOnly": true
            },
            "websiteSizeInBytes": {
              "format": "int64",
              "description": "Size of the original web app which has been backed up.",
              "type": "integer",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupItemCollection": {
      "description": "Collection of backup items.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupItem"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "BackupRequest": {
      "description": "Description of a backup which will be performed.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "BackupRequest resource specific properties",
          "required": [
            "name",
            "storageAccountUrl"
          ],
          "properties": {
            "name": {
              "description": "Name of the backup.",
              "type": "string",
              "x-ms-client-name": "BackupRequestName"
            },
            "enabled": {
              "description": "True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.",
              "type": "boolean"
            },
            "storageAccountUrl": {
              "description": "SAS URL to the container.",
              "type": "string"
            },
            "backupSchedule": {
              "$ref": "#/definitions/BackupSchedule",
              "description": "Schedule for the backup if it is executed periodically."
            },
            "databases": {
              "description": "Databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              }
            },
            "type": {
              "description": "Type of the backup.",
              "enum": [
                "Default",
                "Clone",
                "Relocation",
                "Snapshot"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BackupRestoreOperationType",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupSchedule": {
      "description": "Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.",
      "required": [
        "frequencyInterval",
        "frequencyUnit",
        "keepAtLeastOneBackup",
        "retentionPeriodInDays"
      ],
      "type": "object",
      "properties": {
        "frequencyInterval": {
          "format": "int32",
          "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)",
          "default": 7,
          "type": "integer"
        },
        "frequencyUnit": {
          "description": "The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)",
          "default": "Day",
          "enum": [
            "Day",
            "Hour"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FrequencyUnit",
            "modelAsString": false
          }
        },
        "keepAtLeastOneBackup": {
          "description": "True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.",
          "default": true,
          "type": "boolean"
        },
        "retentionPeriodInDays": {
          "format": "int32",
          "description": "After how many days backups should be deleted.",
          "default": 30,
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "description": "When the schedule should start working.",
          "type": "string"
        },
        "lastExecutionTime": {
          "format": "date-time",
          "description": "Last time when this schedule was triggered.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CloningInfo": {
      "description": "Information needed for cloning operation.",
      "required": [
        "sourceWebAppId"
      ],
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "Correlation ID of cloning operation. This ID ties multiple cloning operations\n together to use the same snapshot.",
          "type": "string"
        },
        "overwrite": {
          "description": "<code>true</code> to overwrite destination app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "cloneCustomHostNames": {
          "description": "<code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "cloneSourceControl": {
          "description": "<code>true</code> to clone source control from source app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "sourceWebAppId": {
          "description": "ARM resource ID of the source app. App resource ID is of the form \n /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and \n /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.",
          "type": "string"
        },
        "hostingEnvironment": {
          "description": "App Service Environment.",
          "type": "string"
        },
        "appSettingsOverrides": {
          "description": "Application setting overrides for cloned app. If specified, these settings override the settings cloned \n from source app. Otherwise, application settings from source app are retained.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configureLoadBalancing": {
          "description": "<code>true</code> to configure load balancing for source and destination app.",
          "type": "boolean"
        },
        "trafficManagerProfileId": {
          "description": "ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form \n /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.",
          "type": "string"
        },
        "trafficManagerProfileName": {
          "description": "Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.",
          "type": "string"
        },
        "ignoreQuotas": {
          "description": "<code>true</code> if quotas should be ignored; otherwise, <code>false</code>.",
          "type": "boolean"
        }
      }
    },
    "ConnStringInfo": {
      "description": "Database connection string information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of connection string.",
          "type": "string"
        },
        "connectionString": {
          "description": "Connection string value.",
          "type": "string"
        },
        "type": {
          "description": "Type of database.",
          "enum": [
            "MySql",
            "SQLServer",
            "SQLAzure",
            "Custom",
            "NotificationHub",
            "ServiceBus",
            "EventHub",
            "ApiHub",
            "DocDb",
            "RedisCache",
            "PostgreSQL"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConnectionStringType",
            "modelAsString": false
          }
        }
      }
    },
    "ConnStringValueTypePair": {
      "description": "Database connection string value to type pair.",
      "required": [
        "value",
        "type"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of pair.",
          "type": "string"
        },
        "type": {
          "description": "Type of database.",
          "enum": [
            "MySql",
            "SQLServer",
            "SQLAzure",
            "Custom",
            "NotificationHub",
            "ServiceBus",
            "EventHub",
            "ApiHub",
            "DocDb",
            "RedisCache",
            "PostgreSQL"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConnectionStringType",
            "modelAsString": false
          }
        }
      }
    },
    "ConnectionStringDictionary": {
      "description": "String dictionary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Connection strings.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConnStringValueTypePair"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ContinuousWebJob": {
      "description": "Continuous Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ContinuousWebJob resource specific properties",
          "properties": {
            "status": {
              "description": "Job status.",
              "enum": [
                "Initializing",
                "Starting",
                "Running",
                "PendingRestart",
                "Stopped"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ContinuousWebJobStatus",
                "modelAsString": false
              }
            },
            "detailedStatus": {
              "description": "Detailed status.",
              "type": "string"
            },
            "logUrl": {
              "description": "Log URL.",
              "type": "string"
            },
            "name": {
              "description": "Job name. Used as job identifier in ARM resource URI.",
              "type": "string",
              "readOnly": true
            },
            "runCommand": {
              "description": "Run command.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "extraInfoUrl": {
              "description": "Extra Info URL.",
              "type": "string"
            },
            "jobType": {
              "description": "Job type.",
              "enum": [
                "Continuous",
                "Triggered"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "WebJobType",
                "modelAsString": false
              }
            },
            "error": {
              "description": "Error information.",
              "type": "string"
            },
            "usingSdk": {
              "description": "Using SDK?",
              "type": "boolean"
            },
            "settings": {
              "description": "Job settings.",
              "type": "object"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ContinuousWebJobCollection": {
      "description": "Collection of Kudu continuous web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContinuousWebJob"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "CorsSettings": {
      "description": "Cross-Origin Resource Sharing (CORS) settings for the app.",
      "type": "object",
      "properties": {
        "allowedOrigins": {
          "description": "Gets or sets the list of origins that should be allowed to make cross-origin\n calls (for example: http://example.com:12345). Use \"*\" to allow all.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CsmPublishingProfileOptions": {
      "description": "Publishing options for requested profile.",
      "type": "object",
      "properties": {
        "format": {
          "description": "Name of the format. Valid values are: \n FileZilla3\n WebDeploy -- default\n Ftp",
          "enum": [
            "FileZilla3",
            "WebDeploy",
            "Ftp"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublishingProfileFormat",
            "modelAsString": true
          }
        }
      }
    },
    "CsmSlotEntity": {
      "description": "Deployment slot parameters.",
      "required": [
        "targetSlot",
        "preserveVnet"
      ],
      "type": "object",
      "properties": {
        "targetSlot": {
          "description": "Destination deployment slot during swap operation.",
          "type": "string"
        },
        "preserveVnet": {
          "description": "<code>true</code> to preserve Virtual Network to the slot during swap; otherwise, <code>false</code>.",
          "type": "boolean"
        }
      }
    },
    "CsmUsageQuota": {
      "description": "Usage of the quota resource.",
      "type": "object",
      "properties": {
        "unit": {
          "description": "Units of measurement for the quota resourse.",
          "type": "string"
        },
        "nextResetTime": {
          "format": "date-time",
          "description": "Next reset time for the resource counter.",
          "type": "string"
        },
        "currentValue": {
          "format": "int64",
          "description": "The current value of the resource counter.",
          "type": "integer"
        },
        "limit": {
          "format": "int64",
          "description": "The resource limit.",
          "type": "integer"
        },
        "name": {
          "$ref": "#/definitions/LocalizableString",
          "description": "Quota name."
        }
      }
    },
    "CsmUsageQuotaCollection": {
      "description": "Collection of CSM usage quotas.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CsmUsageQuota"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "CustomHostnameAnalysisResult": {
      "description": "Custom domain analysis.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "CustomHostnameAnalysisResult resource specific properties",
          "properties": {
            "isHostnameAlreadyVerified": {
              "description": "<code>true</code> if hostname is already verified; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "customDomainVerificationTest": {
              "description": "DNS verification test result.",
              "enum": [
                "Passed",
                "Failed",
                "Skipped"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "DnsVerificationTestResult",
                "modelAsString": false
              }
            },
            "customDomainVerificationFailureInfo": {
              "$ref": "#/definitions/ErrorEntity",
              "description": "Raw failure information if DNS verification fails.",
              "readOnly": true
            },
            "hasConflictOnScaleUnit": {
              "description": "<code>true</code> if there is a conflict on a scale unit; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "hasConflictAcrossSubscription": {
              "description": "<code>true</code> if htere is a conflict across subscriptions; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "conflictingAppResourceId": {
              "description": "Name of the conflicting app on scale unit if it's within the same subscription.",
              "type": "string",
              "readOnly": true
            },
            "cNameRecords": {
              "description": "CName records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "txtRecords": {
              "description": "TXT records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "aRecords": {
              "description": "A records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alternateCNameRecords": {
              "description": "Alternate CName records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alternateTxtRecords": {
              "description": "Alternate TXT records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DatabaseBackupSetting": {
      "description": "Database backup settings.",
      "required": [
        "databaseType"
      ],
      "type": "object",
      "properties": {
        "databaseType": {
          "description": "Database type (e.g. SqlAzure / MySql).",
          "enum": [
            "SqlAzure",
            "MySql",
            "LocalMySql",
            "PostgreSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DatabaseType",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string"
        },
        "connectionStringName": {
          "description": "Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.\n This is used during restore with overwrite connection strings options.",
          "type": "string"
        },
        "connectionString": {
          "description": "Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.",
          "type": "string"
        }
      }
    },
    "Deployment": {
      "description": "User crendentials used for publishing activity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Deployment resource specific properties",
          "properties": {
            "id": {
              "description": "Identifier for deployment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "status": {
              "format": "int32",
              "description": "Deployment status.",
              "type": "integer"
            },
            "message": {
              "description": "Details about deployment status.",
              "type": "string"
            },
            "author": {
              "description": "Who authored the deployment.",
              "type": "string"
            },
            "deployer": {
              "description": "Who performed the deployment.",
              "type": "string"
            },
            "authorEmail": {
              "description": "Author email.",
              "type": "string"
            },
            "startTime": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "endTime": {
              "format": "date-time",
              "description": "End time.",
              "type": "string"
            },
            "active": {
              "description": "True if deployment is currently active, false if completed and null if not started.",
              "type": "boolean"
            },
            "details": {
              "description": "Details on deployment.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DeploymentCollection": {
      "description": "Collection of app deployments.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "EnabledConfig": {
      "description": "Enabled configuration.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
          "type": "boolean"
        }
      }
    },
    "ErrorEntity": {
      "description": "Body of the error response returned from the API.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Basic error code.",
          "type": "string"
        },
        "message": {
          "description": "Any details of the error.",
          "type": "string"
        },
        "extendedCode": {
          "description": "Type of error.",
          "type": "string"
        },
        "messageTemplate": {
          "description": "Message template.",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the template.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "innerErrors": {
          "description": "Inner errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          }
        }
      }
    },
    "Experiments": {
      "description": "Routing rules in production experiments.",
      "type": "object",
      "properties": {
        "rampUpRules": {
          "description": "List of ramp-up rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RampUpRule"
          }
        }
      }
    },
    "FileSystemApplicationLogsConfig": {
      "description": "Application logs to file system configuration.",
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "default": "Off",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        }
      }
    },
    "FileSystemHttpLogsConfig": {
      "description": "Http logs to file system configuration.",
      "type": "object",
      "properties": {
        "retentionInMb": {
          "format": "int32",
          "description": "Maximum size in megabytes that http log files can use.\n When reached old log files will be removed to make space for new ones.\n Value can range between 25 and 100.",
          "maximum": 100,
          "minimum": 25,
          "type": "integer"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\n Remove files older than X days.\n 0 or lower means no retention.",
          "type": "integer"
        },
        "enabled": {
          "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
          "type": "boolean"
        }
      }
    },
    "FunctionEnvelope": {
      "description": "Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "FunctionEnvelope resource specific properties",
          "properties": {
            "name": {
              "description": "Function name.",
              "type": "string",
              "readOnly": true
            },
            "functionAppId": {
              "description": "Function App ID.",
              "type": "string",
              "readOnly": true
            },
            "scriptRootPathHref": {
              "description": "Script root path URI.",
              "type": "string"
            },
            "scriptHref": {
              "description": "Script URI.",
              "type": "string"
            },
            "configHref": {
              "description": "Config URI.",
              "type": "string"
            },
            "secretsFileHref": {
              "description": "Secrets file URI.",
              "type": "string"
            },
            "href": {
              "description": "Function URI.",
              "type": "string"
            },
            "config": {
              "description": "Config information.",
              "type": "object"
            },
            "files": {
              "description": "File list.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "testData": {
              "description": "Test data used when testing via the Azure Portal.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "FunctionEnvelopeCollection": {
      "description": "Collection of Kudu function information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunctionEnvelope"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "FunctionSecrets": {
      "description": "Function secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "FunctionSecrets resource specific properties",
          "properties": {
            "key": {
              "description": "Secret key.",
              "type": "string"
            },
            "triggerUrl": {
              "description": "Trigger URL.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HandlerMapping": {
      "description": "The IIS handler mappings used to define which handler processes HTTP requests with certain extension. \n For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.",
      "type": "object",
      "properties": {
        "extension": {
          "description": "Requests with this extension will be handled using the specified FastCGI application.",
          "type": "string"
        },
        "scriptProcessor": {
          "description": "The absolute path to the FastCGI application.",
          "type": "string"
        },
        "arguments": {
          "description": "Command-line arguments to be passed to the script processor.",
          "type": "string"
        }
      }
    },
    "HostNameBinding": {
      "description": "A hostname binding object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HostNameBinding resource specific properties",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Hostname.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "siteName": {
              "description": "App Service app name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "domainId": {
              "description": "Fully qualified ARM domain resource URI.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "azureResourceName": {
              "description": "Azure resource name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "azureResourceType": {
              "description": "Azure resource type.",
              "enum": [
                "Website",
                "TrafficManager"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AzureResourceType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "customHostNameDnsRecordType": {
              "description": "Custom DNS record type.",
              "enum": [
                "CName",
                "A"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CustomHostNameDnsRecordType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "hostNameType": {
              "description": "Hostname type.",
              "enum": [
                "Verified",
                "Managed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "HostNameType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "sslState": {
              "description": "SSL type",
              "enum": [
                "Disabled",
                "SniEnabled",
                "IpBasedEnabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SslState",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "thumbprint": {
              "description": "SSL certificate thumbprint",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "virtualIP": {
              "description": "Virtual IP address assigned to the hostname if IP based SSL is enabled.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HostNameBindingCollection": {
      "description": "Collection of hostname bindings.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostNameBinding"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "HostNameSslState": {
      "description": "SSL-enabled hostname.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Hostname.",
          "type": "string"
        },
        "sslState": {
          "description": "SSL type.",
          "enum": [
            "Disabled",
            "SniEnabled",
            "IpBasedEnabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SslState",
            "modelAsString": false
          }
        },
        "virtualIP": {
          "description": "Virtual IP address assigned to the hostname if IP based SSL is enabled.",
          "type": "string"
        },
        "thumbprint": {
          "description": "SSL certificate thumbprint.",
          "type": "string"
        },
        "toUpdate": {
          "description": "Set to <code>true</code> to update existing hostname.",
          "type": "boolean"
        },
        "hostType": {
          "description": "Indicates whether the hostname is a standard or repository hostname.",
          "enum": [
            "Standard",
            "Repository"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HostType",
            "modelAsString": false
          }
        }
      }
    },
    "HostingEnvironmentProfile": {
      "description": "Specification for an App Service Environment to use for this resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource ID of the App Service Environment.",
          "type": "string"
        },
        "name": {
          "description": "Name of the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type of the App Service Environment.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HttpLogsConfig": {
      "description": "Http logs configuration.",
      "type": "object",
      "properties": {
        "fileSystem": {
          "$ref": "#/definitions/FileSystemHttpLogsConfig",
          "description": "Http logs to file system configuration."
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/AzureBlobStorageHttpLogsConfig",
          "description": "Http logs to azure blob storage configuration."
        }
      }
    },
    "HybridConnection": {
      "description": "Hybrid Connection contract. This is used to configure a Hybrid Connection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HybridConnection resource specific properties",
          "properties": {
            "serviceBusNamespace": {
              "description": "The name of the Service Bus namespace.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayName": {
              "description": "The name of the Service Bus relay.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayArmUri": {
              "description": "The ARM URI to the Service Bus relay.",
              "type": "string"
            },
            "hostname": {
              "description": "The hostname of the endpoint.",
              "type": "string"
            },
            "port": {
              "format": "int32",
              "description": "The port of the endpoint.",
              "type": "integer"
            },
            "sendKeyName": {
              "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
              "type": "string"
            },
            "sendKeyValue": {
              "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\n normally, use the POST /listKeys API instead.",
              "type": "string"
            },
            "serviceBusSuffix": {
              "description": "The suffix for the service bus endpoint. By default this is .servicebus.windows.net",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HybridConnectionKey": {
      "description": "Hybrid Connection key contract. This has the send key name and value for a Hybrid Connection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HybridConnectionKey resource specific properties",
          "properties": {
            "sendKeyName": {
              "description": "The name of the send key.",
              "type": "string",
              "readOnly": true
            },
            "sendKeyValue": {
              "description": "The value of the send key.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Identifier": {
      "description": "Identifier.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Identifier resource specific properties",
          "properties": {
            "id": {
              "description": "String representation of the identity.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "IdentifierCollection": {
      "description": "Collection of identifiers.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "IpSecurityRestriction": {
      "description": "IP security restriction on an app.",
      "required": [
        "ipAddress"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "IP address the security restriction is valid for.",
          "type": "string"
        },
        "subnetMask": {
          "description": "Subnet mask for the range of IP addresses the restriction is valid for.",
          "type": "string"
        }
      }
    },
    "LocalizableString": {
      "description": "Localizable string object containing the name and a localized value.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Non-localized name.",
          "type": "string"
        },
        "localizedValue": {
          "description": "Localized name.",
          "type": "string"
        }
      }
    },
    "MSDeploy": {
      "description": "MSDeploy ARM PUT information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MSDeployCore",
          "properties": {
            "addOnPackages": {
              "description": "List of Add-On packages. Add-On packages implicitly enable the Do Not Delete MSDeploy rule.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MSDeployCore"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MSDeployCore": {
      "description": "MSDeploy ARM PUT core information",
      "type": "object",
      "properties": {
        "packageUri": {
          "description": "Package URI",
          "type": "string"
        },
        "connectionString": {
          "description": "SQL Connection String",
          "type": "string"
        },
        "dbType": {
          "description": "Database Type",
          "type": "string"
        },
        "setParametersXmlFileUri": {
          "description": "URI of MSDeploy Parameters file. Must not be set if SetParameters is used.",
          "type": "string"
        },
        "setParameters": {
          "description": "MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "skipAppData": {
          "description": "Controls whether the MSDeploy operation skips the App_Data directory.\n If set to <code>true</code>, the existing App_Data directory on the destination\n will not be deleted, and any App_Data directory in the source will be ignored.\n Setting is <code>false</code> by default.",
          "type": "boolean"
        },
        "appOffline": {
          "description": "Sets the AppOffline rule while the MSDeploy operation executes.\n Setting is <code>false</code> by default.",
          "type": "boolean"
        }
      }
    },
    "MSDeployLog": {
      "description": "MSDeploy log",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MSDeployLog resource specific properties",
          "properties": {
            "entries": {
              "description": "List of log entry messages",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MSDeployLogEntry"
              },
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MSDeployLogEntry": {
      "description": "MSDeploy log entry",
      "type": "object",
      "properties": {
        "time": {
          "format": "date-time",
          "description": "Timestamp of log entry",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Log entry type",
          "enum": [
            "Message",
            "Warning",
            "Error"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "MSDeployLogEntryType",
            "modelAsString": false
          }
        },
        "message": {
          "description": "Log entry message",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MSDeployStatus": {
      "description": "MSDeploy ARM response",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MSDeployStatus resource specific properties",
          "properties": {
            "deployer": {
              "description": "Username of deployer",
              "type": "string",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state",
              "enum": [
                "accepted",
                "running",
                "succeeded",
                "failed",
                "canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "MSDeployProvisioningState",
                "modelAsString": false
              }
            },
            "startTime": {
              "format": "date-time",
              "description": "Start time of deploy operation",
              "type": "string",
              "readOnly": true
            },
            "endTime": {
              "format": "date-time",
              "description": "End time of deploy operation",
              "type": "string",
              "readOnly": true
            },
            "complete": {
              "description": "Whether the deployment operation has completed",
              "type": "boolean",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MigrateMySqlRequest": {
      "description": "MySQL migration request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MigrateMySqlRequest resource specific properties",
          "required": [
            "connectionString",
            "migrationType"
          ],
          "properties": {
            "connectionString": {
              "description": "Connection string to the remote MySQL database.",
              "type": "string"
            },
            "migrationType": {
              "description": "The type of migration operation to be done",
              "enum": [
                "LocalToRemote",
                "RemoteToLocal"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MySqlMigrationType",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MigrateMySqlStatus": {
      "description": "MySQL migration status.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MigrateMySqlStatus resource specific properties",
          "properties": {
            "migrationOperationStatus": {
              "description": "Status of the migration task.",
              "enum": [
                "InProgress",
                "Failed",
                "Succeeded",
                "TimedOut",
                "Created"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "OperationStatus",
                "modelAsString": false
              }
            },
            "operationId": {
              "description": "Operation ID for the migration task.",
              "type": "string",
              "readOnly": true
            },
            "localMySqlEnabled": {
              "description": "True if the web app has in app MySql enabled",
              "type": "boolean",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "NameValuePair": {
      "description": "Name value pair.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Pair name.",
          "type": "string"
        },
        "value": {
          "description": "Pair value.",
          "type": "string"
        }
      }
    },
    "NetworkFeatures": {
      "description": "Full view of network features for an app (presently VNET integration and Hybrid Connections).",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "NetworkFeatures resource specific properties",
          "properties": {
            "virtualNetworkName": {
              "description": "The Virtual Network name.",
              "type": "string",
              "readOnly": true
            },
            "virtualNetworkConnection": {
              "$ref": "#/definitions/VnetInfo",
              "description": "The Virtual Network summary view.",
              "readOnly": true
            },
            "hybridConnections": {
              "description": "The Hybrid Connections summary view.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelayServiceConnectionEntity"
              },
              "readOnly": true
            },
            "hybridConnectionsV2": {
              "description": "The Hybrid Connection V2 (Service Bus) view.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HybridConnection"
              },
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Operation": {
      "description": "Operation.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Operation ID.",
          "type": "string"
        },
        "name": {
          "description": "Operation name.",
          "type": "string"
        },
        "status": {
          "description": "The current status of the operation.",
          "enum": [
            "InProgress",
            "Failed",
            "Succeeded",
            "TimedOut",
            "Created"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperationStatus",
            "modelAsString": false
          }
        },
        "errors": {
          "description": "Any errors associate with the operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          }
        },
        "createdTime": {
          "format": "date-time",
          "description": "Time when operation has started.",
          "type": "string"
        },
        "modifiedTime": {
          "format": "date-time",
          "description": "Time when operation has been updated.",
          "type": "string"
        },
        "expirationTime": {
          "format": "date-time",
          "description": "Time when operation will expire.",
          "type": "string"
        },
        "geoMasterOperationId": {
          "description": "Applicable only for stamp operation ids.",
          "type": "string"
        }
      }
    },
    "PerfMonCounterCollection": {
      "description": "Collection of performance monitor counters.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfMonResponse"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "PerfMonResponse": {
      "description": "Performance monitor API response.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The response code.",
          "type": "string"
        },
        "message": {
          "description": "The message.",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/PerfMonSet",
          "description": "The performance monitor counters."
        }
      }
    },
    "PerfMonSample": {
      "description": "Performance monitor sample in a set.",
      "type": "object",
      "properties": {
        "time": {
          "format": "date-time",
          "description": "Point in time for which counter was measured.",
          "type": "string"
        },
        "instanceName": {
          "description": "Name of the server on which the measurement is made.",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Value of counter at a certain time.",
          "type": "number"
        },
        "coreCount": {
          "format": "int32",
          "description": "Core Count of worker. Not a data member",
          "type": "integer"
        }
      }
    },
    "PerfMonSet": {
      "description": "Metric information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique key name of the counter.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of the period.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of the period.",
          "type": "string"
        },
        "timeGrain": {
          "description": "Presented time grain.",
          "type": "string"
        },
        "values": {
          "description": "Collection of workers that are active during this time.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfMonSample"
          }
        }
      }
    },
    "PremierAddOn": {
      "description": "Premier add-on.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PremierAddOn resource specific properties",
          "properties": {
            "sku": {
              "description": "SKU.",
              "type": "string"
            },
            "product": {
              "description": "Product.",
              "type": "string"
            },
            "vendor": {
              "description": "Vendor.",
              "type": "string"
            },
            "name": {
              "description": "Name.",
              "type": "string",
              "x-ms-client-name": "PremierAddOnName"
            },
            "location": {
              "description": "Location.",
              "type": "string"
            },
            "tags": {
              "description": "Tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "marketplacePublisher": {
              "description": "Marketplace publisher.",
              "type": "string"
            },
            "marketplaceOffer": {
              "description": "Marketplace offer.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessInfo": {
      "description": "Process Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ProcessInfo resource specific properties",
          "properties": {
            "id": {
              "format": "int32",
              "description": "ARM Identifier for deployment.",
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "name": {
              "description": "Deployment name.",
              "type": "string"
            },
            "href": {
              "description": "HRef URI.",
              "type": "string"
            },
            "miniDump": {
              "description": "Minidump URI.",
              "type": "string"
            },
            "isProfileRunning": {
              "description": "Is profile running?",
              "type": "boolean"
            },
            "isIisProfileRunning": {
              "description": "Is the IIS Profile running?",
              "type": "boolean"
            },
            "iisProfileTimeoutInSeconds": {
              "format": "double",
              "description": "IIS Profile timeout (seconds).",
              "type": "number"
            },
            "parent": {
              "description": "Parent process.",
              "type": "string"
            },
            "children": {
              "description": "Child process list.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "threads": {
              "description": "Thread list.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessThreadInfo"
              }
            },
            "openFileHandles": {
              "description": "List of open files.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "modules": {
              "description": "List of modules.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessModuleInfo"
              }
            },
            "fileName": {
              "description": "File name of this process.",
              "type": "string"
            },
            "commandLine": {
              "description": "Command line.",
              "type": "string"
            },
            "userName": {
              "description": "User name.",
              "type": "string"
            },
            "handleCount": {
              "format": "int32",
              "description": "Handle count.",
              "type": "integer"
            },
            "moduleCount": {
              "format": "int32",
              "description": "Module count.",
              "type": "integer"
            },
            "threadCount": {
              "format": "int32",
              "description": "Thread count.",
              "type": "integer"
            },
            "startTime": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string"
            },
            "totalProcessorTime": {
              "description": "Total CPU time.",
              "type": "string"
            },
            "userProcessorTime": {
              "description": "User CPU time.",
              "type": "string"
            },
            "privilegedProcessorTime": {
              "description": "Privileged CPU time.",
              "type": "string"
            },
            "workingSet64": {
              "format": "int64",
              "description": "Working set.",
              "type": "integer"
            },
            "peakWorkingSet64": {
              "format": "int64",
              "description": "Peak working set.",
              "type": "integer"
            },
            "privateMemorySize64": {
              "format": "int64",
              "description": "Private memory size.",
              "type": "integer"
            },
            "virtualMemorySize64": {
              "format": "int64",
              "description": "Virtual memory size.",
              "type": "integer"
            },
            "peakVirtualMemorySize64": {
              "format": "int64",
              "description": "Peak virtual memory usage.",
              "type": "integer"
            },
            "pagedSystemMemorySize64": {
              "format": "int64",
              "description": "Paged system memory.",
              "type": "integer"
            },
            "nonpagedSystemMemorySize64": {
              "format": "int64",
              "description": "Non-paged system memory.",
              "type": "integer"
            },
            "pagedMemorySize64": {
              "format": "int64",
              "description": "Paged memory.",
              "type": "integer"
            },
            "peakPagedMemorySize64": {
              "format": "int64",
              "description": "Peak paged memory.",
              "type": "integer"
            },
            "timeStamp": {
              "format": "date-time",
              "description": "Time stamp.",
              "type": "string"
            },
            "environmentVariables": {
              "description": "List of environment variables.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "isScmSite": {
              "description": "Is this the SCM site?",
              "type": "boolean"
            },
            "isWebJob": {
              "description": "Is this a Web Job?",
              "type": "boolean"
            },
            "description": {
              "description": "Description of process.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessInfoCollection": {
      "description": "Collection of Kudu process information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "ProcessModuleInfo": {
      "description": "Process Module Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ProcessModuleInfo resource specific properties",
          "properties": {
            "baseAddress": {
              "description": "Base address. Used as module identifier in ARM resource URI.",
              "type": "string"
            },
            "fileName": {
              "description": "File name.",
              "type": "string"
            },
            "href": {
              "description": "HRef URI.",
              "type": "string"
            },
            "filePath": {
              "description": "File path.",
              "type": "string"
            },
            "moduleMemorySize": {
              "format": "int32",
              "description": "Module memory size.",
              "type": "integer"
            },
            "fileVersion": {
              "description": "File version.",
              "type": "string"
            },
            "fileDescription": {
              "description": "File description.",
              "type": "string"
            },
            "product": {
              "description": "Product name.",
              "type": "string"
            },
            "productVersion": {
              "description": "Product version.",
              "type": "string"
            },
            "isDebug": {
              "description": "Is debug?",
              "type": "boolean"
            },
            "language": {
              "description": "Module language (locale).",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessModuleInfoCollection": {
      "description": "Collection of Kudu thread information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessModuleInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "ProcessThreadInfo": {
      "description": "Process Thread Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ProcessThreadInfo resource specific properties",
          "properties": {
            "id": {
              "format": "int32",
              "description": "ARM Identifier for deployment.",
              "type": "integer"
            },
            "href": {
              "description": "HRef URI.",
              "type": "string"
            },
            "process": {
              "description": "Process URI.",
              "type": "string"
            },
            "startAddress": {
              "description": "Start address.",
              "type": "string"
            },
            "currentPriority": {
              "format": "int32",
              "description": "Current thread priority.",
              "type": "integer"
            },
            "priorityLevel": {
              "description": "Thread priority level.",
              "type": "string"
            },
            "basePriority": {
              "format": "int32",
              "description": "Base priority.",
              "type": "integer"
            },
            "startTime": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string"
            },
            "totalProcessorTime": {
              "description": "Total processor time.",
              "type": "string"
            },
            "userProcessorTime": {
              "description": "User processor time.",
              "type": "string"
            },
            "priviledgedProcessorTime": {
              "description": "Priviledged processor time.",
              "type": "string"
            },
            "state": {
              "description": "Thread state.",
              "type": "string"
            },
            "waitReason": {
              "description": "Wait reason.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessThreadInfoCollection": {
      "description": "Collection of Kudu thread information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessThreadInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "ProxyOnlyResource": {
      "description": "Azure proxy only resource. This resource is not tracked by Azure Resource Manager.",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "PublicCertificate": {
      "description": "Public certificate object",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PublicCertificate resource specific properties",
          "properties": {
            "blob": {
              "description": "Public Certificate byte array",
              "type": "string"
            },
            "publicCertificateLocation": {
              "description": "Public Certificate Location",
              "enum": [
                "CurrentUserMy",
                "LocalMachineMy",
                "Unknown"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicCertificateLocation",
                "modelAsString": false
              }
            },
            "thumbprint": {
              "description": "Certificate Thumbprint",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PublicCertificateCollection": {
      "description": "Collection of public certificates",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicCertificate"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "PushSettings": {
      "description": "Push settings for the App.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PushSettings resource specific properties",
          "required": [
            "isPushEnabled"
          ],
          "properties": {
            "isPushEnabled": {
              "description": "Gets or sets a flag indicating whether the Push endpoint is enabled.",
              "type": "boolean"
            },
            "tagWhitelistJson": {
              "description": "Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.",
              "type": "string"
            },
            "tagsRequiringAuth": {
              "description": "Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.\n Tags can consist of alphanumeric characters and the following:\n '_', '@', '#', '.', ':', '-'. \n Validation should be performed at the PushRequestHandler.",
              "type": "string"
            },
            "dynamicTagsJson": {
              "description": "Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RampUpRule": {
      "description": "Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.",
      "type": "object",
      "properties": {
        "actionHostName": {
          "description": "Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.",
          "type": "string"
        },
        "reroutePercentage": {
          "format": "double",
          "description": "Percentage of the traffic which will be redirected to <code>ActionHostName</code>.",
          "type": "number"
        },
        "changeStep": {
          "format": "double",
          "description": "In auto ramp up scenario this is the step to to add/remove from <code>ReroutePercentage</code> until it reaches \n <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specificed in <code>ChangeIntervalInMinutes</code>.\n Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.",
          "type": "number"
        },
        "changeIntervalInMinutes": {
          "format": "int32",
          "description": "Specifies interval in mimuntes to reevaluate ReroutePercentage.",
          "type": "integer"
        },
        "minReroutePercentage": {
          "format": "double",
          "description": "Specifies lower boundary above which ReroutePercentage will stay.",
          "type": "number"
        },
        "maxReroutePercentage": {
          "format": "double",
          "description": "Specifies upper boundary below which ReroutePercentage will stay.",
          "type": "number"
        },
        "changeDecisionCallbackUrl": {
          "description": "Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.\n https://www.siteextensions.net/packages/TiPCallback/",
          "type": "string"
        },
        "name": {
          "description": "Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.",
          "type": "string"
        }
      }
    },
    "RelayServiceConnectionEntity": {
      "description": "Hybrid Connection for an App Service app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RelayServiceConnectionEntity resource specific properties",
          "properties": {
            "entityName": {
              "type": "string"
            },
            "entityConnectionString": {
              "type": "string"
            },
            "resourceType": {
              "type": "string"
            },
            "resourceConnectionString": {
              "type": "string"
            },
            "hostname": {
              "type": "string"
            },
            "port": {
              "format": "int32",
              "type": "integer"
            },
            "biztalkUri": {
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RequestsBasedTrigger": {
      "description": "Trigger based on total requests.",
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "description": "Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "Azure resource. This resource is tracked in Azure Resource Manager",
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "location": {
          "description": "Resource Location.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ResourceMetric": {
      "description": "Object representing a metric for any resource .",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/ResourceMetricName",
          "description": "Name of metric.",
          "readOnly": true
        },
        "unit": {
          "description": "Metric unit.",
          "type": "string",
          "readOnly": true
        },
        "timeGrain": {
          "description": "Metric granularity. E.g PT1H, PT5M, P1D",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "format": "date-time",
          "description": "Metric start time.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "format": "date-time",
          "description": "Metric end time.",
          "type": "string",
          "readOnly": true
        },
        "resourceId": {
          "description": "Metric resource Id.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "metricValues": {
          "description": "Metric values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetricValue"
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetricProperty"
          },
          "readOnly": true
        }
      }
    },
    "ResourceMetricAvailability": {
      "description": "Metrics availability and retention.",
      "type": "object",
      "properties": {
        "timeGrain": {
          "description": "Time grain .",
          "type": "string",
          "readOnly": true
        },
        "retention": {
          "description": "Retention period for the current time grain.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceMetricCollection": {
      "description": "Collection of metric responses.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetric"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "ResourceMetricDefinition": {
      "description": "Metadata for the metrics.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ResourceMetricDefinition resource specific properties",
          "properties": {
            "name": {
              "$ref": "#/definitions/ResourceMetricName",
              "description": "Name of the metric.",
              "readOnly": true
            },
            "unit": {
              "description": "Unit of the metric.",
              "type": "string",
              "readOnly": true
            },
            "primaryAggregationType": {
              "description": "Primary aggregation type.",
              "type": "string",
              "readOnly": true
            },
            "metricAvailabilities": {
              "description": "List of time grains supported for the metric together with retention period.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceMetricAvailability"
              },
              "readOnly": true
            },
            "resourceUri": {
              "description": "Resource URI.",
              "type": "string",
              "readOnly": true
            },
            "id": {
              "description": "Resource ID.",
              "type": "string",
              "readOnly": true
            },
            "properties": {
              "description": "Properties.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ResourceMetricDefinitionCollection": {
      "description": "Collection of metric definitions.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetricDefinition"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "ResourceMetricName": {
      "description": "Name of a metric for any resource .",
      "type": "object",
      "properties": {
        "value": {
          "description": "metric name value.",
          "type": "string",
          "readOnly": true
        },
        "localizedValue": {
          "description": "Localized metric name value.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceMetricProperty": {
      "description": "Resource metric property.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Key for resource metric property.",
          "type": "string"
        },
        "value": {
          "description": "Value of pair.",
          "type": "string"
        }
      }
    },
    "ResourceMetricValue": {
      "description": "Value of resource metric.",
      "type": "object",
      "properties": {
        "timestamp": {
          "description": "Value timestamp.",
          "type": "string",
          "readOnly": true
        },
        "average": {
          "format": "float",
          "description": "Value average.",
          "type": "number",
          "readOnly": true
        },
        "minimum": {
          "format": "float",
          "description": "Value minimum.",
          "type": "number",
          "readOnly": true
        },
        "maximum": {
          "format": "float",
          "description": "Value maximum.",
          "type": "number",
          "readOnly": true
        },
        "total": {
          "format": "float",
          "description": "Value total.",
          "type": "number",
          "readOnly": true
        },
        "count": {
          "format": "float",
          "description": "Value count.",
          "type": "number",
          "readOnly": true
        },
        "properties": {
          "description": "Properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetricProperty"
          },
          "readOnly": true
        }
      }
    },
    "RestoreRequest": {
      "description": "Description of a restore request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RestoreRequest resource specific properties",
          "required": [
            "storageAccountUrl",
            "overwrite"
          ],
          "properties": {
            "storageAccountUrl": {
              "description": "SAS URL to the container.",
              "type": "string"
            },
            "blobName": {
              "description": "Name of a blob which contains the backup.",
              "type": "string"
            },
            "overwrite": {
              "description": "<code>true</code> if the restore operation can overwrite target app; otherwise, <code>false</code>. <code>true</code> is needed if trying to restore over an existing app.",
              "type": "boolean"
            },
            "siteName": {
              "description": "Name of an app.",
              "type": "string"
            },
            "databases": {
              "description": "Collection of databases which should be restored. This list has to match the list of databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              }
            },
            "ignoreConflictingHostNames": {
              "description": "Changes a logic when restoring an app with custom domains. <code>true</code> to remove custom domains automatically. If <code>false</code>, custom domains are added to \n the app's object when it is being restored, but that might fail due to conflicts during the operation.",
              "default": false,
              "type": "boolean"
            },
            "ignoreDatabases": {
              "description": "Ignore the databases and only restore the site content",
              "default": false,
              "type": "boolean"
            },
            "appServicePlan": {
              "description": "Specify app service plan that will own restored site.",
              "type": "string"
            },
            "operationType": {
              "description": "Operation type.",
              "default": "Default",
              "enum": [
                "Default",
                "Clone",
                "Relocation",
                "Snapshot"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BackupRestoreOperationType",
                "modelAsString": false
              }
            },
            "adjustConnectionStrings": {
              "description": "<code>true</code> if SiteConfig.ConnectionStrings should be set in new app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "hostingEnvironment": {
              "description": "App Service Environment name, if needed (only when restoring an app to an App Service Environment).",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RestoreResponse": {
      "description": "Response for an app restore request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RestoreResponse resource specific properties",
          "properties": {
            "operationId": {
              "description": "When server starts the restore process, it will return an operation ID identifying that particular restore operation.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Site": {
      "description": "A web app, a mobile app backend, or an API app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Site resource specific properties",
          "properties": {
            "state": {
              "description": "Current state of the app.",
              "type": "string",
              "readOnly": true
            },
            "hostNames": {
              "description": "Hostnames associated with the app.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "repositorySiteName": {
              "description": "Name of the repository site.",
              "type": "string",
              "readOnly": true
            },
            "usageState": {
              "description": "State indicating whether the app has exceeded its quota usage. Read-only.",
              "enum": [
                "Normal",
                "Exceeded"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "UsageState",
                "modelAsString": false
              }
            },
            "enabled": {
              "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
              "type": "boolean"
            },
            "enabledHostNames": {
              "description": "Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,\n the app is not served on those hostnames.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "availabilityState": {
              "description": "Management information availability state for the app.",
              "enum": [
                "Normal",
                "Limited",
                "DisasterRecoveryMode"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "SiteAvailabilityState",
                "modelAsString": false
              }
            },
            "hostNameSslStates": {
              "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostNameSslState"
              }
            },
            "serverFarmId": {
              "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
              "type": "string"
            },
            "reserved": {
              "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "lastModifiedTimeUtc": {
              "format": "date-time",
              "description": "Last time the app was modified, in UTC. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "siteConfig": {
              "$ref": "#/definitions/SiteConfig",
              "description": "Configuration of the app."
            },
            "trafficManagerHostNames": {
              "description": "Azure Traffic Manager hostnames associated with the app. Read-only.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "scmSiteAlsoStopped": {
              "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
              "default": false,
              "type": "boolean"
            },
            "targetSwapSlot": {
              "description": "Specifies which deployment slot this app will swap into. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "App Service Environment to use for the app.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "clientAffinityEnabled": {
              "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
              "type": "boolean"
            },
            "clientCertEnabled": {
              "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
              "type": "boolean"
            },
            "hostNamesDisabled": {
              "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\n If <code>true</code>, the app is only accessible via API management process.",
              "type": "boolean"
            },
            "outboundIpAddresses": {
              "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Read-only.",
              "type": "string",
              "readOnly": true
            },
            "containerSize": {
              "format": "int32",
              "description": "Size of the function container.",
              "type": "integer"
            },
            "dailyMemoryTimeQuota": {
              "format": "int32",
              "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
              "type": "integer"
            },
            "suspendedTill": {
              "format": "date-time",
              "description": "App suspended till in case memory-time quota is exceeded.",
              "type": "string",
              "readOnly": true
            },
            "maxNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of workers.\n This only applies to Functions container.",
              "type": "integer",
              "readOnly": true
            },
            "cloningInfo": {
              "$ref": "#/definitions/CloningInfo",
              "description": "If specified during app creation, the app is cloned from a source app.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "snapshotInfo": {
              "$ref": "#/definitions/SnapshotRecoveryRequest",
              "description": "If specified during app creation, the app is created from a previous snapshot.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "resourceGroup": {
              "description": "Name of the resource group the app belongs to. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "isDefaultContainer": {
              "description": "<code>true</code> if the app is a default container; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "defaultHostName": {
              "description": "Default hostname of the app. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "slotSwapStatus": {
              "$ref": "#/definitions/SlotSwapStatus",
              "description": "Status of the last deployment slot swap operation.",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteAuthSettings": {
      "description": "Configuration settings for the Azure App Service Authentication / Authorization feature.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteAuthSettings resource specific properties",
          "properties": {
            "enabled": {
              "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "runtimeVersion": {
              "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\n The setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
              "type": "string"
            },
            "unauthenticatedClientAction": {
              "description": "The action to take when an unauthenticated client attempts to access the app.",
              "enum": [
                "RedirectToLoginPage",
                "AllowAnonymous"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "UnauthenticatedClientAction",
                "modelAsString": false
              }
            },
            "tokenStoreEnabled": {
              "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
              "type": "boolean"
            },
            "allowedExternalRedirectUrls": {
              "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\n This is an advanced setting typically only needed by Windows Store application backends.\n Note that URLs within the current domain are always implicitly allowed.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defaultProvider": {
              "description": "The default authentication provider to use when multiple providers are configured.\n This setting is only needed if multiple providers are configured and the unauthenticated client\n action is set to \"RedirectToLoginPage\".",
              "enum": [
                "AzureActiveDirectory",
                "Facebook",
                "Google",
                "MicrosoftAccount",
                "Twitter"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BuiltInAuthenticationProvider",
                "modelAsString": false
              }
            },
            "tokenRefreshExtensionHours": {
              "format": "double",
              "description": "The number of hours after session token expiration that a session token can be used to\n call the token refresh API. The default is 72 hours.",
              "type": "number"
            },
            "clientId": {
              "description": "The Client ID of this relying party application, known as the client_id.\n This setting is required for enabling OpenID Connection authentication with Azure Active Directory or \n other 3rd party OpenID Connect providers.\n More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
              "type": "string"
            },
            "clientSecret": {
              "description": "The Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).\n This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.\n Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.\n More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
              "type": "string"
            },
            "issuer": {
              "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\n When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.\n This URI is a case-sensitive identifier for the token issuer.\n More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
              "type": "string"
            },
            "allowedAudiences": {
              "description": "Allowed audience values to consider when validating JWTs issued by \n Azure Active Directory. Note that the <code>ClientID</code> value is always considered an\n allowed audience, regardless of this setting.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "additionalLoginParams": {
              "description": "Login parameters to send to the OpenID Connect authorization endpoint when\n a user logs in. Each parameter must be in the form \"key=value\".",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "googleClientId": {
              "description": "The OpenID Connect Client ID for the Google web application.\n This setting is required for enabling Google Sign-In.\n Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "string"
            },
            "googleClientSecret": {
              "description": "The client secret associated with the Google web application.\n This setting is required for enabling Google Sign-In.\n Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "string"
            },
            "googleOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.\n This setting is optional. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.\n Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "facebookAppId": {
              "description": "The App ID of the Facebook app used for login.\n This setting is required for enabling Facebook Login.\n Facebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "string"
            },
            "facebookAppSecret": {
              "description": "The App Secret of the Facebook app used for Facebook Login.\n This setting is required for enabling Facebook Login.\n Facebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "string"
            },
            "facebookOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.\n This setting is optional.\n Facebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "twitterConsumerKey": {
              "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\n This setting is required for enabling Twitter Sign-In.\n Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
              "type": "string"
            },
            "twitterConsumerSecret": {
              "description": "The OAuth 1.0a consumer secret of the Twitter application used for sign-in.\n This setting is required for enabling Twitter Sign-In.\n Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
              "type": "string"
            },
            "microsoftAccountClientId": {
              "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\n This setting is required for enabling Microsoft Account authentication.\n Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
              "type": "string"
            },
            "microsoftAccountClientSecret": {
              "description": "The OAuth 2.0 client secret that was created for the app used for authentication.\n This setting is required for enabling Microsoft Account authentication.\n Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
              "type": "string"
            },
            "microsoftAccountOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.\n This setting is optional. If not specified, \"wl.basic\" is used as the default scope.\n Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteCloneability": {
      "description": "Represents whether or not an app is cloneable.",
      "type": "object",
      "properties": {
        "result": {
          "description": "Name of app.",
          "enum": [
            "Cloneable",
            "PartiallyCloneable",
            "NotCloneable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CloneAbilityResult",
            "modelAsString": false
          }
        },
        "blockingFeatures": {
          "description": "List of features enabled on app that prevent cloning.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        },
        "unsupportedFeatures": {
          "description": "List of features enabled on app that are non-blocking but cannot be cloned. The app can still be cloned\n but the features in this list will not be set up on cloned app.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        },
        "blockingCharacteristics": {
          "description": "List of blocking application characteristics.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        }
      }
    },
    "SiteCloneabilityCriterion": {
      "description": "An app cloneability criterion.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of criterion.",
          "type": "string"
        },
        "description": {
          "description": "Description of criterion.",
          "type": "string"
        }
      }
    },
    "SiteConfig": {
      "description": "Configuration of an App Service app.",
      "type": "object",
      "properties": {
        "numberOfWorkers": {
          "format": "int32",
          "description": "Number of workers.",
          "type": "integer"
        },
        "defaultDocuments": {
          "description": "Default documents.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "netFrameworkVersion": {
          "description": ".NET Framework version.",
          "default": "v4.6",
          "type": "string"
        },
        "phpVersion": {
          "description": "Version of PHP.",
          "type": "string"
        },
        "pythonVersion": {
          "description": "Version of Python.",
          "type": "string"
        },
        "nodeVersion": {
          "description": "Version of Node.js.",
          "type": "string"
        },
        "linuxFxVersion": {
          "description": "Linux App Framework and version",
          "type": "string"
        },
        "requestTracingEnabled": {
          "description": "<code>true</code> if request tracing is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "requestTracingExpirationTime": {
          "format": "date-time",
          "description": "Request tracing expiration time.",
          "type": "string"
        },
        "remoteDebuggingEnabled": {
          "description": "<code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "remoteDebuggingVersion": {
          "description": "Remote debugging version.",
          "type": "string"
        },
        "httpLoggingEnabled": {
          "description": "<code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "logsDirectorySizeLimit": {
          "format": "int32",
          "description": "HTTP logs directory size limit.",
          "type": "integer"
        },
        "detailedErrorLoggingEnabled": {
          "description": "<code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "publishingUsername": {
          "description": "Publishing user name.",
          "type": "string"
        },
        "appSettings": {
          "description": "Application settings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        },
        "connectionStrings": {
          "description": "Connection strings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnStringInfo"
          }
        },
        "machineKey": {
          "$ref": "#/definitions/SiteMachineKey",
          "description": "Site MachineKey.",
          "readOnly": true
        },
        "handlerMappings": {
          "description": "Handler mappings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HandlerMapping"
          }
        },
        "documentRoot": {
          "description": "Document root.",
          "type": "string"
        },
        "scmType": {
          "description": "SCM type.",
          "enum": [
            "None",
            "Dropbox",
            "Tfs",
            "LocalGit",
            "GitHub",
            "CodePlexGit",
            "CodePlexHg",
            "BitbucketGit",
            "BitbucketHg",
            "ExternalGit",
            "ExternalHg",
            "OneDrive",
            "VSO"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ScmType",
            "modelAsString": true
          }
        },
        "use32BitWorkerProcess": {
          "description": "<code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "webSocketsEnabled": {
          "description": "<code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "alwaysOn": {
          "description": "<code>true</code> if Always On is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "javaVersion": {
          "description": "Java version.",
          "type": "string"
        },
        "javaContainer": {
          "description": "Java container.",
          "type": "string"
        },
        "javaContainerVersion": {
          "description": "Java container version.",
          "type": "string"
        },
        "appCommandLine": {
          "description": "App command line to launch.",
          "type": "string"
        },
        "managedPipelineMode": {
          "description": "Managed pipeline mode.",
          "enum": [
            "Integrated",
            "Classic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagedPipelineMode",
            "modelAsString": false
          }
        },
        "virtualApplications": {
          "description": "Virtual applications.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualApplication"
          }
        },
        "loadBalancing": {
          "description": "Site load balancing.",
          "enum": [
            "WeightedRoundRobin",
            "LeastRequests",
            "LeastResponseTime",
            "WeightedTotalTraffic",
            "RequestHash"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SiteLoadBalancing",
            "modelAsString": false
          }
        },
        "experiments": {
          "$ref": "#/definitions/Experiments",
          "description": "This is work around for polymophic types."
        },
        "limits": {
          "$ref": "#/definitions/SiteLimits",
          "description": "Site limits."
        },
        "autoHealEnabled": {
          "description": "<code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "autoHealRules": {
          "$ref": "#/definitions/AutoHealRules",
          "description": "Auto Heal rules."
        },
        "tracingOptions": {
          "description": "Tracing options.",
          "type": "string"
        },
        "vnetName": {
          "description": "Virtual Network name.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "cors": {
          "$ref": "#/definitions/CorsSettings",
          "description": "Cross-Origin Resource Sharing (CORS) settings."
        },
        "push": {
          "$ref": "#/definitions/PushSettings",
          "description": "Push endpoint settings."
        },
        "apiDefinition": {
          "$ref": "#/definitions/ApiDefinitionInfo",
          "description": "Information about the formal API definition for the app."
        },
        "autoSwapSlotName": {
          "description": "Auto-swap slot name.",
          "type": "string"
        },
        "localMySqlEnabled": {
          "description": "<code>true</code> to enable local MySQL; otherwise, <code>false</code>.",
          "default": false,
          "type": "boolean"
        },
        "ipSecurityRestrictions": {
          "description": "IP security restrictions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpSecurityRestriction"
          }
        }
      }
    },
    "SiteConfigResource": {
      "description": "Web app configuration ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SiteConfig",
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteConfigResourceCollection": {
      "description": "Collection of site configurations.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteConfigResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "SiteConfigurationSnapshotInfo": {
      "description": "A snapshot of a web app configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteConfigurationSnapshotInfo resource specific properties",
          "properties": {
            "time": {
              "format": "date-time",
              "description": "The time the snapshot was taken.",
              "type": "string",
              "readOnly": true
            },
            "id": {
              "format": "int32",
              "description": "The id of the snapshot",
              "type": "integer",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteExtensionInfo": {
      "description": "Site Extension Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteExtensionInfo resource specific properties",
          "properties": {
            "id": {
              "description": "Site extension ID.",
              "type": "string"
            },
            "title": {
              "description": "Site extension title.",
              "type": "string"
            },
            "type": {
              "description": "Site extension type.",
              "enum": [
                "Gallery",
                "WebRoot"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SiteExtensionType",
                "modelAsString": false
              }
            },
            "summary": {
              "description": "Summary description.",
              "type": "string"
            },
            "description": {
              "description": "Detailed description.",
              "type": "string"
            },
            "version": {
              "description": "Version information.",
              "type": "string"
            },
            "extensionUrl": {
              "description": "Extension URL.",
              "type": "string"
            },
            "projectUrl": {
              "description": "Project URL.",
              "type": "string"
            },
            "iconUrl": {
              "description": "Icon URL.",
              "type": "string"
            },
            "licenseUrl": {
              "description": "License URL.",
              "type": "string"
            },
            "feedUrl": {
              "description": "Feed URL.",
              "type": "string"
            },
            "authors": {
              "description": "List of authors.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "installationArgs": {
              "description": "Installer command line parameters.",
              "type": "string"
            },
            "publishedDateTime": {
              "format": "date-time",
              "description": "Published timestamp.",
              "type": "string"
            },
            "downloadCount": {
              "format": "int32",
              "description": "Count of downloads.",
              "type": "integer"
            },
            "localIsLatestVersion": {
              "description": "<code>true</code> if the local version is the latest version; <code>false</code> otherwise.",
              "type": "boolean"
            },
            "localPath": {
              "description": "Local path.",
              "type": "string"
            },
            "installedDateTime": {
              "format": "date-time",
              "description": "Installed timestamp.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Provisioning state.",
              "type": "string"
            },
            "comment": {
              "description": "Site Extension comment.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteExtensionInfoCollection": {
      "description": "Collection of Kudu site extension information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteExtensionInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "SiteInstance": {
      "description": "Instance of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteInstance resource specific properties",
          "properties": {
            "name": {
              "description": "Name of instance.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteLimits": {
      "description": "Metric limits set on an app.",
      "type": "object",
      "properties": {
        "maxPercentageCpu": {
          "format": "double",
          "description": "Maximum allowed CPU usage percentage.",
          "type": "number"
        },
        "maxMemoryInMb": {
          "format": "int64",
          "description": "Maximum allowed memory usage in MB.",
          "type": "integer"
        },
        "maxDiskSizeInMb": {
          "format": "int64",
          "description": "Maximum allowed disk size usage in MB.",
          "type": "integer"
        }
      }
    },
    "SiteLogsConfig": {
      "description": "Configuration of App Service site logs.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteLogsConfig resource specific properties",
          "properties": {
            "applicationLogs": {
              "$ref": "#/definitions/ApplicationLogsConfig",
              "description": "Application logs configuration."
            },
            "httpLogs": {
              "$ref": "#/definitions/HttpLogsConfig",
              "description": "HTTP logs configuration."
            },
            "failedRequestsTracing": {
              "$ref": "#/definitions/EnabledConfig",
              "description": "Failed requests tracing configuration."
            },
            "detailedErrorMessages": {
              "$ref": "#/definitions/EnabledConfig",
              "description": "Detailed error messages configuration."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteMachineKey": {
      "description": "MachineKey of an app.",
      "type": "object",
      "properties": {
        "validation": {
          "description": "MachineKey validation.",
          "type": "string"
        },
        "validationKey": {
          "description": "Validation key.",
          "type": "string"
        },
        "decryption": {
          "description": "Decryption.",
          "type": "string"
        },
        "decryptionKey": {
          "description": "Decryption key.",
          "type": "string"
        }
      }
    },
    "SitePhpErrorLogFlag": {
      "description": "Used for getting PHP error logging flag.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SitePhpErrorLogFlag resource specific properties",
          "properties": {
            "localLogErrors": {
              "description": "Local log_errors setting.",
              "type": "string"
            },
            "masterLogErrors": {
              "description": "Master log_errors setting.",
              "type": "string"
            },
            "localLogErrorsMaxLength": {
              "description": "Local log_errors_max_len setting.",
              "type": "string"
            },
            "masterLogErrorsMaxLength": {
              "description": "Master log_errors_max_len setting.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteSourceControl": {
      "description": "Source control configuration for an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteSourceControl resource specific properties",
          "properties": {
            "repoUrl": {
              "description": "Repository or source control URL.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "branch": {
              "description": "Name of branch to use for deployment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isManualIntegration": {
              "description": "<code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "deploymentRollbackEnabled": {
              "description": "<code>true</code> to enable deployment rollback; otherwise, <code>false</code>.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isMercurial": {
              "description": "<code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotConfigNames": {
      "description": "Names for connection strings and application settings to be marked as sticky to the deployment slot and not moved during a swap operation.\n This is valid for all deployment slots in an app.",
      "type": "object",
      "properties": {
        "connectionStringNames": {
          "description": "List of connection string names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appSettingNames": {
          "description": "List of application settings names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SlotConfigNamesResource": {
      "description": "Slot Config names azure resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SlotConfigNames",
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotDifference": {
      "description": "A setting difference between two deployment slots of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SlotDifference resource specific properties",
          "properties": {
            "type": {
              "description": "Type of the difference: Information, Warning or Error.",
              "type": "string",
              "readOnly": true
            },
            "settingType": {
              "description": "The type of the setting: General, AppSetting or ConnectionString.",
              "type": "string",
              "readOnly": true
            },
            "diffRule": {
              "description": "Rule that describes how to process the setting difference during a slot swap.",
              "type": "string",
              "readOnly": true
            },
            "settingName": {
              "description": "Name of the setting.",
              "type": "string",
              "readOnly": true
            },
            "valueInCurrentSlot": {
              "description": "Value of the setting in the current slot.",
              "type": "string",
              "readOnly": true
            },
            "valueInTargetSlot": {
              "description": "Value of the setting in the target slot.",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "Description of the setting difference.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotDifferenceCollection": {
      "description": "Collection of slot differences.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SlotDifference"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "SlotSwapStatus": {
      "description": "The status of the last successfull slot swap operation.",
      "type": "object",
      "properties": {
        "timestampUtc": {
          "format": "date-time",
          "description": "The time the last successful slot swap completed.",
          "type": "string",
          "readOnly": true
        },
        "sourceSlotName": {
          "description": "The source slot of the last swap operation.",
          "type": "string",
          "readOnly": true
        },
        "destinationSlotName": {
          "description": "The destination slot of the last swap operation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SlowRequestsBasedTrigger": {
      "description": "Trigger based on request execution time.",
      "type": "object",
      "properties": {
        "timeTaken": {
          "description": "Time taken.",
          "type": "string"
        },
        "count": {
          "format": "int32",
          "description": "Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "Snapshot": {
      "description": "A snapshot of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Snapshot resource specific properties",
          "properties": {
            "time": {
              "description": "The time the snapshot was taken.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SnapshotCollection": {
      "description": "Collection of snapshots which can be used to revert an app to a previous time.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Snapshot"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "SnapshotRecoveryRequest": {
      "description": "Details about app recovery operation.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SnapshotRecoveryRequest resource specific properties",
          "required": [
            "overwrite"
          ],
          "properties": {
            "snapshotTime": {
              "description": "Point in time in which the app recovery should be attempted, formatted as a DateTime string.",
              "type": "string"
            },
            "recoveryTarget": {
              "$ref": "#/definitions/SnapshotRecoveryTarget",
              "description": "Specifies the web app that snapshot contents will be written to."
            },
            "overwrite": {
              "description": "If <code>true</code> the recovery operation can overwrite source app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "recoverConfiguration": {
              "description": "If true, site configuration, in addition to content, will be reverted.",
              "type": "boolean"
            },
            "ignoreConflictingHostNames": {
              "description": "If true, custom hostname conflicts will be ignored when recovering to a target web app.\n This setting is only necessary when RecoverConfiguration is enabled.",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SnapshotRecoveryTarget": {
      "description": "Specifies the web app that snapshot contents will be written to.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Geographical location of the target web app, e.g. SouthEastAsia, SouthCentralUS",
          "type": "string"
        },
        "id": {
          "description": "ARM resource ID of the target app. \n /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and \n /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.",
          "type": "string"
        }
      }
    },
    "StatusCodesBasedTrigger": {
      "description": "Trigger based on status code.",
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "subStatus": {
          "format": "int32",
          "description": "SubStatus.",
          "type": "integer"
        },
        "win32Status": {
          "format": "int32",
          "description": "Win32 error code.",
          "type": "integer"
        },
        "count": {
          "format": "int32",
          "description": "Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "StorageMigrationOptions": {
      "description": "Options for app content migration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StorageMigrationOptions resource specific properties",
          "required": [
            "azurefilesConnectionString",
            "azurefilesShare"
          ],
          "properties": {
            "azurefilesConnectionString": {
              "description": "AzureFiles connection string.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ]
            },
            "azurefilesShare": {
              "description": "AzureFiles share.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ]
            },
            "switchSiteAfterMigration": {
              "description": "<code>true</code>if the app should be switched over; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create"
              ]
            },
            "blockWriteAccessToSite": {
              "description": "<code>true</code> if the app should be read only during copy operation; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageMigrationResponse": {
      "description": "Response for a migration of app content request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StorageMigrationResponse resource specific properties",
          "properties": {
            "operationId": {
              "description": "When server starts the migration process, it will return an operation ID identifying that particular migration operation.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StringDictionary": {
      "description": "String dictionary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Settings.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredJobHistory": {
      "description": "Triggered Web Job History. List of Triggered Web Job Run Information elements.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "TriggeredJobHistory resource specific properties",
          "properties": {
            "triggeredJobRuns": {
              "description": "List of triggered web job runs.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TriggeredJobRun"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredJobHistoryCollection": {
      "description": "Collection of Kudu continuous web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggeredJobHistory"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "TriggeredJobRun": {
      "description": "Triggered Web Job Run Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "TriggeredJobRun resource specific properties",
          "properties": {
            "id": {
              "description": "Job ID.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "name": {
              "description": "Job name.",
              "type": "string",
              "readOnly": true
            },
            "status": {
              "description": "Job status.",
              "enum": [
                "Success",
                "Failed",
                "Error"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TriggeredWebJobStatus",
                "modelAsString": false
              }
            },
            "startTime": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string"
            },
            "endTime": {
              "format": "date-time",
              "description": "End time.",
              "type": "string"
            },
            "duration": {
              "description": "Job duration.",
              "type": "string"
            },
            "outputUrl": {
              "description": "Output URL.",
              "type": "string"
            },
            "errorUrl": {
              "description": "Error URL.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "jobName": {
              "description": "Job name.",
              "type": "string"
            },
            "trigger": {
              "description": "Job trigger.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredWebJob": {
      "description": "Triggered Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "TriggeredWebJob resource specific properties",
          "properties": {
            "latestRun": {
              "$ref": "#/definitions/TriggeredJobRun",
              "description": "Latest job run information."
            },
            "historyUrl": {
              "description": "History URL.",
              "type": "string"
            },
            "schedulerLogsUrl": {
              "description": "Scheduler Logs URL.",
              "type": "string"
            },
            "name": {
              "description": "Job name. Used as job identifier in ARM resource URI.",
              "type": "string",
              "readOnly": true
            },
            "runCommand": {
              "description": "Run command.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "extraInfoUrl": {
              "description": "Extra Info URL.",
              "type": "string"
            },
            "jobType": {
              "description": "Job type.",
              "enum": [
                "Continuous",
                "Triggered"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "WebJobType",
                "modelAsString": false
              }
            },
            "error": {
              "description": "Error information.",
              "type": "string"
            },
            "usingSdk": {
              "description": "Using SDK?",
              "type": "boolean"
            },
            "settings": {
              "description": "Job settings.",
              "type": "object"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredWebJobCollection": {
      "description": "Collection of Kudu continuous web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggeredWebJob"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "User": {
      "description": "User crendentials used for publishing activity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "User resource specific properties",
          "required": [
            "publishingUserName"
          ],
          "properties": {
            "name": {
              "description": "Username",
              "type": "string",
              "x-ms-client-name": "UserName"
            },
            "publishingUserName": {
              "description": "Username used for publishing.",
              "type": "string"
            },
            "publishingPassword": {
              "format": "password",
              "description": "Password used for publishing.",
              "type": "string"
            },
            "publishingPasswordHash": {
              "format": "password",
              "description": "Password hash used for publishing.",
              "type": "string"
            },
            "publishingPasswordHashSalt": {
              "format": "password",
              "description": "Password hash salt used for publishing.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VirtualApplication": {
      "description": "Virtual application in an app.",
      "type": "object",
      "properties": {
        "virtualPath": {
          "description": "Virtual path.",
          "type": "string"
        },
        "physicalPath": {
          "description": "Physical path.",
          "type": "string"
        },
        "preloadEnabled": {
          "description": "<code>true</code> if preloading is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "virtualDirectories": {
          "description": "Virtual directories for virtual application.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualDirectory"
          }
        }
      }
    },
    "VirtualDirectory": {
      "description": "Directory for virtual application.",
      "type": "object",
      "properties": {
        "virtualPath": {
          "description": "Path to virtual application.",
          "type": "string"
        },
        "physicalPath": {
          "description": "Physical path.",
          "type": "string"
        }
      }
    },
    "VnetGateway": {
      "description": "The Virtual Network gateway contract. This is used to give the Virtual Network gateway access to the VPN package.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetGateway resource specific properties",
          "required": [
            "vpnPackageUri"
          ],
          "properties": {
            "vnetName": {
              "description": "The Virtual Network name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "vpnPackageUri": {
              "description": "The URI where the VPN package can be downloaded.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetInfo": {
      "description": "Virtual Network information contract.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetInfo resource specific properties",
          "properties": {
            "vnetResourceId": {
              "description": "The Virtual Network's resource ID.",
              "type": "string"
            },
            "certThumbprint": {
              "description": "The client certificate thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "certBlob": {
              "description": "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \n Point-To-Site VPN connection.",
              "type": "string"
            },
            "routes": {
              "description": "The routes that this Virtual Network connection uses.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VnetRoute"
              },
              "readOnly": true
            },
            "resyncRequired": {
              "description": "<code>true</code> if a resync is required; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "dnsServers": {
              "description": "DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetRoute": {
      "description": "Virtual Network route contract used to pass routing information for a Virtual Network.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetRoute resource specific properties",
          "properties": {
            "name": {
              "description": "The name of this route. This is only returned by the server and does not need to be set by the client.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ],
              "x-ms-client-name": "vnetRouteName"
            },
            "startAddress": {
              "description": "The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.",
              "type": "string"
            },
            "endAddress": {
              "description": "The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.",
              "type": "string"
            },
            "routeType": {
              "description": "The type of route this is:\n DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918\n INHERITED - Routes inherited from the real Virtual Network routes\n STATIC - Static route set on the app only\n \n These values will be used for syncing an app's routes with those from a Virtual Network.",
              "enum": [
                "DEFAULT",
                "INHERITED",
                "STATIC"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RouteType",
                "modelAsString": true
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "WebAppCollection": {
      "description": "Collection of App Service apps.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Site"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "WebAppInstanceCollection": {
      "description": "Collection of app instances.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteInstance"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "WebJob": {
      "description": "Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "WebJob resource specific properties",
          "properties": {
            "name": {
              "description": "Job name. Used as job identifier in ARM resource URI.",
              "type": "string",
              "readOnly": true
            },
            "runCommand": {
              "description": "Run command.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "extraInfoUrl": {
              "description": "Extra Info URL.",
              "type": "string"
            },
            "jobType": {
              "description": "Job type.",
              "enum": [
                "Continuous",
                "Triggered"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "WebJobType",
                "modelAsString": false
              }
            },
            "error": {
              "description": "Error information.",
              "type": "string"
            },
            "usingSdk": {
              "description": "Using SDK?",
              "type": "boolean"
            },
            "settings": {
              "description": "Job settings.",
              "type": "object"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "WebJobCollection": {
      "description": "Collection of Kudu web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebJob"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "x-internal-service-name": "App Service",
  "x-internal-toc-name": "Web Apps",
  "x-internal-split-type": "Operation"
}