{
  "swagger": "2.0",
  "info": {
    "version": "2019-08-01",
    "title": "WebApps API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the metadata of an app.",
        "description": "Description for Gets the metadata of an app.",
        "operationId": "WebApps_ListMetadata",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StringDictionary"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "#/definitions/DefaultErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "List Metadata"
      }
    }
  },
  "definitions": {
    "ApiKVReference": {
      "description": "Description of site key vault references.",
      "type": "object",
      "properties": {
        "reference": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Initialized",
            "Resolved",
            "InvalidSyntax",
            "MSINotEnabled",
            "VaultNotFound",
            "SecretNotFound",
            "SecretVersionNotFound",
            "AccessToKeyVaultDenied",
            "OtherReasons"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResolveStatus",
            "modelAsString": false
          }
        },
        "vaultName": {
          "type": "string"
        },
        "secretName": {
          "type": "string"
        },
        "secretVersion": {
          "type": "string"
        },
        "identityType": {
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": false
          }
        },
        "details": {
          "type": "string"
        },
        "source": {
          "enum": [
            "KeyVault"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConfigReferenceSource",
            "modelAsString": false
          }
        },
        "location": {
          "enum": [
            "ApplicationSetting"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConfigReferenceLocation",
            "modelAsString": false
          }
        }
      }
    },
    "ApplicationLogsConfig": {
      "description": "Application logs configuration.",
      "type": "object",
      "properties": {
        "fileSystem": {
          "$ref": "#/definitions/FileSystemApplicationLogsConfig",
          "description": "Application logs to file system configuration."
        },
        "azureTableStorage": {
          "$ref": "#/definitions/AzureTableStorageApplicationLogsConfig",
          "description": "Application logs to azure table storage configuration."
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/AzureBlobStorageApplicationLogsConfig",
          "description": "Application logs to blob storage configuration."
        }
      }
    },
    "AzureBlobStorageApplicationLogsConfig": {
      "description": "Application logs azure blob storage configuration.",
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        },
        "sasUrl": {
          "description": "SAS url to a azure blob container with read/write/list/delete permissions.",
          "type": "string"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\nRemove blobs older than X days.\n0 or lower means no retention.",
          "type": "integer"
        }
      }
    },
    "AzureBlobStorageHttpLogsConfig": {
      "description": "Http logs to azure blob storage configuration.",
      "type": "object",
      "properties": {
        "sasUrl": {
          "description": "SAS url to a azure blob container with read/write/list/delete permissions.",
          "type": "string"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\nRemove blobs older than X days.\n0 or lower means no retention.",
          "type": "integer"
        },
        "enabled": {
          "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
          "type": "boolean"
        }
      }
    },
    "AzureStorageInfoValue": {
      "description": "Azure Files or Blob Storage access information value for dictionary storage.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of storage.",
          "enum": [
            "AzureFiles",
            "AzureBlob"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AzureStorageType",
            "modelAsString": false
          }
        },
        "accountName": {
          "description": "Name of the storage account.",
          "type": "string"
        },
        "shareName": {
          "description": "Name of the file share (container name, for Blob storage).",
          "type": "string"
        },
        "accessKey": {
          "description": "Access key for the storage account.",
          "type": "string"
        },
        "mountPath": {
          "description": "Path to mount the storage within the site's runtime environment.",
          "type": "string"
        },
        "state": {
          "description": "State of the storage account.",
          "enum": [
            "Ok",
            "InvalidCredentials",
            "InvalidShare"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "AzureStorageState",
            "modelAsString": false
          }
        }
      }
    },
    "AzureStoragePropertyDictionaryResource": {
      "description": "AzureStorageInfo dictionary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Azure storage accounts.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AzureStorageInfoValue"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AzureTableStorageApplicationLogsConfig": {
      "description": "Application logs to Azure table storage configuration.",
      "required": [
        "sasUrl"
      ],
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        },
        "sasUrl": {
          "description": "SAS URL to an Azure table with add/query/delete permissions.",
          "type": "string"
        }
      }
    },
    "BackupItem": {
      "description": "Backup description.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "BackupItem resource specific properties",
          "properties": {
            "id": {
              "format": "int32",
              "description": "Id of the backup.",
              "type": "integer",
              "readOnly": true,
              "x-ms-client-name": "BackupId"
            },
            "storageAccountUrl": {
              "description": "SAS URL for the storage account container which contains this backup.",
              "type": "string",
              "readOnly": true
            },
            "blobName": {
              "description": "Name of the blob which contains data for this backup.",
              "type": "string",
              "readOnly": true
            },
            "name": {
              "description": "Name of this backup.",
              "type": "string",
              "readOnly": true
            },
            "status": {
              "description": "Backup status.",
              "enum": [
                "InProgress",
                "Failed",
                "Succeeded",
                "TimedOut",
                "Created",
                "Skipped",
                "PartiallySucceeded",
                "DeleteInProgress",
                "DeleteFailed",
                "Deleted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "BackupItemStatus",
                "modelAsString": false
              }
            },
            "sizeInBytes": {
              "format": "int64",
              "description": "Size of the backup in bytes.",
              "type": "integer",
              "readOnly": true
            },
            "created": {
              "format": "date-time",
              "description": "Timestamp of the backup creation.",
              "type": "string",
              "readOnly": true
            },
            "log": {
              "description": "Details regarding this backup. Might contain an error message.",
              "type": "string",
              "readOnly": true
            },
            "databases": {
              "description": "List of databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              },
              "readOnly": true
            },
            "scheduled": {
              "description": "True if this backup has been created due to a schedule being triggered.",
              "type": "boolean",
              "readOnly": true
            },
            "lastRestoreTimeStamp": {
              "format": "date-time",
              "description": "Timestamp of a last restore operation which used this backup.",
              "type": "string",
              "readOnly": true
            },
            "finishedTimeStamp": {
              "format": "date-time",
              "description": "Timestamp when this backup finished.",
              "type": "string",
              "readOnly": true
            },
            "correlationId": {
              "description": "Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.",
              "type": "string",
              "readOnly": true
            },
            "websiteSizeInBytes": {
              "format": "int64",
              "description": "Size of the original web app which has been backed up.",
              "type": "integer",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupItemCollection": {
      "description": "Collection of backup items.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupItem"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BackupRequest": {
      "description": "Description of a backup which will be performed.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "BackupRequest resource specific properties",
          "required": [
            "storageAccountUrl"
          ],
          "properties": {
            "backupName": {
              "description": "Name of the backup.",
              "type": "string"
            },
            "enabled": {
              "description": "True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.",
              "type": "boolean"
            },
            "storageAccountUrl": {
              "description": "SAS URL to the container.",
              "type": "string"
            },
            "backupSchedule": {
              "$ref": "#/definitions/BackupSchedule",
              "description": "Schedule for the backup if it is executed periodically."
            },
            "databases": {
              "description": "Databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupSchedule": {
      "description": "Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.",
      "required": [
        "frequencyInterval",
        "frequencyUnit",
        "keepAtLeastOneBackup",
        "retentionPeriodInDays"
      ],
      "type": "object",
      "properties": {
        "frequencyInterval": {
          "format": "int32",
          "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)",
          "default": 7,
          "type": "integer"
        },
        "frequencyUnit": {
          "description": "The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)",
          "default": "Day",
          "enum": [
            "Day",
            "Hour"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FrequencyUnit",
            "modelAsString": false
          }
        },
        "keepAtLeastOneBackup": {
          "description": "True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.",
          "default": true,
          "type": "boolean"
        },
        "retentionPeriodInDays": {
          "format": "int32",
          "description": "After how many days backups should be deleted.",
          "default": 30,
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "description": "When the schedule should start working.",
          "type": "string"
        },
        "lastExecutionTime": {
          "format": "date-time",
          "description": "Last time when this schedule was triggered.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConnStringValueTypePair": {
      "description": "Database connection string value to type pair.",
      "required": [
        "value",
        "type"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of pair.",
          "type": "string"
        },
        "type": {
          "description": "Type of database.",
          "enum": [
            "MySql",
            "SQLServer",
            "SQLAzure",
            "Custom",
            "NotificationHub",
            "ServiceBus",
            "EventHub",
            "ApiHub",
            "DocDb",
            "RedisCache",
            "PostgreSQL"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConnectionStringType",
            "modelAsString": false
          }
        }
      }
    },
    "ConnectionStringDictionary": {
      "description": "String dictionary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Connection strings.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConnStringValueTypePair"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ContainerCpuStatistics": {
      "type": "object",
      "properties": {
        "cpuUsage": {
          "$ref": "#/definitions/ContainerCpuUsage"
        },
        "systemCpuUsage": {
          "format": "int64",
          "type": "integer"
        },
        "onlineCpuCount": {
          "format": "int32",
          "type": "integer"
        },
        "throttlingData": {
          "$ref": "#/definitions/ContainerThrottlingData"
        }
      }
    },
    "ContainerCpuUsage": {
      "type": "object",
      "properties": {
        "totalUsage": {
          "format": "int64",
          "type": "integer"
        },
        "perCpuUsage": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "integer"
          }
        },
        "kernelModeUsage": {
          "format": "int64",
          "type": "integer"
        },
        "userModeUsage": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ContainerInfo": {
      "type": "object",
      "properties": {
        "currentTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "previousTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "currentCpuStats": {
          "$ref": "#/definitions/ContainerCpuStatistics"
        },
        "previousCpuStats": {
          "$ref": "#/definitions/ContainerCpuStatistics"
        },
        "memoryStats": {
          "$ref": "#/definitions/ContainerMemoryStatistics"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "eth0": {
          "$ref": "#/definitions/ContainerNetworkInterfaceStatistics"
        }
      }
    },
    "ContainerMemoryStatistics": {
      "type": "object",
      "properties": {
        "usage": {
          "format": "int64",
          "type": "integer"
        },
        "maxUsage": {
          "format": "int64",
          "type": "integer"
        },
        "limit": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ContainerNetworkInterfaceStatistics": {
      "type": "object",
      "properties": {
        "rxBytes": {
          "format": "int64",
          "type": "integer"
        },
        "rxPackets": {
          "format": "int64",
          "type": "integer"
        },
        "rxErrors": {
          "format": "int64",
          "type": "integer"
        },
        "rxDropped": {
          "format": "int64",
          "type": "integer"
        },
        "txBytes": {
          "format": "int64",
          "type": "integer"
        },
        "txPackets": {
          "format": "int64",
          "type": "integer"
        },
        "txErrors": {
          "format": "int64",
          "type": "integer"
        },
        "txDropped": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ContainerThrottlingData": {
      "type": "object",
      "properties": {
        "periods": {
          "format": "int32",
          "type": "integer"
        },
        "throttledPeriods": {
          "format": "int32",
          "type": "integer"
        },
        "throttledTime": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ContinuousWebJob": {
      "description": "Continuous Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ContinuousWebJob resource specific properties",
          "properties": {
            "status": {
              "description": "Job status.",
              "enum": [
                "Initializing",
                "Starting",
                "Running",
                "PendingRestart",
                "Stopped"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ContinuousWebJobStatus",
                "modelAsString": false
              }
            },
            "detailed_status": {
              "description": "Detailed status.",
              "type": "string"
            },
            "log_url": {
              "description": "Log URL.",
              "type": "string"
            },
            "run_command": {
              "description": "Run command.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "extra_info_url": {
              "description": "Extra Info URL.",
              "type": "string"
            },
            "web_job_type": {
              "description": "Job type.",
              "enum": [
                "Continuous",
                "Triggered"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "WebJobType",
                "modelAsString": false
              }
            },
            "error": {
              "description": "Error information.",
              "type": "string"
            },
            "using_sdk": {
              "description": "Using SDK?",
              "type": "boolean"
            },
            "settings": {
              "description": "Job settings.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ContinuousWebJobCollection": {
      "description": "Collection of Kudu continuous web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContinuousWebJob"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CsmCopySlotEntity": {
      "description": "Copy deployment slot parameters.",
      "required": [
        "targetSlot",
        "siteConfig"
      ],
      "type": "object",
      "properties": {
        "targetSlot": {
          "description": "Destination deployment slot during copy operation.",
          "type": "string"
        },
        "siteConfig": {
          "$ref": "#/definitions/SiteConfig",
          "description": "The site object which will be merged with the source slot site\nto produce new destination slot site object.\n<code>null</code> to just copy source slot content. Otherwise a <code>Site</code>\nobject with properties to override source slot site."
        }
      }
    },
    "CsmPublishingProfileOptions": {
      "description": "Publishing options for requested profile.",
      "type": "object",
      "properties": {
        "format": {
          "description": "Name of the format. Valid values are: \nFileZilla3\nWebDeploy -- default\nFtp",
          "enum": [
            "FileZilla3",
            "WebDeploy",
            "Ftp"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublishingProfileFormat",
            "modelAsString": true
          }
        },
        "includeDisasterRecoveryEndpoints": {
          "description": "Include the DisasterRecover endpoint if true",
          "type": "boolean"
        }
      }
    },
    "CsmSlotEntity": {
      "description": "Deployment slot parameters.",
      "required": [
        "targetSlot",
        "preserveVnet"
      ],
      "type": "object",
      "properties": {
        "targetSlot": {
          "description": "Destination deployment slot during swap operation.",
          "type": "string"
        },
        "preserveVnet": {
          "description": "<code>true</code> to preserve Virtual Network to the slot during swap; otherwise, <code>false</code>.",
          "type": "boolean"
        }
      }
    },
    "CustomHostnameAnalysisResult": {
      "description": "Custom domain analysis.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "CustomHostnameAnalysisResult resource specific properties",
          "properties": {
            "isHostnameAlreadyVerified": {
              "description": "<code>true</code> if hostname is already verified; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "customDomainVerificationTest": {
              "description": "DNS verification test result.",
              "enum": [
                "Passed",
                "Failed",
                "Skipped"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "DnsVerificationTestResult",
                "modelAsString": false
              }
            },
            "customDomainVerificationFailureInfo": {
              "$ref": "#/definitions/ErrorEntity",
              "description": "Raw failure information if DNS verification fails.",
              "readOnly": true
            },
            "hasConflictOnScaleUnit": {
              "description": "<code>true</code> if there is a conflict on a scale unit; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "hasConflictAcrossSubscription": {
              "description": "<code>true</code> if there is a conflict across subscriptions; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "conflictingAppResourceId": {
              "description": "Name of the conflicting app on scale unit if it's within the same subscription.",
              "type": "string",
              "readOnly": true
            },
            "cNameRecords": {
              "description": "CName records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "txtRecords": {
              "description": "TXT records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "aRecords": {
              "description": "A records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alternateCNameRecords": {
              "description": "Alternate CName records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alternateTxtRecords": {
              "description": "Alternate TXT records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DatabaseBackupSetting": {
      "description": "Database backup settings.",
      "required": [
        "databaseType"
      ],
      "type": "object",
      "properties": {
        "databaseType": {
          "description": "Database type (e.g. SqlAzure / MySql).",
          "enum": [
            "SqlAzure",
            "MySql",
            "LocalMySql",
            "PostgreSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DatabaseType",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string"
        },
        "connectionStringName": {
          "description": "Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.\nThis is used during restore with overwrite connection strings options.",
          "type": "string"
        },
        "connectionString": {
          "description": "Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.",
          "type": "string"
        }
      }
    },
    "DeletedAppRestoreRequest": {
      "description": "Details about restoring a deleted app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DeletedAppRestoreRequest resource specific properties",
          "properties": {
            "deletedSiteId": {
              "description": "ARM resource ID of the deleted app. Example:\n/subscriptions/{subId}/providers/Microsoft.Web/deletedSites/{deletedSiteId}",
              "type": "string"
            },
            "recoverConfiguration": {
              "description": "If true, deleted site configuration, in addition to content, will be restored.",
              "type": "boolean"
            },
            "snapshotTime": {
              "description": "Point in time to restore the deleted app from, formatted as a DateTime string. \nIf unspecified, default value is the time that the app was deleted.",
              "type": "string"
            },
            "useDRSecondary": {
              "description": "If true, the snapshot is retrieved from DRSecondary endpoint.",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Deployment": {
      "description": "User credentials used for publishing activity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Deployment resource specific properties",
          "properties": {
            "status": {
              "format": "int32",
              "description": "Deployment status.",
              "type": "integer"
            },
            "message": {
              "description": "Details about deployment status.",
              "type": "string"
            },
            "author": {
              "description": "Who authored the deployment.",
              "type": "string"
            },
            "deployer": {
              "description": "Who performed the deployment.",
              "type": "string"
            },
            "author_email": {
              "description": "Author email.",
              "type": "string"
            },
            "start_time": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string"
            },
            "end_time": {
              "format": "date-time",
              "description": "End time.",
              "type": "string"
            },
            "active": {
              "description": "True if deployment is currently active, false if completed and null if not started.",
              "type": "boolean"
            },
            "details": {
              "description": "Details on deployment.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DeploymentCollection": {
      "description": "Collection of app deployments.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EnabledConfig": {
      "description": "Enabled configuration.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
          "type": "boolean"
        }
      }
    },
    "FileSystemApplicationLogsConfig": {
      "description": "Application logs to file system configuration.",
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "default": "Off",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        }
      }
    },
    "FileSystemHttpLogsConfig": {
      "description": "Http logs to file system configuration.",
      "type": "object",
      "properties": {
        "retentionInMb": {
          "format": "int32",
          "description": "Maximum size in megabytes that http log files can use.\nWhen reached old log files will be removed to make space for new ones.\nValue can range between 25 and 100.",
          "maximum": 100,
          "minimum": 25,
          "type": "integer"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\nRemove files older than X days.\n0 or lower means no retention.",
          "type": "integer"
        },
        "enabled": {
          "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
          "type": "boolean"
        }
      }
    },
    "FunctionEnvelope": {
      "description": "Function information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "FunctionEnvelope resource specific properties",
          "properties": {
            "function_app_id": {
              "description": "Function App ID.",
              "type": "string"
            },
            "script_root_path_href": {
              "description": "Script root path URI.",
              "type": "string"
            },
            "script_href": {
              "description": "Script URI.",
              "type": "string"
            },
            "config_href": {
              "description": "Config URI.",
              "type": "string"
            },
            "test_data_href": {
              "description": "Test data URI.",
              "type": "string"
            },
            "secrets_file_href": {
              "description": "Secrets file URI.",
              "type": "string"
            },
            "href": {
              "description": "Function URI.",
              "type": "string"
            },
            "config": {
              "description": "Config information.",
              "type": "object"
            },
            "files": {
              "description": "File list.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "test_data": {
              "description": "Test data used when testing via the Azure Portal.",
              "type": "string"
            },
            "invoke_url_template": {
              "description": "The invocation URL",
              "type": "string"
            },
            "language": {
              "description": "The function language",
              "type": "string"
            },
            "isDisabled": {
              "description": "Gets or sets a value indicating whether the function is disabled",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "FunctionEnvelopeCollection": {
      "description": "Collection of Kudu function information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunctionEnvelope"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FunctionSecrets": {
      "description": "Function secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "FunctionSecrets resource specific properties",
          "properties": {
            "key": {
              "description": "Secret key.",
              "type": "string"
            },
            "trigger_url": {
              "description": "Trigger URL.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HostKeys": {
      "description": "Functions host level keys.",
      "type": "object",
      "properties": {
        "masterKey": {
          "description": "Secret key.",
          "type": "string"
        },
        "functionKeys": {
          "description": "Host level function keys.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "systemKeys": {
          "description": "System keys.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "HostNameBinding": {
      "description": "A hostname binding object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HostNameBinding resource specific properties",
          "properties": {
            "siteName": {
              "description": "App Service app name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "domainId": {
              "description": "Fully qualified ARM domain resource URI.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "azureResourceName": {
              "description": "Azure resource name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "azureResourceType": {
              "description": "Azure resource type.",
              "enum": [
                "Website",
                "TrafficManager"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AzureResourceType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "customHostNameDnsRecordType": {
              "description": "Custom DNS record type.",
              "enum": [
                "CName",
                "A"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CustomHostNameDnsRecordType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "hostNameType": {
              "description": "Hostname type.",
              "enum": [
                "Verified",
                "Managed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "HostNameType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "sslState": {
              "description": "SSL type",
              "enum": [
                "Disabled",
                "SniEnabled",
                "IpBasedEnabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SslState",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "thumbprint": {
              "description": "SSL certificate thumbprint",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "virtualIP": {
              "description": "Virtual IP address assigned to the hostname if IP based SSL is enabled.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HostNameBindingCollection": {
      "description": "Collection of hostname bindings.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostNameBinding"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HttpLogsConfig": {
      "description": "Http logs configuration.",
      "type": "object",
      "properties": {
        "fileSystem": {
          "$ref": "#/definitions/FileSystemHttpLogsConfig",
          "description": "Http logs to file system configuration."
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/AzureBlobStorageHttpLogsConfig",
          "description": "Http logs to azure blob storage configuration."
        }
      }
    },
    "KeyInfo": {
      "description": "Function key info.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Key name",
          "type": "string"
        },
        "value": {
          "description": "Key value",
          "type": "string"
        }
      }
    },
    "KeyVaultReferenceCollection": {
      "description": "Web app key vault reference and status ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "KeyVaultReferenceCollection resource specific properties",
          "properties": {
            "keyToReferenceStatuses": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ApiKVReference"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "KeyVaultReferenceResource": {
      "description": "Web app key vault reference and status ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiKVReference",
          "description": "Core resource properties",
          "properties": {
            "reference": {
              "type": "string"
            },
            "status": {
              "enum": [
                "Initialized",
                "Resolved",
                "InvalidSyntax",
                "MSINotEnabled",
                "VaultNotFound",
                "SecretNotFound",
                "SecretVersionNotFound",
                "AccessToKeyVaultDenied",
                "OtherReasons"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ResolveStatus",
                "modelAsString": false
              }
            },
            "vaultName": {
              "type": "string"
            },
            "secretName": {
              "type": "string"
            },
            "secretVersion": {
              "type": "string"
            },
            "identityType": {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": false
              }
            },
            "details": {
              "type": "string"
            },
            "source": {
              "enum": [
                "KeyVault"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ConfigReferenceSource",
                "modelAsString": false
              }
            },
            "location": {
              "enum": [
                "ApplicationSetting"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ConfigReferenceLocation",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MSDeploy": {
      "description": "MSDeploy ARM PUT information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MSDeployCore",
          "description": "Core resource properties",
          "properties": {
            "addOnPackages": {
              "description": "List of Add-On packages. Add-On packages implicitly enable the Do Not Delete MSDeploy rule.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MSDeployCore"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MSDeployCore": {
      "description": "MSDeploy ARM PUT core information",
      "type": "object",
      "properties": {
        "packageUri": {
          "description": "Package URI",
          "type": "string"
        },
        "connectionString": {
          "description": "SQL Connection String",
          "type": "string"
        },
        "dbType": {
          "description": "Database Type",
          "type": "string"
        },
        "setParametersXmlFileUri": {
          "description": "URI of MSDeploy Parameters file. Must not be set if SetParameters is used.",
          "type": "string"
        },
        "setParameters": {
          "description": "MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "skipAppData": {
          "description": "Controls whether the MSDeploy operation skips the App_Data directory.\nIf set to <code>true</code>, the existing App_Data directory on the destination\nwill not be deleted, and any App_Data directory in the source will be ignored.\nSetting is <code>false</code> by default.",
          "type": "boolean"
        },
        "appOffline": {
          "description": "Sets the AppOffline rule while the MSDeploy operation executes.\nSetting is <code>false</code> by default.",
          "type": "boolean"
        }
      }
    },
    "MSDeployLog": {
      "description": "MSDeploy log",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MSDeployLog resource specific properties",
          "properties": {
            "entries": {
              "description": "List of log entry messages",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MSDeployLogEntry"
              },
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MSDeployLogEntry": {
      "description": "MSDeploy log entry",
      "type": "object",
      "properties": {
        "time": {
          "format": "date-time",
          "description": "Timestamp of log entry",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Log entry type",
          "enum": [
            "Message",
            "Warning",
            "Error"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "MSDeployLogEntryType",
            "modelAsString": false
          }
        },
        "message": {
          "description": "Log entry message",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MSDeployStatus": {
      "description": "MSDeploy ARM response",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MSDeployStatus resource specific properties",
          "properties": {
            "deployer": {
              "description": "Username of deployer",
              "type": "string",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state",
              "enum": [
                "accepted",
                "running",
                "succeeded",
                "failed",
                "canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "MSDeployProvisioningState",
                "modelAsString": false
              }
            },
            "startTime": {
              "format": "date-time",
              "description": "Start time of deploy operation",
              "type": "string",
              "readOnly": true
            },
            "endTime": {
              "format": "date-time",
              "description": "End time of deploy operation",
              "type": "string",
              "readOnly": true
            },
            "complete": {
              "description": "Whether the deployment operation has completed",
              "type": "boolean",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MigrateMySqlRequest": {
      "description": "MySQL migration request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MigrateMySqlRequest resource specific properties",
          "required": [
            "connectionString",
            "migrationType"
          ],
          "properties": {
            "connectionString": {
              "description": "Connection string to the remote MySQL database.",
              "type": "string"
            },
            "migrationType": {
              "description": "The type of migration operation to be done",
              "enum": [
                "LocalToRemote",
                "RemoteToLocal"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MySqlMigrationType",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MigrateMySqlStatus": {
      "description": "MySQL migration status.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MigrateMySqlStatus resource specific properties",
          "properties": {
            "migrationOperationStatus": {
              "description": "Status of the migration task.",
              "enum": [
                "InProgress",
                "Failed",
                "Succeeded",
                "TimedOut",
                "Created"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "OperationStatus",
                "modelAsString": false
              }
            },
            "operationId": {
              "description": "Operation ID for the migration task.",
              "type": "string",
              "readOnly": true
            },
            "localMySqlEnabled": {
              "description": "True if the web app has in app MySql enabled",
              "type": "boolean",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "NetworkFeatures": {
      "description": "Full view of network features for an app (presently VNET integration and Hybrid Connections).",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "NetworkFeatures resource specific properties",
          "properties": {
            "virtualNetworkName": {
              "description": "The Virtual Network name.",
              "type": "string",
              "readOnly": true
            },
            "virtualNetworkConnection": {
              "$ref": "#/definitions/VnetInfo",
              "description": "The Virtual Network summary view.",
              "readOnly": true
            },
            "hybridConnections": {
              "description": "The Hybrid Connections summary view.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelayServiceConnectionEntity"
              },
              "readOnly": true
            },
            "hybridConnectionsV2": {
              "description": "The Hybrid Connection V2 (Service Bus) view.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HybridConnection"
              },
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "NetworkTrace": {
      "description": "Network trace",
      "type": "object",
      "properties": {
        "path": {
          "description": "Local file path for the captured network trace file.",
          "type": "string"
        },
        "status": {
          "description": "Current status of the network trace operation, same as Operation.Status (InProgress/Succeeded/Failed).",
          "type": "string"
        },
        "message": {
          "description": "Detailed message of a network trace operation, e.g. error message in case of failure.",
          "type": "string"
        }
      }
    },
    "PerfMonCounterCollection": {
      "description": "Collection of performance monitor counters.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfMonResponse"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PerfMonResponse": {
      "description": "Performance monitor API response.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The response code.",
          "type": "string"
        },
        "message": {
          "description": "The message.",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/PerfMonSet",
          "description": "The performance monitor counters."
        }
      }
    },
    "PerfMonSample": {
      "description": "Performance monitor sample in a set.",
      "type": "object",
      "properties": {
        "time": {
          "format": "date-time",
          "description": "Point in time for which counter was measured.",
          "type": "string"
        },
        "instanceName": {
          "description": "Name of the server on which the measurement is made.",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Value of counter at a certain time.",
          "type": "number"
        }
      }
    },
    "PerfMonSet": {
      "description": "Metric information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique key name of the counter.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of the period.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of the period.",
          "type": "string"
        },
        "timeGrain": {
          "description": "Presented time grain.",
          "type": "string"
        },
        "values": {
          "description": "Collection of workers that are active during this time.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfMonSample"
          }
        }
      }
    },
    "PremierAddOn": {
      "description": "Premier add-on.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PremierAddOn resource specific properties",
          "properties": {
            "sku": {
              "description": "Premier add on SKU.",
              "type": "string"
            },
            "product": {
              "description": "Premier add on Product.",
              "type": "string"
            },
            "vendor": {
              "description": "Premier add on Vendor.",
              "type": "string"
            },
            "marketplacePublisher": {
              "description": "Premier add on Marketplace publisher.",
              "type": "string"
            },
            "marketplaceOffer": {
              "description": "Premier add on Marketplace offer.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PremierAddOnPatchResource": {
      "description": "ARM resource for a PremierAddOn.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PremierAddOnPatchResource resource specific properties",
          "properties": {
            "sku": {
              "description": "Premier add on SKU.",
              "type": "string"
            },
            "product": {
              "description": "Premier add on Product.",
              "type": "string"
            },
            "vendor": {
              "description": "Premier add on Vendor.",
              "type": "string"
            },
            "marketplacePublisher": {
              "description": "Premier add on Marketplace publisher.",
              "type": "string"
            },
            "marketplaceOffer": {
              "description": "Premier add on Marketplace offer.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PrivateAccess": {
      "description": "Description of the parameters of Private Access for a Web Site.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PrivateAccess resource specific properties",
          "properties": {
            "enabled": {
              "description": "Whether private access is enabled or not.",
              "type": "boolean"
            },
            "virtualNetworks": {
              "description": "The Virtual Networks (and subnets) allowed to access the site privately.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivateAccessVirtualNetwork"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PrivateAccessSubnet": {
      "description": "Description of a Virtual Network subnet that is useable for private site access.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the subnet.",
          "type": "string"
        },
        "key": {
          "format": "int32",
          "description": "The key (ID) of the subnet.",
          "type": "integer"
        }
      }
    },
    "PrivateAccessVirtualNetwork": {
      "description": "Description of a Virtual Network that is useable for private site access.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the Virtual Network.",
          "type": "string"
        },
        "key": {
          "format": "int32",
          "description": "The key (ID) of the Virtual Network.",
          "type": "integer"
        },
        "resourceId": {
          "description": "The ARM uri of the Virtual Network",
          "type": "string"
        },
        "subnets": {
          "description": "A List of subnets that access is allowed to on this Virtual Network. An empty array (but not null) is interpreted to mean that all subnets are allowed within this Virtual Network.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateAccessSubnet"
          }
        }
      }
    },
    "ProcessInfo": {
      "description": "Process Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ProcessInfo resource specific properties",
          "properties": {
            "identifier": {
              "format": "int32",
              "description": "ARM Identifier for deployment.",
              "type": "integer",
              "readOnly": true
            },
            "deployment_name": {
              "description": "Deployment name.",
              "type": "string"
            },
            "href": {
              "description": "HRef URI.",
              "type": "string"
            },
            "minidump": {
              "description": "Minidump URI.",
              "type": "string"
            },
            "is_profile_running": {
              "description": "Is profile running?",
              "type": "boolean"
            },
            "is_iis_profile_running": {
              "description": "Is the IIS Profile running?",
              "type": "boolean"
            },
            "iis_profile_timeout_in_seconds": {
              "format": "double",
              "description": "IIS Profile timeout (seconds).",
              "type": "number"
            },
            "parent": {
              "description": "Parent process.",
              "type": "string"
            },
            "children": {
              "description": "Child process list.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "threads": {
              "description": "Thread list.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessThreadInfo"
              }
            },
            "open_file_handles": {
              "description": "List of open files.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "modules": {
              "description": "List of modules.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessModuleInfo"
              }
            },
            "file_name": {
              "description": "File name of this process.",
              "type": "string"
            },
            "command_line": {
              "description": "Command line.",
              "type": "string"
            },
            "user_name": {
              "description": "User name.",
              "type": "string"
            },
            "handle_count": {
              "format": "int32",
              "description": "Handle count.",
              "type": "integer"
            },
            "module_count": {
              "format": "int32",
              "description": "Module count.",
              "type": "integer"
            },
            "thread_count": {
              "format": "int32",
              "description": "Thread count.",
              "type": "integer"
            },
            "start_time": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string"
            },
            "total_cpu_time": {
              "description": "Total CPU time.",
              "type": "string"
            },
            "user_cpu_time": {
              "description": "User CPU time.",
              "type": "string"
            },
            "privileged_cpu_time": {
              "description": "Privileged CPU time.",
              "type": "string"
            },
            "working_set": {
              "format": "int64",
              "description": "Working set.",
              "type": "integer"
            },
            "peak_working_set": {
              "format": "int64",
              "description": "Peak working set.",
              "type": "integer"
            },
            "private_memory": {
              "format": "int64",
              "description": "Private memory size.",
              "type": "integer"
            },
            "virtual_memory": {
              "format": "int64",
              "description": "Virtual memory size.",
              "type": "integer"
            },
            "peak_virtual_memory": {
              "format": "int64",
              "description": "Peak virtual memory usage.",
              "type": "integer"
            },
            "paged_system_memory": {
              "format": "int64",
              "description": "Paged system memory.",
              "type": "integer"
            },
            "non_paged_system_memory": {
              "format": "int64",
              "description": "Non-paged system memory.",
              "type": "integer"
            },
            "paged_memory": {
              "format": "int64",
              "description": "Paged memory.",
              "type": "integer"
            },
            "peak_paged_memory": {
              "format": "int64",
              "description": "Peak paged memory.",
              "type": "integer"
            },
            "time_stamp": {
              "format": "date-time",
              "description": "Time stamp.",
              "type": "string"
            },
            "environment_variables": {
              "description": "List of environment variables.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "is_scm_site": {
              "description": "Is this the SCM site?",
              "type": "boolean"
            },
            "is_webjob": {
              "description": "Is this a Web Job?",
              "type": "boolean"
            },
            "description": {
              "description": "Description of process.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessInfoCollection": {
      "description": "Collection of Kudu process information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProcessModuleInfo": {
      "description": "Process Module Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ProcessModuleInfo resource specific properties",
          "properties": {
            "base_address": {
              "description": "Base address. Used as module identifier in ARM resource URI.",
              "type": "string"
            },
            "file_name": {
              "description": "File name.",
              "type": "string"
            },
            "href": {
              "description": "HRef URI.",
              "type": "string"
            },
            "file_path": {
              "description": "File path.",
              "type": "string"
            },
            "module_memory_size": {
              "format": "int32",
              "description": "Module memory size.",
              "type": "integer"
            },
            "file_version": {
              "description": "File version.",
              "type": "string"
            },
            "file_description": {
              "description": "File description.",
              "type": "string"
            },
            "product": {
              "description": "Product name.",
              "type": "string"
            },
            "product_version": {
              "description": "Product version.",
              "type": "string"
            },
            "is_debug": {
              "description": "Is debug?",
              "type": "boolean"
            },
            "language": {
              "description": "Module language (locale).",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessModuleInfoCollection": {
      "description": "Collection of Kudu thread information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessModuleInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProcessThreadInfo": {
      "description": "Process Thread Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ProcessThreadInfo resource specific properties",
          "properties": {
            "identifier": {
              "format": "int32",
              "description": "Site extension ID.",
              "type": "integer",
              "readOnly": true
            },
            "href": {
              "description": "HRef URI.",
              "type": "string"
            },
            "process": {
              "description": "Process URI.",
              "type": "string"
            },
            "start_address": {
              "description": "Start address.",
              "type": "string"
            },
            "current_priority": {
              "format": "int32",
              "description": "Current thread priority.",
              "type": "integer"
            },
            "priority_level": {
              "description": "Thread priority level.",
              "type": "string"
            },
            "base_priority": {
              "format": "int32",
              "description": "Base priority.",
              "type": "integer"
            },
            "start_time": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string"
            },
            "total_processor_time": {
              "description": "Total processor time.",
              "type": "string"
            },
            "user_processor_time": {
              "description": "User processor time.",
              "type": "string"
            },
            "state": {
              "description": "Thread state.",
              "type": "string"
            },
            "wait_reason": {
              "description": "Wait reason.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessThreadInfoCollection": {
      "description": "Collection of Kudu thread information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessThreadInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PublicCertificate": {
      "description": "Public certificate object",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PublicCertificate resource specific properties",
          "properties": {
            "blob": {
              "format": "byte",
              "description": "Public Certificate byte array",
              "type": "string"
            },
            "publicCertificateLocation": {
              "description": "Public Certificate Location",
              "enum": [
                "CurrentUserMy",
                "LocalMachineMy",
                "Unknown"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicCertificateLocation",
                "modelAsString": false
              }
            },
            "thumbprint": {
              "description": "Certificate Thumbprint",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PublicCertificateCollection": {
      "description": "Collection of public certificates",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicCertificate"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RelayServiceConnectionEntity": {
      "description": "Hybrid Connection for an App Service app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RelayServiceConnectionEntity resource specific properties",
          "properties": {
            "entityName": {
              "type": "string"
            },
            "entityConnectionString": {
              "type": "string"
            },
            "resourceType": {
              "type": "string"
            },
            "resourceConnectionString": {
              "type": "string"
            },
            "hostname": {
              "type": "string"
            },
            "port": {
              "format": "int32",
              "type": "integer"
            },
            "biztalkUri": {
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RestoreRequest": {
      "description": "Description of a restore request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RestoreRequest resource specific properties",
          "required": [
            "storageAccountUrl",
            "overwrite"
          ],
          "properties": {
            "storageAccountUrl": {
              "description": "SAS URL to the container.",
              "type": "string"
            },
            "blobName": {
              "description": "Name of a blob which contains the backup.",
              "type": "string"
            },
            "overwrite": {
              "description": "<code>true</code> if the restore operation can overwrite target app; otherwise, <code>false</code>. <code>true</code> is needed if trying to restore over an existing app.",
              "type": "boolean"
            },
            "siteName": {
              "description": "Name of an app.",
              "type": "string"
            },
            "databases": {
              "description": "Collection of databases which should be restored. This list has to match the list of databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              }
            },
            "ignoreConflictingHostNames": {
              "description": "Changes a logic when restoring an app with custom domains. <code>true</code> to remove custom domains automatically. If <code>false</code>, custom domains are added to \nthe app's object when it is being restored, but that might fail due to conflicts during the operation.",
              "default": false,
              "type": "boolean"
            },
            "ignoreDatabases": {
              "description": "Ignore the databases and only restore the site content",
              "default": false,
              "type": "boolean"
            },
            "appServicePlan": {
              "description": "Specify app service plan that will own restored site.",
              "type": "string"
            },
            "operationType": {
              "description": "Operation type.",
              "default": "Default",
              "enum": [
                "Default",
                "Clone",
                "Relocation",
                "Snapshot",
                "CloudFS"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BackupRestoreOperationType",
                "modelAsString": false
              }
            },
            "adjustConnectionStrings": {
              "description": "<code>true</code> if SiteConfig.ConnectionStrings should be set in new app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "hostingEnvironment": {
              "description": "App Service Environment name, if needed (only when restoring an app to an App Service Environment).",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteAuthSettings": {
      "description": "Configuration settings for the Azure App Service Authentication / Authorization feature.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteAuthSettings resource specific properties",
          "properties": {
            "enabled": {
              "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "runtimeVersion": {
              "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
              "type": "string"
            },
            "unauthenticatedClientAction": {
              "description": "The action to take when an unauthenticated client attempts to access the app.",
              "enum": [
                "RedirectToLoginPage",
                "AllowAnonymous"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "UnauthenticatedClientAction",
                "modelAsString": false
              }
            },
            "tokenStoreEnabled": {
              "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
              "type": "boolean"
            },
            "allowedExternalRedirectUrls": {
              "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defaultProvider": {
              "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
              "enum": [
                "AzureActiveDirectory",
                "Facebook",
                "Google",
                "MicrosoftAccount",
                "Twitter"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BuiltInAuthenticationProvider",
                "modelAsString": false
              }
            },
            "tokenRefreshExtensionHours": {
              "format": "double",
              "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
              "type": "number"
            },
            "clientId": {
              "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
              "type": "string"
            },
            "clientSecret": {
              "description": "The Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).\nThis setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.\nOtherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
              "type": "string"
            },
            "clientSecretCertificateThumbprint": {
              "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
              "type": "string"
            },
            "issuer": {
              "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
              "type": "string"
            },
            "validateIssuer": {
              "description": "Gets a value indicating whether the issuer should be a valid HTTPS url and be validated as such.",
              "type": "boolean"
            },
            "allowedAudiences": {
              "description": "Allowed audience values to consider when validating JWTs issued by \nAzure Active Directory. Note that the <code>ClientID</code> value is always considered an\nallowed audience, regardless of this setting.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "additionalLoginParams": {
              "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "googleClientId": {
              "description": "The OpenID Connect Client ID for the Google web application.\nThis setting is required for enabling Google Sign-In.\nGoogle Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "string"
            },
            "googleClientSecret": {
              "description": "The client secret associated with the Google web application.\nThis setting is required for enabling Google Sign-In.\nGoogle Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "string"
            },
            "googleOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.\nThis setting is optional. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.\nGoogle Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "facebookAppId": {
              "description": "The App ID of the Facebook app used for login.\nThis setting is required for enabling Facebook Login.\nFacebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "string"
            },
            "facebookAppSecret": {
              "description": "The App Secret of the Facebook app used for Facebook Login.\nThis setting is required for enabling Facebook Login.\nFacebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "string"
            },
            "facebookOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.\nThis setting is optional.\nFacebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "twitterConsumerKey": {
              "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
              "type": "string"
            },
            "twitterConsumerSecret": {
              "description": "The OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
              "type": "string"
            },
            "microsoftAccountClientId": {
              "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThis setting is required for enabling Microsoft Account authentication.\nMicrosoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
              "type": "string"
            },
            "microsoftAccountClientSecret": {
              "description": "The OAuth 2.0 client secret that was created for the app used for authentication.\nThis setting is required for enabling Microsoft Account authentication.\nMicrosoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
              "type": "string"
            },
            "microsoftAccountOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.\nThis setting is optional. If not specified, \"wl.basic\" is used as the default scope.\nMicrosoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteCloneability": {
      "description": "Represents whether or not an app is cloneable.",
      "type": "object",
      "properties": {
        "result": {
          "description": "Name of app.",
          "enum": [
            "Cloneable",
            "PartiallyCloneable",
            "NotCloneable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CloneAbilityResult",
            "modelAsString": false
          }
        },
        "blockingFeatures": {
          "description": "List of features enabled on app that prevent cloning.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        },
        "unsupportedFeatures": {
          "description": "List of features enabled on app that are non-blocking but cannot be cloned. The app can still be cloned\nbut the features in this list will not be set up on cloned app.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        },
        "blockingCharacteristics": {
          "description": "List of blocking application characteristics.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        }
      }
    },
    "SiteCloneabilityCriterion": {
      "description": "An app cloneability criterion.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of criterion.",
          "type": "string"
        },
        "description": {
          "description": "Description of criterion.",
          "type": "string"
        }
      }
    },
    "SiteConfigResource": {
      "description": "Web app configuration ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SiteConfig",
          "description": "Core resource properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteConfigResourceCollection": {
      "description": "Collection of site configurations.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteConfigResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SiteConfigurationSnapshotInfo": {
      "description": "A snapshot of a web app configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteConfigurationSnapshotInfo resource specific properties",
          "properties": {
            "time": {
              "format": "date-time",
              "description": "The time the snapshot was taken.",
              "type": "string",
              "readOnly": true
            },
            "snapshotId": {
              "format": "int32",
              "description": "The id of the snapshot",
              "type": "integer",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteConfigurationSnapshotInfoCollection": {
      "description": "Collection of metadata for the app configuration snapshots that can be restored.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteConfigurationSnapshotInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SiteExtensionInfo": {
      "description": "Site Extension Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteExtensionInfo resource specific properties",
          "properties": {
            "extension_id": {
              "description": "Site extension ID.",
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "extension_type": {
              "description": "Site extension type.",
              "enum": [
                "Gallery",
                "WebRoot"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SiteExtensionType",
                "modelAsString": false
              }
            },
            "summary": {
              "description": "Summary description.",
              "type": "string"
            },
            "description": {
              "description": "Detailed description.",
              "type": "string"
            },
            "version": {
              "description": "Version information.",
              "type": "string"
            },
            "extension_url": {
              "description": "Extension URL.",
              "type": "string"
            },
            "project_url": {
              "description": "Project URL.",
              "type": "string"
            },
            "icon_url": {
              "description": "Icon URL.",
              "type": "string"
            },
            "license_url": {
              "description": "License URL.",
              "type": "string"
            },
            "feed_url": {
              "description": "Feed URL.",
              "type": "string"
            },
            "authors": {
              "description": "List of authors.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "installer_command_line_params": {
              "description": "Installer command line parameters.",
              "type": "string"
            },
            "published_date_time": {
              "format": "date-time",
              "description": "Published timestamp.",
              "type": "string"
            },
            "download_count": {
              "format": "int32",
              "description": "Count of downloads.",
              "type": "integer"
            },
            "local_is_latest_version": {
              "description": "<code>true</code> if the local version is the latest version; <code>false</code> otherwise.",
              "type": "boolean"
            },
            "local_path": {
              "description": "Local path.",
              "type": "string"
            },
            "installed_date_time": {
              "format": "date-time",
              "description": "Installed timestamp.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Provisioning state.",
              "type": "string"
            },
            "comment": {
              "description": "Site Extension comment.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteExtensionInfoCollection": {
      "description": "Collection of Kudu site extension information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteExtensionInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SiteInstance": {
      "description": "Instance of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteInstance resource specific properties",
          "properties": {
            "siteInstanceName": {
              "description": "Name of instance.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteLogsConfig": {
      "description": "Configuration of App Service site logs.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteLogsConfig resource specific properties",
          "properties": {
            "applicationLogs": {
              "$ref": "#/definitions/ApplicationLogsConfig",
              "description": "Application logs configuration."
            },
            "httpLogs": {
              "$ref": "#/definitions/HttpLogsConfig",
              "description": "HTTP logs configuration."
            },
            "failedRequestsTracing": {
              "$ref": "#/definitions/EnabledConfig",
              "description": "Failed requests tracing configuration."
            },
            "detailedErrorMessages": {
              "$ref": "#/definitions/EnabledConfig",
              "description": "Detailed error messages configuration."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SitePatchResource": {
      "description": "ARM resource for a site.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SitePatchResource resource specific properties",
          "properties": {
            "state": {
              "description": "Current state of the app.",
              "type": "string",
              "readOnly": true
            },
            "hostNames": {
              "description": "Hostnames associated with the app.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "repositorySiteName": {
              "description": "Name of the repository site.",
              "type": "string",
              "readOnly": true
            },
            "usageState": {
              "description": "State indicating whether the app has exceeded its quota usage. Read-only.",
              "enum": [
                "Normal",
                "Exceeded"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "UsageState",
                "modelAsString": false
              }
            },
            "enabled": {
              "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
              "type": "boolean"
            },
            "enabledHostNames": {
              "description": "Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,\nthe app is not served on those hostnames.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "availabilityState": {
              "description": "Management information availability state for the app.",
              "enum": [
                "Normal",
                "Limited",
                "DisasterRecoveryMode"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "SiteAvailabilityState",
                "modelAsString": false
              }
            },
            "hostNameSslStates": {
              "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostNameSslState"
              }
            },
            "serverFarmId": {
              "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
              "type": "string"
            },
            "reserved": {
              "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isXenon": {
              "description": "Obsolete: Hyper-V sandbox.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "hyperV": {
              "description": "Hyper-V sandbox.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "lastModifiedTimeUtc": {
              "format": "date-time",
              "description": "Last time the app was modified, in UTC. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "siteConfig": {
              "$ref": "#/definitions/SiteConfig",
              "description": "Configuration of the app."
            },
            "trafficManagerHostNames": {
              "description": "Azure Traffic Manager hostnames associated with the app. Read-only.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "scmSiteAlsoStopped": {
              "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
              "default": false,
              "type": "boolean"
            },
            "targetSwapSlot": {
              "description": "Specifies which deployment slot this app will swap into. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "App Service Environment to use for the app.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "clientAffinityEnabled": {
              "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
              "type": "boolean"
            },
            "clientCertEnabled": {
              "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
              "type": "boolean"
            },
            "clientCertExclusionPaths": {
              "description": "client certificate authentication comma-separated exclusion paths",
              "type": "string"
            },
            "hostNamesDisabled": {
              "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\n If <code>true</code>, the app is only accessible via API management process.",
              "type": "boolean"
            },
            "outboundIpAddresses": {
              "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "possibleOutboundIpAddresses": {
              "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants except dataComponent. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "containerSize": {
              "format": "int32",
              "description": "Size of the function container.",
              "type": "integer"
            },
            "dailyMemoryTimeQuota": {
              "format": "int32",
              "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
              "type": "integer"
            },
            "suspendedTill": {
              "format": "date-time",
              "description": "App suspended till in case memory-time quota is exceeded.",
              "type": "string",
              "readOnly": true
            },
            "maxNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of workers.\nThis only applies to Functions container.",
              "type": "integer",
              "readOnly": true
            },
            "cloningInfo": {
              "$ref": "#/definitions/CloningInfo",
              "description": "If specified during app creation, the app is cloned from a source app.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "resourceGroup": {
              "description": "Name of the resource group the app belongs to. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "isDefaultContainer": {
              "description": "<code>true</code> if the app is a default container; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "defaultHostName": {
              "description": "Default hostname of the app. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "slotSwapStatus": {
              "$ref": "#/definitions/SlotSwapStatus",
              "description": "Status of the last deployment slot swap operation.",
              "readOnly": true
            },
            "httpsOnly": {
              "description": "HttpsOnly: configures a web site to accept only https requests. Issues redirect for\nhttp requests",
              "type": "boolean"
            },
            "redundancyMode": {
              "description": "Site redundancy mode",
              "enum": [
                "None",
                "Manual",
                "Failover",
                "ActiveActive",
                "GeoRedundant"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RedundancyMode",
                "modelAsString": false
              }
            },
            "inProgressOperationId": {
              "format": "uuid",
              "description": "Specifies an operation id if this site has a pending operation.",
              "type": "string",
              "readOnly": true,
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "SitePhpErrorLogFlag": {
      "description": "Used for getting PHP error logging flag.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SitePhpErrorLogFlag resource specific properties",
          "properties": {
            "localLogErrors": {
              "description": "Local log_errors setting.",
              "type": "string"
            },
            "masterLogErrors": {
              "description": "Master log_errors setting.",
              "type": "string"
            },
            "localLogErrorsMaxLength": {
              "description": "Local log_errors_max_len setting.",
              "type": "string"
            },
            "masterLogErrorsMaxLength": {
              "description": "Master log_errors_max_len setting.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteSourceControl": {
      "description": "Source control configuration for an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteSourceControl resource specific properties",
          "properties": {
            "repoUrl": {
              "description": "Repository or source control URL.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "branch": {
              "description": "Name of branch to use for deployment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isManualIntegration": {
              "description": "<code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "deploymentRollbackEnabled": {
              "description": "<code>true</code> to enable deployment rollback; otherwise, <code>false</code>.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isMercurial": {
              "description": "<code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotConfigNames": {
      "description": "Names for connection strings, application settings, and external Azure storage account configuration\nidentifiers to be marked as sticky to the deployment slot and not moved during a swap operation.\nThis is valid for all deployment slots in an app.",
      "type": "object",
      "properties": {
        "connectionStringNames": {
          "description": "List of connection string names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appSettingNames": {
          "description": "List of application settings names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "azureStorageConfigNames": {
          "description": "List of external Azure storage account identifiers.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SlotConfigNamesResource": {
      "description": "Slot Config names azure resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SlotConfigNames",
          "description": "Core resource properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotDifference": {
      "description": "A setting difference between two deployment slots of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SlotDifference resource specific properties",
          "properties": {
            "level": {
              "description": "Level of the difference: Information, Warning or Error.",
              "type": "string",
              "readOnly": true
            },
            "settingType": {
              "description": "The type of the setting: General, AppSetting or ConnectionString.",
              "type": "string",
              "readOnly": true
            },
            "diffRule": {
              "description": "Rule that describes how to process the setting difference during a slot swap.",
              "type": "string",
              "readOnly": true
            },
            "settingName": {
              "description": "Name of the setting.",
              "type": "string",
              "readOnly": true
            },
            "valueInCurrentSlot": {
              "description": "Value of the setting in the current slot.",
              "type": "string",
              "readOnly": true
            },
            "valueInTargetSlot": {
              "description": "Value of the setting in the target slot.",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "Description of the setting difference.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotDifferenceCollection": {
      "description": "Collection of slot differences.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SlotDifference"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SnapshotCollection": {
      "description": "Collection of snapshots which can be used to revert an app to a previous time.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Snapshot"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SnapshotRecoverySource": {
      "description": "Specifies the web app that snapshot contents will be retrieved from.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Geographical location of the source web app, e.g. SouthEastAsia, SouthCentralUS",
          "type": "string"
        },
        "id": {
          "description": "ARM resource ID of the source app. \n/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and \n/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.",
          "type": "string"
        }
      }
    },
    "SnapshotRestoreRequest": {
      "description": "Details about app recovery operation.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SnapshotRestoreRequest resource specific properties",
          "required": [
            "overwrite"
          ],
          "properties": {
            "snapshotTime": {
              "description": "Point in time in which the app restore should be done, formatted as a DateTime string.",
              "type": "string"
            },
            "recoverySource": {
              "$ref": "#/definitions/SnapshotRecoverySource",
              "description": "Optional. Specifies the web app that snapshot contents will be retrieved from.\nIf empty, the targeted web app will be used as the source."
            },
            "overwrite": {
              "description": "If <code>true</code> the restore operation can overwrite source app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "recoverConfiguration": {
              "description": "If true, site configuration, in addition to content, will be reverted.",
              "type": "boolean"
            },
            "ignoreConflictingHostNames": {
              "description": "If true, custom hostname conflicts will be ignored when recovering to a target web app.\nThis setting is only necessary when RecoverConfiguration is enabled.",
              "type": "boolean"
            },
            "useDRSecondary": {
              "description": "If true, the snapshot is retrieved from DRSecondary endpoint.",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageMigrationOptions": {
      "description": "Options for app content migration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StorageMigrationOptions resource specific properties",
          "required": [
            "azurefilesConnectionString",
            "azurefilesShare"
          ],
          "properties": {
            "azurefilesConnectionString": {
              "description": "AzureFiles connection string.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ]
            },
            "azurefilesShare": {
              "description": "AzureFiles share.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ]
            },
            "switchSiteAfterMigration": {
              "description": "<code>true</code>if the app should be switched over; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create"
              ]
            },
            "blockWriteAccessToSite": {
              "description": "<code>true</code> if the app should be read only during copy operation; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageMigrationResponse": {
      "description": "Response for a migration of app content request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StorageMigrationResponse resource specific properties",
          "properties": {
            "operationId": {
              "description": "When server starts the migration process, it will return an operation ID identifying that particular migration operation.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StringDictionary": {
      "description": "String dictionary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Settings.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SwiftVirtualNetwork": {
      "description": "Swift Virtual Network Contract. This is used to enable the new Swift way of doing virtual network integration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SwiftVirtualNetwork resource specific properties",
          "properties": {
            "subnetResourceId": {
              "description": "The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.",
              "type": "string"
            },
            "swiftSupported": {
              "description": "A flag that specifies if the scale unit this Web App is on supports Swift integration.",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredJobHistory": {
      "description": "Triggered Web Job History. List of Triggered Web Job Run Information elements.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "TriggeredJobHistory resource specific properties",
          "properties": {
            "runs": {
              "description": "List of triggered web job runs.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TriggeredJobRun"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredJobHistoryCollection": {
      "description": "Collection of Kudu continuous web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggeredJobHistory"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TriggeredJobRun": {
      "description": "Triggered Web Job Run Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "TriggeredJobRun resource specific properties",
          "properties": {
            "web_job_id": {
              "description": "Job ID.",
              "type": "string"
            },
            "web_job_name": {
              "description": "Job name.",
              "type": "string"
            },
            "status": {
              "description": "Job status.",
              "enum": [
                "Success",
                "Failed",
                "Error"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TriggeredWebJobStatus",
                "modelAsString": false
              }
            },
            "start_time": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string"
            },
            "end_time": {
              "format": "date-time",
              "description": "End time.",
              "type": "string"
            },
            "duration": {
              "description": "Job duration.",
              "type": "string"
            },
            "output_url": {
              "description": "Output URL.",
              "type": "string"
            },
            "error_url": {
              "description": "Error URL.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "job_name": {
              "description": "Job name.",
              "type": "string"
            },
            "trigger": {
              "description": "Job trigger.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredWebJob": {
      "description": "Triggered Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "TriggeredWebJob resource specific properties",
          "properties": {
            "latest_run": {
              "$ref": "#/definitions/TriggeredJobRun",
              "description": "Latest job run information."
            },
            "history_url": {
              "description": "History URL.",
              "type": "string"
            },
            "scheduler_logs_url": {
              "description": "Scheduler Logs URL.",
              "type": "string"
            },
            "run_command": {
              "description": "Run command.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "extra_info_url": {
              "description": "Extra Info URL.",
              "type": "string"
            },
            "web_job_type": {
              "description": "Job type.",
              "enum": [
                "Continuous",
                "Triggered"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "WebJobType",
                "modelAsString": false
              }
            },
            "error": {
              "description": "Error information.",
              "type": "string"
            },
            "using_sdk": {
              "description": "Using SDK?",
              "type": "boolean"
            },
            "settings": {
              "description": "Job settings.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredWebJobCollection": {
      "description": "Collection of Kudu continuous web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggeredWebJob"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WebAppInstanceCollection": {
      "description": "Collection of app instances.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteInstance"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WebJob": {
      "description": "Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "WebJob resource specific properties",
          "properties": {
            "run_command": {
              "description": "Run command.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "extra_info_url": {
              "description": "Extra Info URL.",
              "type": "string"
            },
            "web_job_type": {
              "description": "Job type.",
              "enum": [
                "Continuous",
                "Triggered"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "WebJobType",
                "modelAsString": false
              }
            },
            "error": {
              "description": "Error information.",
              "type": "string"
            },
            "using_sdk": {
              "description": "Using SDK?",
              "type": "boolean"
            },
            "settings": {
              "description": "Job settings.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "WebJobCollection": {
      "description": "Collection of Kudu web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebJob"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WebSiteInstanceStatus": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "WebSiteInstanceStatus resource specific properties",
          "properties": {
            "state": {
              "enum": [
                "READY",
                "STOPPED",
                "UNKNOWN"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SiteRuntimeState",
                "modelAsString": false
              }
            },
            "statusUrl": {
              "description": "Link to the GetStatusApi in Kudu",
              "type": "string"
            },
            "detectorUrl": {
              "description": "Link to the Diagnose and Solve Portal",
              "type": "string"
            },
            "consoleUrl": {
              "description": "Link to the Diagnose and Solve Portal",
              "type": "string"
            },
            "containers": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ContainerInfo"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetRoute": {
      "description": "Virtual Network route contract used to pass routing information for a Virtual Network.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetRoute resource specific properties",
          "properties": {
            "startAddress": {
              "description": "The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.",
              "type": "string"
            },
            "endAddress": {
              "description": "The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.",
              "type": "string"
            },
            "routeType": {
              "description": "The type of route this is:\nDEFAULT - By default, every app has routes to the local address ranges specified by RFC1918\nINHERITED - Routes inherited from the real Virtual Network routes\nSTATIC - Static route set on the app only\n\nThese values will be used for syncing an app's routes with those from a Virtual Network.",
              "enum": [
                "DEFAULT",
                "INHERITED",
                "STATIC"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RouteType",
                "modelAsString": true
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetInfo": {
      "description": "Virtual Network information contract.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetInfo resource specific properties",
          "properties": {
            "vnetResourceId": {
              "description": "The Virtual Network's resource ID.",
              "type": "string"
            },
            "certThumbprint": {
              "description": "The client certificate thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "certBlob": {
              "description": "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \nPoint-To-Site VPN connection.",
              "type": "string"
            },
            "routes": {
              "description": "The routes that this Virtual Network connection uses.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VnetRoute"
              },
              "readOnly": true
            },
            "resyncRequired": {
              "description": "<code>true</code> if a resync is required; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "dnsServers": {
              "description": "DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.",
              "type": "string"
            },
            "isSwift": {
              "description": "Flag that is used to denote if this is VNET injection",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetGateway": {
      "description": "The Virtual Network gateway contract. This is used to give the Virtual Network gateway access to the VPN package.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetGateway resource specific properties",
          "required": [
            "vpnPackageUri"
          ],
          "properties": {
            "vnetName": {
              "description": "The Virtual Network name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "vpnPackageUri": {
              "description": "The URI where the VPN package can be downloaded.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "User": {
      "description": "User credentials used for publishing activity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "User resource specific properties",
          "required": [
            "publishingUserName"
          ],
          "properties": {
            "publishingUserName": {
              "description": "Username used for publishing.",
              "type": "string"
            },
            "publishingPassword": {
              "format": "password",
              "description": "Password used for publishing.",
              "type": "string"
            },
            "publishingPasswordHash": {
              "format": "password",
              "description": "Password hash used for publishing.",
              "type": "string"
            },
            "publishingPasswordHashSalt": {
              "format": "password",
              "description": "Password hash salt used for publishing.",
              "type": "string"
            },
            "scmUri": {
              "description": "Url of SCM site.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Snapshot": {
      "description": "A snapshot of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Snapshot resource specific properties",
          "properties": {
            "time": {
              "description": "The time the snapshot was taken.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PushSettings": {
      "description": "Push settings for the App.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PushSettings resource specific properties",
          "required": [
            "isPushEnabled"
          ],
          "properties": {
            "isPushEnabled": {
              "description": "Gets or sets a flag indicating whether the Push endpoint is enabled.",
              "type": "boolean"
            },
            "tagWhitelistJson": {
              "description": "Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.",
              "type": "string"
            },
            "tagsRequiringAuth": {
              "description": "Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.\nTags can consist of alphanumeric characters and the following:\n'_', '@', '#', '.', ':', '-'. \nValidation should be performed at the PushRequestHandler.",
              "type": "string"
            },
            "dynamicTagsJson": {
              "description": "Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Identifier": {
      "description": "A domain specific resource identifier.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Identifier resource specific properties",
          "properties": {
            "id": {
              "description": "String representation of the identity.",
              "type": "string",
              "x-ms-client-name": "value"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HybridConnection": {
      "description": "Hybrid Connection contract. This is used to configure a Hybrid Connection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HybridConnection resource specific properties",
          "properties": {
            "serviceBusNamespace": {
              "description": "The name of the Service Bus namespace.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayName": {
              "description": "The name of the Service Bus relay.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayArmUri": {
              "description": "The ARM URI to the Service Bus relay.",
              "type": "string"
            },
            "hostname": {
              "description": "The hostname of the endpoint.",
              "type": "string"
            },
            "port": {
              "format": "int32",
              "description": "The port of the endpoint.",
              "type": "integer"
            },
            "sendKeyName": {
              "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
              "type": "string"
            },
            "sendKeyValue": {
              "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\nnormally, use the POST /listKeys API instead.",
              "type": "string"
            },
            "serviceBusSuffix": {
              "description": "The suffix for the service bus endpoint. By default this is .servicebus.windows.net",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DeletedSite": {
      "description": "A deleted app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DeletedSite resource specific properties",
          "properties": {
            "deletedSiteId": {
              "format": "int32",
              "description": "Numeric id for the deleted site",
              "type": "integer",
              "readOnly": true
            },
            "deletedTimestamp": {
              "description": "Time in UTC when the app was deleted.",
              "type": "string",
              "readOnly": true
            },
            "subscription": {
              "description": "Subscription containing the deleted site",
              "type": "string",
              "readOnly": true
            },
            "resourceGroup": {
              "description": "ResourceGroup that contained the deleted site",
              "type": "string",
              "readOnly": true
            },
            "deletedSiteName": {
              "description": "Name of the deleted site",
              "type": "string",
              "readOnly": true
            },
            "slot": {
              "description": "Slot of the deleted site",
              "type": "string",
              "readOnly": true
            },
            "kind": {
              "description": "Kind of site that was deleted",
              "type": "string",
              "readOnly": true
            },
            "geoRegionName": {
              "description": "Geo Region of the deleted site",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProxyOnlyResource": {
      "description": "Azure proxy only resource. This resource is not tracked by Azure Resource Manager.",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of managed service identity.",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": false
          }
        },
        "tenantId": {
          "description": "Tenant of managed service identity.",
          "type": "string",
          "readOnly": true
        },
        "principalId": {
          "description": "Principal Id of managed service identity.",
          "type": "string",
          "readOnly": true
        },
        "userAssignedIdentities": {
          "description": "The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "principalId": {
                "description": "Principal Id of user assigned identity",
                "type": "string",
                "readOnly": true
              },
              "clientId": {
                "description": "Client Id of user assigned identity",
                "type": "string",
                "readOnly": true
              }
            }
          }
        }
      }
    },
    "SlotSwapStatus": {
      "description": "The status of the last successful slot swap operation.",
      "type": "object",
      "properties": {
        "timestampUtc": {
          "format": "date-time",
          "description": "The time the last successful slot swap completed.",
          "type": "string",
          "readOnly": true
        },
        "sourceSlotName": {
          "description": "The source slot of the last swap operation.",
          "type": "string",
          "readOnly": true
        },
        "destinationSlotName": {
          "description": "The destination slot of the last swap operation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CloningInfo": {
      "description": "Information needed for cloning operation.",
      "required": [
        "sourceWebAppId"
      ],
      "type": "object",
      "properties": {
        "correlationId": {
          "format": "uuid",
          "description": "Correlation ID of cloning operation. This ID ties multiple cloning operations\ntogether to use the same snapshot.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "overwrite": {
          "description": "<code>true</code> to overwrite destination app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "cloneCustomHostNames": {
          "description": "<code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "cloneSourceControl": {
          "description": "<code>true</code> to clone source control from source app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "sourceWebAppId": {
          "description": "ARM resource ID of the source app. App resource ID is of the form \n/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and \n/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.",
          "type": "string"
        },
        "sourceWebAppLocation": {
          "description": "Location of source app ex: West US or North Europe",
          "type": "string"
        },
        "hostingEnvironment": {
          "description": "App Service Environment.",
          "type": "string"
        },
        "appSettingsOverrides": {
          "description": "Application setting overrides for cloned app. If specified, these settings override the settings cloned \nfrom source app. Otherwise, application settings from source app are retained.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configureLoadBalancing": {
          "description": "<code>true</code> to configure load balancing for source and destination app.",
          "type": "boolean"
        },
        "trafficManagerProfileId": {
          "description": "ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form \n/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.",
          "type": "string"
        },
        "trafficManagerProfileName": {
          "description": "Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.",
          "type": "string"
        }
      }
    },
    "HostingEnvironmentProfile": {
      "description": "Specification for an App Service Environment to use for this resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource ID of the App Service Environment.",
          "type": "string"
        },
        "name": {
          "description": "Name of the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type of the App Service Environment.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IpSecurityRestriction": {
      "description": "IP security restriction on an app.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "IP address the security restriction is valid for.\nIt can be in form of pure ipv4 address (required SubnetMask property) or\nCIDR notation such as ipv4/mask (leading bit match). For CIDR,\nSubnetMask property must not be specified.",
          "type": "string"
        },
        "subnetMask": {
          "description": "Subnet mask for the range of IP addresses the restriction is valid for.",
          "type": "string"
        },
        "vnetSubnetResourceId": {
          "description": "Virtual network resource id",
          "type": "string"
        },
        "vnetTrafficTag": {
          "format": "int32",
          "description": "(internal) Vnet traffic tag",
          "type": "integer"
        },
        "subnetTrafficTag": {
          "format": "int32",
          "description": "(internal) Subnet traffic tag",
          "type": "integer"
        },
        "action": {
          "description": "Allow or Deny access for this IP range.",
          "type": "string"
        },
        "tag": {
          "description": "Defines what this IP filter will be used for. This is to support IP filtering on proxies.",
          "enum": [
            "Default",
            "XffProxy"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IpFilterTag",
            "modelAsString": false
          }
        },
        "priority": {
          "format": "int32",
          "description": "Priority of IP restriction rule.",
          "type": "integer"
        },
        "name": {
          "description": "IP restriction rule name.",
          "type": "string"
        },
        "description": {
          "description": "IP restriction rule description.",
          "type": "string"
        }
      }
    },
    "ApiManagementConfig": {
      "description": "Azure API management (APIM) configuration linked to the app.",
      "type": "object",
      "properties": {
        "id": {
          "description": "APIM-Api Identifier.",
          "type": "string"
        }
      }
    },
    "ApiDefinitionInfo": {
      "description": "Information about the formal API definition for the app.",
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL of the API definition.",
          "type": "string"
        }
      }
    },
    "CorsSettings": {
      "description": "Cross-Origin Resource Sharing (CORS) settings for the app.",
      "type": "object",
      "properties": {
        "allowedOrigins": {
          "description": "Gets or sets the list of origins that should be allowed to make cross-origin\ncalls (for example: http://example.com:12345). Use \"*\" to allow all.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportCredentials": {
          "description": "Gets or sets whether CORS requests with credentials are allowed. See \nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials\nfor more details.",
          "type": "boolean"
        }
      }
    },
    "AutoHealCustomAction": {
      "description": "Custom action to be executed\nwhen an auto heal rule is triggered.",
      "type": "object",
      "properties": {
        "exe": {
          "description": "Executable to be run.",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the executable.",
          "type": "string"
        }
      }
    },
    "AutoHealActions": {
      "description": "Actions which to take by the auto-heal module when a rule is triggered.",
      "type": "object",
      "properties": {
        "actionType": {
          "description": "Predefined action to be taken.",
          "enum": [
            "Recycle",
            "LogEvent",
            "CustomAction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AutoHealActionType",
            "modelAsString": false
          }
        },
        "customAction": {
          "$ref": "#/definitions/AutoHealCustomAction",
          "description": "Custom action to be taken."
        },
        "minProcessExecutionTime": {
          "description": "Minimum time the process must execute\nbefore taking the action",
          "type": "string"
        }
      }
    },
    "SlowRequestsBasedTrigger": {
      "description": "Trigger based on request execution time.",
      "type": "object",
      "properties": {
        "timeTaken": {
          "description": "Time taken.",
          "type": "string"
        },
        "count": {
          "format": "int32",
          "description": "Request Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "StatusCodesBasedTrigger": {
      "description": "Trigger based on status code.",
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "subStatus": {
          "format": "int32",
          "description": "Request Sub Status.",
          "type": "integer"
        },
        "win32Status": {
          "format": "int32",
          "description": "Win32 error code.",
          "type": "integer"
        },
        "count": {
          "format": "int32",
          "description": "Request Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "RequestsBasedTrigger": {
      "description": "Trigger based on total requests.",
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "description": "Request Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "AutoHealTriggers": {
      "description": "Triggers for auto-heal.",
      "type": "object",
      "properties": {
        "requests": {
          "$ref": "#/definitions/RequestsBasedTrigger",
          "description": "A rule based on total requests."
        },
        "privateBytesInKB": {
          "format": "int32",
          "description": "A rule based on private bytes.",
          "type": "integer"
        },
        "statusCodes": {
          "description": "A rule based on status codes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCodesBasedTrigger"
          }
        },
        "slowRequests": {
          "$ref": "#/definitions/SlowRequestsBasedTrigger",
          "description": "A rule based on request execution time."
        }
      }
    },
    "AutoHealRules": {
      "description": "Rules that can be defined for auto-heal.",
      "type": "object",
      "properties": {
        "triggers": {
          "$ref": "#/definitions/AutoHealTriggers",
          "description": "Conditions that describe when to execute the auto-heal actions."
        },
        "actions": {
          "$ref": "#/definitions/AutoHealActions",
          "description": "Actions to be executed when a rule is triggered."
        }
      }
    },
    "SiteLimits": {
      "description": "Metric limits set on an app.",
      "type": "object",
      "properties": {
        "maxPercentageCpu": {
          "format": "double",
          "description": "Maximum allowed CPU usage percentage.",
          "type": "number"
        },
        "maxMemoryInMb": {
          "format": "int64",
          "description": "Maximum allowed memory usage in MB.",
          "type": "integer"
        },
        "maxDiskSizeInMb": {
          "format": "int64",
          "description": "Maximum allowed disk size usage in MB.",
          "type": "integer"
        }
      }
    },
    "RampUpRule": {
      "description": "Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.",
      "type": "object",
      "properties": {
        "actionHostName": {
          "description": "Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.",
          "type": "string"
        },
        "reroutePercentage": {
          "format": "double",
          "description": "Percentage of the traffic which will be redirected to <code>ActionHostName</code>.",
          "type": "number"
        },
        "changeStep": {
          "format": "double",
          "description": "In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \\n<code>MinReroutePercentage</code> or \n<code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\\nCustom decision algorithm \ncan be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.",
          "type": "number"
        },
        "changeIntervalInMinutes": {
          "format": "int32",
          "description": "Specifies interval in minutes to reevaluate ReroutePercentage.",
          "type": "integer"
        },
        "minReroutePercentage": {
          "format": "double",
          "description": "Specifies lower boundary above which ReroutePercentage will stay.",
          "type": "number"
        },
        "maxReroutePercentage": {
          "format": "double",
          "description": "Specifies upper boundary below which ReroutePercentage will stay.",
          "type": "number"
        },
        "changeDecisionCallbackUrl": {
          "description": "Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.\nhttps://www.siteextensions.net/packages/TiPCallback/",
          "type": "string"
        },
        "name": {
          "description": "Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.",
          "type": "string"
        }
      }
    },
    "Experiments": {
      "description": "Routing rules in production experiments.",
      "type": "object",
      "properties": {
        "rampUpRules": {
          "description": "List of ramp-up rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RampUpRule"
          }
        }
      }
    },
    "VirtualDirectory": {
      "description": "Directory for virtual application.",
      "type": "object",
      "properties": {
        "virtualPath": {
          "description": "Path to virtual application.",
          "type": "string"
        },
        "physicalPath": {
          "description": "Physical path.",
          "type": "string"
        }
      }
    },
    "VirtualApplication": {
      "description": "Virtual application in an app.",
      "type": "object",
      "properties": {
        "virtualPath": {
          "description": "Virtual path.",
          "type": "string"
        },
        "physicalPath": {
          "description": "Physical path.",
          "type": "string"
        },
        "preloadEnabled": {
          "description": "<code>true</code> if preloading is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "virtualDirectories": {
          "description": "Virtual directories for virtual application.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualDirectory"
          }
        }
      }
    },
    "HandlerMapping": {
      "description": "The IIS handler mappings used to define which handler processes HTTP requests with certain extension. \nFor example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.",
      "type": "object",
      "properties": {
        "extension": {
          "description": "Requests with this extension will be handled using the specified FastCGI application.",
          "type": "string"
        },
        "scriptProcessor": {
          "description": "The absolute path to the FastCGI application.",
          "type": "string"
        },
        "arguments": {
          "description": "Command-line arguments to be passed to the script processor.",
          "type": "string"
        }
      }
    },
    "SiteMachineKey": {
      "description": "MachineKey of an app.",
      "type": "object",
      "properties": {
        "validation": {
          "description": "MachineKey validation.",
          "type": "string"
        },
        "validationKey": {
          "description": "Validation key.",
          "type": "string"
        },
        "decryption": {
          "description": "Algorithm used for decryption.",
          "type": "string"
        },
        "decryptionKey": {
          "description": "Decryption key.",
          "type": "string"
        }
      }
    },
    "ConnStringInfo": {
      "description": "Database connection string information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of connection string.",
          "type": "string"
        },
        "connectionString": {
          "description": "Connection string value.",
          "type": "string"
        },
        "type": {
          "description": "Type of database.",
          "enum": [
            "MySql",
            "SQLServer",
            "SQLAzure",
            "Custom",
            "NotificationHub",
            "ServiceBus",
            "EventHub",
            "ApiHub",
            "DocDb",
            "RedisCache",
            "PostgreSQL"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConnectionStringType",
            "modelAsString": false
          }
        }
      }
    },
    "NameValuePair": {
      "description": "Name value pair.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Pair name.",
          "type": "string"
        },
        "value": {
          "description": "Pair value.",
          "type": "string"
        }
      }
    },
    "SiteConfig": {
      "description": "Configuration of an App Service app.",
      "type": "object",
      "properties": {
        "numberOfWorkers": {
          "format": "int32",
          "description": "Number of workers.",
          "type": "integer"
        },
        "defaultDocuments": {
          "description": "Default documents.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "netFrameworkVersion": {
          "description": ".NET Framework version.",
          "default": "v4.6",
          "type": "string"
        },
        "phpVersion": {
          "description": "Version of PHP.",
          "type": "string"
        },
        "pythonVersion": {
          "description": "Version of Python.",
          "type": "string"
        },
        "nodeVersion": {
          "description": "Version of Node.js.",
          "type": "string"
        },
        "linuxFxVersion": {
          "description": "Linux App Framework and version",
          "type": "string"
        },
        "windowsFxVersion": {
          "description": "Xenon App Framework and version",
          "type": "string"
        },
        "requestTracingEnabled": {
          "description": "<code>true</code> if request tracing is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "requestTracingExpirationTime": {
          "format": "date-time",
          "description": "Request tracing expiration time.",
          "type": "string"
        },
        "remoteDebuggingEnabled": {
          "description": "<code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "remoteDebuggingVersion": {
          "description": "Remote debugging version.",
          "type": "string"
        },
        "httpLoggingEnabled": {
          "description": "<code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "logsDirectorySizeLimit": {
          "format": "int32",
          "description": "HTTP logs directory size limit.",
          "type": "integer"
        },
        "detailedErrorLoggingEnabled": {
          "description": "<code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "publishingUsername": {
          "description": "Publishing user name.",
          "type": "string"
        },
        "appSettings": {
          "description": "Application settings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        },
        "connectionStrings": {
          "description": "Connection strings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnStringInfo"
          }
        },
        "machineKey": {
          "$ref": "#/definitions/SiteMachineKey",
          "description": "Site MachineKey.",
          "readOnly": true
        },
        "handlerMappings": {
          "description": "Handler mappings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HandlerMapping"
          }
        },
        "documentRoot": {
          "description": "Document root.",
          "type": "string"
        },
        "scmType": {
          "description": "SCM type.",
          "enum": [
            "None",
            "Dropbox",
            "Tfs",
            "LocalGit",
            "GitHub",
            "CodePlexGit",
            "CodePlexHg",
            "BitbucketGit",
            "BitbucketHg",
            "ExternalGit",
            "ExternalHg",
            "OneDrive",
            "VSO",
            "VSTSRM"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ScmType",
            "modelAsString": true
          }
        },
        "use32BitWorkerProcess": {
          "description": "<code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "webSocketsEnabled": {
          "description": "<code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "alwaysOn": {
          "description": "<code>true</code> if Always On is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "javaVersion": {
          "description": "Java version.",
          "type": "string"
        },
        "javaContainer": {
          "description": "Java container.",
          "type": "string"
        },
        "javaContainerVersion": {
          "description": "Java container version.",
          "type": "string"
        },
        "appCommandLine": {
          "description": "App command line to launch.",
          "type": "string"
        },
        "managedPipelineMode": {
          "description": "Managed pipeline mode.",
          "enum": [
            "Integrated",
            "Classic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagedPipelineMode",
            "modelAsString": false
          }
        },
        "virtualApplications": {
          "description": "Virtual applications.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualApplication"
          }
        },
        "loadBalancing": {
          "description": "Site load balancing.",
          "enum": [
            "WeightedRoundRobin",
            "LeastRequests",
            "LeastResponseTime",
            "WeightedTotalTraffic",
            "RequestHash"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SiteLoadBalancing",
            "modelAsString": false
          }
        },
        "experiments": {
          "$ref": "#/definitions/Experiments",
          "description": "This is work around for polymorphic types."
        },
        "limits": {
          "$ref": "#/definitions/SiteLimits",
          "description": "Site limits."
        },
        "autoHealEnabled": {
          "description": "<code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "autoHealRules": {
          "$ref": "#/definitions/AutoHealRules",
          "description": "Auto Heal rules."
        },
        "tracingOptions": {
          "description": "Tracing options.",
          "type": "string"
        },
        "vnetName": {
          "description": "Virtual Network name.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "cors": {
          "$ref": "#/definitions/CorsSettings",
          "description": "Cross-Origin Resource Sharing (CORS) settings."
        },
        "push": {
          "$ref": "#/definitions/PushSettings",
          "description": "Push endpoint settings."
        },
        "apiDefinition": {
          "$ref": "#/definitions/ApiDefinitionInfo",
          "description": "Information about the formal API definition for the app."
        },
        "apiManagementConfig": {
          "$ref": "#/definitions/ApiManagementConfig",
          "description": "Azure API management settings linked to the app."
        },
        "autoSwapSlotName": {
          "description": "Auto-swap slot name.",
          "type": "string"
        },
        "localMySqlEnabled": {
          "description": "<code>true</code> to enable local MySQL; otherwise, <code>false</code>.",
          "default": false,
          "type": "boolean"
        },
        "managedServiceIdentityId": {
          "format": "int32",
          "description": "Managed Service Identity Id",
          "type": "integer"
        },
        "xManagedServiceIdentityId": {
          "format": "int32",
          "description": "Explicit Managed Service Identity Id",
          "type": "integer"
        },
        "ipSecurityRestrictions": {
          "description": "IP security restrictions for main.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpSecurityRestriction"
          }
        },
        "scmIpSecurityRestrictions": {
          "description": "IP security restrictions for scm.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpSecurityRestriction"
          }
        },
        "scmIpSecurityRestrictionsUseMain": {
          "description": "IP security restrictions for scm to use main.",
          "type": "boolean"
        },
        "http20Enabled": {
          "description": "Http20Enabled: configures a web site to allow clients to connect over http2.0",
          "default": true,
          "type": "boolean"
        },
        "minTlsVersion": {
          "description": "MinTlsVersion: configures the minimum version of TLS required for SSL requests",
          "enum": [
            "1.0",
            "1.1",
            "1.2"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SupportedTlsVersions",
            "modelAsString": true
          }
        },
        "ftpsState": {
          "description": "State of FTP / FTPS service",
          "enum": [
            "AllAllowed",
            "FtpsOnly",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FtpsState",
            "modelAsString": true
          }
        },
        "preWarmedInstanceCount": {
          "format": "int32",
          "description": "Number of preWarmed instances.\nThis setting only applies to the Consumption and Elastic Plans",
          "maximum": 10,
          "minimum": 0,
          "type": "integer"
        },
        "healthCheckPath": {
          "description": "Health check path",
          "type": "string"
        }
      }
    },
    "HostNameSslState": {
      "description": "SSL-enabled hostname.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Hostname.",
          "type": "string"
        },
        "sslState": {
          "description": "SSL type.",
          "enum": [
            "Disabled",
            "SniEnabled",
            "IpBasedEnabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SslState",
            "modelAsString": false
          }
        },
        "virtualIP": {
          "description": "Virtual IP address assigned to the hostname if IP based SSL is enabled.",
          "type": "string"
        },
        "thumbprint": {
          "description": "SSL certificate thumbprint.",
          "type": "string"
        },
        "toUpdate": {
          "description": "Set to <code>true</code> to update existing hostname.",
          "type": "boolean"
        },
        "hostType": {
          "description": "Indicates whether the hostname is a standard or repository hostname.",
          "enum": [
            "Standard",
            "Repository"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HostType",
            "modelAsString": false
          }
        }
      }
    },
    "Site": {
      "description": "A web app, a mobile app backend, or an API app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Site resource specific properties",
          "properties": {
            "state": {
              "description": "Current state of the app.",
              "type": "string",
              "readOnly": true
            },
            "hostNames": {
              "description": "Hostnames associated with the app.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "repositorySiteName": {
              "description": "Name of the repository site.",
              "type": "string",
              "readOnly": true
            },
            "usageState": {
              "description": "State indicating whether the app has exceeded its quota usage. Read-only.",
              "enum": [
                "Normal",
                "Exceeded"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "UsageState",
                "modelAsString": false
              }
            },
            "enabled": {
              "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
              "type": "boolean"
            },
            "enabledHostNames": {
              "description": "Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,\nthe app is not served on those hostnames.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "availabilityState": {
              "description": "Management information availability state for the app.",
              "enum": [
                "Normal",
                "Limited",
                "DisasterRecoveryMode"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "SiteAvailabilityState",
                "modelAsString": false
              }
            },
            "hostNameSslStates": {
              "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostNameSslState"
              }
            },
            "serverFarmId": {
              "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
              "type": "string"
            },
            "reserved": {
              "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isXenon": {
              "description": "Obsolete: Hyper-V sandbox.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "hyperV": {
              "description": "Hyper-V sandbox.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "lastModifiedTimeUtc": {
              "format": "date-time",
              "description": "Last time the app was modified, in UTC. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "siteConfig": {
              "$ref": "#/definitions/SiteConfig",
              "description": "Configuration of the app."
            },
            "trafficManagerHostNames": {
              "description": "Azure Traffic Manager hostnames associated with the app. Read-only.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "scmSiteAlsoStopped": {
              "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
              "default": false,
              "type": "boolean"
            },
            "targetSwapSlot": {
              "description": "Specifies which deployment slot this app will swap into. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "App Service Environment to use for the app.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "clientAffinityEnabled": {
              "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
              "type": "boolean"
            },
            "clientCertEnabled": {
              "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
              "type": "boolean"
            },
            "clientCertExclusionPaths": {
              "description": "client certificate authentication comma-separated exclusion paths",
              "type": "string"
            },
            "hostNamesDisabled": {
              "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\n If <code>true</code>, the app is only accessible via API management process.",
              "type": "boolean"
            },
            "outboundIpAddresses": {
              "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "possibleOutboundIpAddresses": {
              "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants except dataComponent. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "containerSize": {
              "format": "int32",
              "description": "Size of the function container.",
              "type": "integer"
            },
            "dailyMemoryTimeQuota": {
              "format": "int32",
              "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
              "type": "integer"
            },
            "suspendedTill": {
              "format": "date-time",
              "description": "App suspended till in case memory-time quota is exceeded.",
              "type": "string",
              "readOnly": true
            },
            "maxNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of workers.\nThis only applies to Functions container.",
              "type": "integer",
              "readOnly": true
            },
            "cloningInfo": {
              "$ref": "#/definitions/CloningInfo",
              "description": "If specified during app creation, the app is cloned from a source app.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "resourceGroup": {
              "description": "Name of the resource group the app belongs to. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "isDefaultContainer": {
              "description": "<code>true</code> if the app is a default container; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "defaultHostName": {
              "description": "Default hostname of the app. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "slotSwapStatus": {
              "$ref": "#/definitions/SlotSwapStatus",
              "description": "Status of the last deployment slot swap operation.",
              "readOnly": true
            },
            "httpsOnly": {
              "description": "HttpsOnly: configures a web site to accept only https requests. Issues redirect for\nhttp requests",
              "type": "boolean"
            },
            "redundancyMode": {
              "description": "Site redundancy mode",
              "enum": [
                "None",
                "Manual",
                "Failover",
                "ActiveActive",
                "GeoRedundant"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RedundancyMode",
                "modelAsString": false
              }
            },
            "inProgressOperationId": {
              "format": "uuid",
              "description": "Specifies an operation id if this site has a pending operation.",
              "type": "string",
              "readOnly": true,
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "Capability": {
      "description": "Describes the capabilities/features allowed for a specific SKU.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the SKU capability.",
          "type": "string"
        },
        "value": {
          "description": "Value of the SKU capability.",
          "type": "string"
        },
        "reason": {
          "description": "Reason of the SKU capability.",
          "type": "string"
        }
      }
    },
    "SkuCapacity": {
      "description": "Description of the App Service plan scale options.",
      "type": "object",
      "properties": {
        "minimum": {
          "format": "int32",
          "description": "Minimum number of workers for this App Service plan SKU.",
          "type": "integer"
        },
        "maximum": {
          "format": "int32",
          "description": "Maximum number of workers for this App Service plan SKU.",
          "type": "integer"
        },
        "default": {
          "format": "int32",
          "description": "Default number of workers for this App Service plan SKU.",
          "type": "integer"
        },
        "scaleType": {
          "description": "Available scale configurations for an App Service plan.",
          "type": "string"
        }
      }
    },
    "SkuDescription": {
      "description": "Description of a SKU for a scalable resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the resource SKU.",
          "type": "string"
        },
        "tier": {
          "description": "Service tier of the resource SKU.",
          "type": "string"
        },
        "size": {
          "description": "Size specifier of the resource SKU.",
          "type": "string"
        },
        "family": {
          "description": "Family code of the resource SKU.",
          "type": "string"
        },
        "capacity": {
          "format": "int32",
          "description": "Current number of instances assigned to the resource.",
          "type": "integer"
        },
        "skuCapacity": {
          "$ref": "#/definitions/SkuCapacity",
          "description": "Min, max, and default scale values of the SKU."
        },
        "locations": {
          "description": "Locations of the SKU.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "description": "Capabilities of the SKU, e.g., is traffic manager enabled?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Capability"
          }
        }
      }
    },
    "AppServicePlan": {
      "description": "App Service plan.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "AppServicePlan resource specific properties",
          "properties": {
            "workerTierName": {
              "description": "Target worker tier assigned to the App Service plan.",
              "type": "string"
            },
            "status": {
              "description": "App Service plan status.",
              "enum": [
                "Ready",
                "Pending",
                "Creating"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "StatusOptions",
                "modelAsString": false
              }
            },
            "subscription": {
              "description": "App Service plan subscription.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "Specification for the App Service Environment to use for the App Service plan.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "maximumNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of instances that can be assigned to this App Service plan.",
              "type": "integer",
              "readOnly": true
            },
            "geoRegion": {
              "description": "Geographical location for the App Service plan.",
              "type": "string",
              "readOnly": true
            },
            "perSiteScaling": {
              "description": "If <code>true</code>, apps assigned to this App Service plan can be scaled independently.\nIf <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.",
              "default": false,
              "type": "boolean"
            },
            "maximumElasticWorkerCount": {
              "format": "int32",
              "description": "Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan",
              "type": "integer"
            },
            "numberOfSites": {
              "format": "int32",
              "description": "Number of apps assigned to this App Service plan.",
              "type": "integer",
              "readOnly": true
            },
            "isSpot": {
              "description": "If <code>true</code>, this App Service Plan owns spot instances.",
              "type": "boolean"
            },
            "spotExpirationTime": {
              "format": "date-time",
              "description": "The time when the server farm expires. Valid only if it is a spot server farm.",
              "type": "string"
            },
            "freeOfferExpirationTime": {
              "format": "date-time",
              "description": "The time when the server farm free offer expires.",
              "type": "string"
            },
            "resourceGroup": {
              "description": "Resource group of the App Service plan.",
              "type": "string",
              "readOnly": true
            },
            "reserved": {
              "description": "If Linux app service plan <code>true</code>, <code>false</code> otherwise.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isXenon": {
              "description": "Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "hyperV": {
              "description": "If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "targetWorkerCount": {
              "format": "int32",
              "description": "Scaling worker count.",
              "type": "integer"
            },
            "targetWorkerSizeId": {
              "format": "int32",
              "description": "Scaling worker size ID.",
              "type": "integer"
            },
            "provisioningState": {
              "description": "Provisioning state of the App Service Environment.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/SkuDescription"
        }
      }
    },
    "Resource": {
      "description": "Azure resource. This resource is tracked in Azure Resource Manager",
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "location": {
          "description": "Resource Location.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "ErrorEntity": {
      "description": "Body of the error response returned from the API.",
      "type": "object",
      "properties": {
        "extendedCode": {
          "description": "Type of error.",
          "type": "string"
        },
        "messageTemplate": {
          "description": "Message template.",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the template.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "innerErrors": {
          "description": "Inner errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          }
        },
        "code": {
          "description": "Basic error code.",
          "type": "string"
        },
        "message": {
          "description": "Any details of the error.",
          "type": "string"
        }
      }
    },
    "DefaultErrorResponse": {
      "description": "App Service error response.",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error model.",
          "type": "object",
          "properties": {
            "code": {
              "description": "Standardized string to programmatically identify the error.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "target": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "details": {
              "type": "array",
              "items": {
                "description": "Detailed errors.",
                "properties": {
                  "code": {
                    "description": "Standardized string to programmatically identify the error.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  },
                  "target": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  }
                },
                "readOnly": true
              }
            },
            "innererror": {
              "description": "More information to debug error.",
              "type": "string",
              "readOnly": true
            }
          },
          "readOnly": true
        }
      }
    },
    "LocalizableString": {
      "description": "Localizable string object containing the name and a localized value.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Non-localized name.",
          "type": "string"
        },
        "localizedValue": {
          "description": "Localized name.",
          "type": "string"
        }
      }
    },
    "CsmUsageQuota": {
      "description": "Usage of the quota resource.",
      "type": "object",
      "properties": {
        "unit": {
          "description": "Units of measurement for the quota resource.",
          "type": "string"
        },
        "nextResetTime": {
          "format": "date-time",
          "description": "Next reset time for the resource counter.",
          "type": "string"
        },
        "currentValue": {
          "format": "int64",
          "description": "The current value of the resource counter.",
          "type": "integer"
        },
        "limit": {
          "format": "int64",
          "description": "The resource limit.",
          "type": "integer"
        },
        "name": {
          "$ref": "#/definitions/LocalizableString",
          "description": "Quota name."
        }
      }
    },
    "CsmUsageQuotaCollection": {
      "description": "Collection of CSM usage quotas.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CsmUsageQuota"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IdentifierCollection": {
      "description": "Collection of identifiers.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WebAppCollection": {
      "description": "Collection of App Service apps.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Site"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Operation": {
      "description": "An operation on a resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Operation ID.",
          "type": "string"
        },
        "name": {
          "description": "Operation name.",
          "type": "string"
        },
        "status": {
          "description": "The current status of the operation.",
          "enum": [
            "InProgress",
            "Failed",
            "Succeeded",
            "TimedOut",
            "Created"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperationStatus",
            "modelAsString": false
          }
        },
        "errors": {
          "description": "Any errors associate with the operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          }
        },
        "createdTime": {
          "format": "date-time",
          "description": "Time when operation has started.",
          "type": "string"
        },
        "modifiedTime": {
          "format": "date-time",
          "description": "Time when operation has been updated.",
          "type": "string"
        },
        "expirationTime": {
          "format": "date-time",
          "description": "Time when operation will expire.",
          "type": "string"
        },
        "geoMasterOperationId": {
          "format": "uuid",
          "description": "Applicable only for stamp operation ids.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
      "x-ms-parameter-location": "method"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "x-internal-service-id": "appservice",
  "x-internal-service-name": "App Service",
  "x-internal-toc-name": "Web Apps",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "ListMetadata",
  "x-internal-operation-name": "List Metadata"
}