{
  "swagger": "2.0",
  "info": {
    "version": "2015-08-01",
    "title": "AppServiceCertificateOrders API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}": {
      "delete": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Delete an existing certificate order.",
        "description": "Delete an existing certificate order.",
        "operationId": "AppServiceCertificateOrders_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully deleted certificate order."
          },
          "204": {
            "description": "Certificate order does not exist."
          }
        },
        "x-internal-toc-name": "Delete"
      }
    }
  },
  "definitions": {
    "AppServiceCertificate": {
      "description": "Key Vault container for a certificate that is purchased through Azure.",
      "type": "object",
      "properties": {
        "keyVaultId": {
          "description": "Key Vault resource Id.",
          "type": "string"
        },
        "keyVaultSecretName": {
          "description": "Key Vault secret name.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Status of the Key Vault secret.",
          "enum": [
            "Initialized",
            "WaitingOnCertificateOrder",
            "Succeeded",
            "CertificateOrderFailed",
            "OperationNotPermittedOnKeyVault",
            "AzureServiceUnauthorizedToAccessKeyVault",
            "KeyVaultDoesNotExist",
            "KeyVaultSecretDoesNotExist",
            "UnknownError",
            "ExternalPrivateKey",
            "Unknown"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "KeyVaultSecretStatus",
            "modelAsString": false
          }
        }
      }
    },
    "AppServiceCertificateCollection": {
      "description": "Collection of certitificateorder certificates.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppServiceCertificateResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "AppServiceCertificateOrder": {
      "description": "SSL certificate purchase order.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "AppServiceCertificateOrder resource specific properties",
          "required": [
            "productType"
          ],
          "properties": {
            "certificates": {
              "description": "State of the Key Vault secret.",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/AppServiceCertificate"
              }
            },
            "distinguishedName": {
              "description": "Certificate distinguished name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "domainVerificationToken": {
              "description": "Domain verification token.",
              "type": "string",
              "readOnly": true
            },
            "validityInYears": {
              "format": "int32",
              "description": "Duration in years (must be between 1 and 3).",
              "default": 1,
              "maximum": 3,
              "minimum": 1,
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "keySize": {
              "format": "int32",
              "description": "Certificate key size.",
              "default": 2048,
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "productType": {
              "description": "Certificate product type.",
              "enum": [
                "StandardDomainValidatedSsl",
                "StandardDomainValidatedWildCardSsl"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CertificateProductType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "autoRenew": {
              "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
              "default": true,
              "type": "boolean"
            },
            "provisioningState": {
              "description": "Status of certificate order.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              }
            },
            "status": {
              "description": "Current order status.",
              "enum": [
                "Pendingissuance",
                "Issued",
                "Revoked",
                "Canceled",
                "Denied",
                "Pendingrevocation",
                "PendingRekey",
                "Unused",
                "Expired",
                "NotSubmitted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CertificateOrderStatus",
                "modelAsString": false
              }
            },
            "signedCertificate": {
              "$ref": "#/definitions/CertificateDetails",
              "description": "Signed certificate.",
              "readOnly": true
            },
            "csr": {
              "description": "Last CSR that was created for this order.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "intermediate": {
              "$ref": "#/definitions/CertificateDetails",
              "description": "Intermediate certificate.",
              "readOnly": true
            },
            "root": {
              "$ref": "#/definitions/CertificateDetails",
              "description": "Root certificate.",
              "readOnly": true
            },
            "serialNumber": {
              "description": "Current serial number of the certificate.",
              "type": "string",
              "readOnly": true
            },
            "lastCertificateIssuanceTime": {
              "format": "date-time",
              "description": "Certificate last issuance time.",
              "type": "string",
              "readOnly": true
            },
            "expirationTime": {
              "format": "date-time",
              "description": "Certificate expiration time.",
              "type": "string",
              "readOnly": true
            },
            "isPrivateKeyExternal": {
              "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "appServiceCertificateNotRenewableReasons": {
              "description": "Reasons why App Service Certificate is not renewable at the current moment.",
              "type": "array",
              "items": {
                "enum": [
                  "RegistrationStatusNotSupportedForRenewal",
                  "ExpirationNotInRenewalTimeRange",
                  "SubscriptionNotActive"
                ],
                "type": "string"
              },
              "readOnly": true
            },
            "nextAutoRenewalTimeStamp": {
              "format": "date-time",
              "description": "Time stamp when the certificate would be auto renewed next",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AppServiceCertificateOrderCollection": {
      "description": "Collection of certitificate orders.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppServiceCertificateOrder"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "AppServiceCertificateResource": {
      "description": "Key Vault container ARM resource for a certificate that is purchased through Azure.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AppServiceCertificate",
          "x-ms-client-flatten": true
        }
      }
    },
    "CertificateDetails": {
      "description": "SSL certificate details.",
      "type": "object",
      "properties": {
        "version": {
          "format": "int32",
          "description": "Version.",
          "type": "integer",
          "readOnly": true
        },
        "serialNumber": {
          "description": "Serial Number.",
          "type": "string",
          "readOnly": true
        },
        "thumbprint": {
          "description": "Thumbprint.",
          "type": "string",
          "readOnly": true
        },
        "subject": {
          "description": "Subject.",
          "type": "string",
          "readOnly": true
        },
        "notBefore": {
          "format": "date-time",
          "description": "Valid from.",
          "type": "string",
          "readOnly": true
        },
        "notAfter": {
          "format": "date-time",
          "description": "Valid to.",
          "type": "string",
          "readOnly": true
        },
        "signatureAlgorithm": {
          "description": "Signature algorithm.",
          "type": "string",
          "readOnly": true
        },
        "issuer": {
          "description": "Issuer.",
          "type": "string",
          "readOnly": true
        },
        "rawData": {
          "description": "Raw certificate data.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CertificateEmail": {
      "description": "SSL certificate email.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "CertificateEmail resource specific properties",
          "properties": {
            "emailId": {
              "description": "Email id.",
              "type": "string"
            },
            "timeStamp": {
              "format": "date-time",
              "description": "Time stamp.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CertificateOrderAction": {
      "description": "Certificate order action.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "CertificateOrderAction resource specific properties",
          "properties": {
            "type": {
              "description": "Action type.",
              "enum": [
                "CertificateIssued",
                "CertificateOrderCanceled",
                "CertificateOrderCreated",
                "CertificateRevoked",
                "DomainValidationComplete",
                "FraudDetected",
                "OrgNameChange",
                "OrgValidationComplete",
                "SanDrop",
                "FraudCleared",
                "CertificateExpired",
                "CertificateExpirationWarning",
                "FraudDocumentationRequired",
                "Unknown"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CertificateOrderActionType",
                "modelAsString": false
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "Time at which the certificate action was performed.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "NameIdentifier": {
      "description": "Identifies an object.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the object.",
          "type": "string"
        }
      }
    },
    "ProxyOnlyResource": {
      "description": "Azure proxy only resource. This resource is not tracked by Azure Resource Manager.",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ReissueCertificateOrderRequest": {
      "description": "Class representing certificate reissue request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ReissueCertificateOrderRequest resource specific properties",
          "properties": {
            "keySize": {
              "format": "int32",
              "description": "Certificate Key Size.",
              "type": "integer"
            },
            "delayExistingRevokeInHours": {
              "format": "int32",
              "description": "Delay in hours to revoke existing certificate after the new certificate is issued.",
              "type": "integer"
            },
            "csr": {
              "description": "Csr to be used for re-key operation.",
              "type": "string"
            },
            "isPrivateKeyExternal": {
              "description": "Should we change the ASC type (from managed private key to external private key and vice versa).",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RenewCertificateOrderRequest": {
      "description": "Class representing certificate renew request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RenewCertificateOrderRequest resource specific properties",
          "properties": {
            "keySize": {
              "format": "int32",
              "description": "Certificate Key Size.",
              "type": "integer"
            },
            "csr": {
              "description": "Csr to be used for re-key operation.",
              "type": "string"
            },
            "isPrivateKeyExternal": {
              "description": "Should we change the ASC type (from managed private key to external private key and vice versa).",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Resource": {
      "description": "Azure resource. This resource is tracked in Azure Resource Manager",
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "location": {
          "description": "Resource Location.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "SiteSeal": {
      "description": "Site seal",
      "required": [
        "html"
      ],
      "type": "object",
      "properties": {
        "html": {
          "description": "HTML snippet",
          "type": "string",
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteSealRequest": {
      "description": "Site seal request.",
      "type": "object",
      "properties": {
        "lightTheme": {
          "description": "Theme",
          "type": "boolean"
        },
        "locale": {
          "description": "Locale",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "x-internal-service-name": "App Service",
  "x-internal-toc-name": "App Service Certificate Orders",
  "x-internal-split-type": "Operation"
}