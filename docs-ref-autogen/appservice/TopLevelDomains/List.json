{
  "swagger": "2.0",
  "info": {
    "version": "2015-04-01",
    "title": "TopLevelDomains API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains": {
      "get": {
        "tags": [
          "TopLevelDomains"
        ],
        "summary": "Get all top-level domains supported for registration.",
        "description": "Get all top-level domains supported for registration.",
        "operationId": "TopLevelDomains_List",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TopLevelDomainCollection"
            }
          }
        },
        "x-ms-examples": {
          "List Top Level Domains": {
            "parameters": {
              "subscriptionId": "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345",
              "api-version": "2015-04-01"
            },
            "responses": {
              "200": {
                "headers": {},
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/providers/Microsoft.DomainRegistration/topLevelDomains/com",
                      "name": "com",
                      "type": "Microsoft.DomainRegistration/topLevelDomains",
                      "location": "global",
                      "properties": {
                        "name": "com",
                        "privacy": true
                      }
                    },
                    {
                      "id": "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/providers/Microsoft.DomainRegistration/topLevelDomains/net",
                      "name": "net",
                      "type": "Microsoft.DomainRegistration/topLevelDomains",
                      "location": "global",
                      "properties": {
                        "name": "net",
                        "privacy": true
                      }
                    },
                    {
                      "id": "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/providers/Microsoft.DomainRegistration/topLevelDomains/co.uk",
                      "name": "co.uk",
                      "type": "Microsoft.DomainRegistration/topLevelDomains",
                      "location": "global",
                      "properties": {
                        "name": "co.uk",
                        "privacy": false
                      }
                    },
                    {
                      "id": "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/providers/Microsoft.DomainRegistration/topLevelDomains/org",
                      "name": "org",
                      "type": "Microsoft.DomainRegistration/topLevelDomains",
                      "location": "global",
                      "properties": {
                        "name": "org",
                        "privacy": true
                      }
                    },
                    {
                      "id": "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/providers/Microsoft.DomainRegistration/topLevelDomains/nl",
                      "name": "nl",
                      "type": "Microsoft.DomainRegistration/topLevelDomains",
                      "location": "global",
                      "properties": {
                        "name": "nl",
                        "privacy": true
                      }
                    },
                    {
                      "id": "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/providers/Microsoft.DomainRegistration/topLevelDomains/in",
                      "name": "in",
                      "type": "Microsoft.DomainRegistration/topLevelDomains",
                      "location": "global",
                      "properties": {
                        "name": "in",
                        "privacy": false
                      }
                    },
                    {
                      "id": "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/providers/Microsoft.DomainRegistration/topLevelDomains/biz",
                      "name": "biz",
                      "type": "Microsoft.DomainRegistration/topLevelDomains",
                      "location": "global",
                      "properties": {
                        "name": "biz",
                        "privacy": true
                      }
                    },
                    {
                      "id": "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/providers/Microsoft.DomainRegistration/topLevelDomains/org.uk",
                      "name": "org.uk",
                      "type": "Microsoft.DomainRegistration/topLevelDomains",
                      "location": "global",
                      "properties": {
                        "name": "org.uk",
                        "privacy": false
                      }
                    },
                    {
                      "id": "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/providers/Microsoft.DomainRegistration/topLevelDomains/co.in",
                      "name": "co.in",
                      "type": "Microsoft.DomainRegistration/topLevelDomains",
                      "location": "global",
                      "properties": {
                        "name": "co.in",
                        "privacy": false
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "List"
      }
    }
  },
  "definitions": {
    "TldLegalAgreement": {
      "description": "Legal agreement for a top level domain.",
      "required": [
        "agreementKey",
        "title",
        "content"
      ],
      "type": "object",
      "properties": {
        "agreementKey": {
          "description": "Unique identifier for the agreement.",
          "type": "string"
        },
        "title": {
          "description": "Agreement title.",
          "type": "string"
        },
        "content": {
          "description": "Agreement details.",
          "type": "string"
        },
        "url": {
          "description": "URL where a copy of the agreement details is hosted.",
          "type": "string"
        }
      }
    },
    "TldLegalAgreementCollection": {
      "description": "Collection of top-level domain legal agreements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TldLegalAgreement"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TopLevelDomain": {
      "description": "A top level domain object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "TopLevelDomain resource specific properties",
          "properties": {
            "name": {
              "description": "Name of the top level domain.",
              "type": "string",
              "readOnly": true,
              "x-ms-client-name": "domainName"
            },
            "privacy": {
              "description": "If <code>true</code>, then the top level domain supports domain privacy; otherwise, <code>false</code>.",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TopLevelDomainAgreementOption": {
      "description": "Options for retrieving the list of top level domain legal agreements.",
      "type": "object",
      "properties": {
        "includePrivacy": {
          "description": "If <code>true</code>, then the list of agreements will include agreements for domain privacy as well; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "forTransfer": {
          "description": "If <code>true</code>, then the list of agreements will include agreements for domain transfer as well; otherwise, <code>false</code>.",
          "type": "boolean"
        }
      }
    },
    "TopLevelDomainCollection": {
      "description": "Collection of Top-level domains.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopLevelDomain"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VnetRoute": {
      "description": "Virtual Network route contract used to pass routing information for a Virtual Network.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetRoute resource specific properties",
          "properties": {
            "name": {
              "description": "The name of this route. This is only returned by the server and does not need to be set by the client.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ],
              "x-ms-client-name": "vnetRouteName"
            },
            "startAddress": {
              "description": "The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.",
              "type": "string"
            },
            "endAddress": {
              "description": "The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.",
              "type": "string"
            },
            "routeType": {
              "description": "The type of route this is:\nDEFAULT - By default, every app has routes to the local address ranges specified by RFC1918\nINHERITED - Routes inherited from the real Virtual Network routes\nSTATIC - Static route set on the app only\n\nThese values will be used for syncing an app's routes with those from a Virtual Network.",
              "enum": [
                "DEFAULT",
                "INHERITED",
                "STATIC"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RouteType",
                "modelAsString": true
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetInfo": {
      "description": "Virtual Network information contract.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetInfo resource specific properties",
          "properties": {
            "vnetResourceId": {
              "description": "The Virtual Network's resource ID.",
              "type": "string"
            },
            "certThumbprint": {
              "description": "The client certificate thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "certBlob": {
              "format": "byte",
              "description": "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \nPoint-To-Site VPN connection.",
              "type": "string"
            },
            "routes": {
              "description": "The routes that this Virtual Network connection uses.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VnetRoute"
              },
              "readOnly": true
            },
            "resyncRequired": {
              "description": "<code>true</code> if a resync is required; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "dnsServers": {
              "description": "DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetGateway": {
      "description": "The Virtual Network gateway contract. This is used to give the Virtual Network gateway access to the VPN package.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetGateway resource specific properties",
          "required": [
            "vpnPackageUri"
          ],
          "properties": {
            "vnetName": {
              "description": "The Virtual Network name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "vpnPackageUri": {
              "description": "The URI where the VPN package can be downloaded.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "User": {
      "description": "User credentials used for publishing activity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "User resource specific properties",
          "required": [
            "publishingUserName"
          ],
          "properties": {
            "name": {
              "description": "Username",
              "type": "string",
              "x-ms-client-name": "UserName"
            },
            "publishingUserName": {
              "description": "Username used for publishing.",
              "type": "string"
            },
            "publishingPassword": {
              "format": "password",
              "description": "Password used for publishing.",
              "type": "string"
            },
            "publishingPasswordHash": {
              "format": "password",
              "description": "Password hash used for publishing.",
              "type": "string"
            },
            "publishingPasswordHashSalt": {
              "format": "password",
              "description": "Password hash salt used for publishing.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SnapshotRecoveryTarget": {
      "description": "Specifies the web app that snapshot contents will be written to.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Geographical location of the target web app, e.g. SouthEastAsia, SouthCentralUS",
          "type": "string"
        },
        "id": {
          "description": "ARM resource ID of the target app. \n/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and \n/subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.",
          "type": "string"
        }
      }
    },
    "SnapshotRecoveryRequest": {
      "description": "Details about app recovery operation.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SnapshotRecoveryRequest resource specific properties",
          "required": [
            "overwrite"
          ],
          "properties": {
            "snapshotTime": {
              "description": "Point in time in which the app recovery should be attempted, formatted as a DateTime string.",
              "type": "string"
            },
            "recoveryTarget": {
              "$ref": "#/definitions/SnapshotRecoveryTarget",
              "description": "Specifies the web app that snapshot contents will be written to."
            },
            "overwrite": {
              "description": "If <code>true</code> the recovery operation can overwrite source app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "recoverConfiguration": {
              "description": "If true, site configuration, in addition to content, will be reverted.",
              "type": "boolean"
            },
            "ignoreConflictingHostNames": {
              "description": "If true, custom hostname conflicts will be ignored when recovering to a target web app.\nThis setting is only necessary when RecoverConfiguration is enabled.",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ResourceMetricAvailability": {
      "description": "Metrics availability and retention.",
      "type": "object",
      "properties": {
        "timeGrain": {
          "description": "Time grain .",
          "type": "string",
          "readOnly": true
        },
        "retention": {
          "description": "Retention period for the current time grain.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceMetricName": {
      "description": "Name of a metric for any resource .",
      "type": "object",
      "properties": {
        "value": {
          "description": "metric name value.",
          "type": "string",
          "readOnly": true
        },
        "localizedValue": {
          "description": "Localized metric name value.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceMetricDefinition": {
      "description": "Metadata for the metrics.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ResourceMetricDefinition resource specific properties",
          "properties": {
            "name": {
              "$ref": "#/definitions/ResourceMetricName",
              "description": "Name of the metric.",
              "readOnly": true
            },
            "unit": {
              "description": "Unit of the metric.",
              "type": "string",
              "readOnly": true
            },
            "primaryAggregationType": {
              "description": "Primary aggregation type.",
              "type": "string",
              "readOnly": true
            },
            "metricAvailabilities": {
              "description": "List of time grains supported for the metric together with retention period.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceMetricAvailability"
              },
              "readOnly": true
            },
            "resourceUri": {
              "description": "Resource URI.",
              "type": "string",
              "readOnly": true
            },
            "id": {
              "description": "Resource ID.",
              "type": "string",
              "readOnly": true
            },
            "properties": {
              "description": "Resource metric definition properties.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PushSettings": {
      "description": "Push settings for the App.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PushSettings resource specific properties",
          "required": [
            "isPushEnabled"
          ],
          "properties": {
            "isPushEnabled": {
              "description": "Gets or sets a flag indicating whether the Push endpoint is enabled.",
              "type": "boolean"
            },
            "tagWhitelistJson": {
              "description": "Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.",
              "type": "string"
            },
            "tagsRequiringAuth": {
              "description": "Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.\nTags can consist of alphanumeric characters and the following:\n'_', '@', '#', '.', ':', '-'. \nValidation should be performed at the PushRequestHandler.",
              "type": "string"
            },
            "dynamicTagsJson": {
              "description": "Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Identifier": {
      "description": "A domain specific resource identifier.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Identifier resource specific properties",
          "properties": {
            "id": {
              "description": "String representation of the identity.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HybridConnectionKey": {
      "description": "Hybrid Connection key contract. This has the send key name and value for a Hybrid Connection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HybridConnectionKey resource specific properties",
          "properties": {
            "sendKeyName": {
              "description": "The name of the send key.",
              "type": "string",
              "readOnly": true
            },
            "sendKeyValue": {
              "description": "The value of the send key.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HybridConnection": {
      "description": "Hybrid Connection contract. This is used to configure a Hybrid Connection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HybridConnection resource specific properties",
          "properties": {
            "serviceBusNamespace": {
              "description": "The name of the Service Bus namespace.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayName": {
              "description": "The name of the Service Bus relay.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayArmUri": {
              "description": "The ARM URI to the Service Bus relay.",
              "type": "string"
            },
            "hostname": {
              "description": "The hostname of the endpoint.",
              "type": "string"
            },
            "port": {
              "format": "int32",
              "description": "The port of the endpoint.",
              "type": "integer"
            },
            "sendKeyName": {
              "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
              "type": "string"
            },
            "sendKeyValue": {
              "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\nnormally, use the POST /listKeys API instead.",
              "type": "string"
            },
            "serviceBusSuffix": {
              "description": "The suffix for the service bus endpoint. By default this is .servicebus.windows.net",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProxyOnlyResource": {
      "description": "Azure proxy only resource. This resource is not tracked by Azure Resource Manager.",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "x-internal-service-id": "appservice",
  "x-internal-service-name": "App Service",
  "x-internal-toc-name": "Top Level Domains",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "List",
  "x-internal-operation-name": "List"
}