### YamlMime:RESTOperation
uid: management.azure.com.appservice.webapps.getauthsettingsv2slot
name: Get Auth Settings V2 Slot
service: App Service
groupName: Web Apps
apiVersion: 2021-02-01
summary: Gets site's Authentication / Authorization settings for apps via the V2 format
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettingsV2/list?api-version=2021-02-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the resource group to which the resource belongs.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+[^\.]$
- name: name
  in: path
  isRequired: true
  description: Name of the app.
  types:
  - uid: string
- name: slot
  in: path
  isRequired: true
  description: Name of the deployment slot. If a slot is not specified, the API will get the settings for the production slot.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: API Version
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: SiteAuthSettingsV2
- name: Other Status Codes
  description: App Service error response.
  types:
  - uid: DefaultErrorResponse
requestHeader: []
definitions:
- name: SiteAuthSettingsV2
  description: Configuration settings for the Azure App Service Authentication / Authorization V2 feature.
  kind: object
  properties:
  - name: properties.platform
    description: The configuration settings of the platform of App Service Authentication/Authorization.
    types:
    - uid: AuthPlatform
  - name: properties.globalValidation
    description: The configuration settings that determines the validation flow of users using App Service Authentication/Authorization.
    types:
    - uid: GlobalValidation
  - name: properties.identityProviders
    description: The configuration settings of each of the identity providers used to configure App Service Authentication/Authorization.
    types:
    - uid: IdentityProviders
  - name: properties.login
    description: The configuration settings of the login flow of users using App Service Authentication/Authorization.
    types:
    - uid: Login
  - name: properties.httpSettings
    description: The configuration settings of the HTTP requests for authentication and authorization requests made against App Service Authentication/Authorization.
    types:
    - uid: HttpSettings
  - name: id
    isReadyOnly: true
    description: Resource Id.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource Name.
    types:
    - uid: string
  - name: kind
    description: Kind of resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
- name: DefaultErrorResponse
  description: App Service error response.
  kind: object
  properties:
  - name: error
    isReadyOnly: true
    description: Error model.
    types:
    - uid: Error
- name: AuthPlatform
  description: The configuration settings of the platform of App Service Authentication/Authorization.
  kind: object
  properties:
  - name: enabled
    description: <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
    types:
    - uid: boolean
  - name: runtimeVersion
    description: >-
      The RuntimeVersion of the Authentication / Authorization feature in use for the current app.

      The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
    types:
    - uid: string
  - name: configFilePath
    description: >-
      The path of the config file containing auth settings if they come from a file.

      If the path is relative, base will the site's root directory.
    types:
    - uid: string
- name: GlobalValidation
  description: The configuration settings that determines the validation flow of users using App Service Authentication/Authorization.
  kind: object
  properties:
  - name: requireAuthentication
    description: <code>true</code> if the authentication flow is required any request is made; otherwise, <code>false</code>.
    types:
    - uid: boolean
  - name: unauthenticatedClientAction
    description: The action to take when an unauthenticated client attempts to access the app.
    types:
    - uid: UnauthenticatedClientActionV2
  - name: redirectToProvider
    description: >-
      The default authentication provider to use when multiple providers are configured.

      This setting is only needed if multiple providers are configured and the unauthenticated client

      action is set to "RedirectToLoginPage".
    types:
    - uid: string
  - name: excludedPaths
    description: The paths for which unauthenticated flow would not be redirected to the login page.
    types:
    - uid: string
      isArray: true
- name: IdentityProviders
  description: The configuration settings of each of the identity providers used to configure App Service Authentication/Authorization.
  kind: object
  properties:
  - name: azureActiveDirectory
    description: The configuration settings of the Azure Active directory provider.
    types:
    - uid: AzureActiveDirectory
  - name: facebook
    description: The configuration settings of the Facebook provider.
    types:
    - uid: Facebook
  - name: gitHub
    description: The configuration settings of the GitHub provider.
    types:
    - uid: GitHub
  - name: google
    description: The configuration settings of the Google provider.
    types:
    - uid: Google
  - name: legacyMicrosoftAccount
    description: The configuration settings of the legacy Microsoft Account provider.
    types:
    - uid: LegacyMicrosoftAccount
  - name: twitter
    description: The configuration settings of the Twitter provider.
    types:
    - uid: Twitter
  - name: apple
    description: The configuration settings of the Apple provider.
    types:
    - uid: Apple
  - name: azureStaticWebApps
    description: The configuration settings of the Azure Static Web Apps provider.
    types:
    - uid: AzureStaticWebApps
  - name: customOpenIdConnectProviders
    description: >-
      The map of the name of the alias of each custom Open ID Connect provider to the

      configuration settings of the custom Open ID Connect provider.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: CustomOpenIdConnectProvider
- name: Login
  description: The configuration settings of the login flow of users using App Service Authentication/Authorization.
  kind: object
  properties:
  - name: routes
    description: The routes that specify the endpoints used for login and logout requests.
    types:
    - uid: LoginRoutes
  - name: tokenStore
    description: The configuration settings of the token store.
    types:
    - uid: TokenStore
  - name: preserveUrlFragmentsForLogins
    description: <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
    types:
    - uid: boolean
  - name: allowedExternalRedirectUrls
    description: >-
      External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.

      This is an advanced setting typically only needed by Windows Store application backends.

      Note that URLs within the current domain are always implicitly allowed.
    types:
    - uid: string
      isArray: true
  - name: cookieExpiration
    description: The configuration settings of the session cookie's expiration.
    types:
    - uid: CookieExpiration
  - name: nonce
    description: The configuration settings of the nonce used in the login flow.
    types:
    - uid: Nonce
- name: HttpSettings
  description: The configuration settings of the HTTP requests for authentication and authorization requests made against App Service Authentication/Authorization.
  kind: object
  properties:
  - name: requireHttps
    description: <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.
    types:
    - uid: boolean
  - name: routes
    description: The configuration settings of the paths HTTP requests.
    types:
    - uid: HttpSettingsRoutes
  - name: forwardProxy
    description: The configuration settings of a forward proxy used to make the requests.
    types:
    - uid: ForwardProxy
- name: Error
  description: Error model.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Standardized string to programmatically identify the error.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Detailed error description and debugging information.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: Detailed error description and debugging information.
    types:
    - uid: string
  - name: details
    description: Detailed errors.
    types:
    - uid: Details
      isArray: true
  - name: innererror
    isReadyOnly: true
    description: More information to debug error.
    types:
    - uid: string
- name: UnauthenticatedClientActionV2
  description: The action to take when an unauthenticated client attempts to access the app.
  kind: enum
  properties:
  - name: RedirectToLoginPage
    types:
    - uid: string
  - name: AllowAnonymous
    types:
    - uid: string
  - name: Return401
    types:
    - uid: string
  - name: Return403
    types:
    - uid: string
- name: AzureActiveDirectory
  description: The configuration settings of the Azure Active directory provider.
  kind: object
  properties:
  - name: enabled
    description: <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.
    types:
    - uid: boolean
  - name: registration
    description: The configuration settings of the Azure Active Directory app registration.
    types:
    - uid: AzureActiveDirectoryRegistration
  - name: login
    description: The configuration settings of the Azure Active Directory login flow.
    types:
    - uid: AzureActiveDirectoryLogin
  - name: validation
    description: The configuration settings of the Azure Active Directory token validation flow.
    types:
    - uid: AzureActiveDirectoryValidation
  - name: isAutoProvisioned
    description: >-
      Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.

      This is an internal flag primarily intended to support the Azure Management Portal. Users should not

      read or write to this property.
    types:
    - uid: boolean
- name: Facebook
  description: The configuration settings of the Facebook provider.
  kind: object
  properties:
  - name: enabled
    description: <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.
    types:
    - uid: boolean
  - name: registration
    description: The configuration settings of the app registration for the Facebook provider.
    types:
    - uid: AppRegistration
  - name: graphApiVersion
    description: The version of the Facebook api to be used while logging in.
    types:
    - uid: string
  - name: login
    description: The configuration settings of the login flow.
    types:
    - uid: LoginScopes
- name: GitHub
  description: The configuration settings of the GitHub provider.
  kind: object
  properties:
  - name: enabled
    description: <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.
    types:
    - uid: boolean
  - name: registration
    description: The configuration settings of the app registration for the GitHub provider.
    types:
    - uid: ClientRegistration
  - name: login
    description: The configuration settings of the login flow.
    types:
    - uid: LoginScopes
- name: Google
  description: The configuration settings of the Google provider.
  kind: object
  properties:
  - name: enabled
    description: <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
    types:
    - uid: boolean
  - name: registration
    description: The configuration settings of the app registration for the Google provider.
    types:
    - uid: ClientRegistration
  - name: login
    description: The configuration settings of the login flow.
    types:
    - uid: LoginScopes
  - name: validation
    description: The configuration settings of the Azure Active Directory token validation flow.
    types:
    - uid: AllowedAudiencesValidation
- name: LegacyMicrosoftAccount
  description: The configuration settings of the legacy Microsoft Account provider.
  kind: object
  properties:
  - name: enabled
    description: <code>false</code> if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, <code>true</code>.
    types:
    - uid: boolean
  - name: registration
    description: The configuration settings of the app registration for the legacy Microsoft Account provider.
    types:
    - uid: ClientRegistration
  - name: login
    description: The configuration settings of the login flow.
    types:
    - uid: LoginScopes
  - name: validation
    description: The configuration settings of the legacy Microsoft Account provider token validation flow.
    types:
    - uid: AllowedAudiencesValidation
- name: Twitter
  description: The configuration settings of the Twitter provider.
  kind: object
  properties:
  - name: enabled
    description: <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.
    types:
    - uid: boolean
  - name: registration
    description: The configuration settings of the app registration for the Twitter provider.
    types:
    - uid: TwitterRegistration
- name: Apple
  description: The configuration settings of the Apple provider.
  kind: object
  properties:
  - name: enabled
    description: <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.
    types:
    - uid: boolean
  - name: registration
    description: The configuration settings of the Apple registration.
    types:
    - uid: AppleRegistration
  - name: login
    description: The configuration settings of the login flow.
    types:
    - uid: LoginScopes
- name: AzureStaticWebApps
  description: The configuration settings of the Azure Static Web Apps provider.
  kind: object
  properties:
  - name: enabled
    description: <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.
    types:
    - uid: boolean
  - name: registration
    description: The configuration settings of the Azure Static Web Apps registration.
    types:
    - uid: AzureStaticWebAppsRegistration
- name: CustomOpenIdConnectProvider
  description: The configuration settings of the custom Open ID Connect provider.
  kind: object
  properties:
  - name: enabled
    description: <code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.
    types:
    - uid: boolean
  - name: registration
    description: The configuration settings of the app registration for the custom Open ID Connect provider.
    types:
    - uid: OpenIdConnectRegistration
  - name: login
    description: The configuration settings of the login flow of the custom Open ID Connect provider.
    types:
    - uid: OpenIdConnectLogin
- name: LoginRoutes
  description: The routes that specify the endpoints used for login and logout requests.
  kind: object
  properties:
  - name: logoutEndpoint
    description: The endpoint at which a logout request should be made.
    types:
    - uid: string
- name: TokenStore
  description: The configuration settings of the token store.
  kind: object
  properties:
  - name: enabled
    description: >-
      <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
       The default is <code>false</code>.
    types:
    - uid: boolean
  - name: tokenRefreshExtensionHours
    description: >-
      The number of hours after session token expiration that a session token can be used to

      call the token refresh API. The default is 72 hours.
    types:
    - uid: number
  - name: fileSystem
    description: The configuration settings of the storage of the tokens if a file system is used.
    types:
    - uid: FileSystemTokenStore
  - name: azureBlobStorage
    description: The configuration settings of the storage of the tokens if blob storage is used.
    types:
    - uid: BlobStorageTokenStore
- name: CookieExpiration
  description: The configuration settings of the session cookie's expiration.
  kind: object
  properties:
  - name: convention
    description: The convention used when determining the session cookie's expiration.
    types:
    - uid: CookieExpirationConvention
  - name: timeToExpiration
    description: The time after the request is made when the session cookie should expire.
    types:
    - uid: string
- name: Nonce
  description: The configuration settings of the nonce used in the login flow.
  kind: object
  properties:
  - name: validateNonce
    description: <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
    types:
    - uid: boolean
  - name: nonceExpirationInterval
    description: The time after the request is made when the nonce should expire.
    types:
    - uid: string
- name: HttpSettingsRoutes
  description: The configuration settings of the paths HTTP requests.
  kind: object
  properties:
  - name: apiPrefix
    description: The prefix that should precede all the authentication/authorization paths.
    types:
    - uid: string
- name: ForwardProxy
  description: The configuration settings of a forward proxy used to make the requests.
  kind: object
  properties:
  - name: convention
    description: The convention used to determine the url of the request made.
    types:
    - uid: ForwardProxyConvention
  - name: customHostHeaderName
    description: The name of the header containing the host of the request.
    types:
    - uid: string
  - name: customProtoHeaderName
    description: The name of the header containing the scheme of the request.
    types:
    - uid: string
- name: Details
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: Standardized string to programmatically identify the error.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: Detailed error description and debugging information.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: Detailed error description and debugging information.
    types:
    - uid: string
- name: AzureActiveDirectoryRegistration
  description: The configuration settings of the Azure Active Directory app registration.
  kind: object
  properties:
  - name: openIdIssuer
    description: >-
      The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.

      When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.

      This URI is a case-sensitive identifier for the token issuer.

      More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
    types:
    - uid: string
  - name: clientId
    description: "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html"
    types:
    - uid: string
  - name: clientSecretSettingName
    description: The app setting name that contains the client secret of the relying party application.
    types:
    - uid: string
  - name: clientSecretCertificateThumbprint
    description: >-
      An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as

      a replacement for the Client Secret. It is also optional.
    types:
    - uid: string
  - name: clientSecretCertificateSubjectAlternativeName
    description: >-
      An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as

      a replacement for the Client Secret Certificate Thumbprint. It is also optional.
    types:
    - uid: string
  - name: clientSecretCertificateIssuer
    description: >-
      An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as

      a replacement for the Client Secret Certificate Thumbprint. It is also optional.
    types:
    - uid: string
- name: AzureActiveDirectoryLogin
  description: The configuration settings of the Azure Active Directory login flow.
  kind: object
  properties:
  - name: loginParameters
    description: >-
      Login parameters to send to the OpenID Connect authorization endpoint when

      a user logs in. Each parameter must be in the form "key=value".
    types:
    - uid: string
      isArray: true
  - name: disableWWWAuthenticate
    description: <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.
    types:
    - uid: boolean
- name: AzureActiveDirectoryValidation
  description: The configuration settings of the Azure Active Directory token validation flow.
  kind: object
  properties:
  - name: jwtClaimChecks
    description: The configuration settings of the checks that should be made while validating the JWT Claims.
    types:
    - uid: JwtClaimChecks
  - name: allowedAudiences
    description: The list of audiences that can make successful authentication/authorization requests.
    types:
    - uid: string
      isArray: true
  - name: defaultAuthorizationPolicy
    description: The configuration settings of the default authorization policy.
    types:
    - uid: DefaultAuthorizationPolicy
- name: AppRegistration
  description: The configuration settings of the app registration for providers that have app ids and app secrets
  kind: object
  properties:
  - name: appId
    description: The App ID of the app used for login.
    types:
    - uid: string
  - name: appSecretSettingName
    description: The app setting name that contains the app secret.
    types:
    - uid: string
- name: LoginScopes
  description: The configuration settings of the login flow, including the scopes that should be requested.
  kind: object
  properties:
  - name: scopes
    description: A list of the scopes that should be requested while authenticating.
    types:
    - uid: string
      isArray: true
- name: ClientRegistration
  description: The configuration settings of the app registration for providers that have client ids and client secrets
  kind: object
  properties:
  - name: clientId
    description: The Client ID of the app used for login.
    types:
    - uid: string
  - name: clientSecretSettingName
    description: The app setting name that contains the client secret.
    types:
    - uid: string
- name: AllowedAudiencesValidation
  description: The configuration settings of the Allowed Audiences validation flow.
  kind: object
  properties:
  - name: allowedAudiences
    description: The configuration settings of the allowed list of audiences from which to validate the JWT token.
    types:
    - uid: string
      isArray: true
- name: TwitterRegistration
  description: The configuration settings of the app registration for the Twitter provider.
  kind: object
  properties:
  - name: consumerKey
    description: >-
      The OAuth 1.0a consumer key of the Twitter application used for sign-in.

      This setting is required for enabling Twitter Sign-In.

      Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
    types:
    - uid: string
  - name: consumerSecretSettingName
    description: >-
      The app setting name that contains the OAuth 1.0a consumer secret of the Twitter

      application used for sign-in.
    types:
    - uid: string
- name: AppleRegistration
  description: The configuration settings of the registration for the Apple provider
  kind: object
  properties:
  - name: clientId
    description: The Client ID of the app used for login.
    types:
    - uid: string
  - name: clientSecretSettingName
    description: The app setting name that contains the client secret.
    types:
    - uid: string
- name: AzureStaticWebAppsRegistration
  description: The configuration settings of the registration for the Azure Static Web Apps provider
  kind: object
  properties:
  - name: clientId
    description: The Client ID of the app used for login.
    types:
    - uid: string
- name: OpenIdConnectRegistration
  description: The configuration settings of the app registration for the custom Open ID Connect provider.
  kind: object
  properties:
  - name: clientId
    description: The client id of the custom Open ID Connect provider.
    types:
    - uid: string
  - name: clientCredential
    description: The authentication credentials of the custom Open ID Connect provider.
    types:
    - uid: OpenIdConnectClientCredential
  - name: openIdConnectConfiguration
    description: The configuration settings of the endpoints used for the custom Open ID Connect provider.
    types:
    - uid: OpenIdConnectConfig
- name: OpenIdConnectLogin
  description: The configuration settings of the login flow of the custom Open ID Connect provider.
  kind: object
  properties:
  - name: nameClaimType
    description: The name of the claim that contains the users name.
    types:
    - uid: string
  - name: scopes
    description: A list of the scopes that should be requested while authenticating.
    types:
    - uid: string
      isArray: true
- name: FileSystemTokenStore
  description: The configuration settings of the storage of the tokens if a file system is used.
  kind: object
  properties:
  - name: directory
    description: The directory in which the tokens will be stored.
    types:
    - uid: string
- name: BlobStorageTokenStore
  description: The configuration settings of the storage of the tokens if blob storage is used.
  kind: object
  properties:
  - name: sasUrlSettingName
    description: The name of the app setting containing the SAS URL of the blob storage containing the tokens.
    types:
    - uid: string
- name: CookieExpirationConvention
  description: The convention used when determining the session cookie's expiration.
  kind: enum
  properties:
  - name: FixedTime
    types:
    - uid: string
  - name: IdentityProviderDerived
    types:
    - uid: string
- name: ForwardProxyConvention
  description: The convention used to determine the url of the request made.
  kind: enum
  properties:
  - name: NoProxy
    types:
    - uid: string
  - name: Standard
    types:
    - uid: string
  - name: Custom
    types:
    - uid: string
- name: JwtClaimChecks
  description: The configuration settings of the checks that should be made while validating the JWT Claims.
  kind: object
  properties:
  - name: allowedGroups
    description: The list of the allowed groups.
    types:
    - uid: string
      isArray: true
  - name: allowedClientApplications
    description: The list of the allowed client applications.
    types:
    - uid: string
      isArray: true
- name: DefaultAuthorizationPolicy
  description: The configuration settings of the Azure Active Directory default authorization policy.
  kind: object
  properties:
  - name: allowedPrincipals
    description: The configuration settings of the Azure Active Directory allowed principals.
    types:
    - uid: AllowedPrincipals
  - name: allowedApplications
    description: The configuration settings of the Azure Active Directory allowed applications.
    types:
    - uid: string
      isArray: true
- name: OpenIdConnectClientCredential
  description: The authentication client credentials of the custom Open ID Connect provider.
  kind: object
  properties:
  - name: method
    description: The method that should be used to authenticate the user.
    types:
    - uid: ClientCredentialMethod
  - name: clientSecretSettingName
    description: The app setting that contains the client secret for the custom Open ID Connect provider.
    types:
    - uid: string
- name: OpenIdConnectConfig
  description: The configuration settings of the endpoints used for the custom Open ID Connect provider.
  kind: object
  properties:
  - name: authorizationEndpoint
    description: The endpoint to be used to make an authorization request.
    types:
    - uid: string
  - name: tokenEndpoint
    description: The endpoint to be used to request a token.
    types:
    - uid: string
  - name: issuer
    description: The endpoint that issues the token.
    types:
    - uid: string
  - name: certificationUri
    description: The endpoint that provides the keys necessary to validate the token.
    types:
    - uid: string
  - name: wellKnownOpenIdConfiguration
    description: The endpoint that contains all the configuration endpoints for the provider.
    types:
    - uid: string
- name: AllowedPrincipals
  description: The configuration settings of the Azure Active Directory allowed principals.
  kind: object
  properties:
  - name: groups
    description: The list of the allowed groups.
    types:
    - uid: string
      isArray: true
  - name: identities
    description: The list of the allowed identities.
    types:
    - uid: string
      isArray: true
- name: ClientCredentialMethod
  description: The method that should be used to authenticate the user.
  kind: enum
  properties:
  - name: ClientSecretPost
    types:
    - uid: string
examples: []
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about App Service service - Gets site's Authentication / Authorization settings for apps via the V2 format
errorCodes: []
