{
  "swagger": "2.0",
  "info": {
    "version": "2019-08-01",
    "title": "Diagnostics API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/diagnostics/{diagnosticCategory}/detectors/{detectorName}/execute": {
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Execute Detector",
        "description": "Description for Execute Detector",
        "operationId": "Diagnostics_ExecuteSiteDetector",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Detector Resource Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticCategory",
            "in": "path",
            "description": "Category Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End Time",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeGrain",
            "in": "query",
            "description": "Time Grain",
            "type": "string",
            "pattern": "PT[1-9][0-9]+[SMH]"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticDetectorResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Execute site detector": {
            "parameters": {
              "subscriptionId": "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345",
              "resourceGroupName": "Sample-WestUSResourceGroup",
              "siteName": "SampleApp",
              "slot": "Production",
              "diagnosticCategory": "availability",
              "detectorName": "sitecrashes",
              "api-version": "2019-08-01"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/Sample-WestUSResourceGroup/providers/Microsoft.Web/sites/SampleApp/diagnostics/availability/detectors/sitecrashes",
                  "name": "sitecrashes",
                  "properties": {
                    "startTime": "2017-11-05T22:50:00Z",
                    "endTime": "2017-11-06T22:50:00Z",
                    "abnormalTimePeriods": [
                      {
                        "startTime": "2017-11-05T22:50:00Z",
                        "endTime": "2017-11-06T22:50:00Z",
                        "solutions": []
                      }
                    ]
                  }
                }
              }
            }
          },
          "Execute site slot detector": {
            "parameters": {
              "subscriptionId": "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345",
              "resourceGroupName": "Sample-WestUSResourceGroup",
              "siteName": "SampleApp",
              "slot": "staging",
              "diagnosticCategory": "availability",
              "detectorName": "sitecrashes",
              "api-version": "2019-08-01"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/Sample-WestUSResourceGroup/providers/Microsoft.Web/sites/SampleApp/slots/staging/diagnostics/availability/detectors/sitecrashes",
                  "name": "sitecrashes",
                  "properties": {
                    "startTime": "2017-11-05T22:50:00Z",
                    "endTime": "2017-11-06T22:50:00Z",
                    "abnormalTimePeriods": [
                      {
                        "startTime": "2017-11-05T22:50:00Z",
                        "endTime": "2017-11-06T22:50:00Z",
                        "solutions": []
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Execute Site Detector"
      }
    }
  },
  "definitions": {
    "AbnormalTimePeriod": {
      "description": "Class representing Abnormal Time Period identified in diagnosis",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Start time of the downtime",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of the downtime",
          "type": "string"
        },
        "events": {
          "description": "List of Possible Cause of downtime",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetectorAbnormalTimePeriod"
          }
        },
        "solutions": {
          "description": "List of proposed solutions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Solution"
          }
        }
      }
    },
    "AnalysisData": {
      "description": "Class Representing Detector Evidence used for analysis",
      "type": "object",
      "properties": {
        "source": {
          "description": "Name of the Detector",
          "type": "string"
        },
        "detectorDefinition": {
          "$ref": "#/definitions/DetectorDefinition",
          "description": "Detector Definition"
        },
        "metrics": {
          "description": "Source Metrics",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticMetricSet"
          }
        },
        "data": {
          "description": "Additional Source Data",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValuePair"
            }
          }
        },
        "detectorMetaData": {
          "$ref": "#/definitions/ResponseMetaData",
          "description": "Detector Meta Data"
        }
      }
    },
    "AnalysisDefinition": {
      "description": "Definition of Analysis",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "AnalysisDefinition resource specific properties",
          "properties": {
            "description": {
              "description": "Description of the Analysis",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DataSource": {
      "description": "Class representing data source used by the detectors",
      "type": "object",
      "properties": {
        "instructions": {
          "description": "Instructions if any for the data source",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataSourceUri": {
          "description": "Datasource Uri Links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        }
      }
    },
    "DataTableResponseColumn": {
      "description": "Column definition",
      "type": "object",
      "properties": {
        "columnName": {
          "description": "Name of the column",
          "type": "string"
        },
        "dataType": {
          "description": "Data type which looks like 'String' or 'Int32'.",
          "type": "string"
        },
        "columnType": {
          "description": "Column Type",
          "type": "string"
        }
      }
    },
    "DataTableResponseObject": {
      "description": "Data Table which defines columns and raw row values",
      "type": "object",
      "properties": {
        "tableName": {
          "description": "Name of the table",
          "type": "string"
        },
        "columns": {
          "description": "List of columns with data types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTableResponseColumn"
          }
        },
        "rows": {
          "description": "Raw row values",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "DetectorAbnormalTimePeriod": {
      "description": "Class representing Abnormal Time Period detected.",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Start time of the correlated event",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of the correlated event",
          "type": "string"
        },
        "message": {
          "description": "Message describing the event",
          "type": "string"
        },
        "source": {
          "description": "Represents the name of the Detector",
          "type": "string"
        },
        "priority": {
          "format": "double",
          "description": "Represents the rank of the Detector",
          "type": "number"
        },
        "metaData": {
          "description": "Downtime metadata",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValuePair"
            }
          }
        },
        "type": {
          "description": "Represents the type of the Detector",
          "enum": [
            "ServiceIncident",
            "AppDeployment",
            "AppCrash",
            "RuntimeIssueDetected",
            "AseDeployment",
            "UserIssue",
            "PlatformIssue",
            "Other"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IssueType",
            "modelAsString": false
          }
        },
        "solutions": {
          "description": "List of proposed solutions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Solution"
          }
        }
      }
    },
    "DetectorDefinition": {
      "description": "Class representing detector definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DetectorDefinition resource specific properties",
          "properties": {
            "displayName": {
              "description": "Display name of the detector",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "Description of the detector",
              "type": "string",
              "readOnly": true
            },
            "rank": {
              "format": "double",
              "description": "Detector Rank",
              "type": "number",
              "readOnly": true
            },
            "isEnabled": {
              "description": "Flag representing whether detector is enabled or not.",
              "type": "boolean",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DetectorInfo": {
      "description": "Definition of Detector",
      "type": "object",
      "properties": {
        "description": {
          "description": "Short description of the detector and its purpose",
          "type": "string",
          "readOnly": true
        },
        "category": {
          "description": "Support Category",
          "type": "string",
          "readOnly": true
        },
        "subCategory": {
          "description": "Support Sub Category",
          "type": "string",
          "readOnly": true
        },
        "supportTopicId": {
          "description": "Support Topic Id",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DetectorResponse": {
      "description": "Class representing Response from Detector",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DetectorResponse resource specific properties",
          "properties": {
            "metadata": {
              "$ref": "#/definitions/DetectorInfo",
              "description": "metadata for the detector"
            },
            "dataset": {
              "description": "Data Set",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnosticData"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DetectorResponseCollection": {
      "description": "Collection of detector responses",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetectorResponse"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnosticAnalysis": {
      "description": "Class representing a diagnostic analysis done on an application",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DiagnosticAnalysis resource specific properties",
          "properties": {
            "startTime": {
              "format": "date-time",
              "description": "Start time of the period",
              "type": "string"
            },
            "endTime": {
              "format": "date-time",
              "description": "End time of the period",
              "type": "string"
            },
            "abnormalTimePeriods": {
              "description": "List of time periods.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AbnormalTimePeriod"
              }
            },
            "payload": {
              "description": "Data by each detector",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnalysisData"
              }
            },
            "nonCorrelatedDetectors": {
              "description": "Data by each detector for detectors that did not corelate",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DetectorDefinition"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DiagnosticAnalysisCollection": {
      "description": "Collection of Diagnostic Analyses",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalysisDefinition"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnosticCategory": {
      "description": "Class representing detector definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DiagnosticCategory resource specific properties",
          "properties": {
            "description": {
              "description": "Description of the diagnostic category",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DiagnosticCategoryCollection": {
      "description": "Collection of Diagnostic Categories",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticCategory"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnosticData": {
      "description": "Set of data with rendering instructions",
      "type": "object",
      "properties": {
        "table": {
          "$ref": "#/definitions/DataTableResponseObject",
          "description": "Data in table form"
        },
        "renderingProperties": {
          "$ref": "#/definitions/Rendering",
          "description": "Properties that describe how the table should be rendered"
        }
      }
    },
    "DiagnosticDetectorCollection": {
      "description": "Collection of Diagnostic Detectors",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetectorDefinition"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnosticDetectorResponse": {
      "description": "Class representing Response from Diagnostic Detectors",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DiagnosticDetectorResponse resource specific properties",
          "properties": {
            "startTime": {
              "format": "date-time",
              "description": "Start time of the period",
              "type": "string"
            },
            "endTime": {
              "format": "date-time",
              "description": "End time of the period",
              "type": "string"
            },
            "issueDetected": {
              "description": "Flag representing Issue was detected.",
              "type": "boolean"
            },
            "detectorDefinition": {
              "$ref": "#/definitions/DetectorDefinition",
              "description": "Detector's definition"
            },
            "metrics": {
              "description": "Metrics provided by the detector",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnosticMetricSet"
              }
            },
            "abnormalTimePeriods": {
              "description": "List of Correlated events found by the detector",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DetectorAbnormalTimePeriod"
              }
            },
            "data": {
              "description": "Additional Data that detector wants to send.",
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/NameValuePair"
                }
              }
            },
            "responseMetaData": {
              "$ref": "#/definitions/ResponseMetaData",
              "description": "Meta Data"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DiagnosticMetricSample": {
      "description": "Class representing Diagnostic Metric",
      "type": "object",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "description": "Time at which metric is measured",
          "type": "string"
        },
        "roleInstance": {
          "description": "Role Instance. Null if this counter is not per instance \nThis is returned and should be whichever instance name we desire to be returned\ni.e. CPU and Memory return RDWORKERNAME (LargeDed..._IN_0) \nwhere RDWORKERNAME is Machine name below and RoleInstance name in parenthesis",
          "type": "string"
        },
        "total": {
          "format": "double",
          "description": "Total value of the metric. If multiple measurements are made this will have sum of all.",
          "type": "number"
        },
        "maximum": {
          "format": "double",
          "description": "Maximum of the metric sampled during the time period",
          "type": "number"
        },
        "minimum": {
          "format": "double",
          "description": "Minimum of the metric sampled during the time period",
          "type": "number"
        },
        "isAggregated": {
          "description": "Whether the values are aggregates across all workers or not",
          "type": "boolean"
        }
      }
    },
    "DiagnosticMetricSet": {
      "description": "Class representing Diagnostic Metric information",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the metric",
          "type": "string"
        },
        "unit": {
          "description": "Metric's unit",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of the period",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of the period",
          "type": "string"
        },
        "timeGrain": {
          "description": "Presented time grain. Supported grains at the moment are PT1M, PT1H, P1D",
          "type": "string"
        },
        "values": {
          "description": "Collection of metric values for the selected period based on the {Microsoft.Web.Hosting.Administration.DiagnosticMetricSet.TimeGrain}",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticMetricSample"
          }
        }
      }
    },
    "Rendering": {
      "description": "Instructions for rendering the data",
      "type": "object",
      "properties": {
        "type": {
          "description": "Rendering Type",
          "enum": [
            "NoGraph",
            "Table",
            "TimeSeries",
            "TimeSeriesPerInstance"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RenderingType",
            "modelAsString": false
          }
        },
        "title": {
          "description": "Title of data",
          "type": "string"
        },
        "description": {
          "description": "Description of the data that will help it be interpreted",
          "type": "string"
        }
      }
    },
    "ResponseMetaData": {
      "type": "object",
      "properties": {
        "dataSource": {
          "$ref": "#/definitions/DataSource",
          "description": "Source of the Data"
        }
      }
    },
    "Solution": {
      "description": "Class Representing Solution for problems detected.",
      "type": "object",
      "properties": {
        "id": {
          "format": "double",
          "description": "Solution Id.",
          "type": "number"
        },
        "displayName": {
          "description": "Display Name of the solution",
          "type": "string"
        },
        "order": {
          "format": "double",
          "description": "Order of the solution.",
          "type": "number"
        },
        "description": {
          "description": "Description of the solution",
          "type": "string"
        },
        "type": {
          "description": "Type of Solution",
          "enum": [
            "QuickSolution",
            "DeepInvestigation",
            "BestPractices"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SolutionType",
            "modelAsString": false
          }
        },
        "data": {
          "description": "Solution Data.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValuePair"
            }
          }
        },
        "metadata": {
          "description": "Solution Metadata.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValuePair"
            }
          }
        }
      }
    },
    "NameValuePair": {
      "description": "Name value pair.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Pair name.",
          "type": "string"
        },
        "value": {
          "description": "Pair value.",
          "type": "string"
        }
      }
    },
    "VnetRoute": {
      "description": "Virtual Network route contract used to pass routing information for a Virtual Network.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetRoute resource specific properties",
          "properties": {
            "startAddress": {
              "description": "The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.",
              "type": "string"
            },
            "endAddress": {
              "description": "The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.",
              "type": "string"
            },
            "routeType": {
              "description": "The type of route this is:\nDEFAULT - By default, every app has routes to the local address ranges specified by RFC1918\nINHERITED - Routes inherited from the real Virtual Network routes\nSTATIC - Static route set on the app only\n\nThese values will be used for syncing an app's routes with those from a Virtual Network.",
              "enum": [
                "DEFAULT",
                "INHERITED",
                "STATIC"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RouteType",
                "modelAsString": true
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetInfo": {
      "description": "Virtual Network information contract.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetInfo resource specific properties",
          "properties": {
            "vnetResourceId": {
              "description": "The Virtual Network's resource ID.",
              "type": "string"
            },
            "certThumbprint": {
              "description": "The client certificate thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "certBlob": {
              "description": "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \nPoint-To-Site VPN connection.",
              "type": "string"
            },
            "routes": {
              "description": "The routes that this Virtual Network connection uses.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VnetRoute"
              },
              "readOnly": true
            },
            "resyncRequired": {
              "description": "<code>true</code> if a resync is required; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "dnsServers": {
              "description": "DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.",
              "type": "string"
            },
            "isSwift": {
              "description": "Flag that is used to denote if this is VNET injection",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetGateway": {
      "description": "The Virtual Network gateway contract. This is used to give the Virtual Network gateway access to the VPN package.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetGateway resource specific properties",
          "required": [
            "vpnPackageUri"
          ],
          "properties": {
            "vnetName": {
              "description": "The Virtual Network name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "vpnPackageUri": {
              "description": "The URI where the VPN package can be downloaded.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "User": {
      "description": "User credentials used for publishing activity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "User resource specific properties",
          "required": [
            "publishingUserName"
          ],
          "properties": {
            "publishingUserName": {
              "description": "Username used for publishing.",
              "type": "string"
            },
            "publishingPassword": {
              "format": "password",
              "description": "Password used for publishing.",
              "type": "string"
            },
            "publishingPasswordHash": {
              "format": "password",
              "description": "Password hash used for publishing.",
              "type": "string"
            },
            "publishingPasswordHashSalt": {
              "format": "password",
              "description": "Password hash salt used for publishing.",
              "type": "string"
            },
            "scmUri": {
              "description": "Url of SCM site.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Snapshot": {
      "description": "A snapshot of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Snapshot resource specific properties",
          "properties": {
            "time": {
              "description": "The time the snapshot was taken.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PushSettings": {
      "description": "Push settings for the App.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PushSettings resource specific properties",
          "required": [
            "isPushEnabled"
          ],
          "properties": {
            "isPushEnabled": {
              "description": "Gets or sets a flag indicating whether the Push endpoint is enabled.",
              "type": "boolean"
            },
            "tagWhitelistJson": {
              "description": "Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.",
              "type": "string"
            },
            "tagsRequiringAuth": {
              "description": "Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.\nTags can consist of alphanumeric characters and the following:\n'_', '@', '#', '.', ':', '-'. \nValidation should be performed at the PushRequestHandler.",
              "type": "string"
            },
            "dynamicTagsJson": {
              "description": "Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Identifier": {
      "description": "A domain specific resource identifier.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Identifier resource specific properties",
          "properties": {
            "id": {
              "description": "String representation of the identity.",
              "type": "string",
              "x-ms-client-name": "value"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HybridConnection": {
      "description": "Hybrid Connection contract. This is used to configure a Hybrid Connection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HybridConnection resource specific properties",
          "properties": {
            "serviceBusNamespace": {
              "description": "The name of the Service Bus namespace.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayName": {
              "description": "The name of the Service Bus relay.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayArmUri": {
              "description": "The ARM URI to the Service Bus relay.",
              "type": "string"
            },
            "hostname": {
              "description": "The hostname of the endpoint.",
              "type": "string"
            },
            "port": {
              "format": "int32",
              "description": "The port of the endpoint.",
              "type": "integer"
            },
            "sendKeyName": {
              "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
              "type": "string"
            },
            "sendKeyValue": {
              "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\nnormally, use the POST /listKeys API instead.",
              "type": "string"
            },
            "serviceBusSuffix": {
              "description": "The suffix for the service bus endpoint. By default this is .servicebus.windows.net",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DeletedSite": {
      "description": "A deleted app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DeletedSite resource specific properties",
          "properties": {
            "deletedSiteId": {
              "format": "int32",
              "description": "Numeric id for the deleted site",
              "type": "integer",
              "readOnly": true
            },
            "deletedTimestamp": {
              "description": "Time in UTC when the app was deleted.",
              "type": "string",
              "readOnly": true
            },
            "subscription": {
              "description": "Subscription containing the deleted site",
              "type": "string",
              "readOnly": true
            },
            "resourceGroup": {
              "description": "ResourceGroup that contained the deleted site",
              "type": "string",
              "readOnly": true
            },
            "deletedSiteName": {
              "description": "Name of the deleted site",
              "type": "string",
              "readOnly": true
            },
            "slot": {
              "description": "Slot of the deleted site",
              "type": "string",
              "readOnly": true
            },
            "kind": {
              "description": "Kind of site that was deleted",
              "type": "string",
              "readOnly": true
            },
            "geoRegionName": {
              "description": "Geo Region of the deleted site",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProxyOnlyResource": {
      "description": "Azure proxy only resource. This resource is not tracked by Azure Resource Manager.",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "DefaultErrorResponse": {
      "description": "App Service error response.",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error model.",
          "type": "object",
          "properties": {
            "code": {
              "description": "Standardized string to programmatically identify the error.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "target": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "details": {
              "type": "array",
              "items": {
                "description": "Detailed errors.",
                "properties": {
                  "code": {
                    "description": "Standardized string to programmatically identify the error.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  },
                  "target": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  }
                },
                "readOnly": true
              }
            },
            "innererror": {
              "description": "More information to debug error.",
              "type": "string",
              "readOnly": true
            }
          },
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
      "x-ms-parameter-location": "method"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "x-internal-service-id": "appservice",
  "x-internal-service-name": "App Service",
  "x-internal-toc-name": "Diagnostics",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "ExecuteSiteDetector",
  "x-internal-operation-name": "Execute Site Detector"
}