{
  "swagger": "2.0",
  "info": {
    "version": "2019-08-01",
    "title": " API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/geoRegions": {
      "get": {
        "summary": "Get a list of available geographical regions.",
        "description": "Description for Get a list of available geographical regions.",
        "operationId": "ListGeoRegions",
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "description": "Name of SKU used to filter the regions.",
            "type": "string",
            "enum": [
              "Free",
              "Shared",
              "Basic",
              "Standard",
              "Premium",
              "Dynamic",
              "Isolated",
              "PremiumV2",
              "ElasticPremium",
              "ElasticIsolated"
            ],
            "x-ms-enum": {
              "name": "SkuName",
              "modelAsString": true
            }
          },
          {
            "name": "linuxWorkersEnabled",
            "in": "query",
            "description": "Specify <code>true</code> if you want to filter to only regions that support Linux workers.",
            "type": "boolean"
          },
          {
            "name": "xenonWorkersEnabled",
            "in": "query",
            "description": "Specify <code>true</code> if you want to filter to only regions that support Xenon workers.",
            "type": "boolean"
          },
          {
            "name": "linuxDynamicWorkersEnabled",
            "in": "query",
            "description": "Specify <code>true</code> if you want to filter to only regions that support Linux Consumption Workers.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeoRegionCollection"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "List Geo Regions"
      }
    }
  },
  "definitions": {
    "BillingMeter": {
      "description": "App Service billing entity that contains information about meter which the Azure billing system utilizes to charge users for services.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "BillingMeter resource specific properties",
          "properties": {
            "meterId": {
              "description": "Meter GUID onboarded in Commerce",
              "type": "string"
            },
            "billingLocation": {
              "description": "Azure Location of billable resource",
              "type": "string"
            },
            "shortName": {
              "description": "Short Name from App Service Azure pricing Page",
              "type": "string"
            },
            "friendlyName": {
              "description": "Friendly name of the meter",
              "type": "string"
            },
            "resourceType": {
              "description": "App Service ResourceType meter used for",
              "type": "string"
            },
            "osType": {
              "description": "App Service OS type meter used for",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BillingMeterCollection": {
      "description": "Collection of Billing Meters",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingMeter"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CsmMoveResourceEnvelope": {
      "description": "Object with a list of the resources that need to be moved and the resource group they should be moved to.",
      "type": "object",
      "properties": {
        "targetResourceGroup": {
          "maxLength": 90,
          "minLength": 1,
          "pattern": " ^[-\\w\\._\\(\\)]+[^\\.]$",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeploymentLocations": {
      "description": "List of available locations (regions or App Service Environments) for\ndeployment of App Service resources.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "Available regions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoRegion"
          }
        },
        "hostingEnvironments": {
          "description": "Available App Service Environments with full descriptions of the environments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppServiceEnvironment"
          }
        },
        "hostingEnvironmentDeploymentInfos": {
          "description": "Available App Service Environments with basic information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostingEnvironmentDeploymentInfo"
          }
        }
      }
    },
    "GeoRegion": {
      "description": "Geographical region.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "GeoRegion resource specific properties",
          "properties": {
            "description": {
              "description": "Region description.",
              "type": "string",
              "readOnly": true
            },
            "displayName": {
              "description": "Display name for region.",
              "type": "string",
              "readOnly": true
            },
            "orgDomain": {
              "description": "Display name for region.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "GeoRegionCollection": {
      "description": "Collection of geographical regions.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoRegion"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GlobalCsmSkuDescription": {
      "description": "A Global SKU Description.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the resource SKU.",
          "type": "string"
        },
        "tier": {
          "description": "Service Tier of the resource SKU.",
          "type": "string"
        },
        "size": {
          "description": "Size specifier of the resource SKU.",
          "type": "string"
        },
        "family": {
          "description": "Family code of the resource SKU.",
          "type": "string"
        },
        "capacity": {
          "$ref": "#/definitions/SkuCapacity",
          "description": "Min, max, and default scale values of the SKU."
        },
        "locations": {
          "description": "Locations of the SKU.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "description": "Capabilities of the SKU, e.g., is traffic manager enabled?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Capability"
          }
        }
      }
    },
    "HostingEnvironmentDeploymentInfo": {
      "description": "Information needed to create resources on an App Service Environment.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the App Service Environment.",
          "type": "string"
        },
        "location": {
          "description": "Location of the App Service Environment.",
          "type": "string"
        }
      }
    },
    "PremierAddOnOffer": {
      "description": "Premier add-on offer.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PremierAddOnOffer resource specific properties",
          "properties": {
            "sku": {
              "description": "Premier add on SKU.",
              "type": "string"
            },
            "product": {
              "description": "Premier add on offer Product.",
              "type": "string"
            },
            "vendor": {
              "description": "Premier add on offer Vendor.",
              "type": "string"
            },
            "promoCodeRequired": {
              "description": "<code>true</code> if promotion code is required; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "quota": {
              "format": "int32",
              "description": "Premier add on offer Quota.",
              "type": "integer"
            },
            "webHostingPlanRestrictions": {
              "description": "App Service plans this offer is restricted to.",
              "enum": [
                "None",
                "Free",
                "Shared",
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AppServicePlanRestrictions",
                "modelAsString": false
              }
            },
            "privacyPolicyUrl": {
              "description": "Privacy policy URL.",
              "type": "string"
            },
            "legalTermsUrl": {
              "description": "Legal terms URL.",
              "type": "string"
            },
            "marketplacePublisher": {
              "description": "Marketplace publisher.",
              "type": "string"
            },
            "marketplaceOffer": {
              "description": "Marketplace offer.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PremierAddOnOfferCollection": {
      "description": "Collection of premier add-on offers.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierAddOnOffer"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceNameAvailability": {
      "description": "Information regarding availability of a resource name.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "<code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both.",
          "type": "boolean"
        },
        "reason": {
          "description": "<code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InAvailabilityReasonType",
            "modelAsString": true
          }
        },
        "message": {
          "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name.",
          "type": "string"
        }
      }
    },
    "ResourceNameAvailabilityRequest": {
      "description": "Resource name availability request content.",
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name to verify.",
          "type": "string"
        },
        "type": {
          "description": "Resource type used for verification.",
          "enum": [
            "Site",
            "Slot",
            "HostingEnvironment",
            "PublishingUser",
            "Microsoft.Web/sites",
            "Microsoft.Web/sites/slots",
            "Microsoft.Web/hostingEnvironments",
            "Microsoft.Web/publishingUsers"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CheckNameResourceTypes",
            "modelAsString": true
          }
        },
        "isFqdn": {
          "description": "Is fully qualified domain name.",
          "type": "boolean"
        }
      }
    },
    "SkuInfos": {
      "description": "Collection of SKU information.",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "Resource type that this SKU applies to.",
          "type": "string"
        },
        "skus": {
          "description": "List of SKUs the subscription is able to use.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GlobalCsmSkuDescription"
          }
        }
      }
    },
    "SourceControl": {
      "description": "The source control OAuth token.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SourceControl resource specific properties",
          "properties": {
            "token": {
              "description": "OAuth access token.",
              "type": "string"
            },
            "tokenSecret": {
              "description": "OAuth access token secret.",
              "type": "string"
            },
            "refreshToken": {
              "description": "OAuth refresh token.",
              "type": "string"
            },
            "expirationTime": {
              "format": "date-time",
              "description": "OAuth token expiration.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SourceControlCollection": {
      "description": "Collection of source controls.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceControl"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ValidateProperties": {
      "description": "App properties used for validation.",
      "type": "object",
      "properties": {
        "serverFarmId": {
          "description": "ARM resource ID of an App Service plan that would host the app.",
          "type": "string"
        },
        "skuName": {
          "description": "Name of the target SKU for the App Service plan.",
          "type": "string"
        },
        "needLinuxWorkers": {
          "description": "<code>true</code> if App Service plan is for Linux workers; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "isSpot": {
          "description": "<code>true</code> if App Service plan is for Spot instances; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "capacity": {
          "format": "int32",
          "description": "Target capacity of the App Service plan (number of VMs).",
          "minimum": 1,
          "type": "integer"
        },
        "hostingEnvironment": {
          "description": "Name of App Service Environment where app or App Service plan should be created.",
          "type": "string"
        },
        "isXenon": {
          "description": "<code>true</code> if App Service plan is running as a windows container",
          "type": "boolean"
        },
        "containerRegistryBaseUrl": {
          "description": "Base URL of the container registry",
          "type": "string"
        },
        "containerRegistryUsername": {
          "description": "Username for to access the container registry",
          "type": "string"
        },
        "containerRegistryPassword": {
          "description": "Password for to access the container registry",
          "type": "string"
        },
        "containerImageRepository": {
          "description": "Repository name (image name)",
          "type": "string"
        },
        "containerImageTag": {
          "description": "Image tag",
          "type": "string"
        },
        "containerImagePlatform": {
          "description": "Platform (windows or linux)",
          "type": "string"
        }
      }
    },
    "ValidateRequest": {
      "description": "Resource validation request content.",
      "required": [
        "name",
        "type",
        "location",
        "properties"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name to verify.",
          "type": "string"
        },
        "type": {
          "description": "Resource type used for verification.",
          "enum": [
            "ServerFarm",
            "Site"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ValidateResourceTypes",
            "modelAsString": true
          }
        },
        "location": {
          "description": "Expected location of the resource.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/ValidateProperties",
          "description": "Properties of the resource to validate.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ValidateResponse": {
      "description": "Describes the result of resource validation.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Result of validation.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ValidateResponseError",
          "description": "Error details for the case when validation fails."
        }
      }
    },
    "ValidateResponseError": {
      "description": "Error details for when validation fails.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Validation error code.",
          "type": "string"
        },
        "message": {
          "description": "Validation error message.",
          "type": "string"
        }
      }
    },
    "VnetParameters": {
      "description": "The required set of inputs to validate a VNET",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetParameters resource specific properties",
          "properties": {
            "vnetResourceGroup": {
              "description": "The Resource Group of the VNET to be validated",
              "type": "string"
            },
            "vnetName": {
              "description": "The name of the VNET to be validated",
              "type": "string"
            },
            "vnetSubnetName": {
              "description": "The subnet name to be validated",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetValidationFailureDetails": {
      "description": "A class that describes the reason for a validation failure.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetValidationFailureDetails resource specific properties",
          "properties": {
            "failed": {
              "description": "A flag describing whether or not validation failed.",
              "type": "boolean"
            },
            "failedTests": {
              "description": "A list of tests that failed in the validation.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VnetValidationTestFailure"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetValidationTestFailure": {
      "description": "A class that describes a test that failed during NSG and UDR validation.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetValidationTestFailure resource specific properties",
          "properties": {
            "testName": {
              "description": "The name of the test that failed.",
              "type": "string"
            },
            "details": {
              "description": "The details of what caused the failure, e.g. the blocking rule name, etc.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetRoute": {
      "description": "Virtual Network route contract used to pass routing information for a Virtual Network.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetRoute resource specific properties",
          "properties": {
            "startAddress": {
              "description": "The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.",
              "type": "string"
            },
            "endAddress": {
              "description": "The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.",
              "type": "string"
            },
            "routeType": {
              "description": "The type of route this is:\nDEFAULT - By default, every app has routes to the local address ranges specified by RFC1918\nINHERITED - Routes inherited from the real Virtual Network routes\nSTATIC - Static route set on the app only\n\nThese values will be used for syncing an app's routes with those from a Virtual Network.",
              "enum": [
                "DEFAULT",
                "INHERITED",
                "STATIC"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RouteType",
                "modelAsString": true
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetInfo": {
      "description": "Virtual Network information contract.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetInfo resource specific properties",
          "properties": {
            "vnetResourceId": {
              "description": "The Virtual Network's resource ID.",
              "type": "string"
            },
            "certThumbprint": {
              "description": "The client certificate thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "certBlob": {
              "description": "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \nPoint-To-Site VPN connection.",
              "type": "string"
            },
            "routes": {
              "description": "The routes that this Virtual Network connection uses.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VnetRoute"
              },
              "readOnly": true
            },
            "resyncRequired": {
              "description": "<code>true</code> if a resync is required; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "dnsServers": {
              "description": "DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.",
              "type": "string"
            },
            "isSwift": {
              "description": "Flag that is used to denote if this is VNET injection",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetGateway": {
      "description": "The Virtual Network gateway contract. This is used to give the Virtual Network gateway access to the VPN package.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetGateway resource specific properties",
          "required": [
            "vpnPackageUri"
          ],
          "properties": {
            "vnetName": {
              "description": "The Virtual Network name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "vpnPackageUri": {
              "description": "The URI where the VPN package can be downloaded.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "User": {
      "description": "User credentials used for publishing activity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "User resource specific properties",
          "required": [
            "publishingUserName"
          ],
          "properties": {
            "publishingUserName": {
              "description": "Username used for publishing.",
              "type": "string"
            },
            "publishingPassword": {
              "format": "password",
              "description": "Password used for publishing.",
              "type": "string"
            },
            "publishingPasswordHash": {
              "format": "password",
              "description": "Password hash used for publishing.",
              "type": "string"
            },
            "publishingPasswordHashSalt": {
              "format": "password",
              "description": "Password hash salt used for publishing.",
              "type": "string"
            },
            "scmUri": {
              "description": "Url of SCM site.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Snapshot": {
      "description": "A snapshot of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Snapshot resource specific properties",
          "properties": {
            "time": {
              "description": "The time the snapshot was taken.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PushSettings": {
      "description": "Push settings for the App.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PushSettings resource specific properties",
          "required": [
            "isPushEnabled"
          ],
          "properties": {
            "isPushEnabled": {
              "description": "Gets or sets a flag indicating whether the Push endpoint is enabled.",
              "type": "boolean"
            },
            "tagWhitelistJson": {
              "description": "Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.",
              "type": "string"
            },
            "tagsRequiringAuth": {
              "description": "Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.\nTags can consist of alphanumeric characters and the following:\n'_', '@', '#', '.', ':', '-'. \nValidation should be performed at the PushRequestHandler.",
              "type": "string"
            },
            "dynamicTagsJson": {
              "description": "Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Identifier": {
      "description": "A domain specific resource identifier.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Identifier resource specific properties",
          "properties": {
            "id": {
              "description": "String representation of the identity.",
              "type": "string",
              "x-ms-client-name": "value"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HybridConnection": {
      "description": "Hybrid Connection contract. This is used to configure a Hybrid Connection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HybridConnection resource specific properties",
          "properties": {
            "serviceBusNamespace": {
              "description": "The name of the Service Bus namespace.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayName": {
              "description": "The name of the Service Bus relay.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayArmUri": {
              "description": "The ARM URI to the Service Bus relay.",
              "type": "string"
            },
            "hostname": {
              "description": "The hostname of the endpoint.",
              "type": "string"
            },
            "port": {
              "format": "int32",
              "description": "The port of the endpoint.",
              "type": "integer"
            },
            "sendKeyName": {
              "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
              "type": "string"
            },
            "sendKeyValue": {
              "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\nnormally, use the POST /listKeys API instead.",
              "type": "string"
            },
            "serviceBusSuffix": {
              "description": "The suffix for the service bus endpoint. By default this is .servicebus.windows.net",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DeletedSite": {
      "description": "A deleted app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DeletedSite resource specific properties",
          "properties": {
            "deletedSiteId": {
              "format": "int32",
              "description": "Numeric id for the deleted site",
              "type": "integer",
              "readOnly": true
            },
            "deletedTimestamp": {
              "description": "Time in UTC when the app was deleted.",
              "type": "string",
              "readOnly": true
            },
            "subscription": {
              "description": "Subscription containing the deleted site",
              "type": "string",
              "readOnly": true
            },
            "resourceGroup": {
              "description": "ResourceGroup that contained the deleted site",
              "type": "string",
              "readOnly": true
            },
            "deletedSiteName": {
              "description": "Name of the deleted site",
              "type": "string",
              "readOnly": true
            },
            "slot": {
              "description": "Slot of the deleted site",
              "type": "string",
              "readOnly": true
            },
            "kind": {
              "description": "Kind of site that was deleted",
              "type": "string",
              "readOnly": true
            },
            "geoRegionName": {
              "description": "Geo Region of the deleted site",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProxyOnlyResource": {
      "description": "Azure proxy only resource. This resource is not tracked by Azure Resource Manager.",
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "Capability": {
      "description": "Describes the capabilities/features allowed for a specific SKU.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the SKU capability.",
          "type": "string"
        },
        "value": {
          "description": "Value of the SKU capability.",
          "type": "string"
        },
        "reason": {
          "description": "Reason of the SKU capability.",
          "type": "string"
        }
      }
    },
    "SkuCapacity": {
      "description": "Description of the App Service plan scale options.",
      "type": "object",
      "properties": {
        "minimum": {
          "format": "int32",
          "description": "Minimum number of workers for this App Service plan SKU.",
          "type": "integer"
        },
        "maximum": {
          "format": "int32",
          "description": "Maximum number of workers for this App Service plan SKU.",
          "type": "integer"
        },
        "default": {
          "format": "int32",
          "description": "Default number of workers for this App Service plan SKU.",
          "type": "integer"
        },
        "scaleType": {
          "description": "Available scale configurations for an App Service plan.",
          "type": "string"
        }
      }
    },
    "NameValuePair": {
      "description": "Name value pair.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Pair name.",
          "type": "string"
        },
        "value": {
          "description": "Pair value.",
          "type": "string"
        }
      }
    },
    "NetworkAccessControlEntry": {
      "description": "Network access control entry.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Action object.",
          "enum": [
            "Permit",
            "Deny"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AccessControlEntryAction",
            "modelAsString": false
          }
        },
        "description": {
          "description": "Description of network access control entry.",
          "type": "string"
        },
        "order": {
          "format": "int32",
          "description": "Order of precedence.",
          "type": "integer"
        },
        "remoteSubnet": {
          "description": "Remote subnet.",
          "type": "string"
        }
      }
    },
    "StampCapacity": {
      "description": "Stamp capacity information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the stamp.",
          "type": "string"
        },
        "availableCapacity": {
          "format": "int64",
          "description": "Available capacity (# of machines, bytes of storage etc...).",
          "type": "integer"
        },
        "totalCapacity": {
          "format": "int64",
          "description": "Total capacity (# of machines, bytes of storage etc...).",
          "type": "integer"
        },
        "unit": {
          "description": "Name of the unit.",
          "type": "string"
        },
        "computeMode": {
          "description": "Shared/dedicated workers.",
          "enum": [
            "Shared",
            "Dedicated",
            "Dynamic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ComputeModeOptions",
            "modelAsString": false
          }
        },
        "workerSize": {
          "description": "Size of the machines.",
          "enum": [
            "Small",
            "Medium",
            "Large",
            "D1",
            "D2",
            "D3",
            "NestedSmall",
            "Default"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkerSizeOptions",
            "modelAsString": false
          }
        },
        "workerSizeId": {
          "format": "int32",
          "description": "Size ID of machines: \n0 - Small\n1 - Medium\n2 - Large",
          "type": "integer"
        },
        "excludeFromCapacityAllocation": {
          "description": "If <code>true</code>, it includes basic apps.\nBasic apps are not used for capacity allocation.",
          "type": "boolean"
        },
        "isApplicableForAllComputeModes": {
          "description": "<code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "siteMode": {
          "description": "Shared or Dedicated.",
          "type": "string"
        },
        "isLinux": {
          "description": "Is this a linux stamp capacity",
          "type": "boolean"
        }
      }
    },
    "VirtualIPMapping": {
      "description": "Virtual IP mapping.",
      "type": "object",
      "properties": {
        "virtualIP": {
          "description": "Virtual IP address.",
          "type": "string"
        },
        "internalHttpPort": {
          "format": "int32",
          "description": "Internal HTTP port.",
          "type": "integer"
        },
        "internalHttpsPort": {
          "format": "int32",
          "description": "Internal HTTPS port.",
          "type": "integer"
        },
        "inUse": {
          "description": "Is virtual IP mapping in use.",
          "type": "boolean"
        },
        "serviceName": {
          "description": "name of the service that virtual IP is assigned to",
          "type": "string"
        }
      }
    },
    "WorkerPool": {
      "description": "Worker pool of an App Service Environment.",
      "type": "object",
      "properties": {
        "workerSizeId": {
          "format": "int32",
          "description": "Worker size ID for referencing this worker pool.",
          "type": "integer"
        },
        "computeMode": {
          "description": "Shared or dedicated app hosting.",
          "enum": [
            "Shared",
            "Dedicated",
            "Dynamic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ComputeModeOptions",
            "modelAsString": false
          }
        },
        "workerSize": {
          "description": "VM size of the worker pool instances.",
          "type": "string"
        },
        "workerCount": {
          "format": "int32",
          "description": "Number of instances in the worker pool.",
          "type": "integer"
        },
        "instanceNames": {
          "description": "Names of all instances in the worker pool (read only).",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "VirtualNetworkProfile": {
      "description": "Specification for using a Virtual Network.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource id of the Virtual Network.",
          "type": "string"
        },
        "name": {
          "description": "Name of the Virtual Network (read-only).",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type of the Virtual Network (read-only).",
          "type": "string",
          "readOnly": true
        },
        "subnet": {
          "description": "Subnet within the Virtual Network.",
          "type": "string"
        }
      }
    },
    "AppServiceEnvironment": {
      "description": "Description of an App Service Environment.",
      "required": [
        "name",
        "location",
        "virtualNetwork",
        "workerPools"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the App Service Environment.",
          "type": "string"
        },
        "location": {
          "description": "Location of the App Service Environment, e.g. \"West US\".",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the App Service Environment.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "InProgress",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": false
          }
        },
        "status": {
          "description": "Current status of the App Service Environment.",
          "enum": [
            "Preparing",
            "Ready",
            "Scaling",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "HostingEnvironmentStatus",
            "modelAsString": false
          }
        },
        "vnetName": {
          "description": "Name of the Virtual Network for the App Service Environment.",
          "type": "string"
        },
        "vnetResourceGroupName": {
          "description": "Resource group of the Virtual Network.",
          "type": "string"
        },
        "vnetSubnetName": {
          "description": "Subnet of the Virtual Network.",
          "type": "string"
        },
        "virtualNetwork": {
          "$ref": "#/definitions/VirtualNetworkProfile",
          "description": "Description of the Virtual Network."
        },
        "internalLoadBalancingMode": {
          "description": "Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.",
          "enum": [
            "None",
            "Web",
            "Publishing"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InternalLoadBalancingMode",
            "modelAsString": false
          }
        },
        "multiSize": {
          "description": "Front-end VM size, e.g. \"Medium\", \"Large\".",
          "type": "string"
        },
        "multiRoleCount": {
          "format": "int32",
          "description": "Number of front-end instances.",
          "type": "integer"
        },
        "workerPools": {
          "description": "Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkerPool"
          }
        },
        "ipsslAddressCount": {
          "format": "int32",
          "description": "Number of IP SSL addresses reserved for the App Service Environment.",
          "type": "integer"
        },
        "databaseEdition": {
          "description": "Edition of the metadata database for the App Service Environment, e.g. \"Standard\".",
          "type": "string",
          "readOnly": true
        },
        "databaseServiceObjective": {
          "description": "Service objective of the metadata database for the App Service Environment, e.g. \"S0\".",
          "type": "string",
          "readOnly": true
        },
        "upgradeDomains": {
          "format": "int32",
          "description": "Number of upgrade domains of the App Service Environment.",
          "type": "integer",
          "readOnly": true
        },
        "subscriptionId": {
          "description": "Subscription of the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "dnsSuffix": {
          "description": "DNS suffix of the App Service Environment.",
          "type": "string"
        },
        "lastAction": {
          "description": "Last deployment action on the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "lastActionResult": {
          "description": "Result of the last deployment action on the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "allowedMultiSizes": {
          "description": "List of comma separated strings describing which VM sizes are allowed for front-ends.",
          "type": "string",
          "readOnly": true
        },
        "allowedWorkerSizes": {
          "description": "List of comma separated strings describing which VM sizes are allowed for workers.",
          "type": "string",
          "readOnly": true
        },
        "maximumNumberOfMachines": {
          "format": "int32",
          "description": "Maximum number of VMs in the App Service Environment.",
          "type": "integer",
          "readOnly": true
        },
        "vipMappings": {
          "description": "Description of IP SSL mapping for the App Service Environment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualIPMapping"
          },
          "readOnly": true
        },
        "environmentCapacities": {
          "description": "Current total, used, and available worker capacities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StampCapacity"
          },
          "readOnly": true
        },
        "networkAccessControlList": {
          "description": "Access control list for controlling traffic to the App Service Environment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAccessControlEntry"
          }
        },
        "environmentIsHealthy": {
          "description": "True/false indicating whether the App Service Environment is healthy.",
          "type": "boolean",
          "readOnly": true
        },
        "environmentStatus": {
          "description": "Detailed message about with results of the last check of the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "resourceGroup": {
          "description": "Resource group of the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "frontEndScaleFactor": {
          "format": "int32",
          "description": "Scale factor for front-ends.",
          "type": "integer"
        },
        "defaultFrontEndScaleFactor": {
          "format": "int32",
          "description": "Default Scale Factor for FrontEnds.",
          "type": "integer",
          "readOnly": true
        },
        "apiManagementAccountId": {
          "description": "API Management Account associated with the App Service Environment.",
          "type": "string"
        },
        "suspended": {
          "description": "<code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available\n (most likely because NSG blocked the incoming traffic).",
          "type": "boolean"
        },
        "dynamicCacheEnabled": {
          "description": "True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available\n(most likely because NSG blocked the incoming traffic).",
          "type": "boolean"
        },
        "clusterSettings": {
          "description": "Custom settings for changing the behavior of the App Service Environment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        },
        "userWhitelistedIpRanges": {
          "description": "User added ip ranges to whitelist on ASE db",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hasLinuxWorkers": {
          "description": "Flag that displays whether an ASE has linux workers or not",
          "type": "boolean"
        },
        "sslCertKeyVaultId": {
          "description": "Key Vault ID for ILB App Service Environment default SSL certificate",
          "type": "string"
        },
        "sslCertKeyVaultSecretName": {
          "description": "Key Vault Secret Name for ILB App Service Environment default SSL certificate",
          "type": "string"
        }
      }
    },
    "DefaultErrorResponse": {
      "description": "App Service error response.",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error model.",
          "type": "object",
          "properties": {
            "code": {
              "description": "Standardized string to programmatically identify the error.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "target": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "details": {
              "type": "array",
              "items": {
                "description": "Detailed errors.",
                "properties": {
                  "code": {
                    "description": "Standardized string to programmatically identify the error.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  },
                  "target": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  }
                },
                "readOnly": true
              }
            },
            "innererror": {
              "description": "More information to debug error.",
              "type": "string",
              "readOnly": true
            }
          },
          "readOnly": true
        }
      }
    },
    "IdentifierCollection": {
      "description": "Collection of identifiers.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NameIdentifier": {
      "description": "Identifies an object.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the object.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
      "x-ms-parameter-location": "method"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "x-internal-service-id": "appservice",
  "x-internal-service-name": "App Service",
  "x-internal-toc-name": "List Geo Regions",
  "x-internal-product-uid": null,
  "x-internal-split-type": "Operation",
  "x-internal-operation-id": "ListGeoRegions",
  "x-internal-operation-name": "List Geo Regions"
}