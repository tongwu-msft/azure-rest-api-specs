### YamlMime:RESTOperation
uid: management.azure.com.virtualnetwork.networkvirtualappliances.createorupdate
name: Create Or Update
service: Virtual Networks
groupName: Network Virtual Appliances
apiVersion: 2021-08-01
summary: Creates or updates the specified Network Virtual Appliance.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}?api-version=2021-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: networkVirtualApplianceName
  in: path
  isRequired: true
  description: The name of Network Virtual Appliance.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Request successful. The operation returns the resulting Network Virtual Appliance resource.
  types:
  - uid: NetworkVirtualAppliance
- name: 201 Created
  description: Request received successfully. The operation returns the resulting Network Virtual Appliance resource.
  types:
  - uid: NetworkVirtualAppliance
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: identity
    in: body
    description: The service principal that has read access to cloud-init and config blob.
    types:
    - uid: ManagedServiceIdentity
  - name: properties.nvaSku
    in: body
    description: Network Virtual Appliance SKU.
    types:
    - uid: VirtualApplianceSkuProperties
  - name: properties.bootStrapConfigurationBlobs
    in: body
    description: BootStrapConfigurationBlobs storage URLs.
    types:
    - uid: string
      isArray: true
  - name: properties.virtualHub
    in: body
    description: The Virtual Hub where Network Virtual Appliance is being deployed.
    types:
    - uid: SubResource
  - name: properties.cloudInitConfigurationBlobs
    in: body
    description: CloudInitConfigurationBlob storage URLs.
    types:
    - uid: string
      isArray: true
  - name: properties.cloudInitConfiguration
    in: body
    description: CloudInitConfiguration string in plain text.
    types:
    - uid: string
  - name: properties.virtualApplianceAsn
    in: body
    description: VirtualAppliance ASN.
    types:
    - uid: integer
  - name: properties.sshPublicKey
    in: body
    description: Public key for SSH login.
    types:
    - uid: string
  - name: id
    in: body
    description: Resource ID.
    types:
    - uid: string
  - name: location
    in: body
    description: Resource location.
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: ManagedServiceIdentity
  description: Identity for the resource.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: type
    description: The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
    types:
    - uid: ResourceIdentityType
  - name: userAssignedIdentities
    description: "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
    types:
    - uid: UserAssignedIdentities
- name: VirtualApplianceSkuProperties
  description: Network Virtual Appliance Sku Properties.
  kind: object
  properties:
  - name: vendor
    description: Virtual Appliance Vendor.
    types:
    - uid: string
  - name: bundledScaleUnit
    description: Virtual Appliance Scale Unit.
    types:
    - uid: string
  - name: marketPlaceVersion
    description: Virtual Appliance Version.
    types:
    - uid: string
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: VirtualApplianceNicProperties
  description: Network Virtual Appliance NIC properties.
  kind: object
  properties:
  - name: name
    isReadyOnly: true
    description: NIC name.
    types:
    - uid: string
  - name: publicIpAddress
    isReadyOnly: true
    description: Public IP address.
    types:
    - uid: string
  - name: privateIpAddress
    isReadyOnly: true
    description: Private IP address.
    types:
    - uid: string
- name: NetworkVirtualAppliance
  description: NetworkVirtualAppliance Resource.
  kind: object
  properties:
  - name: identity
    description: The service principal that has read access to cloud-init and config blob.
    types:
    - uid: ManagedServiceIdentity
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.nvaSku
    description: Network Virtual Appliance SKU.
    types:
    - uid: VirtualApplianceSkuProperties
  - name: properties.addressPrefix
    isReadyOnly: true
    description: Address Prefix.
    types:
    - uid: string
  - name: properties.bootStrapConfigurationBlobs
    description: BootStrapConfigurationBlobs storage URLs.
    types:
    - uid: string
      isArray: true
  - name: properties.virtualHub
    description: The Virtual Hub where Network Virtual Appliance is being deployed.
    types:
    - uid: SubResource
  - name: properties.cloudInitConfigurationBlobs
    description: CloudInitConfigurationBlob storage URLs.
    types:
    - uid: string
      isArray: true
  - name: properties.cloudInitConfiguration
    description: CloudInitConfiguration string in plain text.
    types:
    - uid: string
  - name: properties.virtualApplianceAsn
    description: VirtualAppliance ASN.
    types:
    - uid: integer
  - name: properties.sshPublicKey
    description: Public key for SSH login.
    types:
    - uid: string
  - name: properties.virtualApplianceNics
    isReadyOnly: true
    description: List of Virtual Appliance Network Interfaces.
    types:
    - uid: VirtualApplianceNicProperties
      isArray: true
  - name: properties.virtualApplianceSites
    isReadyOnly: true
    description: List of references to VirtualApplianceSite.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.inboundSecurityRules
    isReadyOnly: true
    description: List of references to InboundSecurityRules.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the resource.
    types:
    - uid: ProvisioningState
  - name: id
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: ResourceIdentityType
  description: The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
  kind: enum
  properties:
  - name: SystemAssigned
    types:
    - uid: string
  - name: UserAssigned
    types:
    - uid: string
  - name: SystemAssigned, UserAssigned
    types:
    - uid: string
  - name: None
    types:
    - uid: string
- name: UserAssignedIdentities
  description: "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
  kind: object
  properties:
  - name: ''
    description: ''
    types:
    - uid: ''
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: Create NetworkVirtualAppliance
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkVirtualAppliances/nva?api-version=2021-08-01
    body: >-
      {
        "tags": {
          "key1": "value1"
        },
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
            "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1": {}
          }
        },
        "location": "West US",
        "properties": {
          "nvaSku": {
            "vendor": "Cisco SDWAN",
            "bundledScaleUnit": "1",
            "marketPlaceVersion": "12.1"
          },
          "virtualHub": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1"
          },
          "bootStrapConfigurationBlobs": [
            "https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrbootstrapconfig"
          ],
          "cloudInitConfigurationBlobs": [
            "https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrcloudinitconfig"
          ],
          "virtualApplianceAsn": 10000
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkVirtualAppliances/nva?api-version=2021-08-01

      {
        "tags": {
          "key1": "value1"
        },
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
            "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1": {}
          }
        },
        "location": "West US",
        "properties": {
          "nvaSku": {
            "vendor": "Cisco SDWAN",
            "bundledScaleUnit": "1",
            "marketPlaceVersion": "12.1"
          },
          "virtualHub": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1"
          },
          "bootStrapConfigurationBlobs": [
            "https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrbootstrapconfig"
          ],
          "cloudInitConfigurationBlobs": [
            "https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrcloudinitconfig"
          ],
          "virtualApplianceAsn": 10000
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.management.SubResource;
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.fluent.models.NetworkVirtualApplianceInner;
      import com.azure.resourcemanager.network.models.ManagedServiceIdentity;
      import com.azure.resourcemanager.network.models.ManagedServiceIdentityUserAssignedIdentities;
      import com.azure.resourcemanager.network.models.ResourceIdentityType;
      import com.azure.resourcemanager.network.models.VirtualApplianceSkuProperties;
      import java.util.Arrays;
      import java.util.HashMap;
      import java.util.Map;

      /** Samples for NetworkVirtualAppliances CreateOrUpdate. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/NetworkVirtualAppliancePut.json
           */
          /**
           * Sample code: Create NetworkVirtualAppliance.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void createNetworkVirtualAppliance(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getNetworkVirtualAppliances()
                  .createOrUpdate(
                      "rg1",
                      "nva",
                      new NetworkVirtualApplianceInner()
                          .withLocation("West US")
                          .withTags(mapOf("key1", "value1"))
                          .withIdentity(
                              new ManagedServiceIdentity()
                                  .withType(ResourceIdentityType.USER_ASSIGNED)
                                  .withUserAssignedIdentities(
                                      mapOf(
                                          "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1",
                                          new ManagedServiceIdentityUserAssignedIdentities())))
                          .withNvaSku(
                              new VirtualApplianceSkuProperties()
                                  .withVendor("Cisco SDWAN")
                                  .withBundledScaleUnit("1")
                                  .withMarketPlaceVersion("12.1"))
                          .withBootStrapConfigurationBlobs(
                              Arrays
                                  .asList(
                                      "https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrbootstrapconfig"))
                          .withVirtualHub(
                              new SubResource()
                                  .withId(
                                      "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1"))
                          .withCloudInitConfigurationBlobs(
                              Arrays
                                  .asList(
                                      "https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrcloudinitconfig"))
                          .withVirtualApplianceAsn(10000L),
                      Context.NONE);
          }

          @SuppressWarnings("unchecked")
          private static <T> Map<String, T> mapOf(Object... inputs) {
              Map<String, T> map = new HashMap<>();
              for (int i = 0; i < inputs.length; i += 2) {
                  String key = (String) inputs[i];
                  T value = (T) inputs[i + 1];
                  map.put(key, value);
              }
              return map;
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/NetworkVirtualAppliancePut.json
      func ExampleVirtualAppliancesClient_BeginCreateOrUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewVirtualAppliancesClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginCreateOrUpdate(ctx,
      		"rg1",
      		"nva",
      		armnetwork.VirtualAppliance{
      			Location: to.Ptr("West US"),
      			Tags: map[string]*string{
      				"key1": to.Ptr("value1"),
      			},
      			Identity: &armnetwork.ManagedServiceIdentity{
      				Type: to.Ptr(armnetwork.ResourceIdentityTypeUserAssigned),
      				UserAssignedIdentities: map[string]*armnetwork.Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties{
      					"/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1": {},
      				},
      			},
      			Properties: &armnetwork.VirtualAppliancePropertiesFormat{
      				BootStrapConfigurationBlobs: []*string{
      					to.Ptr("https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrbootstrapconfig")},
      				CloudInitConfigurationBlobs: []*string{
      					to.Ptr("https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrcloudinitconfig")},
      				NvaSKU: &armnetwork.VirtualApplianceSKUProperties{
      					BundledScaleUnit:   to.Ptr("1"),
      					MarketPlaceVersion: to.Ptr("12.1"),
      					Vendor:             to.Ptr("Cisco SDWAN"),
      				},
      				VirtualApplianceAsn: to.Ptr[int64](10000),
      				VirtualHub: &armnetwork.SubResource{
      					ID: to.Ptr("/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1"),
      				},
      			},
      		},
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.0.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Creates or updates the specified Network Virtual Appliance.
       *
       * @summary Creates or updates the specified Network Virtual Appliance.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/NetworkVirtualAppliancePut.json
       */
      async function createNetworkVirtualAppliance() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const networkVirtualApplianceName = "nva";
        const parameters = {
          bootStrapConfigurationBlobs: [
            "https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrbootstrapconfig",
          ],
          cloudInitConfigurationBlobs: [
            "https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrcloudinitconfig",
          ],
          identity: {
            type: "UserAssigned",
            userAssignedIdentities: {
              "/subscriptions/subid/resourcegroups/rg1/providers/MicrosoftManagedIdentity/userAssignedIdentities/identity1":
                {},
            },
          },
          location: "West US",
          nvaSku: {
            bundledScaleUnit: "1",
            marketPlaceVersion: "12.1",
            vendor: "Cisco SDWAN",
          },
          tags: { key1: "value1" },
          virtualApplianceAsn: 10000,
          virtualHub: {
            id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1",
          },
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.networkVirtualAppliances.beginCreateOrUpdateAndWait(
          resourceGroupName,
          networkVirtualApplianceName,
          parameters
        );
        console.log(result);
      }

      createNetworkVirtualAppliance().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_28.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "nva",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkVirtualAppliances/nva",
        "type": "Microsoft.Network/networkVirtualAppliances",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "location": "West US",
        "tags": {
          "key1": "value1"
        },
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
            "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1": {}
          }
        },
        "properties": {
          "nvaSku": {
            "vendor": "Cisco SDWAN",
            "bundledScaleUnit": "1",
            "marketPlaceVersion": "12.1"
          },
          "addressPrefix": "192.168.1.0/16",
          "virtualHub": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1"
          },
          "virtualApplianceSites": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networtkVirtualAppliances/nva/virtualApplianceSites/site1"
            }
          ],
          "inboundSecurityRules": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkVirtualAppliances/nva/InboundSecurityRules/rule1"
            }
          ],
          "provisioningState": "Succeeded",
          "bootStrapConfigurationBlobs": [
            "https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrbootstrapconfig"
          ],
          "cloudInitConfigurationBlobs": [
            "https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrcloudinitconfig"
          ],
          "virtualApplianceAsn": 10000,
          "virtualApplianceNics": [
            {
              "name": "managementNic",
              "publicIpAddress": "40.30.2.2",
              "privateIpAddress": "192.168.12.1"
            },
            {
              "name": "privateNic-1",
              "privateIpAddress": "192.168.12.2"
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "nva",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkVirtualAppliances/nva",
        "type": "Microsoft.Network/networkVirtualAppliances",
        "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
        "location": "West US",
        "tags": {
          "key1": "value1"
        },
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
            "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1": {}
          }
        },
        "properties": {
          "nvaSku": {
            "vendor": "Cisco SDWAN",
            "bundledScaleUnit": "1",
            "marketPlaceVersion": "12.1"
          },
          "addressPrefix": "192.168.1.0/16",
          "virtualHub": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1"
          },
          "virtualApplianceSites": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networtkVirtualAppliances/nva/virtualApplianceSites/site1"
            }
          ],
          "inboundSecurityRules": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkVirtualAppliances/nva/InboundSecurityRules/rule1"
            }
          ],
          "provisioningState": "Succeeded",
          "bootStrapConfigurationBlobs": [
            "https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrbootstrapconfig"
          ],
          "cloudInitConfigurationBlobs": [
            "https://csrncvhdstorage1.blob.core.windows.net/csrncvhdstoragecont/csrcloudinitconfig"
          ],
          "virtualApplianceAsn": 10000,
          "virtualApplianceNics": [
            {
              "name": "managementNic",
              "publicIpAddress": "40.30.2.2",
              "privateIpAddress": "192.168.12.1"
            },
            {
              "name": "privateNic-1",
              "privateIpAddress": "192.168.12.2"
            }
          ]
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Virtual Networks service - Creates or updates the specified Network Virtual Appliance.
errorCodes: []
