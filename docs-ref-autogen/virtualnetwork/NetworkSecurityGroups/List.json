{
  "swagger": "2.0",
  "info": {
    "version": "2017-09-01",
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups": {
      "get": {
        "tags": [
          "NetworkSecurityGroups"
        ],
        "operationId": "NetworkSecurityGroups_List",
        "description": "Gets all network security groups in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of NetworkSecurityGroup resources.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroupListResult"
            }
          }
        },
        "x-ms-examples": {
          "List network security groups in resource group": {
            "parameters": {
              "api-version": "2017-09-01",
              "subscriptionId": "subid",
              "resourceGroupName": "rg1"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "name": "nsg1",
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1",
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "location": "westus",
                      "properties": {
                        "provisioningState": "Succeeded",
                        "securityRules": [],
                        "defaultSecurityRules": [
                          {
                            "name": "AllowVnetInBound",
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowVnetInBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Allow inbound traffic from all VMs in VNET",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "access": "Allow",
                              "priority": 65000,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "AllowAzureLoadBalancerInBound",
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowAzureLoadBalancerInBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Allow inbound traffic from azure load balancer",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "AzureLoadBalancer",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 65001,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "DenyAllInBound",
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/DenyAllInBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Deny all inbound traffic",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Deny",
                              "priority": 65500,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "AllowVnetOutBound",
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowVnetOutBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "access": "Allow",
                              "priority": 65000,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "AllowInternetOutBound",
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/AllowInternetOutBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Allow outbound traffic from all VMs to Internet",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "Internet",
                              "access": "Allow",
                              "priority": 65001,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "DenyAllOutBound",
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1/defaultSecurityRules/DenyAllOutBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Deny all outbound traffic",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Deny",
                              "priority": 65500,
                              "direction": "Outbound"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "nsg3",
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3",
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "location": "westus",
                      "properties": {
                        "provisioningState": "Succeeded",
                        "securityRules": [],
                        "defaultSecurityRules": [
                          {
                            "name": "AllowVnetInBound",
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/AllowVnetInBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Allow inbound traffic from all VMs in VNET",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "access": "Allow",
                              "priority": 65000,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "AllowAzureLoadBalancerInBound",
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/AllowAzureLoadBalancerInBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Allow inbound traffic from azure load balancer",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "AzureLoadBalancer",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 65001,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "DenyAllInBound",
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/DenyAllInBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Deny all inbound traffic",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Deny",
                              "priority": 65500,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "AllowVnetOutBound",
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/AllowVnetOutBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "access": "Allow",
                              "priority": 65000,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "AllowInternetOutBound",
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/AllowInternetOutBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Allow outbound traffic from all VMs to Internet",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "Internet",
                              "access": "Allow",
                              "priority": 65001,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "DenyAllOutBound",
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg3/defaultSecurityRules/DenyAllOutBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Deny all outbound traffic",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Deny",
                              "priority": 65500,
                              "direction": "Outbound"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json",
          "text/json"
        ],
        "consumes": [
          "application/json",
          "text/json"
        ],
        "x-internal-toc-name": "List"
      }
    }
  },
  "definitions": {
    "SecurityRulePropertiesFormat": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for this rule. Restricted to 140 chars."
        },
        "protocol": {
          "type": "string",
          "description": "Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.",
          "enum": [
            "Tcp",
            "Udp",
            "*"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleProtocol",
            "modelAsString": false
          }
        },
        "sourcePortRange": {
          "type": "string",
          "description": "The source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "The destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "
        },
        "sourceAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The CIDR or source IP ranges."
        },
        "sourceApplicationSecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationSecurityGroup"
          },
          "description": "The application security group specified as source."
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "The destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
        },
        "destinationAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The destination address prefixes. CIDR or destination IP ranges."
        },
        "destinationApplicationSecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationSecurityGroup"
          },
          "description": "The application security group specified as destination."
        },
        "sourcePortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The source port."
          },
          "description": "The source port ranges."
        },
        "destinationPortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The destination port."
          },
          "description": "The destination port ranges."
        },
        "access": {
          "type": "string",
          "description": "The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleAccess",
            "modelAsString": false
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."
        },
        "direction": {
          "type": "string",
          "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outcoming traffic. Possible values are: 'Inbound' and 'Outbound'.",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleDirection",
            "modelAsString": false
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Security rule resource.",
      "required": [
        "protocol",
        "sourceAddressPrefix",
        "destinationAddressPrefix",
        "access",
        "direction",
        "sourcePortRange",
        "destinationPortRange",
        "priority"
      ]
    },
    "SecurityRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityRulePropertiesFormat",
          "description": "Properties of the security rule"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResourceReadOnly"
        }
      ],
      "description": "Network security rule."
    },
    "SecurityRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "The security rules in a network security group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListSecurityRule API service call. Retrieves all security rules that belongs to a network security group."
    },
    "NetworkSecurityGroupPropertiesFormat": {
      "properties": {
        "securityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "A collection of security rules of the network security group."
        },
        "defaultSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "The default security rules of network security group."
        },
        "networkInterfaces": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "A collection of references to network interfaces."
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "A collection of references to subnets."
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resource GUID property of the network security group resource."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Network Security Group resource."
    },
    "NetworkSecurityGroup": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkSecurityGroupPropertiesFormat",
          "description": "Properties of the network security group"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "NetworkSecurityGroup resource."
    },
    "NetworkSecurityGroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkSecurityGroup"
          },
          "description": "A list of NetworkSecurityGroup resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListNetworkSecurityGroups API service call."
    },
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID.",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Common resource representation.",
      "x-ms-azure-resource": true,
      "required": [
        "location"
      ]
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "description": "Reference to another subresource.",
      "x-ms-azure-resource": true,
      "required": [
        "id"
      ]
    },
    "SubResourceReadOnly": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Resource ID",
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "ApplicationSecurityGroupPropertiesFormat": {
      "properties": {
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Application security group properties."
    },
    "ApplicationSecurityGroup": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationSecurityGroupPropertiesFormat",
          "description": "Properties of the application security group."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "An application security group in a resource group."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  },
  "x-internal-service-name": "Virtual Networks",
  "x-internal-toc-name": "Network Security Groups",
  "x-internal-split-type": "Operation"
}