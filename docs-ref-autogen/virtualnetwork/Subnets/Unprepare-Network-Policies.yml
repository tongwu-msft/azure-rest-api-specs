### YamlMime:RESTOperation
uid: management.azure.com.virtualnetwork.subnets.unpreparenetworkpolicies
name: Unprepare Network Policies
service: Virtual Networks
groupName: Subnets
apiVersion: 2022-01-01
summary: Unprepares a subnet by removing network intent policies.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}/UnprepareNetworkPolicies?api-version=2022-01-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: virtualNetworkName
  in: path
  isRequired: true
  description: The name of the virtual network.
  types:
  - uid: string
- name: subnetName
  in: path
  isRequired: true
  description: The name of the subnet.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Unpreparing subnet by removing network intent policies is successful.
- name: 202 Accepted
  description: Accepted and the operation will complete asynchronously.
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestBody:
- name: default
  parameters:
  - name: serviceName
    in: body
    description: The name of the service for which subnet is being unprepared for.
    types:
    - uid: string
requestHeader: []
definitions:
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: UnprepareNetworkPoliciesRequest
  description: Details of UnprepareNetworkPolicies for Subnet.
  kind: object
  properties:
  - name: serviceName
    description: The name of the service for which subnet is being unprepared for.
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
examples:
- name: Unprepare Network Policies
  request:
    uri: POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1/UnprepareNetworkPolicies?api-version=2022-01-01
    body: >-
      {
        "serviceName": "Microsoft.Sql/managedInstances"
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1/UnprepareNetworkPolicies?api-version=2022-01-01

      {
        "serviceName": "Microsoft.Sql/managedInstances"
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.network.models.UnprepareNetworkPoliciesRequest;

      /** Samples for Subnets UnprepareNetworkPolicies. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/SubnetUnprepareNetworkPolicies.json
           */
          /**
           * Sample code: Unprepare Network Policies.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void unprepareNetworkPolicies(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getSubnets()
                  .unprepareNetworkPolicies(
                      "rg1",
                      "test-vnet",
                      "subnet1",
                      new UnprepareNetworkPoliciesRequest().withServiceName("Microsoft.Sql/managedInstances"),
                      Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.18.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/SubnetUnprepareNetworkPolicies.json
      func ExampleSubnetsClient_BeginUnprepareNetworkPolicies() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewSubnetsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginUnprepareNetworkPolicies(ctx, "rg1", "test-vnet", "subnet1", armnetwork.UnprepareNetworkPoliciesRequest{
      		ServiceName: to.Ptr("Microsoft.Sql/managedInstances"),
      	}, nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	_, err = poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.1.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Unprepares a subnet by removing network intent policies.
       *
       * @summary Unprepares a subnet by removing network intent policies.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-01-01/examples/SubnetUnprepareNetworkPolicies.json
       */
      async function unprepareNetworkPolicies() {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const virtualNetworkName = "test-vnet";
        const subnetName = "subnet1";
        const unprepareNetworkPoliciesRequestParameters = {
          serviceName: "Microsoft.Sql/managedInstances",
        };
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.subnets.beginUnprepareNetworkPoliciesAndWait(
          resourceGroupName,
          virtualNetworkName,
          subnetName,
          unprepareNetworkPoliciesRequestParameters
        );
        console.log(result);
      }

      unprepareNetworkPolicies().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_29.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Learn more about Virtual Networks service - Unprepares a subnet by removing network intent policies.
errorCodes: []
