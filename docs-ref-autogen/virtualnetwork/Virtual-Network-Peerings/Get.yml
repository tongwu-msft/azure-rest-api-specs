### YamlMime:RESTOperation
uid: management.azure.com.virtualnetwork.virtualnetworkpeerings.get
name: Get
service: Virtual Networks
groupName: Virtual Network Peerings
apiVersion: 2021-08-01
summary: Gets the specified virtual network peering.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}?api-version=2021-08-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: virtualNetworkName
  in: path
  isRequired: true
  description: The name of the virtual network.
  types:
  - uid: string
- name: virtualNetworkPeeringName
  in: path
  isRequired: true
  description: The name of the virtual network peering.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Request successful. The operation returns the resulting VirtualNetworkPeering resource.
  types:
  - uid: VirtualNetworkPeering
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: VirtualNetworkPeering
  description: Peerings in a virtual network resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: type
    description: Resource type.
    types:
    - uid: string
  - name: properties.allowVirtualNetworkAccess
    description: Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
    types:
    - uid: boolean
  - name: properties.allowForwardedTraffic
    description: Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
    types:
    - uid: boolean
  - name: properties.allowGatewayTransit
    description: If gateway links can be used in remote virtual networking to link to this virtual network.
    types:
    - uid: boolean
  - name: properties.useRemoteGateways
    description: If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
    types:
    - uid: boolean
  - name: properties.remoteVirtualNetwork
    description: The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
    types:
    - uid: SubResource
  - name: properties.remoteAddressSpace
    description: The reference to the address space peered with the remote virtual network.
    types:
    - uid: AddressSpace
  - name: properties.remoteVirtualNetworkAddressSpace
    description: The reference to the current address space of the remote virtual network.
    types:
    - uid: AddressSpace
  - name: properties.remoteBgpCommunities
    description: The reference to the remote virtual network's Bgp Communities.
    types:
    - uid: VirtualNetworkBgpCommunities
  - name: properties.remoteVirtualNetworkEncryption
    isReadyOnly: true
    description: The reference to the remote virtual network's encryption
    types:
    - uid: VirtualNetworkEncryption
  - name: properties.peeringState
    description: The status of the virtual network peering.
    types:
    - uid: VirtualNetworkPeeringState
  - name: properties.peeringSyncLevel
    description: The peering sync status of the virtual network peering.
    types:
    - uid: VirtualNetworkPeeringLevel
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the virtual network peering resource.
    types:
    - uid: ProvisioningState
  - name: properties.doNotVerifyRemoteGateways
    description: If we need to verify the provisioning state of the remote gateway.
    types:
    - uid: boolean
  - name: properties.resourceGuid
    isReadyOnly: true
    description: The resourceGuid property of the Virtual Network peering resource.
    types:
    - uid: string
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: CloudError
  description: An error response from the service.
  kind: object
  properties:
  - name: error
    description: Cloud error body.
    types:
    - uid: CloudErrorBody
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: AddressSpace
  description: AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
  kind: object
  properties:
  - name: addressPrefixes
    description: A list of address blocks reserved for this virtual network in CIDR notation.
    types:
    - uid: string
      isArray: true
- name: VirtualNetworkBgpCommunities
  description: Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
  kind: object
  properties:
  - name: virtualNetworkCommunity
    description: The BGP community associated with the virtual network.
    types:
    - uid: string
  - name: regionalCommunity
    isReadyOnly: true
    description: The BGP community associated with the region of the virtual network.
    types:
    - uid: string
- name: VirtualNetworkEncryption
  description: Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet.
  kind: object
  properties:
  - name: enabled
    description: Indicates if encryption is enabled on the virtual network.
    types:
    - uid: boolean
  - name: enforcement
    description: If the encrypted VNet allows VM that does not support encryption
    types:
    - uid: VirtualNetworkEncryptionEnforcement
- name: VirtualNetworkPeeringState
  description: The status of the virtual network peering.
  kind: enum
  properties:
  - name: Initiated
    types:
    - uid: string
  - name: Connected
    types:
    - uid: string
  - name: Disconnected
    types:
    - uid: string
- name: VirtualNetworkPeeringLevel
  description: The peering sync status of the virtual network peering.
  kind: enum
  properties:
  - name: FullyInSync
    types:
    - uid: string
  - name: RemoteNotInSync
    types:
    - uid: string
  - name: LocalNotInSync
    types:
    - uid: string
  - name: LocalAndRemoteNotInSync
    types:
    - uid: string
- name: ProvisioningState
  description: The current provisioning state.
  kind: enum
  properties:
  - name: Succeeded
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the service.
  kind: object
  properties:
  - name: code
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: VirtualNetworkEncryptionEnforcement
  description: If the encrypted VNet allows VM that does not support encryption
  kind: enum
  properties:
  - name: DropUnencrypted
    types:
    - uid: string
  - name: AllowUnencrypted
    types:
    - uid: string
examples:
- name: Get peering
  request:
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet1/virtualNetworkPeerings/peer?api-version=2021-08-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet1/virtualNetworkPeerings/peer?api-version=2021-08-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for VirtualNetworkPeerings Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualNetworkPeeringGet.json
           */
          /**
           * Sample code: Get peering.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void getPeering(com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getVirtualNetworkPeerings()
                  .getWithResponse("peerTest", "vnet1", "peer", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armnetwork_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualNetworkPeeringGet.json
      func ExampleVirtualNetworkPeeringsClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armnetwork.NewVirtualNetworkPeeringsClient("subid", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"peerTest",
      		"vnet1",
      		"peer",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fnetwork%2Farmnetwork%2Fv1.0.0/sdk/resourcemanager/network/armnetwork/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets the specified virtual network peering.
       *
       * @summary Gets the specified virtual network peering.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualNetworkPeeringGet.json
       */
      async function getPeering() {
        const subscriptionId = "subid";
        const resourceGroupName = "peerTest";
        const virtualNetworkName = "vnet1";
        const virtualNetworkPeeringName = "peer";
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.virtualNetworkPeerings.get(
          resourceGroupName,
          virtualNetworkName,
          virtualNetworkPeeringName
        );
        console.log(result);
      }

      getPeering().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_28.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet1/virtualNetworkPeerings/peer",
        "name": "peer",
        "properties": {
          "allowVirtualNetworkAccess": true,
          "allowForwardedTraffic": true,
          "allowGatewayTransit": false,
          "useRemoteGateways": false,
          "remoteVirtualNetwork": {
            "id": "/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet2"
          },
          "remoteAddressSpace": {
            "addressPrefixes": [
              "12.0.0.0/8"
            ]
          },
          "remoteVirtualNetworkAddressSpace": {
            "addressPrefixes": [
              "12.0.0.0/8"
            ]
          },
          "remoteBgpCommunities": {
            "virtualNetworkCommunity": "12076:20002",
            "regionalCommunity": "12076:50004"
          },
          "peeringState": "Initiated",
          "peeringSyncLevel": "FullyInSync",
          "provisioningState": "Succeeded"
        }
      }
- name: Get peering with remote virtual network encryption
  request:
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet1/virtualNetworkPeerings/peer?api-version=2021-08-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet1/virtualNetworkPeerings/peer?api-version=2021-08-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for VirtualNetworkPeerings Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualNetworkPeeringGetWithRemoteVirtualNetworkEncryption.json
           */
          /**
           * Sample code: Get peering with remote virtual network encryption.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void getPeeringWithRemoteVirtualNetworkEncryption(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .networks()
                  .manager()
                  .serviceClient()
                  .getVirtualNetworkPeerings()
                  .getWithResponse("peerTest", "vnet1", "peer", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { NetworkManagementClient } = require("@azure/arm-network");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Gets the specified virtual network peering.
       *
       * @summary Gets the specified virtual network peering.
       * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/examples/VirtualNetworkPeeringGetWithRemoteVirtualNetworkEncryption.json
       */
      async function getPeeringWithRemoteVirtualNetworkEncryption() {
        const subscriptionId = "subid";
        const resourceGroupName = "peerTest";
        const virtualNetworkName = "vnet1";
        const virtualNetworkPeeringName = "peer";
        const credential = new DefaultAzureCredential();
        const client = new NetworkManagementClient(credential, subscriptionId);
        const result = await client.virtualNetworkPeerings.get(
          resourceGroupName,
          virtualNetworkName,
          virtualNetworkPeeringName
        );
        console.log(result);
      }

      getPeeringWithRemoteVirtualNetworkEncryption().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-network_28.0.0/sdk/network/arm-network/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet1/virtualNetworkPeerings/peer",
        "name": "peer",
        "properties": {
          "allowVirtualNetworkAccess": true,
          "allowForwardedTraffic": true,
          "allowGatewayTransit": false,
          "useRemoteGateways": false,
          "remoteVirtualNetwork": {
            "id": "/subscriptions/subid/resourceGroups/peerTest/providers/Microsoft.Network/virtualNetworks/vnet2"
          },
          "remoteAddressSpace": {
            "addressPrefixes": [
              "12.0.0.0/8"
            ]
          },
          "remoteBgpCommunities": {
            "virtualNetworkCommunity": "12076:20002",
            "regionalCommunity": "12076:50004"
          },
          "remoteVirtualNetworkEncryption": {
            "enabled": true,
            "enforcement": "AllowUnencrypted"
          },
          "peeringState": "Initiated",
          "provisioningState": "Succeeded"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about Virtual Networks service - Gets the specified virtual network peering.
errorCodes: []
