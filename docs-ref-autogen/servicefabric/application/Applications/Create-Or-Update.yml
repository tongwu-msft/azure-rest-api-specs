### YamlMime:RESTOperation
uid: management.azure.com.servicefabric.application.applications.createorupdate
name: Create Or Update
service: Service Fabric
groupName: Applications
apiVersion: 2019-11-01-preview
summary: "Creates or updates a Service Fabric application resource.  \nCreate or update a Service Fabric application resource with the specified name."
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}?api-version=2019-11-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The customer subscription identifier.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: clusterName
  in: path
  isRequired: true
  description: The name of the cluster resource.
  types:
  - uid: string
- name: applicationName
  in: path
  isRequired: true
  description: The name of the application resource.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be "2019-11-01-preview" for this specification.
  types:
  - uid: string
responses:
- name: 202 Accepted
  description: The request was accepted and the operation will complete asynchronously.
  types:
  - uid: ApplicationResource
- name: Other Status Codes
  description: The detailed error response.
  types:
  - uid: ErrorModel
requestBody:
- name: default
  parameters:
  - name: identity
    in: body
    description: Describes the managed identities for an Azure resource.
    types:
    - uid: ManagedIdentity
  - name: properties.typeName
    in: body
    description: The application type name as defined in the application manifest.
    types:
    - uid: string
  - name: location
    in: body
    description: It will be deprecated in New API, resource location depends on the parent resource.
    types:
    - uid: string
  - name: tags
    in: body
    description: Azure resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.typeVersion
    in: body
    description: The version of the application type as defined in the application manifest.
    types:
    - uid: string
  - name: properties.parameters
    in: body
    description: List of application parameters with overridden values from their default values specified in the application manifest.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.upgradePolicy
    in: body
    description: Describes the policy for a monitored application upgrade.
    types:
    - uid: ApplicationUpgradePolicy
  - name: properties.minimumNodes
    in: body
    description: The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
    types:
    - uid: integer
  - name: properties.maximumNodes
    in: body
    description: The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
    types:
    - uid: integer
  - name: properties.removeApplicationCapacity
    in: body
    description: Remove the current application capacity settings.
    types:
    - uid: boolean
  - name: properties.metrics
    in: body
    description: List of application capacity metric description.
    types:
    - uid: ApplicationMetricDescription
      isArray: true
  - name: properties.managedIdentities
    in: body
    description: List of user assigned identities for the application, each mapped to a friendly name.
    types:
    - uid: ApplicationUserAssignedIdentity
      isArray: true
requestHeader: []
definitions:
- name: ManagedIdentity
  description: Describes the managed identities for an Azure resource.
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal id of the managed identity. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: tenantId
    isReadyOnly: true
    description: The tenant id of the managed identity. This property will only be provided for a system assigned identity.
    types:
    - uid: string
  - name: type
    description: The type of managed identity for the resource.
    types:
    - uid: ManagedIdentityType
  - name: userAssignedIdentities
    description: >-
      The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:

      '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: UserAssignedIdentity
- name: ApplicationUpgradePolicy
  description: Describes the policy for a monitored application upgrade.
  kind: object
  properties:
  - name: upgradeReplicaSetCheckTimeout
    description: The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).
    types:
    - uid: string
  - name: forceRestart
    description: If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
    types:
    - uid: boolean
    defaultValue: false
  - name: rollingUpgradeMonitoringPolicy
    description: The policy used for monitoring the application upgrade
    types:
    - uid: ArmRollingUpgradeMonitoringPolicy
  - name: applicationHealthPolicy
    description: Defines a health policy used to evaluate the health of an application or one of its children entities.
    types:
    - uid: ArmApplicationHealthPolicy
  - name: upgradeMode
    description: The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.
    types:
    - uid: RollingUpgradeMode
    defaultValue: Monitored
  - name: recreateApplication
    description: Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed and it will result in availability loss.
    types:
    - uid: boolean
- name: ApplicationMetricDescription
  description: >
    Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.
  kind: object
  properties:
  - name: name
    description: The name of the metric.
    types:
    - uid: string
  - name: maximumCapacity
    description: >-
      The maximum node capacity for Service Fabric application.

      This is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.

      If set to zero, capacity for this metric is unlimited on each node.

      When creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.

      When updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.
    types:
    - uid: integer
  - name: reservationCapacity
    description: >-
      The node reservation capacity for Service Fabric application.

      This is the amount of load which is reserved on nodes which have instances of this application.

      If MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.

      If set to zero, no capacity is reserved for this metric.

      When setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.
    types:
    - uid: integer
  - name: totalApplicationCapacity
    description: >-
      The total metric capacity for Service Fabric application.

      This is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.

      When creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.
    types:
    - uid: integer
- name: ApplicationUserAssignedIdentity
  kind: object
  properties:
  - name: name
    description: The friendly name of user assigned identity.
    types:
    - uid: string
  - name: principalId
    description: The principal id of user assigned identity.
    types:
    - uid: string
- name: ApplicationResource
  description: The application resource.
  kind: object
  properties:
  - name: identity
    description: Describes the managed identities for an Azure resource.
    types:
    - uid: ManagedIdentity
  - name: properties.provisioningState
    isReadyOnly: true
    description: The current deployment or provisioning state, which only appears in the response
    types:
    - uid: string
  - name: properties.typeName
    description: The application type name as defined in the application manifest.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Azure resource identifier.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Azure resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Azure resource type.
    types:
    - uid: string
  - name: location
    description: It will be deprecated in New API, resource location depends on the parent resource.
    types:
    - uid: string
  - name: tags
    description: Azure resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: etag
    isReadyOnly: true
    description: Azure resource etag.
    types:
    - uid: string
  - name: properties.typeVersion
    description: The version of the application type as defined in the application manifest.
    types:
    - uid: string
  - name: properties.parameters
    description: List of application parameters with overridden values from their default values specified in the application manifest.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.upgradePolicy
    description: Describes the policy for a monitored application upgrade.
    types:
    - uid: ApplicationUpgradePolicy
  - name: properties.minimumNodes
    description: The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
    types:
    - uid: integer
  - name: properties.maximumNodes
    description: The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
    types:
    - uid: integer
    defaultValue: 0
  - name: properties.removeApplicationCapacity
    description: Remove the current application capacity settings.
    types:
    - uid: boolean
  - name: properties.metrics
    description: List of application capacity metric description.
    types:
    - uid: ApplicationMetricDescription
      isArray: true
  - name: properties.managedIdentities
    description: List of user assigned identities for the application, each mapped to a friendly name.
    types:
    - uid: ApplicationUserAssignedIdentity
      isArray: true
- name: ErrorModel
  description: The structure of the error.
  kind: object
  properties:
  - name: error
    description: The error details.
    types:
    - uid: ErrorModelError
- name: ManagedIdentityType
  description: The type of managed identity for the resource.
  kind: enum
  properties:
  - name: SystemAssigned
    description: Indicates that system assigned identity is associated with the resource.
    types:
    - uid: string
  - name: UserAssigned
    description: Indicates that user assigned identity is associated with the resource.
    types:
    - uid: string
  - name: SystemAssigned, UserAssigned
    description: Indicates that both system assigned and user assigned identity are associated with the resource.
    types:
    - uid: string
  - name: None
    description: Indicates that no identity is associated with the resource.
    types:
    - uid: string
- name: UserAssignedIdentity
  kind: object
  properties:
  - name: principalId
    isReadyOnly: true
    description: The principal id of user assigned identity.
    types:
    - uid: string
  - name: clientId
    isReadyOnly: true
    description: The client id of user assigned identity.
    types:
    - uid: string
- name: ArmRollingUpgradeMonitoringPolicy
  description: The policy used for monitoring the application upgrade
  kind: object
  properties:
  - name: failureAction
    description: The activation Mode of the service package
    types:
    - uid: ArmUpgradeFailureAction
  - name: healthCheckWaitDuration
    description: The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
    defaultValue: "0"
  - name: healthCheckStableDuration
    description: The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
    defaultValue: PT0H2M0S
  - name: healthCheckRetryTimeout
    description: The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
    defaultValue: PT0H10M0S
  - name: upgradeTimeout
    description: The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
    defaultValue: P10675199DT02H48M05.4775807S
  - name: upgradeDomainTimeout
    description: The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
    defaultValue: P10675199DT02H48M05.4775807S
- name: ArmApplicationHealthPolicy
  description: >
    Defines a health policy used to evaluate the health of an application or one of its children entities.
  kind: object
  properties:
  - name: considerWarningAsError
    description: Indicates whether warnings are treated with the same severity as errors.
    types:
    - uid: boolean
    defaultValue: false
  - name: maxPercentUnhealthyDeployedApplications
    description: >-
      The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.

      The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.

      This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.

      The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
    types:
    - uid: integer
    defaultValue: 0
  - name: defaultServiceTypeHealthPolicy
    description: The health policy used by default to evaluate the health of a service type.
    types:
    - uid: ArmServiceTypeHealthPolicy
  - name: serviceTypeHealthPolicyMap
    description: The map with service type health policy per service type name. The map is empty by default.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: ArmServiceTypeHealthPolicy
- name: RollingUpgradeMode
  description: The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.
  kind: enum
  properties:
  - name: Invalid
    description: Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
    types:
    - uid: string
  - name: UnmonitoredAuto
    description: The upgrade will proceed automatically without performing any health monitoring. The value is 1
    types:
    - uid: string
  - name: UnmonitoredManual
    description: The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2
    types:
    - uid: string
  - name: Monitored
    description: The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3
    types:
    - uid: string
- name: ErrorModelError
  description: The error details.
  kind: object
  properties:
  - name: code
    description: The error code.
    types:
    - uid: string
  - name: message
    description: The error message.
    types:
    - uid: string
- name: ArmUpgradeFailureAction
  description: The activation Mode of the service package
  kind: enum
  properties:
  - name: Rollback
    description: Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails.
    types:
    - uid: string
  - name: Manual
    description: Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically.
    types:
    - uid: string
- name: ArmServiceTypeHealthPolicy
  description: >
    Represents the health policy used to evaluate the health of services belonging to a service type.
  kind: object
  properties:
  - name: maxPercentUnhealthyServices
    description: The maximum percentage of services allowed to be unhealthy before your application is considered in error.
    types:
    - uid: integer
    defaultValue: 0
  - name: maxPercentUnhealthyPartitionsPerService
    description: The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.
    types:
    - uid: integer
    defaultValue: 0
  - name: maxPercentUnhealthyReplicasPerPartition
    description: The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.
    types:
    - uid: integer
    defaultValue: 0
examples:
- name: Put an application with minimum parameters
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp?api-version=2019-11-01-preview
    body: >-
      {
        "properties": {
          "typeName": "myAppType",
          "typeVersion": "1.0",
          "removeApplicationCapacity": false
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp?api-version=2019-11-01-preview

      {
        "properties": {
          "typeName": "myAppType",
          "typeVersion": "1.0",
          "removeApplicationCapacity": false
        }
      }

      ```

  responses:
  - statusCode: "202"
    headers:
    - name: Retry-After
      value: "10"
    - name: Location
      value: http://10.91.140.224/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/operationResults/5dce62ce-439b-47af-81d8-99ab14708e91?api-version=2019-11-01-preview
    body: >-
      {
        "type": "applications",
        "location": "eastus",
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp",
        "name": "myCluster",
        "tags": {},
        "etag": "W/\"636462502180261857\"",
        "properties": {
          "provisioningState": "Updating",
          "typeName": "myAppType",
          "typeVersion": "1.0",
          "removeApplicationCapacity": false
        }
      }
- name: Put an application with maximum parameters
  request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp?api-version=2019-11-01-preview
    body: >-
      {
        "properties": {
          "typeName": "myAppType",
          "typeVersion": "1.0",
          "parameters": {
            "param1": "value1"
          },
          "upgradePolicy": {
            "upgradeMode": "Monitored",
            "applicationHealthPolicy": {
              "considerWarningAsError": true,
              "maxPercentUnhealthyDeployedApplications": 0,
              "defaultServiceTypeHealthPolicy": {
                "maxPercentUnhealthyServices": 0,
                "maxPercentUnhealthyPartitionsPerService": 0,
                "maxPercentUnhealthyReplicasPerPartition": 0
              }
            },
            "rollingUpgradeMonitoringPolicy": {
              "failureAction": "Rollback",
              "healthCheckRetryTimeout": "00:10:00",
              "healthCheckWaitDuration": "00:02:00",
              "healthCheckStableDuration": "00:05:00",
              "upgradeDomainTimeout": "1.06:00:00",
              "upgradeTimeout": "01:00:00"
            },
            "upgradeReplicaSetCheckTimeout": "01:00:00",
            "forceRestart": false
          },
          "maximumNodes": 3,
          "minimumNodes": 1,
          "removeApplicationCapacity": false,
          "metrics": [
            {
              "name": "metric1",
              "reservationCapacity": 1,
              "maximumCapacity": 3,
              "totalApplicationCapacity": 5
            }
          ]
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp?api-version=2019-11-01-preview

      {
        "properties": {
          "typeName": "myAppType",
          "typeVersion": "1.0",
          "parameters": {
            "param1": "value1"
          },
          "upgradePolicy": {
            "upgradeMode": "Monitored",
            "applicationHealthPolicy": {
              "considerWarningAsError": true,
              "maxPercentUnhealthyDeployedApplications": 0,
              "defaultServiceTypeHealthPolicy": {
                "maxPercentUnhealthyServices": 0,
                "maxPercentUnhealthyPartitionsPerService": 0,
                "maxPercentUnhealthyReplicasPerPartition": 0
              }
            },
            "rollingUpgradeMonitoringPolicy": {
              "failureAction": "Rollback",
              "healthCheckRetryTimeout": "00:10:00",
              "healthCheckWaitDuration": "00:02:00",
              "healthCheckStableDuration": "00:05:00",
              "upgradeDomainTimeout": "1.06:00:00",
              "upgradeTimeout": "01:00:00"
            },
            "upgradeReplicaSetCheckTimeout": "01:00:00",
            "forceRestart": false
          },
          "maximumNodes": 3,
          "minimumNodes": 1,
          "removeApplicationCapacity": false,
          "metrics": [
            {
              "name": "metric1",
              "reservationCapacity": 1,
              "maximumCapacity": 3,
              "totalApplicationCapacity": 5
            }
          ]
        }
      }

      ```

  responses:
  - statusCode: "202"
    headers:
    - name: Retry-After
      value: "10"
    - name: Location
      value: http://10.91.140.224/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ServiceFabric/locations/eastus/operationResults/9c2ce367-47ea-43de-b69e-c5a423da4557?api-version=2019-11-01-preview
    body: >-
      {
        "type": "applications",
        "location": "eastus",
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp",
        "name": "myCluster",
        "tags": {},
        "etag": "W/\"636462502180261859\"",
        "properties": {
          "provisioningState": "Updating",
          "typeName": "myAppType",
          "typeVersion": "1.0",
          "parameters": {
            "param1": "value1"
          },
          "upgradePolicy": {
            "upgradeMode": "Monitored",
            "applicationHealthPolicy": {
              "considerWarningAsError": true,
              "maxPercentUnhealthyDeployedApplications": 0,
              "defaultServiceTypeHealthPolicy": {
                "maxPercentUnhealthyServices": 0,
                "maxPercentUnhealthyPartitionsPerService": 0,
                "maxPercentUnhealthyReplicasPerPartition": 0
              }
            },
            "rollingUpgradeMonitoringPolicy": {
              "failureAction": "Rollback",
              "healthCheckRetryTimeout": "00:10:00",
              "healthCheckWaitDuration": "00:02:00",
              "healthCheckStableDuration": "00:05:00",
              "upgradeDomainTimeout": "1.06:00:00",
              "upgradeTimeout": "01:00:00"
            },
            "upgradeReplicaSetCheckTimeout": "01:00:00",
            "forceRestart": false
          },
          "maximumNodes": 3,
          "minimumNodes": 1,
          "removeApplicationCapacity": false,
          "metrics": [
            {
              "name": "metric1",
              "reservationCapacity": 1,
              "maximumCapacity": 3,
              "totalApplicationCapacity": 5
            }
          ]
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: >
    Creates or updates a Service Fabric application resource.

    Create or update a Service Fabric application resource with the specified name.
errorCodes: []
