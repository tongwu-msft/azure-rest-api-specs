### YamlMime:RESTOperation
uid: language.analyzeconversation.submitjob
name: Submit Job
service: Cognitive Services - Language
groupName: Analyze Conversation
apiVersion: 2022-10-01-preview
summary: "Submit analysis job for conversations  \nSubmit a collection of conversations for analysis. Specify one or more unique tasks to be executed."
consumes:
- application/json
produces:
- application/json
paths:
- content: POST {Endpoint}/language/analyze-conversations/jobs?api-version=2022-10-01-preview
uriParameters:
- name: Endpoint
  in: path
  isRequired: true
  skipUrlEncoding: true
  description: Supported Cognitive Services endpoint (e.g., https://<resource-name>.api.cognitiveservices.azure.com).
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 202 Accepted
  headers:
  - name: Operation-Location
    value: string
  description: A successful call results with an Operation-Location header used to check the status of the analysis job.
- name: Other Status Codes
  description: Error response.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: displayName
    in: body
    description: Optional display name for the analysis job.
    types:
    - uid: string
  - name: analysisInput
    in: body
    isRequired: true
    description: ''
    types:
    - uid: MultiLanguageConversationAnalysisInput
  - name: tasks
    in: body
    isRequired: true
    description: The set of tasks to execute on the input conversation.
    types:
    - uid: AnalyzeConversationPIITask
      isArray: true
    - uid: AnalyzeConversationSummarizationTask
      isArray: true
    - uid: AnalyzeConversationalSentimentTask
      isArray: true
    typesTitle: AnalyzeConversationLROTask[]
requestHeader: []
definitions:
- name: MultiLanguageConversationAnalysisInput
  kind: object
  properties:
  - name: conversations
    description: A complete ordered set of utterances (spoken or written), by one or more speakers to be used for analysis.
    types:
    - uid: TextConversation
      isArray: true
    - uid: TranscriptConversation
      isArray: true
    typesTitle: Conversation[]
- name: ErrorResponse
  description: Error response.
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: Error
- name: AnalyzeConversationJobsInput
  kind: object
  properties:
  - name: displayName
    description: Optional display name for the analysis job.
    types:
    - uid: string
  - name: analysisInput
    description: ''
    types:
    - uid: MultiLanguageConversationAnalysisInput
  - name: tasks
    description: The set of tasks to execute on the input conversation.
    types:
    - uid: AnalyzeConversationPIITask
      isArray: true
    - uid: AnalyzeConversationSummarizationTask
      isArray: true
    - uid: AnalyzeConversationalSentimentTask
      isArray: true
    typesTitle: AnalyzeConversationLROTask[]
- name: AnalyzeConversationPIITask
  description: Task definition for a PII redaction in conversations.
  kind: object
  properties:
  - name: parameters
    description: Supported parameters for a Conversational PII detection and redaction task.
    types:
    - uid: ConversationPIITaskParameters
  - name: kind
    description: Enumeration of supported analysis tasks on a collection of conversation.
    types:
    - uid: ConversationalPIITask
    typesTitle: string
  - name: taskName
    description: ''
    types:
    - uid: string
- name: AnalyzeConversationSummarizationTask
  description: Task definition for conversational summarization.
  kind: object
  properties:
  - name: parameters
    description: Supported parameters for an conversational summarization task.
    types:
    - uid: ConversationSummarizationTaskParameters
  - name: kind
    description: Enumeration of supported analysis tasks on a collection of conversation.
    types:
    - uid: ConversationalSummarizationTask
    typesTitle: string
  - name: taskName
    description: ''
    types:
    - uid: string
- name: AnalyzeConversationalSentimentTask
  description: Task definition for a sentiment analysis in conversations.
  kind: object
  properties:
  - name: parameters
    description: Supported parameters for a Conversational sentiment analysis task.
    types:
    - uid: ConversationalSentimentTaskParameters
  - name: kind
    description: Enumeration of supported analysis tasks on a collection of conversation.
    types:
    - uid: ConversationalSentimentTask
    typesTitle: string
  - name: taskName
    description: ''
    types:
    - uid: string
- name: Error
  description: The error object.
  kind: object
  properties:
  - name: code
    description: One of a server-defined set of error codes.
    types:
    - uid: ErrorCode
  - name: message
    description: A human-readable representation of the error.
    types:
    - uid: string
  - name: target
    description: The target of the error.
    types:
    - uid: string
  - name: details
    description: An array of details about specific errors that led to this reported error.
    types:
    - uid: Error
      isArray: true
  - name: innererror
    description: An object containing more specific information than the current object about the error.
    types:
    - uid: InnerErrorModel
- name: TextConversation
  kind: object
  properties:
  - name: conversationItems
    description: Ordered list of text conversation items in the conversation.
    types:
    - uid: TextConversationItem
      isArray: true
  - name: id
    description: Unique identifier for the conversation.
    types:
    - uid: string
  - name: language
    description: The language of the conversation item in BCP-47 format.
    types:
    - uid: string
  - name: modality
    description: Enumeration of supported conversational modalities.
    types:
    - uid: text
    typesTitle: string
  - name: domain
    description: Enumeration of supported conversational domains.
    types:
    - uid: ConversationDomain
- name: TranscriptConversation
  kind: object
  properties:
  - name: conversationItems
    description: Ordered list of transcript conversation items in the conversation.
    types:
    - uid: TranscriptConversationItem
      isArray: true
  - name: id
    description: Unique identifier for the conversation.
    types:
    - uid: string
  - name: language
    description: The language of the conversation item in BCP-47 format.
    types:
    - uid: string
  - name: modality
    description: Enumeration of supported conversational modalities.
    types:
    - uid: transcript
    typesTitle: string
  - name: domain
    description: Enumeration of supported conversational domains.
    types:
    - uid: ConversationDomain
- name: ConversationPIITaskParameters
  description: Supported parameters for a Conversational PII detection and redaction task.
  kind: object
  properties:
  - name: piiCategories
    description: Describes the PII categories to return for detection. If not provided, 'default' categories will be returned which will vary with the language.
    types:
    - uid: string
      isArray: true
  - name: includeAudioRedaction
    description: Flag to indicate if audio redaction is requested. By default audio redaction will not be performed.
    types:
    - uid: boolean
    defaultValue: false
  - name: redactionSource
    description: For transcript conversations, this parameter provides information regarding which content type (ITN, Text, Lexical, Masked ITN) should be used for entity detection. The details of the entities detected - like the offset, length and the text itself - will correspond to the text type selected here.
    types:
    - uid: TranscriptContentType
  - name: modelVersion
    description: ''
    types:
    - uid: string
    defaultValue: latest
  - name: loggingOptOut
    description: ''
    types:
    - uid: boolean
    defaultValue: false
- name: AnalyzeConversationLROTaskKind
  description: Enumeration of supported analysis tasks on a collection of conversation.
  kind: enum
  properties:
  - name: ConversationalPIITask
    types:
    - uid: string
  - name: ConversationalSummarizationTask
    types:
    - uid: string
  - name: ConversationalSentimentTask
    types:
    - uid: string
- name: ConversationSummarizationTaskParameters
  description: Supported parameters for an conversational summarization task.
  kind: object
  properties:
  - name: summaryAspects
    description: ''
    types:
    - uid: string
      isArray: true
  - name: modelVersion
    description: ''
    types:
    - uid: string
    defaultValue: latest
  - name: loggingOptOut
    description: ''
    types:
    - uid: boolean
    defaultValue: false
  - name: sentenceCount
    description: It controls the approximate number of sentences in the output summaries.
    types:
    - uid: integer
  - name: stringIndexType
    description: Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.
    types:
    - uid: StringIndexType
    defaultValue: TextElements_v8
  - name: phraseControls
    description: Control the phrases to be used in the summary.
    types:
    - uid: PhraseControl
      isArray: true
- name: ConversationalSentimentTaskParameters
  description: Supported parameters for a Conversational sentiment analysis task.
  kind: object
  properties:
  - name: predictionSource
    description: For transcript conversations, this parameter provides information regarding which content type should be used for sentiment analysis. The details of the sentiment analysis - like the offset, length and the text itself - will correspond to the text type selected here.
    types:
    - uid: TranscriptContentType
  - name: modelVersion
    description: ''
    types:
    - uid: string
    defaultValue: latest
  - name: loggingOptOut
    description: ''
    types:
    - uid: boolean
    defaultValue: false
- name: ErrorCode
  description: Human-readable error code.
  kind: enum
  properties:
  - name: InvalidRequest
    types:
    - uid: string
  - name: InvalidArgument
    types:
    - uid: string
  - name: Unauthorized
    types:
    - uid: string
  - name: Forbidden
    types:
    - uid: string
  - name: NotFound
    types:
    - uid: string
  - name: ProjectNotFound
    types:
    - uid: string
  - name: OperationNotFound
    types:
    - uid: string
  - name: AzureCognitiveSearchNotFound
    types:
    - uid: string
  - name: AzureCognitiveSearchIndexNotFound
    types:
    - uid: string
  - name: TooManyRequests
    types:
    - uid: string
  - name: AzureCognitiveSearchThrottling
    types:
    - uid: string
  - name: AzureCognitiveSearchIndexLimitReached
    types:
    - uid: string
  - name: InternalServerError
    types:
    - uid: string
  - name: ServiceUnavailable
    types:
    - uid: string
  - name: Timeout
    types:
    - uid: string
  - name: QuotaExceeded
    types:
    - uid: string
  - name: Conflict
    types:
    - uid: string
  - name: Warning
    types:
    - uid: string
- name: InnerErrorModel
  description: An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.
  kind: object
  properties:
  - name: code
    description: One of a server-defined set of error codes.
    types:
    - uid: InnerErrorCode
  - name: message
    description: Error message.
    types:
    - uid: string
  - name: details
    description: Error details.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: target
    description: Error target.
    types:
    - uid: string
  - name: innererror
    description: An object containing more specific information than the current object about the error.
    types:
    - uid: InnerErrorModel
- name: TextConversationItem
  description: The text modality of an input conversation.
  kind: object
  properties:
  - name: text
    description: The text input
    types:
    - uid: string
  - name: id
    description: The ID of a conversation item.
    types:
    - uid: string
  - name: participantId
    description: The participant ID of a conversation item.
    types:
    - uid: string
  - name: language
    description: The override language of a conversation item in BCP 47 language representation.
    types:
    - uid: string
  - name: modality
    description: Enumeration of supported conversational modalities.
    types:
    - uid: InputModality
  - name: role
    description: The role of the participant.
    types:
    - uid: role
- name: InputModality
  description: Enumeration of supported conversational modalities.
  kind: enum
  properties:
  - name: transcript
    types:
    - uid: string
  - name: text
    types:
    - uid: string
- name: ConversationDomain
  description: Enumeration of supported conversational domains.
  kind: enum
  properties:
  - name: finance
    types:
    - uid: string
  - name: healthcare
    types:
    - uid: string
  - name: generic
    types:
    - uid: string
- name: TranscriptConversationItem
  description: Additional properties for supporting transcript conversation.
  kind: object
  properties:
  - name: itn
    description: Inverse Text Normalization representation of input. The inverse-text-normalized form is the recognized text from Microsoft's Speech to Text API, with phone numbers, numbers, abbreviations, and other transformations applied.
    types:
    - uid: string
  - name: maskedItn
    description: The Inverse Text Normalized format with profanity masking applied.
    types:
    - uid: string
  - name: text
    description: The display form of the recognized text from speech to text API, with punctuation and capitalization added.
    types:
    - uid: string
  - name: lexical
    description: The lexical form of the recognized text from speech to text API with the actual words recognized.
    types:
    - uid: string
  - name: wordLevelTimings
    description: The list of word level audio timing information
    types:
    - uid: WordLevelTiming
      isArray: true
  - name: conversationItemLevelTiming
    description: Conversation item level audio timing. This still can help on AI quality if word level audio timings are not available.
    types:
    - uid: ConversationItemLevelTiming
  - name: id
    description: The ID of a conversation item.
    types:
    - uid: string
  - name: participantId
    description: The participant ID of a conversation item.
    types:
    - uid: string
  - name: language
    description: The override language of a conversation item in BCP 47 language representation.
    types:
    - uid: string
  - name: modality
    description: Enumeration of supported conversational modalities.
    types:
    - uid: InputModality
  - name: role
    description: The role of the participant.
    types:
    - uid: role
- name: TranscriptContentType
  description: Enumeration of supported transcript content types.
  kind: enum
  properties:
  - name: lexical
    types:
    - uid: string
  - name: itn
    types:
    - uid: string
  - name: maskedItn
    types:
    - uid: string
  - name: text
    types:
    - uid: string
- name: StringIndexType
  description: Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.
  kind: enum
  properties:
  - name: TextElements_v8
    description: Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo.
    types:
    - uid: string
  - name: UnicodeCodePoint
    description: Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python.
    types:
    - uid: string
  - name: Utf16CodeUnit
    description: Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript.
    types:
    - uid: string
- name: PhraseControl
  description: Control the phrases to be used in the summary.
  kind: object
  properties:
  - name: targetPhrase
    description: The target phrase to control.
    types:
    - uid: string
  - name: strategy
    description: The strategy to use in phrase control.
    types:
    - uid: PhraseControlStrategy
- name: InnerErrorCode
  description: Human-readable error code.
  kind: enum
  properties:
  - name: InvalidRequest
    types:
    - uid: string
  - name: InvalidParameterValue
    types:
    - uid: string
  - name: KnowledgeBaseNotFound
    types:
    - uid: string
  - name: AzureCognitiveSearchNotFound
    types:
    - uid: string
  - name: AzureCognitiveSearchThrottling
    types:
    - uid: string
  - name: ExtractionFailure
    types:
    - uid: string
  - name: InvalidRequestBodyFormat
    types:
    - uid: string
  - name: EmptyRequest
    types:
    - uid: string
  - name: MissingInputDocuments
    types:
    - uid: string
  - name: InvalidDocument
    types:
    - uid: string
  - name: ModelVersionIncorrect
    types:
    - uid: string
  - name: InvalidDocumentBatch
    types:
    - uid: string
  - name: UnsupportedLanguageCode
    types:
    - uid: string
  - name: InvalidCountryHint
    types:
    - uid: string
- name: role
  description: The role of the participant.
  kind: enum
  properties:
  - name: agent
    types:
    - uid: string
  - name: customer
    types:
    - uid: string
  - name: generic
    types:
    - uid: string
- name: WordLevelTiming
  description: Word level timing information generated by the speech to text API. The words in this object should have 1:1 correspondence with the 'lexical' input to allow for audio redaction.
  kind: object
  properties:
  - name: word
    description: The word recognized.
    types:
    - uid: string
  - name: offset
    description: Offset from start of speech audio, in ticks. 1 tick = 100 ns.
    types:
    - uid: integer
  - name: duration
    description: Duration of word articulation, in ticks. 1 tick = 100 ns.
    types:
    - uid: integer
- name: ConversationItemLevelTiming
  description: The conversation item level audio timing.
  kind: object
  properties:
  - name: offset
    description: Offset from start of speech audio, in ticks. 1 tick = 100 ns.
    types:
    - uid: integer
  - name: duration
    description: Duration of word articulation, in ticks. 1 tick = 100 ns.
    types:
    - uid: integer
- name: PhraseControlStrategy
  description: The strategy to use in phrase control.
  kind: enum
  properties:
  - name: encourage
    description: The model will have higher probability to select the target phrase in the summary if there are multiple alternates.
    types:
    - uid: string
  - name: discourage
    description: The model will have lower probability to select the target phrase in the summary if there are multiple alternates.
    types:
    - uid: string
  - name: disallow
    description: The model will avoid to select the target phrase in the summary.
    types:
    - uid: string
examples:
- name: Successful Conversational PII Analysis Job Request
  request:
    uri: POST {Endpoint}/language/analyze-conversations/jobs?api-version=2022-10-01-preview
    body: >-
      {
        "displayName": "Redacting PII data from transcribed audio",
        "analysisInput": {
          "conversations": [
            {
              "id": "1",
              "language": "en",
              "modality": "transcript",
              "domain": "generic",
              "conversationItems": [
                {
                  "participantId": "1",
                  "id": "1",
                  "text": "Good morning John Doe.",
                  "itn": "good morning john doe",
                  "maskedItn": "good morning john doe",
                  "lexical": "good morning john doe",
                  "wordLevelTimings": [
                    {
                      "word": "good",
                      "offset": 390000,
                      "duration": 2700000
                    },
                    {
                      "word": "morning",
                      "offset": 4500000,
                      "duration": 920000
                    },
                    {
                      "word": "john",
                      "offset": 590000,
                      "duration": 2700000
                    },
                    {
                      "word": "doe",
                      "offset": 6300000,
                      "duration": 920000
                    }
                  ]
                }
              ]
            }
          ]
        },
        "tasks": [
          {
            "taskName": "Conversation PII",
            "kind": "ConversationalPIITask",
            "parameters": {
              "modelVersion": "latest",
              "piiCategories": [
                "All"
              ],
              "redactionSource": "lexical",
              "includeAudioRedaction": true
            }
          }
        ]
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST {Endpoint}/language/analyze-conversations/jobs?api-version=2022-10-01-preview

      {
        "displayName": "Redacting PII data from transcribed audio",
        "analysisInput": {
          "conversations": [
            {
              "id": "1",
              "language": "en",
              "modality": "transcript",
              "domain": "generic",
              "conversationItems": [
                {
                  "participantId": "1",
                  "id": "1",
                  "text": "Good morning John Doe.",
                  "itn": "good morning john doe",
                  "maskedItn": "good morning john doe",
                  "lexical": "good morning john doe",
                  "wordLevelTimings": [
                    {
                      "word": "good",
                      "offset": 390000,
                      "duration": 2700000
                    },
                    {
                      "word": "morning",
                      "offset": 4500000,
                      "duration": 920000
                    },
                    {
                      "word": "john",
                      "offset": 590000,
                      "duration": 2700000
                    },
                    {
                      "word": "doe",
                      "offset": 6300000,
                      "duration": 920000
                    }
                  ]
                }
              ]
            }
          ]
        },
        "tasks": [
          {
            "taskName": "Conversation PII",
            "kind": "ConversationalPIITask",
            "parameters": {
              "modelVersion": "latest",
              "piiCategories": [
                "All"
              ],
              "redactionSource": "lexical",
              "includeAudioRedaction": true
            }
          }
        ]
      }

      ```

  responses:
  - statusCode: "202"
    headers:
    - name: Operation-Location
      value: '{Endpoint}/language/analyze-conversation/jobs/{jobId}?api-version={api-version}'
- name: Successful Conversation Summarization Analysis Job Request
  request:
    uri: POST {Endpoint}/language/analyze-conversations/jobs?api-version=2022-10-01-preview
    body: >-
      {
        "displayName": "Analyze conversations from Contoso meeting",
        "analysisInput": {
          "conversations": [
            {
              "id": "20220101meeting",
              "language": "en",
              "modality": "text",
              "domain": "generic",
              "conversationItems": [
                {
                  "participantId": "user",
                  "role": "customer",
                  "id": "1",
                  "text": "Hi!"
                },
                {
                  "participantId": "agent",
                  "role": "agent",
                  "id": "2",
                  "text": "Hello, how can I help you?"
                },
                {
                  "participantId": "user",
                  "role": "customer",
                  "id": "3",
                  "text": "I am having trouble issuing a return of a game on my xbox: call of duty"
                }
              ]
            }
          ]
        },
        "tasks": [
          {
            "taskName": "analyze 1",
            "kind": "ConversationalSummarizationTask",
            "parameters": {
              "modelVersion": "latest",
              "summaryAspects": [
                "issue",
                "resolution"
              ]
            }
          }
        ]
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST {Endpoint}/language/analyze-conversations/jobs?api-version=2022-10-01-preview

      {
        "displayName": "Analyze conversations from Contoso meeting",
        "analysisInput": {
          "conversations": [
            {
              "id": "20220101meeting",
              "language": "en",
              "modality": "text",
              "domain": "generic",
              "conversationItems": [
                {
                  "participantId": "user",
                  "role": "customer",
                  "id": "1",
                  "text": "Hi!"
                },
                {
                  "participantId": "agent",
                  "role": "agent",
                  "id": "2",
                  "text": "Hello, how can I help you?"
                },
                {
                  "participantId": "user",
                  "role": "customer",
                  "id": "3",
                  "text": "I am having trouble issuing a return of a game on my xbox: call of duty"
                }
              ]
            }
          ]
        },
        "tasks": [
          {
            "taskName": "analyze 1",
            "kind": "ConversationalSummarizationTask",
            "parameters": {
              "modelVersion": "latest",
              "summaryAspects": [
                "issue",
                "resolution"
              ]
            }
          }
        ]
      }

      ```

  responses:
  - statusCode: "202"
    headers:
    - name: Operation-Location
      value: '{Endpoint}/language/analyze-conversation/jobs/{jobId}?api-version={api-version}'
- name: Successful Conversation Summarization Task Submit
  request:
    uri: POST {Endpoint}/language/analyze-conversations/jobs?api-version=2022-10-01-preview
    body: >-
      {
        "displayName": "Conversation Summarization Example",
        "analysisInput": {
          "conversations": [
            {
              "id": "1",
              "language": "en",
              "modality": "transcript",
              "conversationItems": [
                {
                  "participantId": "speaker 1",
                  "id": "1",
                  "text": "Let's get started.",
                  "lexical": "",
                  "itn": "",
                  "maskedItn": "",
                  "conversationItemLevelTiming": {
                    "offset": 0,
                    "duration": 20000000
                  }
                },
                {
                  "participantId": "speaker 2",
                  "id": "2",
                  "text": "OK. How many remaining bugs do we have now?",
                  "lexical": "",
                  "itn": "",
                  "maskedItn": "",
                  "conversationItemLevelTiming": {
                    "offset": 20000000,
                    "duration": 50000000
                  }
                },
                {
                  "participantId": "speaker 3",
                  "id": "3",
                  "text": "Only 3.",
                  "lexical": "",
                  "itn": "",
                  "maskedItn": "",
                  "conversationItemLevelTiming": {
                    "offset": 50000000,
                    "duration": 60000000
                  }
                }
              ]
            }
          ]
        },
        "tasks": [
          {
            "taskName": "Conversation Summarization Task 1",
            "kind": "ConversationalSummarizationTask",
            "parameters": {
              "summaryAspects": [
                "chapterTitle",
                "narrative"
              ]
            }
          }
        ]
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST {Endpoint}/language/analyze-conversations/jobs?api-version=2022-10-01-preview

      {
        "displayName": "Conversation Summarization Example",
        "analysisInput": {
          "conversations": [
            {
              "id": "1",
              "language": "en",
              "modality": "transcript",
              "conversationItems": [
                {
                  "participantId": "speaker 1",
                  "id": "1",
                  "text": "Let's get started.",
                  "lexical": "",
                  "itn": "",
                  "maskedItn": "",
                  "conversationItemLevelTiming": {
                    "offset": 0,
                    "duration": 20000000
                  }
                },
                {
                  "participantId": "speaker 2",
                  "id": "2",
                  "text": "OK. How many remaining bugs do we have now?",
                  "lexical": "",
                  "itn": "",
                  "maskedItn": "",
                  "conversationItemLevelTiming": {
                    "offset": 20000000,
                    "duration": 50000000
                  }
                },
                {
                  "participantId": "speaker 3",
                  "id": "3",
                  "text": "Only 3.",
                  "lexical": "",
                  "itn": "",
                  "maskedItn": "",
                  "conversationItemLevelTiming": {
                    "offset": 50000000,
                    "duration": 60000000
                  }
                }
              ]
            }
          ]
        },
        "tasks": [
          {
            "taskName": "Conversation Summarization Task 1",
            "kind": "ConversationalSummarizationTask",
            "parameters": {
              "summaryAspects": [
                "chapterTitle",
                "narrative"
              ]
            }
          }
        ]
      }

      ```

  responses:
  - statusCode: "202"
    headers:
    - name: Operation-Location
      value: '{Endpoint}/language/analyze-conversation/jobs/{jobId}?api-version={api-version}'
- name: Successful Conversation Sentiment Analysis Job Request
  request:
    uri: POST {Endpoint}/language/analyze-conversations/jobs?api-version=2022-10-01-preview
    body: >-
      {
        "displayName": "Sentiment Analysis from a call center conversation",
        "analysisInput": {
          "conversations": [
            {
              "id": "1",
              "language": "en",
              "modality": "transcript",
              "conversationItems": [
                {
                  "participantId": "1",
                  "id": "1",
                  "text": "I like the service. I do not like the food",
                  "lexical": "i like the service i do not like the food",
                  "itn": "",
                  "maskedItn": ""
                }
              ]
            }
          ]
        },
        "tasks": [
          {
            "taskName": "Conversation Sentiment Analysis",
            "kind": "ConversationalSentimentTask",
            "parameters": {
              "modelVersion": "latest",
              "predictionSource": "text"
            }
          }
        ]
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST {Endpoint}/language/analyze-conversations/jobs?api-version=2022-10-01-preview

      {
        "displayName": "Sentiment Analysis from a call center conversation",
        "analysisInput": {
          "conversations": [
            {
              "id": "1",
              "language": "en",
              "modality": "transcript",
              "conversationItems": [
                {
                  "participantId": "1",
                  "id": "1",
                  "text": "I like the service. I do not like the food",
                  "lexical": "i like the service i do not like the food",
                  "itn": "",
                  "maskedItn": ""
                }
              ]
            }
          ]
        },
        "tasks": [
          {
            "taskName": "Conversation Sentiment Analysis",
            "kind": "ConversationalSentimentTask",
            "parameters": {
              "modelVersion": "latest",
              "predictionSource": "text"
            }
          }
        ]
      }

      ```

  responses:
  - statusCode: "202"
    headers:
    - name: Operation-Location
      value: '{Endpoint}/language/analyze-conversation/jobs/{jobId}?api-version={api-version}'
security:
- name: AADToken
  type: oauth2
  description: "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/azure/active-directory/develop/v1-overview) Flows. When paired with [Azure role-based access](https://docs.microsoft.com/azure/role-based-access-control/overview) control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to. This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently, Azure Active Directory [v1.0 or v2.0](https://docs.microsoft.com/azure/active-directory/develop/azure-ad-endpoint-comparison) supports Work, School, and Guests but does not support Personal accounts."
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: https://cognitiveservices.azure.com/.default
    description: https://cognitiveservices.azure.com/.default
- name: Ocp-Apim-Subscription-Key
  type: apiKey
  description: A subscription key for a Language service resource.
  in: header
metadata:
  description: >
    Submit analysis job for conversations

    Submit a collection of conversations for analysis. Specify one or more unique tasks to be executed.
errorCodes: []
