### YamlMime:RESTOperation
uid: management.azure.com.logz.singlesignon.get
name: Get
service: Logz
groupName: Single Sign On
apiVersion: 2020-10-01
summary: Gets the Logz single sign-on resource for the given Monitor.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/singleSignOnConfigurations/{configurationName}?api-version=2020-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: monitorName
  in: path
  isRequired: true
  description: Monitor resource name
  types:
  - uid: string
- name: configurationName
  in: path
  isRequired: true
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Success
  types:
  - uid: LogzSingleSignOnResource
- name: Other Status Codes
  description: Default error response.
  types:
  - uid: ErrorResponse
requestHeader: []
definitions:
- name: LogzSingleSignOnResource
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: ARM id of the resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Name of the configuration.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
  - name: systemData
    isReadyOnly: true
    description: Metadata pertaining to creation and last modification of the resource.
    types:
    - uid: systemData
  - name: properties
    description: ''
    types:
    - uid: LogzSingleSignOnProperties
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: systemData
  description: Metadata pertaining to creation and last modification of the resource.
  kind: object
  properties:
  - name: createdBy
    description: The identity that created the resource.
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource.
    types:
    - uid: createdByType
  - name: createdAt
    description: The timestamp of resource creation (UTC).
    types:
    - uid: string
  - name: lastModifiedBy
    description: The identity that last modified the resource.
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource.
    types:
    - uid: createdByType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: LogzSingleSignOnProperties
  kind: object
  properties:
  - name: singleSignOnState
    description: Various states of the SSO resource
    types:
    - uid: SingleSignOnStates
  - name: enterpriseAppId
    description: The Id of the Enterprise App used for Single sign-on.
    types:
    - uid: string
  - name: singleSignOnUrl
    description: The login URL specific to this Logz Organization.
    types:
    - uid: string
  - name: provisioningState
    isReadyOnly: true
    description: Flag specifying if the resource provisioning state as tracked by ARM.
    types:
    - uid: ProvisioningState
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: createdByType
  description: The type of identity that created the resource.
  kind: enum
  properties:
  - name: User
    types:
    - uid: string
  - name: Application
    types:
    - uid: string
  - name: ManagedIdentity
    types:
    - uid: string
  - name: Key
    types:
    - uid: string
- name: SingleSignOnStates
  description: Various states of the SSO resource
  kind: enum
  properties:
  - name: Initial
    types:
    - uid: string
  - name: Enable
    types:
    - uid: string
  - name: Disable
    types:
    - uid: string
  - name: Existing
    types:
    - uid: string
- name: ProvisioningState
  description: Flag specifying if the resource provisioning state as tracked by ARM.
  kind: enum
  properties:
  - name: Accepted
    types:
    - uid: string
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
  - name: Deleted
    types:
    - uid: string
  - name: NotSpecified
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: SingleSignOnConfigurations_Get
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Logz/monitors/myMonitor/singleSignOnConfigurations/default?api-version=2020-10-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      GET https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Logz/monitors/myMonitor/singleSignOnConfigurations/default?api-version=2020-10-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for SingleSignOn Get. */
      public final class Main {
          /*
           * x-ms-original-file: specification/logz/resource-manager/Microsoft.Logz/stable/2020-10-01/examples/SingleSignOnConfigurations_Get.json
           */
          /**
           * Sample code: SingleSignOnConfigurations_Get.
           *
           * @param manager Entry point to LogzManager.
           */
          public static void singleSignOnConfigurationsGet(com.azure.resourcemanager.logz.LogzManager manager) {
              manager.singleSignOns().getWithResponse("myResourceGroup", "myMonitor", "default", Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-logz_1.0.0-beta.1/sdk/logz/azure-resourcemanager-logz/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armlogz_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/logz/armlogz"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/logz/resource-manager/Microsoft.Logz/stable/2020-10-01/examples/SingleSignOnConfigurations_Get.json
      func ExampleSingleSignOnClient_Get() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armlogz.NewSingleSignOnClient("00000000-0000-0000-0000-000000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	res, err := client.Get(ctx,
      		"myResourceGroup",
      		"myMonitor",
      		"default",
      		nil)
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Flogz%2Farmlogz%2Fv1.0.0/sdk/resourcemanager/logz/armlogz/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "default",
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Logz/monitors/myMonitor/singleSignOnConfigurations/default",
        "properties": {
          "provisioningState": "Succeeded",
          "singleSignOnState": "Enable",
          "enterpriseAppId": "00000000-0000-0000-0000-000000000000",
          "singleSignOnUrl": "https://www.loz.io/IAmSomeHash"
        }
      }
security: []
metadata:
  description: Learn more about Logz service - Gets the Logz single sign-on resource for the given Monitor.
errorCodes: []
