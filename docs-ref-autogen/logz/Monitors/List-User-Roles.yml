### YamlMime:RESTOperation
uid: management.azure.com.logz.monitors.listuserroles
name: List User Roles
service: Logz
groupName: Monitors
apiVersion: 2020-10-01
summary: List the user's roles configured on Logz.io side for the account corresponding to the monitor resource.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/listUserRoles?api-version=2020-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
- name: monitorName
  in: path
  isRequired: true
  description: Monitor resource name
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Success
  types:
  - uid: UserRoleListResponse
- name: Other Status Codes
  description: Default error response.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: emailAddress
    in: body
    description: Email of the user used by Logz for contacting them if needed
    types:
    - uid: string
requestHeader: []
definitions:
- name: UserRoleListResponse
  description: Response for list of user's role for Logz.io account.
  kind: object
  properties:
  - name: value
    description: List of user roles for Logz.io account.
    types:
    - uid: UserRoleResponse
      isArray: true
  - name: nextLink
    description: Link to the next set of results, if any.
    types:
    - uid: string
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: UserRoleRequest
  description: Request for checking user's role for Logz.io account.
  kind: object
  properties:
  - name: emailAddress
    description: Email of the user used by Logz for contacting them if needed
    types:
    - uid: string
- name: UserRoleResponse
  description: Response for checking user's role for Logz.io account.
  kind: object
  properties:
  - name: role
    description: User roles on configured in Logz.io account.
    types:
    - uid: UserRole
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: UserRole
  description: User roles on configured in Logz.io account.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: User
    types:
    - uid: string
  - name: Admin
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: MainAccount_VMHosts_Update
  request:
    uri: POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Logz/monitors/myMonitor/listUserRoles?api-version=2020-10-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Logz/monitors/myMonitor/listUserRoles?api-version=2020-10-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for Monitors ListUserRoles. */
      public final class Main {
          /*
           * x-ms-original-file: specification/logz/resource-manager/Microsoft.Logz/stable/2020-10-01/examples/MainAccount_listUserRoles.json
           */
          /**
           * Sample code: MainAccount_VMHosts_Update.
           *
           * @param manager Entry point to LogzManager.
           */
          public static void mainAccountVMHostsUpdate(com.azure.resourcemanager.logz.LogzManager manager) {
              manager.monitors().listUserRoles("myResourceGroup", "myMonitor", null, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-logz_1.0.0-beta.1/sdk/logz/azure-resourcemanager-logz/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armlogz_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/logz/armlogz"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/logz/resource-manager/Microsoft.Logz/stable/2020-10-01/examples/MainAccount_listUserRoles.json
      func ExampleMonitorsClient_NewListUserRolesPager() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armlogz.NewMonitorsClient("00000000-0000-0000-0000-000000000000", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	pager := client.NewListUserRolesPager("myResourceGroup",
      		"myMonitor",
      		&armlogz.MonitorsClientListUserRolesOptions{Body: nil})
      	for pager.More() {
      		nextResult, err := pager.NextPage(ctx)
      		if err != nil {
      			log.Fatalf("failed to advance page: %v", err)
      		}
      		for _, v := range nextResult.Value {
      			// TODO: use page item
      			_ = v
      		}
      	}
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Flogz%2Farmlogz%2Fv1.0.0/sdk/resourcemanager/logz/armlogz/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "role": "Admin"
          }
        ],
        "nextLink": null
      }
security: []
metadata:
  description: >
    List the user's roles configured on Logz.io side for the account corresponding to the monitor resource.
errorCodes: []
