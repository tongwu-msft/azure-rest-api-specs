### YamlMime:RESTOperation
uid: management.azure.com.cdn.customdomains.enablecustomhttps
name: Enable Custom Https
service: CDN
groupName: Custom Domains
apiVersion: 2021-06-01
summary: Enable https delivery of the custom domain.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/enableCustomHttps?api-version=2021-06-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Azure Subscription ID.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the Resource group within the Azure subscription.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: profileName
  in: path
  isRequired: true
  description: Name of the CDN profile which is unique within the resource group.
  types:
  - uid: string
- name: endpointName
  in: path
  isRequired: true
  description: Name of the endpoint under the profile which is unique globally.
  types:
  - uid: string
- name: customDomainName
  in: path
  isRequired: true
  description: Name of the custom domain within an endpoint.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request. Current version is 2021-06-01.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK. The request has succeeded.
  types:
  - uid: CustomDomain
- name: 202 Accepted
  description: Accepted and the operation will complete asynchronously.
  types:
  - uid: CustomDomain
- name: Other Status Codes
  description: CDN error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- name: CdnManagedHttpsParameters
  description: Defines the certificate source parameters using CDN managed certificate for enabling SSL.
  parameters:
  - name: certificateSourceParameters
    in: body
    isRequired: true
    description: Defines the certificate source parameters using CDN managed certificate for enabling SSL.
    types:
    - uid: CdnCertificateSourceParameters
  - name: certificateSource
    in: body
    isRequired: true
    description: Defines the source of the SSL certificate.
    types:
    - uid: Cdn
    typesTitle: string
  - name: protocolType
    in: body
    isRequired: true
    description: Defines the TLS extension protocol that is used for secure delivery.
    types:
    - uid: ProtocolType
  - name: minimumTlsVersion
    in: body
    description: TLS protocol version that will be used for Https
    types:
    - uid: MinimumTlsVersion
- name: UserManagedHttpsParameters
  description: Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
  parameters:
  - name: certificateSourceParameters
    in: body
    isRequired: true
    description: Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
    types:
    - uid: KeyVaultCertificateSourceParameters
  - name: certificateSource
    in: body
    isRequired: true
    description: Defines the source of the SSL certificate.
    types:
    - uid: AzureKeyVault
    typesTitle: string
  - name: protocolType
    in: body
    isRequired: true
    description: Defines the TLS extension protocol that is used for secure delivery.
    types:
    - uid: ProtocolType
  - name: minimumTlsVersion
    in: body
    description: TLS protocol version that will be used for Https
    types:
    - uid: MinimumTlsVersion
requestHeader: []
definitions:
- name: CdnManagedHttpsParameters
  description: Defines the certificate source parameters using CDN managed certificate for enabling SSL.
  kind: object
  properties:
  - name: certificateSourceParameters
    description: Defines the certificate source parameters using CDN managed certificate for enabling SSL.
    types:
    - uid: CdnCertificateSourceParameters
  - name: certificateSource
    description: Defines the source of the SSL certificate.
    types:
    - uid: Cdn
    typesTitle: string
  - name: protocolType
    description: Defines the TLS extension protocol that is used for secure delivery.
    types:
    - uid: ProtocolType
  - name: minimumTlsVersion
    description: TLS protocol version that will be used for Https
    types:
    - uid: MinimumTlsVersion
- name: UserManagedHttpsParameters
  description: Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
  kind: object
  properties:
  - name: certificateSourceParameters
    description: Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
    types:
    - uid: KeyVaultCertificateSourceParameters
  - name: certificateSource
    description: Defines the source of the SSL certificate.
    types:
    - uid: AzureKeyVault
    typesTitle: string
  - name: protocolType
    description: Defines the TLS extension protocol that is used for secure delivery.
    types:
    - uid: ProtocolType
  - name: minimumTlsVersion
    description: TLS protocol version that will be used for Https
    types:
    - uid: MinimumTlsVersion
- name: CustomDomain
  description: Friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes, e.g. www.contoso.com.
  kind: object
  properties:
  - name: properties.hostName
    description: The host name of the custom domain. Must be a domain name.
    types:
    - uid: string
  - name: properties.resourceState
    isReadyOnly: true
    description: Resource status of the custom domain.
    types:
    - uid: CustomDomainResourceState
  - name: properties.customHttpsProvisioningState
    isReadyOnly: true
    description: Provisioning status of the custom domain.
    types:
    - uid: CustomHttpsProvisioningState
  - name: properties.customHttpsProvisioningSubstate
    isReadyOnly: true
    description: Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
    types:
    - uid: CustomHttpsProvisioningSubstate
  - name: properties.customHttpsParameters
    description: Certificate parameters for securing custom HTTPS
    types:
    - uid: CdnManagedHttpsParameters
    - uid: UserManagedHttpsParameters
    typesTitle: CustomDomainHttpsParameters
  - name: properties.validationData
    description: Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: Provisioning status of Custom Https of the custom domain.
    types:
    - uid: CustomHttpsProvisioningState
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: systemData
    isReadyOnly: true
    description: Read only system data
    types:
    - uid: SystemData
- name: ErrorResponse
  description: Error response
  kind: object
  properties:
  - name: error
    description: The error object.
    types:
    - uid: ErrorDetail
- name: CdnCertificateSourceParameters
  description: Defines the parameters for using CDN managed certificate for securing custom domain.
  kind: object
  properties:
  - name: typeName
    description: ''
    types:
    - uid: CdnCertificateSourceParameters
    typesTitle: enum
  - name: certificateType
    description: Type of certificate used
    types:
    - uid: CertificateType
- name: ProtocolType
  description: Defines the TLS extension protocol that is used for secure delivery.
  kind: enum
  properties:
  - name: ServerNameIndication
    types:
    - uid: string
  - name: IPBased
    types:
    - uid: string
- name: MinimumTlsVersion
  description: TLS protocol version that will be used for Https
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: TLS10
    types:
    - uid: string
  - name: TLS12
    types:
    - uid: string
- name: KeyVaultCertificateSourceParameters
  description: Describes the parameters for using a user's KeyVault certificate for securing custom domain.
  kind: object
  properties:
  - name: typeName
    description: ''
    types:
    - uid: KeyVaultCertificateSourceParameters
    typesTitle: enum
  - name: subscriptionId
    description: Subscription Id of the user's Key Vault containing the SSL certificate
    types:
    - uid: string
  - name: resourceGroupName
    description: Resource group of the user's Key Vault containing the SSL certificate
    types:
    - uid: string
  - name: vaultName
    description: The name of the user's Key Vault containing the SSL certificate
    types:
    - uid: string
  - name: secretName
    description: The name of Key Vault Secret (representing the full certificate PFX) in Key Vault.
    types:
    - uid: string
  - name: secretVersion
    description: The version(GUID) of Key Vault Secret in Key Vault.
    types:
    - uid: string
  - name: updateRule
    description: Describes the action that shall be taken when the certificate is updated in Key Vault.
    types:
    - uid: UpdateRule
  - name: deleteRule
    description: Describes the action that shall be taken when the certificate is removed from Key Vault.
    types:
    - uid: DeleteRule
- name: CustomDomainResourceState
  description: Resource status of the custom domain.
  kind: enum
  properties:
  - name: Creating
    types:
    - uid: string
  - name: Active
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
- name: CustomHttpsProvisioningState
  description: Provisioning status of the custom domain.
  kind: enum
  properties:
  - name: Enabling
    types:
    - uid: string
  - name: Enabled
    types:
    - uid: string
  - name: Disabling
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
- name: CustomHttpsProvisioningSubstate
  description: Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
  kind: enum
  properties:
  - name: SubmittingDomainControlValidationRequest
    types:
    - uid: string
  - name: PendingDomainControlValidationREquestApproval
    types:
    - uid: string
  - name: DomainControlValidationRequestApproved
    types:
    - uid: string
  - name: DomainControlValidationRequestRejected
    types:
    - uid: string
  - name: DomainControlValidationRequestTimedOut
    types:
    - uid: string
  - name: IssuingCertificate
    types:
    - uid: string
  - name: DeployingCertificate
    types:
    - uid: string
  - name: CertificateDeployed
    types:
    - uid: string
  - name: DeletingCertificate
    types:
    - uid: string
  - name: CertificateDeleted
    types:
    - uid: string
- name: SystemData
  description: Read only system data
  kind: object
  properties:
  - name: createdBy
    description: An identifier for the identity that created the resource
    types:
    - uid: string
  - name: createdByType
    description: The type of identity that created the resource
    types:
    - uid: IdentityType
  - name: createdAt
    description: The timestamp of resource creation (UTC)
    types:
    - uid: string
  - name: lastModifiedBy
    description: An identifier for the identity that last modified the resource
    types:
    - uid: string
  - name: lastModifiedByType
    description: The type of identity that last modified the resource
    types:
    - uid: IdentityType
  - name: lastModifiedAt
    description: The timestamp of resource last modification (UTC)
    types:
    - uid: string
- name: ErrorDetail
  description: The error detail.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The error target.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: The error details.
    types:
    - uid: ErrorDetail
      isArray: true
  - name: additionalInfo
    isReadyOnly: true
    description: The error additional info.
    types:
    - uid: ErrorAdditionalInfo
      isArray: true
- name: CertificateType
  description: Type of certificate used
  kind: enum
  properties:
  - name: Shared
    types:
    - uid: string
  - name: Dedicated
    types:
    - uid: string
- name: UpdateRule
  description: Describes the action that shall be taken when the certificate is updated in Key Vault.
  kind: enum
  properties:
  - name: NoAction
    types:
    - uid: string
- name: DeleteRule
  description: Describes the action that shall be taken when the certificate is removed from Key Vault.
  kind: enum
  properties:
  - name: NoAction
    types:
    - uid: string
- name: IdentityType
  description: The type of identity that creates/modifies resources
  kind: enum
  properties:
  - name: user
    types:
    - uid: string
  - name: application
    types:
    - uid: string
  - name: managedIdentity
    types:
    - uid: string
  - name: key
    types:
    - uid: string
- name: ErrorAdditionalInfo
  description: The resource management error additional info.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The additional info type.
    types:
    - uid: string
  - name: info
    isReadyOnly: true
    description: The additional info.
    types:
    - uid: object
examples:
- name: CustomDomains_EnableCustomHttpsUsingYourOwnCertificate
  request:
    uri: POST https://management.azure.com/subscriptions/subid/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customDomains/www-someDomain-net/enableCustomHttps?api-version=2021-06-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customDomains/www-someDomain-net/enableCustomHttps?api-version=2021-06-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for CustomDomains EnableCustomHttps. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cdn/resource-manager/Microsoft.Cdn/stable/2021-06-01/examples/CustomDomains_EnableCustomHttpsUsingBYOC.json
           */
          /**
           * Sample code: CustomDomains_EnableCustomHttpsUsingYourOwnCertificate.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void customDomainsEnableCustomHttpsUsingYourOwnCertificate(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .cdnProfiles()
                  .manager()
                  .serviceClient()
                  .getCustomDomains()
                  .enableCustomHttpsWithResponse("RG", "profile1", "endpoint1", "www-someDomain-net", null, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { CdnManagementClient } = require("@azure/arm-cdn");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Enable https delivery of the custom domain.
       *
       * @summary Enable https delivery of the custom domain.
       * x-ms-original-file: specification/cdn/resource-manager/Microsoft.Cdn/stable/2021-06-01/examples/CustomDomains_EnableCustomHttpsUsingBYOC.json
       */
      async function customDomainsEnableCustomHttpsUsingYourOwnCertificate() {
        const subscriptionId = "subid";
        const resourceGroupName = "RG";
        const profileName = "profile1";
        const endpointName = "endpoint1";
        const customDomainName = "www-someDomain-net";
        const credential = new DefaultAzureCredential();
        const client = new CdnManagementClient(credential, subscriptionId);
        const result = await client.customDomains.enableCustomHttps(
          resourceGroupName,
          profileName,
          endpointName,
          customDomainName
        );
        console.log(result);
      }

      customDomainsEnableCustomHttpsUsingYourOwnCertificate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-cdn_7.0.0/sdk/cdn/arm-cdn/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "www-someDomain-net",
        "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customdomains/www-someDomain-net",
        "type": "Microsoft.Cdn/profiles/endpoints/customdomains",
        "properties": {
          "provisioningState": "Succeeded",
          "resourceState": "Active",
          "hostName": "www.someDomain.net",
          "customHttpsProvisioningState": "Enabled",
          "customHttpsProvisioningSubstate": "CertificateDeployed",
          "validationData": "validationdata"
        }
      }
  - statusCode: "202"
    headers:
    - name: azure-asyncoperation
      value: https://management.azure.com/subscriptions/subid/resourcegroups/resourceGroupName/providers/Microsoft.Cdn/operationresults/operationId?api-version=2021-06-01
    body: >-
      {
        "name": "www-someDomain-net",
        "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customdomains/www-someDomain-net",
        "type": "Microsoft.Cdn/profiles/endpoints/customdomains",
        "properties": {
          "provisioningState": "Succeeded",
          "resourceState": "Active",
          "hostName": "www.someDomain.net",
          "customHttpsProvisioningState": "Enabling",
          "customHttpsProvisioningSubstate": "PendingDomainControlValidationREquestApproval",
          "validationData": "validationdata"
        }
      }
- name: CustomDomains_EnableCustomHttpsUsingCDNManagedCertificate
  request:
    uri: POST https://management.azure.com/subscriptions/subid/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customDomains/www-someDomain-net/enableCustomHttps?api-version=2021-06-01
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      POST https://management.azure.com/subscriptions/subid/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customDomains/www-someDomain-net/enableCustomHttps?api-version=2021-06-01
      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;

      /** Samples for CustomDomains EnableCustomHttps. */
      public final class Main {
          /*
           * x-ms-original-file: specification/cdn/resource-manager/Microsoft.Cdn/stable/2021-06-01/examples/CustomDomains_EnableCustomHttpsUsingCDNManagedCertificate.json
           */
          /**
           * Sample code: CustomDomains_EnableCustomHttpsUsingCDNManagedCertificate.
           *
           * @param azure The entry point for accessing resource management APIs in Azure.
           */
          public static void customDomainsEnableCustomHttpsUsingCDNManagedCertificate(
              com.azure.resourcemanager.AzureResourceManager azure) {
              azure
                  .cdnProfiles()
                  .manager()
                  .serviceClient()
                  .getCustomDomains()
                  .enableCustomHttpsWithResponse("RG", "profile1", "endpoint1", "www-someDomain-net", null, Context.NONE);
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager_2.16.0/sdk/resourcemanager/azure-resourcemanager/README.md) on how to add the SDK to your project and authenticate.
      # [JavsScirpt](#tab/JavsScirpt)
      ``` js
      const { CdnManagementClient } = require("@azure/arm-cdn");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Enable https delivery of the custom domain.
       *
       * @summary Enable https delivery of the custom domain.
       * x-ms-original-file: specification/cdn/resource-manager/Microsoft.Cdn/stable/2021-06-01/examples/CustomDomains_EnableCustomHttpsUsingCDNManagedCertificate.json
       */
      async function customDomainsEnableCustomHttpsUsingCdnManagedCertificate() {
        const subscriptionId = "subid";
        const resourceGroupName = "RG";
        const profileName = "profile1";
        const endpointName = "endpoint1";
        const customDomainName = "www-someDomain-net";
        const credential = new DefaultAzureCredential();
        const client = new CdnManagementClient(credential, subscriptionId);
        const result = await client.customDomains.enableCustomHttps(
          resourceGroupName,
          profileName,
          endpointName,
          customDomainName
        );
        console.log(result);
      }

      customDomainsEnableCustomHttpsUsingCdnManagedCertificate().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-cdn_7.0.0/sdk/cdn/arm-cdn/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "www-someDomain-net",
        "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customdomains/www-someDomain-net",
        "type": "Microsoft.Cdn/profiles/endpoints/customdomains",
        "properties": {
          "provisioningState": "Succeeded",
          "resourceState": "Active",
          "hostName": "www.someDomain.net",
          "customHttpsProvisioningState": "Enabled",
          "customHttpsProvisioningSubstate": "CertificateDeployed",
          "validationData": "validationdata"
        }
      }
  - statusCode: "202"
    headers:
    - name: azure-asyncoperation
      value: https://management.azure.com/subscriptions/subid/resourcegroups/resourceGroupName/providers/Microsoft.Cdn/operationresults/operationId?api-version=2021-06-01
    body: >-
      {
        "name": "www-someDomain-net",
        "id": "/subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customdomains/www-someDomain-net",
        "type": "Microsoft.Cdn/profiles/endpoints/customdomains",
        "properties": {
          "provisioningState": "Succeeded",
          "resourceState": "Active",
          "hostName": "www.someDomain.net",
          "customHttpsProvisioningState": "Enabling",
          "customHttpsProvisioningSubstate": "PendingDomainControlValidationREquestApproval",
          "validationData": "validationdata"
        }
      }
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Learn more about CDN service - Enable https delivery of the custom domain.
errorCodes: []
