### YamlMime:RESTOperation
uid: management.azure.com.streamanalytics.2020-03-01.clusters.update
name: Update
service: Stream Analytics
groupName: Clusters
apiVersion: 2020-03-01
summary: Updates an existing cluster. This can be used to partially update (ie. update one or two properties) a cluster without affecting the rest of the cluster definition.
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}?api-version=2020-03-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The ID of the target subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group. The name is case insensitive.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
- name: clusterName
  in: path
  isRequired: true
  description: The name of the cluster.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for this operation.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The cluster was successfully updated.
  types:
  - uid: Cluster
- name: 202 Accepted
  description: The update request was successfully initiated.
- name: Other Status Codes
  description: Error.
  types:
  - uid: Error
requestBody:
- name: default
  parameters:
  - name: sku
    in: body
    description: The SKU of the cluster. This determines the size/capacity of the cluster. Required on PUT (CreateOrUpdate) requests.
    types:
    - uid: ClusterSku
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    in: body
    description: The geo-location where the resource lives
    types:
    - uid: string
requestHeader:
- name: If-Match
  in: header
  description: The ETag of the resource. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
  types:
  - uid: string
definitions:
- name: ClusterSku
  description: The SKU of the cluster. This determines the size/capacity of the cluster. Required on PUT (CreateOrUpdate) requests.
  kind: object
  properties:
  - name: name
    description: Specifies the SKU name of the cluster. Required on PUT (CreateOrUpdate) requests.
    types:
    - uid: ClusterSkuName
  - name: capacity
    description: Denotes the number of streaming units the cluster can support. Valid values for this property are multiples of 36 with a minimum value of 36 and maximum value of 216. Required on PUT (CreateOrUpdate) requests.
    types:
    - uid: integer
- name: Cluster
  description: A Stream Analytics Cluster object
  kind: object
  properties:
  - name: sku
    description: The SKU of the cluster. This determines the size/capacity of the cluster. Required on PUT (CreateOrUpdate) requests.
    types:
    - uid: ClusterSku
  - name: etag
    isReadyOnly: true
    description: The current entity tag for the cluster. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
    types:
    - uid: string
  - name: properties.createdDate
    isReadyOnly: true
    description: The date this cluster was created.
    types:
    - uid: string
  - name: properties.clusterId
    isReadyOnly: true
    description: Unique identifier for the cluster.
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: 'The status of the cluster provisioning. The three terminal states are: Succeeded, Failed and Canceled'
    types:
    - uid: ClusterProvisioningState
  - name: properties.capacityAllocated
    isReadyOnly: true
    description: Represents the number of streaming units currently being used on the cluster.
    types:
    - uid: integer
  - name: properties.capacityAssigned
    isReadyOnly: true
    description: Represents the sum of the SUs of all streaming jobs associated with the cluster. If all of the jobs were running, this would be the capacity allocated.
    types:
    - uid: integer
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: location
    description: The geo-location where the resource lives
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
    types:
    - uid: string
- name: Error
  description: Common error representation.
  kind: object
  properties:
  - name: error
    description: Error definition properties.
    types:
    - uid: Error
- name: ClusterSkuName
  description: Specifies the SKU name of the cluster. Required on PUT (CreateOrUpdate) requests.
  kind: enum
  properties:
  - name: Default
    description: The default SKU.
    types:
    - uid: string
- name: ClusterProvisioningState
  description: 'The status of the cluster provisioning. The three terminal states are: Succeeded, Failed and Canceled'
  kind: enum
  properties:
  - name: Succeeded
    description: The cluster provisioning succeeded.
    types:
    - uid: string
  - name: Failed
    description: The cluster provisioning failed.
    types:
    - uid: string
  - name: Canceled
    description: The cluster provisioning was canceled.
    types:
    - uid: string
  - name: InProgress
    description: The cluster provisioning was inprogress.
    types:
    - uid: string
examples:
- name: Update a cluster
  request:
    uri: PATCH https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/sjrg/providers/Microsoft.StreamAnalytics/clusters/testcluster?api-version=2020-03-01
    body: >-
      {
        "location": "Central US",
        "sku": {
          "capacity": 96
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PATCH https://management.azure.com/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/sjrg/providers/Microsoft.StreamAnalytics/clusters/testcluster?api-version=2020-03-01

      {
        "location": "Central US",
        "sku": {
          "capacity": 96
        }
      }

      ```

      # [Java](#tab/Java)
      ``` java
      import com.azure.core.util.Context;
      import com.azure.resourcemanager.streamanalytics.models.Cluster;
      import com.azure.resourcemanager.streamanalytics.models.ClusterSku;

      /** Samples for Clusters Update. */
      public final class Main {
          /*
           * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Cluster_Update.json
           */
          /**
           * Sample code: Update a cluster.
           *
           * @param manager Entry point to StreamAnalyticsManager.
           */
          public static void updateACluster(com.azure.resourcemanager.streamanalytics.StreamAnalyticsManager manager) {
              Cluster resource =
                  manager.clusters().getByResourceGroupWithResponse("sjrg", "testcluster", Context.NONE).getValue();
              resource.update().withSku(new ClusterSku().withCapacity(96)).apply();
          }
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-java/blob/azure-resourcemanager-streamanalytics_1.0.0-beta.2/sdk/streamanalytics/azure-resourcemanager-streamanalytics/README.md) on how to add the SDK to your project and authenticate.
      # [Go](#tab/Go)
      ``` go
      package armstreamanalytics_test

      import (
      	"context"
      	"log"

      	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
      	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"
      	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/streamanalytics/armstreamanalytics"
      )

      // Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Cluster_Update.json
      func ExampleClustersClient_BeginUpdate() {
      	cred, err := azidentity.NewDefaultAzureCredential(nil)
      	if err != nil {
      		log.Fatalf("failed to obtain a credential: %v", err)
      	}
      	ctx := context.Background()
      	client, err := armstreamanalytics.NewClustersClient("34adfa4f-cedf-4dc0-ba29-b6d1a69ab345", cred, nil)
      	if err != nil {
      		log.Fatalf("failed to create client: %v", err)
      	}
      	poller, err := client.BeginUpdate(ctx,
      		"sjrg",
      		"testcluster",
      		armstreamanalytics.Cluster{
      			Location: to.Ptr("Central US"),
      			SKU: &armstreamanalytics.ClusterSKU{
      				Capacity: to.Ptr[int32](96),
      			},
      		},
      		&armstreamanalytics.ClustersClientBeginUpdateOptions{IfMatch: nil})
      	if err != nil {
      		log.Fatalf("failed to finish the request: %v", err)
      	}
      	res, err := poller.PollUntilDone(ctx, nil)
      	if err != nil {
      		log.Fatalf("failed to pull the result: %v", err)
      	}
      	// TODO: use response item
      	_ = res
      }

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-go/blob/sdk%2Fresourcemanager%2Fstreamanalytics%2Farmstreamanalytics%2Fv1.0.0/sdk/resourcemanager/streamanalytics/armstreamanalytics/README.md) on how to add the SDK to your project and authenticate.
      # [JavaScript](#tab/JavaScript)
      ``` js
      const { StreamAnalyticsManagementClient } = require("@azure/arm-streamanalytics");
      const { DefaultAzureCredential } = require("@azure/identity");

      /**
       * This sample demonstrates how to Updates an existing cluster. This can be used to partially update (ie. update one or two properties) a cluster without affecting the rest of the cluster definition.
       *
       * @summary Updates an existing cluster. This can be used to partially update (ie. update one or two properties) a cluster without affecting the rest of the cluster definition.
       * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Cluster_Update.json
       */
      async function updateACluster() {
        const subscriptionId = "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
        const resourceGroupName = "sjrg";
        const clusterName = "testcluster";
        const cluster = { location: "Central US", sku: { capacity: 96 } };
        const credential = new DefaultAzureCredential();
        const client = new StreamAnalyticsManagementClient(credential, subscriptionId);
        const result = await client.clusters.beginUpdateAndWait(resourceGroupName, clusterName, cluster);
        console.log(result);
      }

      updateACluster().catch(console.error);

      ```
      Read this [SDK documentation](https://github.com/Azure/azure-sdk-for-js/blob/%40azure%2Farm-streamanalytics_4.0.1/sdk/streamanalytics/arm-streamanalytics/README.md) on how to add the SDK to your project and authenticate.
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/sjrg/providers/Microsoft.StreamAnalytics/clusters/AnExampleStreamingCluster",
        "name": "An Example Cluster",
        "type": "Microsoft.StreamAnalytics/clusters",
        "location": "Central US",
        "tags": {
          "key": "value"
        },
        "sku": {
          "name": "Default",
          "capacity": 96
        },
        "properties": {
          "createdDate": "2020-01-25T01:00:00Z",
          "clusterId": "B01C67EF-4739-4DDD-9FB2-427EB43DE839",
          "provisioningState": "Succeeded",
          "capacityAllocated": 36,
          "capacityAssigned": 48
        },
        "etag": "F86B9B70-D5B1-451D-AFC8-0B42D4729B8C"
      }
  - statusCode: "202"
security:
- name: azure_auth
  type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account
metadata:
  description: Updates an existing cluster. This can be used to partially update (ie. update one or two properties) a cluster without affecting the rest of the cluster definit
errorCodes: []
